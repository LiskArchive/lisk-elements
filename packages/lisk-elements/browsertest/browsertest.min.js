(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.lisk=f()}})(function(){var define,module,exports;return function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e}()({1:[function(require,module,exports){module.exports={nodes:{mainnet:["node01.lisk.io","node02.lisk.io","node03.lisk.io","node04.lisk.io","node05.lisk.io","node06.lisk.io","node07.lisk.io","node08.lisk.io"],testnet:["testnet.lisk.io"]},options:{testnet:false,ssl:true,randomNode:true,node:null,port:null,nethash:null,bannedNodes:[]}}},{}],2:[function(require,module,exports){module.exports={name:"lisk-js",version:"0.4.5",description:"JavaScript library for sending Lisk transactions from the client or server",author:"Lisk Foundation <admin@lisk.io>, lightcurve GmbH <admin@lightcurve.io>",license:"GPL-3.0",keywords:["lisk","blockchain","nodejs","javascript","library"],homepage:"https://github.com/LiskHQ/lisk-js#readme",repository:{type:"git",url:"git+https://github.com/LiskHQ/lisk-js.git"},bugs:{url:"https://github.com/LiskHQ/lisk-js/issues"},engines:{node:">=6.3 <=9.5",npm:">=3 <=5"},main:"dist-node/index.js",scripts:{prestart:"./bin/prestart.sh",start:"./bin/start.sh",format:'prettier --write "browsertest/{setup,runTests}.js" "{cypress/integration,src,test}/**/*.js"',lint:"eslint .","lint:fix":"npm run lint -- --fix",babel:"babel src -d dist-node","babel:browsertest":"babel src -d ./browsertest/src && BABEL_ENV=browsertest babel test --ignore test/transactions/dapp.js -d ./browsertest/test",browserify:"browserify ./dist-node/index.js -o ./dist-browser/lisk-js.js -s lisk -t rewireify","browserify:browsertest":"browserify ./browsertest/test/*.js ./browsertest/test/**/*.js -o ./browsertest/browsertest.js -s lisk -t rewireify",uglify:"uglifyjs -nm -o ./dist-browser/lisk-js.min.js ./dist-browser/lisk-js.js","uglify:browsertest":"uglifyjs -o ./browsertest/browsertest.min.js ./browsertest/browsertest.js","serve:browsertest":"http-server browsertest",test:"NODE_ENV=test nyc mocha test","test:watch":"npm test -- --watch","test:watch:min":"npm run test:watch -- --reporter=min","test:node":"npm run build:check && BABEL_ENV=buildcheck mocha test --recursive","test:watch":"npm test -- --watch","test:watch:min":"npm run test:watch -- --reporter=min","test:node":"npm run build:check && BABEL_ENV=buildcheck mocha test --recursive","test:browser":'cypress run --env ROOT_DIR="${PWD##*/}"',cover:"if [ -z $JENKINS_HOME ]; then npm run cover:local; else npm run cover:ci; fi","cover:base":"NODE_ENV=test nyc report","cover:local":"npm run cover:base -- --reporter=html --reporter=text","cover:ci":"npm run cover:base -- --reporter=text-lcov | coveralls -v","prebuild:browsertest":"cp package.json browsertest/","build:browsertest":"npm run babel:browsertest && npm run browserify:browsertest && npm run uglify:browsertest","postbuild:browsertest":"rm -r browsertest/src browsertest/test","prebuild:node":"rm -r dist-node/* || mkdir dist-node | echo","build:node":"npm run babel","prebuild:browser":"rm ./dist-browser/lisk-js.js ./dist-browser/lisk-js.min.js | echo","build:browser":"npm run babel && npm run browserify && npm run uglify",prebuild:"npm run prebuild:node && npm run prebuild:browser",build:"npm run babel && npm run browserify && npm run uglify","build:check":"node -e \"require('./dist-node')\"",precommit:"lint-staged && npm run lint",prepush:"npm run lint && npm test",prepublishOnly:"rm -r ./node_modules && npm install && npm run prepush && npm run build","prepublish:browser":"npm run prepublishOnly","publish:browser":"./bin/publish_browser.sh",postpublish:"npm run publish:browser"},dependencies:{"babel-runtime":"=6.26.0",bip39:"=2.4.0","browserify-bignum":"=1.3.0-2",ed2curve:"=0.2.1","js-nacl":"LiskHQ/js-nacl#6dc1417",popsicle:"=9.1.0"},devDependencies:{"babel-cli":"=6.24.1","babel-plugin-istanbul":"=4.1.4","babel-plugin-module-resolver":"=3.0.0","babel-plugin-rewire":"=1.1.0","babel-plugin-transform-runtime":"=6.23.0","babel-preset-env":"=1.6.0",browserify:"=16.0.0",chai:"=4.1.2","chai-as-promised":"=7.1.1",coveralls:"=3.0.0",cypress:"=2.0.2",eslint:"=4.16.0","eslint-config-airbnb-base":"=11.3.1","eslint-config-lisk-base":"=0.1.0","eslint-plugin-import":"=2.7.0","eslint-plugin-mocha":"=4.11.0","http-server":"=0.10.0",husky:"=0.14.3","lint-staged":"=4.2.3",mocha:"=4.0.1",nyc:"=11.3.0",prettier:"=1.8.2",rewireify:"=0.2.5",sinon:"=4.1.2","sinon-chai":"=2.14.0","uglify-es":"=3.3.9"}}},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _defineProperty2=require("babel-runtime/helpers/defineProperty");var _defineProperty3=_interopRequireDefault(_defineProperty2);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _promise=require("babel-runtime/core-js/promise");var _promise2=_interopRequireDefault(_promise);var _constants=require("../constants");var _utils=require("./utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var apiMethod=function apiMethod(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _params$method=params.method,method=_params$method===undefined?_constants.GET:_params$method,_params$path=params.path,path=_params$path===undefined?"":_params$path,_params$urlParams=params.urlParams,urlParams=_params$urlParams===undefined?[]:_params$urlParams,_params$validator=params.validator,validator=_params$validator===undefined?null:_params$validator,_params$defaultData=params.defaultData,defaultData=_params$defaultData===undefined?{}:_params$defaultData,_params$retry=params.retry,retry=_params$retry===undefined?false:_params$retry;return function apiHandler(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key]}if(urlParams.length>0&&args.length<urlParams.length){return _promise2.default.reject(new Error("This endpoint must be supplied with the following parameters: "+urlParams.toString()))}var data=(0,_assign2.default)({},defaultData,args.length>urlParams.length&&(0,_typeof3.default)(args[urlParams.length])==="object"?args[urlParams.length]:{});if(validator){try{validator(data)}catch(err){return _promise2.default.reject(err)}}var urlData=urlParams.reduce(function(accumulator,param,i){return(0,_assign2.default)({},accumulator,(0,_defineProperty3.default)({},param,args[i]))},{});var requestData={method:method,url:(0,_utils.solveURLParams)(""+this.resourcePath+path,urlData),headers:this.headers};if((0,_keys2.default)(data).length>0){if(method===_constants.GET){requestData.url+="?"+(0,_utils.toQueryString)(data)}else{requestData.body=data}}return this.request(requestData,retry)}};exports.default=apiMethod;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":15,"babel-runtime/core-js/object/assign":89,"babel-runtime/core-js/object/keys":94,"babel-runtime/core-js/promise":96,"babel-runtime/helpers/defineProperty":101,"babel-runtime/helpers/typeof":106}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _promise=require("babel-runtime/core-js/promise");var _promise2=_interopRequireDefault(_promise);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _popsicle=require("popsicle");var popsicle=_interopRequireWildcard(_popsicle);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var APIResource=function(){function APIResource(liskAPI){(0,_classCallCheck3.default)(this,APIResource);if(!liskAPI){throw Error("Require LiskAPI instance to be initialized.")}this.liskAPI=liskAPI;this.path=""}(0,_createClass3.default)(APIResource,[{key:"request",value:function request(req,retry){var _this=this;var request=popsicle.request(req).use(popsicle.plugins.parse(["json","urlencoded"])).then(function(res){return res.body});if(retry){request.catch(function(err){return _this.handleRetry(err,req)})}return request}},{key:"handleRetry",value:function handleRetry(error,req){var _this2=this;if(this.liskAPI.hasAvailableNodes()){return new _promise2.default(function(resolve){return setTimeout(resolve,1e3)}).then(function(){if(_this2.liskAPI.randomizeNodes){_this2.liskAPI.banActiveNodeAndSelect()}return _this2.request(req,true)})}return _promise2.default.resolve({success:false,error:error,message:"Could not create an HTTP request to any known nodes."})}},{key:"headers",get:function get(){return this.liskAPI.headers}},{key:"resourcePath",get:function get(){return this.liskAPI.nodeFullURL+"/api"+this.path}}]);return APIResource}();exports.default=APIResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"babel-runtime/core-js/promise":96,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/createClass":100,popsicle:396}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _toConsumableArray2=require("babel-runtime/helpers/toConsumableArray");var _toConsumableArray3=_interopRequireDefault(_toConsumableArray2);var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require("babel-runtime/helpers/createClass");var _createClass3=_interopRequireDefault(_createClass2);var _constants=require("../constants");var _config=require("../../config.json");var _config2=_interopRequireDefault(_config);var _resources=require("./resources");var resources=_interopRequireWildcard(_resources);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var commonHeaders={"Content-Type":"application/json",os:"lisk-js-api",version:"1.0.0",minVersion:">=0.5.0"};var LiskAPI=function(){function LiskAPI(providedOptions){(0,_classCallCheck3.default)(this,LiskAPI);var options=(0,_assign2.default)({},_config2.default.options,providedOptions);this.ssl=options.ssl!==false;this.testnet=options.testnet===true;var nethash=options.headers&&options.headers.nethash?options.headers.nethash:null;this.defaultNodes=[].concat((0,_toConsumableArray3.default)(options.nodes||_config2.default.nodes.mainnet));this.defaultTestnetNodes=[].concat((0,_toConsumableArray3.default)(options.nodes||_config2.default.nodes.testnet));this.bannedNodes=[].concat((0,_toConsumableArray3.default)(options.bannedNodes||[]));this.port=options.port===""||options.port?options.port:this.getDefaultPort();this.randomizeNodes=options.randomizeNodes!==false;this.providedNode=options.node||null;this.node=options.node||this.selectNewNode();this.headers=this.getDefaultHeaders(nethash);this.accounts=new resources.AccountsResource(this);this.blocks=new resources.BlocksResource(this);this.dapps=new resources.DappsResource(this);this.delegates=new resources.DelegatesResource(this);this.signatures=new resources.SignaturesResource(this);this.transactions=new resources.TransactionsResource(this);this.voters=new resources.VotersResource(this);this.votes=new resources.VotesResource(this)}(0,_createClass3.default)(LiskAPI,[{key:"getDefaultHeaders",value:function getDefaultHeaders(providedNethash){var headers=(0,_assign2.default)({},commonHeaders,{port:this.port,nethash:this.testnet?_constants.TESTNET_NETHASH:_constants.MAINNET_NETHASH});if(providedNethash){headers.nethash=providedNethash;headers.version="0.0.0a"}return headers}},{key:"getDefaultPort",value:function getDefaultPort(){if(this.testnet){return _constants.TEST_PORT}if(this.ssl){return _constants.SSL_PORT}return _constants.LIVE_PORT}},{key:"getRandomNode",value:function getRandomNode(){var _this=this;var nodes=this.currentNodes.filter(function(node){return!_this.isBanned(node)});if(nodes.length===0){throw new Error("Cannot get random node: all relevant nodes have been banned.")}var randomIndex=Math.floor(Math.random()*nodes.length);return nodes[randomIndex]}},{key:"setSSL",value:function setSSL(newSSLValue){if(this.ssl!==newSSLValue){var nonSSLPort=this.testnet?_constants.TEST_PORT:_constants.LIVE_PORT;this.ssl=newSSLValue;this.port=newSSLValue?_constants.SSL_PORT:nonSSLPort;this.bannedNodes=[];this.selectNewNode()}}},{key:"setTestnet",value:function setTestnet(newTestnetValue){if(this.testnet!==newTestnetValue){var nonTestnetPort=this.ssl?_constants.SSL_PORT:_constants.LIVE_PORT;this.testnet=newTestnetValue;this.port=newTestnetValue?_constants.TEST_PORT:nonTestnetPort;this.bannedNodes=[];this.selectNewNode()}}},{key:"banActiveNode",value:function banActiveNode(){if(!this.isBanned(this.node)){this.bannedNodes.push(this.node);return true}return false}},{key:"banActiveNodeAndSelect",value:function banActiveNodeAndSelect(){var banned=this.banActiveNode();if(banned){this.node=this.selectNewNode()}return banned}},{key:"hasAvailableNodes",value:function hasAvailableNodes(){var _this2=this;return this.randomizeNodes?this.currentNodes.some(function(node){return!_this2.isBanned(node)}):false}},{key:"isBanned",value:function isBanned(node){return this.bannedNodes.includes(node)}},{key:"selectNewNode",value:function selectNewNode(){if(this.randomizeNodes){return this.getRandomNode()}else if(this.providedNode){if(this.isBanned(this.providedNode)){throw new Error("Cannot select node: provided node has been banned and randomizeNodes is not set to true.")}return this.providedNode}throw new Error("Cannot select node: no node provided and randomizeNodes is not set to true.")}},{key:"allNodes",get:function get(){return{current:this.node,default:this.defaultNodes,testnet:this.defaultTestnetNodes}}},{key:"currentNodes",get:function get(){if(this.testnet){return this.defaultTestnetNodes}return this.defaultNodes}},{key:"urlProtocol",get:function get(){return this.ssl?"https":"http"}},{key:"nodeFullURL",get:function get(){var nodeUrl=this.port?this.node+":"+this.port:this.node;return this.urlProtocol+"://"+nodeUrl}}]);return LiskAPI}();exports.default=LiskAPI;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../config.json":1,"../constants":16,"./resources":10,"babel-runtime/core-js/object/assign":89,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/createClass":100,"babel-runtime/helpers/toConsumableArray":105}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var AccountsResource=function(_APIResource){(0,_inherits3.default)(AccountsResource,_APIResource);function AccountsResource(liskAPI){(0,_classCallCheck3.default)(this,AccountsResource);var _this=(0,_possibleConstructorReturn3.default)(this,(AccountsResource.__proto__||(0,_getPrototypeOf2.default)(AccountsResource)).call(this,liskAPI));_this.path="/accounts";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);return _this}return AccountsResource}(_apiResource2.default);exports.default=AccountsResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var BlocksResource=function(_APIResource){(0,_inherits3.default)(BlocksResource,_APIResource);function BlocksResource(liskAPI){(0,_classCallCheck3.default)(this,BlocksResource);var _this=(0,_possibleConstructorReturn3.default)(this,(BlocksResource.__proto__||(0,_getPrototypeOf2.default)(BlocksResource)).call(this,liskAPI));_this.path="/blocks";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);return _this}return BlocksResource}(_apiResource2.default);exports.default=BlocksResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],8:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var DappsResource=function(_APIResource){(0,_inherits3.default)(DappsResource,_APIResource);function DappsResource(liskAPI){(0,_classCallCheck3.default)(this,DappsResource);var _this=(0,_possibleConstructorReturn3.default)(this,(DappsResource.__proto__||(0,_getPrototypeOf2.default)(DappsResource)).call(this,liskAPI));_this.path="/dapps";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);return _this}return DappsResource}(_apiResource2.default);exports.default=DappsResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var DelegatesResource=function(_APIResource){(0,_inherits3.default)(DelegatesResource,_APIResource);function DelegatesResource(liskAPI){(0,_classCallCheck3.default)(this,DelegatesResource);var _this=(0,_possibleConstructorReturn3.default)(this,(DelegatesResource.__proto__||(0,_getPrototypeOf2.default)(DelegatesResource)).call(this,liskAPI));_this.path="/delegates";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);_this.getStandby=(0,_apiMethod2.default)({method:_constants.GET,defaultData:{orderBy:"rate:asc",offset:101}}).bind(_this);return _this}return DelegatesResource}(_apiResource2.default);exports.default=DelegatesResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _accounts=require("./accounts");Object.defineProperty(exports,"AccountsResource",{enumerable:true,get:function get(){return _interopRequireDefault(_accounts).default}});var _blocks=require("./blocks");Object.defineProperty(exports,"BlocksResource",{enumerable:true,get:function get(){return _interopRequireDefault(_blocks).default}});var _dapps=require("./dapps");Object.defineProperty(exports,"DappsResource",{enumerable:true,get:function get(){return _interopRequireDefault(_dapps).default}});var _delegates=require("./delegates");Object.defineProperty(exports,"DelegatesResource",{enumerable:true,get:function get(){return _interopRequireDefault(_delegates).default}});var _signatures=require("./signatures");Object.defineProperty(exports,"SignaturesResource",{enumerable:true,get:function get(){return _interopRequireDefault(_signatures).default}});var _transactions=require("./transactions");Object.defineProperty(exports,"TransactionsResource",{enumerable:true,get:function get(){return _interopRequireDefault(_transactions).default}});var _voters=require("./voters");Object.defineProperty(exports,"VotersResource",{enumerable:true,get:function get(){return _interopRequireDefault(_voters).default}});var _votes=require("./votes");Object.defineProperty(exports,"VotesResource",{enumerable:true,get:function get(){return _interopRequireDefault(_votes).default}});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./accounts":6,"./blocks":7,"./dapps":8,"./delegates":9,"./signatures":11,"./transactions":12,"./voters":13,"./votes":14}],11:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var SignaturesResource=function(_APIResource){(0,_inherits3.default)(SignaturesResource,_APIResource);function SignaturesResource(liskAPI){(0,_classCallCheck3.default)(this,SignaturesResource);var _this=(0,_possibleConstructorReturn3.default)(this,(SignaturesResource.__proto__||(0,_getPrototypeOf2.default)(SignaturesResource)).call(this,liskAPI));_this.path="/signatures";_this.create=(0,_apiMethod2.default)({method:_constants.POST}).bind(_this);return _this}return SignaturesResource}(_apiResource2.default);exports.default=SignaturesResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],12:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var TransactionsResource=function(_APIResource){(0,_inherits3.default)(TransactionsResource,_APIResource);function TransactionsResource(liskAPI){(0,_classCallCheck3.default)(this,TransactionsResource);var _this=(0,_possibleConstructorReturn3.default)(this,(TransactionsResource.__proto__||(0,_getPrototypeOf2.default)(TransactionsResource)).call(this,liskAPI));_this.path="/transactions";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);_this.create=(0,_apiMethod2.default)({method:_constants.POST}).bind(_this);_this.getUnsignedMultisignature=(0,_apiMethod2.default)({method:_constants.GET,path:"/unsigned"}).bind(_this);return _this}return TransactionsResource}(_apiResource2.default);exports.default=TransactionsResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],13:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var VotersResource=function(_APIResource){(0,_inherits3.default)(VotersResource,_APIResource);function VotersResource(liskAPI){(0,_classCallCheck3.default)(this,VotersResource);var _this=(0,_possibleConstructorReturn3.default)(this,(VotersResource.__proto__||(0,_getPrototypeOf2.default)(VotersResource)).call(this,liskAPI));_this.path="/voters";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);return _this}return VotersResource}(_apiResource2.default);exports.default=VotersResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getPrototypeOf=require("babel-runtime/core-js/object/get-prototype-of");var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _classCallCheck2=require("babel-runtime/helpers/classCallCheck");var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _possibleConstructorReturn2=require("babel-runtime/helpers/possibleConstructorReturn");var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require("babel-runtime/helpers/inherits");var _inherits3=_interopRequireDefault(_inherits2);var _constants=require("../../constants");var _apiMethod=require("../apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);var _apiResource=require("../apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var VotesResource=function(_APIResource){(0,_inherits3.default)(VotesResource,_APIResource);function VotesResource(liskAPI){(0,_classCallCheck3.default)(this,VotesResource);var _this=(0,_possibleConstructorReturn3.default)(this,(VotesResource.__proto__||(0,_getPrototypeOf2.default)(VotesResource)).call(this,liskAPI));_this.path="/votes";_this.get=(0,_apiMethod2.default)({method:_constants.GET}).bind(_this);return _this}return VotesResource}(_apiResource2.default);exports.default=VotesResource;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../apiMethod":3,"../apiResource":4,"babel-runtime/core-js/object/get-prototype-of":93,"babel-runtime/helpers/classCallCheck":99,"babel-runtime/helpers/inherits":102,"babel-runtime/helpers/possibleConstructorReturn":103}],15:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.solveURLParams=exports.toQueryString=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _toConsumableArray2=require("babel-runtime/helpers/toConsumableArray");var _toConsumableArray3=_interopRequireDefault(_toConsumableArray2);var _slicedToArray2=require("babel-runtime/helpers/slicedToArray");var _slicedToArray3=_interopRequireDefault(_slicedToArray2);var _entries=require("babel-runtime/core-js/object/entries");var _entries2=_interopRequireDefault(_entries);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var toQueryString=exports.toQueryString=function toQueryString(obj){var parts=(0,_entries2.default)(obj).reduce(function(accumulator,_ref){var _ref2=(0,_slicedToArray3.default)(_ref,2),key=_ref2[0],value=_ref2[1];return[].concat((0,_toConsumableArray3.default)(accumulator),[encodeURIComponent(key)+"="+encodeURIComponent(value)])},[]);return parts.join("&")};var urlParamRegex=/{[^}]+}/;var solveURLParams=exports.solveURLParams=function solveURLParams(url){var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if((0,_keys2.default)(params).length===0){if(url.match(urlParamRegex)){throw new Error("URL is not completely solved")}return url}var solvedURL=(0,_entries2.default)(params).reduce(function(accumulator,_ref3){var _ref4=(0,_slicedToArray3.default)(_ref3,2),key=_ref4[0],value=_ref4[1];return accumulator.replace("{"+key+"}",value)},url);if(solvedURL.match(urlParamRegex)){throw new Error("URL is not completely solved")}return encodeURI(solvedURL)};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"babel-runtime/core-js/object/entries":92,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/slicedToArray":104,"babel-runtime/helpers/toConsumableArray":105}],16:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var FIXED_POINT=exports.FIXED_POINT=Math.pow(10,8);var TRANSFER_FEE=exports.TRANSFER_FEE=.1*FIXED_POINT;var DATA_FEE=exports.DATA_FEE=.1*FIXED_POINT;var IN_TRANSFER_FEE=exports.IN_TRANSFER_FEE=.1*FIXED_POINT;var OUT_TRANSFER_FEE=exports.OUT_TRANSFER_FEE=.1*FIXED_POINT;var SIGNATURE_FEE=exports.SIGNATURE_FEE=5*FIXED_POINT;var DELEGATE_FEE=exports.DELEGATE_FEE=25*FIXED_POINT;var VOTE_FEE=exports.VOTE_FEE=1*FIXED_POINT;var MULTISIGNATURE_FEE=exports.MULTISIGNATURE_FEE=5*FIXED_POINT;var DAPP_FEE=exports.DAPP_FEE=25*FIXED_POINT;var EPOCH_TIME=exports.EPOCH_TIME=new Date(Date.UTC(2016,4,24,17,0,0,0));var EPOCH_TIME_MILLISECONDS=exports.EPOCH_TIME_MILLISECONDS=EPOCH_TIME.getTime();var EPOCH_TIME_SECONDS=exports.EPOCH_TIME_SECONDS=Math.floor(EPOCH_TIME.getTime()/1e3);var LIVE_PORT=exports.LIVE_PORT="8000";var TEST_PORT=exports.TEST_PORT="7000";var SSL_PORT=exports.SSL_PORT="443";var GET=exports.GET="GET";var POST=exports.POST="POST";var MAX_ADDRESS_NUMBER=exports.MAX_ADDRESS_NUMBER="18446744073709551615";var TESTNET_NETHASH=exports.TESTNET_NETHASH="da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba";var MAINNET_NETHASH=exports.MAINNET_NETHASH="ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511";if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{}],17:[function(require,module,exports){(function(Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.convertPrivateKeyEd2Curve=exports.convertPublicKeyEd2Curve=exports.getAddress=exports.getAddressFromPublicKey=exports.toAddress=exports.getFirstEightBytesReversed=exports.hexToBuffer=exports.bufferToHex=exports.bufferToBigNumberString=exports.bigNumberToBuffer=undefined;var _browserifyBignum=require("browserify-bignum");var _browserifyBignum2=_interopRequireDefault(_browserifyBignum);var _ed2curve=require("ed2curve");var _ed2curve2=_interopRequireDefault(_ed2curve);var _hash=require("./hash");var _hash2=_interopRequireDefault(_hash);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var bigNumberToBuffer=exports.bigNumberToBuffer=function bigNumberToBuffer(bignumber,size){return(0,_browserifyBignum2.default)(bignumber).toBuffer({size:size})};var bufferToBigNumberString=exports.bufferToBigNumberString=function bufferToBigNumberString(bigNumberBuffer){return _browserifyBignum2.default.fromBuffer(bigNumberBuffer).toString()};var bufferToHex=exports.bufferToHex=function bufferToHex(buffer){return naclInstance.to_hex(buffer)};var hexRegex=/^[0-9a-f]+/i;var hexToBuffer=exports.hexToBuffer=function hexToBuffer(hex){if(typeof hex!=="string"){throw new TypeError("Argument must be a string.")}var matchedHex=(hex.match(hexRegex)||[])[0];if(!matchedHex||matchedHex.length!==hex.length){throw new TypeError("Argument must be a valid hex string.")}if(matchedHex.length%2!==0){throw new TypeError("Argument must have a valid length of hex string.")}return Buffer.from(matchedHex,"hex")};var getFirstEightBytesReversed=exports.getFirstEightBytesReversed=function getFirstEightBytesReversed(publicKeyBytes){return Buffer.from(publicKeyBytes).slice(0,8).reverse()};var toAddress=exports.toAddress=function toAddress(buffer){return bufferToBigNumberString(buffer)+"L"};var getAddressFromPublicKey=exports.getAddressFromPublicKey=function getAddressFromPublicKey(publicKey){var publicKeyHash=(0,_hash2.default)(publicKey,"hex");var publicKeyTransform=getFirstEightBytesReversed(publicKeyHash);var address=toAddress(publicKeyTransform);return address};var getAddress=exports.getAddress=getAddressFromPublicKey;var convertPublicKeyEd2Curve=exports.convertPublicKeyEd2Curve=_ed2curve2.default.convertPublicKey;var convertPrivateKeyEd2Curve=exports.convertPrivateKeyEd2Curve=_ed2curve2.default.convertSecretKey;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,require("buffer").Buffer)},{"./hash":19,"browserify-bignum":136,buffer:150,ed2curve:316}],18:[function(require,module,exports){(function(Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.decryptPassphraseWithPassword=exports.encryptPassphraseWithPassword=exports.decryptMessageWithPassphrase=exports.encryptMessageWithPassphrase=undefined;var _crypto=require("crypto");var _crypto2=_interopRequireDefault(_crypto);var _package=require("../../package.json");var _convert=require("./convert");var _keys=require("./keys");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var PBKDF2_ITERATIONS=1e6;var PBKDF2_KEYLEN=32;var PBKDF2_HASH_FUNCTION="sha256";var encryptMessageWithPassphrase=exports.encryptMessageWithPassphrase=function encryptMessageWithPassphrase(message,passphrase,recipientPublicKey){var _getPrivateAndPublicK=(0,_keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),senderPrivateKeyBytes=_getPrivateAndPublicK.privateKey;var convertedPrivateKey=(0,_convert.convertPrivateKeyEd2Curve)(senderPrivateKeyBytes);var recipientPublicKeyBytes=(0,_convert.hexToBuffer)(recipientPublicKey);var convertedPublicKey=(0,_convert.convertPublicKeyEd2Curve)(recipientPublicKeyBytes);var messageInBytes=naclInstance.encode_utf8(message);var nonce=naclInstance.crypto_box_random_nonce();var cipherBytes=naclInstance.crypto_box(messageInBytes,nonce,convertedPublicKey,convertedPrivateKey);var nonceHex=(0,_convert.bufferToHex)(nonce);var encryptedMessage=(0,_convert.bufferToHex)(cipherBytes);return{nonce:nonceHex,encryptedMessage:encryptedMessage}};var decryptMessageWithPassphrase=exports.decryptMessageWithPassphrase=function decryptMessageWithPassphrase(cipherHex,nonce,passphrase,senderPublicKey){var _getPrivateAndPublicK2=(0,_keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),recipientPrivateKeyBytes=_getPrivateAndPublicK2.privateKey;var convertedPrivateKey=(0,_convert.convertPrivateKeyEd2Curve)(recipientPrivateKeyBytes);var senderPublicKeyBytes=(0,_convert.hexToBuffer)(senderPublicKey);var convertedPublicKey=(0,_convert.convertPublicKeyEd2Curve)(senderPublicKeyBytes);var cipherBytes=(0,_convert.hexToBuffer)(cipherHex);var nonceBytes=(0,_convert.hexToBuffer)(nonce);try{var decoded=naclInstance.crypto_box_open(cipherBytes,nonceBytes,convertedPublicKey,convertedPrivateKey);return naclInstance.decode_utf8(decoded)}catch(error){if(error.message.match(/nacl\.crypto_box_open expected 24-byte nonce but got length 1/)){throw new Error("Expected 24-byte nonce but got length 1.")}throw new Error("Something went wrong during decryption. Is this the full encrypted message?")}};var getKeyFromPassword=function getKeyFromPassword(password,salt){return _crypto2.default.pbkdf2Sync(password,salt,PBKDF2_ITERATIONS,PBKDF2_KEYLEN,PBKDF2_HASH_FUNCTION)};var encryptAES256GCMWithPassword=function encryptAES256GCMWithPassword(plainText,password){var iv=_crypto2.default.randomBytes(16);var salt=_crypto2.default.randomBytes(16);var key=getKeyFromPassword(password,salt);var cipher=_crypto2.default.createCipheriv("aes-256-gcm",key,iv);var firstBlock=cipher.update(plainText,"utf8");var encrypted=Buffer.concat([firstBlock,cipher.final()]);var tag=cipher.getAuthTag();return{cipher:encrypted.toString("hex"),iv:iv.toString("hex"),salt:salt.toString("hex"),tag:tag.toString("hex"),version:_package.version}};var getTagBuffer=function getTagBuffer(tag){var tagBuffer=(0,_convert.hexToBuffer)(tag);if(tagBuffer.length!==16){throw new Error("Tag must be 16 bytes.")}return tagBuffer};var decryptAES256GCMWithPassword=function decryptAES256GCMWithPassword(_ref,password){var cipher=_ref.cipher,iv=_ref.iv,salt=_ref.salt,tag=_ref.tag;var tagBuffer=getTagBuffer(tag);var key=getKeyFromPassword(password,(0,_convert.hexToBuffer)(salt));var decipher=_crypto2.default.createDecipheriv("aes-256-gcm",key,(0,_convert.hexToBuffer)(iv));decipher.setAuthTag(tagBuffer);var firstBlock=decipher.update((0,_convert.hexToBuffer)(cipher));var decrypted=Buffer.concat([firstBlock,decipher.final()]);return decrypted.toString()};var encryptPassphraseWithPassword=exports.encryptPassphraseWithPassword=encryptAES256GCMWithPassword;var decryptPassphraseWithPassword=exports.decryptPassphraseWithPassword=decryptAES256GCMWithPassword;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,require("buffer").Buffer)},{"../../package.json":2,"./convert":17,"./keys":21,buffer:150,crypto:303}],19:[function(require,module,exports){(function(Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var hash=function hash(data,format){if(Buffer.isBuffer(data)){return Buffer.from(naclInstance.crypto_hash_sha256(data))}if(typeof data==="string"){if(!["utf8","hex"].includes(format)){throw new Error("Unsupported string format. Currently only `hex` and `utf8` are supported.")}var encoded=format==="utf8"?naclInstance.encode_utf8(data):naclInstance.from_hex(data);return Buffer.from(naclInstance.crypto_hash_sha256(encoded))}throw new Error("Unsupported data format. Currently only Buffers or `hex` and `utf8` strings are supported.")};exports.default=hash;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,require("buffer").Buffer)},{buffer:150}],20:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _convert=require("./convert");var convert=_interopRequireWildcard(_convert);var _encrypt=require("./encrypt");var encrypt=_interopRequireWildcard(_encrypt);var _hash=require("./hash");var _hash2=_interopRequireDefault(_hash);var _keys=require("./keys");var keys=_interopRequireWildcard(_keys);var _sign=require("./sign");var sign=_interopRequireWildcard(_sign);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=(0,_assign2.default)({},convert,encrypt,{hash:_hash2.default},keys,sign);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./convert":17,"./encrypt":18,"./hash":19,"./keys":21,"./sign":22,"babel-runtime/core-js/object/assign":89}],21:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getAddressAndPublicKeyFromPassphrase=exports.getKeys=exports.getPrivateAndPublicKeyFromPassphrase=exports.getPrivateAndPublicKeyBytesFromPassphrase=undefined;var _convert=require("./convert");var _hash=require("./hash");var _hash2=_interopRequireDefault(_hash);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var getPrivateAndPublicKeyBytesFromPassphrase=exports.getPrivateAndPublicKeyBytesFromPassphrase=function getPrivateAndPublicKeyBytesFromPassphrase(passphrase){var hashed=(0,_hash2.default)(passphrase,"utf8");var _naclInstance$crypto_=naclInstance.crypto_sign_seed_keypair(hashed),signSk=_naclInstance$crypto_.signSk,signPk=_naclInstance$crypto_.signPk;return{privateKey:signSk,publicKey:signPk}};var getPrivateAndPublicKeyFromPassphrase=exports.getPrivateAndPublicKeyFromPassphrase=function getPrivateAndPublicKeyFromPassphrase(passphrase){var _getPrivateAndPublicK=getPrivateAndPublicKeyBytesFromPassphrase(passphrase),privateKey=_getPrivateAndPublicK.privateKey,publicKey=_getPrivateAndPublicK.publicKey;return{privateKey:(0,_convert.bufferToHex)(privateKey),publicKey:(0,_convert.bufferToHex)(publicKey)}};var getKeys=exports.getKeys=getPrivateAndPublicKeyFromPassphrase;var getAddressAndPublicKeyFromPassphrase=exports.getAddressAndPublicKeyFromPassphrase=function getAddressAndPublicKeyFromPassphrase(passphrase){var accountKeys=getKeys(passphrase);var accountAddress=(0,_convert.getAddress)(accountKeys.publicKey);return{address:accountAddress,publicKey:accountKeys.publicKey}};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./convert":17,"./hash":19}],22:[function(require,module,exports){(function(Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.verifyData=exports.signData=exports.signAndPrintMessage=exports.printSignedMessage=exports.verifyMessageWithTwoPublicKeys=exports.signMessageWithTwoPassphrases=exports.verifyMessageWithPublicKey=exports.signMessageWithPassphrase=undefined;var _convert=require("./convert");var _keys=require("./keys");var createHeader=function createHeader(text){return"-----"+text+"-----"};var signedMessageHeader=createHeader("BEGIN LISK SIGNED MESSAGE");var messageHeader=createHeader("MESSAGE");var publicKeyHeader=createHeader("PUBLIC KEY");var secondPublicKeyHeader=createHeader("SECOND PUBLIC KEY");var signatureHeader=createHeader("SIGNATURE");var secondSignatureHeader=createHeader("SECOND SIGNATURE");var signatureFooter=createHeader("END LISK SIGNED MESSAGE");var signMessageWithPassphrase=exports.signMessageWithPassphrase=function signMessageWithPassphrase(message,passphrase){var msgBytes=Buffer.from(message,"utf8");var _getPrivateAndPublicK=(0,_keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),privateKey=_getPrivateAndPublicK.privateKey,publicKey=_getPrivateAndPublicK.publicKey;var signature=naclInstance.crypto_sign_detached(msgBytes,privateKey);return{message:message,publicKey:(0,_convert.bufferToHex)(publicKey),signature:(0,_convert.bufferToHex)(signature)}};var verifyMessageWithPublicKey=exports.verifyMessageWithPublicKey=function verifyMessageWithPublicKey(_ref){var message=_ref.message,signature=_ref.signature,publicKey=_ref.publicKey;var msgBytes=Buffer.from(message,"utf8");var signatureBytes=(0,_convert.hexToBuffer)(signature);var publicKeyBytes=(0,_convert.hexToBuffer)(publicKey);if(publicKeyBytes.length!==32){throw new Error("Invalid publicKey, expected 32-byte publicKey")}if(signatureBytes.length!==naclInstance.crypto_sign_BYTES){throw new Error("Invalid signature length, expected 64-byte signature")}return naclInstance.crypto_sign_verify_detached(signatureBytes,msgBytes,publicKeyBytes)};var signMessageWithTwoPassphrases=exports.signMessageWithTwoPassphrases=function signMessageWithTwoPassphrases(message,passphrase,secondPassphrase){var msgBytes=Buffer.from(message,"utf8");var keypairBytes=(0,_keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase);var secondKeypairBytes=(0,_keys.getPrivateAndPublicKeyBytesFromPassphrase)(secondPassphrase);var signature=naclInstance.crypto_sign_detached(msgBytes,keypairBytes.privateKey);var secondSignature=naclInstance.crypto_sign_detached(msgBytes,secondKeypairBytes.privateKey);return{message:message,publicKey:(0,_convert.bufferToHex)(keypairBytes.publicKey),secondPublicKey:(0,_convert.bufferToHex)(secondKeypairBytes.publicKey),signature:(0,_convert.bufferToHex)(signature),secondSignature:(0,_convert.bufferToHex)(secondSignature)}};var verifyMessageWithTwoPublicKeys=exports.verifyMessageWithTwoPublicKeys=function verifyMessageWithTwoPublicKeys(_ref2){var message=_ref2.message,signature=_ref2.signature,secondSignature=_ref2.secondSignature,publicKey=_ref2.publicKey,secondPublicKey=_ref2.secondPublicKey;var messageBytes=Buffer.from(message,"utf8");var signatureBytes=(0,_convert.hexToBuffer)(signature);var secondSignatureBytes=(0,_convert.hexToBuffer)(secondSignature);var publicKeyBytes=(0,_convert.hexToBuffer)(publicKey);var secondPublicKeyBytes=(0,_convert.hexToBuffer)(secondPublicKey);if(signatureBytes.length!==naclInstance.crypto_sign_BYTES){throw new Error("Invalid first signature length, expected 64-byte signature")}if(secondSignatureBytes.length!==naclInstance.crypto_sign_BYTES){throw new Error("Invalid second signature length, expected 64-byte signature")}if(publicKeyBytes.length!==32){throw new Error("Invalid first publicKey, expected 32-byte publicKey")}if(secondPublicKeyBytes.length!==32){throw new Error("Invalid second publicKey, expected 32-byte publicKey")}var verifyFirstSignature=function verifyFirstSignature(){return naclInstance.crypto_sign_verify_detached(signatureBytes,messageBytes,publicKeyBytes)};var verifySecondSignature=function verifySecondSignature(){return naclInstance.crypto_sign_verify_detached(secondSignatureBytes,messageBytes,secondPublicKeyBytes)};return verifyFirstSignature()&&verifySecondSignature()};var printSignedMessage=exports.printSignedMessage=function printSignedMessage(_ref3){var message=_ref3.message,signature=_ref3.signature,publicKey=_ref3.publicKey,secondSignature=_ref3.secondSignature,secondPublicKey=_ref3.secondPublicKey;return[signedMessageHeader,messageHeader,message,publicKeyHeader,publicKey,secondPublicKey?secondPublicKeyHeader:null,secondPublicKey,signatureHeader,signature,secondSignature?secondSignatureHeader:null,secondSignature,signatureFooter].filter(Boolean).join("\n")};var signAndPrintMessage=exports.signAndPrintMessage=function signAndPrintMessage(message,passphrase,secondPassphrase){var signedMessage=secondPassphrase?signMessageWithTwoPassphrases(message,passphrase,secondPassphrase):signMessageWithPassphrase(message,passphrase);return printSignedMessage(signedMessage)};var signData=exports.signData=function signData(data,passphrase){var _getPrivateAndPublicK2=(0,_keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),privateKey=_getPrivateAndPublicK2.privateKey;var signature=naclInstance.crypto_sign_detached(data,privateKey);return(0,_convert.bufferToHex)(signature)};var verifyData=exports.verifyData=function verifyData(data,signature,publicKey){return naclInstance.crypto_sign_verify_detached((0,_convert.hexToBuffer)(signature),data,(0,_convert.hexToBuffer)(publicKey))};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,require("buffer").Buffer)},{"./convert":17,"./keys":21,buffer:150}],23:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _bip=require("bip39");var _bip2=_interopRequireDefault(_bip);var _validation=require("./validation");var validation=_interopRequireWildcard(_validation);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={Mnemonic:_bip2.default,validation:validation};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./validation":24,bip39:108}],24:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getPassphraseValidationErrors=exports.locateWhitespaces=exports.locateUppercaseCharacters=exports.countUppercaseCharacters=exports.countPassphraseWords=exports.countPassphraseWhitespaces=undefined;var _bip=require("bip39");var _bip2=_interopRequireDefault(_bip);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var whitespaceRegExp=/\s/g;var uppercaseRegExp=/[A-Z]/g;var countPassphraseWhitespaces=exports.countPassphraseWhitespaces=function countPassphraseWhitespaces(passphrase){var whitespaceMatches=passphrase.match(whitespaceRegExp);return whitespaceMatches?whitespaceMatches.length:0};var countPassphraseWords=exports.countPassphraseWords=function countPassphraseWords(passphrase){return passphrase.split(" ").filter(Boolean).length};var countUppercaseCharacters=exports.countUppercaseCharacters=function countUppercaseCharacters(passphrase){var uppercaseCharacterMatches=passphrase.match(uppercaseRegExp)||[];return uppercaseCharacterMatches.length};var locateUppercaseCharacters=exports.locateUppercaseCharacters=function locateUppercaseCharacters(passphrase){var positions=[];for(var i=0;i<passphrase.length;i+=1){if(passphrase[i].match(uppercaseRegExp)!==null){positions.push(i)}}return positions};var locateWhitespaces=exports.locateWhitespaces=function locateWhitespaces(passphrase){var positions=[];var passphraseLength=passphrase.length;var lastIndex=passphraseLength-1;if(passphrase[0].match(whitespaceRegExp)!==null){positions.push(0)}for(var i=1;i<lastIndex;i+=1){if(passphrase[i].match(whitespaceRegExp)&&passphrase[i-1].match(whitespaceRegExp)){positions.push(i)}}if(passphrase[lastIndex].match(whitespaceRegExp)!==null){positions.push(lastIndex)}return positions};var getPassphraseValidationErrors=exports.getPassphraseValidationErrors=function getPassphraseValidationErrors(passphrase,wordlist){var expectedWords=12;var expectedWhitespaces=11;var expectedUppercaseCharacterCount=0;var wordsInPassphrase=countPassphraseWords(passphrase);var whiteSpacesInPassphrase=countPassphraseWhitespaces(passphrase);var uppercaseCharacterInPassphrase=countUppercaseCharacters(passphrase);var errors=[];if(wordsInPassphrase!==expectedWords){var passphraseWordError={code:"INVALID_AMOUNT_OF_WORDS",message:"Passphrase contains "+wordsInPassphrase+" words instead of expected "+expectedWords+". Please check the passphrase.",expected:expectedWords,actual:wordsInPassphrase};errors.push(passphraseWordError)}if(whiteSpacesInPassphrase>expectedWhitespaces){var whiteSpaceError={code:"INVALID_AMOUNT_OF_WHITESPACES",message:"Passphrase contains "+whiteSpacesInPassphrase+" whitespaces instead of expected "+expectedWhitespaces+". Please check the passphrase.",expected:expectedWhitespaces,actual:whiteSpacesInPassphrase,location:locateWhitespaces(passphrase)};errors.push(whiteSpaceError)}if(uppercaseCharacterInPassphrase!==expectedUppercaseCharacterCount){var uppercaseCharacterError={code:"INVALID_AMOUNT_OF_UPPERCASE_CHARACTER",message:"Passphrase contains "+uppercaseCharacterInPassphrase+" uppercase character instead of expected "+expectedUppercaseCharacterCount+". Please check the passphrase.",expected:expectedUppercaseCharacterCount,actual:uppercaseCharacterInPassphrase,location:locateUppercaseCharacters(passphrase)};errors.push(uppercaseCharacterError)}if(!_bip2.default.validateMnemonic(passphrase,wordlist||_bip2.default.wordlists.english)){var validationError={code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false};errors.push(validationError)}return errors};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{bip39:108}],25:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _constants=require("../constants");var _utils=require("./utils");var createAsset=function createAsset(data){if(data&&data.length>0){if(data!==data.toString("utf8"))throw new Error("Invalid encoding in transaction data. Data must be utf-8 encoded.");return{data:data}}return{}};var transfer=function transfer(_ref){var amount=_ref.amount,recipientId=_ref.recipientId,recipientPublicKey=_ref.recipientPublicKey,data=_ref.data;var _getAddressAndPublicK=(0,_utils.getAddressAndPublicKeyFromRecipientData)({recipientId:recipientId,recipientPublicKey:recipientPublicKey}),address=_getAddressAndPublicK.address,publicKey=_getAddressAndPublicK.publicKey;var fee=data?_constants.TRANSFER_FEE+_constants.DATA_FEE:_constants.TRANSFER_FEE;var transaction={type:0,amount:amount.toString(),fee:fee.toString(),recipientId:address,recipientPublicKey:publicKey,asset:createAsset(data)};return transaction};exports.default=(0,_utils.wrapTransactionCreator)(transfer);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":39}],26:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _cryptography=require("../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _constants=require("../constants");var _utils=require("./utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var registerSecondPassphrase=function registerSecondPassphrase(_ref){var secondPassphrase=_ref.secondPassphrase;var _cryptography$getKeys=_cryptography2.default.getKeys(secondPassphrase),publicKey=_cryptography$getKeys.publicKey;return{type:1,fee:_constants.SIGNATURE_FEE.toString(),asset:{signature:{publicKey:publicKey}}}};exports.default=(0,_utils.wrapTransactionCreator)(registerSecondPassphrase);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"../cryptography":20,"./utils":39}],27:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _constants=require("../constants");var _utils=require("./utils");var registerDelegate=function registerDelegate(_ref){var username=_ref.username;return{type:2,fee:_constants.DELEGATE_FEE.toString(),asset:{delegate:{username:username}}}};exports.default=(0,_utils.wrapTransactionCreator)(registerDelegate);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":39}],28:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _toConsumableArray2=require("babel-runtime/helpers/toConsumableArray");var _toConsumableArray3=_interopRequireDefault(_toConsumableArray2);var _cryptography=require("../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _constants=require("../constants");var _utils=require("./utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var castVotes=function castVotes(_ref){var passphrase=_ref.passphrase,_ref$votes=_ref.votes,votes=_ref$votes===undefined?[]:_ref$votes,_ref$unvotes=_ref.unvotes,unvotes=_ref$unvotes===undefined?[]:_ref$unvotes;(0,_utils.validatePublicKeys)([].concat((0,_toConsumableArray3.default)(votes),(0,_toConsumableArray3.default)(unvotes)));var recipientId=passphrase?_cryptography2.default.getAddressAndPublicKeyFromPassphrase(passphrase).address:null;var plusPrependedVotes=(0,_utils.prependPlusToPublicKeys)(votes);var minusPrependedUnvotes=(0,_utils.prependMinusToPublicKeys)(unvotes);var allVotes=[].concat((0,_toConsumableArray3.default)(plusPrependedVotes),(0,_toConsumableArray3.default)(minusPrependedUnvotes));return{type:3,fee:_constants.VOTE_FEE.toString(),recipientId:recipientId,asset:{votes:allVotes}}};exports.default=(0,_utils.wrapTransactionCreator)(castVotes);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"../cryptography":20,"./utils":39,"babel-runtime/helpers/toConsumableArray":105}],29:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _constants=require("../constants");var _utils=require("./utils");var registerMultisignatureAccount=function registerMultisignatureAccount(_ref){var keysgroup=_ref.keysgroup,lifetime=_ref.lifetime,minimum=_ref.minimum;(0,_utils.validateKeysgroup)(keysgroup);var plusPrependedKeysgroup=(0,_utils.prependPlusToPublicKeys)(keysgroup);var keygroupFees=plusPrependedKeysgroup.length+1;return{type:4,fee:(_constants.MULTISIGNATURE_FEE*keygroupFees).toString(),asset:{multisignature:{min:minimum,lifetime:lifetime,keysgroup:plusPrependedKeysgroup}}}};exports.default=(0,_utils.wrapTransactionCreator)(registerMultisignatureAccount);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":39}],30:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _constants=require("../constants");var _utils=require("./utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var isInt=function isInt(n){return parseInt(n,10)===n};var validateOptions=function validateOptions(options){if((typeof options==="undefined"?"undefined":(0,_typeof3.default)(options))!=="object"){throw new Error("Options must be an object.")}var category=options.category,name=options.name,type=options.type,link=options.link;if(!isInt(category)){throw new Error("Dapp category must be an integer.")}if(typeof name!=="string"){throw new Error("Dapp name must be a string.")}if(!isInt(type)){throw new Error("Dapp type must be an integer.")}if(typeof link!=="string"){throw new Error("Dapp link must be a string.")}};var createDapp=function createDapp(_ref){var options=_ref.options;validateOptions(options);return{type:5,fee:_constants.DAPP_FEE.toString(),asset:{dapp:{category:options.category,name:options.name,description:options.description,tags:options.tags,type:options.type,link:options.link,icon:options.icon}}}};exports.default=(0,_utils.wrapTransactionCreator)(createDapp);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":39,"babel-runtime/helpers/typeof":106}],31:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _constants=require("../constants");var _utils=require("./utils");var transferIntoDapp=function transferIntoDapp(_ref){var amount=_ref.amount,dappId=_ref.dappId;return{type:6,amount:amount.toString(),fee:_constants.IN_TRANSFER_FEE.toString(),asset:{inTransfer:{dappId:dappId}}}};exports.default=(0,_utils.wrapTransactionCreator)(transferIntoDapp);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":39}],32:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _constants=require("../constants");var _utils=require("./utils");var transferOutOfDapp=function transferOutOfDapp(_ref){var amount=_ref.amount,dappId=_ref.dappId,transactionId=_ref.transactionId,recipientId=_ref.recipientId;return{type:7,amount:amount.toString(),fee:_constants.OUT_TRANSFER_FEE.toString(),recipientId:recipientId,asset:{outTransfer:{dappId:dappId,transactionId:transactionId}}}};exports.default=(0,_utils.wrapTransactionCreator)(transferOutOfDapp);if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../constants":16,"./utils":39}],33:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _transfer=require("./0_transfer");var _transfer2=_interopRequireDefault(_transfer);var _registerSecondPassphrase=require("./1_registerSecondPassphrase");var _registerSecondPassphrase2=_interopRequireDefault(_registerSecondPassphrase);var _registerDelegate=require("./2_registerDelegate");var _registerDelegate2=_interopRequireDefault(_registerDelegate);var _castVotes=require("./3_castVotes");var _castVotes2=_interopRequireDefault(_castVotes);var _registerMultisignatureAccount=require("./4_registerMultisignatureAccount");var _registerMultisignatureAccount2=_interopRequireDefault(_registerMultisignatureAccount);var _createDapp=require("./5_createDapp");var _createDapp2=_interopRequireDefault(_createDapp);var _transferIntoDapp=require("./6_transferIntoDapp");var _transferIntoDapp2=_interopRequireDefault(_transferIntoDapp);var _transferOutOfDapp=require("./7_transferOutOfDapp");var _transferOutOfDapp2=_interopRequireDefault(_transferOutOfDapp);var _utils=require("./utils");var utils=_interopRequireWildcard(_utils);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={transfer:_transfer2.default,registerSecondPassphrase:_registerSecondPassphrase2.default,registerDelegate:_registerDelegate2.default,castVotes:_castVotes2.default,registerMultisignature:_registerMultisignatureAccount2.default,createDapp:_createDapp2.default,transferIntoDapp:_transferIntoDapp2.default,transferOutOfDapp:_transferOutOfDapp2.default,utils:utils};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./0_transfer":25,"./1_registerSecondPassphrase":26,"./2_registerDelegate":27,"./3_castVotes":28,"./4_registerMultisignatureAccount":29,"./5_createDapp":30,"./6_transferIntoDapp":31,"./7_transferOutOfDapp":32,"./utils":39}],34:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var prependPlusToPublicKeys=exports.prependPlusToPublicKeys=function prependPlusToPublicKeys(publicKeys){return publicKeys.map(function(publicKey){return"+"+publicKey})};var prependMinusToPublicKeys=exports.prependMinusToPublicKeys=function prependMinusToPublicKeys(publicKeys){return publicKeys.map(function(publicKey){return"-"+publicKey})};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{}],35:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var getAddressAndPublicKeyFromRecipientData=function getAddressAndPublicKeyFromRecipientData(_ref){var recipientId=_ref.recipientId,recipientPublicKey=_ref.recipientPublicKey;if(recipientId&&recipientPublicKey){var addressFromPublicKey=_cryptography2.default.getAddressFromPublicKey(recipientPublicKey);if(recipientId===addressFromPublicKey){return{address:recipientId,publicKey:recipientPublicKey}}throw new Error("Could not create transaction: recipientId does not match recipientPublicKey.")}if(!recipientId&&recipientPublicKey){var _addressFromPublicKey=_cryptography2.default.getAddressFromPublicKey(recipientPublicKey);return{address:_addressFromPublicKey,publicKey:recipientPublicKey}}return{address:recipientId,publicKey:null}};exports.default=getAddressAndPublicKeyFromRecipientData;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../cryptography":20}],36:[function(require,module,exports){(function(Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.checkTransaction=exports.getAssetBytes=exports.getAssetDataForTransferOutOfDappTransaction=exports.getAssetDataForTransferIntoDappTransaction=exports.getAssetDataForCreateDappTransaction=exports.getAssetDataForRegisterMultisignatureAccountTransaction=exports.getAssetDataForCastVotesTransaction=exports.getAssetDataForRegisterDelegateTransaction=exports.getAssetDataForRegisterSecondSignatureTransaction=exports.getAssetDataForTransferTransaction=exports.checkRequiredFields=exports.BYTESIZES=exports.isValidValue=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _browserifyBignum=require("browserify-bignum");var _browserifyBignum2=_interopRequireDefault(_browserifyBignum);var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var isValidValue=exports.isValidValue=function isValidValue(value){return![undefined,false,NaN].includes(value)};var BYTESIZES=exports.BYTESIZES={TYPE:1,TIMESTAMP:4,MULTISIGNATURE_PUBLICKEY:32,RECIPIENT_ID:8,AMOUNT:8,SIGNATURE_TRANSACTION:64,SECOND_SIGNATURE_TRANSACTION:64,DATA:64};var checkRequiredFields=exports.checkRequiredFields=function checkRequiredFields(requiredFields,data){var dataFields=(0,_keys2.default)(data);requiredFields.forEach(function(parameter){if(!dataFields.includes(parameter.toString())||!isValidValue(data[parameter])){throw new Error(parameter+" is a required parameter.")}});return true};var getAssetDataForTransferTransaction=exports.getAssetDataForTransferTransaction=function getAssetDataForTransferTransaction(_ref){var data=_ref.data;return data?Buffer.from(data,"utf8"):Buffer.alloc(0)};var getAssetDataForRegisterSecondSignatureTransaction=exports.getAssetDataForRegisterSecondSignatureTransaction=function getAssetDataForRegisterSecondSignatureTransaction(_ref2){var signature=_ref2.signature;checkRequiredFields(["publicKey"],signature);var publicKey=signature.publicKey;return _cryptography2.default.hexToBuffer(publicKey)};var getAssetDataForRegisterDelegateTransaction=exports.getAssetDataForRegisterDelegateTransaction=function getAssetDataForRegisterDelegateTransaction(_ref3){var delegate=_ref3.delegate;checkRequiredFields(["username"],delegate);var username=delegate.username;return Buffer.from(username,"utf8")};var getAssetDataForCastVotesTransaction=exports.getAssetDataForCastVotesTransaction=function getAssetDataForCastVotesTransaction(_ref4){var votes=_ref4.votes;if(!Array.isArray(votes)){throw new Error("votes parameter must be an Array.")}return Buffer.from(votes.join(""),"utf8")};var getAssetDataForRegisterMultisignatureAccountTransaction=exports.getAssetDataForRegisterMultisignatureAccountTransaction=function getAssetDataForRegisterMultisignatureAccountTransaction(_ref5){var multisignature=_ref5.multisignature;checkRequiredFields(["min","lifetime","keysgroup"],multisignature);var min=multisignature.min,lifetime=multisignature.lifetime,keysgroup=multisignature.keysgroup;var minBuffer=Buffer.alloc(1,min);var lifetimeBuffer=Buffer.alloc(1,lifetime);var keysgroupBuffer=Buffer.from(keysgroup.join(""),"utf8");return Buffer.concat([minBuffer,lifetimeBuffer,keysgroupBuffer])};var getAssetDataForCreateDappTransaction=exports.getAssetDataForCreateDappTransaction=function getAssetDataForCreateDappTransaction(_ref6){var dapp=_ref6.dapp;checkRequiredFields(["name","link","type","category"],dapp);var name=dapp.name,description=dapp.description,tags=dapp.tags,link=dapp.link,icon=dapp.icon,type=dapp.type,category=dapp.category;var nameBuffer=Buffer.from(name,"utf8");var linkBuffer=Buffer.from(link,"utf8");var typeBuffer=Buffer.alloc(4,type);var categoryBuffer=Buffer.alloc(4,category);var descriptionBuffer=description?Buffer.from(description,"utf8"):Buffer.alloc(0);var tagsBuffer=tags?Buffer.from(tags,"utf8"):Buffer.alloc(0);var iconBuffer=icon?Buffer.from(icon,"utf8"):Buffer.alloc(0);return Buffer.concat([nameBuffer,descriptionBuffer,tagsBuffer,linkBuffer,iconBuffer,typeBuffer,categoryBuffer])};var getAssetDataForTransferIntoDappTransaction=exports.getAssetDataForTransferIntoDappTransaction=function getAssetDataForTransferIntoDappTransaction(_ref7){var inTransfer=_ref7.inTransfer;checkRequiredFields(["dappId"],inTransfer);var dappId=inTransfer.dappId;return Buffer.from(dappId,"utf8")};var getAssetDataForTransferOutOfDappTransaction=exports.getAssetDataForTransferOutOfDappTransaction=function getAssetDataForTransferOutOfDappTransaction(_ref8){var outTransfer=_ref8.outTransfer;checkRequiredFields(["dappId","transactionId"],outTransfer);var dappId=outTransfer.dappId,transactionId=outTransfer.transactionId;var outAppIdBuffer=Buffer.from(dappId,"utf8");var outTransactionIdBuffer=Buffer.from(transactionId,"utf8");return Buffer.concat([outAppIdBuffer,outTransactionIdBuffer])};var getAssetBytes=exports.getAssetBytes=function getAssetBytes(transaction){return{0:getAssetDataForTransferTransaction,1:getAssetDataForRegisterSecondSignatureTransaction,2:getAssetDataForRegisterDelegateTransaction,3:getAssetDataForCastVotesTransaction,4:getAssetDataForRegisterMultisignatureAccountTransaction,5:getAssetDataForCreateDappTransaction,6:getAssetDataForTransferIntoDappTransaction,7:getAssetDataForTransferOutOfDappTransaction}[transaction.type](transaction.asset)};var REQUIRED_TRANSACTION_PARAMETERS=["type","timestamp","senderPublicKey","amount"];var checkTransaction=exports.checkTransaction=function checkTransaction(transaction){checkRequiredFields(REQUIRED_TRANSACTION_PARAMETERS,transaction);var data=transaction.asset.data;if(data&&data.length>BYTESIZES.DATA){throw new Error("Transaction asset data exceeds size of "+BYTESIZES.DATA+".")}return true};var getTransactionBytes=function getTransactionBytes(transaction){checkTransaction(transaction);var transactionType=Buffer.alloc(BYTESIZES.TYPE,transaction.type);var transactionTimestamp=Buffer.alloc(BYTESIZES.TIMESTAMP);transactionTimestamp.writeIntLE(transaction.timestamp,0,BYTESIZES.TIMESTAMP);var transactionSenderPublicKey=_cryptography2.default.hexToBuffer(transaction.senderPublicKey);var transactionRequesterPublicKey=transaction.requesterPublicKey?_cryptography2.default.hexToBuffer(transaction.requesterPublicKey):Buffer.alloc(0);var transactionRecipientID=transaction.recipientId?_cryptography2.default.bigNumberToBuffer(transaction.recipientId.slice(0,-1),BYTESIZES.RECIPIENT_ID):Buffer.alloc(BYTESIZES.RECIPIENT_ID);var transactionAmount=(0,_browserifyBignum2.default)(transaction.amount).toBuffer({endian:"little",size:BYTESIZES.AMOUNT});var transactionAssetData=getAssetBytes(transaction);var transactionSignature=transaction.signature?_cryptography2.default.hexToBuffer(transaction.signature):Buffer.alloc(0);var transactionSecondSignature=transaction.signSignature?_cryptography2.default.hexToBuffer(transaction.signSignature):Buffer.alloc(0);return Buffer.concat([transactionType,transactionTimestamp,transactionSenderPublicKey,transactionRequesterPublicKey,transactionRecipientID,transactionAmount,transactionAssetData,transactionSignature,transactionSecondSignature])};exports.default=getTransactionBytes;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,require("buffer").Buffer)},{"../../cryptography":20,"babel-runtime/core-js/object/keys":94,"browserify-bignum":136,buffer:150}],37:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _getTransactionBytes=require("./getTransactionBytes");var _getTransactionBytes2=_interopRequireDefault(_getTransactionBytes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var getTransactionHash=function getTransactionHash(transaction){var bytes=(0,_getTransactionBytes2.default)(transaction);return _cryptography2.default.hash(bytes)};exports.default=getTransactionHash;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../cryptography":20,"./getTransactionBytes":36}],38:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _getTransactionBytes=require("./getTransactionBytes");var _getTransactionBytes2=_interopRequireDefault(_getTransactionBytes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var getTransactionId=function getTransactionId(transaction){var transactionBytes=(0,_getTransactionBytes2.default)(transaction);var transactionHash=_cryptography2.default.hash(transactionBytes);var bufferFromFirstEntriesReversed=_cryptography2.default.getFirstEightBytesReversed(transactionHash);var firstEntriesToNumber=_cryptography2.default.bufferToBigNumberString(bufferFromFirstEntriesReversed);return firstEntriesToNumber};exports.default=getTransactionId;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../cryptography":20,"./getTransactionBytes":36}],39:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _getAddressAndPublicKeyFromRecipientData=require("./getAddressAndPublicKeyFromRecipientData");Object.defineProperty(exports,"getAddressAndPublicKeyFromRecipientData",{enumerable:true,get:function get(){return _interopRequireDefault(_getAddressAndPublicKeyFromRecipientData).default}});var _getTransactionBytes=require("./getTransactionBytes");Object.defineProperty(exports,"getTransactionBytes",{enumerable:true,get:function get(){return _interopRequireDefault(_getTransactionBytes).default}});var _getTransactionHash=require("./getTransactionHash");Object.defineProperty(exports,"getTransactionHash",{enumerable:true,get:function get(){return _interopRequireDefault(_getTransactionHash).default}});var _getTransactionId=require("./getTransactionId");Object.defineProperty(exports,"getTransactionId",{enumerable:true,get:function get(){return _interopRequireDefault(_getTransactionId).default}});var _format=require("./format");Object.defineProperty(exports,"prependPlusToPublicKeys",{enumerable:true,get:function get(){return _format.prependPlusToPublicKeys}});Object.defineProperty(exports,"prependMinusToPublicKeys",{enumerable:true,get:function get(){return _format.prependMinusToPublicKeys}});var _prepareTransaction=require("./prepareTransaction");Object.defineProperty(exports,"prepareTransaction",{enumerable:true,get:function get(){return _interopRequireDefault(_prepareTransaction).default}});var _signAndVerify=require("./signAndVerify");Object.defineProperty(exports,"signTransaction",{enumerable:true,get:function get(){return _signAndVerify.signTransaction}});Object.defineProperty(exports,"multiSignTransaction",{enumerable:true,get:function get(){return _signAndVerify.multiSignTransaction}});Object.defineProperty(exports,"verifyTransaction",{enumerable:true,get:function get(){return _signAndVerify.verifyTransaction}});var _signRawTransaction=require("./signRawTransaction");Object.defineProperty(exports,"signRawTransaction",{enumerable:true,get:function get(){return _interopRequireDefault(_signRawTransaction).default}});var _time=require("./time");Object.defineProperty(exports,"getTimeFromBlockchainEpoch",{enumerable:true,get:function get(){return _time.getTimeFromBlockchainEpoch}});Object.defineProperty(exports,"getTimeWithOffset",{enumerable:true,get:function get(){return _time.getTimeWithOffset}});var _validation=require("./validation");Object.defineProperty(exports,"checkPublicKeysForDuplicates",{enumerable:true,get:function get(){return _validation.checkPublicKeysForDuplicates}});Object.defineProperty(exports,"validatePublicKey",{enumerable:true,get:function get(){return _validation.validatePublicKey}});Object.defineProperty(exports,"validatePublicKeys",{enumerable:true,get:function get(){return _validation.validatePublicKeys}});Object.defineProperty(exports,"validateKeysgroup",{enumerable:true,get:function get(){return _validation.validateKeysgroup}});Object.defineProperty(exports,"validateAddress",{enumerable:true,get:function get(){return _validation.validateAddress}});var _wrapTransactionCreator=require("./wrapTransactionCreator");Object.defineProperty(exports,"wrapTransactionCreator",{enumerable:true,get:function get(){return _interopRequireDefault(_wrapTransactionCreator).default}});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./format":34,"./getAddressAndPublicKeyFromRecipientData":35,"./getTransactionBytes":36,"./getTransactionHash":37,"./getTransactionId":38,"./prepareTransaction":40,"./signAndVerify":41,"./signRawTransaction":42,"./time":43,"./validation":44,"./wrapTransactionCreator":45}],40:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _signAndVerify=require("./signAndVerify");var _getTransactionId=require("./getTransactionId");var _getTransactionId2=_interopRequireDefault(_getTransactionId);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var secondSignTransaction=function secondSignTransaction(transactionObject,secondPassphrase){return(0,_assign2.default)({},transactionObject,{signSignature:(0,_signAndVerify.signTransaction)(transactionObject,secondPassphrase)})};var prepareTransaction=function prepareTransaction(transaction,passphrase,secondPassphrase){var singleSignedTransaction=(0,_assign2.default)({},transaction,{signature:(0,_signAndVerify.signTransaction)(transaction,passphrase)});var signedTransaction=typeof secondPassphrase==="string"&&transaction.type!==1?secondSignTransaction(singleSignedTransaction,secondPassphrase):singleSignedTransaction;var transactionWithId=(0,_assign2.default)({},signedTransaction,{id:(0,_getTransactionId2.default)(signedTransaction)});return transactionWithId};exports.default=prepareTransaction;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"./getTransactionId":38,"./signAndVerify":41,"babel-runtime/core-js/object/assign":89}],41:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.verifyTransaction=exports.multiSignTransaction=exports.signTransaction=undefined;var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _getTransactionHash=require("./getTransactionHash");var _getTransactionHash2=_interopRequireDefault(_getTransactionHash);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var signTransaction=exports.signTransaction=function signTransaction(transaction,passphrase){var transactionHash=(0,_getTransactionHash2.default)(transaction);return _cryptography2.default.signData(transactionHash,passphrase)};var multiSignTransaction=exports.multiSignTransaction=function multiSignTransaction(transaction,passphrase){var transactionToSign=(0,_assign2.default)({},transaction);delete transactionToSign.signature;delete transactionToSign.signSignature;var transactionHash=(0,_getTransactionHash2.default)(transactionToSign);return _cryptography2.default.signData(transactionHash,passphrase)};var verifyTransaction=exports.verifyTransaction=function verifyTransaction(transaction,secondPublicKey){var secondSignaturePresent=!!transaction.signSignature;if(secondSignaturePresent&&!secondPublicKey){throw new Error("Cannot verify signSignature without secondPublicKey.")}var transactionWithoutSignature=(0,_assign2.default)({},transaction);if(secondSignaturePresent){delete transactionWithoutSignature.signSignature}else{delete transactionWithoutSignature.signature}var transactionHash=(0,_getTransactionHash2.default)(transactionWithoutSignature);var publicKey=secondSignaturePresent?secondPublicKey:transaction.senderPublicKey;var signature=secondSignaturePresent?transaction.signSignature:transaction.signature;var verified=_cryptography2.default.verifyData(transactionHash,signature,publicKey);return secondSignaturePresent?verified&&verifyTransaction(transactionWithoutSignature):verified};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../cryptography":20,"./getTransactionHash":37,"babel-runtime/core-js/object/assign":89}],42:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);exports.default=signRawTransaction;var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _time=require("./time");var _prepareTransaction=require("./prepareTransaction");var _prepareTransaction2=_interopRequireDefault(_prepareTransaction);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function signRawTransaction(_ref){var transaction=_ref.transaction,passphrase=_ref.passphrase,secondPassphrase=_ref.secondPassphrase,timeOffset=_ref.timeOffset;var _cryptography$getAddr=_cryptography2.default.getAddressAndPublicKeyFromPassphrase(passphrase),publicKey=_cryptography$getAddr.publicKey,address=_cryptography$getAddr.address;var senderSecondPublicKey=secondPassphrase?_cryptography2.default.getPrivateAndPublicKeyFromPassphrase(secondPassphrase).publicKey:null;var propertiesToAdd={senderPublicKey:publicKey,senderSecondPublicKey:senderSecondPublicKey,senderId:address,timestamp:(0,_time.getTimeWithOffset)(timeOffset)};var transactionWithProperties=(0,_assign2.default)({},transaction,propertiesToAdd);return(0,_prepareTransaction2.default)(transactionWithProperties,passphrase,secondPassphrase)}if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../cryptography":20,"./prepareTransaction":40,"./time":43,"babel-runtime/core-js/object/assign":89}],43:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getTimeWithOffset=exports.getTimeFromBlockchainEpoch=undefined;var _constants=require("../../constants");var getTimeFromBlockchainEpoch=exports.getTimeFromBlockchainEpoch=function getTimeFromBlockchainEpoch(givenTimestamp){var startingPoint=givenTimestamp||(new Date).getTime();var blockchainInitialTime=_constants.EPOCH_TIME_MILLISECONDS;return Math.floor((startingPoint-blockchainInitialTime)/1e3)};var getTimeWithOffset=exports.getTimeWithOffset=function getTimeWithOffset(offset){var now=(new Date).getTime();var timeWithOffset=offset?now+offset*1e3:now;return getTimeFromBlockchainEpoch(timeWithOffset)};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16}],44:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.validateAddress=exports.validateKeysgroup=exports.validatePublicKeys=exports.checkPublicKeysForDuplicates=exports.validatePublicKey=undefined;var _browserifyBignum=require("browserify-bignum");var _browserifyBignum2=_interopRequireDefault(_browserifyBignum);var _convert=require("../../cryptography/convert");var _constants=require("../../constants");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var validatePublicKey=exports.validatePublicKey=function validatePublicKey(publicKey){var publicKeyBuffer=(0,_convert.hexToBuffer)(publicKey);if(publicKeyBuffer.length!==32){throw new Error("Public key "+publicKey+" length differs from the expected 32 bytes for a public key.")}return true};var checkPublicKeysForDuplicates=exports.checkPublicKeysForDuplicates=function checkPublicKeysForDuplicates(publicKeys){return publicKeys.every(function(element,index){var elementFound=publicKeys.slice(index+1).indexOf(element);if(elementFound>-1){throw new Error("Duplicated public key: "+publicKeys[index]+".")}return true})};var validatePublicKeys=exports.validatePublicKeys=function validatePublicKeys(publicKeys){return publicKeys.every(validatePublicKey)&&checkPublicKeysForDuplicates(publicKeys)};var validateKeysgroup=exports.validateKeysgroup=function validateKeysgroup(keysgroup){if(keysgroup.length===0||keysgroup.length>16){throw new Error("Expected between 1 and 16 public keys in the keysgroup.")}return validatePublicKeys(keysgroup)};var validateAddress=exports.validateAddress=function validateAddress(address){if(address.length<2||address.length>22){throw new Error("Address length does not match requirements. Expected between 2 and 22 characters.")}if(address[address.length-1]!=="L"){throw new Error('Address format does not match requirements. Expected "L" at the end.')}var addressAsBignum=(0,_browserifyBignum2.default)(address.slice(0,-1));if(addressAsBignum.cmp((0,_browserifyBignum2.default)(_constants.MAX_ADDRESS_NUMBER))>0){throw new Error("Address format does not match requirements. Address out of maximum range.")}return true};if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../constants":16,"../../cryptography/convert":17,"browserify-bignum":136}],45:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _cryptography=require("../../cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _prepareTransaction=require("./prepareTransaction");var _prepareTransaction2=_interopRequireDefault(_prepareTransaction);var _time=require("./time");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var wrapTransactionCreator=function wrapTransactionCreator(transactionCreator){return function(transactionParameters){var passphrase=transactionParameters.passphrase,secondPassphrase=transactionParameters.secondPassphrase,timeOffset=transactionParameters.timeOffset;var senderPublicKey=passphrase?_cryptography2.default.getKeys(passphrase).publicKey:null;var timestamp=(0,_time.getTimeWithOffset)(timeOffset);var transaction=(0,_assign2.default)({amount:"0",recipientId:null,senderPublicKey:senderPublicKey,timestamp:timestamp},transactionCreator(transactionParameters));return passphrase?(0,_prepareTransaction2.default)(transaction,passphrase,secondPassphrase):transaction}};exports.default=wrapTransactionCreator;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{"../../cryptography":20,"./prepareTransaction":40,"./time":43,"babel-runtime/core-js/object/assign":89}],46:[function(require,module,exports){"use strict";afterEach(function(){sandbox.restore()});if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}},{}],47:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _apiMethod=require("../../src/api/apiMethod");var _apiMethod2=_interopRequireDefault(_apiMethod);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("API method module",function(){var GET="GET";var POST="POST";var defaultBasePath="http://localhost:1234/api";var defaultresourcePath="/resources";var defaultFullPath=""+defaultBasePath+defaultresourcePath;var defaultHeaders={"Content-Type":"application/json",nethash:"mainnetHash",os:"lisk-js-api",version:"1.0.0",minVersion:">=0.5.0",port:"443"};var errorArgumentNumber="This endpoint must be supplied with the following parameters: related,id";var resource=void 0;var requestResult=void 0;var handler=void 0;var validationError=void 0;beforeEach(function(){requestResult={success:true,sendRequest:true};resource={path:defaultresourcePath,resourcePath:defaultFullPath,headers:defaultHeaders,request:sandbox.stub().resolves(requestResult),handleRetry:function handleRetry(){}};validationError=new Error("No data")});describe("#apiMethod",function(){describe("when no parameters are passed",function(){beforeEach(function(){handler=_get__("apiMethod")().bind(resource)});it("should return function",function(){return handler.should.be.a("function")});it("should request GET with default URL",function(){return handler().then(function(){resource.request.should.be.calledOnce;return resource.request.should.be.calledWithExactly({method:GET,url:defaultFullPath,headers:defaultHeaders},false)})})});describe("when initialized with POST / parameters",function(){beforeEach(function(){handler=_get__("apiMethod")({method:POST,path:"/{related}/ids/{id}",urlParams:["related","id"],validator:function validator(data){if(!data.needed){throw validationError}},defaultData:{sort:"id"},retry:true}).bind(resource)});it("should return function",function(){return handler.should.be.a("function")});it("should be rejected with error without param",function(){return handler().should.be.rejectedWith(Error,errorArgumentNumber)});it("should be rejected with error without enough param",function(){return handler("r-123").should.be.rejectedWith(Error,errorArgumentNumber)});it("should be rejected with no data",function(){return handler("r-123","id-123").should.be.rejectedWith(validationError)});it("should call request with the given data",function(){return handler("r-123","id-123",{needed:true}).then(function(){resource.request.should.be.calledOnce;return resource.request.should.be.calledWithExactly({method:POST,url:defaultFullPath+"/r-123/ids/id-123",headers:defaultHeaders,body:{needed:true,sort:"id"}},true)})})});describe("when initialized with GET / parameters",function(){beforeEach(function(){handler=_get__("apiMethod")({method:GET,path:"/{related}/ids/{id}",urlParams:["related","id"],validator:function validator(data){if(!data.needed){throw validationError}},defaultData:{sort:"id"}}).bind(resource)});it("should return a function",function(){return handler.should.be.a("function")});it("should be rejected with error without parameters",function(){return handler().should.be.rejectedWith(Error,errorArgumentNumber)});it("should be rejected with error without enough parameters",function(){return handler("r-123").should.be.rejectedWith(Error,errorArgumentNumber)});it("should be rejected with no data",function(){return handler("r-123","id-123").should.be.rejectedWith(validationError)});it("should be request with the given data",function(){return handler("r-123","id-123",{needed:true}).then(function(){resource.request.should.be.calledOnce;return resource.request.should.be.calledWithExactly({method:GET,url:defaultFullPath+"/r-123/ids/id-123?sort=id&needed=true",headers:defaultHeaders},false)})})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"apiMethod":return _apiMethod2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/api/apiMethod":3,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],48:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _promise=require("babel-runtime/core-js/promise");var _promise2=_interopRequireDefault(_promise);var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _apiResource=require("../../src/api/apiResource");var _apiResource2=_interopRequireDefault(_apiResource);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var popsicle=require("popsicle");describe("API resource module",function(){var GET="GET";var defaultBasePath="http://localhost:1234";var defaultResourcePath="/resources";var defaultFullPath=defaultBasePath+"/api"+defaultResourcePath;var defaultHeaders={"Content-Type":"application/json",nethash:"mainnetHash",os:"lisk-js-api",version:"1.0.0",minVersion:">=0.5.0",port:"443"};var defaultError=new Error("network error");var defaultRequest={method:GET,url:defaultFullPath,headers:defaultHeaders};var sendRequestResult={body:{success:true,sendRequest:true}};var resource=void 0;var LiskAPI=void 0;beforeEach(function(){LiskAPI={headers:(0,_assign2.default)({},defaultHeaders),nodeFullURL:defaultBasePath,hasAvailableNodes:function hasAvailableNodes(){},randomizeNodes:function randomizeNodes(){},banActiveNodeAndSelect:sandbox.stub()};resource=new(_get__("APIResource"))(LiskAPI)});describe("#constructor",function(){it("should create an API resource instance",function(){return resource.should.be.instanceOf(_get__("APIResource"))});it("should throw an error without an input",function(){return function(){return new(_get__("APIResource"))}.should.throw("Require LiskAPI instance to be initialized.")})});describe("get headers",function(){it("should return header set to liskAPI",function(){return resource.headers.should.eql(defaultHeaders)})});describe("get resourcePath",function(){it("should return the resource’s full path",function(){return resource.resourcePath.should.equal(defaultBasePath+"/api")});it("should return the resource’s full path with set path",function(){resource.path=defaultResourcePath;return resource.resourcePath.should.equal(defaultBasePath+"/api"+defaultResourcePath)})});describe("#request",function(){var popsicleStub=void 0;var handleRetryStub=void 0;beforeEach(function(){popsicleStub=sandbox.stub(_get__("popsicle"),"request").returns({use:function use(){return _promise2.default.resolve(sendRequestResult)}});handleRetryStub=sandbox.stub(resource,"handleRetry")});it("should make a request to API without calling retry",function(){return resource.request(defaultRequest,false).then(function(res){popsicleStub.should.be.calledOnce;handleRetryStub.should.not.be.called;return res.should.eql(sendRequestResult.body)})});it("should make a request to API without calling retry when it successes",function(){return resource.request(defaultRequest,true).then(function(res){popsicleStub.should.be.calledOnce;handleRetryStub.should.not.be.called;return res.should.eql(sendRequestResult.body)})});it("should make a request to API with calling retry when it fails",function(){popsicleStub.returns({use:function use(){return _promise2.default.reject(defaultError)}});return resource.request(defaultRequest,true).catch(function(err){popsicleStub.should.be.calledOnce;handleRetryStub.should.be.calledOnce;return err.should.eql(defaultError)})})});describe("#handleRetry",function(){var requestStub=void 0;beforeEach(function(){requestStub=sandbox.stub(resource,"request").returns(_promise2.default.resolve(sendRequestResult.body))});describe("when there is available node",function(){var clock=void 0;beforeEach(function(){clock=sinon.useFakeTimers();LiskAPI.hasAvailableNodes=function(){return true}});afterEach(function(){clock.restore()});it("should call banActiveNode when randomizeNodes is true",function(){LiskAPI.randomizeNodes=true;var req=resource.handleRetry(defaultError,defaultRequest);clock.tick(1e3);return req.then(function(res){LiskAPI.banActiveNodeAndSelect.should.be.calledOnce;requestStub.should.be.calledWith(defaultRequest,true);return res.should.be.eql(sendRequestResult.body)})});it("should not call ban active node when randomizeNodes is false",function(){LiskAPI.randomizeNodes=false;var req=resource.handleRetry(defaultError,defaultRequest);clock.tick(1e3);return req.then(function(res){LiskAPI.banActiveNodeAndSelect.should.not.be.called;requestStub.should.be.calledWith(defaultRequest,true);return res.should.be.eql(sendRequestResult.body)})})});describe("when there is no available node",function(){beforeEach(function(){LiskAPI.hasAvailableNodes=function(){return false}});it("should resolve with failure response",function(){var req=resource.handleRetry(defaultError,defaultRequest);return req.then(function(res){res.success.should.be.false;res.error.should.eql(defaultError);return res.message.should.equal("Could not create an HTTP request to any known nodes.")})})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"APIResource":return _apiResource2.default;case"popsicle":return popsicle}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/api/apiResource":4,"babel-runtime/core-js/object/assign":89,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/core-js/promise":96,"babel-runtime/helpers/typeof":106,popsicle:396}],49:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _liskApi=require("../../src/api/liskApi");var _liskApi2=_interopRequireDefault(_liskApi);var _config=require("../../config.json");var _config2=_interopRequireDefault(_config);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("Lisk API module",function(){var testPort="7000";var livePort="8000";var sslPort="443";var mainnetHash="ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511";var testnetHash="da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba";var defaultHeaders={"Content-Type":"application/json",nethash:mainnetHash,os:"lisk-js-api",version:"1.0.0",minVersion:">=0.5.0",port:sslPort};var testnetHeaders=(0,_assign2.default)({},defaultHeaders,{nethash:testnetHash,version:"0.0.0a",port:testPort});var customHeaders=(0,_assign2.default)({},defaultHeaders,{nethash:"123",version:"0.0.0a"});var localNode="localhost";var externalNode="external";var sslNode="sslNode";var externalTestnetNode="testnet";var defaultNodes=[localNode,externalNode];var defaultSSLNodes=[localNode,externalNode,sslNode];var defaultTestnetNodes=[localNode,externalTestnetNode];var defaultBannedNodes=["naughty1","naughty2","naughty3"];var defaultSelectedNode="selected_node";var defaultUrl="node.url.com";var LSK=void 0;beforeEach(function(){_get__("config").nodes.mainnet=defaultNodes;_get__("config").nodes.testnet=defaultTestnetNodes;LSK=new(_get__("LiskAPI"))({})});describe("LiskAPI()",function(){it("should create a new instance of LiskAPI",function(){return LSK.should.be.an("object").and.be.instanceof(_get__("LiskAPI"))});it("should set node string by default",function(){return LSK.should.have.property("node").and.be.a("string")});describe("with option testnet true",function(){beforeEach(function(){LSK=new(_get__("LiskAPI"))({testnet:true})});it("should set the port to 7000 on initialization",function(){return LSK.should.have.property("port").be.equal(testPort)});it("should set testnet to true on initialization",function(){return LSK.should.have.property("testnet").be.equal(true)})})});describe("on initialize",function(){describe("SSL",function(){it("should set SSL to true on initialization when no SSL options is passed",function(){LSK=new(_get__("LiskAPI"))({ssl:undefined});return LSK.should.have.property("ssl").be.true});it("should set SSL to false on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({ssl:false});return LSK.should.have.property("ssl").be.false});it("should set SSL to true on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({ssl:true});return LSK.should.have.property("ssl").be.true})});describe("randomizeNodes",function(){it("should set randomizeNodes to true when randomizeNodes not explicitly set",function(){LSK=new(_get__("LiskAPI"))({randomizeNodes:undefined});return LSK.should.have.property("randomizeNodes").be.true});it("should set randomizeNodes to true on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({randomizeNodes:true});return LSK.should.have.property("randomizeNodes").be.true});it("should set randomizeNodes to false on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({node:defaultSelectedNode,randomizeNodes:false});return LSK.should.have.property("randomizeNodes").be.false})});describe("port",function(){it("should set port to desired port if set on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({port:"2000"});return LSK.should.have.property("port").be.equal("2000")});it("should set port to default testnet port if not set but used testnet on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({port:undefined,testnet:true});return LSK.should.have.property("port").be.equal(testPort)});it("should set testnet true and port to 100 on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({port:"100",testnet:true});return LSK.should.have.property("port").be.equal("100")})});describe("nodes",function(){it("should set all nodes lists to provided nodes on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({nodes:defaultNodes});return LSK.should.have.property("currentNodes").be.eql(defaultNodes)});it("should set all bannedNodes list to provided bannedNodes on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({bannedNodes:defaultBannedNodes});return defaultBannedNodes.every(function(node){return LSK.isBanned(node).should.be.true})});it("should set node to provided node on initialization when passed as an option",function(){LSK=new(_get__("LiskAPI"))({node:defaultUrl});return LSK.should.have.property("node").be.equal(defaultUrl)})});describe("bannedNodes",function(){it("should set empty array if no option is passed",function(){LSK=new(_get__("LiskAPI"))({bannedNodes:undefined});return LSK.should.have.property("bannedNodes").be.eql([])});it("should set bannedNodes when passed as an option",function(){var bannedNodes=["a","b"];LSK=new(_get__("LiskAPI"))({bannedNodes:bannedNodes});return LSK.should.have.property("bannedNodes").be.eql(bannedNodes)})});describe("headers",function(){it("should set with passed nethash",function(){LSK=new(_get__("LiskAPI"))({headers:customHeaders});return LSK.should.have.property("headers").be.eql(customHeaders)});it("should set default mainnet nethash",function(){LSK=new(_get__("LiskAPI"));return LSK.should.have.property("headers").be.eql(defaultHeaders)})})});describe("get nodes",function(){describe("with SSL set to true",function(){it("should return default testnet nodes if testnet is set to true",function(){LSK=new(_get__("LiskAPI"))({nodes:defaultTestnetNodes,testnet:true,ssl:true});return LSK.currentNodes.should.be.eql(defaultTestnetNodes)});it("should return default SSL nodes if testnet is not set to true",function(){LSK=new(_get__("LiskAPI"))({nodes:defaultSSLNodes,testnet:false,ssl:true});return LSK.currentNodes.should.be.eql(defaultSSLNodes)})});describe("with SSL set to false",function(){it("should return default testnet nodes if testnet is set to true",function(){LSK=new(_get__("LiskAPI"))({nodes:defaultTestnetNodes,testnet:true,ssl:false});return LSK.currentNodes.should.be.eql(defaultTestnetNodes)});it("should return default mainnet nodes if testnet is not set to true",function(){LSK=new(_get__("LiskAPI"))({nodes:defaultNodes,testnet:false,ssl:false});return LSK.currentNodes.should.be.eql(defaultNodes)})})});describe("get urlProtocol",function(){it("should return https if ssl is true",function(){LSK.ssl=true;return LSK.urlProtocol.should.be.equal("https")});it("should return http if ssl is false",function(){LSK.ssl=false;return LSK.urlProtocol.should.be.equal("http")})});describe("get nodeFullURL",function(){it("should return with set port",function(){LSK=new(_get__("LiskAPI"))({port:"8080",node:localNode});return LSK.nodeFullURL.should.be.equal("https://localhost:8080")});it("should not include port in the URL if port is not set",function(){LSK=new(_get__("LiskAPI"))({port:"",node:localNode});return LSK.nodeFullURL.should.be.equal("https://localhost")})});describe("#isBanned",function(){it("should return true when provided node is banned",function(){LSK=new(_get__("LiskAPI"))({bannedNodes:[localNode]});return LSK.isBanned(localNode).should.be.true});it("should return false when provided node is not banned",function(){return LSK.isBanned(localNode).should.be.false})});describe("get randomNode",function(){var nodesStub=void 0;beforeEach(function(){LSK=new(_get__("LiskAPI"));nodesStub=sandbox.stub(LSK,"currentNodes");nodesStub.get(function(){return[].concat(defaultNodes)})});it("should throw an error if all relevant nodes are banned",function(){LSK.bannedNodes=[].concat(defaultNodes);return LSK.getRandomNode.bind(LSK).should.throw("Cannot get random node: all relevant nodes have been banned.")});it("should return a node",function(){var result=LSK.getRandomNode();return defaultNodes.should.contain(result)});it("should randomly select the node",function(){var firstResult=LSK.getRandomNode();var nextResult=LSK.getRandomNode();while(nextResult===firstResult){nextResult=LSK.getRandomNode()}})});describe("#selectNewNode",function(){var customNode="customNode";var getRandomNodeResult=externalNode;beforeEach(function(){sandbox.stub(LSK,"getRandomNode").returns(getRandomNodeResult)});describe("if a node was provided in the options",function(){beforeEach(function(){LSK.providedNode=customNode});describe("if randomizeNodes is set to false",function(){beforeEach(function(){LSK.randomizeNodes=false});it("should throw an error if the provided node is banned",function(){LSK.bannedNodes=[customNode];return LSK.selectNewNode.bind(LSK).should.throw("Cannot select node: provided node has been banned and randomizeNodes is not set to true.")});it("should return the provided node if it is not banned",function(){var result=LSK.selectNewNode();return result.should.be.equal(customNode)})});describe("if randomizeNodes is set to true",function(){beforeEach(function(){LSK.randomizeNodes=true});it("should return a random node",function(){var result=LSK.selectNewNode();return result.should.be.equal(getRandomNodeResult)})})});describe("if a node was not provided in the options",function(){beforeEach(function(){LSK.providedNode=null});describe("if randomizeNodes is set to false",function(){beforeEach(function(){LSK.randomizeNodes=false});it("should throw an error",function(){return LSK.selectNewNode.bind(LSK).should.throw("Cannot select node: no node provided and randomizeNodes is not set to true.")})});describe("if randomizeNodes is set to true",function(){beforeEach(function(){LSK.randomizeNodes=true});it("should return a random node",function(){var result=LSK.selectNewNode();return result.should.be.equal(getRandomNodeResult)})})})});describe("#banActiveNode",function(){var node=void 0;beforeEach(function(){node=LSK.node});it("should add current node to banned nodes",function(){LSK.banActiveNode();return LSK.isBanned(node).should.be.true});it("should not duplicate a banned node",function(){var bannedNodes=[node];LSK.bannedNodes=bannedNodes;LSK.banActiveNode();return LSK.bannedNodes.should.be.eql(bannedNodes)})});describe("#banActiveNodeAndSelect",function(){var node=void 0;var selectNewNodeStub=void 0;beforeEach(function(){node=LSK.node;selectNewNodeStub=sandbox.stub(LSK,"selectNewNode").returns(defaultSelectedNode)});it("should call ban current node",function(){LSK.banActiveNodeAndSelect();return LSK.isBanned(node).should.be.true});it("should call selectNewNode when the node is banned",function(){LSK.banActiveNodeAndSelect();return selectNewNodeStub.should.be.calledOnce});it("should not call selectNewNode when the node is not banned",function(){var bannedNodes=[node];LSK.bannedNodes=bannedNodes;LSK.banActiveNodeAndSelect();return selectNewNodeStub.should.not.be.called})});describe("#hasAvailableNodes",function(){var nodesStub=void 0;beforeEach(function(){nodesStub=sandbox.stub(LSK,"currentNodes");nodesStub.get(function(){return[].concat(defaultNodes)})});describe("with randomized nodes",function(){beforeEach(function(){LSK.randomizeNodes=true});it("should return false without nodes left",function(){nodesStub.get(function(){return[]});var result=LSK.hasAvailableNodes();return result.should.be.false});it("should return true with contents",function(){nodesStub.get(function(){return["nodeA"]});var result=LSK.hasAvailableNodes();return result.should.be.true})});describe("without randomized nodes",function(){beforeEach(function(){LSK.randomizeNodes=false});it("should return false",function(){var result=LSK.hasAvailableNodes();return result.should.be.false})})});describe("#getDefaultHeaders",function(){it("should provide default header values",function(){return LSK.getDefaultHeaders().should.eql(defaultHeaders)});it("should provide default testnet header values",function(){LSK.port=testPort;return LSK.getDefaultHeaders(testnetHash).should.eql(testnetHeaders)});it("should get values for custom headers",function(){return LSK.getDefaultHeaders("123").should.be.eql(customHeaders)})});describe("get allNodes",function(){var nodes=void 0;beforeEach(function(){nodes=LSK.allNodes});it("should show the current node",function(){return nodes.should.have.property("current").equal(LSK.node)});it("should list all default nodes",function(){return nodes.should.have.property("default").and.eql(defaultNodes)});it("should list all testnet nodes",function(){return nodes.should.have.property("testnet").and.eql(defaultTestnetNodes)})});describe("#setTestnet",function(){var selectNewNodeStub=void 0;beforeEach(function(){selectNewNodeStub=sandbox.stub(LSK,"selectNewNode").returns(defaultSelectedNode)});describe("when testnet is initially true",function(){beforeEach(function(){LSK.testnet=true});describe("to true",function(){it("should not call selectNewNode",function(){LSK.setTestnet(true);selectNewNodeStub.should.not.be.called});it("should have testnet set to true",function(){LSK.setTestnet(true);return LSK.should.have.property("testnet").and.be.true});it("should not change bannedNodes",function(){LSK.bannedNodes=[].concat(defaultBannedNodes);LSK.setTestnet(true);return LSK.should.have.property("bannedNodes").and.eql(defaultBannedNodes)})});describe("to false",function(){it("should set testnet to false",function(){LSK.setTestnet(false);return LSK.should.have.property("testnet").and.be.false});it("should reset banned nodes",function(){LSK.bannedNodes=[].concat(defaultNodes);LSK.setTestnet(false);return LSK.bannedNodes.should.eql([])});it("should set port to 443",function(){LSK.ssl=true;LSK.setTestnet(false);return LSK.should.have.property("port").and.be.equal(sslPort)});it("should set port to live port",function(){LSK.ssl=false;LSK.setTestnet(false);return LSK.should.have.property("port").and.be.equal(livePort)});it("should select a node",function(){var callCount=selectNewNodeStub.callCount;LSK.setTestnet(false);return selectNewNodeStub.should.have.callCount(callCount+1)})})});describe("when testnet is initially false",function(){beforeEach(function(){LSK.testnet=false});describe("to true",function(){it("should set testnet to true",function(){LSK.setTestnet(true);return LSK.should.have.property("testnet").and.be.true});it("should reset banned nodes",function(){LSK.bannedNodes=[].concat(defaultNodes);LSK.setTestnet(true);return LSK.bannedNodes.should.eql([])});it("should set port to 7000 when ssl is true",function(){LSK.ssl=true;LSK.setTestnet(true);return LSK.should.have.property("port").and.be.equal(testPort)});it("should set port to 7000 when ssl is false",function(){LSK.ssl=false;LSK.setTestnet(true);return LSK.should.have.property("port").and.be.equal(testPort)});it("should select a node",function(){var callCount=selectNewNodeStub.callCount;LSK.setTestnet(true);return selectNewNodeStub.should.have.callCount(callCount+1)})});describe("to false",function(){it("should not call selectNewNode",function(){LSK.setTestnet(false);selectNewNodeStub.should.not.be.called});it("should not call selectNewNode",function(){LSK.setTestnet(false);selectNewNodeStub.should.not.be.called});it("should have testnet set to true",function(){LSK.setTestnet(false);return LSK.should.have.property("testnet").and.be.false});it("should not change bannedNodes",function(){LSK.bannedNodes=[].concat(defaultBannedNodes);LSK.setTestnet(false);return LSK.should.have.property("bannedNodes").and.eql(defaultBannedNodes)})})})});describe("#setSSL",function(){var selectNewNodeStub=void 0;beforeEach(function(){selectNewNodeStub=sandbox.stub(LSK,"selectNewNode").returns(defaultSelectedNode)});describe("when ssl is initially true",function(){beforeEach(function(){LSK.ssl=true});describe("when set to true",function(){it("should have ssl set to true",function(){LSK.setSSL(true);return LSK.should.have.property("ssl").and.be.true});it("should not change bannedNodes",function(){LSK.bannedNodes=[].concat(defaultBannedNodes);LSK.setSSL(true);return LSK.should.have.property("bannedNodes").and.eql(defaultBannedNodes)});it("should not select a node",function(){var callCount=selectNewNodeStub.callCount;LSK.setSSL(true);return selectNewNodeStub.should.have.callCount(callCount)})});describe("when set to false",function(){it("should set port to live port when testnet is false",function(){LSK.testnet=false;LSK.setSSL(false);return LSK.should.have.property("port").and.be.equal(livePort)});it("should set port to test port when testnet is true",function(){LSK.testnet=true;LSK.setSSL(false);return LSK.should.have.property("port").and.be.equal(testPort)});it("should have ssl set to false",function(){LSK.setSSL(false);return LSK.should.have.property("ssl").and.be.false});it("should reset bannedNodes",function(){defaultBannedNodes.forEach(function(){return LSK.banActiveNodeAndSelect()});LSK.setSSL(false);return defaultNodes.every(function(node){return LSK.isBanned(node).should.be.false})});it("should select a node",function(){var callCount=selectNewNodeStub.callCount;LSK.setSSL(false);return selectNewNodeStub.should.have.callCount(callCount+1)})})});describe("when ssl is initially false",function(){beforeEach(function(){LSK.ssl=false});describe("when set to true",function(){it("should have ssl set to true",function(){LSK.setSSL(true);return LSK.should.have.property("ssl").and.be.true});it("should set port to ssl port",function(){LSK.setSSL(true);return LSK.should.have.property("port").and.be.equal(sslPort)});it("should set port to ssl port even though testnet is true",function(){LSK.testnet=true;LSK.setSSL(true);return LSK.should.have.property("port").and.be.equal(sslPort)});it("should reset bannedNodes",function(){defaultBannedNodes.forEach(function(){return LSK.banActiveNodeAndSelect()});LSK.setSSL(true);return defaultNodes.every(function(node){return LSK.isBanned(node).should.be.false})});it("should select a node",function(){var callCount=selectNewNodeStub.callCount;LSK.setSSL(true);return selectNewNodeStub.should.have.callCount(callCount+1)})});describe("when set to false",function(){it("should have ssl set to false",function(){LSK.setSSL(false);return LSK.should.have.property("ssl").and.be.false});it("should not change bannedNodes",function(){LSK.bannedNodes=[].concat(defaultBannedNodes);LSK.setSSL(false);return LSK.should.have.property("bannedNodes").and.eql(defaultBannedNodes)});it("should select a node",function(){var callCount=selectNewNodeStub.callCount;LSK.setSSL(false);return selectNewNodeStub.should.have.callCount(callCount)})})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"config":return _config2.default;case"LiskAPI":return _liskApi2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../config.json":1,"../../src/api/liskApi":5,"babel-runtime/core-js/object/assign":89,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],50:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _utils=require("../../src/api/utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("api utils module",function(){var defaultURL="http://localhost:8080/api/resources";describe("#toQueryString",function(){it("should create a query string from an object",function(){var queryString=_get__("toQueryString")({key1:"value1",key2:"value2",key3:"value3"});return queryString.should.be.equal("key1=value1&key2=value2&key3=value3")});it("should escape invalid special characters",function(){var queryString=_get__("toQueryString")({"key:/;?":"value:/;?"});return queryString.should.be.equal("key%3A%2F%3B%3F=value%3A%2F%3B%3F")})});describe("#solveURLParams",function(){it("should return original URL with no param",function(){var solvedURL=_get__("solveURLParams")(defaultURL);return solvedURL.should.be.equal(defaultURL)});it("should throw error if url has variable but no param",function(){return _get__("solveURLParams").bind(null,defaultURL+"/{id}").should.throw(Error,"URL is not completely solved")});it("should throw error if url has variable but not matching params",function(){return _get__("solveURLParams").bind(null,defaultURL+"/{id}",{accountId:"123"}).should.throw(Error,"URL is not completely solved")});it("should replace variable with correct id",function(){var solvedURL=_get__("solveURLParams")(defaultURL+"/{id}",{id:"456",accountId:"123"});return solvedURL.should.be.equal(defaultURL+"/456")});it("should replace multiple variables with correct id and accountId",function(){var solvedURL=_get__("solveURLParams")(defaultURL+"/{accountId}/{id}",{id:"456",accountId:"123"});return solvedURL.should.be.equal(defaultURL+"/123/456")});it("should replace variable with correct id and encode special characters",function(){var solvedURL=_get__("solveURLParams")(defaultURL+"/{id}",{id:"456ß1234sd",accountId:"123"});return solvedURL.should.be.equal(defaultURL+"/456%C3%9F1234sd")})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"toQueryString":return _utils.toQueryString;case"solveURLParams":return _utils.solveURLParams}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/api/utils":15,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],51:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _constants=require("../../src/constants");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("constants",function(){it("FIXED_POINT should be an integer",function(){return _get__("FIXED_POINT").should.be.an.integer});it("DAPP_FEE should be an integer",function(){return _get__("DAPP_FEE").should.be.an.integer});it("DELEGATE_FEE should be an integer",function(){return _get__("DELEGATE_FEE").should.be.an.integer});it("IN_TRANSFER_FEE should be an integer",function(){return _get__("IN_TRANSFER_FEE").should.be.an.integer});it("OUT_TRANSFER_FEE should be an integer",function(){return _get__("OUT_TRANSFER_FEE").should.be.an.integer});it("MULTISIGNATURE_FEE should be an integer",function(){return _get__("MULTISIGNATURE_FEE").should.be.an.integer});it("SIGNATURE_FEE should be an integer",function(){return _get__("SIGNATURE_FEE").should.be.an.integer});it("TRANSFER_FEE should be an integer",function(){return _get__("TRANSFER_FEE").should.be.an.integer});it("VOTE_FEE should be an integer",function(){return _get__("VOTE_FEE").should.be.an.integer});it("DATA_FEE should be an integer",function(){return _get__("DATA_FEE").should.be.an.integer});it("EPOCH_TIME should be a Date instance",function(){return _get__("EPOCH_TIME").should.be.instanceOf(Date)});it("EPOCH_TIME_SECONDS should be an integer",function(){return _get__("EPOCH_TIME_SECONDS").should.be.an.integer});it("EPOCH_TIME_MILLISECONDS should be an integer",function(){return _get__("EPOCH_TIME_MILLISECONDS").should.be.an.integer});it("MAX_ADDRESS_NUMBER should be a string",function(){return _get__("MAX_ADDRESS_NUMBER").should.be.a("string")})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"FIXED_POINT":return _constants.FIXED_POINT;case"DAPP_FEE":return _constants.DAPP_FEE;case"DELEGATE_FEE":return _constants.DELEGATE_FEE;case"IN_TRANSFER_FEE":return _constants.IN_TRANSFER_FEE;case"OUT_TRANSFER_FEE":return _constants.OUT_TRANSFER_FEE;case"MULTISIGNATURE_FEE":return _constants.MULTISIGNATURE_FEE;case"SIGNATURE_FEE":return _constants.SIGNATURE_FEE;case"TRANSFER_FEE":return _constants.TRANSFER_FEE;case"VOTE_FEE":return _constants.VOTE_FEE;case"DATA_FEE":return _constants.DATA_FEE;case"EPOCH_TIME":return _constants.EPOCH_TIME;case"EPOCH_TIME_SECONDS":return _constants.EPOCH_TIME_SECONDS;case"EPOCH_TIME_MILLISECONDS":return _constants.EPOCH_TIME_MILLISECONDS;case"MAX_ADDRESS_NUMBER":return _constants.MAX_ADDRESS_NUMBER}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/constants":16,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],52:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _convert=require("../../src/cryptography/convert");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var hash=require("../../src/cryptography/hash");describe("convert",function(){var defaultPrivateKey="2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var defaultPublicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var defaultPublicKeyHash=Buffer.from("3a971fd02b4a07fc20aad1936d3cb1d263b96e0ffd938625e5c0db1ad8ba2a29","hex");var defaultPrivateKeyCurve=Buffer.from("6073c8f6198112b558bb5a98d150f3a0e35fb2b7a9c192cae1bbf37752df1950","hex");var defaultPublicKeyCurve=Buffer.from("d4e56ce5d0c7e2d4a9f05813ba37882985ee13a3f511bc6f99b905b2f87cdf11","hex");var defaultAddress="18160565574430594874L";var defaultBuffer=Buffer.from("åäö");var defaultHex="c3a5c3a4c3b6";var defaultStringWithMoreThanEightCharacters="0123456789";var defaultFirstEightCharactersReversed="76543210";var defaultDataForBuffer="Hello!";var defaultAddressFromBuffer="79600447942433L";describe("#bufferToHex",function(){it("should create a hex string from a Buffer",function(){var hex=_get__("bufferToHex")(defaultBuffer);return hex.should.be.equal(defaultHex)})});describe("#hexToBuffer",function(){it("should create a Buffer from a hex string",function(){var buffer=_get__("hexToBuffer")(defaultHex);return buffer.should.be.eql(defaultBuffer)});it("should throw TypeError with number",function(){return _get__("hexToBuffer").bind(null,123).should.throw(TypeError,"Argument must be a string.")});it("should throw TypeError with object",function(){return _get__("hexToBuffer").bind(null,{}).should.throw(TypeError,"Argument must be a string.")});it("should throw TypeError with non hex string",function(){return _get__("hexToBuffer").bind(null,"yKJj").should.throw(TypeError,"Argument must be a valid hex string.")});it("should throw TypeError with partially correct hex string",function(){return _get__("hexToBuffer").bind(null,"Abxzzzz").should.throw(TypeError,"Argument must be a valid hex string.")});it("should throw TypeError with odd number of string with partially correct hex string",function(){return _get__("hexToBuffer").bind(null,"Abxzzab").should.throw(TypeError,"Argument must be a valid hex string.")});it("should throw TypeError with odd number hex string with invalid hex",function(){return _get__("hexToBuffer").bind(null,"123xxxx").should.throw(TypeError,"Argument must be a valid hex string.")});it("should throw TypeError with odd number of hex string",function(){return _get__("hexToBuffer").bind(null,"c3a5c3a4c3b6a").should.throw(TypeError,"Argument must have a valid length of hex string.")})});describe("#getFirstEightBytesReversed",function(){it("should get the first eight bytes reversed from a Buffer",function(){var bufferEntry=Buffer.from(defaultStringWithMoreThanEightCharacters);var reversedAndCut=_get__("getFirstEightBytesReversed")(bufferEntry);return reversedAndCut.should.be.eql(Buffer.from(defaultFirstEightCharactersReversed))});it("should get the first eight bytes reversed from a string",function(){var reversedAndCut=_get__("getFirstEightBytesReversed")(defaultStringWithMoreThanEightCharacters);return reversedAndCut.should.be.eql(Buffer.from(defaultFirstEightCharactersReversed))})});describe("#toAddress",function(){it("should create an address from a buffer",function(){var bufferInit=Buffer.from(defaultDataForBuffer);var address=_get__("toAddress")(bufferInit);return address.should.be.eql(defaultAddressFromBuffer)})});describe("#getAddressFromPublicKey",function(){beforeEach(function(){sandbox.stub(_get__("hash"),"default").returns(defaultPublicKeyHash)});it("should generate address from publicKey",function(){var address=_get__("getAddressFromPublicKey")(defaultPublicKey);return address.should.be.equal(defaultAddress)})});describe("#getAddress",function(){beforeEach(function(){sandbox.stub(_get__("hash"),"default").returns(defaultPublicKeyHash)});it("should generate address from publicKey",function(){var address=_get__("getAddress")(defaultPublicKey);return address.should.be.equal(defaultAddress)})});describe("#convertPublicKeyEd2Curve",function(){it("should convert publicKey ED25519 to Curve25519 key",function(){var curveRepresentation=_get__("convertPublicKeyEd2Curve")(defaultPublicKey);return defaultPublicKeyCurve.equals(Buffer.from(curveRepresentation)).should.be.true})});describe("#convertPrivateKeyEd2Curve",function(){it("should convert privateKey ED25519 to Curve25519 key",function(){var curveRepresentation=_get__("convertPrivateKeyEd2Curve")(defaultPrivateKey);return defaultPrivateKeyCurve.equals(Buffer.from(curveRepresentation)).should.be.true})});describe("#bigNumberToBuffer",function(){it("should convert a big number to a buffer",function(){var bigNumber="58191285901858109";var addressSize=8;var expectedBuffer=Buffer.from("00cebcaa8d34153d","hex");return _get__("bigNumberToBuffer")(bigNumber,addressSize).should.be.eql(expectedBuffer)})});describe("#bufferToBigNumberString",function(){it("should convert a buffer to a big number",function(){var bigNumber="58191285901858109";var buffer=Buffer.from("00cebcaa8d34153d","hex");return _get__("bufferToBigNumberString")(buffer).should.be.equal(bigNumber)})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"bufferToHex":return _convert.bufferToHex;case"hexToBuffer":return _convert.hexToBuffer;case"getFirstEightBytesReversed":return _convert.getFirstEightBytesReversed;case"toAddress":return _convert.toAddress;case"hash":return hash;case"getAddressFromPublicKey":return _convert.getAddressFromPublicKey;case"getAddress":return _convert.getAddress;case"convertPublicKeyEd2Curve":return _convert.convertPublicKeyEd2Curve;case"convertPrivateKeyEd2Curve":return _convert.convertPrivateKeyEd2Curve;case"bigNumberToBuffer":return _convert.bigNumberToBuffer;case"bufferToBigNumberString":return _convert.bufferToBigNumberString}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../src/cryptography/convert":17,"../../src/cryptography/hash":19,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],53:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _encrypt=require("../../src/cryptography/encrypt");var _package=require("../../package.json");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var convert=require("../../src/cryptography/convert");var keys=require("../../src/cryptography/keys");var hash=require("../../src/cryptography/hash");describe("encrypt",function(){var defaultPassphrase="minute omit local rare sword knee banner pair rib museum shadow juice";var defaultPrivateKey="314852d7afb0d4c283692fef8a2cb40e30c7a5df2ed79994178c10ac168d6d977ef45cd525e95b7a86244bbd4eb4550914ad06301013958f4dd64d32ef7bc588";var defaultPublicKey="7ef45cd525e95b7a86244bbd4eb4550914ad06301013958f4dd64d32ef7bc588";var defaultSecondPassphrase="second secret";var defaultSecondPrivateKey="9ef4146f8166d32dc8051d3d9f3a0c4933e24aa8ccb439b5d9ad00078a89e2fc0401c8ac9f29ded9e1e4d5b6b43051cb25b22f27c7b7b35092161e851946f82f";var defaultSecondPublicKey="0401c8ac9f29ded9e1e4d5b6b43051cb25b22f27c7b7b35092161e851946f82f";var defaultMessage="Some default text.";var defaultPassword="myTotal53cr3t%&";var defaultEncryptedMessageWithNonce=void 0;var getPrivateAndPublicKeyBytesFromPassphraseStub=void 0;var hashStub=void 0;beforeEach(function(){defaultEncryptedMessageWithNonce={encryptedMessage:"299390b9cbb92fe6a43daece2ceaecbacd01c7c03cfdba51d693b5c0e2b65c634115",nonce:"df4c8b09e270d2cb3f7b3d53dfa8a6f3441ad3b14a13fb66"};sandbox.stub(_get__("convert"),"convertPrivateKeyEd2Curve").returns(Buffer.from("d8be8cacb03fb02f34e85030f902b635f364d6c23f090c7640e9dc9c568e7d5e","hex"));sandbox.stub(_get__("convert"),"convertPublicKeyEd2Curve").returns(Buffer.from("f245e78c83196d73452e55581ef924a1b792d352c142257aa3af13cded2e7905","hex"));getPrivateAndPublicKeyBytesFromPassphraseStub=sandbox.stub(_get__("keys"),"getPrivateAndPublicKeyBytesFromPassphrase");getPrivateAndPublicKeyBytesFromPassphraseStub.withArgs(defaultPassphrase).returns({privateKey:Buffer.from(defaultPrivateKey,"hex"),publicKey:Buffer.from(defaultPublicKey,"hex")});getPrivateAndPublicKeyBytesFromPassphraseStub.withArgs(defaultSecondPassphrase).returns({privateKey:Buffer.from(defaultSecondPrivateKey,"hex"),publicKey:Buffer.from(defaultSecondPublicKey,"hex")});hashStub=sandbox.stub(_get__("hash"),"default").returns(Buffer.from("d43eed9049dd8f35106c720669a1148b2c6288d9ea517b936c33a1d84117a760","hex"))});describe("#encryptMessageWithPassphrase",function(){var encryptedMessage=void 0;beforeEach(function(){encryptedMessage=_get__("encryptMessageWithPassphrase")(defaultMessage,defaultPassphrase,defaultPublicKey)});it("should encrypt a message",function(){return encryptedMessage.should.have.property("encryptedMessage").be.hexString.with.length(68)});it("should output the nonce",function(){return encryptedMessage.should.have.property("nonce").be.hexString.with.length(48)})});describe("#decryptMessageWithPassphrase",function(){it("should be able to decrypt the message correctly using the receiver’s secret passphrase",function(){var decryptedMessage=_get__("decryptMessageWithPassphrase")(defaultEncryptedMessageWithNonce.encryptedMessage,defaultEncryptedMessageWithNonce.nonce,defaultPassphrase,defaultPublicKey);return decryptedMessage.should.be.equal(defaultMessage)});it("should inform the user if the nonce is the wrong length",function(){return _get__("decryptMessageWithPassphrase").bind(null,defaultEncryptedMessageWithNonce.encryptedMessage,defaultEncryptedMessageWithNonce.encryptedMessage.slice(0,2),defaultPassphrase,defaultPublicKey).should.throw("Expected 24-byte nonce but got length 1.")});it("should inform the user if something goes wrong during decryption",function(){return _get__("decryptMessageWithPassphrase").bind(null,defaultEncryptedMessageWithNonce.encryptedMessage.slice(0,2),defaultEncryptedMessageWithNonce.nonce,defaultSecondPassphrase,defaultPublicKey).should.throw("Something went wrong during decryption. Is this the full encrypted message?")})});describe("encrypt and decrypt passphrase with password",function(){beforeEach(function(){hashStub.returns(Buffer.from("e09dfc943d65d63f4f31e444c81afc6d5cf442c988fb87180165dd7119d3ae61","hex"))});describe("#encryptPassphraseWithPassword",function(){var startTime=void 0;var cipher=void 0;beforeEach(function(){startTime=Date.now();cipher=_get__("encryptPassphraseWithPassword")(defaultPassphrase,defaultPassword)});it("should encrypt a passphrase",function(){return cipher.should.have.property("cipher").and.be.hexString});it("should output the IV",function(){return cipher.should.have.property("iv").and.be.hexString.and.have.length(32)});it("should output the salt",function(){return cipher.should.have.property("salt").and.be.hexString.and.have.length(32)});it("should output the tag",function(){return cipher.should.have.property("tag").and.be.hexString.and.have.length(32)});it("should output the current version of LiskJS",function(){return cipher.should.have.property("version").which.is.equal(_get__("version"))});it("should take more than 0.5 seconds @node-only",function(){var endTime=Date.now();return(endTime-startTime).should.be.above(500)});it("should take less than 2 seconds @node-only",function(){var endTime=Date.now();return(endTime-startTime).should.be.below(2e3)})});describe("#decryptPassphraseWithPassword",function(){var cipherIvSaltTagAndVersion=void 0;beforeEach(function(){cipherIvSaltTagAndVersion={cipher:"c3b3a101f1c2a09c7ffd0ea207a7802d728e74027836de195be665e8e41c27ffe1fe1eebdf40874447c26cf8942c72db3252c2d76168137f2fc99c84b8ac353af4a64392a1",iv:"8be18e58b5a0ca8d56d84db439041167",salt:"598e2f237bf7b58ae00bc6fc006c6963",tag:"7498e143aba4335b942c7c5f68f90402",version:_get__("version")}});it("should decrypt a text with a password",function(){var decrypted=_get__("decryptPassphraseWithPassword")(cipherIvSaltTagAndVersion,defaultPassword);return decrypted.should.be.eql(defaultPassphrase)});it("should inform the user if the salt has been altered",function(){cipherIvSaltTagAndVersion.salt="00"+cipherIvSaltTagAndVersion.salt.slice(2);return _get__("decryptPassphraseWithPassword").bind(null,cipherIvSaltTagAndVersion,defaultPassword).should.throw("Unsupported state or unable to authenticate data")});it("should inform the user if the tag has been shortened",function(){cipherIvSaltTagAndVersion.tag=cipherIvSaltTagAndVersion.tag.slice(0,30);return _get__("decryptPassphraseWithPassword").bind(null,cipherIvSaltTagAndVersion,defaultPassword).should.throw("Tag must be 16 bytes.")});it("should inform the user if the tag is not a hex string",function(){cipherIvSaltTagAndVersion.tag=cipherIvSaltTagAndVersion.tag.slice(0,30)+"gg";return _get__("decryptPassphraseWithPassword").bind(null,cipherIvSaltTagAndVersion,defaultPassword).should.throw("Argument must be a valid hex string.")});it("should inform the user if the tag has been altered",function(){cipherIvSaltTagAndVersion.tag="00"+cipherIvSaltTagAndVersion.tag.slice(2);return _get__("decryptPassphraseWithPassword").bind(null,cipherIvSaltTagAndVersion,defaultPassword).should.throw("Unsupported state or unable to authenticate data")})});describe("integration test",function(){it("should encrypt a given passphrase with a password and decrypt it back to the original passphrase @node-only",function(){var cipher=_get__("encryptPassphraseWithPassword")(defaultPassphrase,defaultPassword);var decryptedString=_get__("decryptPassphraseWithPassword")(cipher,defaultPassword);return decryptedString.should.be.eql(defaultPassphrase)})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"convert":return convert;case"keys":return keys;case"hash":return hash;case"encryptMessageWithPassphrase":return _encrypt.encryptMessageWithPassphrase;case"decryptMessageWithPassphrase":return _encrypt.decryptMessageWithPassphrase;case"encryptPassphraseWithPassword":return _encrypt.encryptPassphraseWithPassword;case"version":return _package.version;case"decryptPassphraseWithPassword":return _encrypt.decryptPassphraseWithPassword}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../package.json":2,"../../src/cryptography/convert":17,"../../src/cryptography/encrypt":18,"../../src/cryptography/hash":19,"../../src/cryptography/keys":21,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],54:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _hash=require("../../src/cryptography/hash");var _hash2=_interopRequireDefault(_hash);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("hash",function(){var defaultText="text123*";var arrayToHash=void 0;var defaultHash=void 0;beforeEach(function(){defaultHash=Buffer.from("7607d6792843d6003c12495b54e34517a508d2a8622526aff1884422c5478971","hex");arrayToHash=[1,2,3]});it("should generate a sha256 hash from a Buffer",function(){var testBuffer=Buffer.from(defaultText);var hash=_get__("hashFunction")(testBuffer);return hash.should.be.eql(defaultHash)});it("should generate a sha256 hash from a utf8 string",function(){var hash=_get__("hashFunction")(defaultText,"utf8");return hash.should.be.eql(defaultHash)});it("should generate a sha256 hash from a hex string",function(){var testHex=Buffer.from(defaultText).toString("hex");var hash=_get__("hashFunction")(testHex,"hex");return hash.should.be.eql(defaultHash)});it('should throw on unknown format when trying a string with format "utf32"',function(){return _get__("hashFunction").bind(null,defaultText,"utf32").should.throw("Unsupported string format. Currently only `hex` and `utf8` are supported.")});it("should throw on unknown format when using an array",function(){return _get__("hashFunction").bind(null,arrayToHash).should.throw("Unsupported data format. Currently only Buffers or `hex` and `utf8` strings are supported.")})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"hashFunction":return _hash2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../src/cryptography/hash":19,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],55:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _cryptography=require("../../src/cryptography");var _cryptography2=_interopRequireDefault(_cryptography);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("cryptography index.js",function(){it("should export an object",function(){return _get__("cryptography").should.be.an("object")})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"cryptography":return _cryptography2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/cryptography":20,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],56:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _keys3=require("../../src/cryptography/keys");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var convert=require("../../src/cryptography/convert");var hash=require("../../src/cryptography/hash");describe("keys",function(){var defaultPassphrase="secret";var defaultPassphraseHash="2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b";var defaultPrivateKey="2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var defaultPublicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var defaultAddressAndPublicKey={publicKey:defaultPublicKey,address:"16402986683325069355L"};var bufferToHexStub=void 0;beforeEach(function(){bufferToHexStub=sandbox.stub(_get__("convert"),"bufferToHex");bufferToHexStub.withArgs(Buffer.from(defaultPrivateKey,"hex")).returns(defaultPrivateKey);bufferToHexStub.withArgs(Buffer.from(defaultPublicKey,"hex")).returns(defaultPublicKey);sandbox.stub(_get__("hash"),"default").returns(Buffer.from(defaultPassphraseHash,"hex"))});describe("#getPrivateAndPublicKeyBytesFromPassphrase",function(){var keyPair=void 0;beforeEach(function(){keyPair=_get__("getPrivateAndPublicKeyBytesFromPassphrase")(defaultPassphrase)});it("should create buffer publicKey",function(){return Buffer.from(keyPair.publicKey).toString("hex").should.be.equal(defaultPublicKey)});it("should create buffer privateKey",function(){return Buffer.from(keyPair.privateKey).toString("hex").should.be.equal(defaultPrivateKey)})});describe("#getPrivateAndPublicKeyFromPassphrase",function(){var keyPair=void 0;beforeEach(function(){keyPair=_get__("getPrivateAndPublicKeyFromPassphrase")(defaultPassphrase)});it("should generate the correct publicKey from a passphrase",function(){return keyPair.should.have.property("publicKey").and.be.equal(defaultPublicKey)});it("should generate the correct privateKey from a passphrase",function(){return keyPair.should.have.property("privateKey").and.be.equal(defaultPrivateKey)})});describe("#getKeys",function(){var keyPair=void 0;beforeEach(function(){keyPair=_get__("getKeys")(defaultPassphrase)});it("should generate the correct publicKey from a passphrase",function(){return keyPair.should.have.property("publicKey").and.be.equal(defaultPublicKey)});it("should generate the correct privateKey from a passphrase",function(){return keyPair.should.have.property("privateKey").and.be.equal(defaultPrivateKey)})});describe("#getAddressAndPublicKeyFromPassphrase",function(){it("should create correct address and publicKey",function(){return _get__("getAddressAndPublicKeyFromPassphrase")(defaultPassphrase).should.eql(defaultAddressAndPublicKey)})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"convert":return convert;case"hash":return hash;case"getPrivateAndPublicKeyBytesFromPassphrase":return _keys3.getPrivateAndPublicKeyBytesFromPassphrase;case"getPrivateAndPublicKeyFromPassphrase":return _keys3.getPrivateAndPublicKeyFromPassphrase;case"getKeys":return _keys3.getKeys;case"getAddressAndPublicKeyFromPassphrase":return _keys3.getAddressAndPublicKeyFromPassphrase}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../src/cryptography/convert":17,"../../src/cryptography/hash":19,"../../src/cryptography/keys":21,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],57:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _sign=require("../../src/cryptography/sign");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var keys=require("../../src/cryptography/keys");var makeInvalid=function makeInvalid(str){var char=str[0]==="0"?"1":"0";return""+char+str.slice(1)};var changeLength=function changeLength(str){return"00"+str};describe("sign",function(){var defaultPassphrase="minute omit local rare sword knee banner pair rib museum shadow juice";var defaultPrivateKey="314852d7afb0d4c283692fef8a2cb40e30c7a5df2ed79994178c10ac168d6d977ef45cd525e95b7a86244bbd4eb4550914ad06301013958f4dd64d32ef7bc588";var defaultPublicKey="7ef45cd525e95b7a86244bbd4eb4550914ad06301013958f4dd64d32ef7bc588";var defaultSecondPassphrase="second secret";var defaultSecondPrivateKey="9ef4146f8166d32dc8051d3d9f3a0c4933e24aa8ccb439b5d9ad00078a89e2fc0401c8ac9f29ded9e1e4d5b6b43051cb25b22f27c7b7b35092161e851946f82f";var defaultSecondPublicKey="0401c8ac9f29ded9e1e4d5b6b43051cb25b22f27c7b7b35092161e851946f82f";var defaultMessage="Some default text.";var defaultSignature="974eeac2c7e7d9da42aa273c8caae8e6eb766fa29a31b37732f22e6d2e61e8402106849e61e3551ff70d7d359170a6198669e1061b6b4aa61997e26b87e3a704";var defaultSecondSignature="fd938f69d33d70c940bb994579e11f4e5ee18e715634997ab9753305d5ec0d031aee03f6da8c1c259c1fdec34b4ef546e629c07bb3c77a4bcee9db017dac880d";var defaultPrintedMessage=("\n-----BEGIN LISK SIGNED MESSAGE-----\n-----MESSAGE-----\n"+defaultMessage+"\n-----PUBLIC KEY-----\n"+defaultPublicKey+"\n-----SIGNATURE-----\n"+defaultSignature+"\n-----END LISK SIGNED MESSAGE-----\n").trim();var defaultSecondSignedPrintedMessage=("\n-----BEGIN LISK SIGNED MESSAGE-----\n-----MESSAGE-----\n"+defaultMessage+"\n-----PUBLIC KEY-----\n"+defaultPublicKey+"\n-----SECOND PUBLIC KEY-----\n"+defaultSecondPublicKey+"\n-----SIGNATURE-----\n"+defaultSignature+"\n-----SECOND SIGNATURE-----\n"+defaultSecondSignature+"\n-----END LISK SIGNED MESSAGE-----\n").trim();var defaultData=Buffer.from("This is some data");var defaultDataSignature="b8704e11c4d9fad9960c7b6a69dcf48c1bede5b74ed8974cd005d9a407deef618dd800fe69ceed1fd52bb1e0881e71aec137c35b90eda9afe93716a5652ee009";var defaultSignedMessage=void 0;var defaultDoubleSignedMessage=void 0;var getPrivateAndPublicKeyBytesFromPassphraseStub=void 0;beforeEach(function(){defaultSignedMessage={message:defaultMessage,publicKey:defaultPublicKey,signature:defaultSignature};defaultDoubleSignedMessage={message:defaultMessage,publicKey:defaultPublicKey,secondPublicKey:defaultSecondPublicKey,signature:defaultSignature,secondSignature:defaultSecondSignature};getPrivateAndPublicKeyBytesFromPassphraseStub=sandbox.stub(_get__("keys"),"getPrivateAndPublicKeyBytesFromPassphrase");getPrivateAndPublicKeyBytesFromPassphraseStub.withArgs(defaultPassphrase).returns({privateKey:Buffer.from(defaultPrivateKey,"hex"),publicKey:Buffer.from(defaultPublicKey,"hex")});getPrivateAndPublicKeyBytesFromPassphraseStub.withArgs(defaultSecondPassphrase).returns({privateKey:Buffer.from(defaultSecondPrivateKey,"hex"),publicKey:Buffer.from(defaultSecondPublicKey,"hex")})});describe("#signMessageWithPassphrase",function(){it("should create a signed message using a secret passphrase",function(){var signedMessage=_get__("signMessageWithPassphrase")(defaultMessage,defaultPassphrase);return signedMessage.should.be.eql(defaultSignedMessage)})});describe("#verifyMessageWithPublicKey",function(){it("should detect invalid publicKeys",function(){return _get__("verifyMessageWithPublicKey").bind(null,{message:defaultMessage,signature:defaultSignature,publicKey:_get__("changeLength")(defaultPublicKey)}).should.throw("Invalid publicKey, expected 32-byte publicKey")});it("should detect invalid signatures",function(){return _get__("verifyMessageWithPublicKey").bind(null,{message:defaultMessage,signature:_get__("changeLength")(defaultSignature),publicKey:defaultPublicKey}).should.throw("Invalid signature length, expected 64-byte signature")});it("should return false if the signature is invalid",function(){var verification=_get__("verifyMessageWithPublicKey")({message:defaultMessage,signature:_get__("makeInvalid")(defaultSignature),publicKey:defaultPublicKey});return verification.should.be.false});it("should return true if the signature is valid",function(){var verification=_get__("verifyMessageWithPublicKey")(defaultSignedMessage);return verification.should.be.true})});describe("#signMessageWithTwoPassphrases",function(){it("should create a message signed by two secret passphrases",function(){var signature=_get__("signMessageWithTwoPassphrases")(defaultMessage,defaultPassphrase,defaultSecondPassphrase);return signature.should.be.eql(defaultDoubleSignedMessage)})});describe("#verifyMessageWithTwoPublicKeys",function(){it("should throw on invalid first publicKey length",function(){return _get__("verifyMessageWithTwoPublicKeys").bind(null,(0,_assign2.default)({},defaultDoubleSignedMessage,{publicKey:_get__("changeLength")(defaultPublicKey)})).should.throw("Invalid first publicKey, expected 32-byte publicKey")});it("should throw on invalid second publicKey length",function(){return _get__("verifyMessageWithTwoPublicKeys").bind(null,(0,_assign2.default)({},defaultDoubleSignedMessage,{secondPublicKey:_get__("changeLength")(defaultSecondPublicKey)})).should.throw("Invalid second publicKey, expected 32-byte publicKey")});it("should throw on invalid primary signature length",function(){return _get__("verifyMessageWithTwoPublicKeys").bind(null,(0,_assign2.default)({},defaultDoubleSignedMessage,{signature:_get__("changeLength")(defaultSignature)})).should.throw("Invalid first signature length, expected 64-byte signature")});it("should throw on invalid secondary signature length",function(){return _get__("verifyMessageWithTwoPublicKeys").bind(null,(0,_assign2.default)({},defaultDoubleSignedMessage,{secondSignature:_get__("changeLength")(defaultSecondSignature)})).should.throw("Invalid second signature length, expected 64-byte signature")});it("should return false for incorrect first signature",function(){var verified=_get__("verifyMessageWithTwoPublicKeys")((0,_assign2.default)({},defaultDoubleSignedMessage,{signature:_get__("makeInvalid")(defaultSignature)}));return verified.should.be.false});it("should return false for incorrect second signature",function(){var verified=_get__("verifyMessageWithTwoPublicKeys")((0,_assign2.default)({},defaultDoubleSignedMessage,{secondSignature:_get__("makeInvalid")(defaultSecondSignature)}));return verified.should.be.false});it("should return true for two valid signatures",function(){var verified=_get__("verifyMessageWithTwoPublicKeys")(defaultDoubleSignedMessage);return verified.should.be.true})});describe("#printSignedMessage",function(){it("should wrap a single signed message into a printed Lisk template",function(){var printedMessage=_get__("printSignedMessage")({message:defaultMessage,signature:defaultSignature,publicKey:defaultPublicKey});return printedMessage.should.be.equal(defaultPrintedMessage)});it("should wrap a second signed message into a printed Lisk template",function(){var printedMessage=_get__("printSignedMessage")({message:defaultMessage,signature:defaultSignature,publicKey:defaultPublicKey,secondSignature:defaultSecondSignature,secondPublicKey:defaultSecondPublicKey});return printedMessage.should.be.equal(defaultSecondSignedPrintedMessage)})});describe("#signAndPrintMessage",function(){it("should sign the message once and wrap it into a printed Lisk template",function(){var signedAndPrintedMessage=_get__("signAndPrintMessage")(defaultMessage,defaultPassphrase);return signedAndPrintedMessage.should.be.equal(defaultPrintedMessage)});it("should sign the message twice and wrap it into a printed Lisk template",function(){var signedAndPrintedMessage=_get__("signAndPrintMessage")(defaultMessage,defaultPassphrase,defaultSecondPassphrase);return signedAndPrintedMessage.should.be.equal(defaultSecondSignedPrintedMessage)})});describe("#signData",function(){var signature=void 0;beforeEach(function(){signature=_get__("signData")(defaultData,defaultPassphrase)});it("should sign a transaction",function(){return signature.should.be.equal(defaultDataSignature)})});describe("#verifyData",function(){it("should return false for an invalid signature",function(){var verification=_get__("verifyData")(defaultData,_get__("makeInvalid")(defaultDataSignature),defaultPublicKey);return verification.should.be.false});it("should return true for a valid signature",function(){var verification=_get__("verifyData")(defaultData,defaultDataSignature,defaultPublicKey);return verification.should.be.true})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"keys":return keys;case"signMessageWithPassphrase":return _sign.signMessageWithPassphrase;case"verifyMessageWithPublicKey":return _sign.verifyMessageWithPublicKey;case"changeLength":return changeLength;case"makeInvalid":return makeInvalid;case"signMessageWithTwoPassphrases":return _sign.signMessageWithTwoPassphrases;case"verifyMessageWithTwoPublicKeys":return _sign.verifyMessageWithTwoPublicKeys;case"printSignedMessage":return _sign.printSignedMessage;case"signAndPrintMessage":return _sign.signAndPrintMessage;case"signData":return _sign.signData;case"verifyData":return _sign.verifyData}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../src/cryptography/keys":21,"../../src/cryptography/sign":22,"babel-runtime/core-js/object/assign":89,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],58:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _passphrase=require("../../src/passphrase");var _passphrase2=_interopRequireDefault(_passphrase);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("passphrase index.js",function(){it("should export an object",function(){return _get__("passphrase").should.be.an("object")});describe("menmonic module",function(){it("should have the BIP39 Mnemonic module",function(){return _get__("passphrase").Mnemonic.should.be.ok})});describe("validation module",function(){it("should have the validation module",function(){return _get__("passphrase").validation.should.be.ok})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"passphrase":return _passphrase2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/passphrase":23,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],59:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _bip=require("bip39");var _bip2=_interopRequireDefault(_bip);var _validation=require("../../src/passphrase/validation");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("passphrase validation",function(){describe("countPassphraseWhitespaces",function(){describe("given a valid passphrase",function(){var expectedAmountOfWhitespaces=11;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with an extra whitespace at the end",function(){var expectedAmountOfWhitespaces=12;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge ";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with an extra whitespace at the beginning",function(){var expectedAmountOfWhitespaces=12;var passphrase=" model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with extra whitespaces between the first words",function(){var expectedAmountOfWhitespaces=12;var passphrase="model  actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with extra whitespaces between all words",function(){var expectedAmountOfWhitespaces=22;var passphrase="model  actor  shallow  eight  glue  upper  seat  lobster  reason  label  enlist  bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with tab in the beginning",function(){var expectedAmountOfWhitespaces=12;var passphrase="\tmodel actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with vertical tab in the beginning",function(){var expectedAmountOfWhitespaces=12;var passphrase="\vmodel actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with form feed in the beginning",function(){var expectedAmountOfWhitespaces=12;var passphrase="\fmodel actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with nonbreaking space in the beginning",function(){var expectedAmountOfWhitespaces=12;var passphrase=" model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with byte order mark in the beginning",function(){var expectedAmountOfWhitespaces=12;var passphrase="\ufeffmodel actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})});describe("given a passphrase with no whitespaces",function(){var expectedAmountOfWhitespaces=0;var passphrase="modelactorshalloweightglueupperseatlobsterreasonlabelenlistbridge";it("should return the expected amount of whitespaces",function(){return _get__("countPassphraseWhitespaces")(passphrase).should.be.equal(expectedAmountOfWhitespaces)})})});describe("countPassphraseWords",function(){describe("given a valid passphrase",function(){var expectedAmountOfWords=12;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the amount of words",function(){return _get__("countPassphraseWords")(passphrase).should.be.equal(expectedAmountOfWords)})});describe("given a passphrase with 13 words",function(){var expectedAmountOfWords=13;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge model";it("should return the amount of words",function(){return _get__("countPassphraseWords")(passphrase).should.be.equal(expectedAmountOfWords)})});describe("given a passphrase with 9 words",function(){var expectedAmountOfWords=9;var passphrase="model actor shallow eight glue upper seat lobster reason";it("should return the amount of words",function(){return _get__("countPassphraseWords")(passphrase).should.be.equal(expectedAmountOfWords)})});describe("given a passphrase with 12 words and extra whitespaces",function(){var expectedAmountOfWords=12;var passphrase="model  actor  shallow  eight glue upper seat lobster reason label enlist bridge";it("should ignore the whitespaces and return the amount of words",function(){return _get__("countPassphraseWords")(passphrase).should.be.equal(expectedAmountOfWords)})});describe("given a passphrase with no words but whitespaces",function(){var expectedAmountOfWords=0;var passphrase="     ";it("should ignore the whitespaces and return the amount of words",function(){return _get__("countPassphraseWords")(passphrase).should.be.equal(expectedAmountOfWords)})});describe("given an empty string passphrase",function(){var expectedAmountOfWords=0;var passphrase="";it("should return the amount of words",function(){return _get__("countPassphraseWords")(passphrase).should.be.equal(expectedAmountOfWords)})})});describe("countUppercaseCharacters",function(){describe("given a passphrase without uppercase character",function(){var expectedAmountUppercaseCharacter=0;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return the number of uppercase characters",function(){var uppercased=_get__("countUppercaseCharacters")(passphrase);return uppercased.should.be.equal(expectedAmountUppercaseCharacter)})});describe("given a passphrase with uppercase character",function(){var expectedAmountOfCapitalCharacters=4;var passphrase="Model Actor shallow eight glue upPer seat lobSter reason label enlist bridge";it("should return the amount of uppercase character",function(){var uppercased=_get__("countUppercaseCharacters")(passphrase);return uppercased.should.be.equal(expectedAmountOfCapitalCharacters)})});describe("given a passphrase with all uppercase character",function(){var expectedAmountOfCapitalCharacters=65;var passphrase="MODEL ACTOR SHALLOW EIGHT GLUE UPPER SEAT LOBSTER REASON LABEL ENLIST BRIDGE";it("should return the amount of uppercase character",function(){return _get__("countUppercaseCharacters")(passphrase).should.be.equal(expectedAmountOfCapitalCharacters)})})});describe("locateUppercaseCharacters",function(){var emptyArray=[];describe("given a string without uppercase character",function(){var string="a string without uppercase character";it("should return an empty array",function(){return _get__("locateUppercaseCharacters")(string).should.be.eql(emptyArray)})});describe("given a string with uppercase character",function(){var string="a String with SOME uppercase characteR";var uppercaseCharacters=[2,14,15,16,17,37];it("should return the array with the location of the uppercase character",function(){return _get__("locateUppercaseCharacters")(string).should.be.eql(uppercaseCharacters)})})});describe("locateWhitespaces",function(){var emptyArray=[];describe("given a string without whitespaces",function(){var string="abcdefghijklkmnop";it("should return an empty array",function(){return _get__("locateWhitespaces")(string).should.be.eql(emptyArray)})});describe("given a string with whitespaces",function(){var string="abc defghijk lkmnop";it("should return an empty array",function(){return _get__("locateWhitespaces")(string).should.be.eql(emptyArray)})});describe("given a string with a whitespace in the beginning",function(){var string=" abc defghijk lkmnop";var expectedWhitespaceLocation=[0];it("should return the array with the location of the whitespace",function(){return _get__("locateWhitespaces")(string).should.be.eql(expectedWhitespaceLocation)})});describe("given a string with a whitespace in the end",function(){var string="abc defghijk lkmnop ";var expectedWhitespaceLocation=[19];it("should return the array with the location of the whitespace",function(){return _get__("locateWhitespaces")(string).should.be.eql(expectedWhitespaceLocation)})});describe("given a string with extra whitespaces",function(){var string="abc  defghijk  lkmnop ";var expectedWhitespaceLocation=[4,14,21];it("should return the array with the location of the whitespaces",function(){return _get__("locateWhitespaces")(string).should.be.eql(expectedWhitespaceLocation)})});describe("given a string with extra whitespaces",function(){var string="abc  defghijk\t \nlkmnop  ";var expectedWhitespaceLocation=[4,14,15,23];it("should return the array with the location of the whitespaces",function(){return _get__("locateWhitespaces")(string).should.be.eql(expectedWhitespaceLocation)})})});describe("getPassphraseValidationErrors",function(){var emptyErrorArray=[];describe("given a valid passphrase",function(){var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return an empty array",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(emptyErrorArray)})});describe("given a passphrase with too many words",function(){var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge actor";var passphraseTooManyWordsErrors=[{code:"INVALID_AMOUNT_OF_WORDS",message:"Passphrase contains 13 words instead of expected 12. Please check the passphrase.",expected:12,actual:13},{code:"INVALID_AMOUNT_OF_WHITESPACES",message:"Passphrase contains 12 whitespaces instead of expected 11. Please check the passphrase.",expected:11,actual:12,location:[]},{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the errors",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseTooManyWordsErrors)})});describe("given a passphrase with too few words",function(){var passphrase="model actor shallow eight glue upper seat lobster reason label enlist";var passphraseTooFewWordsErrors=[{code:"INVALID_AMOUNT_OF_WORDS",message:"Passphrase contains 11 words instead of expected 12. Please check the passphrase.",expected:12,actual:11},{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the errors",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseTooFewWordsErrors)})});describe("given a passphrase with an extra whitespace in the beginning",function(){var passphrase=" model actor shallow eight glue upper seat lobster reason label enlist bridge";var passphraseInvalidMnemonicErrors=[{code:"INVALID_AMOUNT_OF_WHITESPACES",message:"Passphrase contains 12 whitespaces instead of expected 11. Please check the passphrase.",expected:11,actual:12,location:[0]},{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the errors",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseInvalidMnemonicErrors)})});describe("given a passphrase with an extra whitespace in the end",function(){var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge ";var passphraseInvalidMnemonicErrors=[{code:"INVALID_AMOUNT_OF_WHITESPACES",message:"Passphrase contains 12 whitespaces instead of expected 11. Please check the passphrase.",expected:11,actual:12,location:[76]},{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the errors",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseInvalidMnemonicErrors)})});describe("given a passphrase with too many whitespaces in between words",function(){var passphrase="model actor shallow eight glue  upper seat  lobster reason label enlist bridge";var passphraseInvalidMnemonicErrors=[{code:"INVALID_AMOUNT_OF_WHITESPACES",message:"Passphrase contains 13 whitespaces instead of expected 11. Please check the passphrase.",expected:11,actual:13,location:[31,43]},{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the errors",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseInvalidMnemonicErrors)})});describe("given a passphrase with uppercase characters",function(){var passphrase="modEl actor shallow eight glue upper sEat lobster reaSon label enlist bridge";var passphraseWithUppercaseCharacterErrors=[{code:"INVALID_AMOUNT_OF_UPPERCASE_CHARACTER",message:"Passphrase contains 3 uppercase character instead of expected 0. Please check the passphrase.",expected:0,actual:3,location:[3,38,53]},{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the errors",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseWithUppercaseCharacterErrors)})});describe("given a passphrase that is an invalid mnemonic passphrase",function(){var passphrase="model actor shallow eight glue upper seat lobster reason label engage bridge";var passphraseInvalidMnemonicError=[{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the error",function(){return _get__("getPassphraseValidationErrors")(passphrase).should.be.eql(passphraseInvalidMnemonicError)})});describe("given a passphrase that uses the correct wordlist for the passphrase",function(){var wordlist=_get__("Mnemonic").wordlists.english;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge";it("should return an empty array",function(){return _get__("getPassphraseValidationErrors")(passphrase,wordlist).should.be.eql(emptyErrorArray)})});describe("given a passphrase that uses a different wordlist for the passphrase",function(){var wordlist=_get__("Mnemonic").wordlists.spanish;var passphrase="model actor shallow eight glue upper seat lobster reason label enlist bridge";var passphraseInvalidMnemonicError=[{code:"INVALID_MNEMONIC",message:"Passphrase is not a valid mnemonic passphrase. Please check the passphrase.",expected:true,actual:false}];it("should return the array with the error",function(){return _get__("getPassphraseValidationErrors")(passphrase,wordlist).should.be.eql(passphraseInvalidMnemonicError)})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"countPassphraseWhitespaces":return _validation.countPassphraseWhitespaces;case"countPassphraseWords":return _validation.countPassphraseWords;case"countUppercaseCharacters":return _validation.countUppercaseCharacters;case"locateUppercaseCharacters":return _validation.locateUppercaseCharacters;case"locateWhitespaces":return _validation.locateWhitespaces;case"getPassphraseValidationErrors":return _validation.getPassphraseValidationErrors;case"Mnemonic":return _bip2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/passphrase/validation":24,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,bip39:108}],60:[function(require,module,exports){(function(process,global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _sinon=require("sinon");var _sinon2=_interopRequireDefault(_sinon);var _chai=require("chai");var _chai2=_interopRequireDefault(_chai);require("chai/register-should");var _chaiAsPromised=require("chai-as-promised");var _chaiAsPromised2=_interopRequireDefault(_chaiAsPromised);var _sinonChai=require("sinon-chai");var _sinonChai2=_interopRequireDefault(_sinonChai);var _jsNacl=require("js-nacl");var _jsNacl2=_interopRequireDefault(_jsNacl);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}process.env.NODE_ENV="test";_get__("Assertion").addProperty("hexString",function handleAssert(){var actual=this._obj;new(_get__("Assertion"))(actual).to.be.a("string");var expected=Buffer.from(actual,"hex").toString("hex");this.assert(expected===actual,"expected #{this} to be a hexString","expected #{this} not to be a hexString")});_get__("Assertion").addProperty("integer",function handleAssert(){var actual=this._obj;new(_get__("Assertion"))(actual).to.be.a("number");var expected=parseInt(actual,10);this.assert(actual===expected,"expected #{this} to be an integer","expected #{this} not to be an integer")});[_get__("sinonChai"),_get__("chaiAsPromised")].forEach(function(plugin){return _get__("chai").use(plugin)});global.sinon=_get__("sinon");global.sandbox=_get__("sinon").sandbox.create({useFakeTimers:true});_get__("naclFactory").instantiate(function(nacl){global.naclInstance=nacl});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"Assertion":return _chai.Assertion;case"sinonChai":return _sinonChai2.default;case"chaiAsPromised":return _chaiAsPromised2.default;case"chai":return _chai2.default;case"sinon":return _sinon2.default;case"naclFactory":return _jsNacl2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,require("_process"),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{_process:407,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150,chai:152,"chai-as-promised":151,"chai/register-should":184,"js-nacl":355,sinon:445,"sinon-chai":444}],61:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _transfer=require("../../src/transactions/0_transfer");var _transfer2=_interopRequireDefault(_transfer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#transfer transaction",function(){var fixedPoint=Math.pow(10,8);var recipientId="58191285901858109L";var testData="data";var passphrase="secret";var secondPassphrase="second secret";var transactionType=0;var publicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var amount="1000";var fee=(.1*fixedPoint).toString();var feeWithData=(.2*fixedPoint).toString();var timeWithOffset=38350076;var getTimeWithOffsetStub=void 0;var transferTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset)});describe("with first passphrase",function(){describe("without data",function(){beforeEach(function(){transferTransaction=_get__("transfer")({recipientId:recipientId,amount:amount,passphrase:passphrase})});it("should create a transfer transaction",function(){return transferTransaction.should.be.ok});it("should use time.getTimeWithOffset to calculate the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to calculate the timestamp",function(){var offset=-10;_get__("transfer")({recipientId:recipientId,amount:amount,passphrase:passphrase,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});it("should be an object",function(){return transferTransaction.should.be.an("object")});it("should have id string",function(){return transferTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 0",function(){return transferTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to provided amount",function(){return transferTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to transfer fee",function(){return transferTransaction.should.have.property("fee").and.be.a("string").and.equal(fee)});it("should have recipientId string equal to provided recipient id",function(){return transferTransaction.should.have.property("recipientId").and.be.a("string").and.equal(recipientId)});it("should have senderPublicKey hex string equal to sender public key",function(){return transferTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return transferTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return transferTransaction.should.have.property("signature").and.be.hexString});it("should have an empty asset object",function(){return transferTransaction.should.have.property("asset").and.be.an("object").and.be.empty});it("should not have the second signature property",function(){return transferTransaction.should.not.have.property("signSignature")})});describe("with data",function(){beforeEach(function(){transferTransaction=_get__("transfer")({recipientId:recipientId,amount:amount,passphrase:passphrase,data:testData})});it("should handle invalid (non-utf8 string) data",function(){return _get__("transfer").bind(null,{recipientId:recipientId,amount:amount,passphrase:passphrase,data:Buffer.from("hello")}).should.throw("Invalid encoding in transaction data. Data must be utf-8 encoded.")});it("should have fee string equal to transfer with data fee",function(){return transferTransaction.should.have.property("fee").and.be.a("string").and.equal(feeWithData)});describe("data asset",function(){it("should be a string equal to provided data",function(){return transferTransaction.asset.should.have.property("data").and.be.a("string").and.equal(testData)})})})});describe("with first and second passphrase",function(){beforeEach(function(){transferTransaction=_get__("transfer")({recipientId:recipientId,amount:amount,passphrase:passphrase,secondPassphrase:secondPassphrase})});it("should create a transfer transaction with data property",function(){transferTransaction=_get__("transfer")({recipientId:recipientId,amount:amount,passphrase:passphrase,secondPassphrase:secondPassphrase,data:testData});return transferTransaction.asset.should.have.property("data")});it("should have the second signature property as hex string",function(){return transferTransaction.should.have.property("signSignature").and.be.hexString})});describe("unsigned transfer transaction",function(){describe("when the transfer transaction is created without a passphrase",function(){beforeEach(function(){transferTransaction=_get__("transfer")({recipientId:recipientId,amount:amount})});it("should have the type",function(){return transferTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return transferTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return transferTransaction.should.have.property("fee").equal(fee)});it("should have the recipient",function(){return transferTransaction.should.have.property("recipientId").equal(recipientId)});it("should have the sender public key",function(){return transferTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return transferTransaction.should.have.property("timestamp")});it("should have the asset ",function(){return transferTransaction.should.have.property("asset")});it("should not have the signature",function(){return transferTransaction.should.not.have.property("signature")});it("should not have the id",function(){return transferTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"transfer":return _transfer2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../src/transactions/0_transfer":25,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],62:[function(require,module,exports){(function(global,Buffer){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _registerSecondPassphrase=require("../../src/transactions/1_registerSecondPassphrase");var _registerSecondPassphrase2=_interopRequireDefault(_registerSecondPassphrase);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#registerSecondPassphrase transaction",function(){var fixedPoint=Math.pow(10,8);var passphrase="secret";var secondPassphrase="second secret";var transactionType=1;var publicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var secondPublicKey="0401c8ac9f29ded9e1e4d5b6b43051cb25b22f27c7b7b35092161e851946f82f";var emptyStringPublicKey="be907b4bac84fee5ce8811db2defc9bf0b2a2a2bbc3d54d8a2257ecd70441962";var secondPassphraseFee=(5*fixedPoint).toString();var timeWithOffset=38350076;var fee=(5*fixedPoint).toString();var amount="0";var getTimeWithOffsetStub=void 0;var registerSecondPassphraseTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset);registerSecondPassphraseTransaction=_get__("registerSecondPassphrase")({passphrase:passphrase,secondPassphrase:secondPassphrase})});it("should create a register second passphrase transaction",function(){return registerSecondPassphraseTransaction.should.be.ok});it("should use time.getTimeWithOffset to calculate the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to calculate the timestamp",function(){var offset=-10;_get__("registerSecondPassphrase")({passphrase:passphrase,secondPassphrase:secondPassphrase,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});describe("returned register second passphrase transaction",function(){it("should be an object",function(){return registerSecondPassphraseTransaction.should.be.an("object")});it("should have an id string",function(){return registerSecondPassphraseTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 1",function(){return registerSecondPassphraseTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to 0",function(){return registerSecondPassphraseTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to second passphrase fee",function(){return registerSecondPassphraseTransaction.should.have.property("fee").and.be.a("string").and.equal(secondPassphraseFee)});it("should have recipientId equal to null",function(){return registerSecondPassphraseTransaction.should.have.property("recipientId").and.be.null});it("should have senderPublicKey hex string equal to sender public key",function(){return registerSecondPassphraseTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return registerSecondPassphraseTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return registerSecondPassphraseTransaction.should.have.property("signature").and.be.hexString});it("should have asset object",function(){return registerSecondPassphraseTransaction.should.have.property("asset").and.not.be.empty});it("should not have a signSignature property",function(){return registerSecondPassphraseTransaction.should.not.have.property("signSignature")});describe("signature asset",function(){it("should be an object",function(){return registerSecondPassphraseTransaction.asset.should.have.property("signature").and.be.an("object").and.not.be.empty});it("should have a 32-byte publicKey hex string",function(){registerSecondPassphraseTransaction.asset.should.have.property("signature").with.property("publicKey").and.be.hexString;return Buffer.from(registerSecondPassphraseTransaction.asset.signature.publicKey,"hex").should.have.length(32)});it("should have a publicKey equal to the public key for the provided second passphrase",function(){return registerSecondPassphraseTransaction.asset.should.have.property("signature").with.property("publicKey").and.equal(secondPublicKey)});it("should have the correct publicKey if the provided second passphrase is an empty string",function(){registerSecondPassphraseTransaction=_get__("registerSecondPassphrase")({passphrase:passphrase,secondPassphrase:""});return registerSecondPassphraseTransaction.asset.signature.publicKey.should.be.equal(emptyStringPublicKey)})})});describe("unsigned register second passphrase transaction",function(){describe("when the register second passphrase transaction is created without a passphrase",function(){beforeEach(function(){registerSecondPassphraseTransaction=_get__("registerSecondPassphrase")({secondPassphrase:secondPassphrase})});it("should have the type",function(){return registerSecondPassphraseTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return registerSecondPassphraseTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return registerSecondPassphraseTransaction.should.have.property("fee").equal(fee)});it("should have the recipient",function(){return registerSecondPassphraseTransaction.should.have.property("recipientId").equal(null)});it("should have the sender public key",function(){return registerSecondPassphraseTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return registerSecondPassphraseTransaction.should.have.property("timestamp")});it("should have the asset with the signature with the public key",function(){return registerSecondPassphraseTransaction.should.have.property("asset").with.property("signature").with.property("publicKey").of.a("string")});it("should not have the signature",function(){return registerSecondPassphraseTransaction.should.not.have.property("signature")});it("should not have the id",function(){return registerSecondPassphraseTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"registerSecondPassphrase":return _registerSecondPassphrase2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer)},{"../../src/transactions/1_registerSecondPassphrase":26,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106,buffer:150}],63:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _registerDelegate=require("../../src/transactions/2_registerDelegate");var _registerDelegate2=_interopRequireDefault(_registerDelegate);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#registerDelegate transaction",function(){var fixedPoint=Math.pow(10,8);var passphrase="secret";var secondPassphrase="second secret";var transactionType=2;var publicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var username="test_delegate_1@\\";var fee=(25*fixedPoint).toString();var timeWithOffset=38350076;var amount="0";var getTimeWithOffsetStub=void 0;var registerDelegateTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset)});describe("with first passphrase",function(){beforeEach(function(){registerDelegateTransaction=_get__("registerDelegate")({passphrase:passphrase,username:username})});it("should create a register delegate transaction",function(){return registerDelegateTransaction.should.be.ok});it("should use time.getTimeWithOffset to calculate the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to calculate the timestamp",function(){var offset=-10;_get__("registerDelegate")({passphrase:passphrase,username:username,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});it("should be an object",function(){return registerDelegateTransaction.should.be.an("object")});it("should have an id string",function(){return registerDelegateTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 2",function(){return registerDelegateTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to 0",function(){return registerDelegateTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to 25 LSK",function(){return registerDelegateTransaction.should.have.property("fee").and.be.a("string").and.equal(fee)});it("should have recipientId equal to null",function(){return registerDelegateTransaction.should.have.property("recipientId").and.be.null});it("should have senderPublicKey hex string equal to sender public key",function(){return registerDelegateTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return registerDelegateTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return registerDelegateTransaction.should.have.property("signature").and.be.hexString});it("should not have the second signature property",function(){return registerDelegateTransaction.should.not.have.property("signSignature")});it("should have asset",function(){return registerDelegateTransaction.should.have.property("asset").and.not.be.empty});describe("delegate asset",function(){it("should be an object",function(){return registerDelegateTransaction.asset.should.have.property("delegate").and.be.an("object")});it("should have the provided username as a string",function(){return registerDelegateTransaction.asset.delegate.should.have.property("username").and.be.a("string").and.equal(username)})})});describe("with first and second passphrase",function(){beforeEach(function(){registerDelegateTransaction=_get__("registerDelegate")({passphrase:passphrase,username:username,secondPassphrase:secondPassphrase})});it("should have the second signature property as hex string",function(){return registerDelegateTransaction.should.have.property("signSignature").and.be.hexString})});describe("unsigned register delegate transaction",function(){describe("when the register delegate transaction is created without a passphrase",function(){beforeEach(function(){registerDelegateTransaction=_get__("registerDelegate")({username:username})});it("should have the type",function(){return registerDelegateTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return registerDelegateTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return registerDelegateTransaction.should.have.property("fee").equal(fee)});it("should have the recipient id",function(){return registerDelegateTransaction.should.have.property("recipientId").equal(null)});it("should have the sender public key",function(){return registerDelegateTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return registerDelegateTransaction.should.have.property("timestamp")});it("should have the asset with the delegate",function(){return registerDelegateTransaction.should.have.property("asset").with.property("delegate").with.property("username")});it("should not have the signature",function(){return registerDelegateTransaction.should.not.have.property("signature")});it("should not have the id",function(){return registerDelegateTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"registerDelegate":return _registerDelegate2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/transactions/2_registerDelegate":27,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],64:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _castVotes=require("../../src/transactions/3_castVotes");var _castVotes2=_interopRequireDefault(_castVotes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#castVotes transaction",function(){var fixedPoint=Math.pow(10,8);var passphrase="secret";var secondPassphrase="second secret";var transactionType=3;var firstPublicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var secondPublicKey="922fbfdd596fa78269bbcadc67ec2a1cc15fc929a19c462169568d7a3df1a1aa";var thirdPublicKey="215b667a32a5cd51a94c9c2046c11fffb08c65748febec099451e3b164452bca";var fourthPublicKey="d019a4b6fa37e8ebeb64766c7b239d962fb3b3f265b8d3083206097b912cd914";var tooShortPublicKey="d019a4b6fa37e8ebeb64766c7b239d962fb3b3f265b8d3083206097b912cd9";var plusPrependedPublicKey="+5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var votePublicKeys=[firstPublicKey,secondPublicKey];var unvotePublicKeys=[thirdPublicKey,fourthPublicKey];var address="18160565574430594874L";var timeWithOffset=38350076;var amount="0";var fee=(1*fixedPoint).toString();var getTimeWithOffsetStub=void 0;var castVotesTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset)});describe("when the transaction is created with one passphrase and the votes",function(){beforeEach(function(){castVotesTransaction=_get__("castVotes")({passphrase:passphrase,votes:votePublicKeys})});it("should create a cast votes transaction",function(){return castVotesTransaction.should.be.ok});it("should use time.getTimeWithOffset to calculate the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to calculate the timestamp",function(){var offset=-10;_get__("castVotes")({passphrase:passphrase,votes:votePublicKeys,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});describe("the returned cast votes transaction",function(){it("should be an object",function(){return castVotesTransaction.should.be.an("object")});it("should have id string",function(){return castVotesTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 3",function(){return castVotesTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to 0",function(){return castVotesTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to 100000000",function(){return castVotesTransaction.should.have.property("fee").and.be.a("string").and.equal(fee)});it("should have recipientId string equal to address",function(){return castVotesTransaction.should.have.property("recipientId").and.be.a("string").and.equal(address)});it("should have senderPublicKey hex string equal to sender public key",function(){return castVotesTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(firstPublicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return castVotesTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return castVotesTransaction.should.have.property("signature").and.be.hexString});it("should not have the second signature property",function(){return castVotesTransaction.should.not.have.property("signSignature")});it("should have asset",function(){return castVotesTransaction.should.have.property("asset").and.not.be.empty});describe("votes asset",function(){it("should be array",function(){return castVotesTransaction.asset.should.have.property("votes").and.be.an("array")});it("should contain two elements",function(){return castVotesTransaction.asset.votes.should.have.length(2)});it("should have a vote for the delegate public key",function(){var expectedArray=["+"+firstPublicKey,"+"+secondPublicKey];return castVotesTransaction.asset.votes.should.be.eql(expectedArray)})})})});describe("with first and second passphrase",function(){beforeEach(function(){castVotesTransaction=_get__("castVotes")({passphrase:passphrase,vote:[firstPublicKey],secondPassphrase:secondPassphrase})});it("should have the second signature property as hex string",function(){return castVotesTransaction.should.have.property("signSignature").and.be.hexString})});describe("when the cast vote transaction is created with the votes and unvotes",function(){beforeEach(function(){castVotesTransaction=_get__("castVotes")({passphrase:passphrase,votes:votePublicKeys,unvotes:unvotePublicKeys})});it("the transaction should have the votes as an array",function(){return castVotesTransaction.asset.should.have.property("votes").and.be.an("array")});it("the transaction should have the votes and the unvotes",function(){var expectedArray=["+"+firstPublicKey,"+"+secondPublicKey,"-"+thirdPublicKey,"-"+fourthPublicKey];return castVotesTransaction.asset.votes.should.be.eql(expectedArray)})});describe("when the cast vote transaction is created with the unvotes",function(){beforeEach(function(){castVotesTransaction=_get__("castVotes")({passphrase:passphrase,unvotes:unvotePublicKeys})});it("the transaction should have the votes array",function(){return castVotesTransaction.asset.should.have.property("votes").and.be.an("array")});it("the transaction asset should have the unvotes",function(){var expectedArray=["-"+thirdPublicKey,"-"+fourthPublicKey];return castVotesTransaction.asset.votes.should.be.eql(expectedArray)})});describe("when the cast vote transaction is created with one too short public key",function(){it("should throw an error",function(){return _get__("castVotes").bind(null,{passphrase:passphrase,unvotes:unvotePublicKeys,votes:[tooShortPublicKey]}).should.throw("Public key d019a4b6fa37e8ebeb64766c7b239d962fb3b3f265b8d3083206097b912cd9 length differs from the expected 32 bytes for a public key.")})});describe("when the cast vote transaction is created with one plus prepended public key",function(){it("should throw an error",function(){return _get__("castVotes").bind(null,{passphrase:passphrase,unvotes:unvotePublicKeys,votes:[plusPrependedPublicKey]}).should.throw("Argument must be a valid hex string.")})});describe("when the cast vote transaction is created with duplicated public keys",function(){describe("Given votes and unvotes with duplication",function(){it("should throw a duplication error",function(){var votes=[firstPublicKey,secondPublicKey];var unvotes=[firstPublicKey,thirdPublicKey];return _get__("castVotes").bind(null,{passphrase:passphrase,unvotes:unvotes,votes:votes}).should.throw("Duplicated public key: 5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09.")})});describe("Given votes with duplication",function(){it("should throw a duplication error for votes",function(){var votes=[firstPublicKey,secondPublicKey,firstPublicKey];return _get__("castVotes").bind(null,{passphrase:passphrase,votes:votes}).should.throw("Duplicated public key: 5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09.")})});describe("Given unvotes with duplication",function(){it("should throw a duplication error for unvotes",function(){var unvotes=[firstPublicKey,secondPublicKey,firstPublicKey];return _get__("castVotes").bind(null,{passphrase:passphrase,unvotes:unvotes}).should.throw("Duplicated public key: 5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09.")})})});describe("unsigned cast votes transaction",function(){describe("when the cast votes transaction is created without a passphrase",function(){beforeEach(function(){castVotesTransaction=_get__("castVotes")({votes:votePublicKeys,unvotes:unvotePublicKeys})});it("should have the type",function(){return castVotesTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return castVotesTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return castVotesTransaction.should.have.property("fee").equal(fee)});it("should have the recipient id",function(){return castVotesTransaction.should.have.property("recipientId").equal(null)});it("should have the sender public key",function(){return castVotesTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return castVotesTransaction.should.have.property("timestamp")});it("should have the asset with the votes",function(){return castVotesTransaction.should.have.property("asset").with.property("votes")});it("should not have the signature",function(){return castVotesTransaction.should.not.have.property("signature")});it("should not have the id",function(){return castVotesTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"castVotes":return _castVotes2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/transactions/3_castVotes":28,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],65:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _cryptography=require("../../src/cryptography");var _cryptography2=_interopRequireDefault(_cryptography);var _registerMultisignatureAccount=require("../../src/transactions/4_registerMultisignatureAccount");var _registerMultisignatureAccount2=_interopRequireDefault(_registerMultisignatureAccount);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#registerMultisignatureAccount transaction",function(){var fixedPoint=Math.pow(10,8);var passphrase="secret";var secondPassphrase="second secret";var transactionType=4;var keys={publicKey:"5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09",privateKey:"2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09"};var timeWithOffset=38350076;var fee=(15*fixedPoint).toString();var amount="0";var lifetime=5;var minimum=2;var tooShortPublicKeyKeysgroup=void 0;var plusPrependedPublicKeyKeysgroup=void 0;var keysgroup=void 0;var getTimeWithOffsetStub=void 0;var registerMultisignatureTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset);keysgroup=["5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09","922fbfdd596fa78269bbcadc67ec2a1cc15fc929a19c462169568d7a3df1a1aa"];plusPrependedPublicKeyKeysgroup=["+5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09"];tooShortPublicKeyKeysgroup=["d019a4b6fa37e8ebeb64766c7b239d962fb3b3f265b8d3083206097b912cd9"]});describe("with first passphrase",function(){beforeEach(function(){registerMultisignatureTransaction=_get__("registerMultisignatureAccount")({passphrase:passphrase,keysgroup:keysgroup,lifetime:lifetime,minimum:minimum})});it("should create a register multisignature transaction",function(){return registerMultisignatureTransaction.should.be.ok});it("should use time.getTimeWithOffset to calculate the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to calculate the timestamp",function(){var offset=-10;_get__("registerMultisignatureAccount")({passphrase:passphrase,keysgroup:keysgroup,lifetime:lifetime,minimum:minimum,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});describe("returned register multisignature transaction",function(){it("should be an object",function(){return registerMultisignatureTransaction.should.be.an("object")});it("should have id string",function(){return registerMultisignatureTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 4",function(){return registerMultisignatureTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to 0",function(){return registerMultisignatureTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to 15 LSK",function(){return registerMultisignatureTransaction.should.have.property("fee").and.be.a("string").and.equal(fee)});it("should have recipientId string equal to null",function(){return registerMultisignatureTransaction.should.have.property("recipientId").and.be.null});it("should have senderPublicKey hex string equal to sender public key",function(){return registerMultisignatureTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(keys.publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return registerMultisignatureTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return registerMultisignatureTransaction.should.have.property("signature").and.be.hexString});it("should have asset",function(){return registerMultisignatureTransaction.should.have.property("asset").and.not.be.empty});it("should not have a second signature",function(){return registerMultisignatureTransaction.should.not.have.property("signSignature")});describe("multisignature asset",function(){it("should be object",function(){return registerMultisignatureTransaction.asset.should.have.property("multisignature").and.be.an("object")});it("should have a min number equal to provided minimum",function(){return registerMultisignatureTransaction.asset.multisignature.should.have.property("min").and.be.a("number").and.be.equal(minimum)});it("should have a lifetime number equal to provided lifetime",function(){return registerMultisignatureTransaction.asset.multisignature.should.have.property("lifetime").and.be.a("number").and.be.equal(lifetime)});it("should have a keysgroup array with plus prepended",function(){var expectedArray=["+5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09","+922fbfdd596fa78269bbcadc67ec2a1cc15fc929a19c462169568d7a3df1a1aa"];return registerMultisignatureTransaction.asset.multisignature.should.have.property("keysgroup").and.be.eql(expectedArray)})})})});describe("with first and second passphrase",function(){beforeEach(function(){registerMultisignatureTransaction=_get__("registerMultisignatureAccount")({passphrase:passphrase,secondPassphrase:secondPassphrase,keysgroup:keysgroup,lifetime:lifetime,minimum:minimum})});it("should have the second signature property as hex string",function(){return registerMultisignatureTransaction.should.have.property("signSignature").and.be.hexString})});describe("when the register multisignature account transaction is created with one too short public key",function(){it("should throw an error",function(){return _get__("registerMultisignatureAccount").bind(null,{passphrase:passphrase,secondPassphrase:secondPassphrase,keysgroup:tooShortPublicKeyKeysgroup,lifetime:lifetime,minimum:minimum}).should.throw("Public key d019a4b6fa37e8ebeb64766c7b239d962fb3b3f265b8d3083206097b912cd9 length differs from the expected 32 bytes for a public key.")})});describe("when the register multisignature account transaction is created with one plus prepended public key",function(){it("should throw an error",function(){return _get__("registerMultisignatureAccount").bind(null,{passphrase:passphrase,secondPassphrase:secondPassphrase,keysgroup:plusPrependedPublicKeyKeysgroup,lifetime:lifetime,minimum:minimum}).should.throw("Argument must be a valid hex string.")})});describe("when the register multisignature account transaction is created with one empty keysgroup",function(){it("should throw an error",function(){return _get__("registerMultisignatureAccount").bind(null,{passphrase:passphrase,secondPassphrase:secondPassphrase,keysgroup:[],lifetime:lifetime,minimum:minimum}).should.throw("Expected between 1 and 16 public keys in the keysgroup.")})});describe("when the register multisignature account transaction is created with 17 public keys in keysgroup",function(){beforeEach(function(){keysgroup=Array(17).fill().map(function(_,index){return _get__("cryptography").getPrivateAndPublicKeyFromPassphrase(index.toString()).publicKey})});it("should throw an error",function(){return _get__("registerMultisignatureAccount").bind(null,{passphrase:passphrase,secondPassphrase:secondPassphrase,keysgroup:keysgroup,lifetime:lifetime,minimum:minimum}).should.throw("Expected between 1 and 16 public keys in the keysgroup.")})});describe("when the register multisignature account transaction is created with duplicated public keys",function(){beforeEach(function(){keysgroup=[keys.publicKey,keys.publicKey]});it("should throw an error",function(){return _get__("registerMultisignatureAccount").bind(null,{passphrase:passphrase,secondPassphrase:secondPassphrase,keysgroup:keysgroup,lifetime:lifetime,minimum:minimum}).should.throw("Duplicated public key: 5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09.")})});describe("unsigned register multisignature account transaction",function(){describe("when the register multisignature transaction is created without a passphrase",function(){beforeEach(function(){registerMultisignatureTransaction=_get__("registerMultisignatureAccount")({keysgroup:keysgroup,lifetime:lifetime,minimum:minimum})});it("should have the type",function(){return registerMultisignatureTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return registerMultisignatureTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return registerMultisignatureTransaction.should.have.property("fee").equal(fee)});it("should have the recipient id",function(){return registerMultisignatureTransaction.should.have.property("recipientId").equal(null)});it("should have the sender public key",function(){return registerMultisignatureTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return registerMultisignatureTransaction.should.have.property("timestamp")});it("should have the asset with the multisignature with the min, lifetime and keysgroup",function(){return registerMultisignatureTransaction.should.have.nested.property("asset.multisignature").with.all.keys("min","lifetime","keysgroup")});it("should not have the signature",function(){return registerMultisignatureTransaction.should.not.have.property("signature")});it("should not have the id",function(){return registerMultisignatureTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"registerMultisignatureAccount":return _registerMultisignatureAccount2.default;case"cryptography":return _cryptography2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/cryptography":20,"../../src/transactions/4_registerMultisignatureAccount":29,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],66:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _assign=require("babel-runtime/core-js/object/assign");var _assign2=_interopRequireDefault(_assign);var _createDapp=require("../../src/transactions/5_createDapp");var _createDapp2=_interopRequireDefault(_createDapp);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#createDapp transaction",function(){var fixedPoint=Math.pow(10,8);var transactionType=5;var amount="0";var passphrase="secret";var secondPassphrase="second secret";var publicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var defaultOptions={category:0,name:"Lisk Guestbook",description:"The official Lisk guestbook",tags:"guestbook message sidechain",type:0,link:"https://github.com/MaxKK/guestbookDapp/archive/master.zip",icon:"https://raw.githubusercontent.com/MaxKK/guestbookDapp/master/icon.png"};var fee=(25*fixedPoint).toString();var timeWithOffset=38350076;var noOptionsError="Options must be an object.";var categoryIntegerError="Dapp category must be an integer.";var nameStringError="Dapp name must be a string.";var typeIntegerError="Dapp type must be an integer.";var linkStringError="Dapp link must be a string.";var getTimeWithOffsetStub=void 0;var options=void 0;var createDappTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset);options=(0,_assign2.default)({},defaultOptions)});describe("with first passphrase",function(){beforeEach(function(){createDappTransaction=_get__("createDapp")({passphrase:passphrase,options:options})});it("should create a create dapp transaction",function(){return createDappTransaction.should.be.ok});it("should throw an error if no options are provided",function(){return _get__("createDapp").bind(null,{passphrase:passphrase}).should.throw(noOptionsError)});it("should throw an error if no category is provided",function(){delete options.category;return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(categoryIntegerError)});it("should throw an error if provided category is not an integer",function(){options.category="not an integer";return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(categoryIntegerError)});it("should throw an error if no name is provided",function(){delete options.name;return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(nameStringError)});it("should throw an error if provided name is not a string",function(){options.name=123;return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(nameStringError)});it("should throw an error if no type is provided",function(){delete options.type;return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(typeIntegerError)});it("should throw an error if provided type is not an integer",function(){options.type="not an integer";return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(typeIntegerError)});it("should throw an error if no link is provided",function(){delete options.link;return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(linkStringError)});it("should throw an error if provided link is not a string",function(){options.link=123;return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.throw(linkStringError)});it("should not require description, tags, or icon",function(){["description","tags","icon"].forEach(function(key){return delete options[key]});return _get__("createDapp").bind(null,{passphrase:passphrase,options:options}).should.not.throw()});it("should use time.getTimeWithOffset to calculate the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to calculate the timestamp",function(){var offset=-10;_get__("createDapp")({passphrase:passphrase,options:options,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});describe("returned create dapp transaction",function(){it("should be an object",function(){return createDappTransaction.should.be.an("object")});it("should have an id string",function(){return createDappTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 5",function(){return createDappTransaction.should.have.property("type").and.be.a("number").and.equal(5)});it("should have amount string equal to 0",function(){return createDappTransaction.should.have.property("amount").and.be.a("string").and.equal("0")});it("should have fee string equal to 25 LSK",function(){return createDappTransaction.should.have.property("fee").and.be.a("string").and.equal(fee)});it("should have recipientId equal to null",function(){return createDappTransaction.should.have.property("recipientId").and.be.null});it("should have senderPublicKey hex string equal to sender public key",function(){return createDappTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return createDappTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return createDappTransaction.should.have.property("signature").and.be.hexString});it("should not have the second signature property",function(){return createDappTransaction.should.not.have.property("signSignature")});it("should have asset",function(){return createDappTransaction.should.have.property("asset").and.not.be.empty});describe("dapps asset",function(){it("should be object",function(){return createDappTransaction.asset.should.have.property("dapp").and.be.an("object")});it("should have a category number equal to provided category",function(){return createDappTransaction.asset.dapp.should.have.property("category").and.be.a("number").and.equal(options.category)});it("should have a name string equal to provided name",function(){return createDappTransaction.asset.dapp.should.have.property("name").and.be.a("string").and.equal(options.name)});it("should have a description string equal to provided description",function(){return createDappTransaction.asset.dapp.should.have.property("description").and.be.a("string").and.equal(options.description)});it("should have a tags string equal to provided tags",function(){return createDappTransaction.asset.dapp.should.have.property("tags").and.be.a("string").and.equal(options.tags)});it("should have a type number equal to provided type",function(){return createDappTransaction.asset.dapp.should.have.property("type").and.be.a("number").and.equal(options.type)});it("should have a link string equal to provided link",function(){return createDappTransaction.asset.dapp.should.have.property("link").and.be.a("string").and.equal(options.link)});it("should have an icon string equal to provided icon",function(){return createDappTransaction.asset.dapp.should.have.property("icon").and.be.a("string").and.equal(options.icon)})})})});describe("with first and second passphrase",function(){beforeEach(function(){createDappTransaction=_get__("createDapp")({passphrase:passphrase,secondPassphrase:secondPassphrase,options:options})});it("should have the second signature property as hex string",function(){return createDappTransaction.should.have.property("signSignature").and.be.hexString})});describe("unsigned create dapp transaction",function(){describe("when the create dapp transaction is created without a passphrase",function(){beforeEach(function(){createDappTransaction=_get__("createDapp")({options:options})});it("should have the type",function(){return createDappTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return createDappTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return createDappTransaction.should.have.property("fee").equal(fee)});it("should have the recipient id",function(){return createDappTransaction.should.have.property("recipientId").equal(null)});it("should have the sender public key",function(){return createDappTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return createDappTransaction.should.have.property("timestamp")});it("should have the asset with dapp with properties category, description, name, tags, type, link, icon",function(){return createDappTransaction.should.have.nested.property("asset.dapp").with.all.keys("category","description","name","tags","type","link","icon")});it("should not have the signature",function(){return createDappTransaction.should.not.have.property("signature")});it("should not have the id",function(){return createDappTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"createDapp":return _createDapp2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/transactions/5_createDapp":30,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/assign":89,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],67:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _transferIntoDapp=require("../../src/transactions/6_transferIntoDapp");var _transferIntoDapp2=_interopRequireDefault(_transferIntoDapp);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#transferIntoDapp transaction",function(){var fixedPoint=Math.pow(10,8);var transactionType=6;var dappId="1234213";var passphrase="secret";var secondPassphrase="secondSecret";var publicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var amount=(10*fixedPoint).toString();var transferFee=(.1*fixedPoint).toString();var timeWithOffset=38350076;var offset=-10;var getTimeWithOffsetStub=void 0;var transferIntoDappTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset)});describe("with first passphrase",function(){beforeEach(function(){transferIntoDappTransaction=_get__("transferIntoDapp")({dappId:dappId,amount:amount,passphrase:passphrase})});it("should create an inTransfer dapp transaction",function(){return transferIntoDappTransaction.should.be.ok});it("should use time.getTimeWithOffset to get the time for the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to get the time for the timestamp",function(){_get__("transferIntoDapp")({dappId:dappId,amount:amount,passphrase:passphrase,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});describe("returned inTransfer transaction object",function(){it("should be an object",function(){return transferIntoDappTransaction.should.be.an("object")});it("should have id string",function(){return transferIntoDappTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 6",function(){return transferIntoDappTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to 10 LSK",function(){return transferIntoDappTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to 0.1 LSK",function(){return transferIntoDappTransaction.should.have.property("fee").and.be.a("string").and.equal(transferFee)});it("should have recipientId equal to null",function(){return transferIntoDappTransaction.should.have.property("recipientId").be.null});it("should have senderPublicKey hex string equal to sender public key",function(){return transferIntoDappTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return transferIntoDappTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return transferIntoDappTransaction.should.have.property("signature").and.be.hexString});it("should not have the second signature property",function(){return transferIntoDappTransaction.should.not.have.property("signSignature")});it("should have an asset object",function(){return transferIntoDappTransaction.should.have.property("asset").and.be.an("object")});describe("asset",function(){it("should have the in transfer dapp id",function(){return transferIntoDappTransaction.asset.should.have.property("inTransfer").with.property("dappId").and.be.equal(dappId)})})})});describe("with first and second passphrase",function(){beforeEach(function(){transferIntoDappTransaction=_get__("transferIntoDapp")({dappId:dappId,amount:amount,passphrase:passphrase,secondPassphrase:secondPassphrase})});it("should have the second signature property as hex string",function(){return transferIntoDappTransaction.should.have.property("signSignature").and.be.hexString})});describe("unsigned transfer into dapp transaction",function(){describe("when the transfer into dapp transaction is created without a passphrase",function(){beforeEach(function(){transferIntoDappTransaction=_get__("transferIntoDapp")({dappId:dappId,amount:amount})});it("should have the type",function(){return transferIntoDappTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return transferIntoDappTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return transferIntoDappTransaction.should.have.property("fee").equal(transferFee)});it("should have the recipient id",function(){return transferIntoDappTransaction.should.have.property("recipientId").equal(null)});it("should have the sender public key",function(){return transferIntoDappTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return transferIntoDappTransaction.should.have.property("timestamp")});it("should have the asset with the in transfer with the dappId",function(){return transferIntoDappTransaction.should.have.property("asset").with.property("inTransfer").with.property("dappId")});it("should not have the signature",function(){return transferIntoDappTransaction.should.not.have.property("signature")});it("should not have the id",function(){return transferIntoDappTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"transferIntoDapp":return _transferIntoDapp2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/transactions/6_transferIntoDapp":31,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],68:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _transferOutOfDapp=require("../../src/transactions/7_transferOutOfDapp");var _transferOutOfDapp2=_interopRequireDefault(_transferOutOfDapp);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var time=require("../../src/transactions/utils/time");describe("#transferOutOfDapp",function(){var fixedPoint=Math.pow(10,8);var transactionType=7;var transactionId="9876567";var recipientId="989234L";var dappId="1234213";var passphrase="secret";var secondPassphrase="secondSecret";var publicKey="5d036a858ce89f844491762eb89e2bfbd50a4a0a0da658e4b2628b25b117ae09";var amount=(10*fixedPoint).toString();var fee=(.1*fixedPoint).toString();var timeWithOffset=38350076;var offset=-10;var getTimeWithOffsetStub=void 0;var transferOutOfDappTransaction=void 0;beforeEach(function(){getTimeWithOffsetStub=sandbox.stub(_get__("time"),"getTimeWithOffset").returns(timeWithOffset)});describe("with first passphrase",function(){beforeEach(function(){transferOutOfDappTransaction=_get__("transferOutOfDapp")({dappId:dappId,transactionId:transactionId,recipientId:recipientId,amount:amount,passphrase:passphrase})});it("should create an out transfer dapp transaction",function(){return transferOutOfDappTransaction.should.be.ok});it("should use time.getTimeWithOffset to get the time for the timestamp",function(){return getTimeWithOffsetStub.should.be.calledWithExactly(undefined)});it("should use time.getTimeWithOffset with an offset of -10 seconds to get the time for the timestamp",function(){_get__("transferOutOfDapp")({dappId:dappId,transactionId:transactionId,recipientId:recipientId,amount:amount,passphrase:passphrase,timeOffset:offset});return getTimeWithOffsetStub.should.be.calledWithExactly(offset)});describe("returned out of dapp transfer transaction object",function(){it("should be an object",function(){return transferOutOfDappTransaction.should.be.an("object")});it("should have id string",function(){return transferOutOfDappTransaction.should.have.property("id").and.be.a("string")});it("should have type number equal to 7",function(){return transferOutOfDappTransaction.should.have.property("type").and.be.a("number").and.equal(transactionType)});it("should have amount string equal to 10 LSK",function(){return transferOutOfDappTransaction.should.have.property("amount").and.be.a("string").and.equal(amount)});it("should have fee string equal to 0.1 LSK",function(){return transferOutOfDappTransaction.should.have.property("fee").and.be.a("string").and.equal(fee)});it("should have recipientId equal to provided recipientId",function(){return transferOutOfDappTransaction.should.have.property("recipientId").and.be.equal(recipientId)});it("should have senderPublicKey hex string equal to sender public key",function(){return transferOutOfDappTransaction.should.have.property("senderPublicKey").and.be.hexString.and.equal(publicKey)});it("should have timestamp number equal to result of time.getTimeWithOffset",function(){return transferOutOfDappTransaction.should.have.property("timestamp").and.be.a("number").and.equal(timeWithOffset)});it("should have signature hex string",function(){return transferOutOfDappTransaction.should.have.property("signature").and.be.hexString});it("should not have the second signature property",function(){return transferOutOfDappTransaction.should.not.have.property("signSignature")});it("should have an asset object",function(){return transferOutOfDappTransaction.should.have.property("asset").and.be.an("object")});describe("asset",function(){it("should have the out transfer dapp id",function(){return transferOutOfDappTransaction.asset.should.have.property("outTransfer").with.property("dappId").and.be.equal(dappId)});it("should have the out transfer transaction id",function(){return transferOutOfDappTransaction.asset.should.have.property("outTransfer").with.property("transactionId").and.be.equal(transactionId)})})});describe("with first and second passphrase",function(){beforeEach(function(){transferOutOfDappTransaction=_get__("transferOutOfDapp")({dappId:dappId,transactionId:transactionId,recipientId:recipientId,amount:amount,passphrase:passphrase,secondPassphrase:secondPassphrase})});it("should have the second signature property as hex string",function(){return transferOutOfDappTransaction.should.have.property("signSignature").and.be.hexString})})});describe("unsigned transfer out of dapp transaction",function(){describe("when the transfer out of dapp transaction is created without a passphrase",function(){beforeEach(function(){transferOutOfDappTransaction=_get__("transferOutOfDapp")({dappId:dappId,transactionId:transactionId,recipientId:recipientId,amount:amount})});it("should have the type",function(){return transferOutOfDappTransaction.should.have.property("type").equal(transactionType)});it("should have the amount",function(){return transferOutOfDappTransaction.should.have.property("amount").equal(amount)});it("should have the fee",function(){return transferOutOfDappTransaction.should.have.property("fee").equal(fee)});it("should have the recipient id",function(){return transferOutOfDappTransaction.should.have.property("recipientId").equal(recipientId)});it("should have the sender public key",function(){return transferOutOfDappTransaction.should.have.property("senderPublicKey").equal(null)});it("should have the timestamp",function(){return transferOutOfDappTransaction.should.have.property("timestamp")});it("should have the asset with the out transfer with dappId and transactionId",function(){return transferOutOfDappTransaction.should.have.nested.property("asset.outTransfer").with.all.keys("dappId","transactionId")});it("should not have the signature",function(){return transferOutOfDappTransaction.should.not.have.property("signature")});it("should not have the id",function(){return transferOutOfDappTransaction.should.not.have.property("id")})})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"time":return time;case"transferOutOfDapp":return _transferOutOfDapp2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/transactions/7_transferOutOfDapp":32,"../../src/transactions/utils/time":43,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],69:[function(require,module,exports){(function(global){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.__RewireAPI__=exports.__ResetDependency__=exports.__set__=exports.__Rewire__=exports.__GetDependency__=exports.__get__=undefined;var _keys=require("babel-runtime/core-js/object/keys");var _keys2=_interopRequireDefault(_keys);var _typeof2=require("babel-runtime/helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);var _defineProperty=require("babel-runtime/core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);var _create=require("babel-runtime/core-js/object/create");var _create2=_interopRequireDefault(_create);var _transactions=require("../../src/transactions");var _transactions2=_interopRequireDefault(_transactions);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}describe("transactions",function(){describe("exports",function(){it("should have the create transfer transaction function",function(){return _get__("transaction").should.have.property("transfer").and.be.a("function")});it("should have the register second passphrase transaction function",function(){return _get__("transaction").should.have.property("registerSecondPassphrase").and.be.a("function")});it("should have the register delegate transaction function",function(){return _get__("transaction").should.have.property("registerDelegate").and.be.a("function")});it("should have the cast votes transaction function",function(){return _get__("transaction").should.have.property("castVotes").and.be.a("function")});it("should have the register multisignature transaction function",function(){return _get__("transaction").should.have.property("registerMultisignature").and.be.a("function")});it("should have the create dapp transaction function",function(){return _get__("transaction").should.have.property("createDapp").and.be.a("function")});it("should have the transfer into dapp transaction function",function(){return _get__("transaction").should.have.property("transferIntoDapp").and.be.a("function")});it("should have the transfer out of dapp transaction function",function(){return _get__("transaction").should.have.property("transferOutOfDapp").and.be.a("function")})})});function _getGlobalObject(){try{if(!!global){return global}}catch(e){try{if(!!window){return window}}catch(e){return this}}}var _RewireModuleId__=null;function _getRewireModuleId__(){if(_RewireModuleId__===null){var globalVariable=_getGlobalObject();if(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__){globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__=0}_RewireModuleId__=__$$GLOBAL_REWIRE_NEXT_MODULE_ID__++}return _RewireModuleId__}function _getRewireRegistry__(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}return __$$GLOBAL_REWIRE_REGISTRY__}function _getRewiredData__(){var moduleId=_getRewireModuleId__();var registry=_getRewireRegistry__();var rewireData=registry[moduleId];if(!rewireData){registry[moduleId]=(0,_create2.default)(null);rewireData=registry[moduleId]}return rewireData}(function registerResetAll(){var theGlobalVariable=_getGlobalObject();if(!theGlobalVariable["__rewire_reset_all__"]){theGlobalVariable["__rewire_reset_all__"]=function(){theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__=(0,_create2.default)(null)}}})();var INTENTIONAL_UNDEFINED="__INTENTIONAL_UNDEFINED__";var _RewireAPI__={};(function(){function addPropertyToAPIObject(name,value){(0,_defineProperty2.default)(_RewireAPI__,name,{value:value,enumerable:false,configurable:true})}addPropertyToAPIObject("__get__",_get__);addPropertyToAPIObject("__GetDependency__",_get__);addPropertyToAPIObject("__Rewire__",_set__);addPropertyToAPIObject("__set__",_set__);addPropertyToAPIObject("__reset__",_reset__);addPropertyToAPIObject("__ResetDependency__",_reset__);addPropertyToAPIObject("__with__",_with__)})();function _get__(variableName){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _get_original__(variableName)}else{var value=rewireData[variableName];if(value===INTENTIONAL_UNDEFINED){return undefined}else{return value}}}function _get_original__(variableName){switch(variableName){case"transaction":return _transactions2.default}return undefined}function _assign__(variableName,value){var rewireData=_getRewiredData__();if(rewireData[variableName]===undefined){return _set_original__(variableName,value)}else{return rewireData[variableName]=value}}function _set_original__(variableName,_value){switch(variableName){}return undefined}function _update_operation__(operation,variableName,prefix){var oldValue=_get__(variableName);var newValue=operation==="++"?oldValue+1:oldValue-1;_assign__(variableName,newValue);return prefix?newValue:oldValue}function _set__(variableName,value){var rewireData=_getRewiredData__();if((typeof variableName==="undefined"?"undefined":(0,_typeof3.default)(variableName))==="object"){(0,_keys2.default)(variableName).forEach(function(name){rewireData[name]=variableName[name]})}else{if(value===undefined){rewireData[variableName]=INTENTIONAL_UNDEFINED}else{rewireData[variableName]=value}return function(){_reset__(variableName)}}}function _reset__(variableName){var rewireData=_getRewiredData__();delete rewireData[variableName];if((0,_keys2.default)(rewireData).length==0){delete _getRewireRegistry__()[_getRewireModuleId__]}}function _with__(object){var rewireData=_getRewiredData__();var rewiredVariableNames=(0,_keys2.default)(object);var previousValues={};function reset(){rewiredVariableNames.forEach(function(variableName){rewireData[variableName]=previousValues[variableName]})}return function(callback){rewiredVariableNames.forEach(function(variableName){previousValues[variableName]=rewireData[variableName];rewireData[variableName]=object[variableName]});var result=callback();if(!!result&&typeof result.then=="function"){result.then(reset).catch(reset)}else{reset()}return result}}exports.__get__=_get__;exports.__GetDependency__=_get__;exports.__Rewire__=_set__;exports.__set__=_set__;exports.__ResetDependency__=_reset__;exports.__RewireAPI__=_RewireAPI__;exports.default=_RewireAPI__;if((typeof module.exports).match(/object|function/)&&Object.isExtensible(module.exports)){Object.defineProperty(module.exports,"__get__",{value:function __get__(){arguments.varName=arguments[0];if(arguments.varName&&typeof arguments.varName==="string"){return eval(arguments.varName)}else{throw new TypeError("__get__ expects a non-empty string")}},writable:true});Object.defineProperty(module.exports,"__set__",{value:function __set__(){arguments.varName=arguments[0];arguments.varValue=arguments[1];arguments.refs=arguments[2]||{isArray:Array.isArray,TypeError:TypeError,stringify:JSON.stringify};arguments.src="";arguments.revertArgs=[];if(typeof arguments[0]==="object"){arguments.env=arguments.varName;if(!arguments.env||arguments.refs.isArray(arguments.env)){throw new arguments.refs.TypeError("__set__ expects an object as env")}arguments.revertArgs[0]={};for(arguments.varName in arguments.env){if(arguments.env.hasOwnProperty(arguments.varName)){arguments.varValue=arguments.env[arguments.varName];arguments.src+=arguments.varName+" = arguments.env["+arguments.refs.stringify(arguments.varName)+"]; ";try{arguments.revertArgs[0][arguments.varName]=eval(arguments.varName)}catch(err){arguments.revertArgs[0][arguments.varName]=undefined}}}}else if(typeof arguments.varName==="string"){if(!arguments.varName){throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name")}arguments.src=arguments.varName+" = arguments.varValue;";try{arguments.revertArgs=[arguments.varName,eval(arguments.varName)]}catch(err){arguments.revertArgs=[arguments.varName,undefined]}}else{throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name")}arguments.revertArgs[2]=arguments.refs;eval(arguments.src);return function(revertArgs){__set__.apply(null,revertArgs)}.bind(null,arguments.revertArgs)},writable:true})}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../../src/transactions":33,"babel-runtime/core-js/object/create":90,"babel-runtime/core-js/object/define-property":91,"babel-runtime/core-js/object/keys":94,"babel-runtime/helpers/typeof":106}],70:[function(require,module,exports){(function(global){(function(root,factory){"use strict";if(typeof define==="function"&&define.amd){define(["samsam"],factory)}else if(typeof module==="object"&&module.exports){module.exports=factory(require("samsam"))}else{root.formatio=factory(root.samsam)}})(typeof self!=="undefined"?self:this,function(samsam){"use strict";var formatio={excludeConstructors:["Object",/^.$/],quoteStrings:true,limitChildrenCount:0};var specialObjects=[];if(typeof global!=="undefined"){specialObjects.push({object:global,value:"[object global]"})}if(typeof document!=="undefined"){specialObjects.push({object:document,value:"[object HTMLDocument]"})}if(typeof window!=="undefined"){specialObjects.push({object:window,value:"[object Window]"})}function functionName(func){if(!func){return""}if(func.displayName){return func.displayName}if(func.name){return func.name}var matches=func.toString().match(/function\s+([^\(]+)/m);return matches&&matches[1]||""}function constructorName(f,object){var name=functionName(object&&object.constructor);var excludes=f.excludeConstructors||formatio.excludeConstructors||[];var i,l;for(i=0,l=excludes.length;i<l;++i){if(typeof excludes[i]==="string"&&excludes[i]===name){return""}else if(excludes[i].test&&excludes[i].test(name)){return""}}return name}function isCircular(object,objects){if(typeof object!=="object"){return false}var i,l;for(i=0,l=objects.length;i<l;++i){if(objects[i]===object){return true}}return false}function ascii(f,object,processed,indent){if(typeof object==="string"){if(object.length===0){return"(empty string)"}var qs=f.quoteStrings;var quote=typeof qs!=="boolean"||qs;return processed||quote?'"'+object+'"':object}if(typeof object==="function"&&!(object instanceof RegExp)){return ascii.func(object)}processed=processed||[];if(isCircular(object,processed)){return"[Circular]"}if(Object.prototype.toString.call(object)==="[object Array]"){return ascii.array.call(f,object,processed)}if(!object){return String(1/object===-Infinity?"-0":object)}if(samsam.isElement(object)){return ascii.element(object)}if(typeof object.toString==="function"&&object.toString!==Object.prototype.toString){return object.toString()}var i,l;for(i=0,l=specialObjects.length;i<l;i++){if(object===specialObjects[i].object){return specialObjects[i].value}}if(typeof Set!=="undefined"&&object instanceof Set){return ascii.set.call(f,object,processed)}return ascii.object.call(f,object,processed,indent)}ascii.func=function(func){return"function "+functionName(func)+"() {}"};function delimit(str,delimiters){delimiters=delimiters||["[","]"];return delimiters[0]+str+delimiters[1]}ascii.array=function(array,processed,delimiters){processed=processed||[];processed.push(array);var pieces=[];var i,l;l=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,array.length):array.length;for(i=0;i<l;++i){pieces.push(ascii(this,array[i],processed))}if(l<array.length){pieces.push("[... "+(array.length-l)+" more elements]")}return delimit(pieces.join(", "),delimiters)};ascii.set=function(set,processed){return ascii.array.call(this,Array.from(set),processed,["Set {","}"])};ascii.object=function(object,processed,indent){processed=processed||[];processed.push(object);indent=indent||0;var pieces=[];var properties=samsam.keys(object).sort();var length=3;var prop,str,obj,i,k,l;l=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,properties.length):properties.length;for(i=0;i<l;++i){prop=properties[i];obj=object[prop];if(isCircular(obj,processed)){str="[Circular]"}else{str=ascii(this,obj,processed,indent+2)}str=(/\s/.test(prop)?'"'+prop+'"':prop)+": "+str;length+=str.length;pieces.push(str)}var cons=constructorName(this,object);var prefix=cons?"["+cons+"] ":"";var is="";for(i=0,k=indent;i<k;++i){is+=" "}if(l<properties.length){pieces.push("[... "+(properties.length-l)+" more elements]")}if(length+indent>80){return prefix+"{\n  "+is+pieces.join(",\n  "+is)+"\n"+is+"}"}return prefix+"{ "+pieces.join(", ")+" }"};ascii.element=function(element){var tagName=element.tagName.toLowerCase();var attrs=element.attributes;var pairs=[];var attr,attrName,i,l,val;for(i=0,l=attrs.length;i<l;++i){attr=attrs.item(i);attrName=attr.nodeName.toLowerCase().replace("html:","");val=attr.nodeValue;if(attrName!=="contenteditable"||val!=="inherit"){if(val){pairs.push(attrName+'="'+val+'"')}}}var formatted="<"+tagName+(pairs.length>0?" ":"");var content=element.innerHTML||"";if(content.length>20){content=content.substr(0,20)+"[...]"}var res=formatted+pairs.join(" ")+">"+content+"</"+tagName+">";return res.replace(/ contentEditable="inherit"/,"")};function Formatio(options){for(var opt in options){this[opt]=options[opt]}}Formatio.prototype={functionName:functionName,configure:function(options){return new Formatio(options)},constructorName:function(object){return constructorName(this,object)},ascii:function(object,processed,indent){return ascii(this,object,processed,indent)}};return Formatio.prototype})}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{samsam:435}],71:[function(require,module,exports){var asn1=exports;asn1.bignum=require("bn.js");asn1.define=require("./asn1/api").define;asn1.base=require("./asn1/base");asn1.constants=require("./asn1/constants");asn1.decoders=require("./asn1/decoders");asn1.encoders=require("./asn1/encoders")},{"./asn1/api":72,"./asn1/base":74,"./asn1/constants":78,"./asn1/decoders":80,"./asn1/encoders":83,"bn.js":116}],72:[function(require,module,exports){var asn1=require("../asn1");var inherits=require("inherits");var api=exports;api.define=function define(name,body){return new Entity(name,body)};function Entity(name,body){this.name=name;this.body=body;this.decoders={};this.encoders={}}Entity.prototype._createNamed=function createNamed(base){var named;try{named=require("vm").runInThisContext("(function "+this.name+"(entity) {\n"+"  this._initNamed(entity);\n"+"})")}catch(e){named=function(entity){this._initNamed(entity)}}inherits(named,base);named.prototype._initNamed=function initnamed(entity){base.call(this,entity)};return new named(this)};Entity.prototype._getDecoder=function _getDecoder(enc){enc=enc||"der";if(!this.decoders.hasOwnProperty(enc))this.decoders[enc]=this._createNamed(asn1.decoders[enc]);return this.decoders[enc]};Entity.prototype.decode=function decode(data,enc,options){return this._getDecoder(enc).decode(data,options)};Entity.prototype._getEncoder=function _getEncoder(enc){enc=enc||"der";if(!this.encoders.hasOwnProperty(enc))this.encoders[enc]=this._createNamed(asn1.encoders[enc]);return this.encoders[enc]};Entity.prototype.encode=function encode(data,enc,reporter){return this._getEncoder(enc).encode(data,reporter)}},{"../asn1":71,inherits:352,vm:491}],73:[function(require,module,exports){var inherits=require("inherits");var Reporter=require("../base").Reporter;var Buffer=require("buffer").Buffer;function DecoderBuffer(base,options){Reporter.call(this,options);if(!Buffer.isBuffer(base)){this.error("Input not Buffer");return}this.base=base;this.offset=0;this.length=base.length}inherits(DecoderBuffer,Reporter);exports.DecoderBuffer=DecoderBuffer;DecoderBuffer.prototype.save=function save(){return{offset:this.offset,reporter:Reporter.prototype.save.call(this)}};DecoderBuffer.prototype.restore=function restore(save){var res=new DecoderBuffer(this.base);res.offset=save.offset;res.length=this.offset;this.offset=save.offset;Reporter.prototype.restore.call(this,save.reporter);return res};DecoderBuffer.prototype.isEmpty=function isEmpty(){return this.offset===this.length};DecoderBuffer.prototype.readUInt8=function readUInt8(fail){if(this.offset+1<=this.length)return this.base.readUInt8(this.offset++,true);else return this.error(fail||"DecoderBuffer overrun")};DecoderBuffer.prototype.skip=function skip(bytes,fail){if(!(this.offset+bytes<=this.length))return this.error(fail||"DecoderBuffer overrun");var res=new DecoderBuffer(this.base);res._reporterState=this._reporterState;res.offset=this.offset;res.length=this.offset+bytes;this.offset+=bytes;return res};DecoderBuffer.prototype.raw=function raw(save){return this.base.slice(save?save.offset:this.offset,this.length)};function EncoderBuffer(value,reporter){if(Array.isArray(value)){this.length=0;this.value=value.map(function(item){if(!(item instanceof EncoderBuffer))item=new EncoderBuffer(item,reporter);this.length+=item.length;return item},this)}else if(typeof value==="number"){if(!(0<=value&&value<=255))return reporter.error("non-byte EncoderBuffer value");this.value=value;this.length=1}else if(typeof value==="string"){this.value=value;this.length=Buffer.byteLength(value)}else if(Buffer.isBuffer(value)){this.value=value;this.length=value.length}else{return reporter.error("Unsupported type: "+typeof value)}}exports.EncoderBuffer=EncoderBuffer;EncoderBuffer.prototype.join=function join(out,offset){if(!out)out=new Buffer(this.length);if(!offset)offset=0;if(this.length===0)return out;if(Array.isArray(this.value)){this.value.forEach(function(item){item.join(out,offset);offset+=item.length})}else{if(typeof this.value==="number")out[offset]=this.value;else if(typeof this.value==="string")out.write(this.value,offset);else if(Buffer.isBuffer(this.value))this.value.copy(out,offset);offset+=this.length}return out}},{"../base":74,buffer:150,inherits:352}],74:[function(require,module,exports){var base=exports;base.Reporter=require("./reporter").Reporter;base.DecoderBuffer=require("./buffer").DecoderBuffer;base.EncoderBuffer=require("./buffer").EncoderBuffer;base.Node=require("./node")},{"./buffer":73,"./node":75,"./reporter":76}],75:[function(require,module,exports){var Reporter=require("../base").Reporter;var EncoderBuffer=require("../base").EncoderBuffer;var DecoderBuffer=require("../base").DecoderBuffer;var assert=require("minimalistic-assert");var tags=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"];var methods=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(tags);var overrided=["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"];function Node(enc,parent){var state={};this._baseState=state;state.enc=enc;state.parent=parent||null;state.children=null;state.tag=null;state.args=null;state.reverseArgs=null;state.choice=null;state.optional=false;state.any=false;state.obj=false;state.use=null;state.useDecoder=null;state.key=null;state["default"]=null;state.explicit=null;state.implicit=null;state.contains=null;if(!state.parent){state.children=[];this._wrap()}}module.exports=Node;var stateProps=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];Node.prototype.clone=function clone(){var state=this._baseState;var cstate={};stateProps.forEach(function(prop){cstate[prop]=state[prop]});var res=new this.constructor(cstate.parent);res._baseState=cstate;return res};Node.prototype._wrap=function wrap(){var state=this._baseState;methods.forEach(function(method){this[method]=function _wrappedMethod(){var clone=new this.constructor(this);state.children.push(clone);return clone[method].apply(clone,arguments)}},this)};Node.prototype._init=function init(body){var state=this._baseState;assert(state.parent===null);body.call(this);state.children=state.children.filter(function(child){return child._baseState.parent===this},this);assert.equal(state.children.length,1,"Root node can have only one child")};Node.prototype._useArgs=function useArgs(args){var state=this._baseState;var children=args.filter(function(arg){return arg instanceof this.constructor},this);args=args.filter(function(arg){return!(arg instanceof this.constructor)},this);if(children.length!==0){assert(state.children===null);state.children=children;children.forEach(function(child){child._baseState.parent=this},this)}if(args.length!==0){assert(state.args===null);state.args=args;state.reverseArgs=args.map(function(arg){if(typeof arg!=="object"||arg.constructor!==Object)return arg;var res={};Object.keys(arg).forEach(function(key){if(key==(key|0))key|=0;var value=arg[key];res[value]=key});return res})}};overrided.forEach(function(method){Node.prototype[method]=function _overrided(){var state=this._baseState;throw new Error(method+" not implemented for encoding: "+state.enc)}});tags.forEach(function(tag){Node.prototype[tag]=function _tagMethod(){var state=this._baseState;var args=Array.prototype.slice.call(arguments);assert(state.tag===null);state.tag=tag;this._useArgs(args);return this}});Node.prototype.use=function use(item){assert(item);var state=this._baseState;assert(state.use===null);state.use=item;return this};Node.prototype.optional=function optional(){var state=this._baseState;state.optional=true;return this};Node.prototype.def=function def(val){var state=this._baseState;assert(state["default"]===null);state["default"]=val;state.optional=true;return this};Node.prototype.explicit=function explicit(num){var state=this._baseState;assert(state.explicit===null&&state.implicit===null);state.explicit=num;return this};Node.prototype.implicit=function implicit(num){var state=this._baseState;assert(state.explicit===null&&state.implicit===null);state.implicit=num;return this};Node.prototype.obj=function obj(){var state=this._baseState;var args=Array.prototype.slice.call(arguments);state.obj=true;if(args.length!==0)this._useArgs(args);return this};Node.prototype.key=function key(newKey){var state=this._baseState;assert(state.key===null);state.key=newKey;return this};Node.prototype.any=function any(){var state=this._baseState;state.any=true;return this};Node.prototype.choice=function choice(obj){var state=this._baseState;assert(state.choice===null);state.choice=obj;this._useArgs(Object.keys(obj).map(function(key){return obj[key]}));return this};Node.prototype.contains=function contains(item){var state=this._baseState;assert(state.use===null);state.contains=item;return this};Node.prototype._decode=function decode(input,options){var state=this._baseState;if(state.parent===null)return input.wrapResult(state.children[0]._decode(input,options));var result=state["default"];var present=true;var prevKey=null;if(state.key!==null)prevKey=input.enterKey(state.key);if(state.optional){var tag=null;if(state.explicit!==null)tag=state.explicit;else if(state.implicit!==null)tag=state.implicit;else if(state.tag!==null)tag=state.tag;if(tag===null&&!state.any){var save=input.save();try{if(state.choice===null)this._decodeGeneric(state.tag,input,options);else this._decodeChoice(input,options);present=true}catch(e){present=false}input.restore(save)}else{present=this._peekTag(input,tag,state.any);if(input.isError(present))return present}}var prevObj;if(state.obj&&present)prevObj=input.enterObject();if(present){if(state.explicit!==null){var explicit=this._decodeTag(input,state.explicit);if(input.isError(explicit))return explicit;input=explicit}var start=input.offset;if(state.use===null&&state.choice===null){if(state.any)var save=input.save();var body=this._decodeTag(input,state.implicit!==null?state.implicit:state.tag,state.any);if(input.isError(body))return body;if(state.any)result=input.raw(save);else input=body}if(options&&options.track&&state.tag!==null)options.track(input.path(),start,input.length,"tagged");if(options&&options.track&&state.tag!==null)options.track(input.path(),input.offset,input.length,"content");if(state.any)result=result;else if(state.choice===null)result=this._decodeGeneric(state.tag,input,options);else result=this._decodeChoice(input,options);if(input.isError(result))return result;if(!state.any&&state.choice===null&&state.children!==null){state.children.forEach(function decodeChildren(child){child._decode(input,options)})}if(state.contains&&(state.tag==="octstr"||state.tag==="bitstr")){var data=new DecoderBuffer(result);result=this._getUse(state.contains,input._reporterState.obj)._decode(data,options)}}if(state.obj&&present)result=input.leaveObject(prevObj);if(state.key!==null&&(result!==null||present===true))input.leaveKey(prevKey,state.key,result);else if(prevKey!==null)input.exitKey(prevKey);return result};Node.prototype._decodeGeneric=function decodeGeneric(tag,input,options){var state=this._baseState;if(tag==="seq"||tag==="set")return null;if(tag==="seqof"||tag==="setof")return this._decodeList(input,tag,state.args[0],options);else if(/str$/.test(tag))return this._decodeStr(input,tag,options);else if(tag==="objid"&&state.args)return this._decodeObjid(input,state.args[0],state.args[1],options);else if(tag==="objid")return this._decodeObjid(input,null,null,options);else if(tag==="gentime"||tag==="utctime")return this._decodeTime(input,tag,options);else if(tag==="null_")return this._decodeNull(input,options);else if(tag==="bool")return this._decodeBool(input,options);else if(tag==="objDesc")return this._decodeStr(input,tag,options);else if(tag==="int"||tag==="enum")return this._decodeInt(input,state.args&&state.args[0],options);if(state.use!==null){return this._getUse(state.use,input._reporterState.obj)._decode(input,options)}else{return input.error("unknown tag: "+tag)}};Node.prototype._getUse=function _getUse(entity,obj){var state=this._baseState;state.useDecoder=this._use(entity,obj);assert(state.useDecoder._baseState.parent===null);state.useDecoder=state.useDecoder._baseState.children[0];if(state.implicit!==state.useDecoder._baseState.implicit){state.useDecoder=state.useDecoder.clone();state.useDecoder._baseState.implicit=state.implicit}return state.useDecoder};Node.prototype._decodeChoice=function decodeChoice(input,options){var state=this._baseState;var result=null;var match=false;Object.keys(state.choice).some(function(key){var save=input.save();var node=state.choice[key];try{var value=node._decode(input,options);if(input.isError(value))return false;result={type:key,value:value};match=true}catch(e){input.restore(save);return false}return true},this);if(!match)return input.error("Choice not matched");return result};Node.prototype._createEncoderBuffer=function createEncoderBuffer(data){return new EncoderBuffer(data,this.reporter)};Node.prototype._encode=function encode(data,reporter,parent){var state=this._baseState;if(state["default"]!==null&&state["default"]===data)return;var result=this._encodeValue(data,reporter,parent);if(result===undefined)return;if(this._skipDefault(result,reporter,parent))return;return result};Node.prototype._encodeValue=function encode(data,reporter,parent){var state=this._baseState;if(state.parent===null)return state.children[0]._encode(data,reporter||new Reporter);var result=null;this.reporter=reporter;if(state.optional&&data===undefined){if(state["default"]!==null)data=state["default"];else return}var content=null;var primitive=false;if(state.any){result=this._createEncoderBuffer(data)}else if(state.choice){result=this._encodeChoice(data,reporter)}else if(state.contains){content=this._getUse(state.contains,parent)._encode(data,reporter);primitive=true}else if(state.children){content=state.children.map(function(child){if(child._baseState.tag==="null_")return child._encode(null,reporter,data);if(child._baseState.key===null)return reporter.error("Child should have a key");var prevKey=reporter.enterKey(child._baseState.key);if(typeof data!=="object")return reporter.error("Child expected, but input is not object");var res=child._encode(data[child._baseState.key],reporter,data);reporter.leaveKey(prevKey);return res},this).filter(function(child){return child});content=this._createEncoderBuffer(content)}else{if(state.tag==="seqof"||state.tag==="setof"){if(!(state.args&&state.args.length===1))return reporter.error("Too many args for : "+state.tag);if(!Array.isArray(data))return reporter.error("seqof/setof, but data is not Array");var child=this.clone();child._baseState.implicit=null;content=this._createEncoderBuffer(data.map(function(item){var state=this._baseState;return this._getUse(state.args[0],data)._encode(item,reporter)},child))}else if(state.use!==null){result=this._getUse(state.use,parent)._encode(data,reporter)}else{content=this._encodePrimitive(state.tag,data);primitive=true}}var result;if(!state.any&&state.choice===null){var tag=state.implicit!==null?state.implicit:state.tag;var cls=state.implicit===null?"universal":"context";if(tag===null){if(state.use===null)reporter.error("Tag could be omitted only for .use()")}else{if(state.use===null)result=this._encodeComposite(tag,primitive,cls,content)}}if(state.explicit!==null)result=this._encodeComposite(state.explicit,false,"context",result);return result};Node.prototype._encodeChoice=function encodeChoice(data,reporter){var state=this._baseState;var node=state.choice[data.type];if(!node){assert(false,data.type+" not found in "+JSON.stringify(Object.keys(state.choice)))}return node._encode(data.value,reporter)};Node.prototype._encodePrimitive=function encodePrimitive(tag,data){var state=this._baseState;if(/str$/.test(tag))return this._encodeStr(data,tag);else if(tag==="objid"&&state.args)return this._encodeObjid(data,state.reverseArgs[0],state.args[1]);else if(tag==="objid")return this._encodeObjid(data,null,null);else if(tag==="gentime"||tag==="utctime")return this._encodeTime(data,tag);else if(tag==="null_")return this._encodeNull();else if(tag==="int"||tag==="enum")return this._encodeInt(data,state.args&&state.reverseArgs[0]);else if(tag==="bool")return this._encodeBool(data);else if(tag==="objDesc")return this._encodeStr(data,tag);else throw new Error("Unsupported tag: "+tag)};Node.prototype._isNumstr=function isNumstr(str){return/^[0-9 ]*$/.test(str)};Node.prototype._isPrintstr=function isPrintstr(str){return/^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str)}},{"../base":74,"minimalistic-assert":364}],76:[function(require,module,exports){var inherits=require("inherits");function Reporter(options){this._reporterState={obj:null,path:[],options:options||{},errors:[]}}exports.Reporter=Reporter;Reporter.prototype.isError=function isError(obj){return obj instanceof ReporterError};Reporter.prototype.save=function save(){var state=this._reporterState;return{obj:state.obj,pathLen:state.path.length}};Reporter.prototype.restore=function restore(data){var state=this._reporterState;state.obj=data.obj;state.path=state.path.slice(0,data.pathLen)};Reporter.prototype.enterKey=function enterKey(key){return this._reporterState.path.push(key)};Reporter.prototype.exitKey=function exitKey(index){var state=this._reporterState;state.path=state.path.slice(0,index-1)};Reporter.prototype.leaveKey=function leaveKey(index,key,value){var state=this._reporterState;this.exitKey(index);if(state.obj!==null)state.obj[key]=value};Reporter.prototype.path=function path(){return this._reporterState.path.join("/")};Reporter.prototype.enterObject=function enterObject(){var state=this._reporterState;var prev=state.obj;state.obj={};return prev};Reporter.prototype.leaveObject=function leaveObject(prev){var state=this._reporterState;var now=state.obj;state.obj=prev;return now};Reporter.prototype.error=function error(msg){var err;var state=this._reporterState;var inherited=msg instanceof ReporterError;if(inherited){err=msg}else{err=new ReporterError(state.path.map(function(elem){return"["+JSON.stringify(elem)+"]"}).join(""),msg.message||msg,msg.stack)}if(!state.options.partial)throw err;if(!inherited)state.errors.push(err);return err};Reporter.prototype.wrapResult=function wrapResult(result){var state=this._reporterState;if(!state.options.partial)return result;return{result:this.isError(result)?null:result,errors:state.errors}};function ReporterError(path,msg){this.path=path;this.rethrow(msg)}inherits(ReporterError,Error);ReporterError.prototype.rethrow=function rethrow(msg){this.message=msg+" at: "+(this.path||"(shallow)");if(Error.captureStackTrace)Error.captureStackTrace(this,ReporterError);if(!this.stack){try{throw new Error(this.message)}catch(e){this.stack=e.stack}}return this}},{inherits:352}],77:[function(require,module,exports){var constants=require("../constants");exports.tagClass={0:"universal",1:"application",2:"context",3:"private"};exports.tagClassByName=constants._reverse(exports.tagClass);exports.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"};exports.tagByName=constants._reverse(exports.tag)},{"../constants":78}],78:[function(require,module,exports){var constants=exports;constants._reverse=function reverse(map){var res={};Object.keys(map).forEach(function(key){if((key|0)==key)key=key|0;var value=map[key];res[value]=key});return res};constants.der=require("./der")},{"./der":77}],79:[function(require,module,exports){var inherits=require("inherits");var asn1=require("../../asn1");var base=asn1.base;var bignum=asn1.bignum;var der=asn1.constants.der;function DERDecoder(entity){this.enc="der";this.name=entity.name;this.entity=entity;this.tree=new DERNode;this.tree._init(entity.body)}module.exports=DERDecoder;DERDecoder.prototype.decode=function decode(data,options){if(!(data instanceof base.DecoderBuffer))data=new base.DecoderBuffer(data,options);return this.tree._decode(data,options)};function DERNode(parent){base.Node.call(this,"der",parent)}inherits(DERNode,base.Node);DERNode.prototype._peekTag=function peekTag(buffer,tag,any){if(buffer.isEmpty())return false;var state=buffer.save();var decodedTag=derDecodeTag(buffer,'Failed to peek tag: "'+tag+'"');if(buffer.isError(decodedTag))return decodedTag;buffer.restore(state);return decodedTag.tag===tag||decodedTag.tagStr===tag||decodedTag.tagStr+"of"===tag||any};DERNode.prototype._decodeTag=function decodeTag(buffer,tag,any){var decodedTag=derDecodeTag(buffer,'Failed to decode tag of "'+tag+'"');if(buffer.isError(decodedTag))return decodedTag;var len=derDecodeLen(buffer,decodedTag.primitive,'Failed to get length of "'+tag+'"');if(buffer.isError(len))return len;if(!any&&decodedTag.tag!==tag&&decodedTag.tagStr!==tag&&decodedTag.tagStr+"of"!==tag){return buffer.error('Failed to match tag: "'+tag+'"')}if(decodedTag.primitive||len!==null)return buffer.skip(len,'Failed to match body of: "'+tag+'"');var state=buffer.save();var res=this._skipUntilEnd(buffer,'Failed to skip indefinite length body: "'+this.tag+'"');if(buffer.isError(res))return res;len=buffer.offset-state.offset;buffer.restore(state);return buffer.skip(len,'Failed to match body of: "'+tag+'"')};DERNode.prototype._skipUntilEnd=function skipUntilEnd(buffer,fail){while(true){var tag=derDecodeTag(buffer,fail);if(buffer.isError(tag))return tag;var len=derDecodeLen(buffer,tag.primitive,fail);if(buffer.isError(len))return len;var res;if(tag.primitive||len!==null)res=buffer.skip(len);else res=this._skipUntilEnd(buffer,fail);if(buffer.isError(res))return res;if(tag.tagStr==="end")break}};DERNode.prototype._decodeList=function decodeList(buffer,tag,decoder,options){var result=[];while(!buffer.isEmpty()){var possibleEnd=this._peekTag(buffer,"end");if(buffer.isError(possibleEnd))return possibleEnd;var res=decoder.decode(buffer,"der",options);if(buffer.isError(res)&&possibleEnd)break;result.push(res)}return result};DERNode.prototype._decodeStr=function decodeStr(buffer,tag){if(tag==="bitstr"){var unused=buffer.readUInt8();if(buffer.isError(unused))return unused;return{unused:unused,data:buffer.raw()}}else if(tag==="bmpstr"){var raw=buffer.raw();if(raw.length%2===1)return buffer.error("Decoding of string type: bmpstr length mismatch");var str="";for(var i=0;i<raw.length/2;i++){str+=String.fromCharCode(raw.readUInt16BE(i*2))}return str}else if(tag==="numstr"){var numstr=buffer.raw().toString("ascii");if(!this._isNumstr(numstr)){return buffer.error("Decoding of string type: "+"numstr unsupported characters")}return numstr}else if(tag==="octstr"){return buffer.raw()}else if(tag==="objDesc"){return buffer.raw()}else if(tag==="printstr"){var printstr=buffer.raw().toString("ascii");if(!this._isPrintstr(printstr)){return buffer.error("Decoding of string type: "+"printstr unsupported characters")}return printstr}else if(/str$/.test(tag)){return buffer.raw().toString()}else{return buffer.error("Decoding of string type: "+tag+" unsupported")}};DERNode.prototype._decodeObjid=function decodeObjid(buffer,values,relative){var result;var identifiers=[];var ident=0;while(!buffer.isEmpty()){var subident=buffer.readUInt8();ident<<=7;ident|=subident&127;if((subident&128)===0){identifiers.push(ident);ident=0}}if(subident&128)identifiers.push(ident);var first=identifiers[0]/40|0;var second=identifiers[0]%40;if(relative)result=identifiers;else result=[first,second].concat(identifiers.slice(1));if(values){var tmp=values[result.join(" ")];if(tmp===undefined)tmp=values[result.join(".")];if(tmp!==undefined)result=tmp}return result};DERNode.prototype._decodeTime=function decodeTime(buffer,tag){var str=buffer.raw().toString();if(tag==="gentime"){var year=str.slice(0,4)|0;var mon=str.slice(4,6)|0;var day=str.slice(6,8)|0;var hour=str.slice(8,10)|0;var min=str.slice(10,12)|0;var sec=str.slice(12,14)|0}else if(tag==="utctime"){var year=str.slice(0,2)|0;var mon=str.slice(2,4)|0;var day=str.slice(4,6)|0;var hour=str.slice(6,8)|0;var min=str.slice(8,10)|0;var sec=str.slice(10,12)|0;if(year<70)year=2e3+year;else year=1900+year}else{return buffer.error("Decoding "+tag+" time is not supported yet")}return Date.UTC(year,mon-1,day,hour,min,sec,0)};DERNode.prototype._decodeNull=function decodeNull(buffer){return null};DERNode.prototype._decodeBool=function decodeBool(buffer){var res=buffer.readUInt8();if(buffer.isError(res))return res;else return res!==0};DERNode.prototype._decodeInt=function decodeInt(buffer,values){var raw=buffer.raw();var res=new bignum(raw);if(values)res=values[res.toString(10)]||res;return res};DERNode.prototype._use=function use(entity,obj){if(typeof entity==="function")entity=entity(obj);return entity._getDecoder("der").tree};function derDecodeTag(buf,fail){var tag=buf.readUInt8(fail);if(buf.isError(tag))return tag;var cls=der.tagClass[tag>>6];var primitive=(tag&32)===0;if((tag&31)===31){var oct=tag;tag=0;while((oct&128)===128){oct=buf.readUInt8(fail);if(buf.isError(oct))return oct;tag<<=7;tag|=oct&127}}else{tag&=31}var tagStr=der.tag[tag];return{cls:cls,primitive:primitive,tag:tag,tagStr:tagStr}}function derDecodeLen(buf,primitive,fail){var len=buf.readUInt8(fail);if(buf.isError(len))return len;if(!primitive&&len===128)return null;if((len&128)===0){return len}var num=len&127;if(num>4)return buf.error("length octect is too long");len=0;for(var i=0;i<num;i++){len<<=8;var j=buf.readUInt8(fail);if(buf.isError(j))return j;len|=j}return len}},{"../../asn1":71,inherits:352}],80:[function(require,module,exports){var decoders=exports;decoders.der=require("./der");decoders.pem=require("./pem")},{"./der":79,"./pem":81}],81:[function(require,module,exports){var inherits=require("inherits");var Buffer=require("buffer").Buffer;var DERDecoder=require("./der");function PEMDecoder(entity){DERDecoder.call(this,entity);this.enc="pem"}inherits(PEMDecoder,DERDecoder);module.exports=PEMDecoder;PEMDecoder.prototype.decode=function decode(data,options){var lines=data.toString().split(/[\r\n]+/g);var label=options.label.toUpperCase();var re=/^-----(BEGIN|END) ([^-]+)-----$/;var start=-1;var end=-1;for(var i=0;i<lines.length;i++){var match=lines[i].match(re);if(match===null)continue;if(match[2]!==label)continue;if(start===-1){if(match[1]!=="BEGIN")break;start=i}else{if(match[1]!=="END")break;end=i;break}}if(start===-1||end===-1)throw new Error("PEM section not found for: "+label);var base64=lines.slice(start+1,end).join("");base64.replace(/[^a-z0-9\+\/=]+/gi,"");var input=new Buffer(base64,"base64");return DERDecoder.prototype.decode.call(this,input,options)}},{"./der":79,buffer:150,inherits:352}],82:[function(require,module,exports){var inherits=require("inherits");var Buffer=require("buffer").Buffer;var asn1=require("../../asn1");var base=asn1.base;var der=asn1.constants.der;function DEREncoder(entity){this.enc="der";this.name=entity.name;this.entity=entity;this.tree=new DERNode;this.tree._init(entity.body)}module.exports=DEREncoder;DEREncoder.prototype.encode=function encode(data,reporter){return this.tree._encode(data,reporter).join()};function DERNode(parent){base.Node.call(this,"der",parent)}inherits(DERNode,base.Node);DERNode.prototype._encodeComposite=function encodeComposite(tag,primitive,cls,content){var encodedTag=encodeTag(tag,primitive,cls,this.reporter);if(content.length<128){var header=new Buffer(2);header[0]=encodedTag;header[1]=content.length;return this._createEncoderBuffer([header,content])}var lenOctets=1;for(var i=content.length;i>=256;i>>=8)lenOctets++;var header=new Buffer(1+1+lenOctets);header[0]=encodedTag;header[1]=128|lenOctets;for(var i=1+lenOctets,j=content.length;j>0;i--,j>>=8)header[i]=j&255;return this._createEncoderBuffer([header,content])};DERNode.prototype._encodeStr=function encodeStr(str,tag){if(tag==="bitstr"){return this._createEncoderBuffer([str.unused|0,str.data])}else if(tag==="bmpstr"){var buf=new Buffer(str.length*2);for(var i=0;i<str.length;i++){buf.writeUInt16BE(str.charCodeAt(i),i*2)}return this._createEncoderBuffer(buf)}else if(tag==="numstr"){if(!this._isNumstr(str)){return this.reporter.error("Encoding of string type: numstr supports "+"only digits and space")}return this._createEncoderBuffer(str)}else if(tag==="printstr"){if(!this._isPrintstr(str)){return this.reporter.error("Encoding of string type: printstr supports "+"only latin upper and lower case letters, "+"digits, space, apostrophe, left and rigth "+"parenthesis, plus sign, comma, hyphen, "+"dot, slash, colon, equal sign, "+"question mark")}return this._createEncoderBuffer(str)}else if(/str$/.test(tag)){return this._createEncoderBuffer(str)}else if(tag==="objDesc"){return this._createEncoderBuffer(str)}else{return this.reporter.error("Encoding of string type: "+tag+" unsupported")}};DERNode.prototype._encodeObjid=function encodeObjid(id,values,relative){if(typeof id==="string"){if(!values)return this.reporter.error("string objid given, but no values map found");if(!values.hasOwnProperty(id))return this.reporter.error("objid not found in values map");id=values[id].split(/[\s\.]+/g);for(var i=0;i<id.length;i++)id[i]|=0}else if(Array.isArray(id)){id=id.slice();for(var i=0;i<id.length;i++)id[i]|=0}if(!Array.isArray(id)){return this.reporter.error("objid() should be either array or string, "+"got: "+JSON.stringify(id))}if(!relative){if(id[1]>=40)return this.reporter.error("Second objid identifier OOB");id.splice(0,2,id[0]*40+id[1])}var size=0;for(var i=0;i<id.length;i++){var ident=id[i];for(size++;ident>=128;ident>>=7)size++}var objid=new Buffer(size);var offset=objid.length-1;for(var i=id.length-1;i>=0;i--){var ident=id[i];objid[offset--]=ident&127;while((ident>>=7)>0)objid[offset--]=128|ident&127}return this._createEncoderBuffer(objid)};function two(num){if(num<10)return"0"+num;else return num}DERNode.prototype._encodeTime=function encodeTime(time,tag){var str;var date=new Date(time);if(tag==="gentime"){str=[two(date.getFullYear()),two(date.getUTCMonth()+1),two(date.getUTCDate()),two(date.getUTCHours()),two(date.getUTCMinutes()),two(date.getUTCSeconds()),"Z"].join("")}else if(tag==="utctime"){str=[two(date.getFullYear()%100),two(date.getUTCMonth()+1),two(date.getUTCDate()),two(date.getUTCHours()),two(date.getUTCMinutes()),two(date.getUTCSeconds()),"Z"].join("")}else{this.reporter.error("Encoding "+tag+" time is not supported yet")}return this._encodeStr(str,"octstr")};DERNode.prototype._encodeNull=function encodeNull(){return this._createEncoderBuffer("")};DERNode.prototype._encodeInt=function encodeInt(num,values){if(typeof num==="string"){if(!values)return this.reporter.error("String int or enum given, but no values map");if(!values.hasOwnProperty(num)){return this.reporter.error("Values map doesn't contain: "+JSON.stringify(num))}num=values[num]}if(typeof num!=="number"&&!Buffer.isBuffer(num)){var numArray=num.toArray();if(!num.sign&&numArray[0]&128){numArray.unshift(0)}num=new Buffer(numArray)}if(Buffer.isBuffer(num)){var size=num.length;if(num.length===0)size++;var out=new Buffer(size);num.copy(out);if(num.length===0)out[0]=0;return this._createEncoderBuffer(out)}if(num<128)return this._createEncoderBuffer(num);if(num<256)return this._createEncoderBuffer([0,num]);var size=1;for(var i=num;i>=256;i>>=8)size++;var out=new Array(size);for(var i=out.length-1;i>=0;i--){out[i]=num&255;num>>=8}if(out[0]&128){out.unshift(0)}return this._createEncoderBuffer(new Buffer(out))};DERNode.prototype._encodeBool=function encodeBool(value){return this._createEncoderBuffer(value?255:0)};DERNode.prototype._use=function use(entity,obj){if(typeof entity==="function")entity=entity(obj);return entity._getEncoder("der").tree};DERNode.prototype._skipDefault=function skipDefault(dataBuffer,reporter,parent){var state=this._baseState;var i;if(state["default"]===null)return false;var data=dataBuffer.join();if(state.defaultBuffer===undefined)state.defaultBuffer=this._encodeValue(state["default"],reporter,parent).join();if(data.length!==state.defaultBuffer.length)return false;for(i=0;i<data.length;i++)if(data[i]!==state.defaultBuffer[i])return false;return true};function encodeTag(tag,primitive,cls,reporter){var res;if(tag==="seqof")tag="seq";else if(tag==="setof")tag="set";if(der.tagByName.hasOwnProperty(tag))res=der.tagByName[tag];else if(typeof tag==="number"&&(tag|0)===tag)res=tag;else return reporter.error("Unknown tag: "+tag);if(res>=31)return reporter.error("Multi-octet tag encoding unsupported");if(!primitive)res|=32;res|=der.tagClassByName[cls||"universal"]<<6;return res}},{"../../asn1":71,buffer:150,inherits:352}],83:[function(require,module,exports){var encoders=exports;encoders.der=require("./der");encoders.pem=require("./pem")},{"./der":82,"./pem":84}],84:[function(require,module,exports){var inherits=require("inherits");var DEREncoder=require("./der");function PEMEncoder(entity){DEREncoder.call(this,entity);this.enc="pem"}inherits(PEMEncoder,DEREncoder);module.exports=PEMEncoder;PEMEncoder.prototype.encode=function encode(data,options){var buf=DEREncoder.prototype.encode.call(this,data);var p=buf.toString("base64");var out=["-----BEGIN "+options.label+"-----"];for(var i=0;i<p.length;i+=64)out.push(p.slice(i,i+64));out.push("-----END "+options.label+"-----");return out.join("\n")}},{"./der":82,inherits:352}],85:[function(require,module,exports){function exclude(){var excludes=[].slice.call(arguments);function excludeProps(res,obj){Object.keys(obj).forEach(function(key){if(!~excludes.indexOf(key))res[key]=obj[key]})}return function extendExclude(){var args=[].slice.call(arguments),i=0,res={};for(;i<args.length;i++){excludeProps(res,args[i])}return res}}module.exports=AssertionError;function AssertionError(message,_props,ssf){var extend=exclude("name","message","stack","constructor","toJSON"),props=extend(_props||{});this.message=message||"Unspecified AssertionError";this.showDiff=false;for(var key in props){this[key]=props[key]}ssf=ssf||AssertionError;if(Error.captureStackTrace){Error.captureStackTrace(this,ssf)}else{try{throw new Error}catch(e){this.stack=e.stack}}}AssertionError.prototype=Object.create(Error.prototype);AssertionError.prototype.name="AssertionError";AssertionError.prototype.constructor=AssertionError;AssertionError.prototype.toJSON=function(stack){var extend=exclude("constructor","toJSON","stack"),props=extend({name:this.name},this);if(false!==stack&&this.stack){props.stack=this.stack}return props}},{}],86:[function(require,module,exports){module.exports={default:require("core-js/library/fn/array/from"),__esModule:true}},{"core-js/library/fn/array/from":187}],87:[function(require,module,exports){module.exports={default:require("core-js/library/fn/get-iterator"),__esModule:true}},{"core-js/library/fn/get-iterator":188}],88:[function(require,module,exports){module.exports={default:require("core-js/library/fn/is-iterable"),__esModule:true}},{"core-js/library/fn/is-iterable":189}],89:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/assign"),__esModule:true}},{"core-js/library/fn/object/assign":190}],90:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/create"),__esModule:true}},{"core-js/library/fn/object/create":191}],91:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/define-property"),__esModule:true}},{"core-js/library/fn/object/define-property":192}],92:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/entries"),__esModule:true}},{"core-js/library/fn/object/entries":193}],93:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/get-prototype-of"),__esModule:true}},{"core-js/library/fn/object/get-prototype-of":194}],94:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/keys"),__esModule:true}},{"core-js/library/fn/object/keys":195}],95:[function(require,module,exports){module.exports={default:require("core-js/library/fn/object/set-prototype-of"),__esModule:true}},{"core-js/library/fn/object/set-prototype-of":196}],96:[function(require,module,exports){module.exports={default:require("core-js/library/fn/promise"),__esModule:true}},{"core-js/library/fn/promise":197}],97:[function(require,module,exports){module.exports={default:require("core-js/library/fn/symbol"),__esModule:true}},{"core-js/library/fn/symbol":198}],98:[function(require,module,exports){module.exports={default:require("core-js/library/fn/symbol/iterator"),__esModule:true}},{"core-js/library/fn/symbol/iterator":199}],99:[function(require,module,exports){"use strict";exports.__esModule=true;exports.default=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}},{}],100:[function(require,module,exports){"use strict";exports.__esModule=true;var _defineProperty=require("../core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;(0,_defineProperty2.default)(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}()},{"../core-js/object/define-property":91}],101:[function(require,module,exports){"use strict";exports.__esModule=true;var _defineProperty=require("../core-js/object/define-property");var _defineProperty2=_interopRequireDefault(_defineProperty);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=function(obj,key,value){if(key in obj){(0,_defineProperty2.default)(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}},{"../core-js/object/define-property":91}],102:[function(require,module,exports){"use strict";exports.__esModule=true;var _setPrototypeOf=require("../core-js/object/set-prototype-of");var _setPrototypeOf2=_interopRequireDefault(_setPrototypeOf);var _create=require("../core-js/object/create");var _create2=_interopRequireDefault(_create);var _typeof2=require("../helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=function(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==="undefined"?"undefined":(0,_typeof3.default)(superClass)))}subClass.prototype=(0,_create2.default)(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)_setPrototypeOf2.default?(0,_setPrototypeOf2.default)(subClass,superClass):subClass.__proto__=superClass}},{"../core-js/object/create":90,"../core-js/object/set-prototype-of":95,"../helpers/typeof":106}],103:[function(require,module,exports){"use strict";exports.__esModule=true;var _typeof2=require("../helpers/typeof");var _typeof3=_interopRequireDefault(_typeof2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=function(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return call&&((typeof call==="undefined"?"undefined":(0,_typeof3.default)(call))==="object"||typeof call==="function")?call:self}},{"../helpers/typeof":106}],104:[function(require,module,exports){"use strict";exports.__esModule=true;var _isIterable2=require("../core-js/is-iterable");var _isIterable3=_interopRequireDefault(_isIterable2);var _getIterator2=require("../core-js/get-iterator");var _getIterator3=_interopRequireDefault(_getIterator2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=(0,_getIterator3.default)(arr),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if((0,_isIterable3.default)(Object(arr))){return sliceIterator(arr,i)}else{throw new TypeError("Invalid attempt to destructure non-iterable instance")}}}()},{"../core-js/get-iterator":87,"../core-js/is-iterable":88}],105:[function(require,module,exports){"use strict";exports.__esModule=true;var _from=require("../core-js/array/from");var _from2=_interopRequireDefault(_from);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=function(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return(0,_from2.default)(arr)}}},{"../core-js/array/from":86}],106:[function(require,module,exports){"use strict";exports.__esModule=true;var _iterator=require("../core-js/symbol/iterator");var _iterator2=_interopRequireDefault(_iterator);var _symbol=require("../core-js/symbol");var _symbol2=_interopRequireDefault(_symbol);var _typeof=typeof _symbol2.default==="function"&&typeof _iterator2.default==="symbol"?function(obj){return typeof obj}:function(obj){return obj&&typeof _symbol2.default==="function"&&obj.constructor===_symbol2.default&&obj!==_symbol2.default.prototype?"symbol":typeof obj};function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default=typeof _symbol2.default==="function"&&_typeof(_iterator2.default)==="symbol"?function(obj){return typeof obj==="undefined"?"undefined":_typeof(obj)}:function(obj){return obj&&typeof _symbol2.default==="function"&&obj.constructor===_symbol2.default&&obj!==_symbol2.default.prototype?"symbol":typeof obj==="undefined"?"undefined":_typeof(obj)}},{"../core-js/symbol":97,"../core-js/symbol/iterator":98}],107:[function(require,module,exports){"use strict";exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=="undefined"?Uint8Array:Array;var code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i}revLookup["-".charCodeAt(0)]=62;revLookup["_".charCodeAt(0)]=63;function placeHoldersCount(b64){var len=b64.length;if(len%4>0){throw new Error("Invalid string. Length must be a multiple of 4")}return b64[len-2]==="="?2:b64[len-1]==="="?1:0}function byteLength(b64){return b64.length*3/4-placeHoldersCount(b64)}function toByteArray(b64){var i,l,tmp,placeHolders,arr;var len=b64.length;placeHolders=placeHoldersCount(b64);arr=new Arr(len*3/4-placeHolders);l=placeHolders>0?len-4:len;var L=0;for(i=0;i<l;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=tmp>>16&255;arr[L++]=tmp>>8&255;arr[L++]=tmp&255}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=tmp&255}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=tmp>>8&255;arr[L++]=tmp&255}return arr}function tripletToBase64(num){return lookup[num>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[num&63]}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16&16711680)+(uint8[i+1]<<8&65280)+(uint8[i+2]&255);output.push(tripletToBase64(tmp))}return output.join("")}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;var output="";var parts=[];var maxChunkLength=16383;for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength))}if(extraBytes===1){tmp=uint8[len-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&63];output+="=="}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&63];output+=lookup[tmp<<2&63];output+="="}parts.push(output);return parts.join("")}},{}],108:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;var createHash=require("create-hash");var pbkdf2=require("pbkdf2").pbkdf2Sync;var randomBytes=require("randombytes");var unorm=require("unorm");var CHINESE_SIMPLIFIED_WORDLIST=require("./wordlists/chinese_simplified.json");var CHINESE_TRADITIONAL_WORDLIST=require("./wordlists/chinese_traditional.json");var ENGLISH_WORDLIST=require("./wordlists/english.json");var FRENCH_WORDLIST=require("./wordlists/french.json");var ITALIAN_WORDLIST=require("./wordlists/italian.json");var JAPANESE_WORDLIST=require("./wordlists/japanese.json");var SPANISH_WORDLIST=require("./wordlists/spanish.json");var DEFAULT_WORDLIST=ENGLISH_WORDLIST;var INVALID_MNEMONIC="Invalid mnemonic";var INVALID_ENTROPY="Invalid entropy";var INVALID_CHECKSUM="Invalid mnemonic checksum";function lpad(str,padString,length){while(str.length<length)str=padString+str;return str}function binaryToByte(bin){return parseInt(bin,2)}function bytesToBinary(bytes){return bytes.map(function(x){return lpad(x.toString(2),"0",8)}).join("")}function deriveChecksumBits(entropyBuffer){var ENT=entropyBuffer.length*8;var CS=ENT/32;var hash=createHash("sha256").update(entropyBuffer).digest();return bytesToBinary([].slice.call(hash)).slice(0,CS)}function salt(password){return"mnemonic"+(password||"")}function mnemonicToSeed(mnemonic,password){var mnemonicBuffer=Buffer.from(unorm.nfkd(mnemonic),"utf8");var saltBuffer=Buffer.from(salt(unorm.nfkd(password)),"utf8");return pbkdf2(mnemonicBuffer,saltBuffer,2048,64,"sha512")}function mnemonicToSeedHex(mnemonic,password){return mnemonicToSeed(mnemonic,password).toString("hex")}function mnemonicToEntropy(mnemonic,wordlist){wordlist=wordlist||DEFAULT_WORDLIST;var words=unorm.nfkd(mnemonic).split(" ");if(words.length%3!==0)throw new Error(INVALID_MNEMONIC);var bits=words.map(function(word){var index=wordlist.indexOf(word);if(index===-1)throw new Error(INVALID_MNEMONIC);return lpad(index.toString(2),"0",11)}).join("");var dividerIndex=Math.floor(bits.length/33)*32;var entropyBits=bits.slice(0,dividerIndex);var checksumBits=bits.slice(dividerIndex);var entropyBytes=entropyBits.match(/(.{1,8})/g).map(binaryToByte);if(entropyBytes.length<16)throw new Error(INVALID_ENTROPY);if(entropyBytes.length>32)throw new Error(INVALID_ENTROPY);if(entropyBytes.length%4!==0)throw new Error(INVALID_ENTROPY);var entropy=Buffer.from(entropyBytes);var newChecksum=deriveChecksumBits(entropy);if(newChecksum!==checksumBits)throw new Error(INVALID_CHECKSUM);return entropy.toString("hex")}function entropyToMnemonic(entropyHex,wordlist){wordlist=wordlist||DEFAULT_WORDLIST;if(entropyHex.length<32)throw new TypeError(INVALID_ENTROPY);if(entropyHex.length>64)throw new TypeError(INVALID_ENTROPY);if(entropyHex.length%8!==0)throw new TypeError(INVALID_ENTROPY);var entropy=Buffer.from(entropyHex,"hex");var entropyBits=bytesToBinary([].slice.call(entropy));var checksumBits=deriveChecksumBits(entropy);var bits=entropyBits+checksumBits;var chunks=bits.match(/(.{1,11})/g);var words=chunks.map(function(binary){var index=binaryToByte(binary);return wordlist[index]});return wordlist===JAPANESE_WORDLIST?words.join("　"):words.join(" ")}function generateMnemonic(strength,rng,wordlist){strength=strength||128;if(strength%32!==0)throw new TypeError(INVALID_ENTROPY);rng=rng||randomBytes;var hex=rng(strength/8).toString("hex");return entropyToMnemonic(hex,wordlist)}function validateMnemonic(mnemonic,wordlist){try{mnemonicToEntropy(mnemonic,wordlist)}catch(e){return false}return true}module.exports={mnemonicToSeed:mnemonicToSeed,mnemonicToSeedHex:mnemonicToSeedHex,mnemonicToEntropy:mnemonicToEntropy,entropyToMnemonic:entropyToMnemonic,generateMnemonic:generateMnemonic,validateMnemonic:validateMnemonic,wordlists:{EN:ENGLISH_WORDLIST,JA:JAPANESE_WORDLIST,chinese_simplified:CHINESE_SIMPLIFIED_WORDLIST,chinese_traditional:CHINESE_TRADITIONAL_WORDLIST,english:ENGLISH_WORDLIST,french:FRENCH_WORDLIST,italian:ITALIAN_WORDLIST,japanese:JAPANESE_WORDLIST,spanish:SPANISH_WORDLIST}}},{"./wordlists/chinese_simplified.json":109,"./wordlists/chinese_traditional.json":110,"./wordlists/english.json":111,"./wordlists/french.json":112,"./wordlists/italian.json":113,"./wordlists/japanese.json":114,"./wordlists/spanish.json":115,"create-hash":298,pbkdf2:387,randombytes:418,"safe-buffer":434,unorm:487}],109:[function(require,module,exports){module.exports=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]},{}],110:[function(require,module,exports){module.exports=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]},{}],111:[function(require,module,exports){module.exports=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]},{}],112:[function(require,module,exports){module.exports=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]},{}],113:[function(require,module,exports){module.exports=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]},{}],114:[function(require,module,exports){module.exports=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]},{}],115:[function(require,module,exports){module.exports=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]},{}],116:[function(require,module,exports){(function(module,exports){"use strict";function assert(val,msg){if(!val)throw new Error(msg||"Assertion failed")}function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}function BN(number,base,endian){if(BN.isBN(number)){return number}this.negative=0;this.words=null;this.length=0;this.red=null;if(number!==null){if(base==="le"||base==="be"){endian=base;base=10}this._init(number||0,base||10,endian||"be")}}if(typeof module==="object"){module.exports=BN}else{exports.BN=BN}BN.BN=BN;BN.wordSize=26;var Buffer;try{Buffer=require("buffer").Buffer}catch(e){}BN.isBN=function isBN(num){if(num instanceof BN){return true}return num!==null&&typeof num==="object"&&num.constructor.wordSize===BN.wordSize&&Array.isArray(num.words)};BN.max=function max(left,right){if(left.cmp(right)>0)return left;return right};BN.min=function min(left,right){if(left.cmp(right)<0)return left;return right};BN.prototype._init=function init(number,base,endian){if(typeof number==="number"){return this._initNumber(number,base,endian)}if(typeof number==="object"){return this._initArray(number,base,endian)}if(base==="hex"){base=16}assert(base===(base|0)&&base>=2&&base<=36);number=number.toString().replace(/\s+/g,"");var start=0;if(number[0]==="-"){start++}if(base===16){this._parseHex(number,start)}else{this._parseBase(number,base,start)}if(number[0]==="-"){this.negative=1}this.strip();if(endian!=="le")return;this._initArray(this.toArray(),base,endian)};BN.prototype._initNumber=function _initNumber(number,base,endian){if(number<0){this.negative=1;number=-number}if(number<67108864){this.words=[number&67108863];this.length=1}else if(number<4503599627370496){this.words=[number&67108863,number/67108864&67108863];this.length=2}else{assert(number<9007199254740992);this.words=[number&67108863,number/67108864&67108863,1];this.length=3}if(endian!=="le")return;this._initArray(this.toArray(),base,endian)};BN.prototype._initArray=function _initArray(number,base,endian){assert(typeof number.length==="number");if(number.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(number.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var j,w;var off=0;if(endian==="be"){for(i=number.length-1,j=0;i>=0;i-=3){w=number[i]|number[i-1]<<8|number[i-2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}else if(endian==="le"){for(i=0,j=0;i<number.length;i+=3){w=number[i]|number[i+1]<<8|number[i+2]<<16;this.words[j]|=w<<off&67108863;this.words[j+1]=w>>>26-off&67108863;off+=24;if(off>=26){off-=26;j++}}}return this.strip()};function parseHex(str,start,end){var r=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r<<=4;if(c>=49&&c<=54){r|=c-49+10}else if(c>=17&&c<=22){r|=c-17+10}else{r|=c&15}}return r}BN.prototype._parseHex=function _parseHex(number,start){this.length=Math.ceil((number.length-start)/6);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var j,w;var off=0;for(i=number.length-6,j=0;i>=start;i-=6){w=parseHex(number,i,i+6);this.words[j]|=w<<off&67108863;this.words[j+1]|=w>>>26-off&4194303;off+=24;if(off>=26){off-=26;j++}}if(i+6!==start){w=parseHex(number,start,i+6);this.words[j]|=w<<off&67108863;this.words[j+1]|=w>>>26-off&4194303}this.strip()};function parseBase(str,start,end,mul){var r=0;var len=Math.min(str.length,end);for(var i=start;i<len;i++){var c=str.charCodeAt(i)-48;r*=mul;if(c>=49){r+=c-49+10}else if(c>=17){r+=c-17+10}else{r+=c}}return r}BN.prototype._parseBase=function _parseBase(number,base,start){this.words=[0];this.length=1;for(var limbLen=0,limbPow=1;limbPow<=67108863;limbPow*=base){limbLen++}limbLen--;limbPow=limbPow/base|0;var total=number.length-start;var mod=total%limbLen;var end=Math.min(total,total-mod)+start;var word=0;for(var i=start;i<end;i+=limbLen){word=parseBase(number,i,i+limbLen,base);this.imuln(limbPow);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}if(mod!==0){var pow=1;word=parseBase(number,i,number.length,base);for(i=0;i<mod;i++){pow*=base}this.imuln(pow);if(this.words[0]+word<67108864){this.words[0]+=word}else{this._iaddn(word)}}};BN.prototype.copy=function copy(dest){dest.words=new Array(this.length);for(var i=0;i<this.length;i++){dest.words[i]=this.words[i]}dest.length=this.length;dest.negative=this.negative;dest.red=this.red};BN.prototype.clone=function clone(){var r=new BN(null);this.copy(r);return r};BN.prototype._expand=function _expand(size){while(this.length<size){this.words[this.length++]=0}return this};BN.prototype.strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};BN.prototype.inspect=function inspect(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var zeros=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"];var groupSizes=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var groupBases=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(base,padding){base=base||10;padding=padding|0||1;var out;if(base===16||base==="hex"){out="";var off=0;var carry=0;for(var i=0;i<this.length;i++){var w=this.words[i];var word=((w<<off|carry)&16777215).toString(16);carry=w>>>24-off&16777215;if(carry!==0||i!==this.length-1){out=zeros[6-word.length]+word+out}else{out=word+out}off+=2;if(off>=26){off-=26;i--}}if(carry!==0){out=carry.toString(16)+out}while(out.length%padding!==0){out="0"+out}if(this.negative!==0){out="-"+out}return out}if(base===(base|0)&&base>=2&&base<=36){var groupSize=groupSizes[base];var groupBase=groupBases[base];out="";var c=this.clone();c.negative=0;while(!c.isZero()){var r=c.modn(groupBase).toString(base);c=c.idivn(groupBase);if(!c.isZero()){out=zeros[groupSize-r.length]+r+out}else{out=r+out}}if(this.isZero()){out="0"+out}while(out.length%padding!==0){out="0"+out}if(this.negative!==0){out="-"+out}return out}assert(false,"Base should be between 2 and 36")};BN.prototype.toNumber=function toNumber(){var ret=this.words[0];if(this.length===2){ret+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){ret+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,"Number can only safely store up to 53 bits")}return this.negative!==0?-ret:ret};BN.prototype.toJSON=function toJSON(){return this.toString(16)};BN.prototype.toBuffer=function toBuffer(endian,length){assert(typeof Buffer!=="undefined");return this.toArrayLike(Buffer,endian,length)};BN.prototype.toArray=function toArray(endian,length){return this.toArrayLike(Array,endian,length)};BN.prototype.toArrayLike=function toArrayLike(ArrayType,endian,length){var byteLength=this.byteLength();var reqLength=length||Math.max(1,byteLength);assert(byteLength<=reqLength,"byte array longer than desired length");assert(reqLength>0,"Requested array length <= 0");this.strip();var littleEndian=endian==="le";var res=new ArrayType(reqLength);var b,i;var q=this.clone();if(!littleEndian){for(i=0;i<reqLength-byteLength;i++){res[i]=0}for(i=0;!q.isZero();i++){b=q.andln(255);q.iushrn(8);res[reqLength-i-1]=b}}else{for(i=0;!q.isZero();i++){b=q.andln(255);q.iushrn(8);res[i]=b}for(;i<reqLength;i++){res[i]=0}}return res};if(Math.clz32){BN.prototype._countBits=function _countBits(w){return 32-Math.clz32(w)}}else{BN.prototype._countBits=function _countBits(w){var t=w;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(w){if(w===0)return 26;var t=w;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var w=this.words[this.length-1];var hi=this._countBits(w);return(this.length-1)*26+hi};function toBitArray(num){var w=new Array(num.bitLength());for(var bit=0;bit<w.length;bit++){var off=bit/26|0;var wbit=bit%26;w[bit]=(num.words[off]&1<<wbit)>>>wbit}return w}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var r=0;for(var i=0;i<this.length;i++){var b=this._zeroBits(this.words[i]);r+=b;if(b!==26)break}return r};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(width){if(this.negative!==0){return this.abs().inotn(width).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(width){if(this.testn(width-1)){return this.notn(width).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(num){while(this.length<num.length){this.words[this.length++]=0}for(var i=0;i<num.length;i++){this.words[i]=this.words[i]|num.words[i]}return this.strip()};BN.prototype.ior=function ior(num){assert((this.negative|num.negative)===0);return this.iuor(num)};BN.prototype.or=function or(num){if(this.length>num.length)return this.clone().ior(num);return num.clone().ior(this)};BN.prototype.uor=function uor(num){if(this.length>num.length)return this.clone().iuor(num);return num.clone().iuor(this)};BN.prototype.iuand=function iuand(num){var b;if(this.length>num.length){b=num}else{b=this}for(var i=0;i<b.length;i++){this.words[i]=this.words[i]&num.words[i]}this.length=b.length;return this.strip()};BN.prototype.iand=function iand(num){assert((this.negative|num.negative)===0);return this.iuand(num)};BN.prototype.and=function and(num){if(this.length>num.length)return this.clone().iand(num);return num.clone().iand(this)};BN.prototype.uand=function uand(num){if(this.length>num.length)return this.clone().iuand(num);return num.clone().iuand(this)};BN.prototype.iuxor=function iuxor(num){var a;var b;if(this.length>num.length){a=this;b=num}else{a=num;b=this}for(var i=0;i<b.length;i++){this.words[i]=a.words[i]^b.words[i]}if(this!==a){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=a.length;return this.strip()};BN.prototype.ixor=function ixor(num){assert((this.negative|num.negative)===0);return this.iuxor(num)};BN.prototype.xor=function xor(num){if(this.length>num.length)return this.clone().ixor(num);return num.clone().ixor(this)};BN.prototype.uxor=function uxor(num){if(this.length>num.length)return this.clone().iuxor(num);return num.clone().iuxor(this)};BN.prototype.inotn=function inotn(width){assert(typeof width==="number"&&width>=0);var bytesNeeded=Math.ceil(width/26)|0;var bitsLeft=width%26;this._expand(bytesNeeded);if(bitsLeft>0){bytesNeeded--}for(var i=0;i<bytesNeeded;i++){this.words[i]=~this.words[i]&67108863}if(bitsLeft>0){this.words[i]=~this.words[i]&67108863>>26-bitsLeft}return this.strip()};BN.prototype.notn=function notn(width){return this.clone().inotn(width)};BN.prototype.setn=function setn(bit,val){assert(typeof bit==="number"&&bit>=0);var off=bit/26|0;var wbit=bit%26;this._expand(off+1);if(val){this.words[off]=this.words[off]|1<<wbit}else{this.words[off]=this.words[off]&~(1<<wbit)}return this.strip()};BN.prototype.iadd=function iadd(num){var r;if(this.negative!==0&&num.negative===0){this.negative=0;r=this.isub(num);this.negative^=1;return this._normSign()}else if(this.negative===0&&num.negative!==0){num.negative=0;r=this.isub(num);num.negative=1;return r._normSign()}var a,b;if(this.length>num.length){a=this;b=num}else{a=num;b=this}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)+(b.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;this.words[i]=r&67108863;carry=r>>>26}this.length=a.length;if(carry!==0){this.words[this.length]=carry;this.length++}else if(a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}return this};BN.prototype.add=function add(num){var res;if(num.negative!==0&&this.negative===0){num.negative=0;res=this.sub(num);num.negative^=1;return res}else if(num.negative===0&&this.negative!==0){this.negative=0;res=num.sub(this);this.negative=1;return res}if(this.length>num.length)return this.clone().iadd(num);return num.clone().iadd(this)};BN.prototype.isub=function isub(num){if(num.negative!==0){num.negative=0;var r=this.iadd(num);num.negative=1;return r._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(num);this.negative=1;return this._normSign()}var cmp=this.cmp(num);if(cmp===0){this.negative=0;this.length=1;this.words[0]=0;return this}var a,b;if(cmp>0){a=this;b=num}else{a=num;b=this}var carry=0;for(var i=0;i<b.length;i++){r=(a.words[i]|0)-(b.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}for(;carry!==0&&i<a.length;i++){r=(a.words[i]|0)+carry;carry=r>>26;this.words[i]=r&67108863}if(carry===0&&i<a.length&&a!==this){for(;i<a.length;i++){this.words[i]=a.words[i]}}this.length=Math.max(this.length,i);if(a!==this){this.negative=1}return this.strip()};BN.prototype.sub=function sub(num){return this.clone().isub(num)};function smallMulTo(self,num,out){out.negative=num.negative^self.negative;var len=self.length+num.length|0;out.length=len;len=len-1|0;var a=self.words[0]|0;var b=num.words[0]|0;var r=a*b;var lo=r&67108863;var carry=r/67108864|0;out.words[0]=lo;for(var k=1;k<len;k++){var ncarry=carry>>>26;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j|0;a=self.words[i]|0;b=num.words[j]|0;r=a*b+rword;ncarry+=r/67108864|0;rword=r&67108863}out.words[k]=rword|0;carry=ncarry|0}if(carry!==0){out.words[k]=carry|0}else{out.length--}return out.strip()}var comb10MulTo=function comb10MulTo(self,num,out){var a=self.words;var b=num.words;var o=out.words;var c=0;var lo;var mid;var hi;var a0=a[0]|0;var al0=a0&8191;var ah0=a0>>>13;var a1=a[1]|0;var al1=a1&8191;var ah1=a1>>>13;var a2=a[2]|0;var al2=a2&8191;var ah2=a2>>>13;var a3=a[3]|0;var al3=a3&8191;var ah3=a3>>>13;var a4=a[4]|0;var al4=a4&8191;var ah4=a4>>>13;var a5=a[5]|0;var al5=a5&8191;var ah5=a5>>>13;var a6=a[6]|0;var al6=a6&8191;var ah6=a6>>>13;var a7=a[7]|0;var al7=a7&8191;var ah7=a7>>>13;var a8=a[8]|0;var al8=a8&8191;var ah8=a8>>>13;var a9=a[9]|0;var al9=a9&8191;var ah9=a9>>>13;var b0=b[0]|0;var bl0=b0&8191;var bh0=b0>>>13;var b1=b[1]|0;var bl1=b1&8191;var bh1=b1>>>13;var b2=b[2]|0;var bl2=b2&8191;var bh2=b2>>>13;var b3=b[3]|0;var bl3=b3&8191;var bh3=b3>>>13;var b4=b[4]|0;var bl4=b4&8191;var bh4=b4>>>13;var b5=b[5]|0;var bl5=b5&8191;var bh5=b5>>>13;var b6=b[6]|0;var bl6=b6&8191;var bh6=b6>>>13;var b7=b[7]|0;var bl7=b7&8191;var bh7=b7>>>13;var b8=b[8]|0;var bl8=b8&8191;var bh8=b8>>>13;var b9=b[9]|0;var bl9=b9&8191;var bh9=b9>>>13;out.negative=self.negative^num.negative;out.length=19;lo=Math.imul(al0,bl0);mid=Math.imul(al0,bh0);mid=mid+Math.imul(ah0,bl0)|0;hi=Math.imul(ah0,bh0);var w0=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w0>>>26)|0;w0&=67108863;lo=Math.imul(al1,bl0);mid=Math.imul(al1,bh0);mid=mid+Math.imul(ah1,bl0)|0;hi=Math.imul(ah1,bh0);lo=lo+Math.imul(al0,bl1)|0;mid=mid+Math.imul(al0,bh1)|0;mid=mid+Math.imul(ah0,bl1)|0;hi=hi+Math.imul(ah0,bh1)|0;var w1=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w1>>>26)|0;w1&=67108863;lo=Math.imul(al2,bl0);mid=Math.imul(al2,bh0);mid=mid+Math.imul(ah2,bl0)|0;hi=Math.imul(ah2,bh0);lo=lo+Math.imul(al1,bl1)|0;mid=mid+Math.imul(al1,bh1)|0;mid=mid+Math.imul(ah1,bl1)|0;hi=hi+Math.imul(ah1,bh1)|0;lo=lo+Math.imul(al0,bl2)|0;mid=mid+Math.imul(al0,bh2)|0;mid=mid+Math.imul(ah0,bl2)|0;hi=hi+Math.imul(ah0,bh2)|0;var w2=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w2>>>26)|0;w2&=67108863;lo=Math.imul(al3,bl0);mid=Math.imul(al3,bh0);mid=mid+Math.imul(ah3,bl0)|0;hi=Math.imul(ah3,bh0);lo=lo+Math.imul(al2,bl1)|0;mid=mid+Math.imul(al2,bh1)|0;mid=mid+Math.imul(ah2,bl1)|0;hi=hi+Math.imul(ah2,bh1)|0;lo=lo+Math.imul(al1,bl2)|0;mid=mid+Math.imul(al1,bh2)|0;mid=mid+Math.imul(ah1,bl2)|0;hi=hi+Math.imul(ah1,bh2)|0;lo=lo+Math.imul(al0,bl3)|0;mid=mid+Math.imul(al0,bh3)|0;mid=mid+Math.imul(ah0,bl3)|0;hi=hi+Math.imul(ah0,bh3)|0;var w3=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w3>>>26)|0;w3&=67108863;lo=Math.imul(al4,bl0);mid=Math.imul(al4,bh0);mid=mid+Math.imul(ah4,bl0)|0;hi=Math.imul(ah4,bh0);lo=lo+Math.imul(al3,bl1)|0;mid=mid+Math.imul(al3,bh1)|0;mid=mid+Math.imul(ah3,bl1)|0;hi=hi+Math.imul(ah3,bh1)|0;lo=lo+Math.imul(al2,bl2)|0;mid=mid+Math.imul(al2,bh2)|0;mid=mid+Math.imul(ah2,bl2)|0;hi=hi+Math.imul(ah2,bh2)|0;lo=lo+Math.imul(al1,bl3)|0;mid=mid+Math.imul(al1,bh3)|0;mid=mid+Math.imul(ah1,bl3)|0;hi=hi+Math.imul(ah1,bh3)|0;lo=lo+Math.imul(al0,bl4)|0;mid=mid+Math.imul(al0,bh4)|0;mid=mid+Math.imul(ah0,bl4)|0;hi=hi+Math.imul(ah0,bh4)|0;var w4=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w4>>>26)|0;w4&=67108863;lo=Math.imul(al5,bl0);mid=Math.imul(al5,bh0);mid=mid+Math.imul(ah5,bl0)|0;hi=Math.imul(ah5,bh0);lo=lo+Math.imul(al4,bl1)|0;mid=mid+Math.imul(al4,bh1)|0;mid=mid+Math.imul(ah4,bl1)|0;hi=hi+Math.imul(ah4,bh1)|0;lo=lo+Math.imul(al3,bl2)|0;mid=mid+Math.imul(al3,bh2)|0;mid=mid+Math.imul(ah3,bl2)|0;hi=hi+Math.imul(ah3,bh2)|0;lo=lo+Math.imul(al2,bl3)|0;mid=mid+Math.imul(al2,bh3)|0;mid=mid+Math.imul(ah2,bl3)|0;hi=hi+Math.imul(ah2,bh3)|0;lo=lo+Math.imul(al1,bl4)|0;mid=mid+Math.imul(al1,bh4)|0;mid=mid+Math.imul(ah1,bl4)|0;hi=hi+Math.imul(ah1,bh4)|0;lo=lo+Math.imul(al0,bl5)|0;mid=mid+Math.imul(al0,bh5)|0;mid=mid+Math.imul(ah0,bl5)|0;hi=hi+Math.imul(ah0,bh5)|0;var w5=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w5>>>26)|0;w5&=67108863;lo=Math.imul(al6,bl0);mid=Math.imul(al6,bh0);mid=mid+Math.imul(ah6,bl0)|0;hi=Math.imul(ah6,bh0);lo=lo+Math.imul(al5,bl1)|0;mid=mid+Math.imul(al5,bh1)|0;mid=mid+Math.imul(ah5,bl1)|0;hi=hi+Math.imul(ah5,bh1)|0;lo=lo+Math.imul(al4,bl2)|0;mid=mid+Math.imul(al4,bh2)|0;mid=mid+Math.imul(ah4,bl2)|0;hi=hi+Math.imul(ah4,bh2)|0;lo=lo+Math.imul(al3,bl3)|0;mid=mid+Math.imul(al3,bh3)|0;mid=mid+Math.imul(ah3,bl3)|0;hi=hi+Math.imul(ah3,bh3)|0;lo=lo+Math.imul(al2,bl4)|0;mid=mid+Math.imul(al2,bh4)|0;mid=mid+Math.imul(ah2,bl4)|0;hi=hi+Math.imul(ah2,bh4)|0;lo=lo+Math.imul(al1,bl5)|0;mid=mid+Math.imul(al1,bh5)|0;mid=mid+Math.imul(ah1,bl5)|0;hi=hi+Math.imul(ah1,bh5)|0;lo=lo+Math.imul(al0,bl6)|0;mid=mid+Math.imul(al0,bh6)|0;mid=mid+Math.imul(ah0,bl6)|0;hi=hi+Math.imul(ah0,bh6)|0;var w6=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w6>>>26)|0;w6&=67108863;lo=Math.imul(al7,bl0);mid=Math.imul(al7,bh0);mid=mid+Math.imul(ah7,bl0)|0;hi=Math.imul(ah7,bh0);lo=lo+Math.imul(al6,bl1)|0;mid=mid+Math.imul(al6,bh1)|0;mid=mid+Math.imul(ah6,bl1)|0;hi=hi+Math.imul(ah6,bh1)|0;lo=lo+Math.imul(al5,bl2)|0;mid=mid+Math.imul(al5,bh2)|0;mid=mid+Math.imul(ah5,bl2)|0;hi=hi+Math.imul(ah5,bh2)|0;lo=lo+Math.imul(al4,bl3)|0;mid=mid+Math.imul(al4,bh3)|0;mid=mid+Math.imul(ah4,bl3)|0;hi=hi+Math.imul(ah4,bh3)|0;lo=lo+Math.imul(al3,bl4)|0;mid=mid+Math.imul(al3,bh4)|0;mid=mid+Math.imul(ah3,bl4)|0;hi=hi+Math.imul(ah3,bh4)|0;lo=lo+Math.imul(al2,bl5)|0;mid=mid+Math.imul(al2,bh5)|0;mid=mid+Math.imul(ah2,bl5)|0;hi=hi+Math.imul(ah2,bh5)|0;lo=lo+Math.imul(al1,bl6)|0;mid=mid+Math.imul(al1,bh6)|0;mid=mid+Math.imul(ah1,bl6)|0;hi=hi+Math.imul(ah1,bh6)|0;lo=lo+Math.imul(al0,bl7)|0;mid=mid+Math.imul(al0,bh7)|0;mid=mid+Math.imul(ah0,bl7)|0;hi=hi+Math.imul(ah0,bh7)|0;var w7=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w7>>>26)|0;w7&=67108863;lo=Math.imul(al8,bl0);mid=Math.imul(al8,bh0);mid=mid+Math.imul(ah8,bl0)|0;hi=Math.imul(ah8,bh0);lo=lo+Math.imul(al7,bl1)|0;mid=mid+Math.imul(al7,bh1)|0;mid=mid+Math.imul(ah7,bl1)|0;hi=hi+Math.imul(ah7,bh1)|0;lo=lo+Math.imul(al6,bl2)|0;mid=mid+Math.imul(al6,bh2)|0;mid=mid+Math.imul(ah6,bl2)|0;hi=hi+Math.imul(ah6,bh2)|0;lo=lo+Math.imul(al5,bl3)|0;mid=mid+Math.imul(al5,bh3)|0;mid=mid+Math.imul(ah5,bl3)|0;hi=hi+Math.imul(ah5,bh3)|0;lo=lo+Math.imul(al4,bl4)|0;mid=mid+Math.imul(al4,bh4)|0;mid=mid+Math.imul(ah4,bl4)|0;hi=hi+Math.imul(ah4,bh4)|0;lo=lo+Math.imul(al3,bl5)|0;mid=mid+Math.imul(al3,bh5)|0;mid=mid+Math.imul(ah3,bl5)|0;hi=hi+Math.imul(ah3,bh5)|0;lo=lo+Math.imul(al2,bl6)|0;mid=mid+Math.imul(al2,bh6)|0;mid=mid+Math.imul(ah2,bl6)|0;hi=hi+Math.imul(ah2,bh6)|0;lo=lo+Math.imul(al1,bl7)|0;mid=mid+Math.imul(al1,bh7)|0;mid=mid+Math.imul(ah1,bl7)|0;hi=hi+Math.imul(ah1,bh7)|0;lo=lo+Math.imul(al0,bl8)|0;mid=mid+Math.imul(al0,bh8)|0;mid=mid+Math.imul(ah0,bl8)|0;hi=hi+Math.imul(ah0,bh8)|0;var w8=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w8>>>26)|0;w8&=67108863;lo=Math.imul(al9,bl0);mid=Math.imul(al9,bh0);mid=mid+Math.imul(ah9,bl0)|0;hi=Math.imul(ah9,bh0);lo=lo+Math.imul(al8,bl1)|0;mid=mid+Math.imul(al8,bh1)|0;mid=mid+Math.imul(ah8,bl1)|0;hi=hi+Math.imul(ah8,bh1)|0;lo=lo+Math.imul(al7,bl2)|0;mid=mid+Math.imul(al7,bh2)|0;mid=mid+Math.imul(ah7,bl2)|0;hi=hi+Math.imul(ah7,bh2)|0;lo=lo+Math.imul(al6,bl3)|0;mid=mid+Math.imul(al6,bh3)|0;mid=mid+Math.imul(ah6,bl3)|0;hi=hi+Math.imul(ah6,bh3)|0;lo=lo+Math.imul(al5,bl4)|0;mid=mid+Math.imul(al5,bh4)|0;mid=mid+Math.imul(ah5,bl4)|0;hi=hi+Math.imul(ah5,bh4)|0;lo=lo+Math.imul(al4,bl5)|0;mid=mid+Math.imul(al4,bh5)|0;mid=mid+Math.imul(ah4,bl5)|0;hi=hi+Math.imul(ah4,bh5)|0;lo=lo+Math.imul(al3,bl6)|0;mid=mid+Math.imul(al3,bh6)|0;mid=mid+Math.imul(ah3,bl6)|0;hi=hi+Math.imul(ah3,bh6)|0;lo=lo+Math.imul(al2,bl7)|0;mid=mid+Math.imul(al2,bh7)|0;mid=mid+Math.imul(ah2,bl7)|0;hi=hi+Math.imul(ah2,bh7)|0;lo=lo+Math.imul(al1,bl8)|0;mid=mid+Math.imul(al1,bh8)|0;mid=mid+Math.imul(ah1,bl8)|0;hi=hi+Math.imul(ah1,bh8)|0;lo=lo+Math.imul(al0,bl9)|0;mid=mid+Math.imul(al0,bh9)|0;mid=mid+Math.imul(ah0,bl9)|0;hi=hi+Math.imul(ah0,bh9)|0;var w9=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w9>>>26)|0;w9&=67108863;lo=Math.imul(al9,bl1);mid=Math.imul(al9,bh1);mid=mid+Math.imul(ah9,bl1)|0;hi=Math.imul(ah9,bh1);lo=lo+Math.imul(al8,bl2)|0;mid=mid+Math.imul(al8,bh2)|0;mid=mid+Math.imul(ah8,bl2)|0;hi=hi+Math.imul(ah8,bh2)|0;lo=lo+Math.imul(al7,bl3)|0;mid=mid+Math.imul(al7,bh3)|0;mid=mid+Math.imul(ah7,bl3)|0;hi=hi+Math.imul(ah7,bh3)|0;lo=lo+Math.imul(al6,bl4)|0;mid=mid+Math.imul(al6,bh4)|0;mid=mid+Math.imul(ah6,bl4)|0;hi=hi+Math.imul(ah6,bh4)|0;lo=lo+Math.imul(al5,bl5)|0;mid=mid+Math.imul(al5,bh5)|0;mid=mid+Math.imul(ah5,bl5)|0;hi=hi+Math.imul(ah5,bh5)|0;lo=lo+Math.imul(al4,bl6)|0;mid=mid+Math.imul(al4,bh6)|0;mid=mid+Math.imul(ah4,bl6)|0;hi=hi+Math.imul(ah4,bh6)|0;lo=lo+Math.imul(al3,bl7)|0;mid=mid+Math.imul(al3,bh7)|0;mid=mid+Math.imul(ah3,bl7)|0;hi=hi+Math.imul(ah3,bh7)|0;lo=lo+Math.imul(al2,bl8)|0;mid=mid+Math.imul(al2,bh8)|0;mid=mid+Math.imul(ah2,bl8)|0;hi=hi+Math.imul(ah2,bh8)|0;lo=lo+Math.imul(al1,bl9)|0;mid=mid+Math.imul(al1,bh9)|0;mid=mid+Math.imul(ah1,bl9)|0;hi=hi+Math.imul(ah1,bh9)|0;var w10=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w10>>>26)|0;w10&=67108863;lo=Math.imul(al9,bl2);mid=Math.imul(al9,bh2);mid=mid+Math.imul(ah9,bl2)|0;hi=Math.imul(ah9,bh2);lo=lo+Math.imul(al8,bl3)|0;mid=mid+Math.imul(al8,bh3)|0;mid=mid+Math.imul(ah8,bl3)|0;hi=hi+Math.imul(ah8,bh3)|0;lo=lo+Math.imul(al7,bl4)|0;mid=mid+Math.imul(al7,bh4)|0;mid=mid+Math.imul(ah7,bl4)|0;hi=hi+Math.imul(ah7,bh4)|0;lo=lo+Math.imul(al6,bl5)|0;mid=mid+Math.imul(al6,bh5)|0;mid=mid+Math.imul(ah6,bl5)|0;hi=hi+Math.imul(ah6,bh5)|0;lo=lo+Math.imul(al5,bl6)|0;mid=mid+Math.imul(al5,bh6)|0;mid=mid+Math.imul(ah5,bl6)|0;hi=hi+Math.imul(ah5,bh6)|0;lo=lo+Math.imul(al4,bl7)|0;mid=mid+Math.imul(al4,bh7)|0;mid=mid+Math.imul(ah4,bl7)|0;hi=hi+Math.imul(ah4,bh7)|0;lo=lo+Math.imul(al3,bl8)|0;mid=mid+Math.imul(al3,bh8)|0;mid=mid+Math.imul(ah3,bl8)|0;hi=hi+Math.imul(ah3,bh8)|0;lo=lo+Math.imul(al2,bl9)|0;mid=mid+Math.imul(al2,bh9)|0;mid=mid+Math.imul(ah2,bl9)|0;hi=hi+Math.imul(ah2,bh9)|0;var w11=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w11>>>26)|0;w11&=67108863;lo=Math.imul(al9,bl3);mid=Math.imul(al9,bh3);mid=mid+Math.imul(ah9,bl3)|0;hi=Math.imul(ah9,bh3);lo=lo+Math.imul(al8,bl4)|0;mid=mid+Math.imul(al8,bh4)|0;mid=mid+Math.imul(ah8,bl4)|0;hi=hi+Math.imul(ah8,bh4)|0;lo=lo+Math.imul(al7,bl5)|0;mid=mid+Math.imul(al7,bh5)|0;mid=mid+Math.imul(ah7,bl5)|0;hi=hi+Math.imul(ah7,bh5)|0;lo=lo+Math.imul(al6,bl6)|0;mid=mid+Math.imul(al6,bh6)|0;mid=mid+Math.imul(ah6,bl6)|0;hi=hi+Math.imul(ah6,bh6)|0;lo=lo+Math.imul(al5,bl7)|0;mid=mid+Math.imul(al5,bh7)|0;mid=mid+Math.imul(ah5,bl7)|0;hi=hi+Math.imul(ah5,bh7)|0;lo=lo+Math.imul(al4,bl8)|0;mid=mid+Math.imul(al4,bh8)|0;mid=mid+Math.imul(ah4,bl8)|0;hi=hi+Math.imul(ah4,bh8)|0;lo=lo+Math.imul(al3,bl9)|0;mid=mid+Math.imul(al3,bh9)|0;mid=mid+Math.imul(ah3,bl9)|0;hi=hi+Math.imul(ah3,bh9)|0;var w12=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w12>>>26)|0;w12&=67108863;lo=Math.imul(al9,bl4);mid=Math.imul(al9,bh4);mid=mid+Math.imul(ah9,bl4)|0;hi=Math.imul(ah9,bh4);lo=lo+Math.imul(al8,bl5)|0;mid=mid+Math.imul(al8,bh5)|0;mid=mid+Math.imul(ah8,bl5)|0;hi=hi+Math.imul(ah8,bh5)|0;lo=lo+Math.imul(al7,bl6)|0;mid=mid+Math.imul(al7,bh6)|0;mid=mid+Math.imul(ah7,bl6)|0;hi=hi+Math.imul(ah7,bh6)|0;lo=lo+Math.imul(al6,bl7)|0;mid=mid+Math.imul(al6,bh7)|0;mid=mid+Math.imul(ah6,bl7)|0;hi=hi+Math.imul(ah6,bh7)|0;lo=lo+Math.imul(al5,bl8)|0;mid=mid+Math.imul(al5,bh8)|0;mid=mid+Math.imul(ah5,bl8)|0;hi=hi+Math.imul(ah5,bh8)|0;lo=lo+Math.imul(al4,bl9)|0;mid=mid+Math.imul(al4,bh9)|0;mid=mid+Math.imul(ah4,bl9)|0;hi=hi+Math.imul(ah4,bh9)|0;var w13=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w13>>>26)|0;w13&=67108863;lo=Math.imul(al9,bl5);mid=Math.imul(al9,bh5);mid=mid+Math.imul(ah9,bl5)|0;hi=Math.imul(ah9,bh5);lo=lo+Math.imul(al8,bl6)|0;mid=mid+Math.imul(al8,bh6)|0;mid=mid+Math.imul(ah8,bl6)|0;hi=hi+Math.imul(ah8,bh6)|0;lo=lo+Math.imul(al7,bl7)|0;mid=mid+Math.imul(al7,bh7)|0;mid=mid+Math.imul(ah7,bl7)|0;hi=hi+Math.imul(ah7,bh7)|0;lo=lo+Math.imul(al6,bl8)|0;mid=mid+Math.imul(al6,bh8)|0;mid=mid+Math.imul(ah6,bl8)|0;hi=hi+Math.imul(ah6,bh8)|0;lo=lo+Math.imul(al5,bl9)|0;mid=mid+Math.imul(al5,bh9)|0;mid=mid+Math.imul(ah5,bl9)|0;hi=hi+Math.imul(ah5,bh9)|0;var w14=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w14>>>26)|0;w14&=67108863;lo=Math.imul(al9,bl6);mid=Math.imul(al9,bh6);mid=mid+Math.imul(ah9,bl6)|0;hi=Math.imul(ah9,bh6);lo=lo+Math.imul(al8,bl7)|0;mid=mid+Math.imul(al8,bh7)|0;mid=mid+Math.imul(ah8,bl7)|0;hi=hi+Math.imul(ah8,bh7)|0;lo=lo+Math.imul(al7,bl8)|0;mid=mid+Math.imul(al7,bh8)|0;mid=mid+Math.imul(ah7,bl8)|0;hi=hi+Math.imul(ah7,bh8)|0;lo=lo+Math.imul(al6,bl9)|0;mid=mid+Math.imul(al6,bh9)|0;mid=mid+Math.imul(ah6,bl9)|0;hi=hi+Math.imul(ah6,bh9)|0;var w15=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w15>>>26)|0;w15&=67108863;lo=Math.imul(al9,bl7);mid=Math.imul(al9,bh7);mid=mid+Math.imul(ah9,bl7)|0;hi=Math.imul(ah9,bh7);lo=lo+Math.imul(al8,bl8)|0;mid=mid+Math.imul(al8,bh8)|0;mid=mid+Math.imul(ah8,bl8)|0;hi=hi+Math.imul(ah8,bh8)|0;lo=lo+Math.imul(al7,bl9)|0;mid=mid+Math.imul(al7,bh9)|0;mid=mid+Math.imul(ah7,bl9)|0;hi=hi+Math.imul(ah7,bh9)|0;var w16=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w16>>>26)|0;w16&=67108863;lo=Math.imul(al9,bl8);mid=Math.imul(al9,bh8);mid=mid+Math.imul(ah9,bl8)|0;hi=Math.imul(ah9,bh8);lo=lo+Math.imul(al8,bl9)|0;mid=mid+Math.imul(al8,bh9)|0;mid=mid+Math.imul(ah8,bl9)|0;hi=hi+Math.imul(ah8,bh9)|0;var w17=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w17>>>26)|0;w17&=67108863;lo=Math.imul(al9,bl9);mid=Math.imul(al9,bh9);mid=mid+Math.imul(ah9,bl9)|0;hi=Math.imul(ah9,bh9);var w18=(c+lo|0)+((mid&8191)<<13)|0;c=(hi+(mid>>>13)|0)+(w18>>>26)|0;w18&=67108863;o[0]=w0;o[1]=w1;o[2]=w2;o[3]=w3;o[4]=w4;o[5]=w5;o[6]=w6;o[7]=w7;o[8]=w8;o[9]=w9;o[10]=w10;o[11]=w11;o[12]=w12;o[13]=w13;o[14]=w14;o[15]=w15;o[16]=w16;o[17]=w17;o[18]=w18;if(c!==0){o[19]=c;out.length++}return out};if(!Math.imul){comb10MulTo=smallMulTo}function bigMulTo(self,num,out){out.negative=num.negative^self.negative;out.length=self.length+num.length;var carry=0;var hncarry=0;for(var k=0;k<out.length-1;k++){var ncarry=hncarry;hncarry=0;var rword=carry&67108863;var maxJ=Math.min(k,num.length-1);for(var j=Math.max(0,k-self.length+1);j<=maxJ;j++){var i=k-j;var a=self.words[i]|0;var b=num.words[j]|0;var r=a*b;var lo=r&67108863;ncarry=ncarry+(r/67108864|0)|0;lo=lo+rword|0;rword=lo&67108863;ncarry=ncarry+(lo>>>26)|0;hncarry+=ncarry>>>26;ncarry&=67108863}out.words[k]=rword;carry=ncarry;ncarry=hncarry}if(carry!==0){out.words[k]=carry}else{out.length--}return out.strip()}function jumboMulTo(self,num,out){var fftm=new FFTM;return fftm.mulp(self,num,out)}BN.prototype.mulTo=function mulTo(num,out){var res;var len=this.length+num.length;if(this.length===10&&num.length===10){res=comb10MulTo(this,num,out)}else if(len<63){res=smallMulTo(this,num,out)}else if(len<1024){res=bigMulTo(this,num,out)}else{res=jumboMulTo(this,num,out)}return res};function FFTM(x,y){this.x=x;this.y=y}FFTM.prototype.makeRBT=function makeRBT(N){var t=new Array(N);var l=BN.prototype._countBits(N)-1;for(var i=0;i<N;i++){t[i]=this.revBin(i,l,N)}return t};FFTM.prototype.revBin=function revBin(x,l,N){if(x===0||x===N-1)return x;var rb=0;for(var i=0;i<l;i++){rb|=(x&1)<<l-i-1;x>>=1}return rb};FFTM.prototype.permute=function permute(rbt,rws,iws,rtws,itws,N){for(var i=0;i<N;i++){rtws[i]=rws[rbt[i]];itws[i]=iws[rbt[i]]}};FFTM.prototype.transform=function transform(rws,iws,rtws,itws,N,rbt){this.permute(rbt,rws,iws,rtws,itws,N);for(var s=1;s<N;s<<=1){var l=s<<1;var rtwdf=Math.cos(2*Math.PI/l);var itwdf=Math.sin(2*Math.PI/l);for(var p=0;p<N;p+=l){var rtwdf_=rtwdf;var itwdf_=itwdf;for(var j=0;j<s;j++){var re=rtws[p+j];var ie=itws[p+j];var ro=rtws[p+j+s];var io=itws[p+j+s];var rx=rtwdf_*ro-itwdf_*io;io=rtwdf_*io+itwdf_*ro;ro=rx;rtws[p+j]=re+ro;itws[p+j]=ie+io;rtws[p+j+s]=re-ro;itws[p+j+s]=ie-io;if(j!==l){rx=rtwdf*rtwdf_-itwdf*itwdf_;itwdf_=rtwdf*itwdf_+itwdf*rtwdf_;rtwdf_=rx}}}}};FFTM.prototype.guessLen13b=function guessLen13b(n,m){var N=Math.max(m,n)|1;var odd=N&1;var i=0;for(N=N/2|0;N;N=N>>>1){i++}return 1<<i+1+odd};FFTM.prototype.conjugate=function conjugate(rws,iws,N){if(N<=1)return;for(var i=0;i<N/2;i++){var t=rws[i];rws[i]=rws[N-i-1];rws[N-i-1]=t;t=iws[i];iws[i]=-iws[N-i-1];iws[N-i-1]=-t}};FFTM.prototype.normalize13b=function normalize13b(ws,N){var carry=0;for(var i=0;i<N/2;i++){var w=Math.round(ws[2*i+1]/N)*8192+Math.round(ws[2*i]/N)+carry;ws[i]=w&67108863;if(w<67108864){carry=0}else{carry=w/67108864|0}}return ws};FFTM.prototype.convert13b=function convert13b(ws,len,rws,N){var carry=0;for(var i=0;i<len;i++){carry=carry+(ws[i]|0);rws[2*i]=carry&8191;carry=carry>>>13;rws[2*i+1]=carry&8191;carry=carry>>>13}for(i=2*len;i<N;++i){rws[i]=0}assert(carry===0);assert((carry&~8191)===0)};FFTM.prototype.stub=function stub(N){var ph=new Array(N);for(var i=0;i<N;i++){ph[i]=0}return ph};FFTM.prototype.mulp=function mulp(x,y,out){var N=2*this.guessLen13b(x.length,y.length);var rbt=this.makeRBT(N);var _=this.stub(N);var rws=new Array(N);var rwst=new Array(N);var iwst=new Array(N);var nrws=new Array(N);var nrwst=new Array(N);var niwst=new Array(N);var rmws=out.words;rmws.length=N;this.convert13b(x.words,x.length,rws,N);this.convert13b(y.words,y.length,nrws,N);this.transform(rws,_,rwst,iwst,N,rbt);this.transform(nrws,_,nrwst,niwst,N,rbt);for(var i=0;i<N;i++){var rx=rwst[i]*nrwst[i]-iwst[i]*niwst[i];iwst[i]=rwst[i]*niwst[i]+iwst[i]*nrwst[i];rwst[i]=rx}this.conjugate(rwst,iwst,N);this.transform(rwst,iwst,rmws,_,N,rbt);this.conjugate(rmws,_,N);this.normalize13b(rmws,N);out.negative=x.negative^y.negative;out.length=x.length+y.length;return out.strip()};BN.prototype.mul=function mul(num){var out=new BN(null);out.words=new Array(this.length+num.length);return this.mulTo(num,out)};BN.prototype.mulf=function mulf(num){var out=new BN(null);out.words=new Array(this.length+num.length);return jumboMulTo(this,num,out)};BN.prototype.imul=function imul(num){return this.clone().mulTo(num,this)};BN.prototype.imuln=function imuln(num){assert(typeof num==="number");assert(num<67108864);var carry=0;for(var i=0;i<this.length;i++){var w=(this.words[i]|0)*num;var lo=(w&67108863)+(carry&67108863);carry>>=26;carry+=w/67108864|0;carry+=lo>>>26;this.words[i]=lo&67108863}if(carry!==0){this.words[i]=carry;this.length++}return this};BN.prototype.muln=function muln(num){return this.clone().imuln(num)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(num){var w=toBitArray(num);if(w.length===0)return new BN(1);var res=this;for(var i=0;i<w.length;i++,res=res.sqr()){if(w[i]!==0)break}if(++i<w.length){for(var q=res.sqr();i<w.length;i++,q=q.sqr()){if(w[i]===0)continue;res=res.mul(q)}}return res};BN.prototype.iushln=function iushln(bits){assert(typeof bits==="number"&&bits>=0);var r=bits%26;var s=(bits-r)/26;var carryMask=67108863>>>26-r<<26-r;var i;if(r!==0){var carry=0;for(i=0;i<this.length;i++){var newCarry=this.words[i]&carryMask;var c=(this.words[i]|0)-newCarry<<r;this.words[i]=c|carry;carry=newCarry>>>26-r}if(carry){this.words[i]=carry;this.length++}}if(s!==0){for(i=this.length-1;i>=0;i--){this.words[i+s]=this.words[i]}for(i=0;i<s;i++){this.words[i]=0}this.length+=s}return this.strip()};BN.prototype.ishln=function ishln(bits){assert(this.negative===0);return this.iushln(bits)};BN.prototype.iushrn=function iushrn(bits,hint,extended){assert(typeof bits==="number"&&bits>=0);var h;if(hint){h=(hint-hint%26)/26}else{h=0}var r=bits%26;var s=Math.min((bits-r)/26,this.length);var mask=67108863^67108863>>>r<<r;var maskedWords=extended;h-=s;h=Math.max(0,h);if(maskedWords){for(var i=0;i<s;i++){maskedWords.words[i]=this.words[i]}maskedWords.length=s}if(s===0){}else if(this.length>s){this.length-=s;for(i=0;i<this.length;i++){this.words[i]=this.words[i+s]}}else{this.words[0]=0;this.length=1}var carry=0;for(i=this.length-1;i>=0&&(carry!==0||i>=h);i--){var word=this.words[i]|0;this.words[i]=carry<<26-r|word>>>r;carry=word&mask}if(maskedWords&&carry!==0){maskedWords.words[maskedWords.length++]=carry}if(this.length===0){this.words[0]=0;this.length=1}return this.strip()};BN.prototype.ishrn=function ishrn(bits,hint,extended){assert(this.negative===0);return this.iushrn(bits,hint,extended)};BN.prototype.shln=function shln(bits){return this.clone().ishln(bits)};BN.prototype.ushln=function ushln(bits){return this.clone().iushln(bits)};BN.prototype.shrn=function shrn(bits){return this.clone().ishrn(bits)};BN.prototype.ushrn=function ushrn(bits){return this.clone().iushrn(bits)};BN.prototype.testn=function testn(bit){assert(typeof bit==="number"&&bit>=0);var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s)return false;var w=this.words[s];return!!(w&q)};BN.prototype.imaskn=function imaskn(bits){assert(typeof bits==="number"&&bits>=0);var r=bits%26;var s=(bits-r)/26;assert(this.negative===0,"imaskn works only with positive numbers");if(this.length<=s){return this}if(r!==0){s++}this.length=Math.min(s,this.length);if(r!==0){var mask=67108863^67108863>>>r<<r;this.words[this.length-1]&=mask}return this.strip()};BN.prototype.maskn=function maskn(bits){return this.clone().imaskn(bits)};BN.prototype.iaddn=function iaddn(num){assert(typeof num==="number");assert(num<67108864);if(num<0)return this.isubn(-num);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<num){this.words[0]=num-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(num);this.negative=1;return this}return this._iaddn(num)};BN.prototype._iaddn=function _iaddn(num){this.words[0]+=num;for(var i=0;i<this.length&&this.words[i]>=67108864;i++){this.words[i]-=67108864;if(i===this.length-1){this.words[i+1]=1}else{this.words[i+1]++}}this.length=Math.max(this.length,i+1);return this};BN.prototype.isubn=function isubn(num){assert(typeof num==="number");assert(num<67108864);if(num<0)return this.iaddn(-num);if(this.negative!==0){this.negative=0;this.iaddn(num);this.negative=1;return this}this.words[0]-=num;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var i=0;i<this.length&&this.words[i]<0;i++){this.words[i]+=67108864;this.words[i+1]-=1}}return this.strip()};BN.prototype.addn=function addn(num){return this.clone().iaddn(num)};BN.prototype.subn=function subn(num){return this.clone().isubn(num)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(num,mul,shift){var len=num.length+shift;var i;this._expand(len);var w;var carry=0;for(i=0;i<num.length;i++){w=(this.words[i+shift]|0)+carry;var right=(num.words[i]|0)*mul;w-=right&67108863;carry=(w>>26)-(right/67108864|0);this.words[i+shift]=w&67108863}for(;i<this.length-shift;i++){w=(this.words[i+shift]|0)+carry;carry=w>>26;this.words[i+shift]=w&67108863}if(carry===0)return this.strip();assert(carry===-1);carry=0;for(i=0;i<this.length;i++){w=-(this.words[i]|0)+carry;carry=w>>26;this.words[i]=w&67108863}this.negative=1;return this.strip()};BN.prototype._wordDiv=function _wordDiv(num,mode){var shift=this.length-num.length;var a=this.clone();var b=num;var bhi=b.words[b.length-1]|0;var bhiBits=this._countBits(bhi);shift=26-bhiBits;if(shift!==0){b=b.ushln(shift);a.iushln(shift);bhi=b.words[b.length-1]|0}var m=a.length-b.length;var q;if(mode!=="mod"){q=new BN(null);q.length=m+1;q.words=new Array(q.length);for(var i=0;i<q.length;i++){q.words[i]=0}}var diff=a.clone()._ishlnsubmul(b,1,m);if(diff.negative===0){a=diff;if(q){q.words[m]=1}}for(var j=m-1;j>=0;j--){var qj=(a.words[b.length+j]|0)*67108864+(a.words[b.length+j-1]|0);qj=Math.min(qj/bhi|0,67108863);a._ishlnsubmul(b,qj,j);while(a.negative!==0){qj--;a.negative=0;a._ishlnsubmul(b,1,j);if(!a.isZero()){a.negative^=1}}if(q){q.words[j]=qj}}if(q){q.strip()}a.strip();if(mode!=="div"&&shift!==0){a.iushrn(shift)}return{div:q||null,mod:a}};BN.prototype.divmod=function divmod(num,mode,positive){assert(!num.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var div,mod,res;if(this.negative!==0&&num.negative===0){res=this.neg().divmod(num,mode);if(mode!=="mod"){div=res.div.neg()}if(mode!=="div"){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.iadd(num)}}return{div:div,mod:mod}}if(this.negative===0&&num.negative!==0){res=this.divmod(num.neg(),mode);if(mode!=="mod"){div=res.div.neg()}return{div:div,mod:res.mod}}if((this.negative&num.negative)!==0){res=this.neg().divmod(num.neg(),mode);if(mode!=="div"){mod=res.mod.neg();if(positive&&mod.negative!==0){mod.isub(num)}}return{div:res.div,mod:mod}}if(num.length>this.length||this.cmp(num)<0){return{div:new BN(0),mod:this}}if(num.length===1){if(mode==="div"){return{div:this.divn(num.words[0]),mod:null}}if(mode==="mod"){return{div:null,mod:new BN(this.modn(num.words[0]))}}return{div:this.divn(num.words[0]),mod:new BN(this.modn(num.words[0]))}}return this._wordDiv(num,mode)};BN.prototype.div=function div(num){return this.divmod(num,"div",false).div};BN.prototype.mod=function mod(num){return this.divmod(num,"mod",false).mod};BN.prototype.umod=function umod(num){return this.divmod(num,"mod",true).mod};BN.prototype.divRound=function divRound(num){var dm=this.divmod(num);if(dm.mod.isZero())return dm.div;var mod=dm.div.negative!==0?dm.mod.isub(num):dm.mod;var half=num.ushrn(1);var r2=num.andln(1);var cmp=mod.cmp(half);if(cmp<0||r2===1&&cmp===0)return dm.div;return dm.div.negative!==0?dm.div.isubn(1):dm.div.iaddn(1)};BN.prototype.modn=function modn(num){assert(num<=67108863);var p=(1<<26)%num;var acc=0;for(var i=this.length-1;i>=0;i--){acc=(p*acc+(this.words[i]|0))%num}return acc};BN.prototype.idivn=function idivn(num){assert(num<=67108863);var carry=0;for(var i=this.length-1;i>=0;i--){var w=(this.words[i]|0)+carry*67108864;this.words[i]=w/num|0;carry=w%num}return this.strip()};BN.prototype.divn=function divn(num){return this.clone().idivn(num)};BN.prototype.egcd=function egcd(p){assert(p.negative===0);assert(!p.isZero());var x=this;var y=p.clone();if(x.negative!==0){x=x.umod(p)}else{x=x.clone()}var A=new BN(1);var B=new BN(0);var C=new BN(0);var D=new BN(1);var g=0;while(x.isEven()&&y.isEven()){x.iushrn(1);y.iushrn(1);++g}var yp=y.clone();var xp=x.clone();while(!x.isZero()){for(var i=0,im=1;(x.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){x.iushrn(i);while(i-- >0){if(A.isOdd()||B.isOdd()){A.iadd(yp);B.isub(xp)}A.iushrn(1);B.iushrn(1)}}for(var j=0,jm=1;(y.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){y.iushrn(j);while(j-- >0){if(C.isOdd()||D.isOdd()){C.iadd(yp);D.isub(xp)}C.iushrn(1);D.iushrn(1)}}if(x.cmp(y)>=0){x.isub(y);A.isub(C);B.isub(D)}else{y.isub(x);C.isub(A);D.isub(B)}}return{a:C,b:D,gcd:y.iushln(g)}};BN.prototype._invmp=function _invmp(p){assert(p.negative===0);assert(!p.isZero());var a=this;var b=p.clone();if(a.negative!==0){a=a.umod(p)}else{a=a.clone()}var x1=new BN(1);var x2=new BN(0);var delta=b.clone();while(a.cmpn(1)>0&&b.cmpn(1)>0){for(var i=0,im=1;(a.words[0]&im)===0&&i<26;++i,im<<=1);if(i>0){a.iushrn(i);while(i-- >0){if(x1.isOdd()){x1.iadd(delta)}x1.iushrn(1)}}for(var j=0,jm=1;(b.words[0]&jm)===0&&j<26;++j,jm<<=1);if(j>0){b.iushrn(j);while(j-- >0){if(x2.isOdd()){x2.iadd(delta)}x2.iushrn(1)}}if(a.cmp(b)>=0){a.isub(b);x1.isub(x2)}else{b.isub(a);x2.isub(x1)}}var res;if(a.cmpn(1)===0){res=x1}else{res=x2}if(res.cmpn(0)<0){res.iadd(p)}return res};BN.prototype.gcd=function gcd(num){if(this.isZero())return num.abs();if(num.isZero())return this.abs();var a=this.clone();var b=num.clone();a.negative=0;b.negative=0;for(var shift=0;a.isEven()&&b.isEven();shift++){a.iushrn(1);b.iushrn(1)}do{while(a.isEven()){a.iushrn(1)}while(b.isEven()){b.iushrn(1)}var r=a.cmp(b);if(r<0){var t=a;a=b;b=t}else if(r===0||b.cmpn(1)===0){break}a.isub(b)}while(true);return b.iushln(shift)};BN.prototype.invm=function invm(num){return this.egcd(num).a.umod(num)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(num){return this.words[0]&num};BN.prototype.bincn=function bincn(bit){assert(typeof bit==="number");var r=bit%26;var s=(bit-r)/26;var q=1<<r;if(this.length<=s){this._expand(s+1);this.words[s]|=q;return this}var carry=q;for(var i=s;carry!==0&&i<this.length;i++){var w=this.words[i]|0;w+=carry;carry=w>>>26;w&=67108863;this.words[i]=w}if(carry!==0){this.words[i]=carry;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(num){var negative=num<0;if(this.negative!==0&&!negative)return-1;if(this.negative===0&&negative)return 1;this.strip();var res;if(this.length>1){res=1}else{if(negative){num=-num}assert(num<=67108863,"Number is too big");var w=this.words[0]|0;res=w===num?0:w<num?-1:1}if(this.negative!==0)return-res|0;return res};BN.prototype.cmp=function cmp(num){if(this.negative!==0&&num.negative===0)return-1;if(this.negative===0&&num.negative!==0)return 1;var res=this.ucmp(num);if(this.negative!==0)return-res|0;return res};BN.prototype.ucmp=function ucmp(num){if(this.length>num.length)return 1;if(this.length<num.length)return-1;var res=0;for(var i=this.length-1;i>=0;i--){var a=this.words[i]|0;var b=num.words[i]|0;if(a===b)continue;if(a<b){res=-1}else if(a>b){res=1}break}return res};BN.prototype.gtn=function gtn(num){return this.cmpn(num)===1};BN.prototype.gt=function gt(num){return this.cmp(num)===1};BN.prototype.gten=function gten(num){return this.cmpn(num)>=0};BN.prototype.gte=function gte(num){return this.cmp(num)>=0};BN.prototype.ltn=function ltn(num){return this.cmpn(num)===-1};BN.prototype.lt=function lt(num){return this.cmp(num)===-1};BN.prototype.lten=function lten(num){return this.cmpn(num)<=0};BN.prototype.lte=function lte(num){return this.cmp(num)<=0};BN.prototype.eqn=function eqn(num){return this.cmpn(num)===0};BN.prototype.eq=function eq(num){return this.cmp(num)===0};BN.red=function red(num){return new Red(num)};BN.prototype.toRed=function toRed(ctx){assert(!this.red,"Already a number in reduction context");assert(this.negative===0,"red works only with positives");return ctx.convertTo(this)._forceRed(ctx)};BN.prototype.fromRed=function fromRed(){assert(this.red,"fromRed works only with numbers in reduction context");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(ctx){this.red=ctx;return this};BN.prototype.forceRed=function forceRed(ctx){assert(!this.red,"Already a number in reduction context");return this._forceRed(ctx)};BN.prototype.redAdd=function redAdd(num){assert(this.red,"redAdd works only with red numbers");return this.red.add(this,num)};BN.prototype.redIAdd=function redIAdd(num){assert(this.red,"redIAdd works only with red numbers");return this.red.iadd(this,num)};BN.prototype.redSub=function redSub(num){assert(this.red,"redSub works only with red numbers");return this.red.sub(this,num)};BN.prototype.redISub=function redISub(num){assert(this.red,"redISub works only with red numbers");return this.red.isub(this,num)};BN.prototype.redShl=function redShl(num){assert(this.red,"redShl works only with red numbers");return this.red.shl(this,num)};BN.prototype.redMul=function redMul(num){assert(this.red,"redMul works only with red numbers");this.red._verify2(this,num);return this.red.mul(this,num)};BN.prototype.redIMul=function redIMul(num){assert(this.red,"redMul works only with red numbers");this.red._verify2(this,num);return this.red.imul(this,num)};BN.prototype.redSqr=function redSqr(){assert(this.red,"redSqr works only with red numbers");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,"redISqr works only with red numbers");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,"redSqrt works only with red numbers");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,"redInvm works only with red numbers");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,"redNeg works only with red numbers");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(num){assert(this.red&&!num.red,"redPow(normalNum)");this.red._verify1(this);return this.red.pow(this,num)};var primes={k256:null,p224:null,p192:null,p25519:null};function MPrime(name,p){this.name=name;this.p=new BN(p,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var tmp=new BN(null);tmp.words=new Array(Math.ceil(this.n/13));return tmp};MPrime.prototype.ireduce=function ireduce(num){var r=num;var rlen;do{this.split(r,this.tmp);r=this.imulK(r);r=r.iadd(this.tmp);rlen=r.bitLength()}while(rlen>this.n);var cmp=rlen<this.n?-1:r.ucmp(this.p);if(cmp===0){r.words[0]=0;r.length=1}else if(cmp>0){r.isub(this.p)}else{r.strip()}return r};MPrime.prototype.split=function split(input,out){input.iushrn(this.n,0,out)};MPrime.prototype.imulK=function imulK(num){return num.imul(this.k)};function K256(){MPrime.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}inherits(K256,MPrime);K256.prototype.split=function split(input,output){var mask=4194303;var outLen=Math.min(input.length,9);for(var i=0;i<outLen;i++){output.words[i]=input.words[i]}output.length=outLen;if(input.length<=9){input.words[0]=0;input.length=1;return}var prev=input.words[9];output.words[output.length++]=prev&mask;for(i=10;i<input.length;i++){var next=input.words[i]|0;input.words[i-10]=(next&mask)<<4|prev>>>22;prev=next}prev>>>=22;input.words[i-10]=prev;if(prev===0&&input.length>10){input.length-=10}else{input.length-=9}};K256.prototype.imulK=function imulK(num){num.words[num.length]=0;num.words[num.length+1]=0;num.length+=2;var lo=0;for(var i=0;i<num.length;i++){var w=num.words[i]|0;lo+=w*977;num.words[i]=lo&67108863;lo=w*64+(lo/67108864|0)}if(num.words[num.length-1]===0){num.length--;if(num.words[num.length-1]===0){num.length--}}return num};function P224(){MPrime.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}inherits(P224,MPrime);function P192(){MPrime.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}inherits(P192,MPrime);function P25519(){MPrime.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(num){var carry=0;for(var i=0;i<num.length;i++){var hi=(num.words[i]|0)*19+carry;var lo=hi&67108863;hi>>>=26;num.words[i]=lo;carry=hi}if(carry!==0){num.words[num.length++]=carry}return num};BN._prime=function prime(name){if(primes[name])return primes[name];var prime;if(name==="k256"){prime=new K256}else if(name==="p224"){prime=new P224}else if(name==="p192"){prime=new P192}else if(name==="p25519"){prime=new P25519}else{throw new Error("Unknown prime "+name)}primes[name]=prime;return prime};function Red(m){if(typeof m==="string"){var prime=BN._prime(m);this.m=prime.p;this.prime=prime}else{assert(m.gtn(1),"modulus must be greater than 1");this.m=m;this.prime=null}}Red.prototype._verify1=function _verify1(a){assert(a.negative===0,"red works only with positives");assert(a.red,"red works only with red numbers")};Red.prototype._verify2=function _verify2(a,b){assert((a.negative|b.negative)===0,"red works only with positives");assert(a.red&&a.red===b.red,"red works only with red numbers")};Red.prototype.imod=function imod(a){if(this.prime)return this.prime.ireduce(a)._forceRed(this);return a.umod(this.m)._forceRed(this)};Red.prototype.neg=function neg(a){if(a.isZero()){return a.clone()}return this.m.sub(a)._forceRed(this)};Red.prototype.add=function add(a,b){this._verify2(a,b);var res=a.add(b);if(res.cmp(this.m)>=0){res.isub(this.m)}return res._forceRed(this)};Red.prototype.iadd=function iadd(a,b){this._verify2(a,b);var res=a.iadd(b);if(res.cmp(this.m)>=0){res.isub(this.m)}return res};Red.prototype.sub=function sub(a,b){this._verify2(a,b);var res=a.sub(b);if(res.cmpn(0)<0){res.iadd(this.m)}return res._forceRed(this)};Red.prototype.isub=function isub(a,b){this._verify2(a,b);var res=a.isub(b);if(res.cmpn(0)<0){res.iadd(this.m)}return res};Red.prototype.shl=function shl(a,num){this._verify1(a);return this.imod(a.ushln(num))};Red.prototype.imul=function imul(a,b){this._verify2(a,b);return this.imod(a.imul(b))};Red.prototype.mul=function mul(a,b){this._verify2(a,b);return this.imod(a.mul(b))};Red.prototype.isqr=function isqr(a){return this.imul(a,a.clone())};Red.prototype.sqr=function sqr(a){return this.mul(a,a)};Red.prototype.sqrt=function sqrt(a){if(a.isZero())return a.clone();var mod3=this.m.andln(3);assert(mod3%2===1);if(mod3===3){var pow=this.m.add(new BN(1)).iushrn(2);return this.pow(a,pow)}var q=this.m.subn(1);var s=0;while(!q.isZero()&&q.andln(1)===0){s++;q.iushrn(1)}assert(!q.isZero());var one=new BN(1).toRed(this);var nOne=one.redNeg();var lpow=this.m.subn(1).iushrn(1);var z=this.m.bitLength();z=new BN(2*z*z).toRed(this);while(this.pow(z,lpow).cmp(nOne)!==0){z.redIAdd(nOne)}var c=this.pow(z,q);var r=this.pow(a,q.addn(1).iushrn(1));var t=this.pow(a,q);var m=s;while(t.cmp(one)!==0){var tmp=t;for(var i=0;tmp.cmp(one)!==0;i++){tmp=tmp.redSqr()}assert(i<m);var b=this.pow(c,new BN(1).iushln(m-i-1));r=r.redMul(b);c=b.redSqr();t=t.redMul(c);m=i}return r};Red.prototype.invm=function invm(a){var inv=a._invmp(this.m);if(inv.negative!==0){inv.negative=0;return this.imod(inv).redNeg()}else{return this.imod(inv)}};Red.prototype.pow=function pow(a,num){if(num.isZero())return new BN(1).toRed(this);if(num.cmpn(1)===0)return a.clone();var windowSize=4;var wnd=new Array(1<<windowSize);wnd[0]=new BN(1).toRed(this);wnd[1]=a;for(var i=2;i<wnd.length;i++){wnd[i]=this.mul(wnd[i-1],a)}var res=wnd[0];var current=0;var currentLen=0;var start=num.bitLength()%26;if(start===0){start=26}for(i=num.length-1;i>=0;i--){var word=num.words[i];for(var j=start-1;j>=0;j--){var bit=word>>j&1;if(res!==wnd[0]){res=this.sqr(res)}if(bit===0&&current===0){currentLen=0;continue}current<<=1;current|=bit;currentLen++;if(currentLen!==windowSize&&(i!==0||j!==0))continue;res=this.mul(res,wnd[current]);currentLen=0;current=0}start=26}return res};Red.prototype.convertTo=function convertTo(num){var r=num.umod(this.m);return r===num?r.clone():r};Red.prototype.convertFrom=function convertFrom(num){var res=num.clone();res.red=null;return res};BN.mont=function mont(num){return new Mont(num)};function Mont(m){Red.call(this,m);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(num){return this.imod(num.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(num){var r=this.imod(num.mul(this.rinv));r.red=null;return r};Mont.prototype.imul=function imul(a,b){if(a.isZero()||b.isZero()){a.words[0]=0;a.length=1;return a}var t=a.imul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.mul=function mul(a,b){if(a.isZero()||b.isZero())return new BN(0)._forceRed(this);var t=a.mul(b);var c=t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var u=t.isub(c).iushrn(this.shift);var res=u;if(u.cmp(this.m)>=0){res=u.isub(this.m)}else if(u.cmpn(0)<0){res=u.iadd(this.m)}return res._forceRed(this)};Mont.prototype.invm=function invm(a){var res=this.imod(a._invmp(this.m).mul(this.r2));return res._forceRed(this)}})(typeof module==="undefined"||module,this)},{buffer:118}],117:[function(require,module,exports){var r;module.exports=function rand(len){if(!r)r=new Rand(null);return r.generate(len)};function Rand(rand){this.rand=rand}module.exports.Rand=Rand;Rand.prototype.generate=function generate(len){return this._rand(len)};Rand.prototype._rand=function _rand(n){if(this.rand.getBytes)return this.rand.getBytes(n);var res=new Uint8Array(n);for(var i=0;i<res.length;i++)res[i]=this.rand.getByte();return res};if(typeof self==="object"){if(self.crypto&&self.crypto.getRandomValues){Rand.prototype._rand=function _rand(n){var arr=new Uint8Array(n);self.crypto.getRandomValues(arr);return arr}}else if(self.msCrypto&&self.msCrypto.getRandomValues){Rand.prototype._rand=function _rand(n){var arr=new Uint8Array(n);self.msCrypto.getRandomValues(arr);return arr}}else if(typeof window==="object"){Rand.prototype._rand=function(){throw new Error("Not implemented yet")}}}else{try{var crypto=require("crypto");if(typeof crypto.randomBytes!=="function")throw new Error("Not supported");Rand.prototype._rand=function _rand(n){return crypto.randomBytes(n)}}catch(e){}}},{crypto:118}],118:[function(require,module,exports){},{}],119:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;function asUInt32Array(buf){if(!Buffer.isBuffer(buf))buf=Buffer.from(buf);var len=buf.length/4|0;var out=new Array(len);for(var i=0;i<len;i++){out[i]=buf.readUInt32BE(i*4)}return out}function scrubVec(v){for(var i=0;i<v.length;v++){v[i]=0}}function cryptBlock(M,keySchedule,SUB_MIX,SBOX,nRounds){var SUB_MIX0=SUB_MIX[0];var SUB_MIX1=SUB_MIX[1];var SUB_MIX2=SUB_MIX[2];var SUB_MIX3=SUB_MIX[3];var s0=M[0]^keySchedule[0];var s1=M[1]^keySchedule[1];var s2=M[2]^keySchedule[2];var s3=M[3]^keySchedule[3];var t0,t1,t2,t3;var ksRow=4;for(var round=1;round<nRounds;round++){t0=SUB_MIX0[s0>>>24]^SUB_MIX1[s1>>>16&255]^SUB_MIX2[s2>>>8&255]^SUB_MIX3[s3&255]^keySchedule[ksRow++];t1=SUB_MIX0[s1>>>24]^SUB_MIX1[s2>>>16&255]^SUB_MIX2[s3>>>8&255]^SUB_MIX3[s0&255]^keySchedule[ksRow++];t2=SUB_MIX0[s2>>>24]^SUB_MIX1[s3>>>16&255]^SUB_MIX2[s0>>>8&255]^SUB_MIX3[s1&255]^keySchedule[ksRow++];t3=SUB_MIX0[s3>>>24]^SUB_MIX1[s0>>>16&255]^SUB_MIX2[s1>>>8&255]^SUB_MIX3[s2&255]^keySchedule[ksRow++];s0=t0;s1=t1;s2=t2;s3=t3}t0=(SBOX[s0>>>24]<<24|SBOX[s1>>>16&255]<<16|SBOX[s2>>>8&255]<<8|SBOX[s3&255])^keySchedule[ksRow++];t1=(SBOX[s1>>>24]<<24|SBOX[s2>>>16&255]<<16|SBOX[s3>>>8&255]<<8|SBOX[s0&255])^keySchedule[ksRow++];t2=(SBOX[s2>>>24]<<24|SBOX[s3>>>16&255]<<16|SBOX[s0>>>8&255]<<8|SBOX[s1&255])^keySchedule[ksRow++];t3=(SBOX[s3>>>24]<<24|SBOX[s0>>>16&255]<<16|SBOX[s1>>>8&255]<<8|SBOX[s2&255])^keySchedule[ksRow++];t0=t0>>>0;t1=t1>>>0;t2=t2>>>0;t3=t3>>>0;return[t0,t1,t2,t3]}var RCON=[0,1,2,4,8,16,32,64,128,27,54];var G=function(){var d=new Array(256);for(var j=0;j<256;j++){if(j<128){d[j]=j<<1}else{d[j]=j<<1^283}}var SBOX=[];var INV_SBOX=[];var SUB_MIX=[[],[],[],[]];var INV_SUB_MIX=[[],[],[],[]];var x=0;var xi=0;for(var i=0;i<256;++i){var sx=xi^xi<<1^xi<<2^xi<<3^xi<<4;sx=sx>>>8^sx&255^99;SBOX[x]=sx;INV_SBOX[sx]=x;var x2=d[x];var x4=d[x2];var x8=d[x4];var t=d[sx]*257^sx*16843008;SUB_MIX[0][x]=t<<24|t>>>8;SUB_MIX[1][x]=t<<16|t>>>16;SUB_MIX[2][x]=t<<8|t>>>24;SUB_MIX[3][x]=t;t=x8*16843009^x4*65537^x2*257^x*16843008;INV_SUB_MIX[0][sx]=t<<24|t>>>8;INV_SUB_MIX[1][sx]=t<<16|t>>>16;INV_SUB_MIX[2][sx]=t<<8|t>>>24;INV_SUB_MIX[3][sx]=t;if(x===0){x=xi=1}else{x=x2^d[d[d[x8^x2]]];xi^=d[d[xi]]}}return{SBOX:SBOX,INV_SBOX:INV_SBOX,SUB_MIX:SUB_MIX,INV_SUB_MIX:INV_SUB_MIX}}();function AES(key){this._key=asUInt32Array(key);this._reset()}AES.blockSize=4*4;AES.keySize=256/8;AES.prototype.blockSize=AES.blockSize;AES.prototype.keySize=AES.keySize;AES.prototype._reset=function(){var keyWords=this._key;var keySize=keyWords.length;var nRounds=keySize+6;var ksRows=(nRounds+1)*4;var keySchedule=[];for(var k=0;k<keySize;k++){keySchedule[k]=keyWords[k]}for(k=keySize;k<ksRows;k++){var t=keySchedule[k-1];if(k%keySize===0){t=t<<8|t>>>24;t=G.SBOX[t>>>24]<<24|G.SBOX[t>>>16&255]<<16|G.SBOX[t>>>8&255]<<8|G.SBOX[t&255];t^=RCON[k/keySize|0]<<24}else if(keySize>6&&k%keySize===4){t=G.SBOX[t>>>24]<<24|G.SBOX[t>>>16&255]<<16|G.SBOX[t>>>8&255]<<8|G.SBOX[t&255]}keySchedule[k]=keySchedule[k-keySize]^t}var invKeySchedule=[];for(var ik=0;ik<ksRows;ik++){var ksR=ksRows-ik;var tt=keySchedule[ksR-(ik%4?0:4)];if(ik<4||ksR<=4){invKeySchedule[ik]=tt}else{invKeySchedule[ik]=G.INV_SUB_MIX[0][G.SBOX[tt>>>24]]^G.INV_SUB_MIX[1][G.SBOX[tt>>>16&255]]^G.INV_SUB_MIX[2][G.SBOX[tt>>>8&255]]^G.INV_SUB_MIX[3][G.SBOX[tt&255]]}}this._nRounds=nRounds;this._keySchedule=keySchedule;this._invKeySchedule=invKeySchedule};AES.prototype.encryptBlockRaw=function(M){M=asUInt32Array(M);return cryptBlock(M,this._keySchedule,G.SUB_MIX,G.SBOX,this._nRounds)};AES.prototype.encryptBlock=function(M){var out=this.encryptBlockRaw(M);var buf=Buffer.allocUnsafe(16);buf.writeUInt32BE(out[0],0);buf.writeUInt32BE(out[1],4);buf.writeUInt32BE(out[2],8);buf.writeUInt32BE(out[3],12);return buf};AES.prototype.decryptBlock=function(M){M=asUInt32Array(M);var m1=M[1];M[1]=M[3];M[3]=m1;var out=cryptBlock(M,this._invKeySchedule,G.INV_SUB_MIX,G.INV_SBOX,this._nRounds);var buf=Buffer.allocUnsafe(16);buf.writeUInt32BE(out[0],0);buf.writeUInt32BE(out[3],4);buf.writeUInt32BE(out[2],8);buf.writeUInt32BE(out[1],12);return buf};AES.prototype.scrub=function(){scrubVec(this._keySchedule);scrubVec(this._invKeySchedule);scrubVec(this._key)};module.exports.AES=AES},{"safe-buffer":434}],120:[function(require,module,exports){var aes=require("./aes");var Buffer=require("safe-buffer").Buffer;var Transform=require("cipher-base");var inherits=require("inherits");var GHASH=require("./ghash");var xor=require("buffer-xor");var incr32=require("./incr32");function xorTest(a,b){var out=0;if(a.length!==b.length)out++;var len=Math.min(a.length,b.length);for(var i=0;i<len;++i){out+=a[i]^b[i]}return out}function calcIv(self,iv,ck){if(iv.length===12){self._finID=Buffer.concat([iv,Buffer.from([0,0,0,1])]);return Buffer.concat([iv,Buffer.from([0,0,0,2])])}var ghash=new GHASH(ck);var len=iv.length;var toPad=len%16;ghash.update(iv);if(toPad){toPad=16-toPad;ghash.update(Buffer.alloc(toPad,0))}ghash.update(Buffer.alloc(8,0));var ivBits=len*8;var tail=Buffer.alloc(8);tail.writeUIntBE(ivBits,0,8);ghash.update(tail);self._finID=ghash.state;var out=Buffer.from(self._finID);incr32(out);return out}function StreamCipher(mode,key,iv,decrypt){Transform.call(this);var h=Buffer.alloc(4,0);this._cipher=new aes.AES(key);var ck=this._cipher.encryptBlock(h);this._ghash=new GHASH(ck);iv=calcIv(this,iv,ck);this._prev=Buffer.from(iv);this._cache=Buffer.allocUnsafe(0);this._secCache=Buffer.allocUnsafe(0);this._decrypt=decrypt;this._alen=0;this._len=0;this._mode=mode;this._authTag=null;this._called=false}inherits(StreamCipher,Transform);StreamCipher.prototype._update=function(chunk){if(!this._called&&this._alen){var rump=16-this._alen%16;if(rump<16){rump=Buffer.alloc(rump,0);this._ghash.update(rump)}}this._called=true;var out=this._mode.encrypt(this,chunk);if(this._decrypt){this._ghash.update(chunk)}else{this._ghash.update(out)}this._len+=chunk.length;return out};StreamCipher.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var tag=xor(this._ghash.final(this._alen*8,this._len*8),this._cipher.encryptBlock(this._finID));if(this._decrypt&&xorTest(tag,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=tag;this._cipher.scrub()};StreamCipher.prototype.getAuthTag=function getAuthTag(){if(this._decrypt||!Buffer.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag};StreamCipher.prototype.setAuthTag=function setAuthTag(tag){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=tag};StreamCipher.prototype.setAAD=function setAAD(buf){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(buf);this._alen+=buf.length};module.exports=StreamCipher},{"./aes":119,"./ghash":124,"./incr32":125,"buffer-xor":149,"cipher-base":186,inherits:352,"safe-buffer":434}],121:[function(require,module,exports){var ciphers=require("./encrypter");var deciphers=require("./decrypter");var modes=require("./modes/list.json");function getCiphers(){return Object.keys(modes)}exports.createCipher=exports.Cipher=ciphers.createCipher;exports.createCipheriv=exports.Cipheriv=ciphers.createCipheriv;exports.createDecipher=exports.Decipher=deciphers.createDecipher;exports.createDecipheriv=exports.Decipheriv=deciphers.createDecipheriv;exports.listCiphers=exports.getCiphers=getCiphers},{"./decrypter":122,"./encrypter":123,"./modes/list.json":133}],122:[function(require,module,exports){var AuthCipher=require("./authCipher");var Buffer=require("safe-buffer").Buffer;var MODES=require("./modes");var StreamCipher=require("./streamCipher");var Transform=require("cipher-base");var aes=require("./aes");var ebtk=require("evp_bytestokey");var inherits=require("inherits");function Decipher(mode,key,iv){Transform.call(this);this._cache=new Splitter;this._last=void 0;this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=true}inherits(Decipher,Transform);Decipher.prototype._update=function(data){this._cache.add(data);var chunk;var thing;var out=[];while(chunk=this._cache.get(this._autopadding)){thing=this._mode.decrypt(this,chunk);out.push(thing)}return Buffer.concat(out)};Decipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){return unpad(this._mode.decrypt(this,chunk))}else if(chunk){throw new Error("data not multiple of block length")}};Decipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this};function Splitter(){this.cache=Buffer.allocUnsafe(0)}Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data])};Splitter.prototype.get=function(autoPadding){var out;if(autoPadding){if(this.cache.length>16){out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out}}else{if(this.cache.length>=16){out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out}}return null};Splitter.prototype.flush=function(){if(this.cache.length)return this.cache};function unpad(last){var padded=last[15];var i=-1;while(++i<padded){if(last[i+(16-padded)]!==padded){throw new Error("unable to decrypt data")}}if(padded===16)return;return last.slice(0,16-padded)}function createDecipheriv(suite,password,iv){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError("invalid suite type");if(typeof iv==="string")iv=Buffer.from(iv);if(config.mode!=="GCM"&&iv.length!==config.iv)throw new TypeError("invalid iv length "+iv.length);if(typeof password==="string")password=Buffer.from(password);if(password.length!==config.key/8)throw new TypeError("invalid key length "+password.length);if(config.type==="stream"){return new StreamCipher(config.module,password,iv,true)}else if(config.type==="auth"){return new AuthCipher(config.module,password,iv,true)}return new Decipher(config.module,password,iv)}function createDecipher(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError("invalid suite type");var keys=ebtk(password,false,config.key,config.iv);return createDecipheriv(suite,keys.key,keys.iv)}exports.createDecipher=createDecipher;exports.createDecipheriv=createDecipheriv},{"./aes":119,"./authCipher":120,"./modes":132,"./streamCipher":135,"cipher-base":186,evp_bytestokey:333,inherits:352,"safe-buffer":434}],123:[function(require,module,exports){var MODES=require("./modes");var AuthCipher=require("./authCipher");var Buffer=require("safe-buffer").Buffer;var StreamCipher=require("./streamCipher");var Transform=require("cipher-base");var aes=require("./aes");var ebtk=require("evp_bytestokey");var inherits=require("inherits");function Cipher(mode,key,iv){Transform.call(this);this._cache=new Splitter;this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=true}inherits(Cipher,Transform);Cipher.prototype._update=function(data){this._cache.add(data);var chunk;var thing;var out=[];while(chunk=this._cache.get()){thing=this._mode.encrypt(this,chunk);out.push(thing)}return Buffer.concat(out)};var PADDING=Buffer.alloc(16,16);Cipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){chunk=this._mode.encrypt(this,chunk);this._cipher.scrub();return chunk}if(!chunk.equals(PADDING)){this._cipher.scrub();throw new Error("data not multiple of block length")}};Cipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this};function Splitter(){this.cache=Buffer.allocUnsafe(0)}Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data])};Splitter.prototype.get=function(){if(this.cache.length>15){var out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out}return null};Splitter.prototype.flush=function(){var len=16-this.cache.length;var padBuff=Buffer.allocUnsafe(len);var i=-1;while(++i<len){padBuff.writeUInt8(len,i)}return Buffer.concat([this.cache,padBuff])};function createCipheriv(suite,password,iv){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError("invalid suite type");if(typeof password==="string")password=Buffer.from(password);if(password.length!==config.key/8)throw new TypeError("invalid key length "+password.length);if(typeof iv==="string")iv=Buffer.from(iv);if(config.mode!=="GCM"&&iv.length!==config.iv)throw new TypeError("invalid iv length "+iv.length);if(config.type==="stream"){return new StreamCipher(config.module,password,iv)}else if(config.type==="auth"){return new AuthCipher(config.module,password,iv)}return new Cipher(config.module,password,iv)}function createCipher(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError("invalid suite type");var keys=ebtk(password,false,config.key,config.iv);return createCipheriv(suite,keys.key,keys.iv)}exports.createCipheriv=createCipheriv;exports.createCipher=createCipher},{"./aes":119,"./authCipher":120,"./modes":132,"./streamCipher":135,"cipher-base":186,evp_bytestokey:333,inherits:352,"safe-buffer":434}],124:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;var ZEROES=Buffer.alloc(16,0);function toArray(buf){return[buf.readUInt32BE(0),buf.readUInt32BE(4),buf.readUInt32BE(8),buf.readUInt32BE(12)]}function fromArray(out){var buf=Buffer.allocUnsafe(16);buf.writeUInt32BE(out[0]>>>0,0);buf.writeUInt32BE(out[1]>>>0,4);buf.writeUInt32BE(out[2]>>>0,8);buf.writeUInt32BE(out[3]>>>0,12);return buf}function GHASH(key){this.h=key;this.state=Buffer.alloc(16,0);this.cache=Buffer.allocUnsafe(0)}GHASH.prototype.ghash=function(block){var i=-1;while(++i<block.length){this.state[i]^=block[i]}this._multiply()};GHASH.prototype._multiply=function(){var Vi=toArray(this.h);var Zi=[0,0,0,0];var j,xi,lsbVi;var i=-1;while(++i<128){xi=(this.state[~~(i/8)]&1<<7-i%8)!==0;if(xi){Zi[0]^=Vi[0];Zi[1]^=Vi[1];Zi[2]^=Vi[2];Zi[3]^=Vi[3]}lsbVi=(Vi[3]&1)!==0;for(j=3;j>0;j--){Vi[j]=Vi[j]>>>1|(Vi[j-1]&1)<<31}Vi[0]=Vi[0]>>>1;if(lsbVi){Vi[0]=Vi[0]^225<<24}}this.state=fromArray(Zi)};GHASH.prototype.update=function(buf){this.cache=Buffer.concat([this.cache,buf]);var chunk;while(this.cache.length>=16){chunk=this.cache.slice(0,16);this.cache=this.cache.slice(16);this.ghash(chunk)}};GHASH.prototype.final=function(abl,bl){if(this.cache.length){this.ghash(Buffer.concat([this.cache,ZEROES],16))}this.ghash(fromArray([0,abl,0,bl]));return this.state};module.exports=GHASH},{"safe-buffer":434}],125:[function(require,module,exports){function incr32(iv){var len=iv.length;var item;while(len--){item=iv.readUInt8(len);if(item===255){iv.writeUInt8(0,len)}else{item++;iv.writeUInt8(item,len);break}}}module.exports=incr32},{}],126:[function(require,module,exports){var xor=require("buffer-xor");exports.encrypt=function(self,block){var data=xor(block,self._prev);self._prev=self._cipher.encryptBlock(data);return self._prev};exports.decrypt=function(self,block){var pad=self._prev;self._prev=block;var out=self._cipher.decryptBlock(block);return xor(out,pad)}},{"buffer-xor":149}],127:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;var xor=require("buffer-xor");function encryptStart(self,data,decrypt){var len=data.length;var out=xor(data,self._cache);self._cache=self._cache.slice(len);self._prev=Buffer.concat([self._prev,decrypt?data:out]);return out}exports.encrypt=function(self,data,decrypt){var out=Buffer.allocUnsafe(0);var len;while(data.length){if(self._cache.length===0){self._cache=self._cipher.encryptBlock(self._prev);self._prev=Buffer.allocUnsafe(0)}if(self._cache.length<=data.length){len=self._cache.length;out=Buffer.concat([out,encryptStart(self,data.slice(0,len),decrypt)]);data=data.slice(len)}else{out=Buffer.concat([out,encryptStart(self,data,decrypt)]);break}}return out}},{"buffer-xor":149,"safe-buffer":434}],128:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;function encryptByte(self,byteParam,decrypt){var pad;var i=-1;var len=8;var out=0;var bit,value;while(++i<len){pad=self._cipher.encryptBlock(self._prev);bit=byteParam&1<<7-i?128:0;value=pad[0]^bit;out+=(value&128)>>i%8;self._prev=shiftIn(self._prev,decrypt?bit:value)}return out}function shiftIn(buffer,value){var len=buffer.length;var i=-1;var out=Buffer.allocUnsafe(buffer.length);buffer=Buffer.concat([buffer,Buffer.from([value])]);while(++i<len){out[i]=buffer[i]<<1|buffer[i+1]>>7}return out}exports.encrypt=function(self,chunk,decrypt){var len=chunk.length;var out=Buffer.allocUnsafe(len);var i=-1;while(++i<len){out[i]=encryptByte(self,chunk[i],decrypt)}return out}},{"safe-buffer":434}],129:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;function encryptByte(self,byteParam,decrypt){var pad=self._cipher.encryptBlock(self._prev);var out=pad[0]^byteParam;self._prev=Buffer.concat([self._prev.slice(1),Buffer.from([decrypt?byteParam:out])]);return out}exports.encrypt=function(self,chunk,decrypt){var len=chunk.length;var out=Buffer.allocUnsafe(len);var i=-1;while(++i<len){out[i]=encryptByte(self,chunk[i],decrypt)}return out}},{"safe-buffer":434}],130:[function(require,module,exports){var xor=require("buffer-xor");var Buffer=require("safe-buffer").Buffer;var incr32=require("../incr32");function getBlock(self){var out=self._cipher.encryptBlockRaw(self._prev);incr32(self._prev);return out}var blockSize=16;exports.encrypt=function(self,chunk){var chunkNum=Math.ceil(chunk.length/blockSize);var start=self._cache.length;self._cache=Buffer.concat([self._cache,Buffer.allocUnsafe(chunkNum*blockSize)]);for(var i=0;i<chunkNum;i++){var out=getBlock(self);var offset=start+i*blockSize;self._cache.writeUInt32BE(out[0],offset+0);self._cache.writeUInt32BE(out[1],offset+4);self._cache.writeUInt32BE(out[2],offset+8);self._cache.writeUInt32BE(out[3],offset+12)}var pad=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,pad)}},{"../incr32":125,"buffer-xor":149,"safe-buffer":434}],131:[function(require,module,exports){exports.encrypt=function(self,block){return self._cipher.encryptBlock(block)};exports.decrypt=function(self,block){return self._cipher.decryptBlock(block)}},{}],132:[function(require,module,exports){var modeModules={ECB:require("./ecb"),CBC:require("./cbc"),CFB:require("./cfb"),CFB8:require("./cfb8"),CFB1:require("./cfb1"),OFB:require("./ofb"),CTR:require("./ctr"),GCM:require("./ctr")};var modes=require("./list.json");for(var key in modes){modes[key].module=modeModules[modes[key].mode]}module.exports=modes},{"./cbc":126,"./cfb":127,"./cfb1":128,"./cfb8":129,"./ctr":130,"./ecb":131,"./list.json":133,"./ofb":134}],133:[function(require,module,exports){module.exports={"aes-128-ecb":{cipher:"AES",key:128,iv:0,mode:"ECB",type:"block"},"aes-192-ecb":{cipher:"AES",key:192,iv:0,mode:"ECB",type:"block"},"aes-256-ecb":{cipher:"AES",key:256,iv:0,mode:"ECB",type:"block"},"aes-128-cbc":{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},"aes-192-cbc":{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},"aes-256-cbc":{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},aes128:{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},aes192:{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},aes256:{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},"aes-128-cfb":{cipher:"AES",key:128,iv:16,mode:"CFB",type:"stream"},"aes-192-cfb":{cipher:"AES",key:192,iv:16,mode:"CFB",type:"stream"},"aes-256-cfb":{cipher:"AES",key:256,iv:16,mode:"CFB",type:"stream"},"aes-128-cfb8":{cipher:"AES",key:128,iv:16,mode:"CFB8",type:"stream"},"aes-192-cfb8":{cipher:"AES",key:192,iv:16,mode:"CFB8",type:"stream"},"aes-256-cfb8":{cipher:"AES",key:256,iv:16,mode:"CFB8",type:"stream"},"aes-128-cfb1":{cipher:"AES",key:128,iv:16,mode:"CFB1",type:"stream"},"aes-192-cfb1":{cipher:"AES",key:192,iv:16,mode:"CFB1",type:"stream"},"aes-256-cfb1":{cipher:"AES",key:256,iv:16,mode:"CFB1",type:"stream"},"aes-128-ofb":{cipher:"AES",key:128,iv:16,mode:"OFB",type:"stream"},"aes-192-ofb":{cipher:"AES",key:192,iv:16,mode:"OFB",type:"stream"},"aes-256-ofb":{cipher:"AES",key:256,iv:16,mode:"OFB",type:"stream"},"aes-128-ctr":{cipher:"AES",key:128,iv:16,mode:"CTR",type:"stream"},"aes-192-ctr":{cipher:"AES",key:192,iv:16,mode:"CTR",type:"stream"},"aes-256-ctr":{cipher:"AES",key:256,iv:16,mode:"CTR",type:"stream"},"aes-128-gcm":{cipher:"AES",key:128,iv:12,mode:"GCM",type:"auth"},"aes-192-gcm":{cipher:"AES",key:192,iv:12,mode:"GCM",type:"auth"},"aes-256-gcm":{cipher:"AES",key:256,iv:12,mode:"GCM",type:"auth"}}},{}],134:[function(require,module,exports){(function(Buffer){var xor=require("buffer-xor");function getBlock(self){self._prev=self._cipher.encryptBlock(self._prev);return self._prev}exports.encrypt=function(self,chunk){while(self._cache.length<chunk.length){self._cache=Buffer.concat([self._cache,getBlock(self)])}var pad=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,pad)}}).call(this,require("buffer").Buffer)},{buffer:150,"buffer-xor":149}],135:[function(require,module,exports){var aes=require("./aes");var Buffer=require("safe-buffer").Buffer;var Transform=require("cipher-base");var inherits=require("inherits");function StreamCipher(mode,key,iv,decrypt){Transform.call(this);this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._cache=Buffer.allocUnsafe(0);this._secCache=Buffer.allocUnsafe(0);this._decrypt=decrypt;this._mode=mode}inherits(StreamCipher,Transform);StreamCipher.prototype._update=function(chunk){return this._mode.encrypt(this,chunk,this._decrypt)};StreamCipher.prototype._final=function(){this._cipher.scrub()};module.exports=StreamCipher},{"./aes":119,"cipher-base":186,inherits:352,"safe-buffer":434}],136:[function(require,module,exports){(function(Buffer){var MAX=1e9,MAX_POWER=1e6,DECIMAL_PLACES=20,ROUNDING_MODE=4,TO_EXP_NEG=-7,TO_EXP_POS=21,MIN_EXP=-MAX,MAX_EXP=MAX,ERRORS=true,parse=parseInt,P=BigNumber.prototype,DIGITS="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",outOfRange,id=0,isValid=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},ONE=BigNumber(1);function BigNumber(n,b){var e,i,isNum,digits,valid,orig,x=this;if(!(x instanceof BigNumber)){return new BigNumber(n,b)}if(n instanceof BigNumber){id=0;if(b!==e){n+=""}else{x["s"]=n["s"];x["e"]=n["e"];x["c"]=(n=n["c"])?n.slice():n;return}}if(typeof n!="string"){n=(isNum=typeof n=="number"||Object.prototype.toString.call(n)=="[object Number]")&&n===0&&1/n<0?"-0":n+""}orig=n;if(b===e&&isValid.test(n)){x["s"]=n.charAt(0)=="-"?(n=n.slice(1),-1):1}else{if(b==10){return setMode(n,DECIMAL_PLACES,ROUNDING_MODE)}n=trim.call(n).replace(/^\+(?!-)/,"");x["s"]=n.charAt(0)=="-"?(n=n.replace(/^-(?!-)/,""),-1):1;if(b!=null){if((b==(b|0)||!ERRORS)&&!(outOfRange=!(b>=2&&b<65))){digits="["+DIGITS.slice(0,b=b|0)+"]+";n=n.replace(/\.$/,"").replace(/^\./,"0.");if(valid=new RegExp("^"+digits+"(?:\\."+digits+")?$",b<37?"i":"").test(n)){if(isNum){if(n.replace(/^0\.0*|\./,"").length>15){ifExceptionsThrow(orig,0)}isNum=!isNum}n=convert(n,10,b,x["s"])}else if(n!="Infinity"&&n!="NaN"){ifExceptionsThrow(orig,1,b);n="NaN"}}else{ifExceptionsThrow(b,2);valid=isValid.test(n)}}else{valid=isValid.test(n)}if(!valid){x["c"]=x["e"]=null;if(n!="Infinity"){if(n!="NaN"){ifExceptionsThrow(orig,3)}x["s"]=null}id=0;return}}if((e=n.indexOf("."))>-1){n=n.replace(".","")}if((i=n.search(/e/i))>0){if(e<0){e=i}e+=+n.slice(i+1);n=n.substring(0,i)}else if(e<0){e=n.length}for(i=0;n.charAt(i)=="0";i++){}b=n.length;if(isNum&&b>15&&n.slice(i).length>15){ifExceptionsThrow(orig,0)}id=0;if((e-=i+1)>MAX_EXP){x["c"]=x["e"]=null}else if(i==b||e<MIN_EXP){x["c"]=[x["e"]=0]}else{for(;n.charAt(--b)=="0";){}x["e"]=e;x["c"]=[];for(e=0;i<=b;x["c"][e++]=+n.charAt(i++)){}}}BigNumber["ROUND_UP"]=0;BigNumber["ROUND_DOWN"]=1;BigNumber["ROUND_CEIL"]=2;BigNumber["ROUND_FLOOR"]=3;BigNumber["ROUND_HALF_UP"]=4;BigNumber["ROUND_HALF_DOWN"]=5;BigNumber["ROUND_HALF_EVEN"]=6;BigNumber["ROUND_HALF_CEIL"]=7;BigNumber["ROUND_HALF_FLOOR"]=8;BigNumber["fromBuffer"]=function(buf,opts){if(!opts)opts={};var endian={1:"big","-1":"little"}[opts.endian]||opts.endian||"big";var size=opts.size==="auto"?Math.ceil(buf.length):opts.size||1;if(buf.length%size!==0){throw new RangeError("Buffer length ("+buf.length+")"+" must be a multiple of size ("+size+")")}var hex=[];for(var i=0;i<buf.length;i+=size){var chunk=[];for(var j=0;j<size;j++){chunk.push(buf[i+(endian==="big"?j:size-j-1)])}hex.push(chunk.map(function(c){return(c<16?"0":"")+c.toString(16)}).join(""))}return BigNumber(hex.join(""),16)};BigNumber["config"]=function(){var v,p,i=0,r={},a=arguments,o=a[0],c="config",inRange=function(n,lo,hi){return!((outOfRange=n<lo||n>hi)||parse(n)!=n&&n!==0)},has=o&&typeof o=="object"?function(){if(o.hasOwnProperty(p))return(v=o[p])!=null}:function(){if(a.length>i)return(v=a[i++])!=null};if(has(p="DECIMAL_PLACES")){if(inRange(v,0,MAX)){DECIMAL_PLACES=v|0}else{ifExceptionsThrow(v,p,c)}}r[p]=DECIMAL_PLACES;if(has(p="ROUNDING_MODE")){if(inRange(v,0,8)){ROUNDING_MODE=v|0}else{ifExceptionsThrow(v,p,c)}}r[p]=ROUNDING_MODE;if(has(p="EXPONENTIAL_AT")){if(inRange(v,-MAX,MAX)){TO_EXP_NEG=-(TO_EXP_POS=~~(v<0?-v:+v))}else if(!outOfRange&&v&&inRange(v[0],-MAX,0)&&inRange(v[1],0,MAX)){TO_EXP_NEG=~~v[0];TO_EXP_POS=~~v[1]}else{ifExceptionsThrow(v,p,c,1)}}r[p]=[TO_EXP_NEG,TO_EXP_POS];if(has(p="RANGE")){if(inRange(v,-MAX,MAX)&&~~v){MIN_EXP=-(MAX_EXP=~~(v<0?-v:+v))}else if(!outOfRange&&v&&inRange(v[0],-MAX,-1)&&inRange(v[1],1,MAX)){MIN_EXP=~~v[0],MAX_EXP=~~v[1]}else{ifExceptionsThrow(v,p,c,1,1)}}r[p]=[MIN_EXP,MAX_EXP];if(has(p="ERRORS")){if(v===!!v||v===1||v===0){parse=(outOfRange=id=0,ERRORS=!!v)?parseInt:parseFloat}else{ifExceptionsThrow(v,p,c,0,0,1)}}r[p]=ERRORS;return r};function ifExceptionsThrow(arg,i,j,isArray,isRange,isErrors){if(ERRORS){var error,method=["new BigNumber","cmp","div","eq","gt","gte","lt","lte","minus","mod","plus","times","toFr"][id?id<0?-id:id:1/id<0?1:0]+"()",message=outOfRange?" out of range":" not a"+(isRange?" non-zero":"n")+" integer";message=([method+" number type has more than 15 significant digits",method+" not a base "+j+" number",method+" base"+message,method+" not a number"][i]||j+"() "+i+(isErrors?" not a boolean or binary digit":message+(isArray?" or not ["+(outOfRange?" negative, positive":" integer, integer")+" ]":"")))+": "+arg;outOfRange=id=0;error=new Error(message);error["name"]="BigNumber Error";throw error}}function convert(nStr,baseOut,baseIn,sign){var e,dvs,dvd,nArr,fracArr,fracBN;function strToArr(str,bIn){var j,i=0,strL=str.length,arrL,arr=[0];for(bIn=bIn||baseIn;i<strL;i++){for(arrL=arr.length,j=0;j<arrL;arr[j]*=bIn,j++){}for(arr[0]+=DIGITS.indexOf(str.charAt(i)),j=0;j<arr.length;j++){if(arr[j]>baseOut-1){if(arr[j+1]==null){arr[j+1]=0}arr[j+1]+=arr[j]/baseOut^0;arr[j]%=baseOut}}}return arr.reverse()}function arrToStr(arr){var i=0,arrL=arr.length,str="";for(;i<arrL;str+=DIGITS.charAt(arr[i++])){}return str}if(baseIn<37){nStr=nStr.toLowerCase()}if((e=nStr.indexOf("."))>-1){e=nStr.length-e-1;dvs=strToArr(new BigNumber(baseIn)["pow"](e)["toF"](),10);nArr=nStr.split(".");dvd=strToArr(nArr[1]);nArr=strToArr(nArr[0]);fracBN=divide(dvd,dvs,dvd.length-dvs.length,sign,baseOut,nArr[nArr.length-1]&1);fracArr=fracBN["c"];if(e=fracBN["e"]){for(;++e;fracArr.unshift(0)){}nStr=arrToStr(nArr)+"."+arrToStr(fracArr)}else if(fracArr[0]){if(nArr[e=nArr.length-1]<baseOut-1){++nArr[e];nStr=arrToStr(nArr)}else{nStr=new BigNumber(arrToStr(nArr),baseOut)["plus"](ONE)["toS"](baseOut)}}else{nStr=arrToStr(nArr)}}else{nStr=arrToStr(strToArr(nStr))}return nStr}function divide(dvd,dvs,exp,s,base,isOdd){var dvsL,dvsT,next,cmp,remI,dvsZ=dvs.slice(),dvdI=dvsL=dvs.length,dvdL=dvd.length,rem=dvd.slice(0,dvsL),remL=rem.length,quo=new BigNumber(ONE),qc=quo["c"]=[],qi=0,dig=DECIMAL_PLACES+(quo["e"]=exp)+1;quo["s"]=s;s=dig<0?0:dig;for(;remL++<dvsL;rem.push(0)){}dvsZ.unshift(0);do{for(next=0;next<base;next++){if(dvsL!=(remL=rem.length)){cmp=dvsL>remL?1:-1}else{for(remI=-1,cmp=0;++remI<dvsL;){if(dvs[remI]!=rem[remI]){cmp=dvs[remI]>rem[remI]?1:-1;break}}}if(cmp<0){for(dvsT=remL==dvsL?dvs:dvsZ;remL;){if(rem[--remL]<dvsT[remL]){for(remI=remL;remI&&!rem[--remI];rem[remI]=base-1){}--rem[remI];rem[remL]+=base}rem[remL]-=dvsT[remL]}for(;!rem[0];rem.shift()){}}else{break}}qc[qi++]=cmp?next:++next;rem[0]&&cmp?rem[remL]=dvd[dvdI]||0:rem=[dvd[dvdI]]}while((dvdI++<dvdL||rem[0]!=null)&&s--);if(!qc[0]&&qi!=1){--quo["e"];qc.shift()}if(qi>dig){rnd(quo,DECIMAL_PLACES,base,isOdd,rem[0]!=null)}if(quo["e"]>MAX_EXP){quo["c"]=quo["e"]=null}else if(quo["e"]<MIN_EXP){quo["c"]=[quo["e"]=0]}return quo}function format(n,d,exp){var i=d-(n=new BigNumber(n))["e"],c=n["c"];if(!c){return n["toS"]()}if(c.length>++d){rnd(n,i,10)}i=c[0]==0?i+1:exp?d:n["e"]+i+1;for(;c.length<i;c.push(0)){}i=n["e"];return exp==1||exp==2&&(--d<i||i<=TO_EXP_NEG)?(n["s"]<0&&c[0]?"-":"")+(c.length>1?(c.splice(1,0,"."),c.join("")):c[0])+(i<0?"e":"e+")+i:n["toS"]()}function rnd(x,dp,base,isOdd,r){var xc=x["c"],isNeg=x["s"]<0,half=base/2,i=x["e"]+dp+1,next=xc[i],more=r||i<0||xc[i+1]!=null;r=ROUNDING_MODE<4?(next!=null||more)&&(ROUNDING_MODE==0||ROUNDING_MODE==2&&!isNeg||ROUNDING_MODE==3&&isNeg):next>half||next==half&&(ROUNDING_MODE==4||more||ROUNDING_MODE==6&&(xc[i-1]&1||!dp&&isOdd)||ROUNDING_MODE==7&&!isNeg||ROUNDING_MODE==8&&isNeg);if(i<1||!xc[0]){xc.length=0;xc.push(0);if(r){xc[0]=1;x["e"]=-dp}else{x["e"]=0}return x}xc.length=i--;if(r){for(--base;++xc[i]>base;){xc[i]=0;if(!i--){++x["e"];xc.unshift(1)}}}for(i=xc.length;!xc[--i];xc.pop()){}return x}function setMode(x,dp,rm){var r=ROUNDING_MODE;ROUNDING_MODE=rm;x=new BigNumber(x);x["c"]&&rnd(x,dp,10);ROUNDING_MODE=r;return x}P["abs"]=P["absoluteValue"]=function(){var x=new BigNumber(this);if(x["s"]<0){x["s"]=1}return x};P["bitLength"]=function(){return this.toString(2).length};P["ceil"]=function(){return setMode(this,0,2)};P["comparedTo"]=P["cmp"]=function(y,b){var a,x=this,xc=x["c"],yc=(id=-id,y=new BigNumber(y,b))["c"],i=x["s"],j=y["s"],k=x["e"],l=y["e"];if(!i||!j){return null}a=xc&&!xc[0],b=yc&&!yc[0];if(a||b){return a?b?0:-j:i}if(i!=j){return i}if(a=i<0,b=k==l,!xc||!yc){return b?0:!xc^a?1:-1}if(!b){return k>l^a?1:-1}for(i=-1,j=(k=xc.length)<(l=yc.length)?k:l;++i<j;){if(xc[i]!=yc[i]){return xc[i]>yc[i]^a?1:-1}}return k==l?0:k>l^a?1:-1};P["dividedBy"]=P["div"]=function(y,b){var xc=this["c"],xe=this["e"],xs=this["s"],yc=(id=2,y=new BigNumber(y,b))["c"],ye=y["e"],ys=y["s"],s=xs==ys?1:-1;return!xe&&(!xc||!xc[0])||!ye&&(!yc||!yc[0])?new BigNumber(!xs||!ys||(xc?yc&&xc[0]==yc[0]:!yc)?NaN:xc&&xc[0]==0||!yc?s*0:s/0):divide(xc,yc,xe-ye,s,10)};P["equals"]=P["eq"]=function(n,b){id=3;return this["cmp"](n,b)===0};P["floor"]=function(){return setMode(this,0,3)};P["greaterThan"]=P["gt"]=function(n,b){id=4;return this["cmp"](n,b)>0};P["greaterThanOrEqualTo"]=P["gte"]=P["gt"]=function(n,b){id=5;return(b=this["cmp"](n,b))==1||b===0};P["isFinite"]=P["isF"]=function(){return!!this["c"]};P["isNaN"]=function(){return!this["s"]};P["isNegative"]=P["isNeg"]=function(){return this["s"]<0};P["isZero"]=P["isZ"]=function(){return!!this["c"]&&this["c"][0]==0};P["lessThan"]=P["lt"]=function(n,b){id=6;return this["cmp"](n,b)<0};P["lessThanOrEqualTo"]=P["lte"]=P["le"]=function(n,b){id=7;return(b=this["cmp"](n,b))==-1||b===0};P["minus"]=P["sub"]=function(y,b){var d,i,j,xLTy,x=this,a=x["s"];b=(id=8,y=new BigNumber(y,b))["s"];if(!a||!b){return new BigNumber(NaN)}if(a!=b){return y["s"]=-b,x["plus"](y)}var xc=x["c"],xe=x["e"],yc=y["c"],ye=y["e"];if(!xe||!ye){if(!xc||!yc){return xc?(y["s"]=-b,y):new BigNumber(yc?x:NaN)}if(!xc[0]||!yc[0]){return yc[0]?(y["s"]=-b,y):new BigNumber(xc[0]?x:ROUNDING_MODE==3?-0:0)}}if(xc=xc.slice(),a=xe-ye){d=(xLTy=a<0)?(a=-a,xc):(ye=xe,yc);for(d.reverse(),b=a;b--;d.push(0)){}d.reverse()}else{j=((xLTy=xc.length<yc.length)?xc:yc).length;for(a=b=0;b<j;b++){if(xc[b]!=yc[b]){xLTy=xc[b]<yc[b];break}}}if(xLTy){d=xc,xc=yc,yc=d;y["s"]=-y["s"]}if((b=-((j=xc.length)-yc.length))>0){for(;b--;xc[j++]=0){}}for(b=yc.length;b>a;){if(xc[--b]<yc[b]){for(i=b;i&&!xc[--i];xc[i]=9){}--xc[i];xc[b]+=10}xc[b]-=yc[b]}for(;xc[--j]==0;xc.pop()){}for(;xc[0]==0;xc.shift(),--ye){}if(ye<MIN_EXP||!xc[0]){if(!xc[0]){y["s"]=ROUNDING_MODE==3?-1:1}xc=[ye=0]}return y["c"]=xc,y["e"]=ye,y};P["modulo"]=P["mod"]=function(y,b){var x=this,xc=x["c"],yc=(id=9,y=new BigNumber(y,b))["c"],i=x["s"],j=y["s"];b=!i||!j||yc&&!yc[0];if(b||xc&&!xc[0]){return new BigNumber(b?NaN:x)}x["s"]=y["s"]=1;b=y["cmp"](x)==1;x["s"]=i,y["s"]=j;return b?new BigNumber(x):(i=DECIMAL_PLACES,j=ROUNDING_MODE,DECIMAL_PLACES=0,ROUNDING_MODE=1,x=x["div"](y),DECIMAL_PLACES=i,ROUNDING_MODE=j,this["minus"](x["times"](y)))};P["negated"]=P["neg"]=function(){var x=new BigNumber(this);return x["s"]=-x["s"]||null,x};P["plus"]=P["add"]=function(y,b){var d,x=this,a=x["s"];b=(id=10,y=new BigNumber(y,b))["s"];if(!a||!b){return new BigNumber(NaN)}if(a!=b){return y["s"]=-b,x["minus"](y)}var xe=x["e"],xc=x["c"],ye=y["e"],yc=y["c"];if(!xe||!ye){if(!xc||!yc){return new BigNumber(a/0)}if(!xc[0]||!yc[0]){return yc[0]?y:new BigNumber(xc[0]?x:a*0)}}if(xc=xc.slice(),a=xe-ye){d=a>0?(ye=xe,yc):(a=-a,xc);for(d.reverse();a--;d.push(0)){}d.reverse()}if(xc.length-yc.length<0){d=yc,yc=xc,xc=d}for(a=yc.length,b=0;a;b=(xc[--a]=xc[a]+yc[a]+b)/10^0,xc[a]%=10){}if(b){xc.unshift(b);if(++ye>MAX_EXP){xc=ye=null}}for(a=xc.length;xc[--a]==0;xc.pop()){}return y["c"]=xc,y["e"]=ye,y};P["toPower"]=P["pow"]=function(e){var i=e*0==0?e|0:e,x=new BigNumber(this),y=new BigNumber(ONE);if(((outOfRange=e<-MAX_POWER||e>MAX_POWER)&&(i=e*1/0)||parse(e)!=e&&e!==0&&!(i=NaN))&&!ifExceptionsThrow(e,"exponent","pow")||!i){return new BigNumber(Math.pow(x["toS"](),i))}for(i=i<0?-i:i;;){if(i&1){y=y["times"](x)}i>>=1;if(!i){break}x=x["times"](x)}return e<0?ONE["div"](y):y};P["powm"]=function(m,n){return this.pow(m).mod(n)};P["round"]=function(dp,rm){dp=dp==null||((outOfRange=dp<0||dp>MAX)||parse(dp)!=dp)&&!ifExceptionsThrow(dp,"decimal places","round")?0:dp|0;rm=rm==null||((outOfRange=rm<0||rm>8)||parse(rm)!=rm&&rm!==0)&&!ifExceptionsThrow(rm,"mode","round")?ROUNDING_MODE:rm|0;return setMode(this,dp,rm)};P["squareRoot"]=P["sqrt"]=function(){var n,r,re,t,x=this,c=x["c"],s=x["s"],e=x["e"],dp=DECIMAL_PLACES,rm=ROUNDING_MODE,half=new BigNumber("0.5");if(s!==1||!c||!c[0]){return new BigNumber(!s||s<0&&(!c||c[0])?NaN:c?x:1/0)}s=Math.sqrt(x["toS"]());ROUNDING_MODE=1;if(s==0||s==1/0){n=c.join("");if(!(n.length+e&1)){n+="0"}r=new BigNumber(Math.sqrt(n)+"");if(!r["c"]){r["c"]=[1]}r["e"]=((e+1)/2|0)-(e<0||e&1)}else{r=new BigNumber(n=s.toString())}re=r["e"];s=re+(DECIMAL_PLACES+=4);if(s<3){s=0}e=s;for(;;){t=r;r=half["times"](t["plus"](x["div"](t)));if(t["c"].slice(0,s).join("")===r["c"].slice(0,s).join("")){c=r["c"];s=s-(n&&r["e"]<re);if(c[s]==9&&c[s-1]==9&&c[s-2]==9&&(c[s-3]==9||n&&c[s-3]==4)){if(n&&c[s-3]==9){t=r["round"](dp,0);if(t["times"](t)["eq"](x)){ROUNDING_MODE=rm;DECIMAL_PLACES=dp;return t}}DECIMAL_PLACES+=4;s+=4;n=""}else{if(!c[e]&&!c[e-1]&&!c[e-2]&&(!c[e-3]||c[e-3]==5)){if(c.length>e-2){c.length=e-2}if(!r["times"](r)["eq"](x)){while(c.length<e-3){c.push(0)}c[e-3]++}}ROUNDING_MODE=rm;rnd(r,DECIMAL_PLACES=dp,10);return r}}}};P["times"]=P["mul"]=function(y,b){var c,x=this,xc=x["c"],yc=(id=11,y=new BigNumber(y,b))["c"],i=x["e"],j=y["e"],a=x["s"];y["s"]=a==(b=y["s"])?1:-1;if(!i&&(!xc||!xc[0])||!j&&(!yc||!yc[0])){return new BigNumber(!a||!b||xc&&!xc[0]&&!yc||yc&&!yc[0]&&!xc?NaN:!xc||!yc?y["s"]/0:y["s"]*0)}y["e"]=i+j;if((a=xc.length)<(b=yc.length)){c=xc,xc=yc,yc=c,j=a,a=b,b=j}for(j=a+b,c=[];j--;c.push(0)){}for(i=b-1;i>-1;i--){for(b=0,j=a+i;j>i;b=c[j]+yc[i]*xc[j-i-1]+b,c[j--]=b%10|0,b=b/10|0){}if(b){c[j]=(c[j]+b)%10}}b&&++y["e"];!c[0]&&c.shift();for(j=c.length;!c[--j];c.pop()){}y["c"]=y["e"]>MAX_EXP?y["e"]=null:y["e"]<MIN_EXP?[y["e"]=0]:c;return y};P["toBuffer"]=function(opts){if(typeof opts==="string"){if(opts!=="mpint")return"Unsupported Buffer representation";var abs=this.abs();var buf=abs.toBuffer({size:1,endian:"big"});var len=buf.length===1&&buf[0]===0?0:buf.length;if(buf[0]&128)len++;var ret=new Buffer(4+len);if(len>0)buf.copy(ret,4+(buf[0]&128?1:0));if(buf[0]&128)ret[4]=0;ret[0]=len&255<<24;ret[1]=len&255<<16;ret[2]=len&255<<8;ret[3]=len&255<<0;var isNeg=this.lt(0);if(isNeg){for(var i=4;i<ret.length;i++){ret[i]=255-ret[i]}}ret[4]=ret[4]&127|(isNeg?128:0);if(isNeg)ret[ret.length-1]++;return ret}if(!opts)opts={};var endian={1:"big","-1":"little"}[opts.endian]||opts.endian||"big";var hex=this.toString(16);if(hex.charAt(0)==="-")throw new Error("converting negative numbers to Buffers not supported yet");var size=opts.size==="auto"?Math.ceil(hex.length/2):opts.size||1;var len=Math.ceil(hex.length/(2*size))*size;var buf=new Buffer(len);while(hex.length<2*len)hex="0"+hex;var hx=hex.split(new RegExp("(.{"+2*size+"})")).filter(function(s){return s.length>0});hx.forEach(function(chunk,i){for(var j=0;j<size;j++){var ix=i*size+(endian==="big"?j:size-j-1);buf[ix]=parseInt(chunk.slice(j*2,j*2+2),16)}});return buf};P["toExponential"]=P["toE"]=function(dp){return format(this,(dp==null||((outOfRange=dp<0||dp>MAX)||parse(dp)!=dp&&dp!==0)&&!ifExceptionsThrow(dp,"decimal places","toE"))&&this["c"]?this["c"].length-1:dp|0,1)};P["toFixed"]=P["toF"]=function(dp){var n,str,d,x=this;if(!(dp==null||((outOfRange=dp<0||dp>MAX)||parse(dp)!=dp&&dp!==0)&&!ifExceptionsThrow(dp,"decimal places","toF"))){d=x["e"]+(dp|0)}n=TO_EXP_NEG,dp=TO_EXP_POS;TO_EXP_NEG=-(TO_EXP_POS=1/0);if(d==str){str=x["toS"]()}else{str=format(x,d);if(x["s"]<0&&x["c"]){if(!x["c"][0]){str=str.replace(/^-/,"")}else if(str.indexOf("-")<0){str="-"+str}}}TO_EXP_NEG=n,TO_EXP_POS=dp;return str};P["toFraction"]=P["toFr"]=function(maxD){var q,frac,n0,d0,d2,n,e,n1=d0=new BigNumber(ONE),d1=n0=new BigNumber("0"),x=this,xc=x["c"],exp=MAX_EXP,dp=DECIMAL_PLACES,rm=ROUNDING_MODE,d=new BigNumber(ONE);if(!xc){return x["toS"]()}e=d["e"]=xc.length-x["e"]-1;if(maxD==null||(!(id=12,n=new BigNumber(maxD))["s"]||(outOfRange=n["cmp"](n1)<0||!n["c"])||ERRORS&&n["e"]<n["c"].length-1)&&!ifExceptionsThrow(maxD,"max denominator","toFr")||(maxD=n)["cmp"](d)>0){maxD=e>0?d:n1}MAX_EXP=1/0;n=new BigNumber(xc.join(""));for(DECIMAL_PLACES=0,ROUNDING_MODE=1;;){q=n["div"](d);d2=d0["plus"](q["times"](d1));if(d2["cmp"](maxD)==1){break}d0=d1,d1=d2;n1=n0["plus"](q["times"](d2=n1));n0=d2;d=n["minus"](q["times"](d2=d));n=d2}d2=maxD["minus"](d0)["div"](d1);n0=n0["plus"](d2["times"](n1));d0=d0["plus"](d2["times"](d1));n0["s"]=n1["s"]=x["s"];DECIMAL_PLACES=e*2;ROUNDING_MODE=rm;frac=n1["div"](d1)["minus"](x)["abs"]()["cmp"](n0["div"](d0)["minus"](x)["abs"]())<1?[n1["toS"](),d1["toS"]()]:[n0["toS"](),d0["toS"]()];return MAX_EXP=exp,DECIMAL_PLACES=dp,frac};P["toPrecision"]=P["toP"]=function(sd){return sd==null||((outOfRange=sd<1||sd>MAX)||parse(sd)!=sd)&&!ifExceptionsThrow(sd,"precision","toP")?this["toS"]():format(this,--sd|0,2)};P["toString"]=P["toS"]=function(b){var u,str,strL,x=this,xe=x["e"];if(xe===null){str=x["s"]?"Infinity":"NaN"}else if(b===u&&(xe<=TO_EXP_NEG||xe>=TO_EXP_POS)){return format(x,x["c"].length-1,1)}else{str=x["c"].join("");if(xe<0){for(;++xe;str="0"+str){}str="0."+str}else if(strL=str.length,xe>0){if(++xe>strL){for(xe-=strL;xe--;str+="0"){}}else if(xe<strL){str=str.slice(0,xe)+"."+str.slice(xe)}}else{if(u=str.charAt(0),strL>1){str=u+"."+str.slice(1)}else if(u=="0"){return u}}if(b!=null){if(!(outOfRange=!(b>=2&&b<65))&&(b==(b|0)||!ERRORS)){str=convert(str,b|0,10,x["s"]);if(str=="0"){return str}}else{ifExceptionsThrow(b,"base","toS")}}}return x["s"]<0?"-"+str:str};P["valueOf"]=function(){return this["toS"]()};module.exports=BigNumber}).call(this,require("buffer").Buffer)},{buffer:150}],137:[function(require,module,exports){var ebtk=require("evp_bytestokey");var aes=require("browserify-aes/browser");var DES=require("browserify-des");var desModes=require("browserify-des/modes");var aesModes=require("browserify-aes/modes");function createCipher(suite,password){var keyLen,ivLen;suite=suite.toLowerCase();if(aesModes[suite]){keyLen=aesModes[suite].key;ivLen=aesModes[suite].iv}else if(desModes[suite]){keyLen=desModes[suite].key*8;ivLen=desModes[suite].iv}else{throw new TypeError("invalid suite type")}var keys=ebtk(password,false,keyLen,ivLen);return createCipheriv(suite,keys.key,keys.iv)}function createDecipher(suite,password){var keyLen,ivLen;suite=suite.toLowerCase();if(aesModes[suite]){keyLen=aesModes[suite].key;ivLen=aesModes[suite].iv}else if(desModes[suite]){keyLen=desModes[suite].key*8;ivLen=desModes[suite].iv}else{throw new TypeError("invalid suite type")}var keys=ebtk(password,false,keyLen,ivLen);return createDecipheriv(suite,keys.key,keys.iv)}function createCipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite]){return aes.createCipheriv(suite,key,iv)}else if(desModes[suite]){return new DES({key:key,iv:iv,mode:suite})}else{throw new TypeError("invalid suite type")}}function createDecipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite]){return aes.createDecipheriv(suite,key,iv)}else if(desModes[suite]){return new DES({key:key,iv:iv,mode:suite,decrypt:true})}else{throw new TypeError("invalid suite type")}}exports.createCipher=exports.Cipher=createCipher;exports.createCipheriv=exports.Cipheriv=createCipheriv;exports.createDecipher=exports.Decipher=createDecipher;exports.createDecipheriv=exports.Decipheriv=createDecipheriv;function getCiphers(){return Object.keys(desModes).concat(aes.getCiphers())}exports.listCiphers=exports.getCiphers=getCiphers},{"browserify-aes/browser":121,"browserify-aes/modes":132,"browserify-des":138,"browserify-des/modes":139,evp_bytestokey:333}],138:[function(require,module,exports){(function(Buffer){var CipherBase=require("cipher-base");var des=require("des.js");var inherits=require("inherits");var modes={"des-ede3-cbc":des.CBC.instantiate(des.EDE),"des-ede3":des.EDE,"des-ede-cbc":des.CBC.instantiate(des.EDE),"des-ede":des.EDE,"des-cbc":des.CBC.instantiate(des.DES),"des-ecb":des.DES};modes.des=modes["des-cbc"];modes.des3=modes["des-ede3-cbc"];module.exports=DES;inherits(DES,CipherBase);function DES(opts){CipherBase.call(this);var modeName=opts.mode.toLowerCase();var mode=modes[modeName];var type;if(opts.decrypt){type="decrypt"}else{type="encrypt"}var key=opts.key;if(modeName==="des-ede"||modeName==="des-ede-cbc"){key=Buffer.concat([key,key.slice(0,8)])}var iv=opts.iv;this._des=mode.create({key:key,iv:iv,type:type})}DES.prototype._update=function(data){return new Buffer(this._des.update(data))};DES.prototype._final=function(){return new Buffer(this._des.final())}}).call(this,require("buffer").Buffer)},{buffer:150,"cipher-base":186,"des.js":305,inherits:352}],139:[function(require,module,exports){exports["des-ecb"]={key:8,iv:0};exports["des-cbc"]=exports.des={key:8,iv:8};exports["des-ede3-cbc"]=exports.des3={key:24,iv:8};exports["des-ede3"]={key:24,iv:0};exports["des-ede-cbc"]={key:16,iv:8};exports["des-ede"]={key:16,iv:0}},{}],140:[function(require,module,exports){(function(Buffer){var bn=require("bn.js");var randomBytes=require("randombytes");module.exports=crt;function blind(priv){var r=getr(priv);var blinder=r.toRed(bn.mont(priv.modulus)).redPow(new bn(priv.publicExponent)).fromRed();return{blinder:blinder,unblinder:r.invm(priv.modulus)}}function crt(msg,priv){var blinds=blind(priv);var len=priv.modulus.byteLength();var mod=bn.mont(priv.modulus);var blinded=new bn(msg).mul(blinds.blinder).umod(priv.modulus);var c1=blinded.toRed(bn.mont(priv.prime1));var c2=blinded.toRed(bn.mont(priv.prime2));var qinv=priv.coefficient;var p=priv.prime1;var q=priv.prime2;var m1=c1.redPow(priv.exponent1);var m2=c2.redPow(priv.exponent2);m1=m1.fromRed();m2=m2.fromRed();var h=m1.isub(m2).imul(qinv).umod(p);h.imul(q);m2.iadd(h);return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false,len))}crt.getr=getr;function getr(priv){var len=priv.modulus.byteLength();var r=new bn(randomBytes(len));while(r.cmp(priv.modulus)>=0||!r.umod(priv.prime1)||!r.umod(priv.prime2)){r=new bn(randomBytes(len))}return r}}).call(this,require("buffer").Buffer)},{"bn.js":116,buffer:150,randombytes:418}],141:[function(require,module,exports){module.exports=require("./browser/algorithms.json")},{"./browser/algorithms.json":142}],142:[function(require,module,exports){module.exports={sha224WithRSAEncryption:{sign:"rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},"RSA-SHA224":{sign:"ecdsa/rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},sha256WithRSAEncryption:{sign:"rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},"RSA-SHA256":{sign:"ecdsa/rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},sha384WithRSAEncryption:{sign:"rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},"RSA-SHA384":{sign:"ecdsa/rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},sha512WithRSAEncryption:{sign:"rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA512":{sign:"ecdsa/rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA1":{sign:"rsa",hash:"sha1",id:"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{sign:"ecdsa",hash:"sha1",id:""},sha256:{sign:"ecdsa",hash:"sha256",id:""},sha224:{sign:"ecdsa",hash:"sha224",id:""},sha384:{sign:"ecdsa",hash:"sha384",id:""},sha512:{sign:"ecdsa",hash:"sha512",id:""},"DSA-SHA":{sign:"dsa",hash:"sha1",id:""},"DSA-SHA1":{sign:"dsa",hash:"sha1",id:""},DSA:{sign:"dsa",hash:"sha1",id:""},"DSA-WITH-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-WITH-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-WITH-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-WITH-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-RIPEMD160":{sign:"dsa",hash:"rmd160",id:""},ripemd160WithRSA:{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},"RSA-RIPEMD160":{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},md5WithRSAEncryption:{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"},"RSA-MD5":{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"}}},{}],143:[function(require,module,exports){module.exports={"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}},{}],144:[function(require,module,exports){(function(Buffer){var createHash=require("create-hash");var stream=require("stream");var inherits=require("inherits");var sign=require("./sign");var verify=require("./verify");var algorithms=require("./algorithms.json");Object.keys(algorithms).forEach(function(key){algorithms[key].id=new Buffer(algorithms[key].id,"hex");algorithms[key.toLowerCase()]=algorithms[key]});function Sign(algorithm){stream.Writable.call(this);var data=algorithms[algorithm];if(!data)throw new Error("Unknown message digest");this._hashType=data.hash;this._hash=createHash(data.hash);this._tag=data.id;this._signType=data.sign}inherits(Sign,stream.Writable);Sign.prototype._write=function _write(data,_,done){this._hash.update(data);done()};Sign.prototype.update=function update(data,enc){if(typeof data==="string")data=new Buffer(data,enc);this._hash.update(data);return this};Sign.prototype.sign=function signMethod(key,enc){this.end();var hash=this._hash.digest();var sig=sign(hash,key,this._hashType,this._signType,this._tag);return enc?sig.toString(enc):sig};function Verify(algorithm){stream.Writable.call(this);var data=algorithms[algorithm];if(!data)throw new Error("Unknown message digest");this._hash=createHash(data.hash);this._tag=data.id;this._signType=data.sign}inherits(Verify,stream.Writable);Verify.prototype._write=function _write(data,_,done){this._hash.update(data);done()};Verify.prototype.update=function update(data,enc){if(typeof data==="string")data=new Buffer(data,enc);this._hash.update(data);return this};Verify.prototype.verify=function verifyMethod(key,sig,enc){if(typeof sig==="string")sig=new Buffer(sig,enc);this.end();var hash=this._hash.digest();return verify(sig,hash,key,this._signType,this._tag)};function createSign(algorithm){return new Sign(algorithm)}function createVerify(algorithm){return new Verify(algorithm)}module.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify}}).call(this,require("buffer").Buffer)},{"./algorithms.json":142,"./sign":145,"./verify":146,buffer:150,"create-hash":298,inherits:352,stream:480}],145:[function(require,module,exports){(function(Buffer){var createHmac=require("create-hmac");var crt=require("browserify-rsa");var EC=require("elliptic").ec;var BN=require("bn.js");var parseKeys=require("parse-asn1");var curves=require("./curves.json");function sign(hash,key,hashType,signType,tag){var priv=parseKeys(key);if(priv.curve){if(signType!=="ecdsa"&&signType!=="ecdsa/rsa")throw new Error("wrong private key type");return ecSign(hash,priv)}else if(priv.type==="dsa"){if(signType!=="dsa")throw new Error("wrong private key type");return dsaSign(hash,priv,hashType)}else{if(signType!=="rsa"&&signType!=="ecdsa/rsa")throw new Error("wrong private key type")}hash=Buffer.concat([tag,hash]);var len=priv.modulus.byteLength();var pad=[0,1];while(hash.length+pad.length+1<len)pad.push(255);pad.push(0);var i=-1;while(++i<hash.length)pad.push(hash[i]);var out=crt(pad,priv);return out}function ecSign(hash,priv){var curveId=curves[priv.curve.join(".")];if(!curveId)throw new Error("unknown curve "+priv.curve.join("."));var curve=new EC(curveId);var key=curve.keyFromPrivate(priv.privateKey);var out=key.sign(hash);return new Buffer(out.toDER())}function dsaSign(hash,priv,algo){var x=priv.params.priv_key;var p=priv.params.p;var q=priv.params.q;var g=priv.params.g;var r=new BN(0);var k;var H=bits2int(hash,q).mod(q);var s=false;var kv=getKey(x,q,hash,algo);while(s===false){k=makeKey(q,kv,algo);r=makeR(g,k,p,q);s=k.invm(q).imul(H.add(x.mul(r))).mod(q);if(s.cmpn(0)===0){s=false;r=new BN(0)}}return toDER(r,s)}function toDER(r,s){r=r.toArray();s=s.toArray();if(r[0]&128)r=[0].concat(r);if(s[0]&128)s=[0].concat(s);var total=r.length+s.length+4;var res=[48,total,2,r.length];res=res.concat(r,[2,s.length],s);return new Buffer(res)}function getKey(x,q,hash,algo){x=new Buffer(x.toArray());if(x.length<q.byteLength()){var zeros=new Buffer(q.byteLength()-x.length);zeros.fill(0);x=Buffer.concat([zeros,x])}var hlen=hash.length;var hbits=bits2octets(hash,q);var v=new Buffer(hlen);v.fill(1);var k=new Buffer(hlen);k.fill(0);k=createHmac(algo,k).update(v).update(new Buffer([0])).update(x).update(hbits).digest();v=createHmac(algo,k).update(v).digest();k=createHmac(algo,k).update(v).update(new Buffer([1])).update(x).update(hbits).digest();v=createHmac(algo,k).update(v).digest();return{k:k,v:v}}function bits2int(obits,q){var bits=new BN(obits);var shift=(obits.length<<3)-q.bitLength();if(shift>0)bits.ishrn(shift);return bits}function bits2octets(bits,q){bits=bits2int(bits,q);bits=bits.mod(q);var out=new Buffer(bits.toArray());if(out.length<q.byteLength()){var zeros=new Buffer(q.byteLength()-out.length);zeros.fill(0);out=Buffer.concat([zeros,out])}return out}function makeKey(q,kv,algo){var t;var k;do{t=new Buffer(0);while(t.length*8<q.bitLength()){kv.v=createHmac(algo,kv.k).update(kv.v).digest();t=Buffer.concat([t,kv.v])}k=bits2int(t,q);kv.k=createHmac(algo,kv.k).update(kv.v).update(new Buffer([0])).digest();kv.v=createHmac(algo,kv.k).update(kv.v).digest()}while(k.cmp(q)!==-1);return k}function makeR(g,k,p,q){return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)}module.exports=sign;module.exports.getKey=getKey;module.exports.makeKey=makeKey}).call(this,require("buffer").Buffer)},{"./curves.json":143,"bn.js":116,"browserify-rsa":140,buffer:150,"create-hmac":301,elliptic:317,"parse-asn1":382}],146:[function(require,module,exports){(function(Buffer){var BN=require("bn.js");var EC=require("elliptic").ec;var parseKeys=require("parse-asn1");var curves=require("./curves.json");function verify(sig,hash,key,signType,tag){var pub=parseKeys(key);if(pub.type==="ec"){if(signType!=="ecdsa"&&signType!=="ecdsa/rsa")throw new Error("wrong public key type");return ecVerify(sig,hash,pub)}else if(pub.type==="dsa"){if(signType!=="dsa")throw new Error("wrong public key type");return dsaVerify(sig,hash,pub)}else{if(signType!=="rsa"&&signType!=="ecdsa/rsa")throw new Error("wrong public key type")}hash=Buffer.concat([tag,hash]);var len=pub.modulus.byteLength();var pad=[1];var padNum=0;while(hash.length+pad.length+2<len){pad.push(255);padNum++}pad.push(0);var i=-1;while(++i<hash.length){pad.push(hash[i])}pad=new Buffer(pad);var red=BN.mont(pub.modulus);sig=new BN(sig).toRed(red);sig=sig.redPow(new BN(pub.publicExponent));sig=new Buffer(sig.fromRed().toArray());var out=padNum<8?1:0;len=Math.min(sig.length,pad.length);if(sig.length!==pad.length)out=1;i=-1;while(++i<len)out|=sig[i]^pad[i];return out===0}function ecVerify(sig,hash,pub){var curveId=curves[pub.data.algorithm.curve.join(".")];if(!curveId)throw new Error("unknown curve "+pub.data.algorithm.curve.join("."));var curve=new EC(curveId);var pubkey=pub.data.subjectPrivateKey.data;return curve.verify(hash,sig,pubkey)}function dsaVerify(sig,hash,pub){var p=pub.data.p;var q=pub.data.q;var g=pub.data.g;var y=pub.data.pub_key;var unpacked=parseKeys.signature.decode(sig,"der");var s=unpacked.s;var r=unpacked.r;checkValue(s,q);checkValue(r,q);var montp=BN.mont(p);var w=s.invm(q);var v=g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);return v.cmp(r)===0}function checkValue(b,q){if(b.cmpn(0)<=0)throw new Error("invalid sig");if(b.cmp(q)>=q)throw new Error("invalid sig")}module.exports=verify}).call(this,require("buffer").Buffer)},{"./curves.json":143,"bn.js":116,buffer:150,elliptic:317,"parse-asn1":382}],147:[function(require,module,exports){arguments[4][118][0].apply(exports,arguments)},{dup:118}],148:[function(require,module,exports){var objectCreate=Object.create||objectCreatePolyfill;var objectKeys=Object.keys||objectKeysPolyfill;var bind=Function.prototype.bind||functionBindPolyfill;function EventEmitter(){if(!this._events||!Object.prototype.hasOwnProperty.call(this,"_events")){this._events=objectCreate(null);this._eventsCount=0}this._maxListeners=this._maxListeners||undefined}module.exports=EventEmitter;EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._maxListeners=undefined;var defaultMaxListeners=10;var hasDefineProperty;try{var o={};if(Object.defineProperty)Object.defineProperty(o,"x",{value:0});hasDefineProperty=o.x===0}catch(err){hasDefineProperty=false}if(hasDefineProperty){Object.defineProperty(EventEmitter,"defaultMaxListeners",{enumerable:true,get:function(){return defaultMaxListeners},set:function(arg){if(typeof arg!=="number"||arg<0||arg!==arg)throw new TypeError('"defaultMaxListeners" must be a positive number');defaultMaxListeners=arg}})}else{EventEmitter.defaultMaxListeners=defaultMaxListeners}EventEmitter.prototype.setMaxListeners=function setMaxListeners(n){if(typeof n!=="number"||n<0||isNaN(n))throw new TypeError('"n" argument must be a positive number');this._maxListeners=n;return this};function $getMaxListeners(that){if(that._maxListeners===undefined)return EventEmitter.defaultMaxListeners;return that._maxListeners}EventEmitter.prototype.getMaxListeners=function getMaxListeners(){return $getMaxListeners(this)};function emitNone(handler,isFn,self){if(isFn)handler.call(self);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i)listeners[i].call(self)}}function emitOne(handler,isFn,self,arg1){if(isFn)handler.call(self,arg1);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i)listeners[i].call(self,arg1)}}function emitTwo(handler,isFn,self,arg1,arg2){if(isFn)handler.call(self,arg1,arg2);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i)listeners[i].call(self,arg1,arg2)}}function emitThree(handler,isFn,self,arg1,arg2,arg3){if(isFn)handler.call(self,arg1,arg2,arg3);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i)listeners[i].call(self,arg1,arg2,arg3)}}function emitMany(handler,isFn,self,args){if(isFn)handler.apply(self,args);else{var len=handler.length;var listeners=arrayClone(handler,len);for(var i=0;i<len;++i)listeners[i].apply(self,args)}}EventEmitter.prototype.emit=function emit(type){var er,handler,len,args,i,events;var doError=type==="error";events=this._events;if(events)doError=doError&&events.error==null;else if(!doError)return false;if(doError){if(arguments.length>1)er=arguments[1];if(er instanceof Error){throw er}else{var err=new Error('Unhandled "error" event. ('+er+")");err.context=er;throw err}return false}handler=events[type];if(!handler)return false;var isFn=typeof handler==="function";len=arguments.length;switch(len){case 1:emitNone(handler,isFn,this);break;case 2:emitOne(handler,isFn,this,arguments[1]);break;case 3:emitTwo(handler,isFn,this,arguments[1],arguments[2]);break;case 4:emitThree(handler,isFn,this,arguments[1],arguments[2],arguments[3]);break;default:args=new Array(len-1);for(i=1;i<len;i++)args[i-1]=arguments[i];emitMany(handler,isFn,this,args)}return true};function _addListener(target,type,listener,prepend){var m;var events;var existing;if(typeof listener!=="function")throw new TypeError('"listener" argument must be a function');events=target._events;if(!events){events=target._events=objectCreate(null);target._eventsCount=0}else{if(events.newListener){target.emit("newListener",type,listener.listener?listener.listener:listener);events=target._events}existing=events[type]}if(!existing){existing=events[type]=listener;++target._eventsCount}else{if(typeof existing==="function"){existing=events[type]=prepend?[listener,existing]:[existing,listener]}else{if(prepend){existing.unshift(listener)}else{existing.push(listener)}}if(!existing.warned){m=$getMaxListeners(target);if(m&&m>0&&existing.length>m){existing.warned=true;var w=new Error("Possible EventEmitter memory leak detected. "+existing.length+' "'+String(type)+'" listeners '+"added. Use emitter.setMaxListeners() to "+"increase limit.");w.name="MaxListenersExceededWarning";w.emitter=target;w.type=type;w.count=existing.length;if(typeof console==="object"&&console.warn){console.warn("%s: %s",w.name,w.message)}}}}return target}EventEmitter.prototype.addListener=function addListener(type,listener){return _addListener(this,type,listener,false)};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.prependListener=function prependListener(type,listener){return _addListener(this,type,listener,true)};function onceWrapper(){if(!this.fired){this.target.removeListener(this.type,this.wrapFn);this.fired=true;switch(arguments.length){case 0:return this.listener.call(this.target);case 1:return this.listener.call(this.target,arguments[0]);case 2:return this.listener.call(this.target,arguments[0],arguments[1]);case 3:return this.listener.call(this.target,arguments[0],arguments[1],arguments[2]);default:var args=new Array(arguments.length);for(var i=0;i<args.length;++i)args[i]=arguments[i];this.listener.apply(this.target,args)}}}function _onceWrap(target,type,listener){var state={fired:false,wrapFn:undefined,target:target,type:type,listener:listener};var wrapped=bind.call(onceWrapper,state);wrapped.listener=listener;state.wrapFn=wrapped;return wrapped}EventEmitter.prototype.once=function once(type,listener){if(typeof listener!=="function")throw new TypeError('"listener" argument must be a function');this.on(type,_onceWrap(this,type,listener));return this};EventEmitter.prototype.prependOnceListener=function prependOnceListener(type,listener){if(typeof listener!=="function")throw new TypeError('"listener" argument must be a function');this.prependListener(type,_onceWrap(this,type,listener));return this};EventEmitter.prototype.removeListener=function removeListener(type,listener){var list,events,position,i,originalListener;if(typeof listener!=="function")throw new TypeError('"listener" argument must be a function');events=this._events;if(!events)return this;list=events[type];if(!list)return this;if(list===listener||list.listener===listener){if(--this._eventsCount===0)this._events=objectCreate(null);else{delete events[type];if(events.removeListener)this.emit("removeListener",type,list.listener||listener)}}else if(typeof list!=="function"){position=-1;for(i=list.length-1;i>=0;i--){if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener;position=i;break}}if(position<0)return this;if(position===0)list.shift();else spliceOne(list,position);if(list.length===1)events[type]=list[0];if(events.removeListener)this.emit("removeListener",type,originalListener||listener)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(type){var listeners,events,i;events=this._events;if(!events)return this;if(!events.removeListener){if(arguments.length===0){this._events=objectCreate(null);this._eventsCount=0}else if(events[type]){if(--this._eventsCount===0)this._events=objectCreate(null);else delete events[type]}return this}if(arguments.length===0){var keys=objectKeys(events);var key;for(i=0;i<keys.length;++i){key=keys[i];if(key==="removeListener")continue;this.removeAllListeners(key)}this.removeAllListeners("removeListener");this._events=objectCreate(null);this._eventsCount=0;return this}listeners=events[type];if(typeof listeners==="function"){this.removeListener(type,listeners)}else if(listeners){for(i=listeners.length-1;i>=0;i--){this.removeListener(type,listeners[i])}}return this};EventEmitter.prototype.listeners=function listeners(type){var evlistener;var ret;var events=this._events;if(!events)ret=[];else{evlistener=events[type];if(!evlistener)ret=[];else if(typeof evlistener==="function")ret=[evlistener.listener||evlistener];else ret=unwrapListeners(evlistener)}return ret};EventEmitter.listenerCount=function(emitter,type){if(typeof emitter.listenerCount==="function"){return emitter.listenerCount(type)}else{return listenerCount.call(emitter,type)}};EventEmitter.prototype.listenerCount=listenerCount;function listenerCount(type){var events=this._events;if(events){var evlistener=events[type];if(typeof evlistener==="function"){return 1}else if(evlistener){return evlistener.length}}return 0}EventEmitter.prototype.eventNames=function eventNames(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};function spliceOne(list,index){for(var i=index,k=i+1,n=list.length;k<n;i+=1,k+=1)list[i]=list[k];list.pop()}function arrayClone(arr,n){var copy=new Array(n);for(var i=0;i<n;++i)copy[i]=arr[i];return copy}function unwrapListeners(arr){var ret=new Array(arr.length);for(var i=0;i<ret.length;++i){ret[i]=arr[i].listener||arr[i]}return ret}function objectCreatePolyfill(proto){var F=function(){};F.prototype=proto;return new F}function objectKeysPolyfill(obj){var keys=[];for(var k in obj)if(Object.prototype.hasOwnProperty.call(obj,k)){keys.push(k)}return k}function functionBindPolyfill(context){var fn=this;return function(){return fn.apply(context,arguments)}}},{}],149:[function(require,module,exports){(function(Buffer){module.exports=function xor(a,b){var length=Math.min(a.length,b.length);var buffer=new Buffer(length);for(var i=0;i<length;++i){buffer[i]=a[i]^b[i]}return buffer}}).call(this,require("buffer").Buffer)},{buffer:150}],150:[function(require,module,exports){"use strict";var base64=require("base64-js");var ieee754=require("ieee754");exports.Buffer=Buffer;exports.SlowBuffer=SlowBuffer;exports.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=2147483647;exports.kMaxLength=K_MAX_LENGTH;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=="undefined"&&typeof console.error==="function"){console.error("This browser lacks typed array (Uint8Array) support which is required by "+"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.")}function typedArraySupport(){try{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}};return arr.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,"parent",{get:function(){if(!(this instanceof Buffer)){return undefined}return this.buffer}});Object.defineProperty(Buffer.prototype,"offset",{get:function(){if(!(this instanceof Buffer)){return undefined}return this.byteOffset}});function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError("Invalid typed array length")}var buf=new Uint8Array(length);buf.__proto__=Buffer.prototype;return buf}function Buffer(arg,encodingOrOffset,length){if(typeof arg==="number"){if(typeof encodingOrOffset==="string"){throw new Error("If encoding is specified then the first argument must be a string")}return allocUnsafe(arg)}return from(arg,encodingOrOffset,length)}if(typeof Symbol!=="undefined"&&Symbol.species&&Buffer[Symbol.species]===Buffer){Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:true,enumerable:false,writable:false})}Buffer.poolSize=8192;function from(value,encodingOrOffset,length){if(typeof value==="number"){throw new TypeError('"value" argument must not be a number')}if(isArrayBuffer(value)||value&&isArrayBuffer(value.buffer)){return fromArrayBuffer(value,encodingOrOffset,length)}if(typeof value==="string"){return fromString(value,encodingOrOffset)}return fromObject(value)}Buffer.from=function(value,encodingOrOffset,length){return from(value,encodingOrOffset,length)};Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;function assertSize(size){if(typeof size!=="number"){throw new TypeError('"size" argument must be of type number')}else if(size<0){throw new RangeError('"size" argument must not be negative')}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size)}if(fill!==undefined){return typeof encoding==="string"?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill)}return createBuffer(size)}Buffer.alloc=function(size,fill,encoding){return alloc(size,fill,encoding)};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0)}Buffer.allocUnsafe=function(size){return allocUnsafe(size)};Buffer.allocUnsafeSlow=function(size){return allocUnsafe(size)};function fromString(string,encoding){if(typeof encoding!=="string"||encoding===""){encoding="utf8"}if(!Buffer.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding)}var length=byteLength(string,encoding)|0;var buf=createBuffer(length);var actual=buf.write(string,encoding);if(actual!==length){buf=buf.slice(0,actual)}return buf}function fromArrayLike(array){var length=array.length<0?0:checked(array.length)|0;var buf=createBuffer(length);for(var i=0;i<length;i+=1){buf[i]=array[i]&255}return buf}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('"offset" is outside of buffer bounds')}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('"length" is outside of buffer bounds')}var buf;if(byteOffset===undefined&&length===undefined){buf=new Uint8Array(array)}else if(length===undefined){buf=new Uint8Array(array,byteOffset)}else{buf=new Uint8Array(array,byteOffset,length)}buf.__proto__=Buffer.prototype;return buf}function fromObject(obj){if(Buffer.isBuffer(obj)){var len=checked(obj.length)|0;var buf=createBuffer(len);if(buf.length===0){return buf}obj.copy(buf,0,0,len);return buf}if(obj){if(ArrayBuffer.isView(obj)||"length"in obj){if(typeof obj.length!=="number"||numberIsNaN(obj.length)){return createBuffer(0)}return fromArrayLike(obj)}if(obj.type==="Buffer"&&Array.isArray(obj.data)){return fromArrayLike(obj.data)}}throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.")}function checked(length){if(length>=K_MAX_LENGTH){throw new RangeError("Attempt to allocate Buffer larger than maximum "+"size: 0x"+K_MAX_LENGTH.toString(16)+" bytes")}return length|0}function SlowBuffer(length){if(+length!=length){length=0}return Buffer.alloc(+length)}Buffer.isBuffer=function isBuffer(b){return b!=null&&b._isBuffer===true};Buffer.compare=function compare(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){throw new TypeError("Arguments must be Buffers")}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break}}if(x<y)return-1;if(y<x)return 1;return 0};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return true;default:return false}};Buffer.concat=function concat(list,length){if(!Array.isArray(list)){throw new TypeError('"list" argument must be an Array of Buffers')}if(list.length===0){return Buffer.alloc(0)}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(ArrayBuffer.isView(buf)){buf=Buffer.from(buf)}if(!Buffer.isBuffer(buf)){throw new TypeError('"list" argument must be an Array of Buffers')}buf.copy(buffer,pos);pos+=buf.length}return buffer};function byteLength(string,encoding){if(Buffer.isBuffer(string)){return string.length}if(ArrayBuffer.isView(string)||isArrayBuffer(string)){return string.byteLength}if(typeof string!=="string"){string=""+string}var len=string.length;if(len===0)return 0;var loweredCase=false;for(;;){switch(encoding){case"ascii":case"latin1":case"binary":return len;case"utf8":case"utf-8":case undefined:return utf8ToBytes(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return len*2;case"hex":return len>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;encoding=(""+encoding).toLowerCase();loweredCase=true}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;if(start===undefined||start<0){start=0}if(start>this.length){return""}if(end===undefined||end>this.length){end=this.length}if(end<=0){return""}end>>>=0;start>>>=0;if(end<=start){return""}if(!encoding)encoding="utf8";while(true){switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase();loweredCase=true}}}Buffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError("Buffer size must be a multiple of 16-bits")}for(var i=0;i<len;i+=2){swap(this,i,i+1)}return this};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError("Buffer size must be a multiple of 32-bits")}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2)}return this};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError("Buffer size must be a multiple of 64-bits")}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4)}return this};Buffer.prototype.toString=function toString(){var length=this.length;if(length===0)return"";if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(b){if(!Buffer.isBuffer(b))throw new TypeError("Argument must be a Buffer");if(this===b)return true;return Buffer.compare(this,b)===0};Buffer.prototype.inspect=function inspect(){var str="";var max=exports.INSPECT_MAX_BYTES;if(this.length>0){str=this.toString("hex",0,max).match(/.{2}/g).join(" ");if(this.length>max)str+=" ... "}return"<Buffer "+str+">"};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!Buffer.isBuffer(target)){throw new TypeError("Argument must be a Buffer")}if(start===undefined){start=0}if(end===undefined){end=target?target.length:0}if(thisStart===undefined){thisStart=0}if(thisEnd===undefined){thisEnd=this.length}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError("out of range index")}if(thisStart>=thisEnd&&start>=end){return 0}if(thisStart>=thisEnd){return-1}if(start>=end){return 1}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break}}if(x<y)return-1;if(y<x)return 1;return 0};function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){if(buffer.length===0)return-1;if(typeof byteOffset==="string"){encoding=byteOffset;byteOffset=0}else if(byteOffset>2147483647){byteOffset=2147483647}else if(byteOffset<-2147483648){byteOffset=-2147483648}byteOffset=+byteOffset;if(numberIsNaN(byteOffset)){byteOffset=dir?0:buffer.length-1}if(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1}else if(byteOffset<0){if(dir)byteOffset=0;else return-1}if(typeof val==="string"){val=Buffer.from(val,encoding)}if(Buffer.isBuffer(val)){if(val.length===0){return-1}return arrayIndexOf(buffer,val,byteOffset,encoding,dir)}else if(typeof val==="number"){val=val&255;if(typeof Uint8Array.prototype.indexOf==="function"){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset)}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset)}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir)}throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==="ucs2"||encoding==="ucs-2"||encoding==="utf16le"||encoding==="utf-16le"){if(arr.length<2||val.length<2){return-1}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2}}function read(buf,i){if(indexSize===1){return buf[i]}else{return buf.readUInt16BE(i*indexSize)}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break}}if(found)return i}}return-1}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false)};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining}else{length=Number(length);if(length>remaining){length=remaining}}var strLen=string.length;if(length>strLen/2){length=strLen/2}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(numberIsNaN(parsed))return i;buf[offset+i]=parsed}return i}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length)}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length)}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length)}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length)}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length)}Buffer.prototype.write=function write(string,offset,length,encoding){if(offset===undefined){encoding="utf8";length=this.length;offset=0}else if(length===undefined&&typeof offset==="string"){encoding=offset;length=this.length;offset=0}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===undefined)encoding="utf8"}else{encoding=length;length=undefined}}else{throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported")}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError("Attempt to write outside buffer bounds")}if(!encoding)encoding="utf8";var loweredCase=false;for(;;){switch(encoding){case"hex":return hexWrite(this,string,offset,length);case"utf8":case"utf-8":return utf8Write(this,string,offset,length);case"ascii":return asciiWrite(this,string,offset,length);case"latin1":case"binary":return latin1Write(this,string,offset,length);case"base64":return base64Write(this,string,offset,length);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase();loweredCase=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf)}else{return base64.fromByteArray(buf.slice(start,end))}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>239?4:firstByte>223?3:firstByte>191?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<128){codePoint=firstByte}break;case 2:secondByte=buf[i+1];if((secondByte&192)===128){tempCodePoint=(firstByte&31)<<6|secondByte&63;if(tempCodePoint>127){codePoint=tempCodePoint}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&192)===128&&(thirdByte&192)===128){tempCodePoint=(firstByte&15)<<12|(secondByte&63)<<6|thirdByte&63;if(tempCodePoint>2047&&(tempCodePoint<55296||tempCodePoint>57343)){codePoint=tempCodePoint}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&192)===128&&(thirdByte&192)===128&&(fourthByte&192)===128){tempCodePoint=(firstByte&15)<<18|(secondByte&63)<<12|(thirdByte&63)<<6|fourthByte&63;if(tempCodePoint>65535&&tempCodePoint<1114112){codePoint=tempCodePoint}}}}if(codePoint===null){codePoint=65533;bytesPerSequence=1}else if(codePoint>65535){codePoint-=65536;res.push(codePoint>>>10&1023|55296);codePoint=56320|codePoint&1023}res.push(codePoint);i+=bytesPerSequence}return decodeCodePointsArray(res)}var MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints)}var res="";var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH))}return res}function asciiSlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&127)}return ret}function latin1Slice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i])}return ret}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out="";for(var i=start;i<end;++i){out+=toHex(buf[i])}return out}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res="";for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256)}return res}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0}else if(start>len){start=len}if(end<0){end+=len;if(end<0)end=0}else if(end>len){end=len}if(end<start)end=start;var newBuf=this.subarray(start,end);newBuf.__proto__=Buffer.prototype;return newBuf};function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError("offset is not uint");if(offset+ext>length)throw new RangeError("Trying to access beyond buffer length")}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=256)){val+=this[offset+i]*mul}return val};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){checkOffset(offset,byteLength,this.length)}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=256)){val+=this[offset+--byteLength]*mul}return val};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset]};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*16777216+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=256)){val+=this[offset+i]*mul}mul*=128;if(val>=mul)val-=Math.pow(2,8*byteLength);return val};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=256)){val+=this[offset+--i]*mul}mul*=128;if(val>=mul)val-=Math.pow(2,8*byteLength);return val};Buffer.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&128))return this[offset];return(255-this[offset]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&32768?val|4294901760:val};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&32768?val|4294901760:val};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8)};function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError("Index out of range")}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0)}var mul=1;var i=0;this[offset]=value&255;while(++i<byteLength&&(mul*=256)){this[offset+i]=value/mul&255}return offset+byteLength};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0)}var i=byteLength-1;var mul=1;this[offset+i]=value&255;while(--i>=0&&(mul*=256)){this[offset+i]=value/mul&255}return offset+byteLength};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,255,0);this[offset]=value&255;return offset+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,65535,0);this[offset]=value&255;this[offset+1]=value>>>8;return offset+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,65535,0);this[offset]=value>>>8;this[offset+1]=value&255;return offset+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,4294967295,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&255;return offset+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,4294967295,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&255;return offset+4};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=0;var mul=1;var sub=0;this[offset]=value&255;while(++i<byteLength&&(mul*=256)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1}this[offset+i]=(value/mul>>0)-sub&255}return offset+byteLength};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&255;while(--i>=0&&(mul*=256)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1}this[offset+i]=(value/mul>>0)-sub&255}return offset+byteLength};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,127,-128);if(value<0)value=255+value+1;this[offset]=value&255;return offset+1};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,32767,-32768);this[offset]=value&255;this[offset+1]=value>>>8;return offset+2};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,32767,-32768);this[offset]=value>>>8;this[offset+1]=value&255;return offset+2};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,2147483647,-2147483648);this[offset]=value&255;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,2147483647,-2147483648);if(value<0)value=4294967295+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&255;return offset+4};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError("Index out of range");if(offset<0)throw new RangeError("Index out of range")}function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4,3.4028234663852886e38,-3.4028234663852886e38)}ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert)};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert)};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8,1.7976931348623157e308,-1.7976931348623157e308)}ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert)};Buffer.prototype.copy=function copy(target,targetStart,start,end){if(!Buffer.isBuffer(target))throw new TypeError("argument should be a Buffer");if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;if(end===start)return 0;if(target.length===0||this.length===0)return 0;if(targetStart<0){throw new RangeError("targetStart out of bounds")}if(start<0||start>=this.length)throw new RangeError("Index out of range");if(end<0)throw new RangeError("sourceEnd out of bounds");if(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start}var len=end-start;if(this===target&&typeof Uint8Array.prototype.copyWithin==="function"){this.copyWithin(targetStart,start,end)}else if(this===target&&start<targetStart&&targetStart<end){for(var i=len-1;i>=0;--i){target[i+targetStart]=this[i+start]}}else{Uint8Array.prototype.set.call(target,this.subarray(start,end),targetStart)}return len};Buffer.prototype.fill=function fill(val,start,end,encoding){if(typeof val==="string"){if(typeof start==="string"){encoding=start;start=0;end=this.length}else if(typeof end==="string"){encoding=end;end=this.length}if(encoding!==undefined&&typeof encoding!=="string"){throw new TypeError("encoding must be a string")}if(typeof encoding==="string"&&!Buffer.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding)}if(val.length===1){var code=val.charCodeAt(0);if(encoding==="utf8"&&code<128||encoding==="latin1"){val=code}}}else if(typeof val==="number"){val=val&255}if(start<0||this.length<start||this.length<end){throw new RangeError("Out of range index")}if(end<=start){return this}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==="number"){for(i=start;i<end;++i){this[i]=val}}else{var bytes=Buffer.isBuffer(val)?val:new Buffer(val,encoding);var len=bytes.length;if(len===0){throw new TypeError('The value "'+val+'" is invalid for argument "value"')}for(i=0;i<end-start;++i){this[i+start]=bytes[i%len]}}return this};var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str){str=str.split("=")[0];str=str.trim().replace(INVALID_BASE64_RE,"");if(str.length<2)return"";while(str.length%4!==0){str=str+"="}return str}function toHex(n){if(n<16)return"0"+n.toString(16);return n.toString(16)}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);if(codePoint>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){if((units-=3)>-1)bytes.push(239,191,189);continue}else if(i+1===length){if((units-=3)>-1)bytes.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(codePoint<56320){if((units-=3)>-1)bytes.push(239,191,189);leadSurrogate=codePoint;continue}codePoint=(leadSurrogate-55296<<10|codePoint-56320)+65536}else if(leadSurrogate){if((units-=3)>-1)bytes.push(239,191,189)}leadSurrogate=null;if(codePoint<128){if((units-=1)<0)break;bytes.push(codePoint)}else if(codePoint<2048){if((units-=2)<0)break;bytes.push(codePoint>>6|192,codePoint&63|128)}else if(codePoint<65536){if((units-=3)<0)break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,codePoint&63|128)}else if(codePoint<1114112){if((units-=4)<0)break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,codePoint&63|128)}else{throw new Error("Invalid code point")}}return bytes}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){byteArray.push(str.charCodeAt(i)&255)}return byteArray}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi)}return byteArray}function base64ToBytes(str){return base64.toByteArray(base64clean(str))}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i]}return i}function isArrayBuffer(obj){return obj instanceof ArrayBuffer||obj!=null&&obj.constructor!=null&&obj.constructor.name==="ArrayBuffer"&&typeof obj.byteLength==="number"}function numberIsNaN(obj){return obj!==obj}},{"base64-js":107,ieee754:350}],151:[function(require,module,exports){"use strict";let checkError=require("check-error");module.exports=((chai,utils)=>{const Assertion=chai.Assertion;const assert=chai.assert;const proxify=utils.proxify;if(utils.checkError){checkError=utils.checkError}function isLegacyJQueryPromise(thenable){return typeof thenable.catch!=="function"&&typeof thenable.always==="function"&&typeof thenable.done==="function"&&typeof thenable.fail==="function"&&typeof thenable.pipe==="function"&&typeof thenable.progress==="function"&&typeof thenable.state==="function"}function assertIsAboutPromise(assertion){if(typeof assertion._obj.then!=="function"){throw new TypeError(utils.inspect(assertion._obj)+" is not a thenable.")}if(isLegacyJQueryPromise(assertion._obj)){throw new TypeError("Chai as Promised is incompatible with thenables of jQuery<3.0.0, sorry! Please "+"upgrade jQuery or use another Promises/A+ compatible library (see "+"http://promisesaplus.com/).")}}function proxifyIfSupported(assertion){return proxify===undefined?assertion:proxify(assertion)}function method(name,asserter){utils.addMethod(Assertion.prototype,name,function(){assertIsAboutPromise(this);return asserter.apply(this,arguments)})}function property(name,asserter){utils.addProperty(Assertion.prototype,name,function(){assertIsAboutPromise(this);return proxifyIfSupported(asserter.apply(this,arguments))})}function doNotify(promise,done){promise.then(()=>done(),done)}function assertIfNegated(assertion,message,extra){assertion.assert(true,null,message,extra.expected,extra.actual)}function assertIfNotNegated(assertion,message,extra){assertion.assert(false,message,null,extra.expected,extra.actual)}function getBasePromise(assertion){return typeof assertion.then==="function"?assertion:assertion._obj}function getReasonName(reason){return reason instanceof Error?reason.toString():checkError.getConstructorName(reason)}const propertyNames=Object.getOwnPropertyNames(Assertion.prototype);const propertyDescs={};for(const name of propertyNames){propertyDescs[name]=Object.getOwnPropertyDescriptor(Assertion.prototype,name)}property("fulfilled",function(){const derivedPromise=getBasePromise(this).then(value=>{assertIfNegated(this,"expected promise not to be fulfilled but it was fulfilled with #{act}",{actual:value});return value},reason=>{assertIfNotNegated(this,"expected promise to be fulfilled but it was rejected with #{act}",{actual:getReasonName(reason)});return reason});module.exports.transferPromiseness(this,derivedPromise);return this});property("rejected",function(){const derivedPromise=getBasePromise(this).then(value=>{assertIfNotNegated(this,"expected promise to be rejected but it was fulfilled with #{act}",{actual:value});return value},reason=>{assertIfNegated(this,"expected promise not to be rejected but it was rejected with #{act}",{actual:getReasonName(reason)});return reason});module.exports.transferPromiseness(this,derivedPromise);return this});method("rejectedWith",function(errorLike,errMsgMatcher,message){let errorLikeName=null;const negate=utils.flag(this,"negate")||false;if(errorLike===undefined&&errMsgMatcher===undefined&&message===undefined){return this.rejected}if(message!==undefined){utils.flag(this,"message",message)}if(errorLike instanceof RegExp||typeof errorLike==="string"){errMsgMatcher=errorLike;errorLike=null}else if(errorLike&&errorLike instanceof Error){errorLikeName=errorLike.toString()}else if(typeof errorLike==="function"){errorLikeName=checkError.getConstructorName(errorLike)}else{errorLike=null}const everyArgIsDefined=Boolean(errorLike&&errMsgMatcher);let matcherRelation="including";if(errMsgMatcher instanceof RegExp){matcherRelation="matching"}const derivedPromise=getBasePromise(this).then(value=>{let assertionMessage=null;let expected=null;if(errorLike){assertionMessage="expected promise to be rejected with #{exp} but it was fulfilled with #{act}";expected=errorLikeName}else if(errMsgMatcher){assertionMessage=`expected promise to be rejected with an error ${matcherRelation} #{exp} but `+`it was fulfilled with #{act}`;expected=errMsgMatcher}assertIfNotNegated(this,assertionMessage,{expected:expected,actual:value});return value},reason=>{const errorLikeCompatible=errorLike&&(errorLike instanceof Error?checkError.compatibleInstance(reason,errorLike):checkError.compatibleConstructor(reason,errorLike));const errMsgMatcherCompatible=errMsgMatcher&&checkError.compatibleMessage(reason,errMsgMatcher);const reasonName=getReasonName(reason);if(negate&&everyArgIsDefined){if(errorLikeCompatible&&errMsgMatcherCompatible){this.assert(true,null,"expected promise not to be rejected with #{exp} but it was rejected "+"with #{act}",errorLikeName,reasonName)}}else{if(errorLike){this.assert(errorLikeCompatible,"expected promise to be rejected with #{exp} but it was rejected with #{act}","expected promise not to be rejected with #{exp} but it was rejected "+"with #{act}",errorLikeName,reasonName)}if(errMsgMatcher){this.assert(errMsgMatcherCompatible,`expected promise to be rejected with an error ${matcherRelation} #{exp} but got `+`#{act}`,`expected promise not to be rejected with an error ${matcherRelation} #{exp}`,errMsgMatcher,checkError.getMessage(reason))}}return reason});module.exports.transferPromiseness(this,derivedPromise);return this});property("eventually",function(){utils.flag(this,"eventually",true);return this});method("notify",function(done){doNotify(getBasePromise(this),done);return this});method("become",function(value,message){return this.eventually.deep.equal(value,message)});const methodNames=propertyNames.filter(name=>{return name!=="assert"&&typeof propertyDescs[name].value==="function"});methodNames.forEach(methodName=>{Assertion.overwriteMethod(methodName,originalMethod=>(function(){return doAsserterAsyncAndAddThen(originalMethod,this,arguments)}))});const getterNames=propertyNames.filter(name=>{return name!=="_obj"&&typeof propertyDescs[name].get==="function"});getterNames.forEach(getterName=>{const isChainableMethod=Assertion.prototype.__methods.hasOwnProperty(getterName);if(isChainableMethod){Assertion.overwriteChainableMethod(getterName,originalMethod=>(function(){return doAsserterAsyncAndAddThen(originalMethod,this,arguments)}),originalGetter=>(function(){return doAsserterAsyncAndAddThen(originalGetter,this)}))}else{Assertion.overwriteProperty(getterName,originalGetter=>(function(){return proxifyIfSupported(doAsserterAsyncAndAddThen(originalGetter,this))}))}});function doAsserterAsyncAndAddThen(asserter,assertion,args){if(!utils.flag(assertion,"eventually")){asserter.apply(assertion,args);return assertion}const derivedPromise=getBasePromise(assertion).then(value=>{assertion._obj=value;utils.flag(assertion,"eventually",false);return args?module.exports.transformAsserterArgs(args):args}).then(newArgs=>{asserter.apply(assertion,newArgs);return assertion._obj});module.exports.transferPromiseness(assertion,derivedPromise);return assertion}const originalAssertMethods=Object.getOwnPropertyNames(assert).filter(propName=>{return typeof assert[propName]==="function"});assert.isFulfilled=((promise,message)=>new Assertion(promise,message).to.be.fulfilled);assert.isRejected=((promise,errorLike,errMsgMatcher,message)=>{const assertion=new Assertion(promise,message);return assertion.to.be.rejectedWith(errorLike,errMsgMatcher,message)});assert.becomes=((promise,value,message)=>assert.eventually.deepEqual(promise,value,message));assert.doesNotBecome=((promise,value,message)=>assert.eventually.notDeepEqual(promise,value,message));assert.eventually={};originalAssertMethods.forEach(assertMethodName=>{assert.eventually[assertMethodName]=function(promise){const otherArgs=Array.prototype.slice.call(arguments,1);let customRejectionHandler;const message=arguments[assert[assertMethodName].length-1];if(typeof message==="string"){customRejectionHandler=(reason=>{throw new chai.AssertionError(`${message}\n\nOriginal reason: ${utils.inspect(reason)}`)})}const returnedPromise=promise.then(fulfillmentValue=>assert[assertMethodName].apply(assert,[fulfillmentValue].concat(otherArgs)),customRejectionHandler);returnedPromise.notify=(done=>{doNotify(returnedPromise,done)});return returnedPromise}})});module.exports.transferPromiseness=((assertion,promise)=>{assertion.then=promise.then.bind(promise)});module.exports.transformAsserterArgs=(values=>values)},{"check-error":185}],152:[function(require,module,exports){module.exports=require("./lib/chai")},{"./lib/chai":153}],153:[function(require,module,exports){var used=[];exports.version="4.1.2";exports.AssertionError=require("assertion-error");var util=require("./chai/utils");exports.use=function(fn){if(!~used.indexOf(fn)){fn(exports,util);used.push(fn)}return exports};exports.util=util;var config=require("./chai/config");exports.config=config;var assertion=require("./chai/assertion");exports.use(assertion);var core=require("./chai/core/assertions");exports.use(core);var expect=require("./chai/interface/expect");exports.use(expect);var should=require("./chai/interface/should");exports.use(should);var assert=require("./chai/interface/assert");exports.use(assert)},{"./chai/assertion":154,"./chai/config":155,"./chai/core/assertions":156,"./chai/interface/assert":157,"./chai/interface/expect":158,"./chai/interface/should":159,"./chai/utils":173,"assertion-error":85}],154:[function(require,module,exports){var config=require("./config");module.exports=function(_chai,util){var AssertionError=_chai.AssertionError,flag=util.flag;_chai.Assertion=Assertion;function Assertion(obj,msg,ssfi,lockSsfi){flag(this,"ssfi",ssfi||Assertion);flag(this,"lockSsfi",lockSsfi);flag(this,"object",obj);flag(this,"message",msg);return util.proxify(this)}Object.defineProperty(Assertion,"includeStack",{get:function(){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead.");return config.includeStack},set:function(value){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead.");config.includeStack=value}});Object.defineProperty(Assertion,"showDiff",{get:function(){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead.");return config.showDiff},set:function(value){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead.");config.showDiff=value}});Assertion.addProperty=function(name,fn){util.addProperty(this.prototype,name,fn)};Assertion.addMethod=function(name,fn){util.addMethod(this.prototype,name,fn)};Assertion.addChainableMethod=function(name,fn,chainingBehavior){util.addChainableMethod(this.prototype,name,fn,chainingBehavior)};Assertion.overwriteProperty=function(name,fn){util.overwriteProperty(this.prototype,name,fn)};Assertion.overwriteMethod=function(name,fn){util.overwriteMethod(this.prototype,name,fn)};Assertion.overwriteChainableMethod=function(name,fn,chainingBehavior){util.overwriteChainableMethod(this.prototype,name,fn,chainingBehavior)};Assertion.prototype.assert=function(expr,msg,negateMsg,expected,_actual,showDiff){var ok=util.test(this,arguments);if(false!==showDiff)showDiff=true;if(undefined===expected&&undefined===_actual)showDiff=false;if(true!==config.showDiff)showDiff=false;if(!ok){msg=util.getMessage(this,arguments);var actual=util.getActual(this,arguments);throw new AssertionError(msg,{actual:actual,expected:expected,showDiff:showDiff},config.includeStack?this.assert:flag(this,"ssfi"))}};Object.defineProperty(Assertion.prototype,"_obj",{get:function(){return flag(this,"object")},set:function(val){flag(this,"object",val)}})}},{"./config":155}],155:[function(require,module,exports){module.exports={includeStack:false,showDiff:true,truncateThreshold:40,useProxy:true,proxyExcludedKeys:["then","inspect","toJSON"]}},{}],156:[function(require,module,exports){module.exports=function(chai,_){var Assertion=chai.Assertion,AssertionError=chai.AssertionError,flag=_.flag;["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does"].forEach(function(chain){Assertion.addProperty(chain)});Assertion.addProperty("not",function(){flag(this,"negate",true)});Assertion.addProperty("deep",function(){flag(this,"deep",true)});Assertion.addProperty("nested",function(){flag(this,"nested",true)});Assertion.addProperty("own",function(){flag(this,"own",true)});Assertion.addProperty("ordered",function(){flag(this,"ordered",true)});Assertion.addProperty("any",function(){flag(this,"any",true);flag(this,"all",false)});Assertion.addProperty("all",function(){flag(this,"all",true);flag(this,"any",false)});function an(type,msg){if(msg)flag(this,"message",msg);type=type.toLowerCase();var obj=flag(this,"object"),article=~["a","e","i","o","u"].indexOf(type.charAt(0))?"an ":"a ";this.assert(type===_.type(obj).toLowerCase(),"expected #{this} to be "+article+type,"expected #{this} not to be "+article+type)}Assertion.addChainableMethod("an",an);Assertion.addChainableMethod("a",an);function SameValueZero(a,b){return _.isNaN(a)&&_.isNaN(b)||a===b}function includeChainingBehavior(){flag(this,"contains",true)}function include(val,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),objType=_.type(obj).toLowerCase(),flagMsg=flag(this,"message"),negate=flag(this,"negate"),ssfi=flag(this,"ssfi"),isDeep=flag(this,"deep"),descriptor=isDeep?"deep ":"";flagMsg=flagMsg?flagMsg+": ":"";var included=false;switch(objType){case"string":included=obj.indexOf(val)!==-1;break;case"weakset":if(isDeep){throw new AssertionError(flagMsg+"unable to use .deep.include with WeakSet",undefined,ssfi)}included=obj.has(val);break;case"map":var isEql=isDeep?_.eql:SameValueZero;obj.forEach(function(item){included=included||isEql(item,val)});break;case"set":if(isDeep){obj.forEach(function(item){included=included||_.eql(item,val)})}else{included=obj.has(val)}break;case"array":if(isDeep){included=obj.some(function(item){return _.eql(item,val)})}else{included=obj.indexOf(val)!==-1}break;default:if(val!==Object(val)){throw new AssertionError(flagMsg+"object tested must be an array, a map, an object,"+" a set, a string, or a weakset, but "+objType+" given",undefined,ssfi)}var props=Object.keys(val),firstErr=null,numErrs=0;props.forEach(function(prop){var propAssertion=new Assertion(obj);_.transferFlags(this,propAssertion,true);flag(propAssertion,"lockSsfi",true);if(!negate||props.length===1){propAssertion.property(prop,val[prop]);return}try{propAssertion.property(prop,val[prop])}catch(err){if(!_.checkError.compatibleConstructor(err,AssertionError)){throw err}if(firstErr===null)firstErr=err;numErrs++}},this);if(negate&&props.length>1&&numErrs===props.length){throw firstErr}return}this.assert(included,"expected #{this} to "+descriptor+"include "+_.inspect(val),"expected #{this} to not "+descriptor+"include "+_.inspect(val))}Assertion.addChainableMethod("include",include,includeChainingBehavior);Assertion.addChainableMethod("contain",include,includeChainingBehavior);Assertion.addChainableMethod("contains",include,includeChainingBehavior);Assertion.addChainableMethod("includes",include,includeChainingBehavior);Assertion.addProperty("ok",function(){this.assert(flag(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")});Assertion.addProperty("true",function(){this.assert(true===flag(this,"object"),"expected #{this} to be true","expected #{this} to be false",flag(this,"negate")?false:true)});Assertion.addProperty("false",function(){this.assert(false===flag(this,"object"),"expected #{this} to be false","expected #{this} to be true",flag(this,"negate")?true:false)});Assertion.addProperty("null",function(){this.assert(null===flag(this,"object"),"expected #{this} to be null","expected #{this} not to be null")});Assertion.addProperty("undefined",function(){this.assert(undefined===flag(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")});Assertion.addProperty("NaN",function(){this.assert(_.isNaN(flag(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")});Assertion.addProperty("exist",function(){var val=flag(this,"object");this.assert(val!==null&&val!==undefined,"expected #{this} to exist","expected #{this} to not exist")});Assertion.addProperty("empty",function(){var val=flag(this,"object"),ssfi=flag(this,"ssfi"),flagMsg=flag(this,"message"),itemsCount;flagMsg=flagMsg?flagMsg+": ":"";switch(_.type(val).toLowerCase()){case"array":case"string":itemsCount=val.length;break;case"map":case"set":itemsCount=val.size;break;case"weakmap":case"weakset":throw new AssertionError(flagMsg+".empty was passed a weak collection",undefined,ssfi);case"function":var msg=flagMsg+".empty was passed a function "+_.getName(val);throw new AssertionError(msg.trim(),undefined,ssfi);default:if(val!==Object(val)){throw new AssertionError(flagMsg+".empty was passed non-string primitive "+_.inspect(val),undefined,ssfi)}itemsCount=Object.keys(val).length}this.assert(0===itemsCount,"expected #{this} to be empty","expected #{this} not to be empty")});function checkArguments(){var obj=flag(this,"object"),type=_.type(obj);this.assert("Arguments"===type,"expected #{this} to be arguments but got "+type,"expected #{this} to not be arguments")}Assertion.addProperty("arguments",checkArguments);Assertion.addProperty("Arguments",checkArguments);function assertEqual(val,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object");if(flag(this,"deep")){return this.eql(val)}else{this.assert(val===obj,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",val,this._obj,true)}}Assertion.addMethod("equal",assertEqual);Assertion.addMethod("equals",assertEqual);Assertion.addMethod("eq",assertEqual);function assertEql(obj,msg){if(msg)flag(this,"message",msg);this.assert(_.eql(obj,flag(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",obj,this._obj,true)}Assertion.addMethod("eql",assertEql);Assertion.addMethod("eqls",assertEql);function assertAbove(n,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),doLength=flag(this,"doLength"),flagMsg=flag(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag(this,"ssfi"),objType=_.type(obj).toLowerCase(),nType=_.type(n).toLowerCase(),shouldThrow=true;if(doLength){new Assertion(obj,flagMsg,ssfi,true).to.have.property("length")}if(!doLength&&(objType==="date"&&nType!=="date")){errorMessage=msgPrefix+"the argument to above must be a date"}else if(nType!=="number"&&(doLength||objType==="number")){errorMessage=msgPrefix+"the argument to above must be a number"}else if(!doLength&&(objType!=="date"&&objType!=="number")){var printObj=objType==="string"?"'"+obj+"'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date"}else{shouldThrow=false}if(shouldThrow){throw new AssertionError(errorMessage,undefined,ssfi)}if(doLength){var len=obj.length;this.assert(len>n,"expected #{this} to have a length above #{exp} but got #{act}","expected #{this} to not have a length above #{exp}",n,len)}else{this.assert(obj>n,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",n)}}Assertion.addMethod("above",assertAbove);Assertion.addMethod("gt",assertAbove);Assertion.addMethod("greaterThan",assertAbove);function assertLeast(n,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),doLength=flag(this,"doLength"),flagMsg=flag(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag(this,"ssfi"),objType=_.type(obj).toLowerCase(),nType=_.type(n).toLowerCase(),shouldThrow=true;if(doLength){new Assertion(obj,flagMsg,ssfi,true).to.have.property("length")}if(!doLength&&(objType==="date"&&nType!=="date")){errorMessage=msgPrefix+"the argument to least must be a date"}else if(nType!=="number"&&(doLength||objType==="number")){errorMessage=msgPrefix+"the argument to least must be a number"}else if(!doLength&&(objType!=="date"&&objType!=="number")){var printObj=objType==="string"?"'"+obj+"'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date"}else{shouldThrow=false}if(shouldThrow){throw new AssertionError(errorMessage,undefined,ssfi)}if(doLength){var len=obj.length;this.assert(len>=n,"expected #{this} to have a length at least #{exp} but got #{act}","expected #{this} to have a length below #{exp}",n,len)}else{this.assert(obj>=n,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",n)}}Assertion.addMethod("least",assertLeast);Assertion.addMethod("gte",assertLeast);function assertBelow(n,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),doLength=flag(this,"doLength"),flagMsg=flag(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag(this,"ssfi"),objType=_.type(obj).toLowerCase(),nType=_.type(n).toLowerCase(),shouldThrow=true;if(doLength){new Assertion(obj,flagMsg,ssfi,true).to.have.property("length")}if(!doLength&&(objType==="date"&&nType!=="date")){errorMessage=msgPrefix+"the argument to below must be a date"}else if(nType!=="number"&&(doLength||objType==="number")){errorMessage=msgPrefix+"the argument to below must be a number"}else if(!doLength&&(objType!=="date"&&objType!=="number")){var printObj=objType==="string"?"'"+obj+"'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date"}else{shouldThrow=false}if(shouldThrow){throw new AssertionError(errorMessage,undefined,ssfi)}if(doLength){var len=obj.length;this.assert(len<n,"expected #{this} to have a length below #{exp} but got #{act}","expected #{this} to not have a length below #{exp}",n,len)}else{this.assert(obj<n,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",n)}}Assertion.addMethod("below",assertBelow);Assertion.addMethod("lt",assertBelow);Assertion.addMethod("lessThan",assertBelow);function assertMost(n,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),doLength=flag(this,"doLength"),flagMsg=flag(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag(this,"ssfi"),objType=_.type(obj).toLowerCase(),nType=_.type(n).toLowerCase(),shouldThrow=true;if(doLength){new Assertion(obj,flagMsg,ssfi,true).to.have.property("length")}if(!doLength&&(objType==="date"&&nType!=="date")){errorMessage=msgPrefix+"the argument to most must be a date"}else if(nType!=="number"&&(doLength||objType==="number")){errorMessage=msgPrefix+"the argument to most must be a number"}else if(!doLength&&(objType!=="date"&&objType!=="number")){var printObj=objType==="string"?"'"+obj+"'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date"}else{shouldThrow=false}if(shouldThrow){throw new AssertionError(errorMessage,undefined,ssfi)}if(doLength){var len=obj.length;this.assert(len<=n,"expected #{this} to have a length at most #{exp} but got #{act}","expected #{this} to have a length above #{exp}",n,len)}else{this.assert(obj<=n,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",n)}}Assertion.addMethod("most",assertMost);Assertion.addMethod("lte",assertMost);Assertion.addMethod("within",function(start,finish,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),doLength=flag(this,"doLength"),flagMsg=flag(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag(this,"ssfi"),objType=_.type(obj).toLowerCase(),startType=_.type(start).toLowerCase(),finishType=_.type(finish).toLowerCase(),shouldThrow=true,range=startType==="date"&&finishType==="date"?start.toUTCString()+".."+finish.toUTCString():start+".."+finish;if(doLength){new Assertion(obj,flagMsg,ssfi,true).to.have.property("length")}if(!doLength&&(objType==="date"&&(startType!=="date"||finishType!=="date"))){errorMessage=msgPrefix+"the arguments to within must be dates"}else if((startType!=="number"||finishType!=="number")&&(doLength||objType==="number")){errorMessage=msgPrefix+"the arguments to within must be numbers"}else if(!doLength&&(objType!=="date"&&objType!=="number")){var printObj=objType==="string"?"'"+obj+"'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date"}else{shouldThrow=false}if(shouldThrow){throw new AssertionError(errorMessage,undefined,ssfi)}if(doLength){var len=obj.length;this.assert(len>=start&&len<=finish,"expected #{this} to have a length within "+range,"expected #{this} to not have a length within "+range)}else{this.assert(obj>=start&&obj<=finish,"expected #{this} to be within "+range,"expected #{this} to not be within "+range)}});function assertInstanceOf(constructor,msg){if(msg)flag(this,"message",msg);var target=flag(this,"object");var ssfi=flag(this,"ssfi");var flagMsg=flag(this,"message");try{var isInstanceOf=target instanceof constructor}catch(err){if(err instanceof TypeError){flagMsg=flagMsg?flagMsg+": ":"";throw new AssertionError(flagMsg+"The instanceof assertion needs a constructor but "+_.type(constructor)+" was given.",undefined,ssfi)}throw err}var name=_.getName(constructor);if(name===null){name="an unnamed constructor"}this.assert(isInstanceOf,"expected #{this} to be an instance of "+name,"expected #{this} to not be an instance of "+name)}Assertion.addMethod("instanceof",assertInstanceOf);Assertion.addMethod("instanceOf",assertInstanceOf);function assertProperty(name,val,msg){if(msg)flag(this,"message",msg);var isNested=flag(this,"nested"),isOwn=flag(this,"own"),flagMsg=flag(this,"message"),obj=flag(this,"object"),ssfi=flag(this,"ssfi");if(isNested&&isOwn){flagMsg=flagMsg?flagMsg+": ":"";throw new AssertionError(flagMsg+'The "nested" and "own" flags cannot be combined.',undefined,ssfi)}if(obj===null||obj===undefined){flagMsg=flagMsg?flagMsg+": ":"";throw new AssertionError(flagMsg+"Target cannot be null or undefined.",undefined,ssfi)}var isDeep=flag(this,"deep"),negate=flag(this,"negate"),pathInfo=isNested?_.getPathInfo(obj,name):null,value=isNested?pathInfo.value:obj[name];var descriptor="";if(isDeep)descriptor+="deep ";if(isOwn)descriptor+="own ";if(isNested)descriptor+="nested ";descriptor+="property ";var hasProperty;if(isOwn)hasProperty=Object.prototype.hasOwnProperty.call(obj,name);else if(isNested)hasProperty=pathInfo.exists;else hasProperty=_.hasProperty(obj,name);if(!negate||arguments.length===1){this.assert(hasProperty,"expected #{this} to have "+descriptor+_.inspect(name),"expected #{this} to not have "+descriptor+_.inspect(name))}if(arguments.length>1){this.assert(hasProperty&&(isDeep?_.eql(val,value):val===value),"expected #{this} to have "+descriptor+_.inspect(name)+" of #{exp}, but got #{act}","expected #{this} to not have "+descriptor+_.inspect(name)+" of #{act}",val,value)}flag(this,"object",value)}Assertion.addMethod("property",assertProperty);function assertOwnProperty(name,value,msg){flag(this,"own",true);assertProperty.apply(this,arguments)}Assertion.addMethod("ownProperty",assertOwnProperty);Assertion.addMethod("haveOwnProperty",assertOwnProperty);function assertOwnPropertyDescriptor(name,descriptor,msg){if(typeof descriptor==="string"){msg=descriptor;descriptor=null}if(msg)flag(this,"message",msg);var obj=flag(this,"object");var actualDescriptor=Object.getOwnPropertyDescriptor(Object(obj),name);if(actualDescriptor&&descriptor){this.assert(_.eql(descriptor,actualDescriptor),"expected the own property descriptor for "+_.inspect(name)+" on #{this} to match "+_.inspect(descriptor)+", got "+_.inspect(actualDescriptor),"expected the own property descriptor for "+_.inspect(name)+" on #{this} to not match "+_.inspect(descriptor),descriptor,actualDescriptor,true)}else{this.assert(actualDescriptor,"expected #{this} to have an own property descriptor for "+_.inspect(name),"expected #{this} to not have an own property descriptor for "+_.inspect(name))}flag(this,"object",actualDescriptor)}Assertion.addMethod("ownPropertyDescriptor",assertOwnPropertyDescriptor);Assertion.addMethod("haveOwnPropertyDescriptor",assertOwnPropertyDescriptor);function assertLengthChain(){flag(this,"doLength",true)}function assertLength(n,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(obj,flagMsg,ssfi,true).to.have.property("length");var len=obj.length;this.assert(len==n,"expected #{this} to have a length of #{exp} but got #{act}","expected #{this} to not have a length of #{act}",n,len)}Assertion.addChainableMethod("length",assertLength,assertLengthChain);Assertion.addChainableMethod("lengthOf",assertLength,assertLengthChain);function assertMatch(re,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object");this.assert(re.exec(obj),"expected #{this} to match "+re,"expected #{this} not to match "+re)}Assertion.addMethod("match",assertMatch);Assertion.addMethod("matches",assertMatch);Assertion.addMethod("string",function(str,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(obj,flagMsg,ssfi,true).is.a("string");this.assert(~obj.indexOf(str),"expected #{this} to contain "+_.inspect(str),"expected #{this} to not contain "+_.inspect(str))});function assertKeys(keys){var obj=flag(this,"object"),objType=_.type(obj),keysType=_.type(keys),ssfi=flag(this,"ssfi"),isDeep=flag(this,"deep"),str,deepStr="",ok=true,flagMsg=flag(this,"message");flagMsg=flagMsg?flagMsg+": ":"";var mixedArgsMsg=flagMsg+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if(objType==="Map"||objType==="Set"){deepStr=isDeep?"deeply ":"";actual=[];obj.forEach(function(val,key){actual.push(key)});if(keysType!=="Array"){keys=Array.prototype.slice.call(arguments)}}else{actual=_.getOwnEnumerableProperties(obj);switch(keysType){case"Array":if(arguments.length>1){throw new AssertionError(mixedArgsMsg,undefined,ssfi)}break;case"Object":if(arguments.length>1){throw new AssertionError(mixedArgsMsg,undefined,ssfi)}keys=Object.keys(keys);break;default:keys=Array.prototype.slice.call(arguments)}keys=keys.map(function(val){return typeof val==="symbol"?val:String(val)})}if(!keys.length){throw new AssertionError(flagMsg+"keys required",undefined,ssfi)}var len=keys.length,any=flag(this,"any"),all=flag(this,"all"),expected=keys,actual;if(!any&&!all){all=true}if(any){ok=expected.some(function(expectedKey){return actual.some(function(actualKey){if(isDeep){return _.eql(expectedKey,actualKey)}else{return expectedKey===actualKey}})})}if(all){ok=expected.every(function(expectedKey){return actual.some(function(actualKey){if(isDeep){return _.eql(expectedKey,actualKey)}else{return expectedKey===actualKey}})});if(!flag(this,"contains")){ok=ok&&keys.length==actual.length}}if(len>1){keys=keys.map(function(key){return _.inspect(key)});var last=keys.pop();if(all){str=keys.join(", ")+", and "+last}if(any){str=keys.join(", ")+", or "+last}}else{str=_.inspect(keys[0])}str=(len>1?"keys ":"key ")+str;str=(flag(this,"contains")?"contain ":"have ")+str;this.assert(ok,"expected #{this} to "+deepStr+str,"expected #{this} to not "+deepStr+str,expected.slice(0).sort(_.compareByInspect),actual.sort(_.compareByInspect),true)}Assertion.addMethod("keys",assertKeys);Assertion.addMethod("key",assertKeys);function assertThrows(errorLike,errMsgMatcher,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),ssfi=flag(this,"ssfi"),flagMsg=flag(this,"message"),negate=flag(this,"negate")||false;new Assertion(obj,flagMsg,ssfi,true).is.a("function");if(errorLike instanceof RegExp||typeof errorLike==="string"){errMsgMatcher=errorLike;errorLike=null}var caughtErr;try{obj()}catch(err){caughtErr=err}var everyArgIsUndefined=errorLike===undefined&&errMsgMatcher===undefined;var everyArgIsDefined=Boolean(errorLike&&errMsgMatcher);var errorLikeFail=false;var errMsgMatcherFail=false;if(everyArgIsUndefined||!everyArgIsUndefined&&!negate){var errorLikeString="an error";if(errorLike instanceof Error){errorLikeString="#{exp}"}else if(errorLike){errorLikeString=_.checkError.getConstructorName(errorLike)}this.assert(caughtErr,"expected #{this} to throw "+errorLikeString,"expected #{this} to not throw an error but #{act} was thrown",errorLike&&errorLike.toString(),caughtErr instanceof Error?caughtErr.toString():typeof caughtErr==="string"?caughtErr:caughtErr&&_.checkError.getConstructorName(caughtErr))}if(errorLike&&caughtErr){if(errorLike instanceof Error){var isCompatibleInstance=_.checkError.compatibleInstance(caughtErr,errorLike);if(isCompatibleInstance===negate){if(everyArgIsDefined&&negate){errorLikeFail=true}else{this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr&&!negate?" but #{act} was thrown":""),errorLike.toString(),caughtErr.toString())}}}var isCompatibleConstructor=_.checkError.compatibleConstructor(caughtErr,errorLike);if(isCompatibleConstructor===negate){if(everyArgIsDefined&&negate){errorLikeFail=true}else{this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr?" but #{act} was thrown":""),errorLike instanceof Error?errorLike.toString():errorLike&&_.checkError.getConstructorName(errorLike),caughtErr instanceof Error?caughtErr.toString():caughtErr&&_.checkError.getConstructorName(caughtErr))}}}if(caughtErr&&errMsgMatcher!==undefined&&errMsgMatcher!==null){var placeholder="including";if(errMsgMatcher instanceof RegExp){placeholder="matching"}var isCompatibleMessage=_.checkError.compatibleMessage(caughtErr,errMsgMatcher);if(isCompatibleMessage===negate){if(everyArgIsDefined&&negate){errMsgMatcherFail=true}else{this.assert(negate,"expected #{this} to throw error "+placeholder+" #{exp} but got #{act}","expected #{this} to throw error not "+placeholder+" #{exp}",errMsgMatcher,_.checkError.getMessage(caughtErr))}}}if(errorLikeFail&&errMsgMatcherFail){this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr?" but #{act} was thrown":""),errorLike instanceof Error?errorLike.toString():errorLike&&_.checkError.getConstructorName(errorLike),caughtErr instanceof Error?caughtErr.toString():caughtErr&&_.checkError.getConstructorName(caughtErr))}flag(this,"object",caughtErr)}Assertion.addMethod("throw",assertThrows);Assertion.addMethod("throws",assertThrows);Assertion.addMethod("Throw",assertThrows);function respondTo(method,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),itself=flag(this,"itself"),context="function"===typeof obj&&!itself?obj.prototype[method]:obj[method];this.assert("function"===typeof context,"expected #{this} to respond to "+_.inspect(method),"expected #{this} to not respond to "+_.inspect(method))}Assertion.addMethod("respondTo",respondTo);Assertion.addMethod("respondsTo",respondTo);Assertion.addProperty("itself",function(){flag(this,"itself",true)});function satisfy(matcher,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object");var result=matcher(obj);this.assert(result,"expected #{this} to satisfy "+_.objDisplay(matcher),"expected #{this} to not satisfy"+_.objDisplay(matcher),flag(this,"negate")?false:true,result)}Assertion.addMethod("satisfy",satisfy);Assertion.addMethod("satisfies",satisfy);function closeTo(expected,delta,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(obj,flagMsg,ssfi,true).is.a("number");if(typeof expected!=="number"||typeof delta!=="number"){flagMsg=flagMsg?flagMsg+": ":"";throw new AssertionError(flagMsg+"the arguments to closeTo or approximately must be numbers",undefined,ssfi)}this.assert(Math.abs(obj-expected)<=delta,"expected #{this} to be close to "+expected+" +/- "+delta,"expected #{this} not to be close to "+expected+" +/- "+delta)}Assertion.addMethod("closeTo",closeTo);Assertion.addMethod("approximately",closeTo);function isSubsetOf(subset,superset,cmp,contains,ordered){if(!contains){if(subset.length!==superset.length)return false;superset=superset.slice()}return subset.every(function(elem,idx){if(ordered)return cmp?cmp(elem,superset[idx]):elem===superset[idx];if(!cmp){var matchIdx=superset.indexOf(elem);if(matchIdx===-1)return false;if(!contains)superset.splice(matchIdx,1);return true}return superset.some(function(elem2,matchIdx){if(!cmp(elem,elem2))return false;if(!contains)superset.splice(matchIdx,1);return true})})}Assertion.addMethod("members",function(subset,msg){if(msg)flag(this,"message",msg);var obj=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(obj,flagMsg,ssfi,true).to.be.an("array");new Assertion(subset,flagMsg,ssfi,true).to.be.an("array");var contains=flag(this,"contains");var ordered=flag(this,"ordered");var subject,failMsg,failNegateMsg,lengthCheck;if(contains){subject=ordered?"an ordered superset":"a superset";failMsg="expected #{this} to be "+subject+" of #{exp}";failNegateMsg="expected #{this} to not be "+subject+" of #{exp}"}else{subject=ordered?"ordered members":"members";failMsg="expected #{this} to have the same "+subject+" as #{exp}";failNegateMsg="expected #{this} to not have the same "+subject+" as #{exp}"}var cmp=flag(this,"deep")?_.eql:undefined;this.assert(isSubsetOf(subset,obj,cmp,contains,ordered),failMsg,failNegateMsg,subset,obj,true)});function oneOf(list,msg){if(msg)flag(this,"message",msg);var expected=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(list,flagMsg,ssfi,true).to.be.an("array");this.assert(list.indexOf(expected)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",list,expected)}Assertion.addMethod("oneOf",oneOf);function assertChanges(subject,prop,msg){if(msg)flag(this,"message",msg);var fn=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(fn,flagMsg,ssfi,true).is.a("function");var initial;if(!prop){new Assertion(subject,flagMsg,ssfi,true).is.a("function");initial=subject()}else{new Assertion(subject,flagMsg,ssfi,true).to.have.property(prop);initial=subject[prop]}fn();var final=prop===undefined||prop===null?subject():subject[prop];var msgObj=prop===undefined||prop===null?initial:"."+prop;flag(this,"deltaMsgObj",msgObj);flag(this,"initialDeltaValue",initial);flag(this,"finalDeltaValue",final);flag(this,"deltaBehavior","change");flag(this,"realDelta",final!==initial);this.assert(initial!==final,"expected "+msgObj+" to change","expected "+msgObj+" to not change")}Assertion.addMethod("change",assertChanges);Assertion.addMethod("changes",assertChanges);function assertIncreases(subject,prop,msg){if(msg)flag(this,"message",msg);var fn=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(fn,flagMsg,ssfi,true).is.a("function");var initial;if(!prop){new Assertion(subject,flagMsg,ssfi,true).is.a("function");initial=subject()}else{new Assertion(subject,flagMsg,ssfi,true).to.have.property(prop);initial=subject[prop]}new Assertion(initial,flagMsg,ssfi,true).is.a("number");fn();var final=prop===undefined||prop===null?subject():subject[prop];var msgObj=prop===undefined||prop===null?initial:"."+prop;flag(this,"deltaMsgObj",msgObj);flag(this,"initialDeltaValue",initial);flag(this,"finalDeltaValue",final);flag(this,"deltaBehavior","increase");flag(this,"realDelta",final-initial);this.assert(final-initial>0,"expected "+msgObj+" to increase","expected "+msgObj+" to not increase")}Assertion.addMethod("increase",assertIncreases);Assertion.addMethod("increases",assertIncreases);function assertDecreases(subject,prop,msg){if(msg)flag(this,"message",msg);var fn=flag(this,"object"),flagMsg=flag(this,"message"),ssfi=flag(this,"ssfi");new Assertion(fn,flagMsg,ssfi,true).is.a("function");var initial;if(!prop){new Assertion(subject,flagMsg,ssfi,true).is.a("function");initial=subject()}else{new Assertion(subject,flagMsg,ssfi,true).to.have.property(prop);initial=subject[prop]}new Assertion(initial,flagMsg,ssfi,true).is.a("number");fn();var final=prop===undefined||prop===null?subject():subject[prop];var msgObj=prop===undefined||prop===null?initial:"."+prop;flag(this,"deltaMsgObj",msgObj);flag(this,"initialDeltaValue",initial);flag(this,"finalDeltaValue",final);flag(this,"deltaBehavior","decrease");flag(this,"realDelta",initial-final);this.assert(final-initial<0,"expected "+msgObj+" to decrease","expected "+msgObj+" to not decrease")}Assertion.addMethod("decrease",assertDecreases);Assertion.addMethod("decreases",assertDecreases);function assertDelta(delta,msg){if(msg)flag(this,"message",msg);var msgObj=flag(this,"deltaMsgObj");var initial=flag(this,"initialDeltaValue");var final=flag(this,"finalDeltaValue");var behavior=flag(this,"deltaBehavior");var realDelta=flag(this,"realDelta");var expression;if(behavior==="change"){expression=Math.abs(final-initial)===Math.abs(delta)}else{expression=realDelta===Math.abs(delta)}this.assert(expression,"expected "+msgObj+" to "+behavior+" by "+delta,"expected "+msgObj+" to not "+behavior+" by "+delta)}Assertion.addMethod("by",assertDelta);Assertion.addProperty("extensible",function(){var obj=flag(this,"object");var isExtensible=obj===Object(obj)&&Object.isExtensible(obj);this.assert(isExtensible,"expected #{this} to be extensible","expected #{this} to not be extensible")});Assertion.addProperty("sealed",function(){var obj=flag(this,"object");var isSealed=obj===Object(obj)?Object.isSealed(obj):true;this.assert(isSealed,"expected #{this} to be sealed","expected #{this} to not be sealed")});Assertion.addProperty("frozen",function(){var obj=flag(this,"object");var isFrozen=obj===Object(obj)?Object.isFrozen(obj):true;this.assert(isFrozen,"expected #{this} to be frozen","expected #{this} to not be frozen")});Assertion.addProperty("finite",function(msg){var obj=flag(this,"object");this.assert(typeof obj==="number"&&isFinite(obj),"expected #{this} to be a finite number","expected #{this} to not be a finite number")})}},{}],157:[function(require,module,exports){module.exports=function(chai,util){var Assertion=chai.Assertion,flag=util.flag;var assert=chai.assert=function(express,errmsg){var test=new Assertion(null,null,chai.assert,true);test.assert(express,errmsg,"[ negation message unavailable ]")};assert.fail=function(actual,expected,message,operator){message=message||"assert.fail()";throw new chai.AssertionError(message,{actual:actual,expected:expected,operator:operator},assert.fail)};assert.isOk=function(val,msg){new Assertion(val,msg,assert.isOk,true).is.ok};assert.isNotOk=function(val,msg){new Assertion(val,msg,assert.isNotOk,true).is.not.ok};assert.equal=function(act,exp,msg){var test=new Assertion(act,msg,assert.equal,true);test.assert(exp==flag(test,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",exp,act,true)};assert.notEqual=function(act,exp,msg){var test=new Assertion(act,msg,assert.notEqual,true);test.assert(exp!=flag(test,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",exp,act,true)};assert.strictEqual=function(act,exp,msg){new Assertion(act,msg,assert.strictEqual,true).to.equal(exp)};assert.notStrictEqual=function(act,exp,msg){new Assertion(act,msg,assert.notStrictEqual,true).to.not.equal(exp)};assert.deepEqual=assert.deepStrictEqual=function(act,exp,msg){new Assertion(act,msg,assert.deepEqual,true).to.eql(exp)};assert.notDeepEqual=function(act,exp,msg){new Assertion(act,msg,assert.notDeepEqual,true).to.not.eql(exp)};assert.isAbove=function(val,abv,msg){new Assertion(val,msg,assert.isAbove,true).to.be.above(abv)};assert.isAtLeast=function(val,atlst,msg){new Assertion(val,msg,assert.isAtLeast,true).to.be.least(atlst)};assert.isBelow=function(val,blw,msg){new Assertion(val,msg,assert.isBelow,true).to.be.below(blw)};assert.isAtMost=function(val,atmst,msg){new Assertion(val,msg,assert.isAtMost,true).to.be.most(atmst)};assert.isTrue=function(val,msg){new Assertion(val,msg,assert.isTrue,true).is["true"]};assert.isNotTrue=function(val,msg){new Assertion(val,msg,assert.isNotTrue,true).to.not.equal(true)};assert.isFalse=function(val,msg){new Assertion(val,msg,assert.isFalse,true).is["false"]};assert.isNotFalse=function(val,msg){new Assertion(val,msg,assert.isNotFalse,true).to.not.equal(false)};assert.isNull=function(val,msg){new Assertion(val,msg,assert.isNull,true).to.equal(null)};assert.isNotNull=function(val,msg){new Assertion(val,msg,assert.isNotNull,true).to.not.equal(null)};assert.isNaN=function(val,msg){new Assertion(val,msg,assert.isNaN,true).to.be.NaN};assert.isNotNaN=function(val,msg){new Assertion(val,msg,assert.isNotNaN,true).not.to.be.NaN};assert.exists=function(val,msg){new Assertion(val,msg,assert.exists,true).to.exist};assert.notExists=function(val,msg){new Assertion(val,msg,assert.notExists,true).to.not.exist};assert.isUndefined=function(val,msg){new Assertion(val,msg,assert.isUndefined,true).to.equal(undefined)};assert.isDefined=function(val,msg){new Assertion(val,msg,assert.isDefined,true).to.not.equal(undefined)};assert.isFunction=function(val,msg){new Assertion(val,msg,assert.isFunction,true).to.be.a("function")};assert.isNotFunction=function(val,msg){new Assertion(val,msg,assert.isNotFunction,true).to.not.be.a("function")};assert.isObject=function(val,msg){new Assertion(val,msg,assert.isObject,true).to.be.a("object")};assert.isNotObject=function(val,msg){new Assertion(val,msg,assert.isNotObject,true).to.not.be.a("object")};assert.isArray=function(val,msg){new Assertion(val,msg,assert.isArray,true).to.be.an("array")};assert.isNotArray=function(val,msg){new Assertion(val,msg,assert.isNotArray,true).to.not.be.an("array")};assert.isString=function(val,msg){new Assertion(val,msg,assert.isString,true).to.be.a("string")};assert.isNotString=function(val,msg){new Assertion(val,msg,assert.isNotString,true).to.not.be.a("string")};assert.isNumber=function(val,msg){new Assertion(val,msg,assert.isNumber,true).to.be.a("number")};assert.isNotNumber=function(val,msg){new Assertion(val,msg,assert.isNotNumber,true).to.not.be.a("number")};assert.isFinite=function(val,msg){new Assertion(val,msg,assert.isFinite,true).to.be.finite};assert.isBoolean=function(val,msg){new Assertion(val,msg,assert.isBoolean,true).to.be.a("boolean")};assert.isNotBoolean=function(val,msg){new Assertion(val,msg,assert.isNotBoolean,true).to.not.be.a("boolean")};assert.typeOf=function(val,type,msg){new Assertion(val,msg,assert.typeOf,true).to.be.a(type)};assert.notTypeOf=function(val,type,msg){new Assertion(val,msg,assert.notTypeOf,true).to.not.be.a(type)};assert.instanceOf=function(val,type,msg){new Assertion(val,msg,assert.instanceOf,true).to.be.instanceOf(type)};assert.notInstanceOf=function(val,type,msg){new Assertion(val,msg,assert.notInstanceOf,true).to.not.be.instanceOf(type)};assert.include=function(exp,inc,msg){new Assertion(exp,msg,assert.include,true).include(inc)};assert.notInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notInclude,true).not.include(inc)};assert.deepInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepInclude,true).deep.include(inc)};assert.notDeepInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepInclude,true).not.deep.include(inc)};assert.nestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.nestedInclude,true).nested.include(inc)};assert.notNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notNestedInclude,true).not.nested.include(inc)};assert.deepNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepNestedInclude,true).deep.nested.include(inc)};assert.notDeepNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepNestedInclude,true).not.deep.nested.include(inc)};assert.ownInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.ownInclude,true).own.include(inc)};assert.notOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notOwnInclude,true).not.own.include(inc)};assert.deepOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepOwnInclude,true).deep.own.include(inc)};assert.notDeepOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepOwnInclude,true).not.deep.own.include(inc)};assert.match=function(exp,re,msg){new Assertion(exp,msg,assert.match,true).to.match(re)};assert.notMatch=function(exp,re,msg){new Assertion(exp,msg,assert.notMatch,true).to.not.match(re)};assert.property=function(obj,prop,msg){new Assertion(obj,msg,assert.property,true).to.have.property(prop)};assert.notProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notProperty,true).to.not.have.property(prop)};assert.propertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.propertyVal,true).to.have.property(prop,val)};assert.notPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notPropertyVal,true).to.not.have.property(prop,val)};assert.deepPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.deepPropertyVal,true).to.have.deep.property(prop,val)};assert.notDeepPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notDeepPropertyVal,true).to.not.have.deep.property(prop,val)};assert.ownProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.ownProperty,true).to.have.own.property(prop)};assert.notOwnProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notOwnProperty,true).to.not.have.own.property(prop)};assert.ownPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.ownPropertyVal,true).to.have.own.property(prop,value)};assert.notOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.notOwnPropertyVal,true).to.not.have.own.property(prop,value)};assert.deepOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.deepOwnPropertyVal,true).to.have.deep.own.property(prop,value)};assert.notDeepOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.notDeepOwnPropertyVal,true).to.not.have.deep.own.property(prop,value)};assert.nestedProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.nestedProperty,true).to.have.nested.property(prop)};assert.notNestedProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notNestedProperty,true).to.not.have.nested.property(prop)};assert.nestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.nestedPropertyVal,true).to.have.nested.property(prop,val)};assert.notNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notNestedPropertyVal,true).to.not.have.nested.property(prop,val)};assert.deepNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.deepNestedPropertyVal,true).to.have.deep.nested.property(prop,val)};assert.notDeepNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notDeepNestedPropertyVal,true).to.not.have.deep.nested.property(prop,val)};assert.lengthOf=function(exp,len,msg){new Assertion(exp,msg,assert.lengthOf,true).to.have.lengthOf(len)};assert.hasAnyKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAnyKeys,true).to.have.any.keys(keys)};assert.hasAllKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAllKeys,true).to.have.all.keys(keys)};assert.containsAllKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.containsAllKeys,true).to.contain.all.keys(keys)};assert.doesNotHaveAnyKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAnyKeys,true).to.not.have.any.keys(keys)};assert.doesNotHaveAllKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAllKeys,true).to.not.have.all.keys(keys)};assert.hasAnyDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAnyDeepKeys,true).to.have.any.deep.keys(keys)};assert.hasAllDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAllDeepKeys,true).to.have.all.deep.keys(keys)};assert.containsAllDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.containsAllDeepKeys,true).to.contain.all.deep.keys(keys)};assert.doesNotHaveAnyDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAnyDeepKeys,true).to.not.have.any.deep.keys(keys)};assert.doesNotHaveAllDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAllDeepKeys,true).to.not.have.all.deep.keys(keys)};assert.throws=function(fn,errorLike,errMsgMatcher,msg){if("string"===typeof errorLike||errorLike instanceof RegExp){errMsgMatcher=errorLike;errorLike=null}var assertErr=new Assertion(fn,msg,assert.throws,true).to.throw(errorLike,errMsgMatcher);return flag(assertErr,"object")};assert.doesNotThrow=function(fn,errorLike,errMsgMatcher,msg){if("string"===typeof errorLike||errorLike instanceof RegExp){errMsgMatcher=errorLike;errorLike=null}new Assertion(fn,msg,assert.doesNotThrow,true).to.not.throw(errorLike,errMsgMatcher)};assert.operator=function(val,operator,val2,msg){var ok;switch(operator){case"==":ok=val==val2;break;case"===":ok=val===val2;break;case">":ok=val>val2;break;case">=":ok=val>=val2;break;case"<":ok=val<val2;break;case"<=":ok=val<=val2;break;case"!=":ok=val!=val2;break;case"!==":ok=val!==val2;break;default:msg=msg?msg+": ":msg;throw new chai.AssertionError(msg+'Invalid operator "'+operator+'"',undefined,assert.operator)}var test=new Assertion(ok,msg,assert.operator,true);test.assert(true===flag(test,"object"),"expected "+util.inspect(val)+" to be "+operator+" "+util.inspect(val2),"expected "+util.inspect(val)+" to not be "+operator+" "+util.inspect(val2))};assert.closeTo=function(act,exp,delta,msg){new Assertion(act,msg,assert.closeTo,true).to.be.closeTo(exp,delta)};assert.approximately=function(act,exp,delta,msg){new Assertion(act,msg,assert.approximately,true).to.be.approximately(exp,delta)};assert.sameMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameMembers,true).to.have.same.members(set2)};assert.notSameMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameMembers,true).to.not.have.same.members(set2)};assert.sameDeepMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameDeepMembers,true).to.have.same.deep.members(set2)};assert.notSameDeepMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameDeepMembers,true).to.not.have.same.deep.members(set2)};assert.sameOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameOrderedMembers,true).to.have.same.ordered.members(set2)};assert.notSameOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameOrderedMembers,true).to.not.have.same.ordered.members(set2)};assert.sameDeepOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameDeepOrderedMembers,true).to.have.same.deep.ordered.members(set2)};assert.notSameDeepOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameDeepOrderedMembers,true).to.not.have.same.deep.ordered.members(set2)};assert.includeMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeMembers,true).to.include.members(subset)};assert.notIncludeMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeMembers,true).to.not.include.members(subset)};assert.includeDeepMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeDeepMembers,true).to.include.deep.members(subset)};assert.notIncludeDeepMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeDeepMembers,true).to.not.include.deep.members(subset)};assert.includeOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeOrderedMembers,true).to.include.ordered.members(subset)};assert.notIncludeOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeOrderedMembers,true).to.not.include.ordered.members(subset)};assert.includeDeepOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeDeepOrderedMembers,true).to.include.deep.ordered.members(subset)};assert.notIncludeDeepOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeDeepOrderedMembers,true).to.not.include.deep.ordered.members(subset)};assert.oneOf=function(inList,list,msg){new Assertion(inList,msg,assert.oneOf,true).to.be.oneOf(list)};assert.changes=function(fn,obj,prop,msg){if(arguments.length===3&&typeof obj==="function"){msg=prop;prop=null}new Assertion(fn,msg,assert.changes,true).to.change(obj,prop)};assert.changesBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}new Assertion(fn,msg,assert.changesBy,true).to.change(obj,prop).by(delta)};assert.doesNotChange=function(fn,obj,prop,msg){if(arguments.length===3&&typeof obj==="function"){msg=prop;prop=null}return new Assertion(fn,msg,assert.doesNotChange,true).to.not.change(obj,prop)};assert.changesButNotBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}new Assertion(fn,msg,assert.changesButNotBy,true).to.change(obj,prop).but.not.by(delta)};assert.increases=function(fn,obj,prop,msg){if(arguments.length===3&&typeof obj==="function"){msg=prop;prop=null}return new Assertion(fn,msg,assert.increases,true).to.increase(obj,prop)};assert.increasesBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}new Assertion(fn,msg,assert.increasesBy,true).to.increase(obj,prop).by(delta)};assert.doesNotIncrease=function(fn,obj,prop,msg){if(arguments.length===3&&typeof obj==="function"){msg=prop;prop=null}return new Assertion(fn,msg,assert.doesNotIncrease,true).to.not.increase(obj,prop)};assert.increasesButNotBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}new Assertion(fn,msg,assert.increasesButNotBy,true).to.increase(obj,prop).but.not.by(delta)};assert.decreases=function(fn,obj,prop,msg){if(arguments.length===3&&typeof obj==="function"){msg=prop;prop=null}return new Assertion(fn,msg,assert.decreases,true).to.decrease(obj,prop)};assert.decreasesBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}new Assertion(fn,msg,assert.decreasesBy,true).to.decrease(obj,prop).by(delta)};assert.doesNotDecrease=function(fn,obj,prop,msg){if(arguments.length===3&&typeof obj==="function"){msg=prop;prop=null}return new Assertion(fn,msg,assert.doesNotDecrease,true).to.not.decrease(obj,prop)};assert.doesNotDecreaseBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}return new Assertion(fn,msg,assert.doesNotDecreaseBy,true).to.not.decrease(obj,prop).by(delta)};assert.decreasesButNotBy=function(fn,obj,prop,delta,msg){if(arguments.length===4&&typeof obj==="function"){var tmpMsg=delta;delta=prop;msg=tmpMsg}else if(arguments.length===3){delta=prop;prop=null}new Assertion(fn,msg,assert.decreasesButNotBy,true).to.decrease(obj,prop).but.not.by(delta)};assert.ifError=function(val){if(val){throw val}};assert.isExtensible=function(obj,msg){new Assertion(obj,msg,assert.isExtensible,true).to.be.extensible};assert.isNotExtensible=function(obj,msg){new Assertion(obj,msg,assert.isNotExtensible,true).to.not.be.extensible};assert.isSealed=function(obj,msg){new Assertion(obj,msg,assert.isSealed,true).to.be.sealed};assert.isNotSealed=function(obj,msg){new Assertion(obj,msg,assert.isNotSealed,true).to.not.be.sealed};assert.isFrozen=function(obj,msg){new Assertion(obj,msg,assert.isFrozen,true).to.be.frozen};assert.isNotFrozen=function(obj,msg){new Assertion(obj,msg,assert.isNotFrozen,true).to.not.be.frozen};assert.isEmpty=function(val,msg){new Assertion(val,msg,assert.isEmpty,true).to.be.empty};assert.isNotEmpty=function(val,msg){new Assertion(val,msg,assert.isNotEmpty,true).to.not.be.empty};(function alias(name,as){assert[as]=assert[name];return alias})("isOk","ok")("isNotOk","notOk")("throws","throw")("throws","Throw")("isExtensible","extensible")("isNotExtensible","notExtensible")("isSealed","sealed")("isNotSealed","notSealed")("isFrozen","frozen")("isNotFrozen","notFrozen")("isEmpty","empty")("isNotEmpty","notEmpty")}},{}],158:[function(require,module,exports){module.exports=function(chai,util){chai.expect=function(val,message){return new chai.Assertion(val,message)};chai.expect.fail=function(actual,expected,message,operator){message=message||"expect.fail()";throw new chai.AssertionError(message,{actual:actual,expected:expected,operator:operator},chai.expect.fail)}}},{}],159:[function(require,module,exports){module.exports=function(chai,util){var Assertion=chai.Assertion;function loadShould(){function shouldGetter(){if(this instanceof String||this instanceof Number||this instanceof Boolean||typeof Symbol==="function"&&this instanceof Symbol){return new Assertion(this.valueOf(),null,shouldGetter)}return new Assertion(this,null,shouldGetter)}function shouldSetter(value){Object.defineProperty(this,"should",{value:value,enumerable:true,configurable:true,writable:true})}Object.defineProperty(Object.prototype,"should",{set:shouldSetter,get:shouldGetter,configurable:true});var should={};should.fail=function(actual,expected,message,operator){message=message||"should.fail()";throw new chai.AssertionError(message,{actual:actual,expected:expected,operator:operator},should.fail)};should.equal=function(val1,val2,msg){new Assertion(val1,msg).to.equal(val2)};should.Throw=function(fn,errt,errs,msg){new Assertion(fn,msg).to.Throw(errt,errs)};should.exist=function(val,msg){new Assertion(val,msg).to.exist};should.not={};should.not.equal=function(val1,val2,msg){new Assertion(val1,msg).to.not.equal(val2)};should.not.Throw=function(fn,errt,errs,msg){new Assertion(fn,msg).to.not.Throw(errt,errs)};should.not.exist=function(val,msg){new Assertion(val,msg).to.not.exist};should["throw"]=should["Throw"];should.not["throw"]=should.not["Throw"];return should}chai.should=loadShould;chai.Should=loadShould}},{}],160:[function(require,module,exports){var addLengthGuard=require("./addLengthGuard");var chai=require("../../chai");var flag=require("./flag");var proxify=require("./proxify");var transferFlags=require("./transferFlags");var canSetPrototype=typeof Object.setPrototypeOf==="function";var testFn=function(){};var excludeNames=Object.getOwnPropertyNames(testFn).filter(function(name){var propDesc=Object.getOwnPropertyDescriptor(testFn,name);if(typeof propDesc!=="object")return true;return!propDesc.configurable});var call=Function.prototype.call,apply=Function.prototype.apply;module.exports=function addChainableMethod(ctx,name,method,chainingBehavior){if(typeof chainingBehavior!=="function"){chainingBehavior=function(){}}var chainableBehavior={method:method,chainingBehavior:chainingBehavior};if(!ctx.__methods){ctx.__methods={}}ctx.__methods[name]=chainableBehavior;Object.defineProperty(ctx,name,{get:function chainableMethodGetter(){chainableBehavior.chainingBehavior.call(this);var chainableMethodWrapper=function(){if(!flag(this,"lockSsfi")){flag(this,"ssfi",chainableMethodWrapper)}var result=chainableBehavior.method.apply(this,arguments);if(result!==undefined){return result}var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion};addLengthGuard(chainableMethodWrapper,name,true);if(canSetPrototype){var prototype=Object.create(this);prototype.call=call;prototype.apply=apply;Object.setPrototypeOf(chainableMethodWrapper,prototype)}else{var asserterNames=Object.getOwnPropertyNames(ctx);asserterNames.forEach(function(asserterName){if(excludeNames.indexOf(asserterName)!==-1){return}var pd=Object.getOwnPropertyDescriptor(ctx,asserterName);Object.defineProperty(chainableMethodWrapper,asserterName,pd)})}transferFlags(this,chainableMethodWrapper);return proxify(chainableMethodWrapper)},configurable:true})}},{"../../chai":153,"./addLengthGuard":161,"./flag":166,"./proxify":181,"./transferFlags":183}],161:[function(require,module,exports){var config=require("../config");var fnLengthDesc=Object.getOwnPropertyDescriptor(function(){},"length");module.exports=function addLengthGuard(fn,assertionName,isChainable){if(!fnLengthDesc.configurable)return fn;Object.defineProperty(fn,"length",{get:function(){if(isChainable){throw Error("Invalid Chai property: "+assertionName+".length. Due"+' to a compatibility issue, "length" cannot directly follow "'+assertionName+'". Use "'+assertionName+'.lengthOf" instead.')}throw Error("Invalid Chai property: "+assertionName+".length. See"+' docs for proper usage of "'+assertionName+'".')}});return fn}},{"../config":155}],162:[function(require,module,exports){var addLengthGuard=require("./addLengthGuard");var chai=require("../../chai");var flag=require("./flag");var proxify=require("./proxify");var transferFlags=require("./transferFlags");module.exports=function addMethod(ctx,name,method){var methodWrapper=function(){if(!flag(this,"lockSsfi")){flag(this,"ssfi",methodWrapper)}var result=method.apply(this,arguments);if(result!==undefined)return result;var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion};addLengthGuard(methodWrapper,name,false);ctx[name]=proxify(methodWrapper,name)}},{"../../chai":153,"./addLengthGuard":161,"./flag":166,"./proxify":181,"./transferFlags":183}],163:[function(require,module,exports){var chai=require("../../chai");var flag=require("./flag");var isProxyEnabled=require("./isProxyEnabled");var transferFlags=require("./transferFlags");module.exports=function addProperty(ctx,name,getter){getter=getter===undefined?function(){}:getter;Object.defineProperty(ctx,name,{get:function propertyGetter(){if(!isProxyEnabled()&&!flag(this,"lockSsfi")){flag(this,"ssfi",propertyGetter)}var result=getter.call(this);if(result!==undefined)return result;var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion},configurable:true})}},{"../../chai":153,"./flag":166,"./isProxyEnabled":176,"./transferFlags":183}],164:[function(require,module,exports){var inspect=require("./inspect");module.exports=function compareByInspect(a,b){return inspect(a)<inspect(b)?-1:1}},{"./inspect":174}],165:[function(require,module,exports){var AssertionError=require("assertion-error");var flag=require("./flag");var type=require("type-detect");module.exports=function expectTypes(obj,types){var flagMsg=flag(obj,"message");var ssfi=flag(obj,"ssfi");flagMsg=flagMsg?flagMsg+": ":"";obj=flag(obj,"object");types=types.map(function(t){return t.toLowerCase()});types.sort();var str=types.map(function(t,index){var art=~["a","e","i","o","u"].indexOf(t.charAt(0))?"an":"a";var or=types.length>1&&index===types.length-1?"or ":"";return or+art+" "+t}).join(", ");var objType=type(obj).toLowerCase();if(!types.some(function(expected){return objType===expected})){throw new AssertionError(flagMsg+"object tested must be "+str+", but "+objType+" given",undefined,ssfi)}}},{"./flag":166,"assertion-error":85,"type-detect":486}],166:[function(require,module,exports){module.exports=function flag(obj,key,value){var flags=obj.__flags||(obj.__flags=Object.create(null));if(arguments.length===3){flags[key]=value}else{return flags[key]}}},{}],167:[function(require,module,exports){module.exports=function getActual(obj,args){return args.length>4?args[4]:obj._obj}},{}],168:[function(require,module,exports){module.exports=function getEnumerableProperties(object){var result=[];for(var name in object){result.push(name)}return result}},{}],169:[function(require,module,exports){var flag=require("./flag"),getActual=require("./getActual"),inspect=require("./inspect"),objDisplay=require("./objDisplay");module.exports=function getMessage(obj,args){var negate=flag(obj,"negate"),val=flag(obj,"object"),expected=args[3],actual=getActual(obj,args),msg=negate?args[2]:args[1],flagMsg=flag(obj,"message");if(typeof msg==="function")msg=msg();msg=msg||"";msg=msg.replace(/#\{this\}/g,function(){return objDisplay(val)}).replace(/#\{act\}/g,function(){return objDisplay(actual)}).replace(/#\{exp\}/g,function(){return objDisplay(expected)});return flagMsg?flagMsg+": "+msg:msg}},{"./flag":166,"./getActual":167,"./inspect":174,"./objDisplay":177}],170:[function(require,module,exports){var getOwnEnumerablePropertySymbols=require("./getOwnEnumerablePropertySymbols");module.exports=function getOwnEnumerableProperties(obj){return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj))}},{"./getOwnEnumerablePropertySymbols":171}],171:[function(require,module,exports){module.exports=function getOwnEnumerablePropertySymbols(obj){if(typeof Object.getOwnPropertySymbols!=="function")return[];return Object.getOwnPropertySymbols(obj).filter(function(sym){return Object.getOwnPropertyDescriptor(obj,sym).enumerable})}},{}],172:[function(require,module,exports){module.exports=function getProperties(object){var result=Object.getOwnPropertyNames(object);function addProperty(property){if(result.indexOf(property)===-1){result.push(property)}}var proto=Object.getPrototypeOf(object);while(proto!==null){Object.getOwnPropertyNames(proto).forEach(addProperty);proto=Object.getPrototypeOf(proto)}return result}},{}],173:[function(require,module,exports){var pathval=require("pathval");exports.test=require("./test");exports.type=require("type-detect");exports.expectTypes=require("./expectTypes");exports.getMessage=require("./getMessage");exports.getActual=require("./getActual");exports.inspect=require("./inspect");exports.objDisplay=require("./objDisplay");exports.flag=require("./flag");exports.transferFlags=require("./transferFlags");exports.eql=require("deep-eql");exports.getPathInfo=pathval.getPathInfo;exports.hasProperty=pathval.hasProperty;exports.getName=require("get-func-name");exports.addProperty=require("./addProperty");exports.addMethod=require("./addMethod");exports.overwriteProperty=require("./overwriteProperty");exports.overwriteMethod=require("./overwriteMethod");exports.addChainableMethod=require("./addChainableMethod");exports.overwriteChainableMethod=require("./overwriteChainableMethod");exports.compareByInspect=require("./compareByInspect");exports.getOwnEnumerablePropertySymbols=require("./getOwnEnumerablePropertySymbols");exports.getOwnEnumerableProperties=require("./getOwnEnumerableProperties");exports.checkError=require("check-error");exports.proxify=require("./proxify");exports.addLengthGuard=require("./addLengthGuard");exports.isProxyEnabled=require("./isProxyEnabled");exports.isNaN=require("./isNaN")},{"./addChainableMethod":160,"./addLengthGuard":161,"./addMethod":162,"./addProperty":163,"./compareByInspect":164,"./expectTypes":165,"./flag":166,"./getActual":167,"./getMessage":169,"./getOwnEnumerableProperties":170,"./getOwnEnumerablePropertySymbols":171,"./inspect":174,"./isNaN":175,"./isProxyEnabled":176,"./objDisplay":177,"./overwriteChainableMethod":178,"./overwriteMethod":179,"./overwriteProperty":180,"./proxify":181,"./test":182,"./transferFlags":183,"check-error":185,"deep-eql":304,"get-func-name":335,pathval:386,"type-detect":486}],174:[function(require,module,exports){var getName=require("get-func-name");var getProperties=require("./getProperties");var getEnumerableProperties=require("./getEnumerableProperties");var config=require("../config");module.exports=inspect;function inspect(obj,showHidden,depth,colors){var ctx={showHidden:showHidden,seen:[],stylize:function(str){return str}};return formatValue(ctx,obj,typeof depth==="undefined"?2:depth)}var isDOMElement=function(object){if(typeof HTMLElement==="object"){return object instanceof HTMLElement}else{return object&&typeof object==="object"&&"nodeType"in object&&object.nodeType===1&&typeof object.nodeName==="string"}};function formatValue(ctx,value,recurseTimes){if(value&&typeof value.inspect==="function"&&value.inspect!==exports.inspect&&!(value.constructor&&value.constructor.prototype===value)){var ret=value.inspect(recurseTimes,ctx);if(typeof ret!=="string"){ret=formatValue(ctx,ret,recurseTimes)}return ret}var primitive=formatPrimitive(ctx,value);if(primitive){return primitive}if(isDOMElement(value)){if("outerHTML"in value){return value.outerHTML}else{try{if(document.xmlVersion){var xmlSerializer=new XMLSerializer;return xmlSerializer.serializeToString(value)}else{var ns="http://www.w3.org/1999/xhtml";var container=document.createElementNS(ns,"_");container.appendChild(value.cloneNode(false));var html=container.innerHTML.replace("><",">"+value.innerHTML+"<");container.innerHTML="";return html}}catch(err){}}}var visibleKeys=getEnumerableProperties(value);var keys=ctx.showHidden?getProperties(value):visibleKeys;var name,nameSuffix;if(keys.length===0||isError(value)&&(keys.length===1&&keys[0]==="stack"||keys.length===2&&keys[0]==="description"&&keys[1]==="stack")){if(typeof value==="function"){name=getName(value);nameSuffix=name?": "+name:"";return ctx.stylize("[Function"+nameSuffix+"]","special")}if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),"regexp")}if(isDate(value)){return ctx.stylize(Date.prototype.toUTCString.call(value),"date")}if(isError(value)){return formatError(value)}}var base="",array=false,typedArray=false,braces=["{","}"];if(isTypedArray(value)){typedArray=true;braces=["[","]"]}if(isArray(value)){array=true;braces=["[","]"]}if(typeof value==="function"){name=getName(value);nameSuffix=name?": "+name:"";base=" [Function"+nameSuffix+"]"}if(isRegExp(value)){base=" "+RegExp.prototype.toString.call(value)}if(isDate(value)){base=" "+Date.prototype.toUTCString.call(value)}if(isError(value)){return formatError(value)}if(keys.length===0&&(!array||value.length==0)){return braces[0]+base+braces[1]}if(recurseTimes<0){if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),"regexp")}else{return ctx.stylize("[Object]","special")}}ctx.seen.push(value);var output;if(array){output=formatArray(ctx,value,recurseTimes,visibleKeys,keys)}else if(typedArray){return formatTypedArray(value)}else{output=keys.map(function(key){return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array)})}ctx.seen.pop();return reduceToSingleString(output,base,braces)}function formatPrimitive(ctx,value){switch(typeof value){case"undefined":return ctx.stylize("undefined","undefined");case"string":var simple="'"+JSON.stringify(value).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return ctx.stylize(simple,"string");case"number":if(value===0&&1/value===-Infinity){return ctx.stylize("-0","number")}return ctx.stylize(""+value,"number");case"boolean":return ctx.stylize(""+value,"boolean");case"symbol":return ctx.stylize(value.toString(),"symbol")}if(value===null){return ctx.stylize("null","null")}}function formatError(value){return"["+Error.prototype.toString.call(value)+"]"}function formatArray(ctx,value,recurseTimes,visibleKeys,keys){var output=[];for(var i=0,l=value.length;i<l;++i){if(Object.prototype.hasOwnProperty.call(value,String(i))){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,String(i),true))}else{output.push("")}}keys.forEach(function(key){if(!key.match(/^\d+$/)){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,key,true))}});return output}function formatTypedArray(value){var str="[ ";for(var i=0;i<value.length;++i){if(str.length>=config.truncateThreshold-7){str+="...";break}str+=value[i]+", "}str+=" ]";if(str.indexOf(",  ]")!==-1){str=str.replace(",  ]"," ]")}return str}function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){var name;var propDescriptor=Object.getOwnPropertyDescriptor(value,key);var str;if(propDescriptor){if(propDescriptor.get){if(propDescriptor.set){str=ctx.stylize("[Getter/Setter]","special")}else{str=ctx.stylize("[Getter]","special")}}else{if(propDescriptor.set){str=ctx.stylize("[Setter]","special")}}}if(visibleKeys.indexOf(key)<0){name="["+key+"]"}if(!str){if(ctx.seen.indexOf(value[key])<0){if(recurseTimes===null){str=formatValue(ctx,value[key],null)}else{str=formatValue(ctx,value[key],recurseTimes-1)}if(str.indexOf("\n")>-1){if(array){str=str.split("\n").map(function(line){return"  "+line}).join("\n").substr(2)}else{str="\n"+str.split("\n").map(function(line){return"   "+line}).join("\n")}}}else{str=ctx.stylize("[Circular]","special")}}if(typeof name==="undefined"){if(array&&key.match(/^\d+$/)){return str}name=JSON.stringify(""+key);if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){name=name.substr(1,name.length-2);name=ctx.stylize(name,"name")}else{name=name.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'");name=ctx.stylize(name,"string")}}return name+": "+str}function reduceToSingleString(output,base,braces){var numLinesEst=0;var length=output.reduce(function(prev,cur){numLinesEst++;if(cur.indexOf("\n")>=0)numLinesEst++;return prev+cur.length+1},0);if(length>60){return braces[0]+(base===""?"":base+"\n ")+" "+output.join(",\n  ")+" "+braces[1]}return braces[0]+base+" "+output.join(", ")+" "+braces[1]}function isTypedArray(ar){return typeof ar==="object"&&/\w+Array]$/.test(objectToString(ar))}function isArray(ar){return Array.isArray(ar)||typeof ar==="object"&&objectToString(ar)==="[object Array]"}function isRegExp(re){return typeof re==="object"&&objectToString(re)==="[object RegExp]"}function isDate(d){return typeof d==="object"&&objectToString(d)==="[object Date]"}function isError(e){return typeof e==="object"&&objectToString(e)==="[object Error]"}function objectToString(o){return Object.prototype.toString.call(o)}},{"../config":155,"./getEnumerableProperties":168,"./getProperties":172,"get-func-name":335}],175:[function(require,module,exports){function isNaN(value){return value!==value}module.exports=Number.isNaN||isNaN},{}],176:[function(require,module,exports){var config=require("../config");module.exports=function isProxyEnabled(){return config.useProxy&&typeof Proxy!=="undefined"&&typeof Reflect!=="undefined"}},{"../config":155}],177:[function(require,module,exports){var inspect=require("./inspect");var config=require("../config");module.exports=function objDisplay(obj){var str=inspect(obj),type=Object.prototype.toString.call(obj);if(config.truncateThreshold&&str.length>=config.truncateThreshold){if(type==="[object Function]"){return!obj.name||obj.name===""?"[Function]":"[Function: "+obj.name+"]"}else if(type==="[object Array]"){return"[ Array("+obj.length+") ]"}else if(type==="[object Object]"){var keys=Object.keys(obj),kstr=keys.length>2?keys.splice(0,2).join(", ")+", ...":keys.join(", ");return"{ Object ("+kstr+") }"}else{return str}}else{return str}}},{"../config":155,"./inspect":174}],178:[function(require,module,exports){var chai=require("../../chai");var transferFlags=require("./transferFlags");module.exports=function overwriteChainableMethod(ctx,name,method,chainingBehavior){var chainableBehavior=ctx.__methods[name];var _chainingBehavior=chainableBehavior.chainingBehavior;chainableBehavior.chainingBehavior=function overwritingChainableMethodGetter(){var result=chainingBehavior(_chainingBehavior).call(this);if(result!==undefined){return result}var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion};var _method=chainableBehavior.method;chainableBehavior.method=function overwritingChainableMethodWrapper(){var result=method(_method).apply(this,arguments);if(result!==undefined){return result}var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion}}},{"../../chai":153,"./transferFlags":183}],179:[function(require,module,exports){var addLengthGuard=require("./addLengthGuard");var chai=require("../../chai");var flag=require("./flag");var proxify=require("./proxify");var transferFlags=require("./transferFlags");module.exports=function overwriteMethod(ctx,name,method){var _method=ctx[name],_super=function(){throw new Error(name+" is not a function")};if(_method&&"function"===typeof _method)_super=_method;var overwritingMethodWrapper=function(){if(!flag(this,"lockSsfi")){flag(this,"ssfi",overwritingMethodWrapper)}var origLockSsfi=flag(this,"lockSsfi");flag(this,"lockSsfi",true);var result=method(_super).apply(this,arguments);flag(this,"lockSsfi",origLockSsfi);if(result!==undefined){return result}var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion};addLengthGuard(overwritingMethodWrapper,name,false);ctx[name]=proxify(overwritingMethodWrapper,name)}},{"../../chai":153,"./addLengthGuard":161,"./flag":166,"./proxify":181,"./transferFlags":183}],180:[function(require,module,exports){var chai=require("../../chai");var flag=require("./flag");var isProxyEnabled=require("./isProxyEnabled");var transferFlags=require("./transferFlags");module.exports=function overwriteProperty(ctx,name,getter){var _get=Object.getOwnPropertyDescriptor(ctx,name),_super=function(){};if(_get&&"function"===typeof _get.get)_super=_get.get;Object.defineProperty(ctx,name,{get:function overwritingPropertyGetter(){if(!isProxyEnabled()&&!flag(this,"lockSsfi")){flag(this,"ssfi",overwritingPropertyGetter)}var origLockSsfi=flag(this,"lockSsfi");flag(this,"lockSsfi",true);var result=getter(_super).call(this);flag(this,"lockSsfi",origLockSsfi);if(result!==undefined){return result}var newAssertion=new chai.Assertion;transferFlags(this,newAssertion);return newAssertion},configurable:true})}},{"../../chai":153,"./flag":166,"./isProxyEnabled":176,"./transferFlags":183}],181:[function(require,module,exports){var config=require("../config");var flag=require("./flag");var getProperties=require("./getProperties");var isProxyEnabled=require("./isProxyEnabled");var builtins=["__flags","__methods","_obj","assert"];module.exports=function proxify(obj,nonChainableMethodName){if(!isProxyEnabled())return obj;return new Proxy(obj,{get:function proxyGetter(target,property){if(typeof property==="string"&&config.proxyExcludedKeys.indexOf(property)===-1&&!Reflect.has(target,property)){if(nonChainableMethodName){throw Error("Invalid Chai property: "+nonChainableMethodName+"."+property+'. See docs for proper usage of "'+nonChainableMethodName+'".')}var orderedProperties=getProperties(target).filter(function(property){return!Object.prototype.hasOwnProperty(property)&&builtins.indexOf(property)===-1}).sort(function(a,b){return stringDistance(property,a)-stringDistance(property,b)});if(orderedProperties.length&&stringDistance(orderedProperties[0],property)<4){throw Error("Invalid Chai property: "+property+'. Did you mean "'+orderedProperties[0]+'"?')}else{throw Error("Invalid Chai property: "+property)}}if(builtins.indexOf(property)===-1&&!flag(target,"lockSsfi")){flag(target,"ssfi",proxyGetter)}return Reflect.get(target,property)}})};function stringDistance(strA,strB,memo){if(!memo){memo=[];for(var i=0;i<=strA.length;i++){memo[i]=[]}}if(!memo[strA.length]||!memo[strA.length][strB.length]){if(strA.length===0||strB.length===0){memo[strA.length][strB.length]=Math.max(strA.length,strB.length)}else{memo[strA.length][strB.length]=Math.min(stringDistance(strA.slice(0,-1),strB,memo)+1,stringDistance(strA,strB.slice(0,-1),memo)+1,stringDistance(strA.slice(0,-1),strB.slice(0,-1),memo)+(strA.slice(-1)===strB.slice(-1)?0:1))}}return memo[strA.length][strB.length]}},{"../config":155,"./flag":166,"./getProperties":172,"./isProxyEnabled":176}],182:[function(require,module,exports){var flag=require("./flag");module.exports=function test(obj,args){var negate=flag(obj,"negate"),expr=args[0];return negate?!expr:expr}},{"./flag":166}],183:[function(require,module,exports){module.exports=function transferFlags(assertion,object,includeAll){var flags=assertion.__flags||(assertion.__flags=Object.create(null));if(!object.__flags){object.__flags=Object.create(null)}includeAll=arguments.length===3?includeAll:true;for(var flag in flags){if(includeAll||flag!=="object"&&flag!=="ssfi"&&flag!=="lockSsfi"&&flag!="message"){object.__flags[flag]=flags[flag]}}}},{}],184:[function(require,module,exports){(function(global){global.should=require("./").should()}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./":152}],185:[function(require,module,exports){"use strict";function compatibleInstance(thrown,errorLike){return errorLike instanceof Error&&thrown===errorLike}function compatibleConstructor(thrown,errorLike){if(errorLike instanceof Error){return thrown.constructor===errorLike.constructor||thrown instanceof errorLike.constructor}else if(errorLike.prototype instanceof Error||errorLike===Error){return thrown.constructor===errorLike||thrown instanceof errorLike}return false}function compatibleMessage(thrown,errMatcher){var comparisonString=typeof thrown==="string"?thrown:thrown.message;if(errMatcher instanceof RegExp){return errMatcher.test(comparisonString)}else if(typeof errMatcher==="string"){return comparisonString.indexOf(errMatcher)!==-1}return false}var functionNameMatch=/\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\(\/]+)/;function getFunctionName(constructorFn){var name="";if(typeof constructorFn.name==="undefined"){var match=String(constructorFn).match(functionNameMatch);if(match){name=match[1]}}else{name=constructorFn.name}return name}function getConstructorName(errorLike){var constructorName=errorLike;if(errorLike instanceof Error){constructorName=getFunctionName(errorLike.constructor)}else if(typeof errorLike==="function"){constructorName=getFunctionName(errorLike).trim()||getFunctionName(new errorLike)}return constructorName}function getMessage(errorLike){var msg="";if(errorLike&&errorLike.message){msg=errorLike.message}else if(typeof errorLike==="string"){msg=errorLike}return msg}module.exports={compatibleInstance:compatibleInstance,compatibleConstructor:compatibleConstructor,compatibleMessage:compatibleMessage,getMessage:getMessage,getConstructorName:getConstructorName}},{}],186:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;var Transform=require("stream").Transform;var StringDecoder=require("string_decoder").StringDecoder;var inherits=require("inherits");function CipherBase(hashMode){Transform.call(this);this.hashMode=typeof hashMode==="string";if(this.hashMode){this[hashMode]=this._finalOrDigest}else{this.final=this._finalOrDigest}if(this._final){this.__final=this._final;this._final=null}this._decoder=null;this._encoding=null}inherits(CipherBase,Transform);CipherBase.prototype.update=function(data,inputEnc,outputEnc){if(typeof data==="string"){data=Buffer.from(data,inputEnc)}var outData=this._update(data);if(this.hashMode)return this;if(outputEnc){outData=this._toString(outData,outputEnc)}return outData};CipherBase.prototype.setAutoPadding=function(){};CipherBase.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")};CipherBase.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")};CipherBase.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")};CipherBase.prototype._transform=function(data,_,next){var err;try{if(this.hashMode){this._update(data)}else{this.push(this._update(data))}}catch(e){err=e}finally{next(err)}};CipherBase.prototype._flush=function(done){var err;try{this.push(this.__final())}catch(e){err=e}done(err)};CipherBase.prototype._finalOrDigest=function(outputEnc){var outData=this.__final()||Buffer.alloc(0);if(outputEnc){outData=this._toString(outData,outputEnc,true)}return outData};CipherBase.prototype._toString=function(value,enc,fin){if(!this._decoder){this._decoder=new StringDecoder(enc);this._encoding=enc}if(this._encoding!==enc)throw new Error("can't switch encodings");var out=this._decoder.write(value);if(fin){out+=this._decoder.end()}return out};module.exports=CipherBase},{inherits:352,"safe-buffer":434,stream:480,string_decoder:481}],187:[function(require,module,exports){require("../../modules/es6.string.iterator");require("../../modules/es6.array.from");module.exports=require("../../modules/_core").Array.from},{"../../modules/_core":207,"../../modules/es6.array.from":278,"../../modules/es6.string.iterator":288}],188:[function(require,module,exports){require("../modules/web.dom.iterable");require("../modules/es6.string.iterator");module.exports=require("../modules/core.get-iterator")},{"../modules/core.get-iterator":276,"../modules/es6.string.iterator":288,"../modules/web.dom.iterable":295}],189:[function(require,module,exports){require("../modules/web.dom.iterable");require("../modules/es6.string.iterator");module.exports=require("../modules/core.is-iterable")},{"../modules/core.is-iterable":277,"../modules/es6.string.iterator":288,"../modules/web.dom.iterable":295}],190:[function(require,module,exports){require("../../modules/es6.object.assign");module.exports=require("../../modules/_core").Object.assign},{"../../modules/_core":207,"../../modules/es6.object.assign":280}],191:[function(require,module,exports){require("../../modules/es6.object.create");var $Object=require("../../modules/_core").Object;module.exports=function create(P,D){return $Object.create(P,D)}},{"../../modules/_core":207,"../../modules/es6.object.create":281}],192:[function(require,module,exports){require("../../modules/es6.object.define-property");var $Object=require("../../modules/_core").Object;module.exports=function defineProperty(it,key,desc){return $Object.defineProperty(it,key,desc)}},{"../../modules/_core":207,"../../modules/es6.object.define-property":282}],193:[function(require,module,exports){require("../../modules/es7.object.entries");module.exports=require("../../modules/_core").Object.entries},{"../../modules/_core":207,"../../modules/es7.object.entries":290}],194:[function(require,module,exports){require("../../modules/es6.object.get-prototype-of");module.exports=require("../../modules/_core").Object.getPrototypeOf},{"../../modules/_core":207,"../../modules/es6.object.get-prototype-of":283}],195:[function(require,module,exports){require("../../modules/es6.object.keys");module.exports=require("../../modules/_core").Object.keys},{"../../modules/_core":207,"../../modules/es6.object.keys":284}],196:[function(require,module,exports){require("../../modules/es6.object.set-prototype-of");module.exports=require("../../modules/_core").Object.setPrototypeOf},{"../../modules/_core":207,"../../modules/es6.object.set-prototype-of":285}],197:[function(require,module,exports){require("../modules/es6.object.to-string");require("../modules/es6.string.iterator");require("../modules/web.dom.iterable");require("../modules/es6.promise");require("../modules/es7.promise.finally");require("../modules/es7.promise.try");module.exports=require("../modules/_core").Promise},{"../modules/_core":207,"../modules/es6.object.to-string":286,"../modules/es6.promise":287,"../modules/es6.string.iterator":288,"../modules/es7.promise.finally":291,"../modules/es7.promise.try":292,"../modules/web.dom.iterable":295}],198:[function(require,module,exports){require("../../modules/es6.symbol");require("../../modules/es6.object.to-string");require("../../modules/es7.symbol.async-iterator");require("../../modules/es7.symbol.observable");module.exports=require("../../modules/_core").Symbol},{"../../modules/_core":207,"../../modules/es6.object.to-string":286,"../../modules/es6.symbol":289,"../../modules/es7.symbol.async-iterator":293,"../../modules/es7.symbol.observable":294}],199:[function(require,module,exports){require("../../modules/es6.string.iterator");require("../../modules/web.dom.iterable");module.exports=require("../../modules/_wks-ext").f("iterator")},{"../../modules/_wks-ext":273,"../../modules/es6.string.iterator":288,"../../modules/web.dom.iterable":295}],200:[function(require,module,exports){module.exports=function(it){if(typeof it!="function")throw TypeError(it+" is not a function!");return it}},{}],201:[function(require,module,exports){module.exports=function(){}},{}],202:[function(require,module,exports){module.exports=function(it,Constructor,name,forbiddenField){if(!(it instanceof Constructor)||forbiddenField!==undefined&&forbiddenField in it){throw TypeError(name+": incorrect invocation!")}return it}},{}],203:[function(require,module,exports){var isObject=require("./_is-object");module.exports=function(it){if(!isObject(it))throw TypeError(it+" is not an object!");return it}},{"./_is-object":227}],204:[function(require,module,exports){var toIObject=require("./_to-iobject");var toLength=require("./_to-length");var toAbsoluteIndex=require("./_to-absolute-index");module.exports=function(IS_INCLUDES){return function($this,el,fromIndex){var O=toIObject($this);var length=toLength(O.length);var index=toAbsoluteIndex(fromIndex,length);var value;if(IS_INCLUDES&&el!=el)while(length>index){value=O[index++];if(value!=value)return true}else for(;length>index;index++)if(IS_INCLUDES||index in O){if(O[index]===el)return IS_INCLUDES||index||0}return!IS_INCLUDES&&-1}}},{"./_to-absolute-index":265,"./_to-iobject":267,"./_to-length":268}],205:[function(require,module,exports){var cof=require("./_cof");var TAG=require("./_wks")("toStringTag");var ARG=cof(function(){return arguments}())=="Arguments";var tryGet=function(it,key){try{return it[key]}catch(e){}};module.exports=function(it){var O,T,B;return it===undefined?"Undefined":it===null?"Null":typeof(T=tryGet(O=Object(it),TAG))=="string"?T:ARG?cof(O):(B=cof(O))=="Object"&&typeof O.callee=="function"?"Arguments":B}},{"./_cof":206,"./_wks":274}],206:[function(require,module,exports){var toString={}.toString;module.exports=function(it){return toString.call(it).slice(8,-1)}},{}],207:[function(require,module,exports){var core=module.exports={version:"2.5.3"};if(typeof __e=="number")__e=core},{}],208:[function(require,module,exports){"use strict";var $defineProperty=require("./_object-dp");var createDesc=require("./_property-desc");module.exports=function(object,index,value){if(index in object)$defineProperty.f(object,index,createDesc(0,value));else object[index]=value}},{"./_object-dp":240,"./_property-desc":254}],209:[function(require,module,exports){var aFunction=require("./_a-function");module.exports=function(fn,that,length){aFunction(fn);if(that===undefined)return fn;switch(length){case 1:return function(a){return fn.call(that,a)};case 2:return function(a,b){return fn.call(that,a,b)};case 3:return function(a,b,c){return fn.call(that,a,b,c)}}return function(){return fn.apply(that,arguments)}}},{"./_a-function":200}],210:[function(require,module,exports){module.exports=function(it){if(it==undefined)throw TypeError("Can't call method on  "+it);return it}},{}],211:[function(require,module,exports){module.exports=!require("./_fails")(function(){return Object.defineProperty({},"a",{get:function(){return 7}}).a!=7})},{"./_fails":216}],212:[function(require,module,exports){var isObject=require("./_is-object");var document=require("./_global").document;var is=isObject(document)&&isObject(document.createElement);module.exports=function(it){return is?document.createElement(it):{}}},{"./_global":218,"./_is-object":227}],213:[function(require,module,exports){module.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},{}],214:[function(require,module,exports){var getKeys=require("./_object-keys");var gOPS=require("./_object-gops");var pIE=require("./_object-pie");module.exports=function(it){var result=getKeys(it);var getSymbols=gOPS.f;if(getSymbols){var symbols=getSymbols(it);var isEnum=pIE.f;var i=0;var key;while(symbols.length>i)if(isEnum.call(it,key=symbols[i++]))result.push(key)}return result}},{"./_object-gops":245,"./_object-keys":248,"./_object-pie":249}],215:[function(require,module,exports){var global=require("./_global");var core=require("./_core");var ctx=require("./_ctx");var hide=require("./_hide");var PROTOTYPE="prototype";var $export=function(type,name,source){var IS_FORCED=type&$export.F;var IS_GLOBAL=type&$export.G;var IS_STATIC=type&$export.S;var IS_PROTO=type&$export.P;var IS_BIND=type&$export.B;var IS_WRAP=type&$export.W;var exports=IS_GLOBAL?core:core[name]||(core[name]={});var expProto=exports[PROTOTYPE];var target=IS_GLOBAL?global:IS_STATIC?global[name]:(global[name]||{})[PROTOTYPE];var key,own,out;if(IS_GLOBAL)source=name;for(key in source){own=!IS_FORCED&&target&&target[key]!==undefined;if(own&&key in exports)continue;out=own?target[key]:source[key];exports[key]=IS_GLOBAL&&typeof target[key]!="function"?source[key]:IS_BIND&&own?ctx(out,global):IS_WRAP&&target[key]==out?function(C){var F=function(a,b,c){if(this instanceof C){switch(arguments.length){case 0:return new C;case 1:return new C(a);case 2:return new C(a,b)}return new C(a,b,c)}return C.apply(this,arguments)};F[PROTOTYPE]=C[PROTOTYPE];return F}(out):IS_PROTO&&typeof out=="function"?ctx(Function.call,out):out;if(IS_PROTO){(exports.virtual||(exports.virtual={}))[key]=out;if(type&$export.R&&expProto&&!expProto[key])hide(expProto,key,out)}}};$export.F=1;$export.G=2;$export.S=4;$export.P=8;$export.B=16;$export.W=32;$export.U=64;$export.R=128;module.exports=$export},{"./_core":207,"./_ctx":209,"./_global":218,"./_hide":220}],216:[function(require,module,exports){module.exports=function(exec){try{return!!exec()}catch(e){return true}}},{}],217:[function(require,module,exports){var ctx=require("./_ctx");var call=require("./_iter-call");var isArrayIter=require("./_is-array-iter");var anObject=require("./_an-object");var toLength=require("./_to-length");var getIterFn=require("./core.get-iterator-method");var BREAK={};var RETURN={};var exports=module.exports=function(iterable,entries,fn,that,ITERATOR){var iterFn=ITERATOR?function(){return iterable}:getIterFn(iterable);var f=ctx(fn,that,entries?2:1);var index=0;var length,step,iterator,result;if(typeof iterFn!="function")throw TypeError(iterable+" is not iterable!");if(isArrayIter(iterFn))for(length=toLength(iterable.length);length>index;index++){result=entries?f(anObject(step=iterable[index])[0],step[1]):f(iterable[index]);if(result===BREAK||result===RETURN)return result}else for(iterator=iterFn.call(iterable);!(step=iterator.next()).done;){result=call(iterator,f,step.value,entries);if(result===BREAK||result===RETURN)return result}};exports.BREAK=BREAK;exports.RETURN=RETURN},{"./_an-object":203,"./_ctx":209,"./_is-array-iter":225,"./_iter-call":228,"./_to-length":268,"./core.get-iterator-method":275}],218:[function(require,module,exports){var global=module.exports=typeof window!="undefined"&&window.Math==Math?window:typeof self!="undefined"&&self.Math==Math?self:Function("return this")();if(typeof __g=="number")__g=global},{}],219:[function(require,module,exports){var hasOwnProperty={}.hasOwnProperty;module.exports=function(it,key){return hasOwnProperty.call(it,key)}},{}],220:[function(require,module,exports){var dP=require("./_object-dp");var createDesc=require("./_property-desc");module.exports=require("./_descriptors")?function(object,key,value){return dP.f(object,key,createDesc(1,value))}:function(object,key,value){object[key]=value;return object}},{"./_descriptors":211,"./_object-dp":240,"./_property-desc":254}],221:[function(require,module,exports){var document=require("./_global").document;module.exports=document&&document.documentElement},{"./_global":218}],222:[function(require,module,exports){module.exports=!require("./_descriptors")&&!require("./_fails")(function(){return Object.defineProperty(require("./_dom-create")("div"),"a",{get:function(){return 7}}).a!=7})},{"./_descriptors":211,"./_dom-create":212,"./_fails":216}],223:[function(require,module,exports){module.exports=function(fn,args,that){var un=that===undefined;switch(args.length){case 0:return un?fn():fn.call(that);case 1:return un?fn(args[0]):fn.call(that,args[0]);case 2:return un?fn(args[0],args[1]):fn.call(that,args[0],args[1]);case 3:return un?fn(args[0],args[1],args[2]):fn.call(that,args[0],args[1],args[2]);case 4:return un?fn(args[0],args[1],args[2],args[3]):fn.call(that,args[0],args[1],args[2],args[3])}return fn.apply(that,args)}},{}],224:[function(require,module,exports){var cof=require("./_cof");module.exports=Object("z").propertyIsEnumerable(0)?Object:function(it){return cof(it)=="String"?it.split(""):Object(it)}},{"./_cof":206}],225:[function(require,module,exports){var Iterators=require("./_iterators");var ITERATOR=require("./_wks")("iterator");var ArrayProto=Array.prototype;module.exports=function(it){return it!==undefined&&(Iterators.Array===it||ArrayProto[ITERATOR]===it)}},{"./_iterators":233,"./_wks":274}],226:[function(require,module,exports){var cof=require("./_cof");module.exports=Array.isArray||function isArray(arg){return cof(arg)=="Array"}},{"./_cof":206}],227:[function(require,module,exports){module.exports=function(it){return typeof it==="object"?it!==null:typeof it==="function"}},{}],228:[function(require,module,exports){var anObject=require("./_an-object");module.exports=function(iterator,fn,value,entries){try{return entries?fn(anObject(value)[0],value[1]):fn(value)}catch(e){var ret=iterator["return"];if(ret!==undefined)anObject(ret.call(iterator));throw e}}},{"./_an-object":203}],229:[function(require,module,exports){"use strict";var create=require("./_object-create");var descriptor=require("./_property-desc");var setToStringTag=require("./_set-to-string-tag");var IteratorPrototype={};require("./_hide")(IteratorPrototype,require("./_wks")("iterator"),function(){return this});module.exports=function(Constructor,NAME,next){Constructor.prototype=create(IteratorPrototype,{next:descriptor(1,next)});setToStringTag(Constructor,NAME+" Iterator")}},{"./_hide":220,"./_object-create":239,"./_property-desc":254,"./_set-to-string-tag":259,"./_wks":274}],230:[function(require,module,exports){"use strict";var LIBRARY=require("./_library");var $export=require("./_export");var redefine=require("./_redefine");var hide=require("./_hide");var has=require("./_has");var Iterators=require("./_iterators");var $iterCreate=require("./_iter-create");var setToStringTag=require("./_set-to-string-tag");var getPrototypeOf=require("./_object-gpo");var ITERATOR=require("./_wks")("iterator");var BUGGY=!([].keys&&"next"in[].keys());var FF_ITERATOR="@@iterator";var KEYS="keys";var VALUES="values";var returnThis=function(){return this};module.exports=function(Base,NAME,Constructor,next,DEFAULT,IS_SET,FORCED){$iterCreate(Constructor,NAME,next);var getMethod=function(kind){if(!BUGGY&&kind in proto)return proto[kind];switch(kind){case KEYS:return function keys(){return new Constructor(this,kind)};case VALUES:return function values(){return new Constructor(this,kind)}}return function entries(){return new Constructor(this,kind)}};var TAG=NAME+" Iterator";var DEF_VALUES=DEFAULT==VALUES;var VALUES_BUG=false;var proto=Base.prototype;var $native=proto[ITERATOR]||proto[FF_ITERATOR]||DEFAULT&&proto[DEFAULT];var $default=!BUGGY&&$native||getMethod(DEFAULT);var $entries=DEFAULT?!DEF_VALUES?$default:getMethod("entries"):undefined;var $anyNative=NAME=="Array"?proto.entries||$native:$native;var methods,key,IteratorPrototype;if($anyNative){IteratorPrototype=getPrototypeOf($anyNative.call(new Base));if(IteratorPrototype!==Object.prototype&&IteratorPrototype.next){setToStringTag(IteratorPrototype,TAG,true);if(!LIBRARY&&!has(IteratorPrototype,ITERATOR))hide(IteratorPrototype,ITERATOR,returnThis)}}if(DEF_VALUES&&$native&&$native.name!==VALUES){VALUES_BUG=true;$default=function values(){return $native.call(this)}}if((!LIBRARY||FORCED)&&(BUGGY||VALUES_BUG||!proto[ITERATOR])){hide(proto,ITERATOR,$default)}Iterators[NAME]=$default;Iterators[TAG]=returnThis;if(DEFAULT){methods={values:DEF_VALUES?$default:getMethod(VALUES),keys:IS_SET?$default:getMethod(KEYS),entries:$entries};if(FORCED)for(key in methods){if(!(key in proto))redefine(proto,key,methods[key])}else $export($export.P+$export.F*(BUGGY||VALUES_BUG),NAME,methods)}return methods}},{"./_export":215,"./_has":219,"./_hide":220,"./_iter-create":229,"./_iterators":233,"./_library":234,"./_object-gpo":246,"./_redefine":256,"./_set-to-string-tag":259,"./_wks":274}],231:[function(require,module,exports){var ITERATOR=require("./_wks")("iterator");var SAFE_CLOSING=false;try{var riter=[7][ITERATOR]();riter["return"]=function(){SAFE_CLOSING=true};Array.from(riter,function(){throw 2})}catch(e){}module.exports=function(exec,skipClosing){if(!skipClosing&&!SAFE_CLOSING)return false;var safe=false;try{var arr=[7];var iter=arr[ITERATOR]();iter.next=function(){return{done:safe=true}};arr[ITERATOR]=function(){return iter};exec(arr)}catch(e){}return safe}},{"./_wks":274}],232:[function(require,module,exports){module.exports=function(done,value){return{value:value,done:!!done}}},{}],233:[function(require,module,exports){module.exports={}},{}],234:[function(require,module,exports){module.exports=true},{}],235:[function(require,module,exports){var META=require("./_uid")("meta");var isObject=require("./_is-object");var has=require("./_has");var setDesc=require("./_object-dp").f;var id=0;var isExtensible=Object.isExtensible||function(){return true};var FREEZE=!require("./_fails")(function(){return isExtensible(Object.preventExtensions({}))});var setMeta=function(it){setDesc(it,META,{value:{i:"O"+ ++id,w:{}}})};var fastKey=function(it,create){if(!isObject(it))return typeof it=="symbol"?it:(typeof it=="string"?"S":"P")+it;if(!has(it,META)){if(!isExtensible(it))return"F";if(!create)return"E";setMeta(it)}return it[META].i};var getWeak=function(it,create){if(!has(it,META)){if(!isExtensible(it))return true;if(!create)return false;setMeta(it)}return it[META].w};var onFreeze=function(it){if(FREEZE&&meta.NEED&&isExtensible(it)&&!has(it,META))setMeta(it);return it};var meta=module.exports={KEY:META,NEED:false,fastKey:fastKey,getWeak:getWeak,onFreeze:onFreeze}},{"./_fails":216,"./_has":219,"./_is-object":227,"./_object-dp":240,"./_uid":271}],236:[function(require,module,exports){var global=require("./_global");var macrotask=require("./_task").set;var Observer=global.MutationObserver||global.WebKitMutationObserver;var process=global.process;var Promise=global.Promise;var isNode=require("./_cof")(process)=="process";module.exports=function(){var head,last,notify;var flush=function(){var parent,fn;if(isNode&&(parent=process.domain))parent.exit();while(head){fn=head.fn;head=head.next;try{fn()}catch(e){if(head)notify();else last=undefined;throw e}}last=undefined;if(parent)parent.enter()};if(isNode){notify=function(){process.nextTick(flush)}}else if(Observer&&!(global.navigator&&global.navigator.standalone)){var toggle=true;var node=document.createTextNode("");new Observer(flush).observe(node,{characterData:true});notify=function(){node.data=toggle=!toggle}}else if(Promise&&Promise.resolve){var promise=Promise.resolve();notify=function(){promise.then(flush)}}else{notify=function(){macrotask.call(global,flush)}}return function(fn){var task={fn:fn,next:undefined};if(last)last.next=task;if(!head){head=task;notify()}last=task}}},{"./_cof":206,"./_global":218,"./_task":264}],237:[function(require,module,exports){"use strict";var aFunction=require("./_a-function");function PromiseCapability(C){var resolve,reject;this.promise=new C(function($$resolve,$$reject){if(resolve!==undefined||reject!==undefined)throw TypeError("Bad Promise constructor");resolve=$$resolve;reject=$$reject});this.resolve=aFunction(resolve);this.reject=aFunction(reject)}module.exports.f=function(C){return new PromiseCapability(C)}},{"./_a-function":200}],238:[function(require,module,exports){"use strict";var getKeys=require("./_object-keys");var gOPS=require("./_object-gops");var pIE=require("./_object-pie");var toObject=require("./_to-object");var IObject=require("./_iobject");var $assign=Object.assign;module.exports=!$assign||require("./_fails")(function(){var A={};var B={};var S=Symbol();var K="abcdefghijklmnopqrst";A[S]=7;K.split("").forEach(function(k){B[k]=k});return $assign({},A)[S]!=7||Object.keys($assign({},B)).join("")!=K})?function assign(target,source){var T=toObject(target);var aLen=arguments.length;var index=1;var getSymbols=gOPS.f;var isEnum=pIE.f;while(aLen>index){var S=IObject(arguments[index++]);var keys=getSymbols?getKeys(S).concat(getSymbols(S)):getKeys(S);var length=keys.length;var j=0;var key;while(length>j)if(isEnum.call(S,key=keys[j++]))T[key]=S[key]}return T}:$assign},{"./_fails":216,"./_iobject":224,"./_object-gops":245,"./_object-keys":248,"./_object-pie":249,"./_to-object":269}],239:[function(require,module,exports){var anObject=require("./_an-object");var dPs=require("./_object-dps");var enumBugKeys=require("./_enum-bug-keys");var IE_PROTO=require("./_shared-key")("IE_PROTO");var Empty=function(){};var PROTOTYPE="prototype";var createDict=function(){var iframe=require("./_dom-create")("iframe");var i=enumBugKeys.length;var lt="<";var gt=">";var iframeDocument;iframe.style.display="none";require("./_html").appendChild(iframe);iframe.src="javascript:";iframeDocument=iframe.contentWindow.document;iframeDocument.open();iframeDocument.write(lt+"script"+gt+"document.F=Object"+lt+"/script"+gt);iframeDocument.close();createDict=iframeDocument.F;while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];return createDict()};module.exports=Object.create||function create(O,Properties){var result;if(O!==null){Empty[PROTOTYPE]=anObject(O);result=new Empty;Empty[PROTOTYPE]=null;result[IE_PROTO]=O}else result=createDict();return Properties===undefined?result:dPs(result,Properties)}},{"./_an-object":203,"./_dom-create":212,"./_enum-bug-keys":213,"./_html":221,"./_object-dps":241,"./_shared-key":260}],240:[function(require,module,exports){var anObject=require("./_an-object");var IE8_DOM_DEFINE=require("./_ie8-dom-define");var toPrimitive=require("./_to-primitive");var dP=Object.defineProperty;exports.f=require("./_descriptors")?Object.defineProperty:function defineProperty(O,P,Attributes){anObject(O);P=toPrimitive(P,true);anObject(Attributes);if(IE8_DOM_DEFINE)try{return dP(O,P,Attributes)}catch(e){}if("get"in Attributes||"set"in Attributes)throw TypeError("Accessors not supported!");if("value"in Attributes)O[P]=Attributes.value;return O}},{"./_an-object":203,"./_descriptors":211,"./_ie8-dom-define":222,"./_to-primitive":270}],241:[function(require,module,exports){var dP=require("./_object-dp");var anObject=require("./_an-object");var getKeys=require("./_object-keys");module.exports=require("./_descriptors")?Object.defineProperties:function defineProperties(O,Properties){anObject(O);var keys=getKeys(Properties);var length=keys.length;var i=0;var P;while(length>i)dP.f(O,P=keys[i++],Properties[P]);return O}},{"./_an-object":203,"./_descriptors":211,"./_object-dp":240,"./_object-keys":248}],242:[function(require,module,exports){var pIE=require("./_object-pie");var createDesc=require("./_property-desc");var toIObject=require("./_to-iobject");var toPrimitive=require("./_to-primitive");var has=require("./_has");var IE8_DOM_DEFINE=require("./_ie8-dom-define");var gOPD=Object.getOwnPropertyDescriptor;exports.f=require("./_descriptors")?gOPD:function getOwnPropertyDescriptor(O,P){O=toIObject(O);P=toPrimitive(P,true);if(IE8_DOM_DEFINE)try{return gOPD(O,P)}catch(e){}if(has(O,P))return createDesc(!pIE.f.call(O,P),O[P])}},{"./_descriptors":211,"./_has":219,"./_ie8-dom-define":222,"./_object-pie":249,"./_property-desc":254,"./_to-iobject":267,"./_to-primitive":270}],243:[function(require,module,exports){var toIObject=require("./_to-iobject");var gOPN=require("./_object-gopn").f;var toString={}.toString;var windowNames=typeof window=="object"&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];var getWindowNames=function(it){try{return gOPN(it)}catch(e){return windowNames.slice()}};module.exports.f=function getOwnPropertyNames(it){return windowNames&&toString.call(it)=="[object Window]"?getWindowNames(it):gOPN(toIObject(it))}},{"./_object-gopn":244,"./_to-iobject":267}],244:[function(require,module,exports){var $keys=require("./_object-keys-internal");var hiddenKeys=require("./_enum-bug-keys").concat("length","prototype");exports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){return $keys(O,hiddenKeys)}},{"./_enum-bug-keys":213,"./_object-keys-internal":247}],245:[function(require,module,exports){exports.f=Object.getOwnPropertySymbols},{}],246:[function(require,module,exports){var has=require("./_has");var toObject=require("./_to-object");var IE_PROTO=require("./_shared-key")("IE_PROTO");var ObjectProto=Object.prototype;module.exports=Object.getPrototypeOf||function(O){O=toObject(O);if(has(O,IE_PROTO))return O[IE_PROTO];if(typeof O.constructor=="function"&&O instanceof O.constructor){return O.constructor.prototype}return O instanceof Object?ObjectProto:null}},{"./_has":219,"./_shared-key":260,"./_to-object":269}],247:[function(require,module,exports){var has=require("./_has");var toIObject=require("./_to-iobject");var arrayIndexOf=require("./_array-includes")(false);var IE_PROTO=require("./_shared-key")("IE_PROTO");module.exports=function(object,names){var O=toIObject(object);var i=0;var result=[];var key;for(key in O)if(key!=IE_PROTO)has(O,key)&&result.push(key);while(names.length>i)if(has(O,key=names[i++])){~arrayIndexOf(result,key)||result.push(key)}return result}},{"./_array-includes":204,"./_has":219,"./_shared-key":260,"./_to-iobject":267}],248:[function(require,module,exports){var $keys=require("./_object-keys-internal");var enumBugKeys=require("./_enum-bug-keys");module.exports=Object.keys||function keys(O){return $keys(O,enumBugKeys)}},{"./_enum-bug-keys":213,"./_object-keys-internal":247}],249:[function(require,module,exports){exports.f={}.propertyIsEnumerable},{}],250:[function(require,module,exports){var $export=require("./_export");var core=require("./_core");var fails=require("./_fails");module.exports=function(KEY,exec){var fn=(core.Object||{})[KEY]||Object[KEY];var exp={};exp[KEY]=exec(fn);$export($export.S+$export.F*fails(function(){fn(1)}),"Object",exp)}},{"./_core":207,"./_export":215,"./_fails":216}],251:[function(require,module,exports){var getKeys=require("./_object-keys");var toIObject=require("./_to-iobject");var isEnum=require("./_object-pie").f;module.exports=function(isEntries){return function(it){var O=toIObject(it);var keys=getKeys(O);var length=keys.length;var i=0;var result=[];var key;while(length>i)if(isEnum.call(O,key=keys[i++])){result.push(isEntries?[key,O[key]]:O[key])}return result}}},{"./_object-keys":248,"./_object-pie":249,"./_to-iobject":267}],252:[function(require,module,exports){module.exports=function(exec){try{return{e:false,v:exec()}}catch(e){return{e:true,v:e}}}},{}],253:[function(require,module,exports){var anObject=require("./_an-object");var isObject=require("./_is-object");var newPromiseCapability=require("./_new-promise-capability");module.exports=function(C,x){anObject(C);if(isObject(x)&&x.constructor===C)return x;var promiseCapability=newPromiseCapability.f(C);var resolve=promiseCapability.resolve;resolve(x);return promiseCapability.promise}},{"./_an-object":203,"./_is-object":227,"./_new-promise-capability":237}],254:[function(require,module,exports){module.exports=function(bitmap,value){return{enumerable:!(bitmap&1),configurable:!(bitmap&2),writable:!(bitmap&4),value:value}}},{}],255:[function(require,module,exports){var hide=require("./_hide");module.exports=function(target,src,safe){for(var key in src){if(safe&&target[key])target[key]=src[key];else hide(target,key,src[key])}return target}},{"./_hide":220}],256:[function(require,module,exports){module.exports=require("./_hide")},{"./_hide":220}],257:[function(require,module,exports){var isObject=require("./_is-object");var anObject=require("./_an-object");var check=function(O,proto){anObject(O);if(!isObject(proto)&&proto!==null)throw TypeError(proto+": can't set as prototype!")};module.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(test,buggy,set){try{set=require("./_ctx")(Function.call,require("./_object-gopd").f(Object.prototype,"__proto__").set,2);set(test,[]);buggy=!(test instanceof Array)}catch(e){buggy=true}return function setPrototypeOf(O,proto){check(O,proto);if(buggy)O.__proto__=proto;else set(O,proto);return O}}({},false):undefined),check:check}},{"./_an-object":203,"./_ctx":209,"./_is-object":227,"./_object-gopd":242}],258:[function(require,module,exports){"use strict";var global=require("./_global");var core=require("./_core");var dP=require("./_object-dp");var DESCRIPTORS=require("./_descriptors");var SPECIES=require("./_wks")("species");module.exports=function(KEY){var C=typeof core[KEY]=="function"?core[KEY]:global[KEY];if(DESCRIPTORS&&C&&!C[SPECIES])dP.f(C,SPECIES,{configurable:true,get:function(){return this}})}},{"./_core":207,"./_descriptors":211,"./_global":218,"./_object-dp":240,"./_wks":274}],259:[function(require,module,exports){var def=require("./_object-dp").f;var has=require("./_has");var TAG=require("./_wks")("toStringTag");module.exports=function(it,tag,stat){if(it&&!has(it=stat?it:it.prototype,TAG))def(it,TAG,{configurable:true,value:tag})}},{"./_has":219,"./_object-dp":240,"./_wks":274}],260:[function(require,module,exports){var shared=require("./_shared")("keys");var uid=require("./_uid");module.exports=function(key){return shared[key]||(shared[key]=uid(key))}},{"./_shared":261,"./_uid":271}],261:[function(require,module,exports){var global=require("./_global");var SHARED="__core-js_shared__";var store=global[SHARED]||(global[SHARED]={});module.exports=function(key){return store[key]||(store[key]={})}},{"./_global":218}],262:[function(require,module,exports){var anObject=require("./_an-object");var aFunction=require("./_a-function");var SPECIES=require("./_wks")("species");module.exports=function(O,D){var C=anObject(O).constructor;var S;return C===undefined||(S=anObject(C)[SPECIES])==undefined?D:aFunction(S)}},{"./_a-function":200,"./_an-object":203,"./_wks":274}],263:[function(require,module,exports){var toInteger=require("./_to-integer");var defined=require("./_defined");module.exports=function(TO_STRING){return function(that,pos){var s=String(defined(that));var i=toInteger(pos);var l=s.length;var a,b;if(i<0||i>=l)return TO_STRING?"":undefined;a=s.charCodeAt(i);return a<55296||a>56319||i+1===l||(b=s.charCodeAt(i+1))<56320||b>57343?TO_STRING?s.charAt(i):a:TO_STRING?s.slice(i,i+2):(a-55296<<10)+(b-56320)+65536}}},{"./_defined":210,"./_to-integer":266}],264:[function(require,module,exports){var ctx=require("./_ctx");var invoke=require("./_invoke");var html=require("./_html");var cel=require("./_dom-create");var global=require("./_global");var process=global.process;var setTask=global.setImmediate;var clearTask=global.clearImmediate;var MessageChannel=global.MessageChannel;var Dispatch=global.Dispatch;var counter=0;var queue={};var ONREADYSTATECHANGE="onreadystatechange";var defer,channel,port;var run=function(){var id=+this;if(queue.hasOwnProperty(id)){var fn=queue[id];delete queue[id];fn()}};var listener=function(event){run.call(event.data)};if(!setTask||!clearTask){setTask=function setImmediate(fn){var args=[];var i=1;while(arguments.length>i)args.push(arguments[i++]);queue[++counter]=function(){invoke(typeof fn=="function"?fn:Function(fn),args)};defer(counter);return counter};clearTask=function clearImmediate(id){delete queue[id]};if(require("./_cof")(process)=="process"){defer=function(id){process.nextTick(ctx(run,id,1))}}else if(Dispatch&&Dispatch.now){defer=function(id){Dispatch.now(ctx(run,id,1))}}else if(MessageChannel){channel=new MessageChannel;port=channel.port2;channel.port1.onmessage=listener;defer=ctx(port.postMessage,port,1)}else if(global.addEventListener&&typeof postMessage=="function"&&!global.importScripts){defer=function(id){global.postMessage(id+"","*")};global.addEventListener("message",listener,false)}else if(ONREADYSTATECHANGE in cel("script")){defer=function(id){html.appendChild(cel("script"))[ONREADYSTATECHANGE]=function(){html.removeChild(this);run.call(id)}}}else{defer=function(id){setTimeout(ctx(run,id,1),0)}}}module.exports={set:setTask,clear:clearTask}},{"./_cof":206,"./_ctx":209,"./_dom-create":212,"./_global":218,"./_html":221,"./_invoke":223}],265:[function(require,module,exports){var toInteger=require("./_to-integer");var max=Math.max;var min=Math.min;module.exports=function(index,length){index=toInteger(index);return index<0?max(index+length,0):min(index,length)}},{"./_to-integer":266}],266:[function(require,module,exports){var ceil=Math.ceil;var floor=Math.floor;module.exports=function(it){return isNaN(it=+it)?0:(it>0?floor:ceil)(it)}},{}],267:[function(require,module,exports){var IObject=require("./_iobject");var defined=require("./_defined");module.exports=function(it){return IObject(defined(it))}},{"./_defined":210,"./_iobject":224}],268:[function(require,module,exports){var toInteger=require("./_to-integer");var min=Math.min;module.exports=function(it){return it>0?min(toInteger(it),9007199254740991):0}},{"./_to-integer":266}],269:[function(require,module,exports){var defined=require("./_defined");module.exports=function(it){return Object(defined(it))}},{"./_defined":210}],270:[function(require,module,exports){var isObject=require("./_is-object");module.exports=function(it,S){if(!isObject(it))return it;var fn,val;if(S&&typeof(fn=it.toString)=="function"&&!isObject(val=fn.call(it)))return val;if(typeof(fn=it.valueOf)=="function"&&!isObject(val=fn.call(it)))return val;if(!S&&typeof(fn=it.toString)=="function"&&!isObject(val=fn.call(it)))return val;throw TypeError("Can't convert object to primitive value")}},{"./_is-object":227}],271:[function(require,module,exports){var id=0;var px=Math.random();module.exports=function(key){return"Symbol(".concat(key===undefined?"":key,")_",(++id+px).toString(36))}},{}],272:[function(require,module,exports){var global=require("./_global");var core=require("./_core");var LIBRARY=require("./_library");var wksExt=require("./_wks-ext");var defineProperty=require("./_object-dp").f;module.exports=function(name){var $Symbol=core.Symbol||(core.Symbol=LIBRARY?{}:global.Symbol||{});if(name.charAt(0)!="_"&&!(name in $Symbol))defineProperty($Symbol,name,{value:wksExt.f(name)})}},{"./_core":207,"./_global":218,"./_library":234,"./_object-dp":240,"./_wks-ext":273}],273:[function(require,module,exports){exports.f=require("./_wks")},{"./_wks":274}],274:[function(require,module,exports){var store=require("./_shared")("wks");var uid=require("./_uid");var Symbol=require("./_global").Symbol;var USE_SYMBOL=typeof Symbol=="function";var $exports=module.exports=function(name){return store[name]||(store[name]=USE_SYMBOL&&Symbol[name]||(USE_SYMBOL?Symbol:uid)("Symbol."+name))};$exports.store=store},{"./_global":218,"./_shared":261,"./_uid":271}],275:[function(require,module,exports){var classof=require("./_classof");var ITERATOR=require("./_wks")("iterator");var Iterators=require("./_iterators");module.exports=require("./_core").getIteratorMethod=function(it){if(it!=undefined)return it[ITERATOR]||it["@@iterator"]||Iterators[classof(it)]}},{"./_classof":205,"./_core":207,"./_iterators":233,"./_wks":274}],276:[function(require,module,exports){var anObject=require("./_an-object");var get=require("./core.get-iterator-method");module.exports=require("./_core").getIterator=function(it){var iterFn=get(it);if(typeof iterFn!="function")throw TypeError(it+" is not iterable!");return anObject(iterFn.call(it))}},{"./_an-object":203,"./_core":207,"./core.get-iterator-method":275}],277:[function(require,module,exports){var classof=require("./_classof");var ITERATOR=require("./_wks")("iterator");var Iterators=require("./_iterators");module.exports=require("./_core").isIterable=function(it){var O=Object(it);return O[ITERATOR]!==undefined||"@@iterator"in O||Iterators.hasOwnProperty(classof(O))}},{"./_classof":205,"./_core":207,"./_iterators":233,"./_wks":274}],278:[function(require,module,exports){"use strict";var ctx=require("./_ctx");var $export=require("./_export");var toObject=require("./_to-object");var call=require("./_iter-call");var isArrayIter=require("./_is-array-iter");var toLength=require("./_to-length");var createProperty=require("./_create-property");var getIterFn=require("./core.get-iterator-method");$export($export.S+$export.F*!require("./_iter-detect")(function(iter){Array.from(iter)}),"Array",{from:function from(arrayLike){var O=toObject(arrayLike);var C=typeof this=="function"?this:Array;var aLen=arguments.length;var mapfn=aLen>1?arguments[1]:undefined;var mapping=mapfn!==undefined;var index=0;var iterFn=getIterFn(O);var length,result,step,iterator;if(mapping)mapfn=ctx(mapfn,aLen>2?arguments[2]:undefined,2);if(iterFn!=undefined&&!(C==Array&&isArrayIter(iterFn))){for(iterator=iterFn.call(O),result=new C;!(step=iterator.next()).done;index++){createProperty(result,index,mapping?call(iterator,mapfn,[step.value,index],true):step.value)}}else{length=toLength(O.length);for(result=new C(length);length>index;index++){createProperty(result,index,mapping?mapfn(O[index],index):O[index])}}result.length=index;return result}})},{"./_create-property":208,"./_ctx":209,"./_export":215,"./_is-array-iter":225,"./_iter-call":228,"./_iter-detect":231,"./_to-length":268,"./_to-object":269,"./core.get-iterator-method":275}],279:[function(require,module,exports){"use strict";var addToUnscopables=require("./_add-to-unscopables");var step=require("./_iter-step");var Iterators=require("./_iterators");var toIObject=require("./_to-iobject");module.exports=require("./_iter-define")(Array,"Array",function(iterated,kind){this._t=toIObject(iterated);this._i=0;this._k=kind},function(){var O=this._t;var kind=this._k;var index=this._i++;if(!O||index>=O.length){this._t=undefined;return step(1)}if(kind=="keys")return step(0,index);if(kind=="values")return step(0,O[index]);return step(0,[index,O[index]])},"values");Iterators.Arguments=Iterators.Array;addToUnscopables("keys");addToUnscopables("values");addToUnscopables("entries")},{"./_add-to-unscopables":201,"./_iter-define":230,"./_iter-step":232,"./_iterators":233,"./_to-iobject":267}],280:[function(require,module,exports){var $export=require("./_export");$export($export.S+$export.F,"Object",{assign:require("./_object-assign")})},{"./_export":215,"./_object-assign":238}],281:[function(require,module,exports){var $export=require("./_export");$export($export.S,"Object",{create:require("./_object-create")})},{"./_export":215,"./_object-create":239}],282:[function(require,module,exports){var $export=require("./_export");$export($export.S+$export.F*!require("./_descriptors"),"Object",{defineProperty:require("./_object-dp").f})},{"./_descriptors":211,"./_export":215,"./_object-dp":240}],283:[function(require,module,exports){var toObject=require("./_to-object");var $getPrototypeOf=require("./_object-gpo");require("./_object-sap")("getPrototypeOf",function(){return function getPrototypeOf(it){return $getPrototypeOf(toObject(it))}})},{"./_object-gpo":246,"./_object-sap":250,"./_to-object":269}],284:[function(require,module,exports){var toObject=require("./_to-object");var $keys=require("./_object-keys");require("./_object-sap")("keys",function(){return function keys(it){return $keys(toObject(it))}})},{"./_object-keys":248,"./_object-sap":250,"./_to-object":269}],285:[function(require,module,exports){var $export=require("./_export");$export($export.S,"Object",{setPrototypeOf:require("./_set-proto").set})},{"./_export":215,"./_set-proto":257}],286:[function(require,module,exports){arguments[4][118][0].apply(exports,arguments)},{dup:118}],287:[function(require,module,exports){"use strict";var LIBRARY=require("./_library");var global=require("./_global");var ctx=require("./_ctx");var classof=require("./_classof");var $export=require("./_export");var isObject=require("./_is-object");var aFunction=require("./_a-function");var anInstance=require("./_an-instance");var forOf=require("./_for-of");var speciesConstructor=require("./_species-constructor");var task=require("./_task").set;var microtask=require("./_microtask")();var newPromiseCapabilityModule=require("./_new-promise-capability");var perform=require("./_perform");var promiseResolve=require("./_promise-resolve");var PROMISE="Promise";var TypeError=global.TypeError;var process=global.process;var $Promise=global[PROMISE];var isNode=classof(process)=="process";var empty=function(){};var Internal,newGenericPromiseCapability,OwnPromiseCapability,Wrapper;var newPromiseCapability=newGenericPromiseCapability=newPromiseCapabilityModule.f;var USE_NATIVE=!!function(){try{var promise=$Promise.resolve(1);var FakePromise=(promise.constructor={})[require("./_wks")("species")]=function(exec){exec(empty,empty)};return(isNode||typeof PromiseRejectionEvent=="function")&&promise.then(empty)instanceof FakePromise}catch(e){}}();var isThenable=function(it){var then;return isObject(it)&&typeof(then=it.then)=="function"?then:false};var notify=function(promise,isReject){if(promise._n)return;promise._n=true;var chain=promise._c;microtask(function(){var value=promise._v;var ok=promise._s==1;var i=0;var run=function(reaction){var handler=ok?reaction.ok:reaction.fail;var resolve=reaction.resolve;var reject=reaction.reject;var domain=reaction.domain;var result,then;try{if(handler){if(!ok){if(promise._h==2)onHandleUnhandled(promise);promise._h=1}if(handler===true)result=value;else{if(domain)domain.enter();result=handler(value);if(domain)domain.exit()}if(result===reaction.promise){reject(TypeError("Promise-chain cycle"))}else if(then=isThenable(result)){then.call(result,resolve,reject)}else resolve(result)}else reject(value)}catch(e){reject(e)}};while(chain.length>i)run(chain[i++]);promise._c=[];promise._n=false;if(isReject&&!promise._h)onUnhandled(promise)})};var onUnhandled=function(promise){task.call(global,function(){var value=promise._v;var unhandled=isUnhandled(promise);var result,handler,console;if(unhandled){result=perform(function(){if(isNode){process.emit("unhandledRejection",value,promise)}else if(handler=global.onunhandledrejection){handler({promise:promise,reason:value})}else if((console=global.console)&&console.error){console.error("Unhandled promise rejection",value)}});promise._h=isNode||isUnhandled(promise)?2:1}promise._a=undefined;if(unhandled&&result.e)throw result.v})};var isUnhandled=function(promise){return promise._h!==1&&(promise._a||promise._c).length===0};var onHandleUnhandled=function(promise){task.call(global,function(){var handler;if(isNode){process.emit("rejectionHandled",promise)}else if(handler=global.onrejectionhandled){handler({promise:promise,reason:promise._v})}})};var $reject=function(value){var promise=this;if(promise._d)return;promise._d=true;promise=promise._w||promise;promise._v=value;promise._s=2;if(!promise._a)promise._a=promise._c.slice();notify(promise,true)};var $resolve=function(value){var promise=this;var then;if(promise._d)return;promise._d=true;promise=promise._w||promise;try{if(promise===value)throw TypeError("Promise can't be resolved itself");if(then=isThenable(value)){microtask(function(){var wrapper={_w:promise,_d:false};try{then.call(value,ctx($resolve,wrapper,1),ctx($reject,wrapper,1))}catch(e){$reject.call(wrapper,e)}})}else{promise._v=value;promise._s=1;notify(promise,false)}}catch(e){$reject.call({_w:promise,_d:false},e)}};if(!USE_NATIVE){$Promise=function Promise(executor){anInstance(this,$Promise,PROMISE,"_h");aFunction(executor);Internal.call(this);try{executor(ctx($resolve,this,1),ctx($reject,this,1))}catch(err){$reject.call(this,err)}};Internal=function Promise(executor){this._c=[];this._a=undefined;this._s=0;this._d=false;this._v=undefined;this._h=0;this._n=false};Internal.prototype=require("./_redefine-all")($Promise.prototype,{then:function then(onFulfilled,onRejected){var reaction=newPromiseCapability(speciesConstructor(this,$Promise));reaction.ok=typeof onFulfilled=="function"?onFulfilled:true;reaction.fail=typeof onRejected=="function"&&onRejected;reaction.domain=isNode?process.domain:undefined;this._c.push(reaction);if(this._a)this._a.push(reaction);if(this._s)notify(this,false);return reaction.promise},catch:function(onRejected){return this.then(undefined,onRejected)}});OwnPromiseCapability=function(){var promise=new Internal;this.promise=promise;this.resolve=ctx($resolve,promise,1);this.reject=ctx($reject,promise,1)};newPromiseCapabilityModule.f=newPromiseCapability=function(C){return C===$Promise||C===Wrapper?new OwnPromiseCapability(C):newGenericPromiseCapability(C)}}$export($export.G+$export.W+$export.F*!USE_NATIVE,{Promise:$Promise});require("./_set-to-string-tag")($Promise,PROMISE);require("./_set-species")(PROMISE);Wrapper=require("./_core")[PROMISE];$export($export.S+$export.F*!USE_NATIVE,PROMISE,{reject:function reject(r){var capability=newPromiseCapability(this);var $$reject=capability.reject;$$reject(r);return capability.promise}});$export($export.S+$export.F*(LIBRARY||!USE_NATIVE),PROMISE,{resolve:function resolve(x){return promiseResolve(LIBRARY&&this===Wrapper?$Promise:this,x)}});$export($export.S+$export.F*!(USE_NATIVE&&require("./_iter-detect")(function(iter){$Promise.all(iter)["catch"](empty)})),PROMISE,{all:function all(iterable){var C=this;var capability=newPromiseCapability(C);var resolve=capability.resolve;var reject=capability.reject;var result=perform(function(){var values=[];var index=0;var remaining=1;forOf(iterable,false,function(promise){var $index=index++;var alreadyCalled=false;values.push(undefined);remaining++;C.resolve(promise).then(function(value){if(alreadyCalled)return;alreadyCalled=true;values[$index]=value;--remaining||resolve(values)},reject)});--remaining||resolve(values)});if(result.e)reject(result.v);return capability.promise},race:function race(iterable){var C=this;var capability=newPromiseCapability(C);var reject=capability.reject;var result=perform(function(){forOf(iterable,false,function(promise){C.resolve(promise).then(capability.resolve,reject)})});if(result.e)reject(result.v);return capability.promise}})},{"./_a-function":200,"./_an-instance":202,"./_classof":205,"./_core":207,"./_ctx":209,"./_export":215,"./_for-of":217,"./_global":218,"./_is-object":227,"./_iter-detect":231,"./_library":234,"./_microtask":236,"./_new-promise-capability":237,"./_perform":252,"./_promise-resolve":253,"./_redefine-all":255,"./_set-species":258,"./_set-to-string-tag":259,"./_species-constructor":262,"./_task":264,"./_wks":274}],288:[function(require,module,exports){"use strict";var $at=require("./_string-at")(true);require("./_iter-define")(String,"String",function(iterated){this._t=String(iterated);this._i=0},function(){var O=this._t;var index=this._i;var point;if(index>=O.length)return{value:undefined,done:true};point=$at(O,index);this._i+=point.length;return{value:point,done:false}})},{"./_iter-define":230,"./_string-at":263}],289:[function(require,module,exports){"use strict";var global=require("./_global");var has=require("./_has");var DESCRIPTORS=require("./_descriptors");var $export=require("./_export");var redefine=require("./_redefine");var META=require("./_meta").KEY;var $fails=require("./_fails");var shared=require("./_shared");var setToStringTag=require("./_set-to-string-tag");var uid=require("./_uid");var wks=require("./_wks");var wksExt=require("./_wks-ext");var wksDefine=require("./_wks-define");var enumKeys=require("./_enum-keys");var isArray=require("./_is-array");var anObject=require("./_an-object");var isObject=require("./_is-object");var toIObject=require("./_to-iobject");var toPrimitive=require("./_to-primitive");var createDesc=require("./_property-desc");var _create=require("./_object-create");var gOPNExt=require("./_object-gopn-ext");var $GOPD=require("./_object-gopd");var $DP=require("./_object-dp");var $keys=require("./_object-keys");var gOPD=$GOPD.f;var dP=$DP.f;var gOPN=gOPNExt.f;var $Symbol=global.Symbol;var $JSON=global.JSON;var _stringify=$JSON&&$JSON.stringify;var PROTOTYPE="prototype";var HIDDEN=wks("_hidden");var TO_PRIMITIVE=wks("toPrimitive");var isEnum={}.propertyIsEnumerable;var SymbolRegistry=shared("symbol-registry");var AllSymbols=shared("symbols");var OPSymbols=shared("op-symbols");var ObjectProto=Object[PROTOTYPE];var USE_NATIVE=typeof $Symbol=="function";var QObject=global.QObject;var setter=!QObject||!QObject[PROTOTYPE]||!QObject[PROTOTYPE].findChild;var setSymbolDesc=DESCRIPTORS&&$fails(function(){return _create(dP({},"a",{get:function(){return dP(this,"a",{value:7}).a}})).a!=7})?function(it,key,D){var protoDesc=gOPD(ObjectProto,key);if(protoDesc)delete ObjectProto[key];dP(it,key,D);if(protoDesc&&it!==ObjectProto)dP(ObjectProto,key,protoDesc)}:dP;var wrap=function(tag){var sym=AllSymbols[tag]=_create($Symbol[PROTOTYPE]);sym._k=tag;return sym};var isSymbol=USE_NATIVE&&typeof $Symbol.iterator=="symbol"?function(it){return typeof it=="symbol"}:function(it){return it instanceof $Symbol};var $defineProperty=function defineProperty(it,key,D){if(it===ObjectProto)$defineProperty(OPSymbols,key,D);anObject(it);key=toPrimitive(key,true);anObject(D);if(has(AllSymbols,key)){if(!D.enumerable){if(!has(it,HIDDEN))dP(it,HIDDEN,createDesc(1,{}));it[HIDDEN][key]=true}else{if(has(it,HIDDEN)&&it[HIDDEN][key])it[HIDDEN][key]=false;D=_create(D,{enumerable:createDesc(0,false)})}return setSymbolDesc(it,key,D)}return dP(it,key,D)};var $defineProperties=function defineProperties(it,P){anObject(it);var keys=enumKeys(P=toIObject(P));var i=0;var l=keys.length;var key;while(l>i)$defineProperty(it,key=keys[i++],P[key]);return it};var $create=function create(it,P){return P===undefined?_create(it):$defineProperties(_create(it),P)};var $propertyIsEnumerable=function propertyIsEnumerable(key){var E=isEnum.call(this,key=toPrimitive(key,true));if(this===ObjectProto&&has(AllSymbols,key)&&!has(OPSymbols,key))return false;return E||!has(this,key)||!has(AllSymbols,key)||has(this,HIDDEN)&&this[HIDDEN][key]?E:true};var $getOwnPropertyDescriptor=function getOwnPropertyDescriptor(it,key){it=toIObject(it);key=toPrimitive(key,true);if(it===ObjectProto&&has(AllSymbols,key)&&!has(OPSymbols,key))return;var D=gOPD(it,key);if(D&&has(AllSymbols,key)&&!(has(it,HIDDEN)&&it[HIDDEN][key]))D.enumerable=true;return D};var $getOwnPropertyNames=function getOwnPropertyNames(it){var names=gOPN(toIObject(it));var result=[];var i=0;var key;while(names.length>i){if(!has(AllSymbols,key=names[i++])&&key!=HIDDEN&&key!=META)result.push(key)}return result};var $getOwnPropertySymbols=function getOwnPropertySymbols(it){var IS_OP=it===ObjectProto;var names=gOPN(IS_OP?OPSymbols:toIObject(it));var result=[];var i=0;var key;while(names.length>i){if(has(AllSymbols,key=names[i++])&&(IS_OP?has(ObjectProto,key):true))result.push(AllSymbols[key])}return result};if(!USE_NATIVE){$Symbol=function Symbol(){if(this instanceof $Symbol)throw TypeError("Symbol is not a constructor!");var tag=uid(arguments.length>0?arguments[0]:undefined);var $set=function(value){if(this===ObjectProto)$set.call(OPSymbols,value);if(has(this,HIDDEN)&&has(this[HIDDEN],tag))this[HIDDEN][tag]=false;setSymbolDesc(this,tag,createDesc(1,value))};if(DESCRIPTORS&&setter)setSymbolDesc(ObjectProto,tag,{configurable:true,set:$set});return wrap(tag)};redefine($Symbol[PROTOTYPE],"toString",function toString(){return this._k});$GOPD.f=$getOwnPropertyDescriptor;$DP.f=$defineProperty;require("./_object-gopn").f=gOPNExt.f=$getOwnPropertyNames;require("./_object-pie").f=$propertyIsEnumerable;require("./_object-gops").f=$getOwnPropertySymbols;if(DESCRIPTORS&&!require("./_library")){redefine(ObjectProto,"propertyIsEnumerable",$propertyIsEnumerable,true)}wksExt.f=function(name){return wrap(wks(name))}}$export($export.G+$export.W+$export.F*!USE_NATIVE,{Symbol:$Symbol});for(var es6Symbols="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),j=0;es6Symbols.length>j;)wks(es6Symbols[j++]);for(var wellKnownSymbols=$keys(wks.store),k=0;wellKnownSymbols.length>k;)wksDefine(wellKnownSymbols[k++]);$export($export.S+$export.F*!USE_NATIVE,"Symbol",{for:function(key){return has(SymbolRegistry,key+="")?SymbolRegistry[key]:SymbolRegistry[key]=$Symbol(key)},keyFor:function keyFor(sym){if(!isSymbol(sym))throw TypeError(sym+" is not a symbol!");for(var key in SymbolRegistry)if(SymbolRegistry[key]===sym)return key},useSetter:function(){setter=true},useSimple:function(){setter=false}});$export($export.S+$export.F*!USE_NATIVE,"Object",{create:$create,defineProperty:$defineProperty,defineProperties:$defineProperties,getOwnPropertyDescriptor:$getOwnPropertyDescriptor,getOwnPropertyNames:$getOwnPropertyNames,getOwnPropertySymbols:$getOwnPropertySymbols});$JSON&&$export($export.S+$export.F*(!USE_NATIVE||$fails(function(){var S=$Symbol();return _stringify([S])!="[null]"||_stringify({a:S})!="{}"||_stringify(Object(S))!="{}"})),"JSON",{stringify:function stringify(it){var args=[it];var i=1;var replacer,$replacer;while(arguments.length>i)args.push(arguments[i++]);$replacer=replacer=args[1];if(!isObject(replacer)&&it===undefined||isSymbol(it))return;if(!isArray(replacer))replacer=function(key,value){if(typeof $replacer=="function")value=$replacer.call(this,key,value);if(!isSymbol(value))return value};args[1]=replacer;return _stringify.apply($JSON,args)}});$Symbol[PROTOTYPE][TO_PRIMITIVE]||require("./_hide")($Symbol[PROTOTYPE],TO_PRIMITIVE,$Symbol[PROTOTYPE].valueOf);setToStringTag($Symbol,"Symbol");setToStringTag(Math,"Math",true);setToStringTag(global.JSON,"JSON",true)},{"./_an-object":203,"./_descriptors":211,"./_enum-keys":214,"./_export":215,"./_fails":216,"./_global":218,"./_has":219,"./_hide":220,"./_is-array":226,"./_is-object":227,"./_library":234,"./_meta":235,"./_object-create":239,"./_object-dp":240,"./_object-gopd":242,"./_object-gopn":244,"./_object-gopn-ext":243,"./_object-gops":245,"./_object-keys":248,"./_object-pie":249,"./_property-desc":254,"./_redefine":256,"./_set-to-string-tag":259,"./_shared":261,"./_to-iobject":267,"./_to-primitive":270,"./_uid":271,"./_wks":274,"./_wks-define":272,"./_wks-ext":273}],290:[function(require,module,exports){var $export=require("./_export");var $entries=require("./_object-to-array")(true);$export($export.S,"Object",{entries:function entries(it){return $entries(it)}})},{"./_export":215,"./_object-to-array":251}],291:[function(require,module,exports){"use strict";var $export=require("./_export");var core=require("./_core");var global=require("./_global");var speciesConstructor=require("./_species-constructor");var promiseResolve=require("./_promise-resolve");$export($export.P+$export.R,"Promise",{finally:function(onFinally){var C=speciesConstructor(this,core.Promise||global.Promise);var isFunction=typeof onFinally=="function";return this.then(isFunction?function(x){return promiseResolve(C,onFinally()).then(function(){return x})}:onFinally,isFunction?function(e){return promiseResolve(C,onFinally()).then(function(){throw e})}:onFinally)}})},{"./_core":207,"./_export":215,"./_global":218,"./_promise-resolve":253,"./_species-constructor":262}],292:[function(require,module,exports){"use strict";var $export=require("./_export");var newPromiseCapability=require("./_new-promise-capability");var perform=require("./_perform");$export($export.S,"Promise",{try:function(callbackfn){var promiseCapability=newPromiseCapability.f(this);var result=perform(callbackfn);(result.e?promiseCapability.reject:promiseCapability.resolve)(result.v);return promiseCapability.promise}})},{"./_export":215,"./_new-promise-capability":237,"./_perform":252}],293:[function(require,module,exports){require("./_wks-define")("asyncIterator")},{"./_wks-define":272}],294:[function(require,module,exports){require("./_wks-define")("observable")},{"./_wks-define":272}],295:[function(require,module,exports){require("./es6.array.iterator");var global=require("./_global");var hide=require("./_hide");var Iterators=require("./_iterators");var TO_STRING_TAG=require("./_wks")("toStringTag");var DOMIterables=("CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,"+"DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,"+"MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,"+"SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,"+"TextTrackList,TouchList").split(",");for(var i=0;i<DOMIterables.length;i++){var NAME=DOMIterables[i];var Collection=global[NAME];var proto=Collection&&Collection.prototype;if(proto&&!proto[TO_STRING_TAG])hide(proto,TO_STRING_TAG,NAME);Iterators[NAME]=Iterators.Array}},{"./_global":218,"./_hide":220,"./_iterators":233,"./_wks":274,"./es6.array.iterator":279}],296:[function(require,module,exports){(function(Buffer){function isArray(arg){if(Array.isArray){return Array.isArray(arg)}return objectToString(arg)==="[object Array]"}exports.isArray=isArray;function isBoolean(arg){return typeof arg==="boolean"}exports.isBoolean=isBoolean;function isNull(arg){return arg===null}exports.isNull=isNull;function isNullOrUndefined(arg){return arg==null}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(arg){return typeof arg==="number"}exports.isNumber=isNumber;function isString(arg){return typeof arg==="string"}exports.isString=isString;function isSymbol(arg){return typeof arg==="symbol"}exports.isSymbol=isSymbol;function isUndefined(arg){return arg===void 0}exports.isUndefined=isUndefined;function isRegExp(re){return objectToString(re)==="[object RegExp]"}exports.isRegExp=isRegExp;function isObject(arg){return typeof arg==="object"&&arg!==null}exports.isObject=isObject;function isDate(d){return objectToString(d)==="[object Date]"}exports.isDate=isDate;function isError(e){return objectToString(e)==="[object Error]"||e instanceof Error}exports.isError=isError;function isFunction(arg){return typeof arg==="function"}exports.isFunction=isFunction;function isPrimitive(arg){return arg===null||typeof arg==="boolean"||typeof arg==="number"||typeof arg==="string"||typeof arg==="symbol"||typeof arg==="undefined"}exports.isPrimitive=isPrimitive;exports.isBuffer=Buffer.isBuffer;function objectToString(o){return Object.prototype.toString.call(o)}}).call(this,{isBuffer:require("../../is-buffer/index.js")})},{"../../is-buffer/index.js":353}],297:[function(require,module,exports){(function(Buffer){var elliptic=require("elliptic");var BN=require("bn.js");module.exports=function createECDH(curve){return new ECDH(curve)};var aliases={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};aliases.p224=aliases.secp224r1;aliases.p256=aliases.secp256r1=aliases.prime256v1;aliases.p192=aliases.secp192r1=aliases.prime192v1;aliases.p384=aliases.secp384r1;aliases.p521=aliases.secp521r1;function ECDH(curve){this.curveType=aliases[curve];if(!this.curveType){this.curveType={name:curve}}this.curve=new elliptic.ec(this.curveType.name);this.keys=void 0}ECDH.prototype.generateKeys=function(enc,format){this.keys=this.curve.genKeyPair();return this.getPublicKey(enc,format)};ECDH.prototype.computeSecret=function(other,inenc,enc){inenc=inenc||"utf8";if(!Buffer.isBuffer(other)){other=new Buffer(other,inenc)}var otherPub=this.curve.keyFromPublic(other).getPublic();var out=otherPub.mul(this.keys.getPrivate()).getX();return formatReturnValue(out,enc,this.curveType.byteLength)};ECDH.prototype.getPublicKey=function(enc,format){var key=this.keys.getPublic(format==="compressed",true);if(format==="hybrid"){if(key[key.length-1]%2){key[0]=7}else{key[0]=6}}return formatReturnValue(key,enc)};ECDH.prototype.getPrivateKey=function(enc){return formatReturnValue(this.keys.getPrivate(),enc)};ECDH.prototype.setPublicKey=function(pub,enc){enc=enc||"utf8";if(!Buffer.isBuffer(pub)){pub=new Buffer(pub,enc)}this.keys._importPublic(pub);return this};ECDH.prototype.setPrivateKey=function(priv,enc){enc=enc||"utf8";if(!Buffer.isBuffer(priv)){priv=new Buffer(priv,enc)}var _priv=new BN(priv);_priv=_priv.toString(16);this.keys._importPrivate(_priv);return this};function formatReturnValue(bn,enc,len){if(!Array.isArray(bn)){bn=bn.toArray()}var buf=new Buffer(bn);if(len&&buf.length<len){var zeros=new Buffer(len-buf.length);zeros.fill(0);buf=Buffer.concat([zeros,buf])}if(!enc){return buf}else{return buf.toString(enc)}}}).call(this,require("buffer").Buffer)},{"bn.js":116,buffer:150,elliptic:317}],298:[function(require,module,exports){(function(Buffer){"use strict";var inherits=require("inherits");var md5=require("./md5");var RIPEMD160=require("ripemd160");var sha=require("sha.js");var Base=require("cipher-base");function HashNoConstructor(hash){Base.call(this,"digest");this._hash=hash;this.buffers=[]}inherits(HashNoConstructor,Base);HashNoConstructor.prototype._update=function(data){this.buffers.push(data)};HashNoConstructor.prototype._final=function(){var buf=Buffer.concat(this.buffers);var r=this._hash(buf);this.buffers=null;return r};function Hash(hash){Base.call(this,"digest");this._hash=hash}inherits(Hash,Base);Hash.prototype._update=function(data){this._hash.update(data)};Hash.prototype._final=function(){return this._hash.digest()};module.exports=function createHash(alg){alg=alg.toLowerCase();if(alg==="md5")return new HashNoConstructor(md5);if(alg==="rmd160"||alg==="ripemd160")return new Hash(new RIPEMD160);return new Hash(sha(alg))}}).call(this,require("buffer").Buffer)},{"./md5":300,buffer:150,"cipher-base":186,inherits:352,ripemd160:433,"sha.js":437}],299:[function(require,module,exports){(function(Buffer){"use strict";var intSize=4;var zeroBuffer=new Buffer(intSize);zeroBuffer.fill(0);var charSize=8;var hashSize=16;function toArray(buf){if(buf.length%intSize!==0){var len=buf.length+(intSize-buf.length%intSize);buf=Buffer.concat([buf,zeroBuffer],len)}var arr=new Array(buf.length>>>2);for(var i=0,j=0;i<buf.length;i+=intSize,j++){arr[j]=buf.readInt32LE(i)}return arr}module.exports=function hash(buf,fn){var arr=fn(toArray(buf),buf.length*charSize);buf=new Buffer(hashSize);for(var i=0;i<arr.length;i++){buf.writeInt32LE(arr[i],i<<2,true)}return buf}}).call(this,require("buffer").Buffer)},{buffer:150}],300:[function(require,module,exports){"use strict";var makeHash=require("./make-hash");function core_md5(x,len){x[len>>5]|=128<<len%32;x[(len+64>>>9<<4)+14]=len;var a=1732584193;var b=-271733879;var c=-1732584194;var d=271733878;for(var i=0;i<x.length;i+=16){var olda=a;var oldb=b;var oldc=c;var oldd=d;a=md5_ff(a,b,c,d,x[i+0],7,-680876936);d=md5_ff(d,a,b,c,x[i+1],12,-389564586);c=md5_ff(c,d,a,b,x[i+2],17,606105819);b=md5_ff(b,c,d,a,x[i+3],22,-1044525330);a=md5_ff(a,b,c,d,x[i+4],7,-176418897);d=md5_ff(d,a,b,c,x[i+5],12,1200080426);c=md5_ff(c,d,a,b,x[i+6],17,-1473231341);b=md5_ff(b,c,d,a,x[i+7],22,-45705983);a=md5_ff(a,b,c,d,x[i+8],7,1770035416);d=md5_ff(d,a,b,c,x[i+9],12,-1958414417);c=md5_ff(c,d,a,b,x[i+10],17,-42063);b=md5_ff(b,c,d,a,x[i+11],22,-1990404162);a=md5_ff(a,b,c,d,x[i+12],7,1804603682);d=md5_ff(d,a,b,c,x[i+13],12,-40341101);c=md5_ff(c,d,a,b,x[i+14],17,-1502002290);b=md5_ff(b,c,d,a,x[i+15],22,1236535329);a=md5_gg(a,b,c,d,x[i+1],5,-165796510);d=md5_gg(d,a,b,c,x[i+6],9,-1069501632);c=md5_gg(c,d,a,b,x[i+11],14,643717713);b=md5_gg(b,c,d,a,x[i+0],20,-373897302);a=md5_gg(a,b,c,d,x[i+5],5,-701558691);d=md5_gg(d,a,b,c,x[i+10],9,38016083);c=md5_gg(c,d,a,b,x[i+15],14,-660478335);b=md5_gg(b,c,d,a,x[i+4],20,-405537848);a=md5_gg(a,b,c,d,x[i+9],5,568446438);d=md5_gg(d,a,b,c,x[i+14],9,-1019803690);c=md5_gg(c,d,a,b,x[i+3],14,-187363961);b=md5_gg(b,c,d,a,x[i+8],20,1163531501);a=md5_gg(a,b,c,d,x[i+13],5,-1444681467);d=md5_gg(d,a,b,c,x[i+2],9,-51403784);c=md5_gg(c,d,a,b,x[i+7],14,1735328473);b=md5_gg(b,c,d,a,x[i+12],20,-1926607734);a=md5_hh(a,b,c,d,x[i+5],4,-378558);d=md5_hh(d,a,b,c,x[i+8],11,-2022574463);c=md5_hh(c,d,a,b,x[i+11],16,1839030562);b=md5_hh(b,c,d,a,x[i+14],23,-35309556);a=md5_hh(a,b,c,d,x[i+1],4,-1530992060);d=md5_hh(d,a,b,c,x[i+4],11,1272893353);c=md5_hh(c,d,a,b,x[i+7],16,-155497632);b=md5_hh(b,c,d,a,x[i+10],23,-1094730640);a=md5_hh(a,b,c,d,x[i+13],4,681279174);d=md5_hh(d,a,b,c,x[i+0],11,-358537222);c=md5_hh(c,d,a,b,x[i+3],16,-722521979);b=md5_hh(b,c,d,a,x[i+6],23,76029189);a=md5_hh(a,b,c,d,x[i+9],4,-640364487);d=md5_hh(d,a,b,c,x[i+12],11,-421815835);c=md5_hh(c,d,a,b,x[i+15],16,530742520);b=md5_hh(b,c,d,a,x[i+2],23,-995338651);a=md5_ii(a,b,c,d,x[i+0],6,-198630844);d=md5_ii(d,a,b,c,x[i+7],10,1126891415);c=md5_ii(c,d,a,b,x[i+14],15,-1416354905);b=md5_ii(b,c,d,a,x[i+5],21,-57434055);a=md5_ii(a,b,c,d,x[i+12],6,1700485571);d=md5_ii(d,a,b,c,x[i+3],10,-1894986606);c=md5_ii(c,d,a,b,x[i+10],15,-1051523);b=md5_ii(b,c,d,a,x[i+1],21,-2054922799);a=md5_ii(a,b,c,d,x[i+8],6,1873313359);d=md5_ii(d,a,b,c,x[i+15],10,-30611744);c=md5_ii(c,d,a,b,x[i+6],15,-1560198380);b=md5_ii(b,c,d,a,x[i+13],21,1309151649);a=md5_ii(a,b,c,d,x[i+4],6,-145523070);d=md5_ii(d,a,b,c,x[i+11],10,-1120210379);c=md5_ii(c,d,a,b,x[i+2],15,718787259);b=md5_ii(b,c,d,a,x[i+9],21,-343485551);a=safe_add(a,olda);b=safe_add(b,oldb);c=safe_add(c,oldc);d=safe_add(d,oldd)}return[a,b,c,d]}function md5_cmn(q,a,b,x,s,t){return safe_add(bit_rol(safe_add(safe_add(a,q),safe_add(x,t)),s),b)}function md5_ff(a,b,c,d,x,s,t){return md5_cmn(b&c|~b&d,a,b,x,s,t)}function md5_gg(a,b,c,d,x,s,t){return md5_cmn(b&d|c&~d,a,b,x,s,t)}function md5_hh(a,b,c,d,x,s,t){return md5_cmn(b^c^d,a,b,x,s,t)}function md5_ii(a,b,c,d,x,s,t){return md5_cmn(c^(b|~d),a,b,x,s,t)}function safe_add(x,y){var lsw=(x&65535)+(y&65535);var msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&65535}function bit_rol(num,cnt){return num<<cnt|num>>>32-cnt}module.exports=function md5(buf){return makeHash(buf,core_md5)}},{"./make-hash":299}],301:[function(require,module,exports){"use strict";var inherits=require("inherits");var Legacy=require("./legacy");var Base=require("cipher-base");var Buffer=require("safe-buffer").Buffer;var md5=require("create-hash/md5");var RIPEMD160=require("ripemd160");var sha=require("sha.js");var ZEROS=Buffer.alloc(128);function Hmac(alg,key){Base.call(this,"digest");if(typeof key==="string"){key=Buffer.from(key)}var blocksize=alg==="sha512"||alg==="sha384"?128:64;this._alg=alg;this._key=key;if(key.length>blocksize){var hash=alg==="rmd160"?new RIPEMD160:sha(alg);key=hash.update(key).digest()}else if(key.length<blocksize){key=Buffer.concat([key,ZEROS],blocksize)}var ipad=this._ipad=Buffer.allocUnsafe(blocksize);var opad=this._opad=Buffer.allocUnsafe(blocksize);for(var i=0;i<blocksize;i++){ipad[i]=key[i]^54;opad[i]=key[i]^92}this._hash=alg==="rmd160"?new RIPEMD160:sha(alg);this._hash.update(ipad)}inherits(Hmac,Base);Hmac.prototype._update=function(data){this._hash.update(data)};Hmac.prototype._final=function(){var h=this._hash.digest();var hash=this._alg==="rmd160"?new RIPEMD160:sha(this._alg);return hash.update(this._opad).update(h).digest()};module.exports=function createHmac(alg,key){alg=alg.toLowerCase();if(alg==="rmd160"||alg==="ripemd160"){return new Hmac("rmd160",key)}if(alg==="md5"){return new Legacy(md5,key)}return new Hmac(alg,key)}},{"./legacy":302,"cipher-base":186,"create-hash/md5":300,inherits:352,ripemd160:433,"safe-buffer":434,"sha.js":437}],302:[function(require,module,exports){"use strict";var inherits=require("inherits");var Buffer=require("safe-buffer").Buffer;var Base=require("cipher-base");var ZEROS=Buffer.alloc(128);var blocksize=64;function Hmac(alg,key){Base.call(this,"digest");if(typeof key==="string"){key=Buffer.from(key)}this._alg=alg;this._key=key;if(key.length>blocksize){key=alg(key)}else if(key.length<blocksize){key=Buffer.concat([key,ZEROS],blocksize)}var ipad=this._ipad=Buffer.allocUnsafe(blocksize);var opad=this._opad=Buffer.allocUnsafe(blocksize);for(var i=0;i<blocksize;i++){ipad[i]=key[i]^54;opad[i]=key[i]^92}this._hash=[ipad]}inherits(Hmac,Base);Hmac.prototype._update=function(data){this._hash.push(data)};Hmac.prototype._final=function(){var h=this._alg(Buffer.concat(this._hash));return this._alg(Buffer.concat([this._opad,h]))};module.exports=Hmac},{"cipher-base":186,inherits:352,"safe-buffer":434}],303:[function(require,module,exports){"use strict";exports.randomBytes=exports.rng=exports.pseudoRandomBytes=exports.prng=require("randombytes");exports.createHash=exports.Hash=require("create-hash");exports.createHmac=exports.Hmac=require("create-hmac");var algos=require("browserify-sign/algos");var algoKeys=Object.keys(algos);var hashes=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(algoKeys);exports.getHashes=function(){return hashes};var p=require("pbkdf2");exports.pbkdf2=p.pbkdf2;exports.pbkdf2Sync=p.pbkdf2Sync;var aes=require("browserify-cipher");exports.Cipher=aes.Cipher;exports.createCipher=aes.createCipher;exports.Cipheriv=aes.Cipheriv;exports.createCipheriv=aes.createCipheriv;exports.Decipher=aes.Decipher;exports.createDecipher=aes.createDecipher;exports.Decipheriv=aes.Decipheriv;exports.createDecipheriv=aes.createDecipheriv;exports.getCiphers=aes.getCiphers;exports.listCiphers=aes.listCiphers;var dh=require("diffie-hellman");exports.DiffieHellmanGroup=dh.DiffieHellmanGroup;exports.createDiffieHellmanGroup=dh.createDiffieHellmanGroup;exports.getDiffieHellman=dh.getDiffieHellman;exports.createDiffieHellman=dh.createDiffieHellman;exports.DiffieHellman=dh.DiffieHellman;var sign=require("browserify-sign");exports.createSign=sign.createSign;exports.Sign=sign.Sign;exports.createVerify=sign.createVerify;exports.Verify=sign.Verify;exports.createECDH=require("create-ecdh");var publicEncrypt=require("public-encrypt");exports.publicEncrypt=publicEncrypt.publicEncrypt;exports.privateEncrypt=publicEncrypt.privateEncrypt;exports.publicDecrypt=publicEncrypt.publicDecrypt;exports.privateDecrypt=publicEncrypt.privateDecrypt;var rf=require("randomfill");exports.randomFill=rf.randomFill;exports.randomFillSync=rf.randomFillSync;exports.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))};exports.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},{"browserify-cipher":137,"browserify-sign":144,"browserify-sign/algos":141,"create-ecdh":297,"create-hash":298,"create-hmac":301,"diffie-hellman":312,pbkdf2:387,"public-encrypt":408,randombytes:418,randomfill:419}],304:[function(require,module,exports){"use strict";var type=require("type-detect");function FakeMap(){this._key="chai/deep-eql__"+Math.random()+Date.now()}FakeMap.prototype={get:function getMap(key){return key[this._key]},set:function setMap(key,value){if(Object.isExtensible(key)){Object.defineProperty(key,this._key,{value:value,configurable:true})}}};var MemoizeMap=typeof WeakMap==="function"?WeakMap:FakeMap;function memoizeCompare(leftHandOperand,rightHandOperand,memoizeMap){if(!memoizeMap||isPrimitive(leftHandOperand)||isPrimitive(rightHandOperand)){return null}var leftHandMap=memoizeMap.get(leftHandOperand);if(leftHandMap){var result=leftHandMap.get(rightHandOperand);if(typeof result==="boolean"){return result}}return null}function memoizeSet(leftHandOperand,rightHandOperand,memoizeMap,result){if(!memoizeMap||isPrimitive(leftHandOperand)||isPrimitive(rightHandOperand)){return}var leftHandMap=memoizeMap.get(leftHandOperand);if(leftHandMap){leftHandMap.set(rightHandOperand,result)}else{leftHandMap=new MemoizeMap;leftHandMap.set(rightHandOperand,result);memoizeMap.set(leftHandOperand,leftHandMap)}}module.exports=deepEqual;module.exports.MemoizeMap=MemoizeMap;function deepEqual(leftHandOperand,rightHandOperand,options){if(options&&options.comparator){return extensiveDeepEqual(leftHandOperand,rightHandOperand,options)}var simpleResult=simpleEqual(leftHandOperand,rightHandOperand);if(simpleResult!==null){return simpleResult}return extensiveDeepEqual(leftHandOperand,rightHandOperand,options)}function simpleEqual(leftHandOperand,rightHandOperand){if(leftHandOperand===rightHandOperand){return leftHandOperand!==0||1/leftHandOperand===1/rightHandOperand}if(leftHandOperand!==leftHandOperand&&rightHandOperand!==rightHandOperand){return true}if(isPrimitive(leftHandOperand)||isPrimitive(rightHandOperand)){return false}return null}function extensiveDeepEqual(leftHandOperand,rightHandOperand,options){options=options||{};options.memoize=options.memoize===false?false:options.memoize||new MemoizeMap;var comparator=options&&options.comparator;var memoizeResultLeft=memoizeCompare(leftHandOperand,rightHandOperand,options.memoize);if(memoizeResultLeft!==null){return memoizeResultLeft}var memoizeResultRight=memoizeCompare(rightHandOperand,leftHandOperand,options.memoize);if(memoizeResultRight!==null){return memoizeResultRight}if(comparator){var comparatorResult=comparator(leftHandOperand,rightHandOperand);if(comparatorResult===false||comparatorResult===true){memoizeSet(leftHandOperand,rightHandOperand,options.memoize,comparatorResult);return comparatorResult}var simpleResult=simpleEqual(leftHandOperand,rightHandOperand);if(simpleResult!==null){return simpleResult}}var leftHandType=type(leftHandOperand);if(leftHandType!==type(rightHandOperand)){memoizeSet(leftHandOperand,rightHandOperand,options.memoize,false);return false}memoizeSet(leftHandOperand,rightHandOperand,options.memoize,true);var result=extensiveDeepEqualByType(leftHandOperand,rightHandOperand,leftHandType,options);memoizeSet(leftHandOperand,rightHandOperand,options.memoize,result);return result}function extensiveDeepEqualByType(leftHandOperand,rightHandOperand,leftHandType,options){switch(leftHandType){case"String":case"Number":case"Boolean":case"Date":return deepEqual(leftHandOperand.valueOf(),rightHandOperand.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":case"Error":return leftHandOperand===rightHandOperand;case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return iterableEqual(leftHandOperand,rightHandOperand,options);case"RegExp":return regexpEqual(leftHandOperand,rightHandOperand);case"Generator":return generatorEqual(leftHandOperand,rightHandOperand,options);case"DataView":return iterableEqual(new Uint8Array(leftHandOperand.buffer),new Uint8Array(rightHandOperand.buffer),options);case"ArrayBuffer":return iterableEqual(new Uint8Array(leftHandOperand),new Uint8Array(rightHandOperand),options);case"Set":return entriesEqual(leftHandOperand,rightHandOperand,options);case"Map":return entriesEqual(leftHandOperand,rightHandOperand,options);default:return objectEqual(leftHandOperand,rightHandOperand,options)}}function regexpEqual(leftHandOperand,rightHandOperand){return leftHandOperand.toString()===rightHandOperand.toString()}function entriesEqual(leftHandOperand,rightHandOperand,options){if(leftHandOperand.size!==rightHandOperand.size){return false}if(leftHandOperand.size===0){return true}var leftHandItems=[];var rightHandItems=[];leftHandOperand.forEach(function gatherEntries(key,value){leftHandItems.push([key,value])});rightHandOperand.forEach(function gatherEntries(key,value){rightHandItems.push([key,value])});return iterableEqual(leftHandItems.sort(),rightHandItems.sort(),options)}function iterableEqual(leftHandOperand,rightHandOperand,options){var length=leftHandOperand.length;if(length!==rightHandOperand.length){return false}if(length===0){return true}var index=-1;while(++index<length){if(deepEqual(leftHandOperand[index],rightHandOperand[index],options)===false){return false}}return true}function generatorEqual(leftHandOperand,rightHandOperand,options){return iterableEqual(getGeneratorEntries(leftHandOperand),getGeneratorEntries(rightHandOperand),options)}function hasIteratorFunction(target){return typeof Symbol!=="undefined"&&typeof target==="object"&&typeof Symbol.iterator!=="undefined"&&typeof target[Symbol.iterator]==="function"}function getIteratorEntries(target){if(hasIteratorFunction(target)){try{return getGeneratorEntries(target[Symbol.iterator]())}catch(iteratorError){return[]}}return[]}function getGeneratorEntries(generator){var generatorResult=generator.next();var accumulator=[generatorResult.value];while(generatorResult.done===false){generatorResult=generator.next();accumulator.push(generatorResult.value)}return accumulator}function getEnumerableKeys(target){var keys=[];for(var key in target){keys.push(key)}return keys}function keysEqual(leftHandOperand,rightHandOperand,keys,options){var length=keys.length;if(length===0){return true}for(var i=0;i<length;i+=1){if(deepEqual(leftHandOperand[keys[i]],rightHandOperand[keys[i]],options)===false){return false}}return true}function objectEqual(leftHandOperand,rightHandOperand,options){var leftHandKeys=getEnumerableKeys(leftHandOperand);var rightHandKeys=getEnumerableKeys(rightHandOperand);if(leftHandKeys.length&&leftHandKeys.length===rightHandKeys.length){leftHandKeys.sort();rightHandKeys.sort();if(iterableEqual(leftHandKeys,rightHandKeys)===false){return false}return keysEqual(leftHandOperand,rightHandOperand,leftHandKeys,options)}var leftHandEntries=getIteratorEntries(leftHandOperand);var rightHandEntries=getIteratorEntries(rightHandOperand);if(leftHandEntries.length&&leftHandEntries.length===rightHandEntries.length){leftHandEntries.sort();rightHandEntries.sort();return iterableEqual(leftHandEntries,rightHandEntries,options)}if(leftHandKeys.length===0&&leftHandEntries.length===0&&rightHandKeys.length===0&&rightHandEntries.length===0){return true}return false}function isPrimitive(value){return value===null||typeof value!=="object"}},{"type-detect":486}],305:[function(require,module,exports){"use strict";exports.utils=require("./des/utils");exports.Cipher=require("./des/cipher");exports.DES=require("./des/des");exports.CBC=require("./des/cbc");exports.EDE=require("./des/ede")},{"./des/cbc":306,"./des/cipher":307,"./des/des":308,"./des/ede":309,"./des/utils":310}],306:[function(require,module,exports){"use strict";var assert=require("minimalistic-assert");var inherits=require("inherits");var proto={};function CBCState(iv){assert.equal(iv.length,8,"Invalid IV length");this.iv=new Array(8);for(var i=0;i<this.iv.length;i++)this.iv[i]=iv[i]}function instantiate(Base){function CBC(options){Base.call(this,options);this._cbcInit()}inherits(CBC,Base);var keys=Object.keys(proto);for(var i=0;i<keys.length;i++){var key=keys[i];CBC.prototype[key]=proto[key]}CBC.create=function create(options){return new CBC(options)};return CBC}exports.instantiate=instantiate;proto._cbcInit=function _cbcInit(){var state=new CBCState(this.options.iv);this._cbcState=state};proto._update=function _update(inp,inOff,out,outOff){var state=this._cbcState;var superProto=this.constructor.super_.prototype;var iv=state.iv;if(this.type==="encrypt"){for(var i=0;i<this.blockSize;i++)iv[i]^=inp[inOff+i];superProto._update.call(this,iv,0,out,outOff);for(var i=0;i<this.blockSize;i++)iv[i]=out[outOff+i]}else{superProto._update.call(this,inp,inOff,out,outOff);for(var i=0;i<this.blockSize;i++)out[outOff+i]^=iv[i];for(var i=0;i<this.blockSize;i++)iv[i]=inp[inOff+i]}}},{inherits:352,"minimalistic-assert":364}],307:[function(require,module,exports){"use strict";var assert=require("minimalistic-assert");function Cipher(options){this.options=options;this.type=this.options.type;this.blockSize=8;this._init();this.buffer=new Array(this.blockSize);this.bufferOff=0}module.exports=Cipher;Cipher.prototype._init=function _init(){};Cipher.prototype.update=function update(data){if(data.length===0)return[];if(this.type==="decrypt")return this._updateDecrypt(data);else return this._updateEncrypt(data)};Cipher.prototype._buffer=function _buffer(data,off){var min=Math.min(this.buffer.length-this.bufferOff,data.length-off);for(var i=0;i<min;i++)this.buffer[this.bufferOff+i]=data[off+i];this.bufferOff+=min;return min};Cipher.prototype._flushBuffer=function _flushBuffer(out,off){this._update(this.buffer,0,out,off);this.bufferOff=0;return this.blockSize};Cipher.prototype._updateEncrypt=function _updateEncrypt(data){var inputOff=0;var outputOff=0;var count=(this.bufferOff+data.length)/this.blockSize|0;var out=new Array(count*this.blockSize);if(this.bufferOff!==0){inputOff+=this._buffer(data,inputOff);if(this.bufferOff===this.buffer.length)outputOff+=this._flushBuffer(out,outputOff)}var max=data.length-(data.length-inputOff)%this.blockSize;for(;inputOff<max;inputOff+=this.blockSize){this._update(data,inputOff,out,outputOff);outputOff+=this.blockSize}for(;inputOff<data.length;inputOff++,this.bufferOff++)this.buffer[this.bufferOff]=data[inputOff];return out};Cipher.prototype._updateDecrypt=function _updateDecrypt(data){var inputOff=0;var outputOff=0;var count=Math.ceil((this.bufferOff+data.length)/this.blockSize)-1;var out=new Array(count*this.blockSize);for(;count>0;count--){inputOff+=this._buffer(data,inputOff);outputOff+=this._flushBuffer(out,outputOff)}inputOff+=this._buffer(data,inputOff);return out};Cipher.prototype.final=function final(buffer){var first;if(buffer)first=this.update(buffer);var last;if(this.type==="encrypt")last=this._finalEncrypt();else last=this._finalDecrypt();if(first)return first.concat(last);else return last};Cipher.prototype._pad=function _pad(buffer,off){if(off===0)return false;while(off<buffer.length)buffer[off++]=0;return true};Cipher.prototype._finalEncrypt=function _finalEncrypt(){if(!this._pad(this.buffer,this.bufferOff))return[];var out=new Array(this.blockSize);this._update(this.buffer,0,out,0);return out};Cipher.prototype._unpad=function _unpad(buffer){return buffer};Cipher.prototype._finalDecrypt=function _finalDecrypt(){assert.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var out=new Array(this.blockSize);this._flushBuffer(out,0);return this._unpad(out)}},{"minimalistic-assert":364}],308:[function(require,module,exports){"use strict";var assert=require("minimalistic-assert");var inherits=require("inherits");var des=require("../des");var utils=des.utils;var Cipher=des.Cipher;function DESState(){this.tmp=new Array(2);this.keys=null}function DES(options){Cipher.call(this,options);var state=new DESState;this._desState=state;this.deriveKeys(state,options.key)}inherits(DES,Cipher);module.exports=DES;DES.create=function create(options){return new DES(options)};var shiftTable=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];DES.prototype.deriveKeys=function deriveKeys(state,key){state.keys=new Array(16*2);assert.equal(key.length,this.blockSize,"Invalid key length");var kL=utils.readUInt32BE(key,0);var kR=utils.readUInt32BE(key,4);utils.pc1(kL,kR,state.tmp,0);kL=state.tmp[0];kR=state.tmp[1];for(var i=0;i<state.keys.length;i+=2){var shift=shiftTable[i>>>1];kL=utils.r28shl(kL,shift);kR=utils.r28shl(kR,shift);utils.pc2(kL,kR,state.keys,i)}};DES.prototype._update=function _update(inp,inOff,out,outOff){var state=this._desState;var l=utils.readUInt32BE(inp,inOff);var r=utils.readUInt32BE(inp,inOff+4);utils.ip(l,r,state.tmp,0);l=state.tmp[0];r=state.tmp[1];if(this.type==="encrypt")this._encrypt(state,l,r,state.tmp,0);else this._decrypt(state,l,r,state.tmp,0);l=state.tmp[0];r=state.tmp[1];utils.writeUInt32BE(out,l,outOff);utils.writeUInt32BE(out,r,outOff+4)};DES.prototype._pad=function _pad(buffer,off){var value=buffer.length-off;for(var i=off;i<buffer.length;i++)buffer[i]=value;return true};DES.prototype._unpad=function _unpad(buffer){var pad=buffer[buffer.length-1];for(var i=buffer.length-pad;i<buffer.length;i++)assert.equal(buffer[i],pad);return buffer.slice(0,buffer.length-pad)};DES.prototype._encrypt=function _encrypt(state,lStart,rStart,out,off){var l=lStart;var r=rStart;for(var i=0;i<state.keys.length;i+=2){var keyL=state.keys[i];var keyR=state.keys[i+1];utils.expand(r,state.tmp,0);keyL^=state.tmp[0];keyR^=state.tmp[1];var s=utils.substitute(keyL,keyR);var f=utils.permute(s);var t=r;r=(l^f)>>>0;l=t}utils.rip(r,l,out,off)};DES.prototype._decrypt=function _decrypt(state,lStart,rStart,out,off){var l=rStart;var r=lStart;for(var i=state.keys.length-2;i>=0;i-=2){var keyL=state.keys[i];var keyR=state.keys[i+1];utils.expand(l,state.tmp,0);keyL^=state.tmp[0];keyR^=state.tmp[1];var s=utils.substitute(keyL,keyR);var f=utils.permute(s);var t=l;l=(r^f)>>>0;r=t}utils.rip(l,r,out,off)}},{"../des":305,inherits:352,"minimalistic-assert":364}],309:[function(require,module,exports){"use strict";var assert=require("minimalistic-assert");var inherits=require("inherits");var des=require("../des");var Cipher=des.Cipher;var DES=des.DES;function EDEState(type,key){assert.equal(key.length,24,"Invalid key length");var k1=key.slice(0,8);var k2=key.slice(8,16);var k3=key.slice(16,24);if(type==="encrypt"){this.ciphers=[DES.create({type:"encrypt",key:k1}),DES.create({type:"decrypt",key:k2}),DES.create({type:"encrypt",key:k3})]}else{this.ciphers=[DES.create({type:"decrypt",key:k3}),DES.create({type:"encrypt",key:k2}),DES.create({type:"decrypt",key:k1})]}}function EDE(options){Cipher.call(this,options);var state=new EDEState(this.type,this.options.key);this._edeState=state}inherits(EDE,Cipher);module.exports=EDE;EDE.create=function create(options){return new EDE(options)};EDE.prototype._update=function _update(inp,inOff,out,outOff){var state=this._edeState;state.ciphers[0]._update(inp,inOff,out,outOff);state.ciphers[1]._update(out,outOff,out,outOff);state.ciphers[2]._update(out,outOff,out,outOff)};EDE.prototype._pad=DES.prototype._pad;EDE.prototype._unpad=DES.prototype._unpad},{"../des":305,inherits:352,"minimalistic-assert":364}],310:[function(require,module,exports){"use strict";exports.readUInt32BE=function readUInt32BE(bytes,off){var res=bytes[0+off]<<24|bytes[1+off]<<16|bytes[2+off]<<8|bytes[3+off];return res>>>0};exports.writeUInt32BE=function writeUInt32BE(bytes,value,off){bytes[0+off]=value>>>24;bytes[1+off]=value>>>16&255;bytes[2+off]=value>>>8&255;bytes[3+off]=value&255};exports.ip=function ip(inL,inR,out,off){var outL=0;var outR=0;for(var i=6;i>=0;i-=2){for(var j=0;j<=24;j+=8){outL<<=1;outL|=inR>>>j+i&1}for(var j=0;j<=24;j+=8){outL<<=1;outL|=inL>>>j+i&1}}for(var i=6;i>=0;i-=2){for(var j=1;j<=25;j+=8){outR<<=1;outR|=inR>>>j+i&1}for(var j=1;j<=25;j+=8){outR<<=1;outR|=inL>>>j+i&1}}out[off+0]=outL>>>0;out[off+1]=outR>>>0};exports.rip=function rip(inL,inR,out,off){var outL=0;var outR=0;for(var i=0;i<4;i++){for(var j=24;j>=0;j-=8){outL<<=1;outL|=inR>>>j+i&1;outL<<=1;outL|=inL>>>j+i&1}}for(var i=4;i<8;i++){for(var j=24;j>=0;j-=8){outR<<=1;outR|=inR>>>j+i&1;outR<<=1;outR|=inL>>>j+i&1}}out[off+0]=outL>>>0;out[off+1]=outR>>>0};exports.pc1=function pc1(inL,inR,out,off){var outL=0;var outR=0;for(var i=7;i>=5;i--){for(var j=0;j<=24;j+=8){outL<<=1;outL|=inR>>j+i&1}for(var j=0;j<=24;j+=8){outL<<=1;outL|=inL>>j+i&1}}for(var j=0;j<=24;j+=8){outL<<=1;outL|=inR>>j+i&1}for(var i=1;i<=3;i++){for(var j=0;j<=24;j+=8){outR<<=1;outR|=inR>>j+i&1}for(var j=0;j<=24;j+=8){outR<<=1;outR|=inL>>j+i&1}}for(var j=0;j<=24;j+=8){outR<<=1;outR|=inL>>j+i&1}out[off+0]=outL>>>0;out[off+1]=outR>>>0};exports.r28shl=function r28shl(num,shift){return num<<shift&268435455|num>>>28-shift};var pc2table=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];exports.pc2=function pc2(inL,inR,out,off){var outL=0;var outR=0;var len=pc2table.length>>>1;for(var i=0;i<len;i++){outL<<=1;outL|=inL>>>pc2table[i]&1}for(var i=len;i<pc2table.length;i++){outR<<=1;outR|=inR>>>pc2table[i]&1}out[off+0]=outL>>>0;out[off+1]=outR>>>0};exports.expand=function expand(r,out,off){var outL=0;var outR=0;outL=(r&1)<<5|r>>>27;for(var i=23;i>=15;i-=4){outL<<=6;outL|=r>>>i&63}for(var i=11;i>=3;i-=4){outR|=r>>>i&63;outR<<=6}outR|=(r&31)<<1|r>>>31;out[off+0]=outL>>>0;out[off+1]=outR>>>0};var sTable=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];exports.substitute=function substitute(inL,inR){var out=0;for(var i=0;i<4;i++){var b=inL>>>18-i*6&63;var sb=sTable[i*64+b];out<<=4;out|=sb}for(var i=0;i<4;i++){var b=inR>>>18-i*6&63;var sb=sTable[4*64+i*64+b];out<<=4;out|=sb}return out>>>0};var permuteTable=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];exports.permute=function permute(num){var out=0;for(var i=0;i<permuteTable.length;i++){out<<=1;out|=num>>>permuteTable[i]&1}return out>>>0};exports.padSplit=function padSplit(num,size,group){var str=num.toString(2);while(str.length<size)str="0"+str;var out=[];for(var i=0;i<size;i+=group)out.push(str.slice(i,i+group));return out.join(" ")}},{}],311:[function(require,module,exports){(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory();else if(typeof define==="function"&&define.amd)define([],factory);else if(typeof exports==="object")exports["JsDiff"]=factory();else root["JsDiff"]=factory()})(this,function(){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)}([function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.canonicalize=exports.convertChangesToXML=exports.convertChangesToDMP=exports.merge=exports.parsePatch=exports.applyPatches=exports.applyPatch=exports.createPatch=exports.createTwoFilesPatch=exports.structuredPatch=exports.diffArrays=exports.diffJson=exports.diffCss=exports.diffSentences=exports.diffTrimmedLines=exports.diffLines=exports.diffWordsWithSpace=exports.diffWords=exports.diffChars=exports.Diff=undefined;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);var _character=__webpack_require__(2);var _word=__webpack_require__(3);var _line=__webpack_require__(5);var _sentence=__webpack_require__(6);var _css=__webpack_require__(7);var _json=__webpack_require__(8);var _array=__webpack_require__(9);var _apply=__webpack_require__(10);var _parse=__webpack_require__(11);var _merge=__webpack_require__(13);var _create=__webpack_require__(14);var _dmp=__webpack_require__(16);var _xml=__webpack_require__(17);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.Diff=_base2["default"];exports.diffChars=_character.diffChars;exports.diffWords=_word.diffWords;exports.diffWordsWithSpace=_word.diffWordsWithSpace;exports.diffLines=_line.diffLines;exports.diffTrimmedLines=_line.diffTrimmedLines;exports.diffSentences=_sentence.diffSentences;exports.diffCss=_css.diffCss;exports.diffJson=_json.diffJson;exports.diffArrays=_array.diffArrays;exports.structuredPatch=_create.structuredPatch;exports.createTwoFilesPatch=_create.createTwoFilesPatch;exports.createPatch=_create.createPatch;exports.applyPatch=_apply.applyPatch;exports.applyPatches=_apply.applyPatches;exports.parsePatch=_parse.parsePatch;exports.merge=_merge.merge;exports.convertChangesToDMP=_dmp.convertChangesToDMP;exports.convertChangesToXML=_xml.convertChangesToXML;exports.canonicalize=_json.canonicalize},function(module,exports){"use strict";exports.__esModule=true;exports["default"]=Diff;function Diff(){}Diff.prototype={diff:function diff(oldString,newString){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var callback=options.callback;if(typeof options==="function"){callback=options;options={}}this.options=options;var self=this;function done(value){if(callback){setTimeout(function(){callback(undefined,value)},0);return true}else{return value}}oldString=this.castInput(oldString);newString=this.castInput(newString);oldString=this.removeEmpty(this.tokenize(oldString));newString=this.removeEmpty(this.tokenize(newString));var newLen=newString.length,oldLen=oldString.length;var editLength=1;var maxEditLength=newLen+oldLen;var bestPath=[{newPos:-1,components:[]}];var oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen){return done([{value:this.join(newString),count:newString.length}])}function execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=void 0;var addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;if(addPath){bestPath[diagonalPath-1]=undefined}var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&0<=_oldPos&&_oldPos<oldLen;if(!canAdd&&!canRemove){bestPath[diagonalPath]=undefined;continue}if(!canAdd||canRemove&&addPath.newPos<removePath.newPos){basePath=clonePath(removePath);self.pushComponent(basePath.components,undefined,true)}else{basePath=addPath;basePath.newPos++;self.pushComponent(basePath.components,true,undefined)}_oldPos=self.extractCommon(basePath,newString,oldString,diagonalPath);if(basePath.newPos+1>=newLen&&_oldPos+1>=oldLen){return done(buildValues(self,basePath.components,newString,oldString,self.useLongestToken))}else{bestPath[diagonalPath]=basePath}}editLength++}if(callback){(function exec(){setTimeout(function(){if(editLength>maxEditLength){return callback()}if(!execEditLength()){exec()}},0)})()}else{while(editLength<=maxEditLength){var ret=execEditLength();if(ret){return ret}}}},pushComponent:function pushComponent(components,added,removed){var last=components[components.length-1];if(last&&last.added===added&&last.removed===removed){components[components.length-1]={count:last.count+1,added:added,removed:removed}}else{components.push({count:1,added:added,removed:removed})}},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath){var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;while(newPos+1<newLen&&oldPos+1<oldLen&&this.equals(newString[newPos+1],oldString[oldPos+1])){newPos++;oldPos++;commonCount++}if(commonCount){basePath.components.push({count:commonCount})}basePath.newPos=newPos;return oldPos},equals:function equals(left,right){return left===right||this.options.ignoreCase&&left.toLowerCase()===right.toLowerCase()},removeEmpty:function removeEmpty(array){var ret=[];for(var i=0;i<array.length;i++){if(array[i]){ret.push(array[i])}}return ret},castInput:function castInput(value){return value},tokenize:function tokenize(value){return value.split("")},join:function join(chars){return chars.join("")}};function buildValues(diff,components,newString,oldString,useLongestToken){var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;for(;componentPos<componentLen;componentPos++){var component=components[componentPos];if(!component.removed){if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value});component.value=diff.join(value)}else{component.value=diff.join(newString.slice(newPos,newPos+component.count))}newPos+=component.count;if(!component.added){oldPos+=component.count}}else{component.value=diff.join(oldString.slice(oldPos,oldPos+component.count));oldPos+=component.count;if(componentPos&&components[componentPos-1].added){var tmp=components[componentPos-1];components[componentPos-1]=components[componentPos];components[componentPos]=tmp}}}var lastComponent=components[componentLen-1];if(componentLen>1&&(lastComponent.added||lastComponent.removed)&&diff.equals("",lastComponent.value)){components[componentLen-2].value+=lastComponent.value;components.pop()}return components}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)}}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.characterDiff=undefined;exports.diffChars=diffChars;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var characterDiff=exports.characterDiff=new _base2["default"];function diffChars(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options)}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.wordDiff=undefined;exports.diffWords=diffWords;exports.diffWordsWithSpace=diffWordsWithSpace;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);var _params=__webpack_require__(4);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var extendedWordChars=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/;var reWhitespace=/\S/;var wordDiff=exports.wordDiff=new _base2["default"];wordDiff.equals=function(left,right){if(this.options.ignoreCase){left=left.toLowerCase();right=right.toLowerCase()}return left===right||this.options.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right)};wordDiff.tokenize=function(value){var tokens=value.split(/(\s+|\b)/);for(var i=0;i<tokens.length-1;i++){if(!tokens[i+1]&&tokens[i+2]&&extendedWordChars.test(tokens[i])&&extendedWordChars.test(tokens[i+2])){tokens[i]+=tokens[i+2];tokens.splice(i+1,2);i--}}return tokens};function diffWords(oldStr,newStr,options){options=(0,_params.generateOptions)(options,{ignoreWhitespace:true});return wordDiff.diff(oldStr,newStr,options)}function diffWordsWithSpace(oldStr,newStr,options){return wordDiff.diff(oldStr,newStr,options)}},function(module,exports){"use strict";exports.__esModule=true;exports.generateOptions=generateOptions;function generateOptions(options,defaults){if(typeof options==="function"){defaults.callback=options}else if(options){for(var name in options){if(options.hasOwnProperty(name)){defaults[name]=options[name]}}}return defaults}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.lineDiff=undefined;exports.diffLines=diffLines;exports.diffTrimmedLines=diffTrimmedLines;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);var _params=__webpack_require__(4);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var lineDiff=exports.lineDiff=new _base2["default"];lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\n|\r\n)/);if(!linesAndNewlines[linesAndNewlines.length-1]){linesAndNewlines.pop()}for(var i=0;i<linesAndNewlines.length;i++){var line=linesAndNewlines[i];if(i%2&&!this.options.newlineIsToken){retLines[retLines.length-1]+=line}else{if(this.options.ignoreWhitespace){line=line.trim()}retLines.push(line)}}return retLines};function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback)}function diffTrimmedLines(oldStr,newStr,callback){var options=(0,_params.generateOptions)(callback,{ignoreWhitespace:true});return lineDiff.diff(oldStr,newStr,options)}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.sentenceDiff=undefined;exports.diffSentences=diffSentences;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var sentenceDiff=exports.sentenceDiff=new _base2["default"];sentenceDiff.tokenize=function(value){return value.split(/(\S.+?[.!?])(?=\s+|$)/)};function diffSentences(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback)}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.cssDiff=undefined;exports.diffCss=diffCss;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var cssDiff=exports.cssDiff=new _base2["default"];cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\s+)/)};function diffCss(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback)}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.jsonDiff=undefined;var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};exports.diffJson=diffJson;exports.canonicalize=canonicalize;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);var _line=__webpack_require__(5);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var objectPrototypeToString=Object.prototype.toString;var jsonDiff=exports.jsonDiff=new _base2["default"];jsonDiff.useLongestToken=true;jsonDiff.tokenize=_line.lineDiff.tokenize;jsonDiff.castInput=function(value){var undefinedReplacement=this.options.undefinedReplacement;return typeof value==="string"?value:JSON.stringify(canonicalize(value),function(k,v){if(typeof v==="undefined"){return undefinedReplacement}return v},"  ")};jsonDiff.equals=function(left,right){return _base2["default"].prototype.equals.call(jsonDiff,left.replace(/,([\r\n])/g,"$1"),right.replace(/,([\r\n])/g,"$1"))};function diffJson(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options)}function canonicalize(obj,stack,replacementStack){stack=stack||[];replacementStack=replacementStack||[];var i=void 0;for(i=0;i<stack.length;i+=1){if(stack[i]===obj){return replacementStack[i]}}var canonicalizedObj=void 0;if("[object Array]"===objectPrototypeToString.call(obj)){stack.push(obj);canonicalizedObj=new Array(obj.length);replacementStack.push(canonicalizedObj);for(i=0;i<obj.length;i+=1){canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack)}stack.pop();replacementStack.pop();return canonicalizedObj}if(obj&&obj.toJSON){obj=obj.toJSON()}if((typeof obj==="undefined"?"undefined":_typeof(obj))==="object"&&obj!==null){stack.push(obj);canonicalizedObj={};replacementStack.push(canonicalizedObj);var sortedKeys=[],key=void 0;for(key in obj){if(obj.hasOwnProperty(key)){sortedKeys.push(key)}}sortedKeys.sort();for(i=0;i<sortedKeys.length;i+=1){key=sortedKeys[i];canonicalizedObj[key]=canonicalize(obj[key],stack,replacementStack)}stack.pop();replacementStack.pop()}else{canonicalizedObj=obj}return canonicalizedObj}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.arrayDiff=undefined;exports.diffArrays=diffArrays;var _base=__webpack_require__(1);var _base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var arrayDiff=exports.arrayDiff=new _base2["default"];arrayDiff.tokenize=arrayDiff.join=function(value){return value.slice()};function diffArrays(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback)}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.applyPatch=applyPatch;exports.applyPatches=applyPatches;var _parse=__webpack_require__(11);var _distanceIterator=__webpack_require__(12);var _distanceIterator2=_interopRequireDefault(_distanceIterator);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function applyPatch(source,uniDiff){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof uniDiff==="string"){uniDiff=(0,_parse.parsePatch)(uniDiff)}if(Array.isArray(uniDiff)){if(uniDiff.length>1){throw new Error("applyPatch only works with a single input.")}uniDiff=uniDiff[0]}var lines=source.split(/\r\n|[\n\v\f\r\x85]/),delimiters=source.match(/\r\n|[\n\v\f\r\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,line,operation,patchContent){return line===patchContent},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0,offset=0,removeEOFNL=void 0,addEOFNL=void 0;function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=line[0],content=line.substr(1);if(operation===" "||operation==="-"){if(!compareLine(toPos+1,lines[toPos],operation,content)){errorCount++;if(errorCount>fuzzFactor){return false}}toPos++}}return true}for(var i=0;i<hunks.length;i++){var hunk=hunks[i],maxLine=lines.length-hunk.oldLines,localOffset=0,toPos=offset+hunk.oldStart-1;var iterator=(0,_distanceIterator2["default"])(toPos,minLine,maxLine);for(;localOffset!==undefined;localOffset=iterator()){if(hunkFits(hunk,toPos+localOffset)){hunk.offset=offset+=localOffset;break}}if(localOffset===undefined){return false}minLine=hunk.offset+hunk.oldStart+hunk.oldLines}var diffOffset=0;for(var _i=0;_i<hunks.length;_i++){var _hunk=hunks[_i],_toPos=_hunk.oldStart+_hunk.offset+diffOffset-1;diffOffset+=_hunk.newLines-_hunk.oldLines;if(_toPos<0){_toPos=0}for(var j=0;j<_hunk.lines.length;j++){var line=_hunk.lines[j],operation=line[0],content=line.substr(1),delimiter=_hunk.linedelimiters[j];if(operation===" "){_toPos++}else if(operation==="-"){lines.splice(_toPos,1);delimiters.splice(_toPos,1)}else if(operation==="+"){lines.splice(_toPos,0,content);delimiters.splice(_toPos,0,delimiter);_toPos++}else if(operation==="\\"){var previousOperation=_hunk.lines[j-1]?_hunk.lines[j-1][0]:null;if(previousOperation==="+"){removeEOFNL=true}else if(previousOperation==="-"){addEOFNL=true}}}}if(removeEOFNL){while(!lines[lines.length-1]){lines.pop();delimiters.pop()}}else if(addEOFNL){lines.push("");delimiters.push("\n")}for(var _k=0;_k<lines.length-1;_k++){lines[_k]=lines[_k]+delimiters[_k]}return lines.join("")}function applyPatches(uniDiff,options){if(typeof uniDiff==="string"){uniDiff=(0,_parse.parsePatch)(uniDiff)}var currentIndex=0;function processIndex(){var index=uniDiff[currentIndex++];if(!index){return options.complete()}options.loadFile(index,function(err,data){if(err){return options.complete(err)}var updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,function(err){if(err){return options.complete(err)}processIndex()})})}processIndex()}},function(module,exports){"use strict";exports.__esModule=true;exports.parsePatch=parsePatch;function parsePatch(uniDiff){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var diffstr=uniDiff.split(/\r\n|[\n\v\f\r\x85]/),delimiters=uniDiff.match(/\r\n|[\n\v\f\r\x85]/g)||[],list=[],i=0;function parseIndex(){var index={};list.push(index);while(i<diffstr.length){var line=diffstr[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(line)){break}var header=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(line);if(header){index.index=header[1]}i++}parseFileHeader(index);parseFileHeader(index);index.hunks=[];while(i<diffstr.length){var _line=diffstr[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(_line)){break}else if(/^@@/.test(_line)){index.hunks.push(parseHunk())}else if(_line&&options.strict){throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(_line))}else{i++}}}function parseFileHeader(index){var headerPattern=/^(---|\+\+\+)\s+([\S ]*)(?:\t(.*?)\s*)?$/;var fileHeader=headerPattern.exec(diffstr[i]);if(fileHeader){var keyPrefix=fileHeader[1]==="---"?"old":"new";var fileName=fileHeader[2].replace(/\\\\/g,"\\");if(/^".*"$/.test(fileName)){fileName=fileName.substr(1,fileName.length-2)}index[keyPrefix+"FileName"]=fileName;index[keyPrefix+"Header"]=fileHeader[3];i++}}function parseHunk(){var chunkHeaderIndex=i,chunkHeaderLine=diffstr[i++],chunkHeader=chunkHeaderLine.split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/);var hunk={oldStart:+chunkHeader[1],oldLines:+chunkHeader[2]||1,newStart:+chunkHeader[3],newLines:+chunkHeader[4]||1,lines:[],linedelimiters:[]};var addCount=0,removeCount=0;for(;i<diffstr.length;i++){if(diffstr[i].indexOf("--- ")===0&&i+2<diffstr.length&&diffstr[i+1].indexOf("+++ ")===0&&diffstr[i+2].indexOf("@@")===0){break}var operation=diffstr[i][0];if(operation==="+"||operation==="-"||operation===" "||operation==="\\"){hunk.lines.push(diffstr[i]);hunk.linedelimiters.push(delimiters[i]||"\n");if(operation==="+"){addCount++}else if(operation==="-"){removeCount++}else if(operation===" "){addCount++;removeCount++}}else{break}}if(!addCount&&hunk.newLines===1){hunk.newLines=0}if(!removeCount&&hunk.oldLines===1){hunk.oldLines=0}if(options.strict){if(addCount!==hunk.newLines){throw new Error("Added line count did not match for hunk at line "+(chunkHeaderIndex+1))}if(removeCount!==hunk.oldLines){throw new Error("Removed line count did not match for hunk at line "+(chunkHeaderIndex+1))}}return hunk}while(i<diffstr.length){parseIndex()}return list}},function(module,exports){"use strict";exports.__esModule=true;exports["default"]=function(start,minLine,maxLine){var wantForward=true,backwardExhausted=false,forwardExhausted=false,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){if(backwardExhausted){localOffset++}else{wantForward=false}if(start+localOffset<=maxLine){return localOffset}forwardExhausted=true}if(!backwardExhausted){if(!forwardExhausted){wantForward=true}if(minLine<=start-localOffset){return-localOffset++}backwardExhausted=true;return iterator()}}}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.calcLineCount=calcLineCount;exports.merge=merge;var _create=__webpack_require__(14);var _parse=__webpack_require__(11);var _array=__webpack_require__(15);function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function calcLineCount(hunk){var conflicted=false;hunk.oldLines=0;hunk.newLines=0;hunk.lines.forEach(function(line){if(typeof line!=="string"){conflicted=true;return}if(line[0]==="+"||line[0]===" "){hunk.newLines++}if(line[0]==="-"||line[0]===" "){hunk.oldLines++}});if(conflicted){delete hunk.oldLines;delete hunk.newLines}}function merge(mine,theirs,base){mine=loadPatch(mine,base);theirs=loadPatch(theirs,base);var ret={};if(mine.index||theirs.index){ret.index=mine.index||theirs.index}if(mine.newFileName||theirs.newFileName){if(!fileNameChanged(mine)){ret.oldFileName=theirs.oldFileName||mine.oldFileName;ret.newFileName=theirs.newFileName||mine.newFileName;ret.oldHeader=theirs.oldHeader||mine.oldHeader;ret.newHeader=theirs.newHeader||mine.newHeader}else if(!fileNameChanged(theirs)){ret.oldFileName=mine.oldFileName;ret.newFileName=mine.newFileName;ret.oldHeader=mine.oldHeader;ret.newHeader=mine.newHeader}else{ret.oldFileName=selectField(ret,mine.oldFileName,theirs.oldFileName);ret.newFileName=selectField(ret,mine.newFileName,theirs.newFileName);ret.oldHeader=selectField(ret,mine.oldHeader,theirs.oldHeader);ret.newHeader=selectField(ret,mine.newHeader,theirs.newHeader)}}ret.hunks=[];var mineIndex=0,theirsIndex=0,mineOffset=0,theirsOffset=0;while(mineIndex<mine.hunks.length||theirsIndex<theirs.hunks.length){var mineCurrent=mine.hunks[mineIndex]||{oldStart:Infinity},theirsCurrent=theirs.hunks[theirsIndex]||{oldStart:Infinity};if(hunkBefore(mineCurrent,theirsCurrent)){ret.hunks.push(cloneHunk(mineCurrent,mineOffset));mineIndex++;theirsOffset+=mineCurrent.newLines-mineCurrent.oldLines}else if(hunkBefore(theirsCurrent,mineCurrent)){ret.hunks.push(cloneHunk(theirsCurrent,theirsOffset));theirsIndex++;mineOffset+=theirsCurrent.newLines-theirsCurrent.oldLines}else{var mergedHunk={oldStart:Math.min(mineCurrent.oldStart,theirsCurrent.oldStart),oldLines:0,newStart:Math.min(mineCurrent.newStart+mineOffset,theirsCurrent.oldStart+theirsOffset),newLines:0,lines:[]};mergeLines(mergedHunk,mineCurrent.oldStart,mineCurrent.lines,theirsCurrent.oldStart,theirsCurrent.lines);theirsIndex++;mineIndex++;ret.hunks.push(mergedHunk)}}return ret}function loadPatch(param,base){if(typeof param==="string"){if(/^@@/m.test(param)||/^Index:/m.test(param)){return(0,_parse.parsePatch)(param)[0]}if(!base){throw new Error("Must provide a base reference or pass in a patch")}return(0,_create.structuredPatch)(undefined,undefined,base,param)}return param}function fileNameChanged(patch){return patch.newFileName&&patch.newFileName!==patch.oldFileName}function selectField(index,mine,theirs){if(mine===theirs){return mine}else{index.conflict=true;return{mine:mine,theirs:theirs}}}function hunkBefore(test,check){return test.oldStart<check.oldStart&&test.oldStart+test.oldLines<check.oldStart}function cloneHunk(hunk,offset){return{oldStart:hunk.oldStart,oldLines:hunk.oldLines,newStart:hunk.newStart+offset,newLines:hunk.newLines,lines:hunk.lines}}function mergeLines(hunk,mineOffset,mineLines,theirOffset,theirLines){var mine={offset:mineOffset,lines:mineLines,index:0},their={offset:theirOffset,lines:theirLines,index:0};insertLeading(hunk,mine,their);insertLeading(hunk,their,mine);while(mine.index<mine.lines.length&&their.index<their.lines.length){var mineCurrent=mine.lines[mine.index],theirCurrent=their.lines[their.index];if((mineCurrent[0]==="-"||mineCurrent[0]==="+")&&(theirCurrent[0]==="-"||theirCurrent[0]==="+")){mutualChange(hunk,mine,their)}else if(mineCurrent[0]==="+"&&theirCurrent[0]===" "){var _hunk$lines;(_hunk$lines=hunk.lines).push.apply(_hunk$lines,_toConsumableArray(collectChange(mine)))}else if(theirCurrent[0]==="+"&&mineCurrent[0]===" "){var _hunk$lines2;(_hunk$lines2=hunk.lines).push.apply(_hunk$lines2,_toConsumableArray(collectChange(their)))}else if(mineCurrent[0]==="-"&&theirCurrent[0]===" "){removal(hunk,mine,their)}else if(theirCurrent[0]==="-"&&mineCurrent[0]===" "){removal(hunk,their,mine,true)}else if(mineCurrent===theirCurrent){hunk.lines.push(mineCurrent);mine.index++;their.index++}else{conflict(hunk,collectChange(mine),collectChange(their))}}insertTrailing(hunk,mine);insertTrailing(hunk,their);calcLineCount(hunk)}function mutualChange(hunk,mine,their){var myChanges=collectChange(mine),theirChanges=collectChange(their);if(allRemoves(myChanges)&&allRemoves(theirChanges)){if((0,_array.arrayStartsWith)(myChanges,theirChanges)&&skipRemoveSuperset(their,myChanges,myChanges.length-theirChanges.length)){var _hunk$lines3;(_hunk$lines3=hunk.lines).push.apply(_hunk$lines3,_toConsumableArray(myChanges));return}else if((0,_array.arrayStartsWith)(theirChanges,myChanges)&&skipRemoveSuperset(mine,theirChanges,theirChanges.length-myChanges.length)){var _hunk$lines4;(_hunk$lines4=hunk.lines).push.apply(_hunk$lines4,_toConsumableArray(theirChanges));return}}else if((0,_array.arrayEqual)(myChanges,theirChanges)){var _hunk$lines5;(_hunk$lines5=hunk.lines).push.apply(_hunk$lines5,_toConsumableArray(myChanges));return}conflict(hunk,myChanges,theirChanges)}function removal(hunk,mine,their,swap){var myChanges=collectChange(mine),theirChanges=collectContext(their,myChanges);if(theirChanges.merged){var _hunk$lines6;(_hunk$lines6=hunk.lines).push.apply(_hunk$lines6,_toConsumableArray(theirChanges.merged))}else{conflict(hunk,swap?theirChanges:myChanges,swap?myChanges:theirChanges)}}function conflict(hunk,mine,their){hunk.conflict=true;hunk.lines.push({conflict:true,mine:mine,theirs:their})}function insertLeading(hunk,insert,their){while(insert.offset<their.offset&&insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);insert.offset++}}function insertTrailing(hunk,insert){while(insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line)}}function collectChange(state){var ret=[],operation=state.lines[state.index][0];while(state.index<state.lines.length){var line=state.lines[state.index];if(operation==="-"&&line[0]==="+"){operation="+"}if(operation===line[0]){ret.push(line);state.index++}else{break}}return ret}function collectContext(state,matchChanges){var changes=[],merged=[],matchIndex=0,contextChanges=false,conflicted=false;while(matchIndex<matchChanges.length&&state.index<state.lines.length){var change=state.lines[state.index],match=matchChanges[matchIndex];if(match[0]==="+"){break}contextChanges=contextChanges||change[0]!==" ";merged.push(match);matchIndex++;if(change[0]==="+"){conflicted=true;while(change[0]==="+"){changes.push(change);change=state.lines[++state.index]}}if(match.substr(1)===change.substr(1)){changes.push(change);state.index++}else{conflicted=true}}if((matchChanges[matchIndex]||"")[0]==="+"&&contextChanges){conflicted=true}if(conflicted){return changes}while(matchIndex<matchChanges.length){merged.push(matchChanges[matchIndex++])}return{merged:merged,changes:changes}}function allRemoves(changes){return changes.reduce(function(prev,change){return prev&&change[0]==="-"},true)}function skipRemoveSuperset(state,removeChanges,delta){for(var i=0;i<delta;i++){var changeContent=removeChanges[removeChanges.length-delta+i].substr(1);if(state.lines[state.index+i]!==" "+changeContent){return false}}state.index+=delta;return true}},function(module,exports,__webpack_require__){"use strict";exports.__esModule=true;exports.structuredPatch=structuredPatch;exports.createTwoFilesPatch=createTwoFilesPatch;exports.createPatch=createPatch;var _line=__webpack_require__(5);function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){if(!options){options={}}if(typeof options.context==="undefined"){options.context=4}var diff=(0,_line.diffLines)(oldStr,newStr,options);diff.push({value:"",lines:[]});function contextLines(lines){return lines.map(function(entry){return" "+entry})}var hunks=[];var oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1;var _loop=function _loop(i){var current=diff[i],lines=current.lines||current.value.replace(/\n$/,"").split("\n");current.lines=lines;if(current.added||current.removed){var _curRange;if(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine;newRangeStart=newLine;if(prev){curRange=options.context>0?contextLines(prev.lines.slice(-options.context)):[];oldRangeStart-=curRange.length;newRangeStart-=curRange.length}}(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?"+":"-")+entry})));if(current.added){newLine+=lines.length}else{oldLine+=lines.length}}else{if(oldRangeStart){if(lines.length<=options.context*2&&i<diff.length-2){var _curRange2;(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)))}else{var _curRange3;var contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){var oldEOFNewline=/\n$/.test(oldStr);var newEOFNewline=/\n$/.test(newStr);if(lines.length==0&&!oldEOFNewline){curRange.splice(hunk.oldLines,0,"\\ No newline at end of file")}else if(!oldEOFNewline||!newEOFNewline){curRange.push("\\ No newline at end of file")}}hunks.push(hunk);oldRangeStart=0;newRangeStart=0;curRange=[]}}oldLine+=lines.length;newLine+=lines.length}};for(var i=0;i<diff.length;i++){_loop(i)}return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks}}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){var diff=structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options);var ret=[];if(oldFileName==newFileName){ret.push("Index: "+oldFileName)}ret.push("===================================================================");ret.push("--- "+diff.oldFileName+(typeof diff.oldHeader==="undefined"?"":"\t"+diff.oldHeader));ret.push("+++ "+diff.newFileName+(typeof diff.newHeader==="undefined"?"":"\t"+diff.newHeader));for(var i=0;i<diff.hunks.length;i++){var hunk=diff.hunks[i];ret.push("@@ -"+hunk.oldStart+","+hunk.oldLines+" +"+hunk.newStart+","+hunk.newLines+" @@");ret.push.apply(ret,hunk.lines)}return ret.join("\n")+"\n"}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options)}},function(module,exports){"use strict";exports.__esModule=true;exports.arrayEqual=arrayEqual;exports.arrayStartsWith=arrayStartsWith;function arrayEqual(a,b){if(a.length!==b.length){return false}return arrayStartsWith(a,b)}function arrayStartsWith(array,start){if(start.length>array.length){return false}for(var i=0;i<start.length;i++){if(start[i]!==array[i]){return false}}return true}},function(module,exports){"use strict";exports.__esModule=true;exports.convertChangesToDMP=convertChangesToDMP;function convertChangesToDMP(changes){var ret=[],change=void 0,operation=void 0;for(var i=0;i<changes.length;i++){change=changes[i];if(change.added){operation=1}else if(change.removed){operation=-1}else{operation=0}ret.push([operation,change.value])}return ret}},function(module,exports){"use strict";exports.__esModule=true;exports.convertChangesToXML=convertChangesToXML;function convertChangesToXML(changes){var ret=[];for(var i=0;i<changes.length;i++){var change=changes[i];if(change.added){ret.push("<ins>")}else if(change.removed){ret.push("<del>")}ret.push(escapeHTML(change.value));if(change.added){ret.push("</ins>")}else if(change.removed){ret.push("</del>")}}return ret.join("")}function escapeHTML(s){var n=s;n=n.replace(/&/g,"&amp;");n=n.replace(/</g,"&lt;");n=n.replace(/>/g,"&gt;");n=n.replace(/"/g,"&quot;");return n}}])})},{}],312:[function(require,module,exports){(function(Buffer){var generatePrime=require("./lib/generatePrime");var primes=require("./lib/primes.json");var DH=require("./lib/dh");function getDiffieHellman(mod){var prime=new Buffer(primes[mod].prime,"hex");var gen=new Buffer(primes[mod].gen,"hex");return new DH(prime,gen)}var ENCODINGS={binary:true,hex:true,base64:true};function createDiffieHellman(prime,enc,generator,genc){if(Buffer.isBuffer(enc)||ENCODINGS[enc]===undefined){return createDiffieHellman(prime,"binary",enc,generator)}enc=enc||"binary";genc=genc||"binary";generator=generator||new Buffer([2]);if(!Buffer.isBuffer(generator)){generator=new Buffer(generator,genc)}if(typeof prime==="number"){return new DH(generatePrime(prime,generator),generator,true)}if(!Buffer.isBuffer(prime)){prime=new Buffer(prime,enc)}return new DH(prime,generator,true)}exports.DiffieHellmanGroup=exports.createDiffieHellmanGroup=exports.getDiffieHellman=getDiffieHellman;exports.createDiffieHellman=exports.DiffieHellman=createDiffieHellman}).call(this,require("buffer").Buffer)},{"./lib/dh":313,"./lib/generatePrime":314,"./lib/primes.json":315,buffer:150}],313:[function(require,module,exports){(function(Buffer){var BN=require("bn.js");var MillerRabin=require("miller-rabin");var millerRabin=new MillerRabin;var TWENTYFOUR=new BN(24);var ELEVEN=new BN(11);var TEN=new BN(10);var THREE=new BN(3);var SEVEN=new BN(7);var primes=require("./generatePrime");var randomBytes=require("randombytes");module.exports=DH;function setPublicKey(pub,enc){enc=enc||"utf8";if(!Buffer.isBuffer(pub)){pub=new Buffer(pub,enc)}this._pub=new BN(pub);return this}function setPrivateKey(priv,enc){enc=enc||"utf8";if(!Buffer.isBuffer(priv)){priv=new Buffer(priv,enc)}this._priv=new BN(priv);return this}var primeCache={};function checkPrime(prime,generator){var gen=generator.toString("hex");var hex=[gen,prime.toString(16)].join("_");if(hex in primeCache){return primeCache[hex]}var error=0;if(prime.isEven()||!primes.simpleSieve||!primes.fermatTest(prime)||!millerRabin.test(prime)){error+=1;if(gen==="02"||gen==="05"){error+=8}else{error+=4}primeCache[hex]=error;return error}if(!millerRabin.test(prime.shrn(1))){error+=2}var rem;switch(gen){case"02":if(prime.mod(TWENTYFOUR).cmp(ELEVEN)){error+=8}break;case"05":rem=prime.mod(TEN);if(rem.cmp(THREE)&&rem.cmp(SEVEN)){error+=8}break;default:error+=4}primeCache[hex]=error;return error}function DH(prime,generator,malleable){this.setGenerator(generator);this.__prime=new BN(prime);this._prime=BN.mont(this.__prime);this._primeLen=prime.length;this._pub=undefined;this._priv=undefined;this._primeCode=undefined;if(malleable){this.setPublicKey=setPublicKey;this.setPrivateKey=setPrivateKey}else{this._primeCode=8}}Object.defineProperty(DH.prototype,"verifyError",{enumerable:true,get:function(){if(typeof this._primeCode!=="number"){this._primeCode=checkPrime(this.__prime,this.__gen)}return this._primeCode}});DH.prototype.generateKeys=function(){if(!this._priv){this._priv=new BN(randomBytes(this._primeLen))}this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed();return this.getPublicKey()};DH.prototype.computeSecret=function(other){other=new BN(other);other=other.toRed(this._prime);var secret=other.redPow(this._priv).fromRed();var out=new Buffer(secret.toArray());var prime=this.getPrime();if(out.length<prime.length){var front=new Buffer(prime.length-out.length);front.fill(0);out=Buffer.concat([front,out])}return out};DH.prototype.getPublicKey=function getPublicKey(enc){return formatReturnValue(this._pub,enc)};DH.prototype.getPrivateKey=function getPrivateKey(enc){return formatReturnValue(this._priv,enc)};DH.prototype.getPrime=function(enc){return formatReturnValue(this.__prime,enc)};DH.prototype.getGenerator=function(enc){return formatReturnValue(this._gen,enc)};DH.prototype.setGenerator=function(gen,enc){enc=enc||"utf8";if(!Buffer.isBuffer(gen)){gen=new Buffer(gen,enc)}this.__gen=gen;this._gen=new BN(gen);return this};function formatReturnValue(bn,enc){var buf=new Buffer(bn.toArray());if(!enc){return buf}else{return buf.toString(enc)}}}).call(this,require("buffer").Buffer)},{"./generatePrime":314,"bn.js":116,buffer:150,"miller-rabin":363,randombytes:418}],314:[function(require,module,exports){var randomBytes=require("randombytes");module.exports=findPrime;findPrime.simpleSieve=simpleSieve;findPrime.fermatTest=fermatTest;var BN=require("bn.js");var TWENTYFOUR=new BN(24);var MillerRabin=require("miller-rabin");var millerRabin=new MillerRabin;var ONE=new BN(1);var TWO=new BN(2);var FIVE=new BN(5);var SIXTEEN=new BN(16);var EIGHT=new BN(8);var TEN=new BN(10);var THREE=new BN(3);var SEVEN=new BN(7);var ELEVEN=new BN(11);var FOUR=new BN(4);var TWELVE=new BN(12);var primes=null;function _getPrimes(){if(primes!==null)return primes;var limit=1048576;var res=[];res[0]=2;for(var i=1,k=3;k<limit;k+=2){var sqrt=Math.ceil(Math.sqrt(k));for(var j=0;j<i&&res[j]<=sqrt;j++)if(k%res[j]===0)break;if(i!==j&&res[j]<=sqrt)continue;res[i++]=k}primes=res;return res}function simpleSieve(p){var primes=_getPrimes();for(var i=0;i<primes.length;i++)if(p.modn(primes[i])===0){if(p.cmpn(primes[i])===0){return true}else{return false}}return true}function fermatTest(p){var red=BN.mont(p);return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1)===0}function findPrime(bits,gen){if(bits<16){if(gen===2||gen===5){return new BN([140,123])}else{return new BN([140,39])}}gen=new BN(gen);var num,n2;while(true){num=new BN(randomBytes(Math.ceil(bits/8)));while(num.bitLength()>bits){num.ishrn(1)}if(num.isEven()){num.iadd(ONE)}if(!num.testn(1)){num.iadd(TWO)}if(!gen.cmp(TWO)){while(num.mod(TWENTYFOUR).cmp(ELEVEN)){num.iadd(FOUR)}}else if(!gen.cmp(FIVE)){while(num.mod(TEN).cmp(THREE)){num.iadd(FOUR)}}n2=num.shrn(1);if(simpleSieve(n2)&&simpleSieve(num)&&fermatTest(n2)&&fermatTest(num)&&millerRabin.test(n2)&&millerRabin.test(num)){return num}}}},{"bn.js":116,"miller-rabin":363,randombytes:418}],315:[function(require,module,exports){module.exports={modp1:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},modp2:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},modp5:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},modp14:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},modp15:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},modp16:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},modp17:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},modp18:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}},{}],316:[function(require,module,exports){(function(root,f){"use strict";if(typeof module!=="undefined"&&module.exports)module.exports=f(require("tweetnacl/nacl-fast"));else root.ed2curve=f(root.nacl)})(this,function(nacl){"use strict";if(!nacl)throw new Error("tweetnacl not loaded");var gf=function(init){var i,r=new Float64Array(16);if(init)for(i=0;i<init.length;i++)r[i]=init[i];return r};var gf0=gf(),gf1=gf([1]),D=gf([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),I=gf([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function car25519(o){var c;var i;for(i=0;i<16;i++){o[i]+=65536;c=Math.floor(o[i]/65536);o[(i+1)*(i<15?1:0)]+=c-1+37*(c-1)*(i===15?1:0);o[i]-=c*65536}}function sel25519(p,q,b){var t,c=~(b-1);for(var i=0;i<16;i++){t=c&(p[i]^q[i]);p[i]^=t;q[i]^=t}}function unpack25519(o,n){var i;for(i=0;i<16;i++)o[i]=n[2*i]+(n[2*i+1]<<8);o[15]&=32767}function A(o,a,b){var i;for(i=0;i<16;i++)o[i]=a[i]+b[i]|0}function Z(o,a,b){var i;for(i=0;i<16;i++)o[i]=a[i]-b[i]|0}function M(o,a,b){var i,j,t=new Float64Array(31);for(i=0;i<31;i++)t[i]=0;for(i=0;i<16;i++){for(j=0;j<16;j++){t[i+j]+=a[i]*b[j]}}for(i=0;i<15;i++){t[i]+=38*t[i+16]}for(i=0;i<16;i++)o[i]=t[i];car25519(o);car25519(o)}function S(o,a){M(o,a,a)}function inv25519(o,i){var c=gf();var a;for(a=0;a<16;a++)c[a]=i[a];for(a=253;a>=0;a--){S(c,c);if(a!==2&&a!==4)M(c,c,i)}for(a=0;a<16;a++)o[a]=c[a]}function pack25519(o,n){var i,j,b;var m=gf(),t=gf();for(i=0;i<16;i++)t[i]=n[i];car25519(t);car25519(t);car25519(t);for(j=0;j<2;j++){m[0]=t[0]-65517;for(i=1;i<15;i++){m[i]=t[i]-65535-(m[i-1]>>16&1);m[i-1]&=65535}m[15]=t[15]-32767-(m[14]>>16&1);b=m[15]>>16&1;m[14]&=65535;sel25519(t,m,1-b)}for(i=0;i<16;i++){o[2*i]=t[i]&255;o[2*i+1]=t[i]>>8}}function par25519(a){var d=new Uint8Array(32);pack25519(d,a);return d[0]&1}function vn(x,xi,y,yi,n){var i,d=0;for(i=0;i<n;i++)d|=x[xi+i]^y[yi+i];return(1&d-1>>>8)-1}function crypto_verify_32(x,xi,y,yi){return vn(x,xi,y,yi,32)}function neq25519(a,b){var c=new Uint8Array(32),d=new Uint8Array(32);pack25519(c,a);pack25519(d,b);return crypto_verify_32(c,0,d,0)}function pow2523(o,i){var c=gf();var a;for(a=0;a<16;a++)c[a]=i[a];for(a=250;a>=0;a--){S(c,c);if(a!==1)M(c,c,i)}for(a=0;a<16;a++)o[a]=c[a]}function set25519(r,a){var i;for(i=0;i<16;i++)r[i]=a[i]|0}function unpackneg(r,p){var t=gf(),chk=gf(),num=gf(),den=gf(),den2=gf(),den4=gf(),den6=gf();set25519(r[2],gf1);unpack25519(r[1],p);S(num,r[1]);M(den,num,D);Z(num,num,r[2]);A(den,r[2],den);S(den2,den);S(den4,den2);M(den6,den4,den2);M(t,den6,num);M(t,t,den);pow2523(t,t);M(t,t,num);M(t,t,den);M(t,t,den);M(r[0],t,den);S(chk,r[0]);M(chk,chk,den);if(neq25519(chk,num))M(r[0],r[0],I);S(chk,r[0]);M(chk,chk,den);if(neq25519(chk,num))return-1;if(par25519(r[0])===p[31]>>7)Z(r[0],gf0,r[0]);M(r[3],r[0],r[1]);return 0}function convertPublicKey(pk){var z=new Uint8Array(32),q=[gf(),gf(),gf(),gf()],a=gf(),b=gf();if(unpackneg(q,pk))return null;var y=q[1];A(a,gf1,y);Z(b,gf1,y);inv25519(b,b);M(a,a,b);pack25519(z,a);return z}function convertSecretKey(sk){var d=new Uint8Array(64),o=new Uint8Array(32),i;nacl.lowlevel.crypto_hash(d,sk,32);d[0]&=248;d[31]&=127;d[31]|=64;for(i=0;i<32;i++)o[i]=d[i];for(i=0;i<64;i++)d[i]=0;return o}function convertKeyPair(edKeyPair){var publicKey=convertPublicKey(edKeyPair.publicKey);if(!publicKey)return null;return{publicKey:publicKey,secretKey:convertSecretKey(edKeyPair.secretKey)}}return{convertPublicKey:convertPublicKey,convertSecretKey:convertSecretKey,convertKeyPair:convertKeyPair}})},{"tweetnacl/nacl-fast":485}],317:[function(require,module,exports){"use strict";var elliptic=exports;elliptic.version=require("../package.json").version;elliptic.utils=require("./elliptic/utils");elliptic.rand=require("brorand");elliptic.curve=require("./elliptic/curve");elliptic.curves=require("./elliptic/curves");elliptic.ec=require("./elliptic/ec");elliptic.eddsa=require("./elliptic/eddsa")},{"../package.json":332,"./elliptic/curve":320,"./elliptic/curves":323,"./elliptic/ec":324,"./elliptic/eddsa":327,"./elliptic/utils":331,brorand:117}],318:[function(require,module,exports){"use strict";var BN=require("bn.js");var elliptic=require("../../elliptic");var utils=elliptic.utils;var getNAF=utils.getNAF;var getJSF=utils.getJSF;var assert=utils.assert;function BaseCurve(type,conf){this.type=type;this.p=new BN(conf.p,16);this.red=conf.prime?BN.red(conf.prime):BN.mont(this.p);this.zero=new BN(0).toRed(this.red);this.one=new BN(1).toRed(this.red);this.two=new BN(2).toRed(this.red);this.n=conf.n&&new BN(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}module.exports=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error("Not implemented")};BaseCurve.prototype.validate=function validate(){throw new Error("Not implemented")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(p,k){assert(p.precomputed);var doubles=p._getDoubles();var naf=getNAF(k,1);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;var repr=[];for(var j=0;j<naf.length;j+=doubles.step){var nafW=0;for(var k=j+doubles.step-1;k>=j;k--)nafW=(nafW<<1)+naf[k];repr.push(nafW)}var a=this.jpoint(null,null,null);var b=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(var j=0;j<repr.length;j++){var nafW=repr[j];if(nafW===i)b=b.mixedAdd(doubles.points[j]);else if(nafW===-i)b=b.mixedAdd(doubles.points[j].neg())}a=a.add(b)}return a.toP()};BaseCurve.prototype._wnafMul=function _wnafMul(p,k){var w=4;var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;var naf=getNAF(k,w);var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){for(var k=0;i>=0&&naf[i]===0;i--)k++;if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;var z=naf[i];assert(z!==0);if(p.type==="affine"){if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg())}else{if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg())}}return p.type==="affine"?acc.toP():acc};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;var max=0;for(var i=0;i<len;i++){var p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points}for(var i=len-1;i>=1;i-=2){var a=i-1;var b=i;if(wndWidth[a]!==1||wndWidth[b]!==1){naf[a]=getNAF(coeffs[a],wndWidth[a]);naf[b]=getNAF(coeffs[b],wndWidth[b]);max=Math.max(naf[a].length,max);max=Math.max(naf[b].length,max);continue}var comb=[points[a],null,null,points[b]];if(points[a].y.cmp(points[b].y)===0){comb[1]=points[a].add(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg())}else if(points[a].y.cmp(points[b].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].add(points[b].neg())}else{comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg())}var index=[-3,-1,-5,-7,0,7,5,1,3];var jsf=getJSF(coeffs[a],coeffs[b]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b]=new Array(max);for(var j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b][j]=0;wnd[a]=comb}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(var i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(var j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false}if(!zero)break;k++;i--}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(var j=0;j<len;j++){var z=tmp[j];var p;if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type==="affine")acc=acc.mixedAdd(p);else acc=acc.add(p)}}for(var i=0;i<len;i++)wnd[i]=null;if(jacobianResult)return acc;else return acc.toP()};function BasePoint(curve,type){this.curve=curve;this.type=type;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error("Not implemented")};BasePoint.prototype.validate=function validate(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint(bytes,enc){bytes=utils.toArray(bytes,enc);var len=this.p.byteLength();if((bytes[0]===4||bytes[0]===6||bytes[0]===7)&&bytes.length-1===2*len){if(bytes[0]===6)assert(bytes[bytes.length-1]%2===0);else if(bytes[0]===7)assert(bytes[bytes.length-1]%2===1);var res=this.point(bytes.slice(1,1+len),bytes.slice(1+len,1+2*len));return res}else if((bytes[0]===2||bytes[0]===3)&&bytes.length-1===len){return this.pointFromX(bytes.slice(1,1+len),bytes[0]===3)}throw new Error("Unknown point format")};BasePoint.prototype.encodeCompressed=function encodeCompressed(enc){return this.encode(enc,true)};BasePoint.prototype._encode=function _encode(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray("be",len);if(compact)return[this.getY().isEven()?2:3].concat(x);return[4].concat(x,this.getY().toArray("be",len))};BasePoint.prototype.encode=function encode(enc,compact){return utils.encode(this._encode(compact),enc)};BasePoint.prototype.precompute=function precompute(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this};BasePoint.prototype._hasDoubles=function _hasDoubles(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step)};BasePoint.prototype._getDoubles=function _getDoubles(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++)acc=acc.dbl();doubles.push(acc)}return{step:step,points:doubles}};BasePoint.prototype._getNAFPoints=function _getNAFPoints(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl=max===1?null:this.dbl();for(var i=1;i<max;i++)res[i]=res[i-1].add(dbl);return{wnd:wnd,points:res}};BasePoint.prototype._getBeta=function _getBeta(){return null};BasePoint.prototype.dblp=function dblp(k){var r=this;for(var i=0;i<k;i++)r=r.dbl();return r}},{"../../elliptic":317,"bn.js":116}],319:[function(require,module,exports){"use strict";var curve=require("../curve");var elliptic=require("../../elliptic");var BN=require("bn.js");var inherits=require("inherits");var Base=curve.base;var assert=elliptic.utils.assert;function EdwardsCurve(conf){this.twisted=(conf.a|0)!==1;this.mOneA=this.twisted&&(conf.a|0)===-1;this.extended=this.mOneA;Base.call(this,"edwards",conf);this.a=new BN(conf.a,16).umod(this.red.m);this.a=this.a.toRed(this.red);this.c=new BN(conf.c,16).toRed(this.red);this.c2=this.c.redSqr();this.d=new BN(conf.d,16).toRed(this.red);this.dd=this.d.redAdd(this.d);assert(!this.twisted||this.c.fromRed().cmpn(1)===0);this.oneC=(conf.c|0)===1}inherits(EdwardsCurve,Base);module.exports=EdwardsCurve;EdwardsCurve.prototype._mulA=function _mulA(num){if(this.mOneA)return num.redNeg();else return this.a.redMul(num)};EdwardsCurve.prototype._mulC=function _mulC(num){if(this.oneC)return num;else return this.c.redMul(num)};EdwardsCurve.prototype.jpoint=function jpoint(x,y,z,t){return this.point(x,y,z,t)};EdwardsCurve.prototype.pointFromX=function pointFromX(x,odd){x=new BN(x,16);if(!x.red)x=x.toRed(this.red);var x2=x.redSqr();var rhs=this.c2.redSub(this.a.redMul(x2));var lhs=this.one.redSub(this.c2.redMul(this.d).redMul(x2));var y2=rhs.redMul(lhs.redInvm());var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error("invalid point");var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y)};EdwardsCurve.prototype.pointFromY=function pointFromY(y,odd){y=new BN(y,16);if(!y.red)y=y.toRed(this.red);var y2=y.redSqr();var lhs=y2.redSub(this.one);var rhs=y2.redMul(this.d).redAdd(this.one);var x2=lhs.redMul(rhs.redInvm());if(x2.cmp(this.zero)===0){if(odd)throw new Error("invalid point");else return this.point(this.zero,y)}var x=x2.redSqrt();if(x.redSqr().redSub(x2).cmp(this.zero)!==0)throw new Error("invalid point");if(x.isOdd()!==odd)x=x.redNeg();return this.point(x,y)};EdwardsCurve.prototype.validate=function validate(point){if(point.isInfinity())return true;point.normalize();var x2=point.x.redSqr();var y2=point.y.redSqr();var lhs=x2.redMul(this.a).redAdd(y2);var rhs=this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));return lhs.cmp(rhs)===0};function Point(curve,x,y,z,t){Base.BasePoint.call(this,curve,"projective");if(x===null&&y===null&&z===null){this.x=this.curve.zero;this.y=this.curve.one;this.z=this.curve.one;this.t=this.curve.zero;this.zOne=true}else{this.x=new BN(x,16);this.y=new BN(y,16);this.z=z?new BN(z,16):this.curve.one;this.t=t&&new BN(t,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);if(this.t&&!this.t.red)this.t=this.t.toRed(this.curve.red);this.zOne=this.z===this.curve.one;if(this.curve.extended&&!this.t){this.t=this.x.redMul(this.y);if(!this.zOne)this.t=this.t.redMul(this.z.redInvm())}}}inherits(Point,Base.BasePoint);EdwardsCurve.prototype.pointFromJSON=function pointFromJSON(obj){return Point.fromJSON(this,obj)};EdwardsCurve.prototype.point=function point(x,y,z,t){return new Point(this,x,y,z,t)};Point.fromJSON=function fromJSON(curve,obj){return new Point(curve,obj[0],obj[1],obj[2])};Point.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC Point Infinity>";return"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"};Point.prototype.isInfinity=function isInfinity(){return this.x.cmpn(0)===0&&this.y.cmp(this.z)===0};Point.prototype._extDbl=function _extDbl(){var a=this.x.redSqr();var b=this.y.redSqr();var c=this.z.redSqr();c=c.redIAdd(c);var d=this.curve._mulA(a);var e=this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);var g=d.redAdd(b);var f=g.redSub(c);var h=d.redSub(b);var nx=e.redMul(f);var ny=g.redMul(h);var nt=e.redMul(h);var nz=f.redMul(g);return this.curve.point(nx,ny,nz,nt)};Point.prototype._projDbl=function _projDbl(){var b=this.x.redAdd(this.y).redSqr();var c=this.x.redSqr();var d=this.y.redSqr();var nx;var ny;var nz;if(this.curve.twisted){var e=this.curve._mulA(c);var f=e.redAdd(d);if(this.zOne){nx=b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));ny=f.redMul(e.redSub(d));nz=f.redSqr().redSub(f).redSub(f)}else{var h=this.z.redSqr();var j=f.redSub(h).redISub(h);nx=b.redSub(c).redISub(d).redMul(j);ny=f.redMul(e.redSub(d));nz=f.redMul(j)}}else{var e=c.redAdd(d);var h=this.curve._mulC(this.c.redMul(this.z)).redSqr();var j=e.redSub(h).redSub(h);nx=this.curve._mulC(b.redISub(e)).redMul(j);ny=this.curve._mulC(e).redMul(c.redISub(d));nz=e.redMul(j)}return this.curve.point(nx,ny,nz)};Point.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.extended)return this._extDbl();else return this._projDbl()};Point.prototype._extAdd=function _extAdd(p){var a=this.y.redSub(this.x).redMul(p.y.redSub(p.x));var b=this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));var c=this.t.redMul(this.curve.dd).redMul(p.t);var d=this.z.redMul(p.z.redAdd(p.z));var e=b.redSub(a);var f=d.redSub(c);var g=d.redAdd(c);var h=b.redAdd(a);var nx=e.redMul(f);var ny=g.redMul(h);var nt=e.redMul(h);var nz=f.redMul(g);return this.curve.point(nx,ny,nz,nt)};Point.prototype._projAdd=function _projAdd(p){var a=this.z.redMul(p.z);var b=a.redSqr();var c=this.x.redMul(p.x);var d=this.y.redMul(p.y);var e=this.curve.d.redMul(c).redMul(d);var f=b.redSub(e);var g=b.redAdd(e);var tmp=this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);var nx=a.redMul(f).redMul(tmp);var ny;var nz;if(this.curve.twisted){ny=a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));nz=f.redMul(g)}else{ny=a.redMul(g).redMul(d.redSub(c));nz=this.curve._mulC(f).redMul(g)}return this.curve.point(nx,ny,nz)};Point.prototype.add=function add(p){if(this.isInfinity())return p;if(p.isInfinity())return this;if(this.curve.extended)return this._extAdd(p);else return this._projAdd(p)};Point.prototype.mul=function mul(k){if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else return this.curve._wnafMul(this,k)};Point.prototype.mulAdd=function mulAdd(k1,p,k2){return this.curve._wnafMulAdd(1,[this,p],[k1,k2],2,false)};Point.prototype.jmulAdd=function jmulAdd(k1,p,k2){return this.curve._wnafMulAdd(1,[this,p],[k1,k2],2,true)};Point.prototype.normalize=function normalize(){if(this.zOne)return this;var zi=this.z.redInvm();this.x=this.x.redMul(zi);this.y=this.y.redMul(zi);if(this.t)this.t=this.t.redMul(zi);this.z=this.curve.one;this.zOne=true;return this};Point.prototype.neg=function neg(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()};Point.prototype.getY=function getY(){this.normalize();return this.y.fromRed()};Point.prototype.eq=function eq(other){return this===other||this.getX().cmp(other.getX())===0&&this.getY().cmp(other.getY())===0};Point.prototype.eqXToP=function eqXToP(x){var rx=x.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(this.z);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true}return false};Point.prototype.toP=Point.prototype.normalize;Point.prototype.mixedAdd=Point.prototype.add},{"../../elliptic":317,"../curve":320,"bn.js":116,inherits:352}],320:[function(require,module,exports){"use strict";var curve=exports;curve.base=require("./base");curve.short=require("./short");curve.mont=require("./mont");curve.edwards=require("./edwards")},{"./base":318,"./edwards":319,"./mont":321,"./short":322}],321:[function(require,module,exports){"use strict";var curve=require("../curve");var BN=require("bn.js");var inherits=require("inherits");var Base=curve.base;var elliptic=require("../../elliptic");var utils=elliptic.utils;function MontCurve(conf){Base.call(this,"mont",conf);this.a=new BN(conf.a,16).toRed(this.red);this.b=new BN(conf.b,16).toRed(this.red);this.i4=new BN(4).toRed(this.red).redInvm();this.two=new BN(2).toRed(this.red);this.a24=this.i4.redMul(this.a.redAdd(this.two))}inherits(MontCurve,Base);module.exports=MontCurve;MontCurve.prototype.validate=function validate(point){var x=point.normalize().x;var x2=x.redSqr();var rhs=x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);var y=rhs.redSqrt();return y.redSqr().cmp(rhs)===0};function Point(curve,x,z){Base.BasePoint.call(this,curve,"projective");if(x===null&&z===null){this.x=this.curve.one;this.z=this.curve.zero}else{this.x=new BN(x,16);this.z=new BN(z,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red)}}inherits(Point,Base.BasePoint);MontCurve.prototype.decodePoint=function decodePoint(bytes,enc){return this.point(utils.toArray(bytes,enc),1)};MontCurve.prototype.point=function point(x,z){return new Point(this,x,z)};MontCurve.prototype.pointFromJSON=function pointFromJSON(obj){return Point.fromJSON(this,obj)};Point.prototype.precompute=function precompute(){};Point.prototype._encode=function _encode(){return this.getX().toArray("be",this.curve.p.byteLength())};Point.fromJSON=function fromJSON(curve,obj){return new Point(curve,obj[0],obj[1]||curve.one)};Point.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC Point Infinity>";return"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"};Point.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0};Point.prototype.dbl=function dbl(){var a=this.x.redAdd(this.z);var aa=a.redSqr();var b=this.x.redSub(this.z);var bb=b.redSqr();var c=aa.redSub(bb);var nx=aa.redMul(bb);var nz=c.redMul(bb.redAdd(this.curve.a24.redMul(c)));return this.curve.point(nx,nz)};Point.prototype.add=function add(){throw new Error("Not supported on Montgomery curve")};Point.prototype.diffAdd=function diffAdd(p,diff){var a=this.x.redAdd(this.z);var b=this.x.redSub(this.z);var c=p.x.redAdd(p.z);var d=p.x.redSub(p.z);var da=d.redMul(a);var cb=c.redMul(b);var nx=diff.z.redMul(da.redAdd(cb).redSqr());var nz=diff.x.redMul(da.redISub(cb).redSqr());return this.curve.point(nx,nz)};Point.prototype.mul=function mul(k){var t=k.clone();var a=this;var b=this.curve.point(null,null);var c=this;for(var bits=[];t.cmpn(0)!==0;t.iushrn(1))bits.push(t.andln(1));for(var i=bits.length-1;i>=0;i--){if(bits[i]===0){a=a.diffAdd(b,c);b=b.dbl()}else{b=a.diffAdd(b,c);a=a.dbl()}}return b};Point.prototype.mulAdd=function mulAdd(){throw new Error("Not supported on Montgomery curve")};Point.prototype.jumlAdd=function jumlAdd(){throw new Error("Not supported on Montgomery curve")};Point.prototype.eq=function eq(other){return this.getX().cmp(other.getX())===0};Point.prototype.normalize=function normalize(){this.x=this.x.redMul(this.z.redInvm());this.z=this.curve.one;return this};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()}},{"../../elliptic":317,"../curve":320,"bn.js":116,inherits:352}],322:[function(require,module,exports){"use strict";var curve=require("../curve");var elliptic=require("../../elliptic");var BN=require("bn.js");var inherits=require("inherits");var Base=curve.base;var assert=elliptic.utils.assert;function ShortCurve(conf){Base.call(this,"short",conf);this.a=new BN(conf.a,16).toRed(this.red);this.b=new BN(conf.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(conf);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}inherits(ShortCurve,Base);module.exports=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism(conf){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var beta;var lambda;if(conf.beta){beta=new BN(conf.beta,16).toRed(this.red)}else{var betas=this._getEndoRoots(this.p);beta=betas[0].cmp(betas[1])<0?betas[0]:betas[1];beta=beta.toRed(this.red)}if(conf.lambda){lambda=new BN(conf.lambda,16)}else{var lambdas=this._getEndoRoots(this.n);if(this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))===0){lambda=lambdas[0]}else{lambda=lambdas[1];assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))===0)}}var basis;if(conf.basis){basis=conf.basis.map(function(vec){return{a:new BN(vec.a,16),b:new BN(vec.b,16)}})}else{basis=this._getEndoBasis(lambda)}return{beta:beta,lambda:lambda,basis:basis}};ShortCurve.prototype._getEndoRoots=function _getEndoRoots(num){var red=num===this.p?this.red:BN.mont(num);var tinv=new BN(2).toRed(red).redInvm();var ntinv=tinv.redNeg();var s=new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);var l1=ntinv.redAdd(s).fromRed();var l2=ntinv.redSub(s).fromRed();return[l1,l2]};ShortCurve.prototype._getEndoBasis=function _getEndoBasis(lambda){var aprxSqrt=this.n.ushrn(Math.floor(this.n.bitLength()/2));var u=lambda;var v=this.n.clone();var x1=new BN(1);var y1=new BN(0);var x2=new BN(0);var y2=new BN(1);var a0;var b0;var a1;var b1;var a2;var b2;var prevR;var i=0;var r;var x;while(u.cmpn(0)!==0){var q=v.div(u);r=v.sub(q.mul(u));x=x2.sub(q.mul(x1));var y=y2.sub(q.mul(y1));if(!a1&&r.cmp(aprxSqrt)<0){a0=prevR.neg();b0=x1;a1=r.neg();b1=x}else if(a1&&++i===2){break}prevR=r;v=u;u=r;x2=x1;x1=x;y2=y1;y1=y}a2=r.neg();b2=x;var len1=a1.sqr().add(b1.sqr());var len2=a2.sqr().add(b2.sqr());if(len2.cmp(len1)>=0){a2=a0;b2=b0}if(a1.negative){a1=a1.neg();b1=b1.neg()}if(a2.negative){a2=a2.neg();b2=b2.neg()}return[{a:a1,b:b1},{a:a2,b:b2}]};ShortCurve.prototype._endoSplit=function _endoSplit(k){var basis=this.endo.basis;var v1=basis[0];var v2=basis[1];var c1=v2.b.mul(k).divRound(this.n);var c2=v1.b.neg().mul(k).divRound(this.n);var p1=c1.mul(v1.a);var p2=c2.mul(v2.a);var q1=c1.mul(v1.b);var q2=c2.mul(v2.b);var k1=k.sub(p1).sub(p2);var k2=q1.add(q2).neg();return{k1:k1,k2:k2}};ShortCurve.prototype.pointFromX=function pointFromX(x,odd){x=new BN(x,16);if(!x.red)x=x.toRed(this.red);var y2=x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error("invalid point");var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y)};ShortCurve.prototype.validate=function validate(point){if(point.inf)return true;var x=point.x;var y=point.y;var ax=this.a.redMul(x);var rhs=x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);return y.redSqr().redISub(rhs).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd(points,coeffs,jacobianResult){var npoints=this._endoWnafT1;var ncoeffs=this._endoWnafT2;for(var i=0;i<points.length;i++){var split=this._endoSplit(coeffs[i]);var p=points[i];var beta=p._getBeta();if(split.k1.negative){split.k1.ineg();p=p.neg(true)}if(split.k2.negative){split.k2.ineg();beta=beta.neg(true)}npoints[i*2]=p;npoints[i*2+1]=beta;ncoeffs[i*2]=split.k1;ncoeffs[i*2+1]=split.k2}var res=this._wnafMulAdd(1,npoints,ncoeffs,i*2,jacobianResult);for(var j=0;j<i*2;j++){npoints[j]=null;ncoeffs[j]=null}return res};function Point(curve,x,y,isRed){Base.BasePoint.call(this,curve,"affine");if(x===null&&y===null){this.x=null;this.y=null;this.inf=true}else{this.x=new BN(x,16);this.y=new BN(y,16);if(isRed){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}inherits(Point,Base.BasePoint);ShortCurve.prototype.point=function point(x,y,isRed){return new Point(this,x,y,isRed)};ShortCurve.prototype.pointFromJSON=function pointFromJSON(obj,red){return Point.fromJSON(this,obj,red)};Point.prototype._getBeta=function _getBeta(){if(!this.curve.endo)return;var pre=this.precomputed;if(pre&&pre.beta)return pre.beta;var beta=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(pre){var curve=this.curve;var endoMul=function(p){return curve.point(p.x.redMul(curve.endo.beta),p.y)};pre.beta=beta;beta.precomputed={beta:null,naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(endoMul)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(endoMul)}}}return beta};Point.prototype.toJSON=function toJSON(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point.fromJSON=function fromJSON(curve,obj,red){if(typeof obj==="string")obj=JSON.parse(obj);var res=curve.point(obj[0],obj[1],red);if(!obj[2])return res;function obj2point(obj){return curve.point(obj[0],obj[1],red)}var pre=obj[2];res.precomputed={beta:null,doubles:pre.doubles&&{step:pre.doubles.step,points:[res].concat(pre.doubles.points.map(obj2point))},naf:pre.naf&&{wnd:pre.naf.wnd,points:[res].concat(pre.naf.points.map(obj2point))}};return res};Point.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC Point Infinity>";return"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};Point.prototype.isInfinity=function isInfinity(){return this.inf};Point.prototype.add=function add(p){if(this.inf)return p;if(p.inf)return this;if(this.eq(p))return this.dbl();if(this.neg().eq(p))return this.curve.point(null,null);if(this.x.cmp(p.x)===0)return this.curve.point(null,null);var c=this.y.redSub(p.y);if(c.cmpn(0)!==0)c=c.redMul(this.x.redSub(p.x).redInvm());var nx=c.redSqr().redISub(this.x).redISub(p.x);var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.dbl=function dbl(){if(this.inf)return this;var ys1=this.y.redAdd(this.y);if(ys1.cmpn(0)===0)return this.curve.point(null,null);var a=this.curve.a;var x2=this.x.redSqr();var dyinv=ys1.redInvm();var c=x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);var nx=c.redSqr().redISub(this.x.redAdd(this.x));var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.getX=function getX(){return this.x.fromRed()};Point.prototype.getY=function getY(){return this.y.fromRed()};Point.prototype.mul=function mul(k){k=new BN(k,16);if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[k]);else return this.curve._wnafMul(this,k)};Point.prototype.mulAdd=function mulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs);else return this.curve._wnafMulAdd(1,points,coeffs,2)};Point.prototype.jmulAdd=function jmulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs,true);else return this.curve._wnafMulAdd(1,points,coeffs,2,true)};Point.prototype.eq=function eq(p){return this===p||this.inf===p.inf&&(this.inf||this.x.cmp(p.x)===0&&this.y.cmp(p.y)===0)};Point.prototype.neg=function neg(_precompute){if(this.inf)return this;var res=this.curve.point(this.x,this.y.redNeg());if(_precompute&&this.precomputed){var pre=this.precomputed;var negate=function(p){return p.neg()};res.precomputed={naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(negate)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(negate)}}}return res};Point.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var res=this.curve.jpoint(this.x,this.y,this.curve.one);return res};function JPoint(curve,x,y,z){Base.BasePoint.call(this,curve,"jacobian");if(x===null&&y===null&&z===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new BN(0)}else{this.x=new BN(x,16);this.y=new BN(y,16);this.z=new BN(z,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}inherits(JPoint,Base.BasePoint);ShortCurve.prototype.jpoint=function jpoint(x,y,z){return new JPoint(this,x,y,z)};JPoint.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var zinv=this.z.redInvm();var zinv2=zinv.redSqr();var ax=this.x.redMul(zinv2);var ay=this.y.redMul(zinv2).redMul(zinv);return this.curve.point(ax,ay)};JPoint.prototype.neg=function neg(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function add(p){if(this.isInfinity())return p;if(p.isInfinity())return this;var pz2=p.z.redSqr();var z2=this.z.redSqr();var u1=this.x.redMul(pz2);var u2=p.x.redMul(z2);var s1=this.y.redMul(pz2.redMul(p.z));var s2=p.y.redMul(z2.redMul(this.z));var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(p.z).redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mixedAdd=function mixedAdd(p){if(this.isInfinity())return p.toJ();if(p.isInfinity())return this;var z2=this.z.redSqr();var u1=this.x;var u2=p.x.redMul(z2);var s1=this.y;var s2=p.y.redMul(z2).redMul(this.z);var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.dblp=function dblp(pow){if(pow===0)return this;if(this.isInfinity())return this;if(!pow)return this.dbl();if(this.curve.zeroA||this.curve.threeA){var r=this;for(var i=0;i<pow;i++)r=r.dbl();return r}var a=this.curve.a;var tinv=this.curve.tinv;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jyd=jy.redAdd(jy);for(var i=0;i<pow;i++){var jx2=jx.redSqr();var jyd2=jyd.redSqr();var jyd4=jyd2.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var t1=jx.redMul(jyd2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var dny=c.redMul(t2);dny=dny.redIAdd(dny).redISub(jyd4);var nz=jyd.redMul(jz);if(i+1<pow)jz4=jz4.redMul(jyd4);jx=nx;jz=nz;jyd=dny}return this.curve.jpoint(jx,jyd.redMul(tinv),jz)};JPoint.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint.prototype._zeroDbl=function _zeroDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx);var t=m.redSqr().redISub(s).redISub(s);var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);nx=t;ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var a=this.x.redSqr();var b=this.y.redSqr();var c=b.redSqr();var d=this.x.redAdd(b).redSqr().redISub(a).redISub(c);d=d.redIAdd(d);var e=a.redAdd(a).redIAdd(a);var f=e.redSqr();var c8=c.redIAdd(c);c8=c8.redIAdd(c8);c8=c8.redIAdd(c8);nx=f.redISub(d).redISub(d);ny=e.redMul(d.redISub(nx)).redISub(c8);nz=this.y.redMul(this.z);nz=nz.redIAdd(nz)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._threeDbl=function _threeDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);var t=m.redSqr().redISub(s).redISub(s);nx=t;var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var delta=this.z.redSqr();var gamma=this.y.redSqr();var beta=this.x.redMul(gamma);var alpha=this.x.redSub(delta).redMul(this.x.redAdd(delta));alpha=alpha.redAdd(alpha).redIAdd(alpha);var beta4=beta.redIAdd(beta);beta4=beta4.redIAdd(beta4);var beta8=beta4.redAdd(beta4);nx=alpha.redSqr().redISub(beta8);nz=this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);var ggamma8=gamma.redSqr();ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ny=alpha.redMul(beta4.redISub(nx)).redISub(ggamma8)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._dbl=function _dbl(){var a=this.curve.a;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jx2=jx.redSqr();var jy2=jy.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var jxd4=jx.redAdd(jx);jxd4=jxd4.redIAdd(jxd4);var t1=jxd4.redMul(jy2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var jyd8=jy2.redSqr();jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);var ny=c.redMul(t2).redISub(jyd8);var nz=jy.redAdd(jy).redMul(jz);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);var xx=this.x.redSqr();var yy=this.y.redSqr();var zz=this.z.redSqr();var yyyy=yy.redSqr();var m=xx.redAdd(xx).redIAdd(xx);var mm=m.redSqr();var e=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);e=e.redIAdd(e);e=e.redAdd(e).redIAdd(e);e=e.redISub(mm);var ee=e.redSqr();var t=yyyy.redIAdd(yyyy);t=t.redIAdd(t);t=t.redIAdd(t);t=t.redIAdd(t);var u=m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);var yyu4=yy.redMul(u);yyu4=yyu4.redIAdd(yyu4);yyu4=yyu4.redIAdd(yyu4);var nx=this.x.redMul(ee).redISub(yyu4);nx=nx.redIAdd(nx);nx=nx.redIAdd(nx);var ny=this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);var nz=this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mul=function mul(k,kbase){k=new BN(k,kbase);return this.curve._wnafMul(this,k)};JPoint.prototype.eq=function eq(p){if(p.type==="affine")return this.eq(p.toJ());if(this===p)return true;var z2=this.z.redSqr();var pz2=p.z.redSqr();if(this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)!==0)return false;var z3=z2.redMul(this.z);var pz3=pz2.redMul(p.z);return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0)===0};JPoint.prototype.eqXToP=function eqXToP(x){var zs=this.z.redSqr();var rx=x.toRed(this.curve.red).redMul(zs);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(zs);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true}return false};JPoint.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC JPoint Infinity>";return"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};JPoint.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0}},{"../../elliptic":317,"../curve":320,"bn.js":116,inherits:352}],323:[function(require,module,exports){"use strict";var curves=exports;var hash=require("hash.js");var elliptic=require("../elliptic");var assert=elliptic.utils.assert;function PresetCurve(options){if(options.type==="short")this.curve=new elliptic.curve.short(options);else if(options.type==="edwards")this.curve=new elliptic.curve.edwards(options);else this.curve=new elliptic.curve.mont(options);this.g=this.curve.g;this.n=this.curve.n;this.hash=options.hash;assert(this.g.validate(),"Invalid curve");assert(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}curves.PresetCurve=PresetCurve;function defineCurve(name,options){Object.defineProperty(curves,name,{configurable:true,enumerable:true,get:function(){var curve=new PresetCurve(options);Object.defineProperty(curves,name,{configurable:true,enumerable:true,value:curve});return curve}})}defineCurve("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hash.sha256,gRed:false,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]});defineCurve("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hash.sha256,gRed:false,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]});defineCurve("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hash.sha256,gRed:false,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]});defineCurve("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f "+"5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 "+"f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hash.sha384,gRed:false,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 "+"5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 "+"0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]});defineCurve("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b "+"99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd "+"3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 "+"f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hash.sha512,gRed:false,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 "+"053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 "+"a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 "+"579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 "+"3fad0761 353c7086 a272c240 88be9476 9fd16650"]});defineCurve("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash.sha256,gRed:false,g:["9"]});defineCurve("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash.sha256,gRed:false,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var pre;try{pre=require("./precomputed/secp256k1")}catch(e){pre=undefined}defineCurve("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hash.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:false,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",pre]})},{"../elliptic":317,"./precomputed/secp256k1":330,"hash.js":337}],324:[function(require,module,exports){"use strict";var BN=require("bn.js");var HmacDRBG=require("hmac-drbg");var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;var KeyPair=require("./key");var Signature=require("./signature");function EC(options){if(!(this instanceof EC))return new EC(options);if(typeof options==="string"){assert(elliptic.curves.hasOwnProperty(options),"Unknown curve "+options);options=elliptic.curves[options]}if(options instanceof elliptic.curves.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);this.hash=options.hash||options.curve.hash}module.exports=EC;EC.prototype.keyPair=function keyPair(options){return new KeyPair(this,options)};EC.prototype.keyFromPrivate=function keyFromPrivate(priv,enc){return KeyPair.fromPrivate(this,priv,enc)};EC.prototype.keyFromPublic=function keyFromPublic(pub,enc){return KeyPair.fromPublic(this,pub,enc)};EC.prototype.genKeyPair=function genKeyPair(options){if(!options)options={};var drbg=new HmacDRBG({hash:this.hash,pers:options.pers,persEnc:options.persEnc||"utf8",entropy:options.entropy||elliptic.rand(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||"utf8",nonce:this.n.toArray()});var bytes=this.n.byteLength();var ns2=this.n.sub(new BN(2));do{var priv=new BN(drbg.generate(bytes));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv)}while(true)};EC.prototype._truncateToN=function truncateToN(msg,truncOnly){var delta=msg.byteLength()*8-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg};EC.prototype.sign=function sign(msg,key,enc,options){if(typeof enc==="object"){options=enc;enc=null}if(!options)options={};key=this.keyFromPrivate(key,enc);msg=this._truncateToN(new BN(msg,16));var bytes=this.n.byteLength();var bkey=key.getPrivate().toArray("be",bytes);var nonce=msg.toArray("be",bytes);var drbg=new HmacDRBG({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||"utf8"});var ns1=this.n.sub(new BN(1));for(var iter=0;true;iter++){var k=options.k?options.k(iter):new BN(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1}return new Signature({r:r,s:s,recoveryParam:recoveryParam})}};EC.prototype.verify=function verify(msg,signature,key,enc){msg=this._truncateToN(new BN(msg,16));key=this.keyFromPublic(key,enc);signature=new Signature(signature,"hex");var r=signature.r;var s=signature.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);if(!this.curve._maxwellTrick){var p=this.g.mulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0}var p=this.g.jmulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.eqXToP(r)};EC.prototype.recoverPubKey=function(msg,signature,j,enc){assert((3&j)===j,"The recovery param is more than two bits");signature=new Signature(signature,enc);var n=this.n;var e=new BN(msg);var r=signature.r;var s=signature.s;var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error("Unable to find sencond key candinate");if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature.r.invm(n);var s1=n.sub(e).mul(rInv).umod(n);var s2=s.mul(rInv).umod(n);return this.g.mulAdd(s1,r,s2)};EC.prototype.getKeyRecoveryParam=function(e,signature,Q,enc){signature=new Signature(signature,enc);if(signature.recoveryParam!==null)return signature.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature,i)}catch(e){continue}if(Qprime.eq(Q))return i}throw new Error("Unable to find valid recovery factor")}},{"../../elliptic":317,"./key":325,"./signature":326,"bn.js":116,"hmac-drbg":349}],325:[function(require,module,exports){"use strict";var BN=require("bn.js");var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;function KeyPair(ec,options){this.ec=ec;this.priv=null;this.pub=null;if(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc)}module.exports=KeyPair;KeyPair.fromPublic=function fromPublic(ec,pub,enc){if(pub instanceof KeyPair)return pub;return new KeyPair(ec,{pub:pub,pubEnc:enc})};KeyPair.fromPrivate=function fromPrivate(ec,priv,enc){if(priv instanceof KeyPair)return priv;return new KeyPair(ec,{priv:priv,privEnc:enc})};KeyPair.prototype.validate=function validate(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:"Invalid public key"};if(!pub.validate())return{result:false,reason:"Public key is not a point"};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:"Public key * N != O"};return{result:true,reason:null}};KeyPair.prototype.getPublic=function getPublic(compact,enc){if(typeof compact==="string"){enc=compact;compact=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact)};KeyPair.prototype.getPrivate=function getPrivate(enc){if(enc==="hex")return this.priv.toString(16,2);else return this.priv};KeyPair.prototype._importPrivate=function _importPrivate(key,enc){this.priv=new BN(key,enc||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function _importPublic(key,enc){if(key.x||key.y){if(this.ec.curve.type==="mont"){assert(key.x,"Need x coordinate")}else if(this.ec.curve.type==="short"||this.ec.curve.type==="edwards"){assert(key.x&&key.y,"Need both x and y coordinate")}this.pub=this.ec.curve.point(key.x,key.y);return}this.pub=this.ec.curve.decodePoint(key,enc)};KeyPair.prototype.derive=function derive(pub){return pub.mul(this.priv).getX()};KeyPair.prototype.sign=function sign(msg,enc,options){return this.ec.sign(msg,this,enc,options)};KeyPair.prototype.verify=function verify(msg,signature){return this.ec.verify(msg,signature,this)};KeyPair.prototype.inspect=function inspect(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},{"../../elliptic":317,"bn.js":116}],326:[function(require,module,exports){"use strict";var BN=require("bn.js");var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;function Signature(options,enc){if(options instanceof Signature)return options;if(this._importDER(options,enc))return;assert(options.r&&options.s,"Signature without r or s");this.r=new BN(options.r,16);this.s=new BN(options.s,16);if(options.recoveryParam===undefined)this.recoveryParam=null;else this.recoveryParam=options.recoveryParam}module.exports=Signature;function Position(){this.place=0}function getLength(buf,p){var initial=buf[p.place++];if(!(initial&128)){return initial}var octetLen=initial&15;var val=0;for(var i=0,off=p.place;i<octetLen;i++,off++){val<<=8;val|=buf[off]}p.place=off;return val}function rmPadding(buf){var i=0;var len=buf.length-1;while(!buf[i]&&!(buf[i+1]&128)&&i<len){i++}if(i===0){return buf}return buf.slice(i)}Signature.prototype._importDER=function _importDER(data,enc){data=utils.toArray(data,enc);var p=new Position;if(data[p.place++]!==48){return false}var len=getLength(data,p);if(len+p.place!==data.length){return false}if(data[p.place++]!==2){return false}var rlen=getLength(data,p);var r=data.slice(p.place,rlen+p.place);p.place+=rlen;if(data[p.place++]!==2){return false}var slen=getLength(data,p);if(data.length!==slen+p.place){return false}var s=data.slice(p.place,slen+p.place);if(r[0]===0&&r[1]&128){r=r.slice(1)}if(s[0]===0&&s[1]&128){s=s.slice(1)}this.r=new BN(r);this.s=new BN(s);this.recoveryParam=null;return true};function constructLength(arr,len){if(len<128){arr.push(len);return}var octets=1+(Math.log(len)/Math.LN2>>>3);arr.push(octets|128);while(--octets){arr.push(len>>>(octets<<3)&255)}arr.push(len)}Signature.prototype.toDER=function toDER(enc){var r=this.r.toArray();var s=this.s.toArray();if(r[0]&128)r=[0].concat(r);if(s[0]&128)s=[0].concat(s);r=rmPadding(r);s=rmPadding(s);while(!s[0]&&!(s[1]&128)){s=s.slice(1)}var arr=[2];constructLength(arr,r.length);arr=arr.concat(r);arr.push(2);constructLength(arr,s.length);var backHalf=arr.concat(s);var res=[48];constructLength(res,backHalf.length);res=res.concat(backHalf);return utils.encode(res,enc)}},{"../../elliptic":317,"bn.js":116}],327:[function(require,module,exports){"use strict";var hash=require("hash.js");var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;var parseBytes=utils.parseBytes;var KeyPair=require("./key");var Signature=require("./signature");function EDDSA(curve){assert(curve==="ed25519","only tested with ed25519 so far");if(!(this instanceof EDDSA))return new EDDSA(curve);var curve=elliptic.curves[curve].curve;this.curve=curve;this.g=curve.g;this.g.precompute(curve.n.bitLength()+1);this.pointClass=curve.point().constructor;this.encodingLength=Math.ceil(curve.n.bitLength()/8);this.hash=hash.sha512}module.exports=EDDSA;EDDSA.prototype.sign=function sign(message,secret){message=parseBytes(message);var key=this.keyFromSecret(secret);var r=this.hashInt(key.messagePrefix(),message);var R=this.g.mul(r);var Rencoded=this.encodePoint(R);var s_=this.hashInt(Rencoded,key.pubBytes(),message).mul(key.priv());var S=r.add(s_).umod(this.curve.n);return this.makeSignature({R:R,S:S,Rencoded:Rencoded})};EDDSA.prototype.verify=function verify(message,sig,pub){message=parseBytes(message);sig=this.makeSignature(sig);var key=this.keyFromPublic(pub);var h=this.hashInt(sig.Rencoded(),key.pubBytes(),message);var SG=this.g.mul(sig.S());var RplusAh=sig.R().add(key.pub().mul(h));return RplusAh.eq(SG)};EDDSA.prototype.hashInt=function hashInt(){var hash=this.hash();for(var i=0;i<arguments.length;i++)hash.update(arguments[i]);return utils.intFromLE(hash.digest()).umod(this.curve.n)};EDDSA.prototype.keyFromPublic=function keyFromPublic(pub){return KeyPair.fromPublic(this,pub)};EDDSA.prototype.keyFromSecret=function keyFromSecret(secret){return KeyPair.fromSecret(this,secret)};EDDSA.prototype.makeSignature=function makeSignature(sig){if(sig instanceof Signature)return sig;return new Signature(this,sig)};EDDSA.prototype.encodePoint=function encodePoint(point){var enc=point.getY().toArray("le",this.encodingLength);enc[this.encodingLength-1]|=point.getX().isOdd()?128:0;return enc};EDDSA.prototype.decodePoint=function decodePoint(bytes){bytes=utils.parseBytes(bytes);var lastIx=bytes.length-1;var normed=bytes.slice(0,lastIx).concat(bytes[lastIx]&~128);var xIsOdd=(bytes[lastIx]&128)!==0;var y=utils.intFromLE(normed);return this.curve.pointFromY(y,xIsOdd)};EDDSA.prototype.encodeInt=function encodeInt(num){return num.toArray("le",this.encodingLength)};EDDSA.prototype.decodeInt=function decodeInt(bytes){return utils.intFromLE(bytes)};EDDSA.prototype.isPoint=function isPoint(val){return val instanceof this.pointClass}},{"../../elliptic":317,"./key":328,"./signature":329,"hash.js":337}],328:[function(require,module,exports){"use strict";var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;var parseBytes=utils.parseBytes;var cachedProperty=utils.cachedProperty;function KeyPair(eddsa,params){this.eddsa=eddsa;this._secret=parseBytes(params.secret);if(eddsa.isPoint(params.pub))this._pub=params.pub;else this._pubBytes=parseBytes(params.pub)}KeyPair.fromPublic=function fromPublic(eddsa,pub){if(pub instanceof KeyPair)return pub;return new KeyPair(eddsa,{pub:pub})};KeyPair.fromSecret=function fromSecret(eddsa,secret){if(secret instanceof KeyPair)return secret;return new KeyPair(eddsa,{secret:secret})};KeyPair.prototype.secret=function secret(){return this._secret};cachedProperty(KeyPair,"pubBytes",function pubBytes(){return this.eddsa.encodePoint(this.pub())});cachedProperty(KeyPair,"pub",function pub(){if(this._pubBytes)return this.eddsa.decodePoint(this._pubBytes);return this.eddsa.g.mul(this.priv())});cachedProperty(KeyPair,"privBytes",function privBytes(){var eddsa=this.eddsa;var hash=this.hash();var lastIx=eddsa.encodingLength-1;var a=hash.slice(0,eddsa.encodingLength);a[0]&=248;a[lastIx]&=127;a[lastIx]|=64;return a});cachedProperty(KeyPair,"priv",function priv(){return this.eddsa.decodeInt(this.privBytes())});cachedProperty(KeyPair,"hash",function hash(){return this.eddsa.hash().update(this.secret()).digest()});cachedProperty(KeyPair,"messagePrefix",function messagePrefix(){return this.hash().slice(this.eddsa.encodingLength)});KeyPair.prototype.sign=function sign(message){assert(this._secret,"KeyPair can only verify");return this.eddsa.sign(message,this)};KeyPair.prototype.verify=function verify(message,sig){return this.eddsa.verify(message,sig,this)};KeyPair.prototype.getSecret=function getSecret(enc){assert(this._secret,"KeyPair is public only");return utils.encode(this.secret(),enc)};KeyPair.prototype.getPublic=function getPublic(enc){return utils.encode(this.pubBytes(),enc)};module.exports=KeyPair},{"../../elliptic":317}],329:[function(require,module,exports){"use strict";var BN=require("bn.js");var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;var cachedProperty=utils.cachedProperty;var parseBytes=utils.parseBytes;function Signature(eddsa,sig){this.eddsa=eddsa;if(typeof sig!=="object")sig=parseBytes(sig);if(Array.isArray(sig)){sig={R:sig.slice(0,eddsa.encodingLength),S:sig.slice(eddsa.encodingLength)}}assert(sig.R&&sig.S,"Signature without R or S");if(eddsa.isPoint(sig.R))this._R=sig.R;if(sig.S instanceof BN)this._S=sig.S;this._Rencoded=Array.isArray(sig.R)?sig.R:sig.Rencoded;this._Sencoded=Array.isArray(sig.S)?sig.S:sig.Sencoded}cachedProperty(Signature,"S",function S(){return this.eddsa.decodeInt(this.Sencoded())});cachedProperty(Signature,"R",function R(){return this.eddsa.decodePoint(this.Rencoded())});cachedProperty(Signature,"Rencoded",function Rencoded(){return this.eddsa.encodePoint(this.R())});cachedProperty(Signature,"Sencoded",function Sencoded(){return this.eddsa.encodeInt(this.S())});Signature.prototype.toBytes=function toBytes(){return this.Rencoded().concat(this.Sencoded())};Signature.prototype.toHex=function toHex(){return utils.encode(this.toBytes(),"hex").toUpperCase()};module.exports=Signature},{"../../elliptic":317,"bn.js":116}],330:[function(require,module,exports){module.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},{}],331:[function(require,module,exports){"use strict";var utils=exports;var BN=require("bn.js");var minAssert=require("minimalistic-assert");var minUtils=require("minimalistic-crypto-utils");utils.assert=minAssert;utils.toArray=minUtils.toArray;utils.zero2=minUtils.zero2;utils.toHex=minUtils.toHex;utils.encode=minUtils.encode;function getNAF(num,w){var naf=[];var ws=1<<w+1;var k=num.clone();while(k.cmpn(1)>=0){var z;if(k.isOdd()){var mod=k.andln(ws-1);if(mod>(ws>>1)-1)z=(ws>>1)-mod;else z=mod;k.isubn(z)}else{z=0}naf.push(z);var shift=k.cmpn(0)!==0&&k.andln(ws-1)===0?w+1:1;for(var i=1;i<shift;i++)naf.push(0);k.iushrn(shift)}return naf}utils.getNAF=getNAF;function getJSF(k1,k2){var jsf=[[],[]];k1=k1.clone();k2=k2.clone();var d1=0;var d2=0;while(k1.cmpn(-d1)>0||k2.cmpn(-d2)>0){var m14=k1.andln(3)+d1&3;var m24=k2.andln(3)+d2&3;if(m14===3)m14=-1;if(m24===3)m24=-1;var u1;if((m14&1)===0){u1=0}else{var m8=k1.andln(7)+d1&7;if((m8===3||m8===5)&&m24===2)u1=-m14;else u1=m14}jsf[0].push(u1);var u2;if((m24&1)===0){u2=0}else{var m8=k2.andln(7)+d2&7;if((m8===3||m8===5)&&m14===2)u2=-m24;else u2=m24}jsf[1].push(u2);if(2*d1===u1+1)d1=1-d1;if(2*d2===u2+1)d2=1-d2;k1.iushrn(1);k2.iushrn(1)}return jsf}utils.getJSF=getJSF;function cachedProperty(obj,name,computer){var key="_"+name;obj.prototype[name]=function cachedProperty(){return this[key]!==undefined?this[key]:this[key]=computer.call(this)}}utils.cachedProperty=cachedProperty;function parseBytes(bytes){return typeof bytes==="string"?utils.toArray(bytes,"hex"):bytes}utils.parseBytes=parseBytes;function intFromLE(bytes){return new BN(bytes,"hex","le")}utils.intFromLE=intFromLE},{"bn.js":116,"minimalistic-assert":364,"minimalistic-crypto-utils":365}],332:[function(require,module,exports){module.exports={_args:[[{raw:"elliptic@^6.0.0",scope:null,escapedName:"elliptic",name:"elliptic",rawSpec:"^6.0.0",spec:">=6.0.0 <7.0.0",type:"range"},"/Users/will/Code/lisk/lisk-elements/node_modules/browserify-sign"]],_from:"elliptic@>=6.0.0 <7.0.0",_id:"elliptic@6.4.0",_inCache:true,_location:"/elliptic",_nodeVersion:"7.0.0",_npmOperationalInternal:{host:"packages-18-east.internal.npmjs.com",tmp:"tmp/elliptic-6.4.0.tgz_1487798866428_0.30510620190761983"},_npmUser:{name:"indutny",email:"fedor@indutny.com"},_npmVersion:"3.10.8",_phantomChildren:{},_requested:{raw:"elliptic@^6.0.0",scope:null,escapedName:"elliptic",name:"elliptic",rawSpec:"^6.0.0",spec:">=6.0.0 <7.0.0",type:"range"},_requiredBy:["/browserify-sign","/create-ecdh"],_resolved:"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",_shasum:"cac9af8762c85836187003c8dfe193e5e2eae5df",_shrinkwrap:null,_spec:"elliptic@^6.0.0",_where:"/Users/will/Code/lisk/lisk-elements/node_modules/browserify-sign",author:{name:"Fedor Indutny",email:"fedor@indutny.com"},bugs:{url:"https://github.com/indutny/elliptic/issues"},dependencies:{"bn.js":"^4.4.0",brorand:"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0",inherits:"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},description:"EC cryptography",devDependencies:{brfs:"^1.4.3",coveralls:"^2.11.3",grunt:"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2",istanbul:"^0.4.2",jscs:"^2.9.0",jshint:"^2.6.0",mocha:"^2.1.0"},directories:{},dist:{shasum:"cac9af8762c85836187003c8dfe193e5e2eae5df",tarball:"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz"},files:["lib"],gitHead:"6b0d2b76caae91471649c8e21f0b1d3ba0f96090",homepage:"https://github.com/indutny/elliptic",keywords:["EC","Elliptic","curve","Cryptography"],license:"MIT",main:"lib/elliptic.js",maintainers:[{name:"indutny",email:"fedor@indutny.com"}],name:"elliptic",optionalDependencies:{},readme:"ERROR: No README data found!",repository:{type:"git",url:"git+ssh://git@github.com/indutny/elliptic.git"},scripts:{jscs:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",jshint:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",lint:"npm run jscs && npm run jshint",test:"npm run lint && npm run unit",unit:"istanbul test _mocha --reporter=spec test/index.js",version:"grunt dist && git add dist/"},version:"6.4.0"}},{}],333:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;var MD5=require("md5.js");function EVP_BytesToKey(password,salt,keyBits,ivLen){if(!Buffer.isBuffer(password))password=Buffer.from(password,"binary");if(salt){if(!Buffer.isBuffer(salt))salt=Buffer.from(salt,"binary");if(salt.length!==8)throw new RangeError("salt should be Buffer with 8 byte length")}var keyLen=keyBits/8;var key=Buffer.alloc(keyLen);var iv=Buffer.alloc(ivLen||0);var tmp=Buffer.alloc(0);while(keyLen>0||ivLen>0){var hash=new MD5;hash.update(tmp);hash.update(password);if(salt)hash.update(salt);tmp=hash.digest();var used=0;if(keyLen>0){var keyStart=key.length-keyLen;used=Math.min(keyLen,tmp.length);tmp.copy(key,keyStart,0,used);keyLen-=used}if(used<tmp.length&&ivLen>0){var ivStart=iv.length-ivLen;var length=Math.min(ivLen,tmp.length-used);tmp.copy(iv,ivStart,used,used+length);ivLen-=length}}tmp.fill(0);return{key:key,iv:iv}}module.exports=EVP_BytesToKey},{"md5.js":361,"safe-buffer":434}],334:[function(require,module,exports){(function(global){(typeof define==="function"&&define.amd&&function(m){define("formatio",["samsam"],m)}||typeof module==="object"&&function(m){module.exports=m(require("samsam"))}||function(m){this.formatio=m(this.samsam)})(function(samsam){"use strict";var formatio={excludeConstructors:["Object",/^.$/],quoteStrings:true,limitChildrenCount:0};var hasOwn=Object.prototype.hasOwnProperty;var specialObjects=[];if(typeof global!=="undefined"){specialObjects.push({object:global,value:"[object global]"})}if(typeof document!=="undefined"){specialObjects.push({object:document,value:"[object HTMLDocument]"})}if(typeof window!=="undefined"){specialObjects.push({object:window,value:"[object Window]"})}function functionName(func){if(!func){return""}if(func.displayName){return func.displayName}if(func.name){return func.name}var matches=func.toString().match(/function\s+([^\(]+)/m);return matches&&matches[1]||""}function constructorName(f,object){var name=functionName(object&&object.constructor);var excludes=f.excludeConstructors||formatio.excludeConstructors||[];var i,l;for(i=0,l=excludes.length;i<l;++i){if(typeof excludes[i]==="string"&&excludes[i]===name){return""}else if(excludes[i].test&&excludes[i].test(name)){return""}}return name}function isCircular(object,objects){if(typeof object!=="object"){return false}var i,l;for(i=0,l=objects.length;i<l;++i){if(objects[i]===object){return true}}return false}function ascii(f,object,processed,indent){if(typeof object==="string"){if(object.length===0){return"(empty string)"}var qs=f.quoteStrings;var quote=typeof qs!=="boolean"||qs;return processed||quote?'"'+object+'"':object}if(typeof object==="function"&&!(object instanceof RegExp)){return ascii.func(object)}processed=processed||[];if(isCircular(object,processed)){return"[Circular]"}if(Object.prototype.toString.call(object)==="[object Array]"){return ascii.array.call(f,object,processed)}if(!object){return String(1/object===-Infinity?"-0":object)}if(samsam.isElement(object)){return ascii.element(object)}if(typeof object.toString==="function"&&object.toString!==Object.prototype.toString){return object.toString()}var i,l;for(i=0,l=specialObjects.length;i<l;i++){if(object===specialObjects[i].object){return specialObjects[i].value}}if(typeof Set!=="undefined"&&object instanceof Set){return ascii.set.call(f,object,processed)}return ascii.object.call(f,object,processed,indent)}ascii.func=function(func){return"function "+functionName(func)+"() {}"};function delimit(str,delimiters){delimiters=delimiters||["[","]"];return delimiters[0]+str+delimiters[1]}ascii.array=function(array,processed,delimiters){processed=processed||[];processed.push(array);var pieces=[];var i,l;l=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,array.length):array.length;for(i=0;i<l;++i){pieces.push(ascii(this,array[i],processed))}if(l<array.length){pieces.push("[... "+(array.length-l)+" more elements]")}return delimit(pieces.join(", "),delimiters)};ascii.set=function(set,processed){return ascii.array.call(this,Array.from(set),processed,["Set {","}"])};ascii.object=function(object,processed,indent){processed=processed||[];processed.push(object);indent=indent||0;var pieces=[],properties=samsam.keys(object).sort();var length=3;var prop,str,obj,i,k,l;l=this.limitChildrenCount>0?Math.min(this.limitChildrenCount,properties.length):properties.length;for(i=0;i<l;++i){prop=properties[i];obj=object[prop];if(isCircular(obj,processed)){str="[Circular]"}else{str=ascii(this,obj,processed,indent+2)}str=(/\s/.test(prop)?'"'+prop+'"':prop)+": "+str;length+=str.length;pieces.push(str)}var cons=constructorName(this,object);var prefix=cons?"["+cons+"] ":"";var is="";for(i=0,k=indent;i<k;++i){is+=" "}if(l<properties.length)pieces.push("[... "+(properties.length-l)+" more elements]");if(length+indent>80){return prefix+"{\n  "+is+pieces.join(",\n  "+is)+"\n"+is+"}"}return prefix+"{ "+pieces.join(", ")+" }"};ascii.element=function(element){var tagName=element.tagName.toLowerCase();var attrs=element.attributes,attr,pairs=[],attrName,i,l,val;for(i=0,l=attrs.length;i<l;++i){attr=attrs.item(i);attrName=attr.nodeName.toLowerCase().replace("html:","");val=attr.nodeValue;if(attrName!=="contenteditable"||val!=="inherit"){if(!!val){pairs.push(attrName+'="'+val+'"')}}}var formatted="<"+tagName+(pairs.length>0?" ":"");var content=element.innerHTML||"";if(content.length>20){content=content.substr(0,20)+"[...]"}var res=formatted+pairs.join(" ")+">"+content+"</"+tagName+">";return res.replace(/ contentEditable="inherit"/,"")};function Formatio(options){for(var opt in options){this[opt]=options[opt]}}Formatio.prototype={functionName:functionName,configure:function(options){return new Formatio(options)},constructorName:function(object){return constructorName(this,object)},ascii:function(object,processed,indent){return ascii(this,object,processed,indent)}};return Formatio.prototype})}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{samsam:435}],335:[function(require,module,exports){"use strict";var toString=Function.prototype.toString;var functionNameMatch=/\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\s\(\/]+)/;function getFuncName(aFunc){if(typeof aFunc!=="function"){return null}var name="";if(typeof Function.prototype.name==="undefined"&&typeof aFunc.name==="undefined"){var match=toString.call(aFunc).match(functionNameMatch);if(match){name=match[1]}}else{name=aFunc.name}return name}module.exports=getFuncName},{}],336:[function(require,module,exports){(function(Buffer){"use strict";var Transform=require("stream").Transform;var inherits=require("inherits");function HashBase(blockSize){Transform.call(this);this._block=new Buffer(blockSize);this._blockSize=blockSize;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false}inherits(HashBase,Transform);HashBase.prototype._transform=function(chunk,encoding,callback){var error=null;try{if(encoding!=="buffer")chunk=new Buffer(chunk,encoding);this.update(chunk)}catch(err){error=err}callback(error)};HashBase.prototype._flush=function(callback){var error=null;try{this.push(this._digest())}catch(err){error=err}callback(error)};HashBase.prototype.update=function(data,encoding){if(!Buffer.isBuffer(data)&&typeof data!=="string")throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");if(!Buffer.isBuffer(data))data=new Buffer(data,encoding||"binary");var block=this._block;var offset=0;while(this._blockOffset+data.length-offset>=this._blockSize){for(var i=this._blockOffset;i<this._blockSize;)block[i++]=data[offset++];this._update();this._blockOffset=0}while(offset<data.length)block[this._blockOffset++]=data[offset++];for(var j=0,carry=data.length*8;carry>0;++j){this._length[j]+=carry;carry=this._length[j]/4294967296|0;if(carry>0)this._length[j]-=4294967296*carry}return this};HashBase.prototype._update=function(data){throw new Error("_update is not implemented")};HashBase.prototype.digest=function(encoding){if(this._finalized)throw new Error("Digest already called");this._finalized=true;var digest=this._digest();if(encoding!==undefined)digest=digest.toString(encoding);return digest};HashBase.prototype._digest=function(){throw new Error("_digest is not implemented")};module.exports=HashBase}).call(this,require("buffer").Buffer)},{buffer:150,inherits:352,stream:480}],337:[function(require,module,exports){var hash=exports;hash.utils=require("./hash/utils");hash.common=require("./hash/common");hash.sha=require("./hash/sha");hash.ripemd=require("./hash/ripemd");hash.hmac=require("./hash/hmac");hash.sha1=hash.sha.sha1;hash.sha256=hash.sha.sha256;hash.sha224=hash.sha.sha224;hash.sha384=hash.sha.sha384;hash.sha512=hash.sha.sha512;hash.ripemd160=hash.ripemd.ripemd160},{"./hash/common":338,"./hash/hmac":339,"./hash/ripemd":340,"./hash/sha":341,"./hash/utils":348}],338:[function(require,module,exports){"use strict";var utils=require("./utils");var assert=require("minimalistic-assert");function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian="big";this._delta8=this.blockSize/8;this._delta32=this.blockSize/32}exports.BlockHash=BlockHash;BlockHash.prototype.update=function update(msg,enc){msg=utils.toArray(msg,enc);if(!this.pending)this.pending=msg;else this.pending=this.pending.concat(msg);this.pendingTotal+=msg.length;if(this.pending.length>=this._delta8){msg=this.pending;var r=msg.length%this._delta8;this.pending=msg.slice(msg.length-r,msg.length);if(this.pending.length===0)this.pending=null;msg=utils.join32(msg,0,msg.length-r,this.endian);for(var i=0;i<msg.length;i+=this._delta32)this._update(msg,i,i+this._delta32)}return this};BlockHash.prototype.digest=function digest(enc){this.update(this._pad());assert(this.pending===null);return this._digest(enc)};BlockHash.prototype._pad=function pad(){var len=this.pendingTotal;var bytes=this._delta8;var k=bytes-(len+this.padLength)%bytes;var res=new Array(k+this.padLength);res[0]=128;for(var i=1;i<k;i++)res[i]=0;len<<=3;if(this.endian==="big"){for(var t=8;t<this.padLength;t++)res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=len>>>24&255;res[i++]=len>>>16&255;res[i++]=len>>>8&255;res[i++]=len&255}else{res[i++]=len&255;res[i++]=len>>>8&255;res[i++]=len>>>16&255;res[i++]=len>>>24&255;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;for(t=8;t<this.padLength;t++)res[i++]=0}return res}},{"./utils":348,"minimalistic-assert":364}],339:[function(require,module,exports){"use strict";var utils=require("./utils");var assert=require("minimalistic-assert");function Hmac(hash,key,enc){if(!(this instanceof Hmac))return new Hmac(hash,key,enc);this.Hash=hash;this.blockSize=hash.blockSize/8;this.outSize=hash.outSize/8;this.inner=null;this.outer=null;this._init(utils.toArray(key,enc))}module.exports=Hmac;Hmac.prototype._init=function init(key){if(key.length>this.blockSize)key=(new this.Hash).update(key).digest();assert(key.length<=this.blockSize);for(var i=key.length;i<this.blockSize;i++)key.push(0);for(i=0;i<key.length;i++)key[i]^=54;this.inner=(new this.Hash).update(key);for(i=0;i<key.length;i++)key[i]^=106;this.outer=(new this.Hash).update(key)};Hmac.prototype.update=function update(msg,enc){this.inner.update(msg,enc);return this};Hmac.prototype.digest=function digest(enc){this.outer.update(this.inner.digest());return this.outer.digest(enc)}},{"./utils":348,"minimalistic-assert":364}],340:[function(require,module,exports){"use strict";var utils=require("./utils");var common=require("./common");var rotl32=utils.rotl32;var sum32=utils.sum32;var sum32_3=utils.sum32_3;var sum32_4=utils.sum32_4;var BlockHash=common.BlockHash;function RIPEMD160(){if(!(this instanceof RIPEMD160))return new RIPEMD160;BlockHash.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.endian="little"}utils.inherits(RIPEMD160,BlockHash);exports.ripemd160=RIPEMD160;RIPEMD160.blockSize=512;RIPEMD160.outSize=160;RIPEMD160.hmacStrength=192;RIPEMD160.padLength=64;RIPEMD160.prototype._update=function update(msg,start){var A=this.h[0];var B=this.h[1];var C=this.h[2];var D=this.h[3];var E=this.h[4];var Ah=A;var Bh=B;var Ch=C;var Dh=D;var Eh=E;for(var j=0;j<80;j++){var T=sum32(rotl32(sum32_4(A,f(j,B,C,D),msg[r[j]+start],K(j)),s[j]),E);A=E;E=D;D=rotl32(C,10);C=B;B=T;T=sum32(rotl32(sum32_4(Ah,f(79-j,Bh,Ch,Dh),msg[rh[j]+start],Kh(j)),sh[j]),Eh);Ah=Eh;Eh=Dh;Dh=rotl32(Ch,10);Ch=Bh;Bh=T}T=sum32_3(this.h[1],C,Dh);this.h[1]=sum32_3(this.h[2],D,Eh);this.h[2]=sum32_3(this.h[3],E,Ah);this.h[3]=sum32_3(this.h[4],A,Bh);this.h[4]=sum32_3(this.h[0],B,Ch);this.h[0]=T};RIPEMD160.prototype._digest=function digest(enc){if(enc==="hex")return utils.toHex32(this.h,"little");else return utils.split32(this.h,"little")};function f(j,x,y,z){if(j<=15)return x^y^z;else if(j<=31)return x&y|~x&z;else if(j<=47)return(x|~y)^z;else if(j<=63)return x&z|y&~z;else return x^(y|~z)}function K(j){if(j<=15)return 0;else if(j<=31)return 1518500249;else if(j<=47)return 1859775393;else if(j<=63)return 2400959708;else return 2840853838}function Kh(j){if(j<=15)return 1352829926;else if(j<=31)return 1548603684;else if(j<=47)return 1836072691;else if(j<=63)return 2053994217;else return 0}var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var rh=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var sh=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},{"./common":338,"./utils":348}],341:[function(require,module,exports){"use strict";exports.sha1=require("./sha/1");exports.sha224=require("./sha/224");exports.sha256=require("./sha/256");exports.sha384=require("./sha/384");exports.sha512=require("./sha/512")},{"./sha/1":342,"./sha/224":343,"./sha/256":344,"./sha/384":345,"./sha/512":346}],342:[function(require,module,exports){"use strict";var utils=require("../utils");var common=require("../common");var shaCommon=require("./common");var rotl32=utils.rotl32;var sum32=utils.sum32;var sum32_5=utils.sum32_5;var ft_1=shaCommon.ft_1;var BlockHash=common.BlockHash;var sha1_K=[1518500249,1859775393,2400959708,3395469782];function SHA1(){if(!(this instanceof SHA1))return new SHA1;BlockHash.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.W=new Array(80)}utils.inherits(SHA1,BlockHash);module.exports=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=rotl32(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];for(i=0;i<W.length;i++){var s=~~(i/20);var t=sum32_5(rotl32(a,5),ft_1(s,b,c,d),e,W[i],sha1_K[s]);e=d;d=c;c=rotl32(b,30);b=a;a=t}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e)};SHA1.prototype._digest=function digest(enc){if(enc==="hex")return utils.toHex32(this.h,"big");else return utils.split32(this.h,"big")}},{"../common":338,"../utils":348,"./common":347}],343:[function(require,module,exports){"use strict";var utils=require("../utils");var SHA256=require("./256");function SHA224(){if(!(this instanceof SHA224))return new SHA224;SHA256.call(this);this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}utils.inherits(SHA224,SHA256);module.exports=SHA224;SHA224.blockSize=512;SHA224.outSize=224;SHA224.hmacStrength=192;SHA224.padLength=64;SHA224.prototype._digest=function digest(enc){if(enc==="hex")return utils.toHex32(this.h.slice(0,7),"big");else return utils.split32(this.h.slice(0,7),"big")}},{"../utils":348,"./256":344}],344:[function(require,module,exports){"use strict";var utils=require("../utils");var common=require("../common");var shaCommon=require("./common");var assert=require("minimalistic-assert");var sum32=utils.sum32;var sum32_4=utils.sum32_4;var sum32_5=utils.sum32_5;var ch32=shaCommon.ch32;var maj32=shaCommon.maj32;var s0_256=shaCommon.s0_256;var s1_256=shaCommon.s1_256;var g0_256=shaCommon.g0_256;var g1_256=shaCommon.g1_256;var BlockHash=common.BlockHash;var sha256_K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function SHA256(){if(!(this instanceof SHA256))return new SHA256;BlockHash.call(this);this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];this.k=sha256_K;this.W=new Array(64)}utils.inherits(SHA256,BlockHash);module.exports=SHA256;SHA256.blockSize=512;SHA256.outSize=256;SHA256.hmacStrength=192;SHA256.padLength=64;SHA256.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=sum32_4(g1_256(W[i-2]),W[i-7],g0_256(W[i-15]),W[i-16]);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];var f=this.h[5];var g=this.h[6];var h=this.h[7];assert(this.k.length===W.length);for(i=0;i<W.length;i++){var T1=sum32_5(h,s1_256(e),ch32(e,f,g),this.k[i],W[i]);var T2=sum32(s0_256(a),maj32(a,b,c));h=g;g=f;f=e;e=sum32(d,T1);d=c;c=b;b=a;a=sum32(T1,T2)}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e);this.h[5]=sum32(this.h[5],f);this.h[6]=sum32(this.h[6],g);this.h[7]=sum32(this.h[7],h)};SHA256.prototype._digest=function digest(enc){if(enc==="hex")return utils.toHex32(this.h,"big");else return utils.split32(this.h,"big")}},{"../common":338,"../utils":348,"./common":347,"minimalistic-assert":364}],345:[function(require,module,exports){"use strict";var utils=require("../utils");var SHA512=require("./512");function SHA384(){if(!(this instanceof SHA384))return new SHA384;SHA512.call(this);this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}utils.inherits(SHA384,SHA512);module.exports=SHA384;SHA384.blockSize=1024;SHA384.outSize=384;SHA384.hmacStrength=192;SHA384.padLength=128;SHA384.prototype._digest=function digest(enc){if(enc==="hex")return utils.toHex32(this.h.slice(0,12),"big");else return utils.split32(this.h.slice(0,12),"big")}},{"../utils":348,"./512":346}],346:[function(require,module,exports){"use strict";var utils=require("../utils");var common=require("../common");var assert=require("minimalistic-assert");var rotr64_hi=utils.rotr64_hi;var rotr64_lo=utils.rotr64_lo;var shr64_hi=utils.shr64_hi;var shr64_lo=utils.shr64_lo;var sum64=utils.sum64;var sum64_hi=utils.sum64_hi;var sum64_lo=utils.sum64_lo;var sum64_4_hi=utils.sum64_4_hi;var sum64_4_lo=utils.sum64_4_lo;var sum64_5_hi=utils.sum64_5_hi;var sum64_5_lo=utils.sum64_5_lo;var BlockHash=common.BlockHash;var sha512_K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function SHA512(){if(!(this instanceof SHA512))return new SHA512;BlockHash.call(this);this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];this.k=sha512_K;this.W=new Array(160)}utils.inherits(SHA512,BlockHash);module.exports=SHA512;SHA512.blockSize=1024;SHA512.outSize=512;SHA512.hmacStrength=192;SHA512.padLength=128;SHA512.prototype._prepareBlock=function _prepareBlock(msg,start){var W=this.W;for(var i=0;i<32;i++)W[i]=msg[start+i];for(;i<W.length;i+=2){var c0_hi=g1_512_hi(W[i-4],W[i-3]);var c0_lo=g1_512_lo(W[i-4],W[i-3]);var c1_hi=W[i-14];var c1_lo=W[i-13];var c2_hi=g0_512_hi(W[i-30],W[i-29]);var c2_lo=g0_512_lo(W[i-30],W[i-29]);var c3_hi=W[i-32];var c3_lo=W[i-31];W[i]=sum64_4_hi(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo);W[i+1]=sum64_4_lo(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo)}};SHA512.prototype._update=function _update(msg,start){this._prepareBlock(msg,start);var W=this.W;var ah=this.h[0];var al=this.h[1];var bh=this.h[2];var bl=this.h[3];var ch=this.h[4];var cl=this.h[5];var dh=this.h[6];var dl=this.h[7];var eh=this.h[8];var el=this.h[9];var fh=this.h[10];var fl=this.h[11];var gh=this.h[12];var gl=this.h[13];var hh=this.h[14];var hl=this.h[15];assert(this.k.length===W.length);for(var i=0;i<W.length;i+=2){var c0_hi=hh;var c0_lo=hl;var c1_hi=s1_512_hi(eh,el);var c1_lo=s1_512_lo(eh,el);var c2_hi=ch64_hi(eh,el,fh,fl,gh,gl);var c2_lo=ch64_lo(eh,el,fh,fl,gh,gl);var c3_hi=this.k[i];var c3_lo=this.k[i+1];var c4_hi=W[i];var c4_lo=W[i+1];var T1_hi=sum64_5_hi(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);var T1_lo=sum64_5_lo(c0_hi,c0_lo,c1_hi,c1_lo,c2_hi,c2_lo,c3_hi,c3_lo,c4_hi,c4_lo);c0_hi=s0_512_hi(ah,al);c0_lo=s0_512_lo(ah,al);c1_hi=maj64_hi(ah,al,bh,bl,ch,cl);c1_lo=maj64_lo(ah,al,bh,bl,ch,cl);var T2_hi=sum64_hi(c0_hi,c0_lo,c1_hi,c1_lo);var T2_lo=sum64_lo(c0_hi,c0_lo,c1_hi,c1_lo);hh=gh;hl=gl;gh=fh;gl=fl;fh=eh;fl=el;eh=sum64_hi(dh,dl,T1_hi,T1_lo);el=sum64_lo(dl,dl,T1_hi,T1_lo);dh=ch;dl=cl;ch=bh;cl=bl;bh=ah;bl=al;ah=sum64_hi(T1_hi,T1_lo,T2_hi,T2_lo);al=sum64_lo(T1_hi,T1_lo,T2_hi,T2_lo)}sum64(this.h,0,ah,al);sum64(this.h,2,bh,bl);sum64(this.h,4,ch,cl);sum64(this.h,6,dh,dl);sum64(this.h,8,eh,el);sum64(this.h,10,fh,fl);sum64(this.h,12,gh,gl);sum64(this.h,14,hh,hl)};SHA512.prototype._digest=function digest(enc){if(enc==="hex")return utils.toHex32(this.h,"big");else return utils.split32(this.h,"big")};function ch64_hi(xh,xl,yh,yl,zh){var r=xh&yh^~xh&zh;if(r<0)r+=4294967296;return r}function ch64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^~xl&zl;if(r<0)r+=4294967296;return r}function maj64_hi(xh,xl,yh,yl,zh){var r=xh&yh^xh&zh^yh&zh;if(r<0)r+=4294967296;return r}function maj64_lo(xh,xl,yh,yl,zh,zl){var r=xl&yl^xl&zl^yl&zl;if(r<0)r+=4294967296;return r}function s0_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,28);var c1_hi=rotr64_hi(xl,xh,2);var c2_hi=rotr64_hi(xl,xh,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function s0_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,28);var c1_lo=rotr64_lo(xl,xh,2);var c2_lo=rotr64_lo(xl,xh,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function s1_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,14);var c1_hi=rotr64_hi(xh,xl,18);var c2_hi=rotr64_hi(xl,xh,9);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function s1_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,14);var c1_lo=rotr64_lo(xh,xl,18);var c2_lo=rotr64_lo(xl,xh,9);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function g0_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,1);var c1_hi=rotr64_hi(xh,xl,8);var c2_hi=shr64_hi(xh,xl,7);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function g0_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,1);var c1_lo=rotr64_lo(xh,xl,8);var c2_lo=shr64_lo(xh,xl,7);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}function g1_512_hi(xh,xl){var c0_hi=rotr64_hi(xh,xl,19);var c1_hi=rotr64_hi(xl,xh,29);var c2_hi=shr64_hi(xh,xl,6);var r=c0_hi^c1_hi^c2_hi;if(r<0)r+=4294967296;return r}function g1_512_lo(xh,xl){var c0_lo=rotr64_lo(xh,xl,19);var c1_lo=rotr64_lo(xl,xh,29);var c2_lo=shr64_lo(xh,xl,6);var r=c0_lo^c1_lo^c2_lo;if(r<0)r+=4294967296;return r}},{"../common":338,"../utils":348,"minimalistic-assert":364}],347:[function(require,module,exports){"use strict";var utils=require("../utils");var rotr32=utils.rotr32;function ft_1(s,x,y,z){if(s===0)return ch32(x,y,z);if(s===1||s===3)return p32(x,y,z);if(s===2)return maj32(x,y,z)}exports.ft_1=ft_1;function ch32(x,y,z){return x&y^~x&z}exports.ch32=ch32;function maj32(x,y,z){return x&y^x&z^y&z}exports.maj32=maj32;function p32(x,y,z){return x^y^z}exports.p32=p32;function s0_256(x){return rotr32(x,2)^rotr32(x,13)^rotr32(x,22)}exports.s0_256=s0_256;function s1_256(x){return rotr32(x,6)^rotr32(x,11)^rotr32(x,25)}exports.s1_256=s1_256;function g0_256(x){return rotr32(x,7)^rotr32(x,18)^x>>>3}exports.g0_256=g0_256;function g1_256(x){return rotr32(x,17)^rotr32(x,19)^x>>>10}exports.g1_256=g1_256},{"../utils":348}],348:[function(require,module,exports){"use strict";var assert=require("minimalistic-assert");var inherits=require("inherits");exports.inherits=inherits;function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg==="string"){if(!enc){for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}else if(enc==="hex"){msg=msg.replace(/[^a-z0-9]+/gi,"");if(msg.length%2!==0)msg="0"+msg;for(i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}}else{for(i=0;i<msg.length;i++)res[i]=msg[i]|0}return res}exports.toArray=toArray;function toHex(msg){var res="";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}exports.toHex=toHex;function htonl(w){var res=w>>>24|w>>>8&65280|w<<8&16711680|(w&255)<<24;return res>>>0}exports.htonl=htonl;function toHex32(msg,endian){var res="";for(var i=0;i<msg.length;i++){var w=msg[i];if(endian==="little")w=htonl(w);res+=zero8(w.toString(16))}return res}exports.toHex32=toHex32;function zero2(word){if(word.length===1)return"0"+word;else return word}exports.zero2=zero2;function zero8(word){if(word.length===7)return"0"+word;else if(word.length===6)return"00"+word;else if(word.length===5)return"000"+word;else if(word.length===4)return"0000"+word;else if(word.length===3)return"00000"+word;else if(word.length===2)return"000000"+word;else if(word.length===1)return"0000000"+word;else return word}exports.zero8=zero8;function join32(msg,start,end,endian){var len=end-start;assert(len%4===0);var res=new Array(len/4);for(var i=0,k=start;i<res.length;i++,k+=4){var w;if(endian==="big")w=msg[k]<<24|msg[k+1]<<16|msg[k+2]<<8|msg[k+3];else w=msg[k+3]<<24|msg[k+2]<<16|msg[k+1]<<8|msg[k];res[i]=w>>>0}return res}exports.join32=join32;function split32(msg,endian){var res=new Array(msg.length*4);for(var i=0,k=0;i<msg.length;i++,k+=4){var m=msg[i];if(endian==="big"){res[k]=m>>>24;res[k+1]=m>>>16&255;res[k+2]=m>>>8&255;res[k+3]=m&255}else{res[k+3]=m>>>24;res[k+2]=m>>>16&255;res[k+1]=m>>>8&255;res[k]=m&255}}return res}exports.split32=split32;function rotr32(w,b){return w>>>b|w<<32-b}exports.rotr32=rotr32;function rotl32(w,b){return w<<b|w>>>32-b}exports.rotl32=rotl32;function sum32(a,b){return a+b>>>0}exports.sum32=sum32;function sum32_3(a,b,c){return a+b+c>>>0}exports.sum32_3=sum32_3;function sum32_4(a,b,c,d){return a+b+c+d>>>0}exports.sum32_4=sum32_4;function sum32_5(a,b,c,d,e){return a+b+c+d+e>>>0}exports.sum32_5=sum32_5;function sum64(buf,pos,ah,al){var bh=buf[pos];var bl=buf[pos+1];var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;buf[pos]=hi>>>0;buf[pos+1]=lo}exports.sum64=sum64;function sum64_hi(ah,al,bh,bl){var lo=al+bl>>>0;var hi=(lo<al?1:0)+ah+bh;return hi>>>0}exports.sum64_hi=sum64_hi;function sum64_lo(ah,al,bh,bl){var lo=al+bl;return lo>>>0}exports.sum64_lo=sum64_lo;function sum64_4_hi(ah,al,bh,bl,ch,cl,dh,dl){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;var hi=ah+bh+ch+dh+carry;return hi>>>0}exports.sum64_4_hi=sum64_4_hi;function sum64_4_lo(ah,al,bh,bl,ch,cl,dh,dl){var lo=al+bl+cl+dl;return lo>>>0}exports.sum64_4_lo=sum64_4_lo;function sum64_5_hi(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var carry=0;var lo=al;lo=lo+bl>>>0;carry+=lo<al?1:0;lo=lo+cl>>>0;carry+=lo<cl?1:0;lo=lo+dl>>>0;carry+=lo<dl?1:0;lo=lo+el>>>0;carry+=lo<el?1:0;var hi=ah+bh+ch+dh+eh+carry;return hi>>>0}exports.sum64_5_hi=sum64_5_hi;function sum64_5_lo(ah,al,bh,bl,ch,cl,dh,dl,eh,el){var lo=al+bl+cl+dl+el;return lo>>>0}exports.sum64_5_lo=sum64_5_lo;function rotr64_hi(ah,al,num){var r=al<<32-num|ah>>>num;return r>>>0}exports.rotr64_hi=rotr64_hi;function rotr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0}exports.rotr64_lo=rotr64_lo;function shr64_hi(ah,al,num){return ah>>>num}exports.shr64_hi=shr64_hi;function shr64_lo(ah,al,num){var r=ah<<32-num|al>>>num;return r>>>0}exports.shr64_lo=shr64_lo},{inherits:352,"minimalistic-assert":364}],349:[function(require,module,exports){"use strict";var hash=require("hash.js");var utils=require("minimalistic-crypto-utils");var assert=require("minimalistic-assert");function HmacDRBG(options){if(!(this instanceof HmacDRBG))return new HmacDRBG(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils.toArray(options.entropy,options.entropyEnc||"hex");var nonce=utils.toArray(options.nonce,options.nonceEnc||"hex");var pers=utils.toArray(options.pers,options.persEnc||"hex");assert(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._init(entropy,nonce,pers)}module.exports=HmacDRBG;HmacDRBG.prototype._init=function init(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0;this.V[i]=1}this._update(seed);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac(){return new hash.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update(seed){var kmac=this._hmac().update(this.V).update([0]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([1]).update(seed).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed(entropy,entropyEnc,add,addEnc){if(typeof entropyEnc!=="string"){addEnc=add;add=entropyEnc;entropyEnc=null}entropy=utils.toArray(entropy,entropyEnc);add=utils.toArray(add,addEnc);assert(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._update(entropy.concat(add||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate(len,enc,add,addEnc){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");if(typeof enc!=="string"){addEnc=add;add=enc;enc=null}if(add){add=utils.toArray(add,addEnc||"hex");this._update(add)}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V)}var res=temp.slice(0,len);this._update(add);this._reseed++;return utils.encode(res,enc)}},{"hash.js":337,"minimalistic-assert":364,"minimalistic-crypto-utils":365}],350:[function(require,module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity}else{m=m+Math.pow(2,mLen);e=e-eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)};exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2}if(e+eBias>=1){value+=rt/c}else{value+=rt*Math.pow(2,1-eBias)}if(value*c>=2){e++;c/=2}if(e+eBias>=eMax){m=0;e=eMax}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0}}for(;mLen>=8;buffer[offset+i]=m&255,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&255,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128}},{}],351:[function(require,module,exports){var indexOf=[].indexOf;module.exports=function(arr,obj){if(indexOf)return arr.indexOf(obj);for(var i=0;i<arr.length;++i){if(arr[i]===obj)return i}return-1}},{}],352:[function(require,module,exports){if(typeof Object.create==="function"){module.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}else{module.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}},{}],353:[function(require,module,exports){module.exports=function(obj){return obj!=null&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer)};function isBuffer(obj){return!!obj.constructor&&typeof obj.constructor.isBuffer==="function"&&obj.constructor.isBuffer(obj)}function isSlowBuffer(obj){return typeof obj.readFloatLE==="function"&&typeof obj.slice==="function"&&isBuffer(obj.slice(0,0))}},{}],354:[function(require,module,exports){var toString={}.toString;module.exports=Array.isArray||function(arr){return toString.call(arr)=="[object Array]"}},{}],355:[function(require,module,exports){(function(process,__dirname){var nacl_factory={instantiate:function(on_ready,optionsOpt){var options=optionsOpt||{};var requested_total_memory=options.requested_total_memory||33554432;var undefined_reference_value=function(v){return v}();if(typeof on_ready!=="function"){throw new Error("nacl_factory: Expects on_ready callback as first argument. New in v1.1.0.")}return function(window,document){var on_ready_call_needed=false;var Module={TOTAL_MEMORY:requested_total_memory,onRuntimeInitialized:function(){if(nacl){on_ready(nacl)}else{on_ready_call_needed=true}}};if(options.memoryInitializerPrefixURL){Module.memoryInitializerPrefixURL=options.memoryInitializerPrefixURL}var nacl_raw=Module;var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?function(x){dump(x)}:function(x){}}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=function(title){document.title=title}}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=function(){}}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:function(value){tempRet0=value},getTempRet0:function(){return tempRet0},stackSave:function(){return STACKTOP},stackRestore:function(stackTop){STACKTOP=stackTop},getNativeTypeSize:function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}},getNativeFieldSize:function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)},STACK_ALIGN:16,prepVararg:function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr},getAlignSize:function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)},dynCall:function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}},functionPointers:[null,null,null,null,null,null,null,null],addFunction:function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."},removeFunction:function(index){Runtime.functionPointers[(index-2)/2]=null},warnOnce:function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}},funcWrappers:{},getFuncWrapper:function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]},getCompilerSetting:function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"},stackAlloc:function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret},staticAlloc:function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret},dynamicAlloc:function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret},alignMemory:function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret},makeBigInt:function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret},GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;(function(){var JSfuncs={stackSave:function(){Runtime.stackSave()},stackRestore:function(){Runtime.stackRestore()},arrayToC:function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret},stringToC:function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret}};var toC={string:JSfuncs["stringToC"],array:JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push(function(){Runtime.stackRestore(stack)});return}Runtime.stackRestore(stack)}return ret};cwrap=function cwrap(ident,returnType,argTypes){return function(){return ccall(ident,returnType,argTypes,arguments)}}})();Module["ccall"]=ccall;Module["cwrap"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(typeof _sbrk!=="undefined"&&!_sbrk.called||!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module["getMemory"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){return func}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||5e7;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){TOTAL_MEMORY=totalMemory}if(Module["buffer"]){buffer=Module["buffer"]}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[0]=255;if(HEAPU8[0]!==255||HEAPU8[3]!==0)throw"Typed arrays 2 must be run on a little-endian system";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32};Math.clz32=Math["clz32"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var ASM_CONSTS=[function(){{return Module.getRandomValue()}},function(){{if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self,crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto,randomValuesStandard=function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0};randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{var crypto=require("crypto"),randomValueNodeJS=function(){var buf=crypto.randomBytes(4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0};randomValueNodeJS();Module.getRandomValue=randomValueNodeJS}catch(e){throw"No secure random number generator found"}}}}}];function _emscripten_asm_const_i(code){return ASM_CONSTS[code]()}function _emscripten_asm_const_v(code){return ASM_CONSTS[code]()}STATIC_BASE=8;STATICTOP=STATIC_BASE+35728;__ATINIT__.push();allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,5,199,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,122,19,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,133,180,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,250,236,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,237,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,238,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,217,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,218,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,219,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,8,201,188,243,103,230,9,106,59,167,202,132,133,174,103,187,43,248,148,254,114,243,110,60,241,54,29,95,58,245,79,165,209,130,230,173,127,82,14,81,31,108,62,43,140,104,5,155,107,189,65,251,171,217,131,31,121,33,126,19,25,205,224,91,182,120,89,255,133,114,211,0,189,110,21,255,15,10,106,0,41,192,1,0,152,232,121,255,188,60,160,255,153,113,206,255,0,183,226,254,180,13,72,255,176,160,14,254,211,201,134,255,158,24,143,0,127,105,53,0,96,12,189,0,167,215,251,255,159,76,128,254,106,101,225,255,30,252,4,0,146,12,174,0,89,241,178,254,10,229,166,255,123,221,42,254,30,20,212,0,82,128,3,0,48,209,243,0,119,121,64,255,50,227,156,255,0,110,197,1,103,27,144,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,47,99,168,254,170,226,153,255,102,179,216,0,226,141,122,255,122,66,153,254,182,245,134,0,227,228,25,1,214,57,235,255,216,173,56,255,181,231,210,0,119,128,157,255,129,95,136,255,110,126,51,0,2,169,183,255,7,130,98,254,69,176,94,255,116,4,227,1,217,242,145,255,202,173,31,1,105,1,39,255,46,175,69,0,228,47,58,255,215,224,69,254,207,56,69,255,16,254,139,255,23,207,212,255,202,20,126,255,95,213,96,255,9,176,33,0,200,5,207,255,241,42,128,254,35,33,192,255,248,229,196,1,129,17,120,0,251,103,151,255,7,52,112,255,140,56,66,255,40,226,245,255,217,70,37,254,172,214,9,255,72,67,134,1,146,192,214,255,44,38,112,0,68,184,75,255,206,90,251,0,149,235,141,0,181,170,58,0,116,244,239,0,92,157,2,0,102,173,98,0,233,137,96,1,127,49,203,0,5,155,148,0,23,148,9,255,211,122,12,0,34,134,26,255,219,204,136,0,134,8,41,255,224,83,43,254,85,25,247,0,109,127,0,254,169,136,48,0,238,119,219,255,231,173,213,0,206,18,254,254,8,186,7,255,126,9,7,1,111,42,72,0,111,52,236,254,96,63,141,0,147,191,127,254,205,78,192,255,14,106,237,1,187,219,76,0,175,243,187,254,105,89,173,0,85,25,89,1,162,243,148,0,2,118,209,254,33,158,9,0,139,163,46,255,93,70,40,0,108,42,142,254,111,252,142,255,155,223,144,0,51,229,167,255,73,252,155,255,94,116,12,255,152,160,218,255,156,238,37,255,179,234,207,255,197,0,179,255,154,164,141,0,225,196,104,0,10,35,25,254,209,212,242,255,97,253,222,254,184,101,229,0,222,18,127,1,164,136,135,255,30,207,140,254,146,97,243,0,129,192,26,254,201,84,33,255,111,10,78,255,147,81,178,255,4,4,24,0,161,238,215,255,6,141,33,0,53,215,14,255,41,181,208,255,231,139,157,0,179,203,221,255,255,185,113,0,189,226,172,255,113,66,214,255,202,62,45,255,102,64,8,255,78,174,16,254,133,117,68,255,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,234,113,60,255,37,255,57,255,69,178,182,254,128,208,179,0,118,26,125,254,3,7,214,255,241,50,77,255,85,203,197,255,211,135,250,255,25,48,100,255,187,213,180,254,17,88,105,0,83,209,158,1,5,115,98,0,4,174,60,254,171,55,110,255,217,181,17,255,20,188,170,0,146,156,102,254,87,214,174,255,114,122,155,1,233,44,170,0,127,8,239,1,214,236,234,0,175,5,219,0,49,106,61,255,6,66,208,255,2,106,110,255,81,234,19,255,215,107,192,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,178,9,252,254,100,110,212,0,14,5,167,0,233,239,163,255,28,151,157,1,101,146,10,255,254,158,70,254,71,249,228,0,88,30,50,0,68,58,160,255,191,24,104,1,129,66,129,255,192,50,85,255,8,179,138,255,38,250,201,0,115,80,160,0,131,230,113,0,125,88,147,0,90,68,199,0,253,76,158,0,28,255,118,0,113,250,254,0,66,75,46,0,230,218,43,0,229,120,186,1,148,68,43,0,136,124,238,1,187,107,197,255,84,53,246,255,51,116,254,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,68,113,21,255,222,186,59,255,66,7,241,1,69,6,72,0,86,156,108,254,55,167,89,0,109,52,219,254,13,176,23,255,196,44,106,255,239,149,71,255,164,140,125,255,159,173,1,0,51,41,231,0,145,62,33,0,138,111,93,1,185,83,69,0,144,115,46,0,97,151,16,255,24,228,26,0,49,217,226,0,113,75,234,254,193,153,12,255,182,48,96,255,14,13,26,0,128,195,249,254,69,193,59,0,132,37,81,254,125,106,60,0,214,240,169,1,164,227,66,0,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,143,62,221,0,129,89,214,255,55,139,5,254,68,20,191,255,14,204,178,1,35,195,217,0,47,51,206,1,38,246,165,0,206,27,6,254,158,87,36,0,217,52,146,255,125,123,215,255,85,60,31,255,171,13,7,0,218,245,88,254,252,35,60,0,55,214,160,255,133,101,56,0,224,32,19,254,147,64,234,0,26,145,162,1,114,118,125,0,248,252,250,0,101,94,196,255,198,141,226,254,51,42,182,0,135,12,9,254,109,172,210,255,197,236,194,1,241,65,154,0,48,156,47,255,153,67,55,255,218,165,34,254,74,180,179,0,218,66,71,1,88,122,99,0,212,181,219,255,92,42,231,255,239,0,154,0,245,77,183,255,94,81,170,1,18,213,216,0,171,93,71,0,52,94,248,0,18,151,161,254,197,209,66,255,174,244,15,254,162,48,183,0,49,61,240,254,182,93,195,0,199,228,6,1,200,5,17,255,137,45,237,255,108,148,4,0,90,79,237,255,39,63,77,255,53,82,207,1,142,22,118,255,101,232,18,1,92,26,67,0,5,200,88,255,33,168,138,255,149,225,72,0,2,209,27,255,44,245,168,1,220,237,17,255,30,211,105,254,141,238,221,0,128,80,245,254,111,254,14,0,222,95,190,1,223,9,241,0,146,76,212,255,108,205,104,255,63,117,153,0,144,69,48,0,35,228,111,0,192,33,193,255,112,214,190,254,115,152,151,0,23,102,88,0,51,74,248,0,226,199,143,254,204,162,101,255,208,97,189,1,245,104,18,0,230,246,30,255,23,148,69,0,110,88,52,254,226,181,89,255,208,47,90,254,114,161,80,255,33,116,248,0,179,152,87,255,69,144,177,1,88,238,26,255,58,32,113,1,1,77,69,0,59,121,52,255,152,238,83,0,52,8,193,0,231,39,233,255,199,34,138,0,222,68,173,0,91,57,242,254,220,210,127,255,192,7,246,254,151,35,187,0,195,236,165,0,111,93,206,0,212,247,133,1,154,133,209,255,155,231,10,0,64,78,38,0,122,249,100,1,30,19,97,255,62,91,249,1,248,133,77,0,197,63,168,254,116,10,82,0,184,236,113,254,212,203,194,255,61,100,252,254,36,5,202,255,119,91,153,255,129,79,29,0,103,103,171,254,237,215,111,255,216,53,69,0,239,240,23,0,194,149,221,255,38,225,222,0,232,255,180,254,118,82,133,255,57,209,177,1,139,232,133,0,158,176,46,254,194,115,46,0,88,247,229,1,28,103,191,0,221,222,175,254,149,235,44,0,151,228,25,254,218,105,103,0,142,85,210,0,149,129,190,255,213,65,94,254,117,134,224,255,82,198,117,0,157,221,220,0,163,101,36,0,197,114,37,0,104,172,166,254,11,182,0,0,81,72,188,255,97,188,16,255,69,6,10,0,199,147,145,255,8,9,115,1,65,214,175,255,217,173,209,0,80,127,166,0,247,229,4,254,167,183,124,255,90,28,204,254,175,59,240,255,11,41,248,1,108,40,51,255,144,177,195,254,150,250,126,0,138,91,65,1,120,60,222,255,245,193,239,0,29,214,189,255,128,2,25,0,80,154,162,0,77,220,107,1,234,205,74,255,54,166,103,255,116,72,9,0,228,94,47,255,30,200,25,255,35,214,89,255,61,176,140,255,83,226,163,255,75,130,172,0,128,38,17,0,95,137,152,255,215,124,159,1,79,93,0,0,148,82,157,254,195,130,251,255,40,202,76,255,251,126,224,0,157,99,62,254,207,7,225,255,96,68,195,0,140,186,157,255,131,19,231,255,42,128,254,0,52,219,61,254,102,203,72,0,141,7,11,255,186,164,213,0,31,122,119,0,133,242,145,0,208,252,232,255,91,213,182,255,143,4,250,254,249,215,74,0,165,30,111,1,171,9,223,0,229,123,34,1,92,130,26,255,77,155,45,1,195,139,28,255,59,224,78,0,136,17,247,0,108,121,32,0,79,250,189,255,96,227,252,254,38,241,62,0,62,174,125,255,155,111,93,255,10,230,206,1,97,197,40,255,0,49,57,254,65,250,13,0,18,251,150,255,220,109,210,255,5,174,166,254,44,129,189,0,235,35,147,255,37,247,141,255,72,141,4,255,103,107,255,0,247,90,4,0,53,44,42,0,2,30,240,0,4,59,63,0,88,78,36,0,113,167,180,0,190,71,193,255,199,158,164,255,58,8,172,0,77,33,12,0,65,63,3,0,153,77,33,255,172,254,102,1,228,221,4,255,87,30,254,1,146,41,86,255,138,204,239,254,108,141,17,255,187,242,135,0,210,208,127,0,68,45,14,254,73,96,62,0,81,60,24,255,170,6,36,255,3,249,26,0,35,213,109,0,22,129,54,255,21,35,225,255,234,61,56,255,58,217,6,0,143,124,88,0,236,126,66,0,209,38,183,255,34,238,6,255,174,145,102,0,95,22,211,0,196,15,153,254,46,84,232,255,117,34,146,1,231,250,74,255,27,134,100,1,92,187,195,255,170,198,112,0,120,28,42,0,209,70,67,0,29,81,31,0,29,168,100,1,169,173,160,0,107,35,117,0,62,96,59,255,81,12,69,1,135,239,190,255,220,252,18,0,163,220,58,255,137,137,188,255,83,102,109,0,96,6,76,0,234,222,210,255,185,174,205,1,60,158,213,255,13,241,214,0,172,129,140,0,93,104,242,0,192,156,251,0,43,117,30,0,225,81,158,0,127,232,218,0,226,28,203,0,233,27,151,255,117,43,5,255,242,14,47,255,33,20,6,0,137,251,44,254,27,31,245,255,183,214,125,254,40,121,149,0,186,158,213,255,89,8,227,0,69,88,0,254,203,135,225,0,201,174,203,0,147,71,184,0,18,121,41,254,94,5,78,0,224,214,240,254,36,5,180,0,251,135,231,1,163,138,212,0,210,249,116,254,88,129,187,0,19,8,49,254,62,14,144,255,159,76,211,0,214,51,82,0,109,117,228,254,103,223,203,255,75,252,15,1,154,71,220,255,23,13,91,1,141,168,96,255,181,182,133,0,250,51,55,0,234,234,212,254,175,63,158,0,39,240,52,1,158,189,36,255,213,40,85,1,32,180,247,255,19,102,26,1,84,24,97,255,69,21,222,0,148,139,122,255,220,213,235,1,232,203,255,0,121,57,147,0,227,7,154,0,53,22,147,1,72,1,225,0,82,134,48,254,83,60,157,255,145,72,169,0,34,103,239,0,198,233,47,0,116,19,4,255,184,106,9,255,183,129,83,0,36,176,230,1,34,103,72,0,219,162,134,0,245,42,158,0,32,149,96,254,165,44,144,0,202,239,72,254,215,150,5,0,42,66,36,1,132,215,175,0,86,174,86,255,26,197,156,255,49,232,135,254,103,182,82,0,253,128,176,1,153,178,122,0,245,250,10,0,236,24,178,0,137,106,132,0,40,29,41,0,50,30,152,255,124,105,38,0,230,191,75,0,143,43,170,0,44,131,20,255,44,13,23,255,237,255,155,1,159,109,100,255,112,181,24,255,104,220,108,0,55,211,131,0,99,12,213,255,152,151,145,255,238,5,159,0,97,155,8,0,33,108,81,0,1,3,103,0,62,109,34,255,250,155,180,0,32,71,195,255,38,70,145,1,159,95,245,0,69,229,101,1,136,28,240,0,79,224,25,0,78,110,121,255,248,168,124,0,187,128,247,0,2,147,235,254,79,11,132,0,70,58,12,1,181,8,163,255,79,137,133,255,37,170,11,255,141,243,85,255,176,231,215,255,204,150,164,255,239,215,39,255,46,87,156,254,8,163,88,255,172,34,232,0,66,44,102,255,27,54,41,254,236,99,87,255,41,123,169,1,52,114,43,0,117,134,40,0,155,134,26,0,231,207,91,254,35,132,38,255,19,102,125,254,36,227,133,255,118,3,113,255,29,13,124,0,152,96,74,1,88,146,206,255,167,191,220,254,162,18,88,255,182,100,23,0,31,117,52,0,81,46,106,1,12,2,7,0,69,80,201,1,209,246,172,0,12,48,141,1,224,211,88,0,116,226,159,0,122,98,130,0,65,236,234,1,225,226,9,255,207,226,123,1,89,214,59,0,112,135,88,1,90,244,203,255,49,11,38,1,129,108,186,0,89,112,15,1,101,46,204,255,127,204,45,254,79,255,221,255,51,73,18,255,127,42,101,255,241,21,202,0,160,227,7,0,105,50,236,0,79,52,197,255,104,202,208,1,180,15,16,0,101,197,78,255,98,77,203,0,41,185,241,1,35,193,124,0,35,155,23,255,207,53,192,0,11,125,163,1,249,158,185,255,4,131,48,0,21,93,111,255,61,121,231,1,69,200,36,255,185,48,185,255,111,238,21,255,39,50,25,255,99,215,163,255,87,212,30,255,164,147,5,255,128,6,35,1,108,223,110,255,194,76,178,0,74,101,180,0,243,47,48,0,174,25,43,255,82,173,253,1,54,114,192,255,40,55,91,0,215,108,176,255,11,56,7,0,224,233,76,0,209,98,202,254,242,25,125,0,44,193,93,254,203,8,177,0,135,176,19,0,112,71,213,255,206,59,176,1,4,67,26,0,14,143,213,254,42,55,208,255,60,67,120,0,193,21,163,0,99,164,115,0,10,20,118,0,156,212,222,254,160,7,217,255,114,245,76,1,117,59,123,0,176,194,86,254,213,15,176,0,78,206,207,254,213,129,59,0,233,251,22,1,96,55,152,255,236,255,15,255,197,89,84,255,93,149,133,0,174,160,113,0,234,99,169,255,152,116,88,0,144,164,83,255,95,29,198,255,34,47,15,255,99,120,134,255,5,236,193,0,249,247,126,255,147,187,30,0,50,230,117,255,108,217,219,255,163,81,166,255,72,25,169,254,155,121,79,255,28,155,89,254,7,126,17,0,147,65,33,1,47,234,253,0,26,51,18,0,105,83,199,255,163,196,230,0,113,248,164,0,226,254,218,0,189,209,203,255,164,247,222,254,255,35,165,0,4,188,243,1,127,179,71,0,37,237,254,255,100,186,240,0,5,57,71,254,103,72,73,255,244,18,81,254,229,210,132,255,238,6,180,255,11,229,174,255,227,221,192,1,17,49,28,0,163,215,196,254,9,118,4,255,51,240,71,0,113,129,109,255,76,240,231,0,188,177,127,0,125,71,44,1,26,175,243,0,94,169,25,254,27,230,29,0,15,139,119,1,168,170,186,255,172,197,76,255,252,75,188,0,137,124,196,0,72,22,96,255,45,151,249,1,220,145,100,0,64,192,159,255,120,239,226,0,129,178,146,0,0,192,125,0,235,138,234,0,183,157,146,0,83,199,192,255,184,172,72,255,73,225,128,0,77,6,250,255,186,65,67,0,104,246,207,0,188,32,138,255,218,24,242,0,67,138,81,254,237,129,121,255,20,207,150,1,41,199,16,255,6,20,128,0,159,118,5,0,181,16,143,255,220,38,15,0,23,64,147,254,73,26,13,0,87,228,57,1,204,124,128,0,43,24,223,0,219,99,199,0,22,75,20,255,19,27,126,0,157,62,215,0,110,29,230,0,179,167,255,1,54,252,190,0,221,204,182,254,179,158,65,255,81,157,3,0,194,218,159,0,170,223,0,0,224,11,32,255,38,197,98,0,168,164,37,0,23,88,7,1,164,186,110,0,96,36,134,0,234,242,229,0,250,121,19,0,242,254,112,255,3,47,94,1,9,239,6,255,81,134,153,254,214,253,168,255,67,124,224,0,245,95,74,0,28,30,44,254,1,109,220,255,178,89,89,0,252,36,76,0,24,198,46,255,76,77,111,0,134,234,136,255,39,94,29,0,185,72,234,255,70,68,135,255,231,102,7,254,77,231,140,0,167,47,58,1,148,97,118,255,16,27,225,1,166,206,143,255,110,178,214,255,180,131,162,0,143,141,225,1,13,218,78,255,114,153,33,1,98,104,204,0,175,114,117,1,167,206,75,0,202,196,83,1,58,64,67,0,138,47,111,1,196,247,128,255,137,224,224,254,158,112,207,0,154,100,255,1,134,37,107,0,198,128,79,255,127,209,155,255,163,254,185,254,60,14,243,0,31,219,112,254,29,217,65,0,200,13,116,254,123,60,196,255,224,59,184,254,242,89,196,0,123,16,75,254,149,16,206,0,69,254,48,1,231,116,223,255,209,160,65,1,200,80,98,0,37,194,184,254,148,63,34,0,139,240,65,255,217,144,132,255,56,38,45,254,199,120,210,0,108,177,166,255,160,222,4,0,220,126,119,254,165,107,160,255,82,220,248,1,241,175,136,0,144,141,23,255,169,138,84,0,160,137,78,255,226,118,80,255,52,27,132,255,63,96,139,255,152,250,39,0,188,155,15,0,232,51,150,254,40,15,232,255,240,229,9,255,137,175,27,255,75,73,97,1,218,212,11,0,135,5,162,1,107,185,213,0,2,249,107,255,40,242,70,0,219,200,25,0,25,157,13,0,67,82,80,255,196,249,23,255,145,20,149,0,50,72,146,0,94,76,148,1,24,251,65,0,31,192,23,0,184,212,201,255,123,233,162,1,247,173,72,0,162,87,219,254,126,134,89,0,159,11,12,254,166,105,29,0,73,27,228,1,113,120,183,255,66,163,109,1,212,143,11,255,159,231,168,1,255,128,90,0,57,14,58,254,89,52,10,255,253,8,163,1,0,145,210,255,10,129,85,1,46,181,27,0,103,136,160,254,126,188,209,255,34,35,111,0,215,219,24,255,212,11,214,254,101,5,118,0,232,197,133,255,223,167,109,255,237,80,86,255,70,139,94,0,158,193,191,1,155,15,51,255,15,190,115,0,78,135,207,255,249,10,27,1,181,125,233,0,95,172,13,254,170,213,161,255,39,236,138,255,95,93,87,255,190,128,95,0,125,15,206,0,166,150,159,0,227,15,158,255,206,158,120,255,42,141,128,0,101,178,120,1,156,109,131,0,218,14,44,254,247,168,206,255,212,112,28,0,112,17,228,255,90,16,37,1,197,222,108,0,254,207,83,255,9,90,243,255,243,244,172,0,26,88,115,255,205,116,122,0,191,230,193,0,180,100,11,1,217,37,96,255,154,78,156,0,235,234,31,255,206,178,178,255,149,192,251,0,182,250,135,0,246,22,105,0,124,193,109,255,2,210,149,255,169,17,170,0,0,96,110,255,117,9,8,1,50,123,40,255,193,189,99,0,34,227,160,0,48,80,70,254,211,51,236,0,45,122,245,254,44,174,8,0,173,37,233,255,158,65,171,0,122,69,215,255,90,80,2,255,131,106,96,254,227,114,135,0,205,49,119,254,176,62,64,255,82,51,17,255,241,20,243,255,130,13,8,254,128,217,243,255,162,27,1,254,90,118,241,0,246,198,246,255,55,16,118,255,200,159,157,0,163,17,1,0,140,107,121,0,85,161,118,255,38,0,149,0,156,47,238,0,9,166,166,1,75,98,181,255,50,74,25,0,66,15,47,0,139,225,159,0,76,3,142,255,14,238,184,0,11,207,53,255,183,192,186,1,171,32,174,255,191,76,221,1,247,170,219,0,25,172,50,254,217,9,233,0,203,126,68,255,183,92,48,0,127,167,183,1,65,49,254,0,16,63,127,1,254,21,170,255,59,224,127,254,22,48,63,255,27,78,130,254,40,195,29,0,250,132,112,254,35,203,144,0,104,169,168,0,207,253,30,255,104,40,38,254,94,228,88,0,206,16,128,255,212,55,122,255,223,22,234,0,223,197,127,0,253,181,181,1,145,102,118,0,236,153,36,255,212,217,72,255,20,38,24,254,138,62,62,0,152,140,4,0,230,220,99,255,1,21,212,255,148,201,231,0,244,123,9,254,0,171,210,0,51,58,37,255,1,255,14,255,244,183,145,254,0,242,166,0,22,74,132,0,121,216,41,0,95,195,114,254,133,24,151,255,156,226,231,255,247,5,77,255,246,148,115,254,225,92,81,255,222,80,246,254,170,123,89,255,74,199,141,0,29,20,8,255,138,136,70,255,93,75,92,0,221,147,49,254,52,126,226,0,229,124,23,0,46,9,181,0,205,64,52,1,131,254,28,0,151,158,212,0,131,64,78,0,206,25,171,0,0,230,139,0,191,253,110,254,103,247,167,0,64,40,40,1,42,165,241,255,59,75,228,254,124,243,189,255,196,92,178,255,130,140,86,255,141,89,56,1,147,198,5,255,203,248,158,254,144,162,141,0,11,172,226,0,130,42,21,255,1,167,143,255,144,36,36,255,48,88,164,254,168,170,220,0,98,71,214,0,91,208,79,0,159,76,201,1,166,42,214,255,69,255,0,255,6,128,125,255,190,1,140,0,146,83,218,255,215,238,72,1,122,127,53,0,189,116,165,255,84,8,66,255,214,3,208,255,213,110,133,0,195,168,44,1,158,231,69,0,162,64,200,254,91,58,104,0,182,58,187,254,249,228,136,0,203,134,76,254,99,221,233,0,75,254,214,254,80,69,154,0,64,152,248,254,236,136,202,255,157,105,153,254,149,175,20,0,22,35,19,255,124,121,233,0,186,250,198,254,132,229,139,0,137,80,174,255,165,125,68,0,144,202,148,254,235,239,248,0,135,184,118,0,101,94,17,255,122,72,70,254,69,130,146,0,127,222,248,1,69,127,118,255,30,82,215,254,188,74,19,255,229,167,194,254,117,25,66,255,65,234,56,254,213,22,156,0,151,59,93,254,45,28,27,255,186,126,164,255,32,6,239,0,127,114,99,1,219,52,2,255,99,96,166,254,62,190,126,255,108,222,168,1,75,226,174,0,230,226,199,0,60,117,218,255,252,248,20,1,214,188,204,0,31,194,134,254,123,69,192,255,169,173,36,254,55,98,91,0,223,42,102,254,137,1,102,0,157,90,25,0,239,122,64,255,252,6,233,0,7,54,20,255,82,116,174,0,135,37,54,255,15,186,125,0,227,112,175,255,100,180,225,255,42,237,244,255,244,173,226,254,248,18,33,0,171,99,150,255,74,235,50,255,117,82,32,254,106,168,237,0,207,109,208,1,228,9,186,0,135,60,169,254,179,92,143,0,244,170,104,255,235,45,124,255,70,99,186,0,117,137,183,0,224,31,215,0,40,9,100,0,26,16,95,1,68,217,87,0,8,151,20,255,26,100,58,255,176,165,203,1,52,118,70,0,7,32,254,254,244,254,245,255,167,144,194,255,125,113,23,255,176,121,181,0,136,84,209,0,138,6,30,255,89,48,28,0,33,155,14,255,25,240,154,0,141,205,109,1,70,115,62,255,20,40,107,254,138,154,199,255,94,223,226,255,157,171,38,0,163,177,25,254,45,118,3,255,14,222,23,1,209,190,81,255,118,123,232,1,13,213,101,255,123,55,123,254,27,246,165,0,50,99,76,255,140,214,32,255,97,65,67,255,24,12,28,0,174,86,78,1,64,247,96,0,160,135,67,0,66,55,243,255,147,204,96,255,26,6,33,255,98,51,83,1,153,213,208,255,2,184,54,255,25,218,11,0,49,67,246,254,18,149,72,255,13,25,72,0,42,79,214,0,42,4,38,1,27,139,144,255,149,187,23,0,18,164,132,0,245,84,184,254,120,198,104,255,126,218,96,0,56,117,234,255,13,29,214,254,68,47,10,255,167,154,132,254,152,38,198,0,66,178,89,255,200,46,171,255,13,99,83,255,210,187,253,255,170,45,42,1,138,209,124,0,214,162,141,0,12,230,156,0,102,36,112,254,3,147,67,0,52,215,123,255,233,171,54,255,98,137,62,0,247,218,39,255,231,218,236,0,247,191,127,0,195,146,84,0,165,176,92,255,19,212,94,255,17,74,227,0,88,40,153,1,198,147,1,255,206,67,245,254,240,3,218,255,61,141,213,255,97,183,106,0,195,232,235,254,95,86,154,0,209,48,205,254,118,209,241,255,240,120,223,1,213,29,159,0,163,127,147,255,13,218,93,0,85,24,68,254,70,20,80,255,189,5,140,1,82,97,254,255,99,99,191,255,132,84,133,255,107,218,116,255,112,122,46,0,105,17,32,0,194,160,63,255,68,222,39,1,216,253,92,0,177,105,205,255,149,201,195,0,42,225,11,255,40,162,115,0,9,7,81,0,165,218,219,0,180,22,0,254,29,146,252,255,146,207,225,1,180,135,96,0,31,163,112,0,177,11,219,255,133,12,193,254,43,78,50,0,65,113,121,1,59,217,6,255,110,94,24,1,112,172,111,0,7,15,96,0,36,85,123,0,71,150,21,255,208,73,188,0,192,11,167,1,213,245,34,0,9,230,92,0,162,142,39,255,215,90,27,0,98,97,89,0,94,79,211,0,90,157,240,0,95,220,126,1,102,176,226,0,36,30,224,254,35,31,127,0,231,232,115,1,85,83,130,0,210,73,245,255,47,143,114,255,68,65,197,0,59,72,62,255,183,133,173,254,93,121,118,255,59,177,81,255,234,69,173,255,205,128,177,0,220,244,51,0,26,244,209,1,73,222,77,255,163,8,96,254,150,149,211,0,158,254,203,1,54,127,139,0,161,224,59,0,4,109,22,255,222,42,45,255,208,146,102,255,236,142,187,0,50,205,245,255,10,74,89,254,48,79,142,0,222,76,130,255,30,166,63,0,236,12,13,255,49,184,244,0,187,113,102,0,218,101,253,0,153,57,182,254,32,150,42,0,25,198,146,1,237,241,56,0,140,68,5,0,91,164,172,255,78,145,186,254,67,52,205,0,219,207,129,1,109,115,17,0,54,143,58,1,21,248,120,255,179,255,30,0,193,236,66,255,1,255,7,255,253,192,48,255,19,69,217,1,3,214,0,255,64,101,146,1,223,125,35,255,235,73,179,255,249,167,226,0,225,175,10,1,97,162,58,0,106,112,171,1,84,172,5,255,133,140,178,255,134,245,142,0,97,90,125,255,186,203,185,255,223,77,23,255,192,92,106,0,15,198,115,255,217,152,248,0,171,178,120,255,228,134,53,0,176,54,193,1,250,251,53,0,213,10,100,1,34,199,106,0,151,31,244,254,172,224,87,255,14,237,23,255,253,85,26,255,127,39,116,255,172,104,100,0,251,14,70,255,212,208,138,255,253,211,250,0,176,49,165,0,15,76,123,255,37,218,160,255,92,135,16,1,10,126,114,255,70,5,224,255,247,249,141,0,68,20,60,1,241,210,189,255,195,217,187,1,151,3,113,0,151,92,174,0,231,62,178,255,219,183,225,0,23,23,33,255,205,181,80,0,57,184,248,255,67,180,1,255,90,123,93,255,39,0,162,255,96,248,52,255,84,66,140,0,34,127,228,255,194,138,7,1,166,110,188,0,21,17,155,1,154,190,198,255,214,80,59,255,18,7,143,0,72,29,226,1,199,217,249,0,232,161,71,1,149,190,201,0,217,175,95,254,113,147,67,255,138,143,199,255,127,204,1,0,29,182,83,1,206,230,155,255,186,204,60,0,10,125,85,255,232,96,25,255,255,89,247,255,213,254,175,1,232,193,81,0,28,43,156,254,12,69,8,0,147,24,248,0,18,198,49,0,134,60,35,0,118,246,18,255,49,88,254,254,228,21,186,255,182,65,112,1,219,22,1,255,22,126,52,255,189,53,49,255,112,25,143,0,38,127,55,255,226,101,163,254,208,133,61,255,137,69,174,1,190,118,145,255,60,98,219,255,217,13,245,255,250,136,10,0,84,254,226,0,201,31,125,1,240,51,251,255,31,131,130,255,2,138,50,255,215,215,177,1,223,12,238,255,252,149,56,255,124,91,68,255,72,126,170,254,119,255,100,0,130,135,232,255,14,79,178,0,250,131,197,0,138,198,208,0,121,216,139,254,119,18,36,255,29,193,122,0,16,42,45,255,213,240,235,1,230,190,169,255,198,35,228,254,110,173,72,0,214,221,241,255,56,148,135,0,192,117,78,254,141,93,207,255,143,65,149,0,21,18,98,255,95,44,244,1,106,191,77,0,254,85,8,254,214,110,176,255,73,173,19,254,160,196,199,255,237,90,144,0,193,172,113,255,200,155,136,254,228,90,221,0,137,49,74,1,164,221,215,255,209,189,5,255,105,236,55,255,42,31,129,1,193,255,236,0,46,217,60,0,138,88,187,255,226,82,236,255,81,69,151,255,142,190,16,1,13,134,8,0,127,122,48,255,81,64,156,0,171,243,139,0,237,35,246,0,122,143,193,254,212,122,146,0,95,41,255,1,87,132,77,0,4,212,31,0,17,31,78,0,39,45,173,254,24,142,217,255,95,9,6,255,227,83,6,0,98,59,130,254,62,30,33,0,8,115,211,1,162,97,128,255,7,184,23,254,116,28,168,255,248,138,151,255,98,244,240,0,186,118,130,0,114,248,235,255,105,173,200,1,160,124,71,255,94,36,164,1,175,65,146,255,238,241,170,254,202,198,197,0,228,71,138,254,45,246,109,255,194,52,158,0,133,187,176,0,83,252,154,254,89,189,221,255,170,73,252,0,148,58,125,0,36,68,51,254,42,69,177,255,168,76,86,255,38,100,204,255,38,53,35,0,175,19,97,0,225,238,253,255,81,81,135,0,210,27,255,254,235,73,107,0,8,207,115,0,82,127,136,0,84,99,21,254,207,19,136,0,100,164,101,0,80,208,77,255,132,207,237,255,15,3,15,255,33,166,110,0,156,95,85,255,37,185,111,1,150,106,35,255,166,151,76,0,114,87,135,255,159,194,64,0,12,122,31,255,232,7,101,254,173,119,98,0,154,71,220,254,191,57,53,255,168,232,160,255,224,32,99,255,218,156,165,0,151,153,163,0,217,13,148,1,197,113,89,0,149,28,161,254,207,23,30,0,105,132,227,255,54,230,94,255,133,173,204,255,92,183,157,255,88,144,252,254,102,33,90,0,159,97,3,0,181,218,155,255,240,114,119,0,106,214,53,255,165,190,115,1,152,91,225,255,88,106,44,255,208,61,113,0,151,52,124,0,191,27,156,255,110,54,236,1,14,30,166,255,39,127,207,1,229,199,28,0,188,228,188,254,100,157,235,0,246,218,183,1,107,22,193,255,206,160,95,0,76,239,147,0,207,161,117,0,51,166,2,255,52,117,10,254,73,56,227,255,152,193,225,0,132,94,136,255,101,191,209,0,32,107,229,255,198,43,180,1,100,210,118,0,114,67,153,255,23,88,26,255,89,154,92,1,220,120,140,255,144,114,207,255,252,115,250,255,34,206,72,0,138,133,127,255,8,178,124,1,87,75,97,0,15,229,92,254,240,67,131,255,118,123,227,254,146,120,104,255,145,213,255,1,129,187,70,255,219,119,54,0,1,19,173,0,45,150,148,1,248,83,72,0,203,233,169,1,142,107,56,0,247,249,38,1,45,242,80,255,30,233,103,0,96,82,70,0,23,201,111,0,81,39,30,255,161,183,78,255,194,234,33,255,68,227,140,254,216,206,116,0,70,27,235,255,104,144,79,0,164,230,93,254,214,135,156,0,154,187,242,254,188,20,131,255,36,109,174,0,159,112,241,0,5,110,149,1,36,165,218,0,166,29,19,1,178,46,73,0,93,43,32,254,248,189,237,0,102,155,141,0,201,93,195,255,241,139,253,255,15,111,98,255,108,65,163,254,155,79,190,255,73,174,193,254,246,40,48,255,107,88,11,254,202,97,85,255,253,204,18,255,113,242,66,0,110,160,194,254,208,18,186,0,81,21,60,0,188,104,167,255,124,166,97,254,210,133,142,0,56,242,137,254,41,111,130,0,111,151,58,1,111,213,141,255,183,172,241,255,38,6,196,255,185,7,123,255,46,11,246,0,245,105,119,1,15,2,161,255,8,206,45,255,18,202,74,255,83,124,115,1,212,141,157,0,83,8,209,254,139,15,232,255,172,54,173,254,50,247,132,0,214,189,213,0,144,184,105,0,223,254,248,0,255,147,240,255,23,188,72,0,7,51,54,0,188,25,180,254,220,180,0,255,83,160,20,0,163,189,243,255,58,209,194,255,87,73,60,0,106,24,49,0,245,249,220,0,22,173,167,0,118,11,195,255,19,126,237,0,110,159,37,255,59,82,47,0,180,187,86,0,188,148,208,1,100,37,133,255,7,112,193,0,129,188,156,255,84,106,129,255,133,225,202,0,14,236,111,255,40,20,101,0,172,172,49,254,51,54,74,255,251,185,184,255,93,155,224,255,180,249,224,1,230,178,146,0,72,57,54,254,178,62,184,0,119,205,72,0,185,239,253,255,61,15,218,0,196,67,56,255,234,32,171,1,46,219,228,0,208,108,234,255,20,63,232,255,165,53,199,1,133,228,5,255,52,205,107,0,74,238,140,255,150,156,219,254,239,172,178,255,251,189,223,254,32,142,211,255,218,15,138,1,241,196,80,0,28,36,98,254,22,234,199,0,61,237,220,255,246,57,37,0,142,17,142,255,157,62,26,0,43,238,95,254,3,217,6,255,213,25,240,1,39,220,174,255,154,205,48,254,19,13,192,255,244,34,54,254,140,16,155,0,240,181,5,254,155,193,60,0,166,128,4,255,36,145,56,255,150,240,219,0,120,51,145,0,82,153,42,1,140,236,146,0,107,92,248,1,189,10,3,0,63,136,242,0,211,39,24,0,19,202,161,1,173,27,186,255,210,204,239,254,41,209,162,255,182,254,159,255,172,116,52,0,195,103,222,254,205,69,59,0,53,22,41,1,218,48,194,0,80,210,242,0,210,188,207,0,187,161,161,254,216,17,1,0,136,225,113,0,250,184,63,0,223,30,98,254,77,168,162,0,59,53,175,0,19,201,10,255,139,224,194,0,147,193,154,255,212,189,12,254,1,200,174,255,50,133,113,1,94,179,90,0,173,182,135,0,94,177,113,0,43,89,215,255,136,252,106,255,123,134,83,254,5,245,66,255,82,49,39,1,220,2,224,0,97,129,177,0,77,59,89,0,61,29,155,1,203,171,220,255,92,78,139,0,145,33,181,255,169,24,141,1,55,150,179,0,139,60,80,255,218,39,97,0,2,147,107,255,60,248,72,0,173,230,47,1,6,83,182,255,16,105,162,254,137,212,81,255,180,184,134,1,39,222,164,255,221,105,251,1,239,112,125,0,63,7,97,0,63,104,227,255,148,58,12,0,90,60,224,255,84,212,252,0,79,215,168,0,248,221,199,1,115,121,1,0,36,172,120,0,32,162,187,255,57,107,49,255,147,42,21,0,106,198,43,1,57,74,87,0,126,203,81,255,129,135,195,0,140,31,177,0,221,139,194,0,3,222,215,0,131,68,231,0,177,86,178,254,124,151,180,0,184,124,38,1,70,163,17,0,249,251,181,1,42,55,227,0,226,161,44,0,23,236,110,0,51,149,142,1,93,5,236,0,218,183,106,254,67,24,77,0,40,245,209,255,222,121,153,0,165,57,30,0,83,125,60,0,70,38,82,1,229,6,188,0,109,222,157,255,55,118,63,255,205,151,186,0,227,33,149,255,254,176,246,1,227,177,227,0,34,106,163,254,176,43,79,0,106,95,78,1,185,241,122,255,185,14,61,0,36,1,202,0,13,178,162,255,247,11,132,0,161,230,92,1,65,1,185,255,212,50,165,1,141,146,64,255,158,242,218,0,21,164,125,0,213,139,122,1,67,71,87,0,203,158,178,1,151,92,43,0,152,111,5,255,39,3,239,255,217,255,250,255,176,63,71,255,74,245,77,1,250,174,18,255,34,49,227,255,246,46,251,255,154,35,48,1,125,157,61,255,106,36,78,255,97,236,153,0,136,187,120,255,113,134,171,255,19,213,217,254,216,94,209,255,252,5,61,0,94,3,202,0,3,26,183,255,64,191,43,255,30,23,21,0,129,141,77,255,102,120,7,1,194,76,140,0,188,175,52,255,17,81,148,0,232,86,55,1,225,48,172,0,134,42,42,255,238,50,47,0,169,18,254,0,20,147,87,255,14,195,239,255,69,247,23,0,238,229,128,255,177,49,112,0,168,98,251,255,121,71,248,0,243,8,145,254,246,227,153,255,219,169,177,254,251,139,165,255,12,163,185,255,164,40,171,255,153,159,27,254,243,109,91,255,222,24,112,1,18,214,231,0,107,157,181,254,195,147,0,255,194,99,104,255,89,140,190,255,177,66,126,254,106,185,66,0,49,218,31,0,252,174,158,0,188,79,230,1,238,41,224,0,212,234,8,1,136,11,181,0,166,117,83,255,68,195,94,0,46,132,201,0,240,152,88,0,164,57,69,254,160,224,42,255,59,215,67,255,119,195,141,255,36,180,121,254,207,47,8,255,174,210,223,0,101,197,68,255,255,82,141,1,250,137,233,0,97,86,133,1,16,80,69,0,132,131,159,0,116,93,100,0,45,141,139,0,152,172,157,255,90,43,91,0,71,153,46,0,39,16,112,255,217,136,97,255,220,198,25,254,177,53,49,0,222,88,134,255,128,15,60,0,207,192,169,255,192,116,209,255,106,78,211,1,200,213,183,255,7,12,122,254,222,203,60,255,33,110,199,254,251,106,117,0,228,225,4,1,120,58,7,255,221,193,84,254,112,133,27,0,189,200,201,255,139,135,150,0,234,55,176,255,61,50,65,0,152,108,169,255,220,85,1,255,112,135,227,0,162,26,186,0,207,96,185,254,244,136,107,0,93,153,50,1,198,97,151,0,110,11,86,255,143,117,174,255,115,212,200,0,5,202,183,0,237,164,10,254,185,239,62,0,236,120,18,254,98,123,99,255,168,201,194,254,46,234,214,0,191,133,49,255,99,169,119,0,190,187,35,1,115,21,45,255,249,131,72,0,112,6,123,255,214,49,181,254,166,233,34,0,92,197,102,254,253,228,205,255,3,59,201,1,42,98,46,0,219,37,35,255,169,195,38,0,94,124,193,1,156,43,223,0,95,72,133,254,120,206,191,0,122,197,239,255,177,187,79,255,254,46,2,1,250,167,190,0,84,129,19,0,203,113,166,255,249,31,189,254,72,157,202,255,208,71,73,255,207,24,72,0,10,16,18,1,210,81,76,255,88,208,192,255,126,243,107,255,238,141,120,255,199,121,234,255,137,12,59,255,36,220,123,255,148,179,60,254,240,12,29,0,66,0,97,1,36,30,38,255,115,1,93,255,96,103,231,255,197,158,59,1,192,164,240,0,202,202,57,255,24,174,48,0,89,77,155,1,42,76,215,0,244,151,233,0,23,48,81,0,239,127,52,254,227,130,37,255,248,116,93,1,124,132,118,0,173,254,192,1,6,235,83,255,110,175,231,1,251,28,182,0,129,249,93,254,84,184,128,0,76,181,62,0,175,128,186,0,100,53,136,254,109,29,226,0,221,233,58,1,20,99,74,0,0,22,160,0,134,13,21,0,9,52,55,255,17,89,140,0,175,34,59,0,84,165,119,255,224,226,234,255,7,72,166,255,123,115,255,1,18,214,246,0,250,7,71,1,217,220,185,0,212,35,76,255,38,125,175,0,189,97,210,0,114,238,44,255,41,188,169,254,45,186,154,0,81,92,22,0,132,160,193,0,121,208,98,255,13,81,44,255,203,156,82,0,71,58,21,255,208,114,191,254,50,38,147,0,154,216,195,0,101,25,18,0,60,250,215,255,233,132,235,255,103,175,142,1,16,14,92,0,141,31,110,254,238,241,45,255,153,217,239,1,97,168,47,255,249,85,16,1,28,175,62,255],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([57,254,54,0,222,231,126,0,166,45,117,254,18,189,96,255,228,76,50,0,200,244,94,0,198,152,120,1,68,34,69,255,12,65,160,254,101,19,90,0,167,197,120,255,68,54,185,255,41,218,188,0,113,168,48,0,88,105,189,1,26,82,32,255,185,93,164,1,228,240,237,255,66,182,53,0,171,197,92,255,107,9,233,1,199,120,144,255,78,49,10,255,109,170,105,255,90,4,31,255,28,244,113,255,74,58,11,0,62,220,246,255,121,154,200,254,144,210,178,255,126,57,129,1,43,250,14,255,101,111,28,1,47,86,241,255,61,70,150,255,53,73,5,255,30,26,158,0,209,26,86,0,138,237,74,0,164,95,188,0,142,60,29,254,162,116,248,255,187,175,160,0,151,18,16,0,209,111,65,254,203,134,39,255,88,108,49,255,131,26,71,255,221,27,215,254,104,105,93,255,31,236,31,254,135,0,211,255,143,127,110,1,212,73,229,0,233,67,167,254,195,1,208,255,132,17,221,255,51,217,90,0,67,235,50,255,223,210,143,0,179,53,130,1,233,106,198,0,217,173,220,255,112,229,24,255,175,154,93,254,71,203,246,255,48,66,133,255,3,136,230,255,23,221,113,254,235,111,213,0,170,120,95,254,251,221,2,0,45,130,158,254,105,94,217,255,242,52,180,254,213,68,45,255,104,38,28,0,244,158,76,0,161,200,96,255,207,53,13,255,187,67,148,0,170,54,248,0,119,162,178,255,83,20,11,0,42,42,192,1,146,159,163,255,183,232,111,0,77,229,21,255,71,53,143,0,27,76,34,0,246,136,47,255,219,39,182,255,92,224,201,1,19,142,14,255,69,182,241,255,163,118,245,0,9,109,106,1,170,181,247,255,78,47,238,255,84,210,176,255,213,107,139,0,39,38,11,0,72,21,150,0,72,130,69,0,205,77,155,254,142,133,21,0,71,111,172,254,226,42,59,255,179,0,215,1,33,128,241,0,234,252,13,1,184,79,8,0,110,30,73,255,246,141,189,0,170,207,218,1,74,154,69,255,138,246,49,255,155,32,100,0,125,74,105,255,90,85,61,255,35,229,177,255,62,125,193,255,153,86,188,1,73,120,212,0,209,123,246,254,135,209,38,255,151,58,44,1,92,69,214,255,14,12,88,255,252,153,166,255,253,207,112,255,60,78,83,255,227,124,110,0,180,96,252,255,53,117,33,254,164,220,82,255,41,1,27,255,38,164,166,255,164,99,169,254,61,144,70,255,192,166,18,0,107,250,66,0,197,65,50,0,1,179,18,255,255,104,1,255,43,153,35,255,80,111,168,0,110,175,168,0,41,105,45,255,219,14,205,255,164,233,140,254,43,1,118,0,233,67,195,0,178,82,159,255,138,87,122,255,212,238,90,255,144,35,124,254,25,140,164,0,251,215,44,254,133,70,107,255,101,227,80,254,92,169,55,0,215,42,49,0,114,180,85,255,33,232,27,1,172,213,25,0,62,176,123,254,32,133,24,255,225,191,62,0,93,70,153,0,181,42,104,1,22,191,224,255,200,200,140,255,249,234,37,0,149,57,141,0,195,56,208,255,254,130,70,255,32,173,240,255,29,220,199,0,110,100,115,255,132,229,249,0,228,233,223,255,37,216,209,254,178,177,209,255,183,45,165,254,224,97,114,0,137,97,168,255,225,222,172,0,165,13,49,1,210,235,204,255,252,4,28,254,70,160,151,0,232,190,52,254,83,248,93,255,62,215,77,1,175,175,179,255,160,50,66,0,121,48,208,0,63,169,209,255,0,210,200,0,224,187,44,1,73,162,82,0,9,176,143,255,19,76,193,255,29,59,167,1,24,43,154,0,28,190,190,0,141,188,129,0,232,235,203,255,234,0,109,255,54,65,159,0,60,88,232,255,121,253,150,254,252,233,131,255,198,110,41,1,83,77,71,255,200,22,59,254,106,253,242,255,21,12,207,255,237,66,189,0,90,198,202,1,225,172,127,0,53,22,202,0,56,230,132,0,1,86,183,0,109,190,42,0,243,68,174,1,109,228,154,0,200,177,122,1,35,160,183,255,177,48,85,255,90,218,169,255,248,152,78,0,202,254,110,0,6,52,43,0,142,98,65,255,63,145,22,0,70,106,93,0,232,138,107,1,110,179,61,255,211,129,218,1,242,209,92,0,35,90,217,1,182,143,106,255,116,101,217,255,114,250,221,255,173,204,6,0,60,150,163,0,73,172,44,255,239,110,80,255,237,76,153,254,161,140,249,0,149,232,229,0,133,31,40,255,174,164,119,0,113,51,214,0,129,228,2,254,64,34,243,0,107,227,244,255,174,106,200,255,84,153,70,1,50,35,16,0,250,74,216,254,236,189,66,255,153,249,13,0,230,178,4,255,221,41,238,0,118,227,121,255,94,87,140,254,254,119,92,0,73,239,246,254,117,87,128,0,19,211,145,255,177,46,252,0,229,91,246,1,69,128,247,255,202,77,54,1,8,11,9,255,153,96,166,0,217,214,173,255,134,192,2,1,0,207,0,0,189,174,107,1,140,134,100,0,158,193,243,1,182,102,171,0,235,154,51,0,142,5,123,255,60,168,89,1,217,14,92,255,19,214,5,1,211,167,254,0,44,6,202,254,120,18,236,255,15,113,184,255,184,223,139,0,40,177,119,254,182,123,90,255,176,165,176,0,247,77,194,0,27,234,120,0,231,0,214,255,59,39,30,0,125,99,145,255,150,68,68,1,141,222,248,0,153,123,210,255,110,127,152,255,229,33,214,1,135,221,197,0,137,97,2,0,12,143,204,255,81,41,188,0,115,79,130,255,94,3,132,0,152,175,187,255,124,141,10,255,126,192,179,255,11,103,198,0,149,6,45,0,219,85,187,1,230,18,178,255,72,182,152,0,3,198,184,255,128,112,224,1,97,161,230,0,254,99,38,255,58,159,197,0,151,66,219,0,59,69,143,255,185,112,249,0,119,136,47,255,123,130,132,0,168,71,95,255,113,176,40,1,232,185,173,0,207,93,117,1,68,157,108,255,102,5,147,254,49,97,33,0,89,65,111,254,247,30,163,255,124,217,221,1,102,250,216,0,198,174,75,254,57,55,18,0,227,5,236,1,229,213,173,0,201,109,218,1,49,233,239,0,30,55,158,1,25,178,106,0,155,111,188,1,94,126,140,0,215,31,238,1,77,240,16,0,213,242,25,1,38,71,168,0,205,186,93,254,49,211,140,255,219,0,180,255,134,118,165,0,160,147,134,255,110,186,35,255,198,243,42,0,243,146,119,0,134,235,163,1,4,241,135,255,193,46,193,254,103,180,79,255,225,4,184,254,242,118,130,0,146,135,176,1,234,111,30,0,69,66,213,254,41,96,123,0,121,94,42,255,178,191,195,255,46,130,42,0,117,84,8,255,233,49,214,254,238,122,109,0,6,71,89,1,236,211,123,0,244,13,48,254,119,148,14,0,114,28,86,255,75,237,25,255,145,229,16,254,129,100,53,255,134,150,120,254,168,157,50,0,23,72,104,255,224,49,14,0,255,123,22,255,151,185,151,255,170,80,184,1,134,182,20,0,41,100,101,1,153,33,16,0,76,154,111,1,86,206,234,255,192,160,164,254,165,123,93,255,1,216,164,254,67,17,175,255,169,11,59,255,158,41,61,255,73,188,14,255,195,6,137,255,22,147,29,255,20,103,3,255,246,130,227,255,122,40,128,0,226,47,24,254,35,36,32,0,152,186,183,255,69,202,20,0,195,133,195,0,222,51,247,0,169,171,94,1,183,0,160,255,64,205,18,1,156,83,15,255,197,58,249,254,251,89,110,255,50,10,88,254,51,43,216,0,98,242,198,1,245,151,113,0,171,236,194,1,197,31,199,255,229,81,38,1,41,59,20,0,253,104,230,0,152,93,14,255,246,242,146,254,214,169,240,255,240,102,108,254,160,167,236,0,154,218,188,0,150,233,202,255,27,19,250,1,2,71,133,255,175,12,63,1,145,183,198,0,104,120,115,255,130,251,247,0,17,212,167,255,62,123,132,255,247,100,189,0,155,223,152,0,143,197,33,0,155,59,44,255,150,93,240,1,127,3,87,255,95,71,207,1,167,85,1,255,188,152,116,255,10,23,23,0,137,195,93,1,54,98,97,0,240,0,168,255,148,188,127,0,134,107,151,0,76,253,171,0,90,132,192,0,146,22,54,0,224,66,54,254,230,186,229,255,39,182,196,0,148,251,130,255,65,131,108,254,128,1,160,0,169,49,167,254,199,254,148,255,251,6,131,0,187,254,129,255,85,82,62,0,178,23,58,255,254,132,5,0,164,213,39,0,134,252,146,254,37,53,81,255,155,134,82,0,205,167,238,255,94,45,180,255,132,40,161,0,254,111,112,1,54,75,217,0,179,230,221,1,235,94,191,255,23,243,48,1,202,145,203,255,39,118,42,255,117,141,253,0,254,0,222,0,43,251,50,0,54,169,234,1,80,68,208,0,148,203,243,254,145,7,135,0,6,254,0,0,252,185,127,0,98,8,129,255,38,35,72,255,211,36,220,1,40,26,89,0,168,64,197,254,3,222,239,255,2,83,215,254,180,159,105,0,58,115,194,0,186,116,106,255,229,247,219,255,129,118,193,0,202,174,183,1,166,161,72,0,201,107,147,254,237,136,74,0,233,230,106,1,105,111,168,0,64,224,30,1,1,229,3,0,102,151,175,255,194,238,228,255,254,250,212,0,187,237,121,0,67,251,96,1,197,30,11,0,183,95,204,0,205,89,138,0,64,221,37,1,255,223,30,255,178,48,211,255,241,200,90,255,167,209,96,255,57,130,221,0,46,114,200,255,61,184,66,0,55,182,24,254,110,182,33,0,171,190,232,255,114,94,31,0,18,221,8,0,47,231,254,0,255,112,83,0,118,15,215,255,173,25,40,254,192,193,31,255,238,21,146,255,171,193,118,255,101,234,53,254,131,212,112,0,89,192,107,1,8,208,27,0,181,217,15,255,231,149,232,0,140,236,126,0,144,9,199,255,12,79,181,254,147,182,202,255,19,109,182,255,49,212,225,0,74,163,203,0,175,233,148,0,26,112,51,0,193,193,9,255,15,135,249,0,150,227,130,0,204,0,219,1,24,242,205,0,238,208,117,255,22,244,112,0,26,229,34,0,37,80,188,255,38,45,206,254,240,90,225,255,29,3,47,255,42,224,76,0,186,243,167,0,32,132,15,255,5,51,125,0,139,135,24,0,6,241,219,0,172,229,133,255,246,214,50,0,231,11,207,255,191,126,83,1,180,163,170,255,245,56,24,1,178,164,211,255,3,16,202,1,98,57,118,255,141,131,89,254,33,51,24,0,243,149,91,255,253,52,14,0,35,169,67,254,49,30,88,255,179,27,36,255,165,140,183,0,58,189,151,0,88,31,0,0,75,169,66,0,66,101,199,255,24,216,199,1,121,196,26,255,14,79,203,254,240,226,81,255,94,28,10,255,83,193,240,255,204,193,131,255,94,15,86,0,218,40,157,0,51,193,209,0,0,242,177,0,102,185,247,0,158,109,116,0,38,135,91,0,223,175,149,0,220,66,1,255,86,60,232,0,25,96,37,255,225,122,162,1,215,187,168,255,158,157,46,0,56,171,162,0,232,240,101,1,122,22,9,0,51,9,21,255,53,25,238,255,217,30,232,254,125,169,148,0,13,232,102,0,148,9,37,0,165,97,141,1,228,131,41,0,222,15,243,255,254,18,17,0,6,60,237,1,106,3,113,0,59,132,189,0,92,112,30,0,105,208,213,0,48,84,179,255,187,121,231,254,27,216,109,255,162,221,107,254,73,239,195,255,250,31,57,255,149,135,89,255,185,23,115,1,3,163,157,255,18,112,250,0,25,57,187,255,161,96,164,0,47,16,243,0,12,141,251,254,67,234,184,255,41,18,161,0,175,6,96,255,160,172,52,254,24,176,183,255,198,193,85,1,124,121,137,255,151,50,114,255,220,203,60,255,207,239,5,1,0,38,107,255,55,238,94,254,70,152,94,0,213,220,77,1,120,17,69,255,85,164,190,255,203,234,81,0,38,49,37,254,61,144,124,0,137,78,49,254,168,247,48,0,95,164,252,0,105,169,135,0,253,228,134,0,64,166,75,0,81,73,20,255,207,210,10,0,234,106,150,255,94,34,90,255,254,159,57,254,220,133,99,0,139,147,180,254,24,23,185,0,41,57,30,255,189,97,76,0,65,187,223,255,224,172,37,255,34,62,95,1,231,144,240,0,77,106,126,254,64,152,91,0,29,98,155,0,226,251,53,255,234,211,5,255,144,203,222,255,164,176,221,254,5,231,24,0,179,122,205,0,36,1,134,255,125,70,151,254,97,228,252,0,172,129,23,254,48,90,209,255,150,224,82,1,84,134,30,0,241,196,46,0,103,113,234,255,46,101,121,254,40,124,250,255,135,45,242,254,9,249,168,255,140,108,131,255,143,163,171,0,50,173,199,255,88,222,142,255,200,95,158,0,142,192,163,255,7,117,135,0,111,124,22,0,236,12,65,254,68,38,65,255,227,174,254,0,244,245,38,0,240,50,208,255,161,63,250,0,60,209,239,0,122,35,19,0,14,33,230,254,2,159,113,0,106,20,127,255,228,205,96,0,137,210,174,254,180,212,144,255,89,98,154,1,34,88,139,0,167,162,112,1,65,110,197,0,241,37,169,0,66,56,131,255,10,201,83,254,133,253,187,255,177,112,45,254,196,251,0,0,196,250,151,255,238,232,214,255,150,209,205,0,28,240,118,0,71,76,83,1,236,99,91,0,42,250,131,1,96,18,64,255,118,222,35,0,113,214,203,255,122,119,184,255,66,19,36,0,204,64,249,0,146,89,139,0,134,62,135,1,104,233,101,0,188,84,26,0,49,249,129,0,208,214,75,255,207,130,77,255,115,175,235,0,171,2,137,255,175,145,186,1,55,245,135,255,154,86,181,1,100,58,246,255,109,199,60,255,82,204,134,255,215,49,230,1,140,229,192,255,222,193,251,255,81,136,15,255,179,149,162,255,23,39,29,255,7,95,75,254,191,81,222,0,241,81,90,255,107,49,201,255,244,211,157,0,222,140,149,255,65,219,56,254,189,246,90,255,178,59,157,1,48,219,52,0,98,34,215,0,28,17,187,255,175,169,24,0,92,79,161,255,236,200,194,1,147,143,234,0,229,225,7,1,197,168,14,0,235,51,53,1,253,120,174,0,197,6,168,255,202,117,171,0,163,21,206,0,114,85,90,255,15,41,10,255,194,19,99,0,65,55,216,254,162,146,116,0,50,206,212,255,64,146,29,255,158,158,131,1,100,165,130,255,172,23,129,255,125,53,9,255,15,193,18,1,26,49,11,255,181,174,201,1,135,201,14,255,100,19,149,0,219,98,79,0,42,99,143,254,96,0,48,255,197,249,83,254,104,149,79,255,235,110,136,254,82,128,44,255,65,41,36,254,88,211,10,0,187,121,187,0,98,134,199,0,171,188,179,254,210,11,238,255,66,123,130,254,52,234,61,0,48,113,23,254,6,86,120,255,119,178,245,0,87,129,201,0,242,141,209,0,202,114,85,0,148,22,161,0,103,195,48,0,25,49,171,255,138,67,130,0,182,73,122,254,148,24,130,0,211,229,154,0,32,155,158,0,84,105,61,0,177,194,9,255,166,89,86,1,54,83,187,0,249,40,117,255,109,3,215,255,53,146,44,1,63,47,179,0,194,216,3,254,14,84,136,0,136,177,13,255,72,243,186,255,117,17,125,255,211,58,211,255,93,79,223,0,90,88,245,255,139,209,111,255,70,222,47,0,10,246,79,255,198,217,178,0,227,225,11,1,78,126,179,255,62,43,126,0,103,148,35,0,129,8,165,254,245,240,148,0,61,51,142,0,81,208,134,0,15,137,115,255,211,119,236,255,159,245,248,255,2,134,136,255,230,139,58,1,160,164,254,0,114,85,141,255,49,166,182,255,144,70,84,1,85,182,7,0,46,53,93,0,9,166,161,255,55,162,178,255,45,184,188,0,146,28,44,254,169,90,49,0,120,178,241,1,14,123,127,255,7,241,199,1,189,66,50,255,198,143,101,254,189,243,135,255,141,24,24,254,75,97,87,0,118,251,154,1,237,54,156,0,171,146,207,255,131,196,246,255,136,64,113,1,151,232,57,0,240,218,115,0,49,61,27,255,64,129,73,1,252,169,27,255,40,132,10,1,90,201,193,255,252,121,240,1,186,206,41,0,43,198,97,0,145,100,183,0,204,216,80,254,172,150,65,0,249,229,196,254,104,123,73,255,77,104,96,254,130,180,8,0,104,123,57,0,220,202,229,255,102,249,211,0,86,14,232,255,182,78,209,0,239,225,164,0,106,13,32,255,120,73,17,255,134,67,233,0,83,254,181,0,183,236,112,1,48,64,131,255,241,216,243,255,65,193,226,0,206,241,100,254,100,134,166,255,237,202,197,0,55,13,81,0,32,124,102,255,40,228,177,0,118,181,31,1,231,160,134,255,119,187,202,0,0,142,60,255,128,38,189,255,166,201,150,0,207,120,26,1,54,184,172,0,12,242,204,254,133,66,230,0,34,38,31,1,184,112,80,0,32,51,165,254,191,243,55,0,58,73,146,254,155,167,205,255,100,104,152,255,197,254,207,255,173,19,247,0,238,10,202,0,239,151,242,0,94,59,39,255,240,29,102,255,10,92,154,255,229,84,219,255,161,129,80,0,208,90,204,1,240,219,174,255,158,102,145,1,53,178,76,255,52,108,168,1,83,222,107,0,211,36,109,0,118,58,56,0,8,29,22,0,237,160,199,0,170,209,157,0,137,71,47,0,143,86,32,0,198,242,2,0,212,48,136,1,92,172,186,0,230,151,105,1,96,191,229,0,138,80,191,254,240,216,130,255,98,43,6,254,168,196,49,0,253,18,91,1,144,73,121,0,61,146,39,1,63,104,24,255,184,165,112,254,126,235,98,0,80,213,98,255,123,60,87,255,82,140,245,1,223,120,173,255,15,198,134,1,206,60,239,0,231,234,92,255,33,238,19,255,165,113,142,1,176,119,38,0,160,43,166,254,239,91,105,0,107,61,194,1,25,4,68,0,15,139,51,0,164,132,106,255,34,116,46,254,168,95,197,0,137,212,23,0,72,156,58,0,137,112,69,254,150,105,154,255,236,201,157,0,23,212,154,255,136,82,227,254,226,59,221,255,95,149,192,0,81,118,52,255,33,43,215,1,14,147,75,255,89,156,121,254,14,18,79,0,147,208,139,1,151,218,62,255,156,88,8,1,210,184,98,255,20,175,123,255,102,83,229,0,220,65,116,1,150,250,4,255,92,142,220,255,34,247,66,255,204,225,179,254,151,81,151,0,71,40,236,255,138,63,62,0,6,79,240,255,183,185,181,0,118,50,27,0,63,227,192,0,123,99,58,1,50,224,155,255,17,225,223,254,220,224,77,255,14,44,123,1,141,128,175,0,248,212,200,0,150,59,183,255,147,97,29,0,150,204,181,0,253,37,71,0,145,85,119,0,154,200,186,0,2,128,249,255,83,24,124,0,14,87,143,0,168,51,245,1,124,151,231,255,208,240,197,1,124,190,185,0,48,58,246,0,20,233,232,0,125,18,98,255,13,254,31,255,245,177,130,255,108,142,35,0,171,125,242,254,140,12,34,255,165,161,162,0,206,205,101,0,247,25,34,1,100,145,57,0,39,70,57,0,118,204,203,255,242,0,162,0,165,244,30,0,198,116,226,0,128,111,153,255,140,54,182,1,60,122,15,255,155,58,57,1,54,50,198,0,171,211,29,255,107,138,167,255,173,107,199,255,109,161,193,0,89,72,242,255,206,115,89,255,250,254,142,254,177,202,94,255,81,89,50,0,7,105,66,255,25,254,255,254,203,64,23,255,79,222,108,255,39,249,75,0,241,124,50,0,239,152,133,0,221,241,105,0,147,151,98,0,213,161,121,254,242,49,137,0,233,37,249,254,42,183,27,0,184,119,230,255,217,32,163,255,208,251,228,1,137,62,131,255,79,64,9,254,94,48,113,0,17,138,50,254,193,255,22,0,247,18,197,1,67,55,104,0,16,205,95,255,48,37,66,0,55,156,63,1,64,82,74,255,200,53,71,254,239,67,125,0,26,224,222,0,223,137,93,255,30,224,202,255,9,220,132,0,198,38,235,1,102,141,86,0,60,43,81,1,136,28,26,0,233,36,8,254,207,242,148,0,164,162,63,0,51,46,224,255,114,48,79,255,9,175,226,0,222,3,193,255,47,160,232,255,255,93,105,254,14,42,230,0,26,138,82,1,208,43,244,0,27,39,38,255,98,208,127,255,64,149,182,255,5,250,209,0,187,60,28,254,49,25,218,255,169,116,205,255,119,18,120,0,156,116,147,255,132,53,109,255,13,10,202,0,110,83,167,0,157,219,137,255,6,3,130,255,50,167,30,255,60,159,47,255,129,128,157,254,94,3,189,0,3,166,68,0,83,223,215,0,150,90,194,1,15,168,65,0,227,83,51,255,205,171,66,255,54,187,60,1,152,102,45,255,119,154,225,0,240,247,136,0,100,197,178,255,139,71,223,255,204,82,16,1,41,206,42,255,156,192,221,255,216,123,244,255,218,218,185,255,187,186,239,255,252,172,160,255,195,52,22,0,144,174,181,254,187,100,115,255,211,78,176,255,27,7,193,0,147,213,104,255,90,201,10,255,80,123,66,1,22,33,186,0,1,7,99,254,30,206,10,0,229,234,5,0,53,30,210,0,138,8,220,254,71,55,167,0,72,225,86,1,118,190,188,0,254,193,101,1,171,249,172,255,94,158,183,254,93,2,108,255,176,93,76,255,73,99,79,255,74,64,129,254,246,46,65,0,99,241,127,254,246,151,102,255,44,53,208,254,59,102,234,0,154,175,164,255,88,242,32,0,111,38,1,0,255,182,190,255,115,176,15,254,169,60,129,0,122,237,241,0,90,76,63,0,62,74,120,255,122,195,110,0,119,4,178,0,222,242,210,0,130,33,46,254,156,40,41,0,167,146,112,1,49,163,111,255,121,176,235,0,76,207,14,255,3,25,198,1,41,235,213,0,85,36,214,1,49,92,109,255,200,24,30,254,168,236,195,0,145,39,124,1,236,195,149,0,90,36,184,255,67,85,170,255,38,35,26,254,131,124,68,255,239,155,35,255,54,201,164,0,196,22,117,255,49,15,205,0,24,224,29,1,126,113,144,0,117,21,182,0,203,159,141,0,223,135,77,0,176,230,176,255,190,229,215,255,99,37,181,255,51,21,138,255,25,189,89,255,49,48,165,254,152,45,247,0,170,108,222,0,80,202,5,0,27,69,103,254,204,22,129,255,180,252,62,254,210,1,91,255,146,110,254,255,219,162,28,0,223,252,213,1,59,8,33,0,206,16,244,0,129,211,48,0,107,160,208,0,112,59,209,0,109,77,216,254,34,21,185,255,246,99,56,255,179,139,19,255,185,29,50,255,84,89,19,0,74,250,98,255,225,42,200,255,192,217,205,255,210,16,167,0,99,132,95,1,43,230,57,0,254,11,203,255,99,188,63,255,119,193,251,254,80,105,54,0,232,181,189,1,183,69,112,255,208,171,165,255,47,109,180,255,123,83,165,0,146,162,52,255,154,11,4,255,151,227,90,255,146,137,97,254,61,233,41,255,94,42,55,255,108,164,236,0,152,68,254,0,10,140,131,255,10,106,79,254,243,158,137,0,67,178,66,254,177,123,198,255,15,62,34,0,197,88,42,255,149,95,177,255,152,0,198,255,149,254,113,255,225,90,163,255,125,217,247,0,18,17,224,0,128,66,120,254,192,25,9,255,50,221,205,0,49,212,70,0,233,255,164,0,2,209,9,0,221,52,219,254,172,224,244,255,94,56,206,1,242,179,2,255,31,91,164,1,230,46,138,255,189,230,220,0,57,47,61,255,111,11,157,0,177,91,152,0,28,230,98,0,97,87,126,0,198,89,145,255,167,79,107,0,249,77,160,1,29,233,230,255,150,21,86,254,60,11,193,0,151,37,36,254,185,150,243,255,228,212,83,1,172,151,180,0,201,169,155,0,244,60,234,0,142,235,4,1,67,218,60,0,192,113,75,1,116,243,207,255,65,172,155,0,81,30,156,255,80,72,33,254,18,231,109,255,142,107,21,254,125,26,132,255,176,16,59,255,150,201,58,0,206,169,201,0,208,121,226,0,40,172,14,255,150,61,94,255,56,57,156,255,141,60,145,255,45,108,149,255,238,145,155,255,209,85,31,254,192,12,210,0,99,98,93,254,152,16,151,0,225,185,220,0,141,235,44,255,160,172,21,254,71,26,31,255,13,64,93,254,28,56,198,0,177,62,248,1,182,8,241,0,166,101,148,255,78,81,133,255,129,222,215,1,188,169,129,255,232,7,97,0,49,112,60,255,217,229,251,0,119,108,138,0,39,19,123,254,131,49,235,0,132,84,145,0,130,230,148,255,25,74,187,0,5,245,54,255,185,219,241,1,18,194,228,255,241,202,102,0,105,113,202,0,155,235,79,0,21,9,178,255,156,1,239,0,200,148,61,0,115,247,210,255,49,221,135,0,58,189,8,1,35,46,9,0,81,65,5,255,52,158,185,255,125,116,46,255,74,140,13,255,210,92,172,254,147,23,71,0,217,224,253,254,115,108,180,255,145,58,48,254,219,177,24,255,156,255,60,1,154,147,242,0,253,134,87,0,53,75,229,0,48,195,222,255,31,175,50,255,156,210,120,255,208,35,222,255,18,248,179,1,2,10,101,255,157,194,248,255,158,204,101,255,104,254,197,255,79,62,4,0,178,172,101,1,96,146,251,255,65,10,156,0,2,137,165,255,116,4,231,0,242,215,1,0,19,35,29,255,43,161,79,0,59,149,246,1,251,66,176,0,200,33,3,255,80,110,142,255,195,161,17,1,228,56,66,255,123,47,145,254,132,4,164,0,67,174,172,0,25,253,114,0,87,97,87,1,250,220,84,0,96,91,200,255,37,125,59,0,19,65,118,0,161,52,241,255,237,172,6,255,176,191,255,255,1,65,130,254,223,190,230,0,101,253,231,255,146,35,109,0,250,29,77,1,49,0,19,0,123,90,155,1,22,86,32,255,218,213,65,0,111,93,127,0,60,93,169,255,8,127,182,0,17,186,14,254,253,137,246,255,213,25,48,254,76,238,0,255,248,92,70,255,99,224,139,0,184,9,255,1,7,164,208,0,205,131,198,1,87,214,199,0,130,214,95,0,221,149,222,0,23,38,171,254,197,110,213,0,43,115,140,254,215,177,118,0,96,52,66,1,117,158,237,0,14,64,182,255,46,63,174,255,158,95,190,255,225,205,177,255,43,5,142,255,172,99,212,255,244,187,147,0,29,51,153,255,228,116,24,254,30,101,207,0,19,246,150,255,134,231,5,0,125,134,226,1,77,65,98,0,236,130,33,255,5,110,62,0,69,108,127,255,7,113,22,0,145,20,83,254,194,161,231,255,131,181,60,0,217,209,177,255,229,148,212,254,3,131,184,0,117,177,187,1,28,14,31,255,176,102,80,0,50,84,151,255,125,31,54,255,21,157,133,255,19,179,139,1,224,232,26,0,34,117,170,255,167,252,171,255,73,141,206,254,129,250,35,0,72,79,236,1,220,229,20,255,41,202,173,255,99,76,238,255,198,22,224,255,108,198,195,255,36,141,96,1,236,158,59,255,106,100,87,0,110,226,2,0,227,234,222,0,154,93,119,255,74,112,164,255,67,91,2,255,21,145,33,255,102,214,137,255,175,230,103,254,163,246,166,0,93,247,116,254,167,224,28,255,220,2,57,1,171,206,84,0,123,228,17,255,27,120,119,0,119,11,147,1,180,47,225,255,104,200,185,254,165,2,114,0,77,78,212,0,45,154,177,255,24,196,121,254,82,157,182,0,90,16,190,1,12,147,197,0,95,239,152,255,11,235,71,0,86,146,119,255,172,134,214,0,60,131,196,0,161,225,129,0,31,130,120,254,95,200,51,0,105,231,210,255,58,9,148,255,43,168,221,255,124,237,142,0,198,211,50,254,46,245,103,0,164,248,84,0,152,70,208,255,180,117,177,0,70,79,185,0,243,74,32,0,149,156,207,0,197,196,161,1,245,53,239,0,15,93,246,254,139,240,49,255,196,88,36,255,162,38,123,0,128,200,157,1,174,76,103,255,173,169,34,254,216,1,171,255,114,51,17,0,136,228,194,0,110,150,56,254,106,246,159,0,19,184,79,255,150,77,240,255,155,80,162,0,0,53,169,255,29,151,86,0,68,94,16,0,92,7,110,254,98,117,149,255,249,77,230,255,253,10,140,0,214,124,92,254,35,118,235,0,89,48,57,1,22,53,166,0,184,144,61,255,179,255,194,0,214,248,61,254,59,110,246,0,121,21,81,254,166,3,228,0,106,64,26,255,69,232,134,255,242,220,53,254,46,220,85,0,113,149,247,255,97,179,103,255,190,127,11,0,135,209,182,0,95,52,129,1,170,144,206,255,122,200,204,255,168,100,146,0,60,144,149,254,70,60,40,0,122,52,177,255,246,211,101,255,174,237,8,0,7,51,120,0,19,31,173,0,126,239,156,255,143,189,203,0,196,128,88,255,233,133,226,255,30,125,173,255,201,108,50,0,123,100,59,255,254,163,3,1,221,148,181,255,214,136,57,254,222,180,137,255,207,88,54,255,28,33,251,255,67,214,52,1,210,208,100,0,81,170,94,0,145,40,53,0,224,111,231,254,35,28,244,255,226,199,195,254,238,17,230,0,217,217,164,254,169,157,221,0,218,46,162,1,199,207,163,255,108,115,162,1,14,96,187,255,118,60,76,0,184,159,152,0,209,231,71,254,42,164,186,255,186,153,51,254,221,171,182,255,162,142,173,0,235,47,193,0,7,139,16,1,95,164,64,255,16,221,166,0,219,197,16,0,132,29,44,255,100,69,117,255,60,235,88,254,40,81,173,0,71,190,61,255,187,88,157,0,231,11,23,0,237,117,164,0,225,168,223,255,154,114,116,255,163,152,242,1,24,32,170,0,125,98,113,254,168,19,76,0,17,157,220,254,155,52,5,0,19,111,161,255,71,90,252,255,173,110,240,0,10,198,121,255,253,255,240,255,66,123,210,0,221,194,215,254,121,163,17,255,225,7,99,0,190,49,182,0,115,9,133,1,232,26,138,255,213,68,132,0,44,119,122,255,179,98,51,0,149,90,106,0,71,50,230,255,10,153,118,255,177,70,25,0,165,87,205,0,55,138,234,0,238,30,97,0,113,155,207,0,98,153,127,0,34,107,219,254,117,114,172,255,76,180,255,254,242,57,179,255,221,34,172,254,56,162,49,255,83,3,255,255,113,221,189,255,188,25,228,254,16,88,89,255,71,28,198,254,22,17,149,255,243,121,254,255,107,202,99,255,9,206,14,1,220,47,153,0,107,137,39,1,97,49,194,255,149,51,197,254,186,58,11,255,107,43,232,1,200,6,14,255,181,133,65,254,221,228,171,255,123,62,231,1,227,234,179,255,34,189,212,254,244,187,249,0,190,13,80,1,130,89,1,0,223,133,173,0,9,222,198,255,66,127,74,0,167,216,93,255,155,168,198,1,66,145,0,0,68,102,46,1,172,90,154,0,216,128,75,255,160,40,51,0,158,17,27,1,124,240,49,0,236,202,176,255,151,124,192,255,38,193,190,0,95,182,61,0,163,147,124,255,255,165,51,255,28,40,17,254,215,96,78,0,86,145,218,254,31,36,202,255,86,9,5,0,111,41,200,255,237,108,97,0,57,62,44,0,117,184,15,1,45,241,116,0,152,1,220,255,157,165,188,0,250,15,131,1,60,44,125,255,65,220,251,255,75,50,184,0,53,90,128,255,231,80,194,255,136,129,127,1,21,18,187,255,45,58,161,255,71,147,34,0,174,249,11,254,35,141,29,0,239,68,177,255,115,110,58,0,238,190,177,1,87,245,166,255,190,49,247,255,146,83,184,255,173,14,39,255,146,215,104,0,142,223,120,0,149,200,155,255,212,207,145,1,16,181,217,0,173,32,87,255,255,35,181,0,119,223,161,1,200,223,94,255,70,6,186,255,192,67,85,255,50,169,152,0,144,26,123,255,56,243,179,254,20,68,136,0,39,140,188,254,253,208,5,255,200,115,135,1,43,172,229,255,156,104,187,0,151,251,167,0,52,135,23,0,151,153,72,0,147,197,107,254,148,158,5,255,238,143,206,0,126,153,137,255,88,152,197,254,7,68,167,0,252,159,165,255,239,78,54,255,24,63,55,255,38,222,94,0,237,183,12,255,206,204,210,0,19,39,246,254,30,74,231,0,135,108,29,1,179,115,0,0,117,118,116,1,132,6,252,255,145,129,161,1,105,67,141,0,82,37,226,255,238,226,228,255,204,214,129,254,162,123,100,255,185,121,234,0,45,108,231,0,66,8,56,255,132,136,128,0,172,224,66,254,175,157,188,0,230,223,226,254,242,219,69,0,184,14,119,1,82,162,56,0,114,123,20,0,162,103,85,255,49,239,99,254,156,135,215,0,111,255,167,254,39,196,214,0,144,38,79,1,249,168,125,0,155,97,156,255,23,52,219,255,150,22,144,0,44,149,165,255,40,127,183,0,196,77,233,255,118,129,210,255,170,135,230,255,214,119,198,0,233,240,35,0,253,52,7,255,117,102,48,255,21,204,154,255,179,136,177,255,23,2,3,1,149,130,89,255,252,17,159,1,70,60,26,0,144,107,17,0,180,190,60,255,56,182,59,255,110,71,54,255,198,18,129,255,149,224,87,255,223,21,152,255,138,22,182,255,250,156,205,0,236,45,208,255,79,148,242,1,101,70,209,0,103,78,174,0,101,144,172,255,152,136,237,1,191,194,136,0,113,80,125,1,152,4,141,0,155,150,53,255,196,116,245,0,239,114,73,254,19,82,17,255,124,125,234,255,40,52,191,0,42,210,158,255,155,132,165,0,178,5,42,1,64,92,40,255,36,85,77,255,178,228,118,0,137,66,96,254,115,226,66,0,110,240,69,254,151,111,80,0,167,174,236,255,227,108,107,255,188,242,65,255,183,81,255,0,57,206,181,255,47,34,181,255,213,240,158,1,71,75,95,0,156,40,24,255,102,210,81,0,171,199,228,255,154,34,41,0,227,175,75,0,21,239,195,0,138,229,95,1,76,192,49,0,117,123,87,1,227,225,130,0,125,62,63,255,2,198,171,0,254,36,13,254,145,186,206,0,148,255,244,255,35,0,166,0,30,150,219,1,92,228,212,0,92,198,60,254,62,133,200,255,201,41,59,0,125,238,109,255,180,163,238,1,140,122,82,0,9,22,88,255,197,157,47,255,153,94,57,0,88,30,182,0,84,161,85,0,178,146,124,0,166,166,7,255,21,208,223,0,156,182,242,0,155,121,185,0,83,156,174,254,154,16,118,255,186,83,232,1,223,58,121,255,29,23,88,0,35,125,127,255,170,5,149,254,164,12,130,255,155,196,29,0,161,96,136,0,7,35,29,1,162,37,251,0,3,46,242,255,0,217,188,0,57,174,226,1,206,233,2,0,57,187,136,254,123,189,9,255,201,117,127,255,186,36,204,0,231,25,216,0,80,78,105,0,19,134,129,255,148,203,68,0,141,81,125,254,248,165,200,255,214,144,135,0,151,55,166,255,38,235,91,0,21,46,154,0,223,254,150,255,35,153,180,255,125,176,29,1,43,98,30,255,216,122,230,255,233,160,12,0,57,185,12,254,240,113,7,255,5,9,16,254,26,91,108,0,109,198,203,0,8,147,40,0,129,134,228,255,124,186,40,255,114,98,132,254,166,132,23,0,99,69,44,0,9,242,238,255,184,53,59,0,132,129,102,255,52,32,243,254,147,223,200,255,123,83,179,254,135,144,201,255,141,37,56,1,151,60,227,255,90,73,156,1,203,172,187,0,80,151,47,255,94,137,231,255,36,191,59,255,225,209,181,255,74,215,213,254,6,118,179,255,153,54,193,1,50,0,231,0,104,157,72,1,140,227,154,255,182,226,16,254,96,225,92,255,115,20,170,254,6,250,78,0,248,75,173,255,53,89,6,255,0,180,118,0,72,173,1,0,64,8,206,1,174,133,223,0,185,62,133,255,214,11,98,0,197,31,208,0,171,167,244,255,22,231,181,1,150,218,185,0,247,169,97,1,165,139,247,255,47,120,149,1,103,248,51,0,60,69,28,254,25,179,196,0,124,7,218,254,58,107,81,0,184,233,156,255,252,74,36,0,118,188,67,0,141,95,53,255,222,94,165,254,46,61,53,0,206,59,115,255,47,236,250,255,74,5,32,1,129,154,238,255,106,32,226,0,121,187,61,255,3,166,241,254,67,170,172,255,29,216,178,255,23,201,252,0,253,110,243,0,200,125,57,0,109,192,96,255,52,115,238,0,38,121,243,255,201,56,33,0,194,118,130,0,75,96,25,255,170,30,230,254,39,63,253,0,36,45,250,255,251,1,239,0,160,212,92,1,45,209,237,0,243,33,87,254,237,84,201,255,212,18,157,254,212,99,127,255,217,98,16,254,139,172,239,0,168,201,130,255,143,193,169,255,238,151,193,1,215,104,41,0,239,61,165,254,2,3,242,0,22,203,177,254,177,204,22,0,149,129,213,254,31,11,41,255,0,159,121,254,160,25,114,255,162,80,200,0,157,151,11,0,154,134,78,1,216,54,252,0,48,103,133,0,105,220,197,0,253,168,77,254,53,179,23,0,24,121,240,1,255,46,96,255,107,60,135,254,98,205,249,255,63,249,119,255,120,59,211,255,114,180,55,254,91,85,237,0,149,212,77,1,56,73,49,0,86,198,150,0,93,209,160,0,69,205,182,255,244,90,43,0,20,36,176,0,122,116,221,0,51,167,39,1,231,1,63,255,13,197,134,0,3,209,34,255,135,59,202,0,167,100,78,0,47,223,76,0,185,60,62,0,178,166,123,1,132,12,161,255,61,174,43,0,195,69,144,0,127,47,191,1,34,44,78,0,57,234,52,1,255,22,40,255,246,94,146,0,83,228,128,0,60,78,224,255,0,96,210,255,153,175,236,0,159,21,73,0,180,115,196,254,131,225,106,0,255,167,134,0,159,8,112,255,120,68,194,255,176,196,198,255,118,48,168,255,93,169,1,0,112,200,102,1,74,24,254,0,19,141,4,254,142,62,63,0,131,179,187,255,77,156,155,255,119,86,164,0,170,208,146,255,208,133,154,255,148,155,58,255,162,120,232,254,252,213,155,0,241,13,42,0,94,50,131,0,179,170,112,0,140,83,151,255,55,119,84,1,140,35,239,255,153,45,67,1,236,175,39,0,54,151,103,255,158,42,65,255,196,239,135,254,86,53,203,0,149,97,47,254,216,35,17,255,70,3,70,1,103,36,90,255,40,26,173,0,184,48,13,0,163,219,217,255,81,6,1,255,221,170,108,254,233,208,93,0,100,201,249,254,86,36,35,255,209,154,30,1,227,201,251,255,2,189,167,254,100,57,3,0,13,128,41,0,197,100,75,0,150,204,235,255,145,174,59,0,120,248,149,255,85,55,225,0,114,210,53,254,199,204,119,0,14,247,74,1,63,251,129,0,67,104,151,1,135,130,80,0,79,89,55,255,117,230,157,255,25,96,143,0,213,145,5,0,69,241,120,1,149,243,95,255,114,42,20,0,131,72,2,0,154,53,20,255,73,62,109,0,196,102,152,0,41,12,204,255,122,38,11,1,250,10,145,0,207,125,148,0,246,244,222,255,41,32,85,1,112,213,126,0,162,249,86,1,71,198,127,255,81,9,21,1,98,39,4,255,204,71,45,1,75,111,137,0,234,59,231,0,32,48,95,255,204,31,114,1,29,196,181,255,51,241,167,254,93,109,142,0,104,144,45,0,235,12,181,255,52,112,164,0,76,254,202,255,174,14,162,0,61,235,147,255,43,64,185,254,233,125,217,0,243,88,167,254,74,49,8,0,156,204,66,0,124,214,123,0,38,221,118,1,146,112,236,0,114,98,177,0,151,89,199,0,87,197,112,0,185,149,161,0,44,96,165,0,248,179,20,255,188,219,216,254,40,62,13,0,243,142,141,0,229,227,206,255,172,202,35,255,117,176,225,255,82,110,38,1,42,245,14,255,20,83,97,0,49,171,10,0,242,119,120,0,25,232,61,0,212,240,147,255,4,115,56,255,145,17,239,254,202,17,251,255,249,18,245,255,99,117,239,0,184,4,179,255,246,237,51,255,37,239,137,255,166,112,166,255,81,188,33,255,185,250,142,255,54,187,173,0,208,112,201,0,246,43,228,1,104,184,88,255,212,52,196,255,51,117,108,255,254,117,155,0,46,91,15,255,87,14,144,255,87,227,204,0,83,26,83,1,159,76,227,0,159,27,213,1,24,151,108,0,117,144,179,254,137,209,82,0,38,159,10,0,115,133,201,0,223,182,156,1,110,196,93,255,57,60,233,0,5,167,105,255,154,197,164,0,96,34,186,255,147,133,37,1,220,99,190,0,1,167,84,255,20,145,171,0,194,197,251,254,95,78,133,255,252,248,243,255,225,93,131,255,187,134,196,255,216,153,170,0,20,118,158,254,140,1,118,0,86,158,15,1,45,211,41,255,147,1,100,254,113,116,76,255,211,127,108,1,103,15,48,0,193,16,102,1,69,51,95,255,107,128,157,0,137,171,233,0,90,124,144,1,106,161,182,0,175,76,236,1,200,141,172,255,163,58,104,0,233,180,52,255,240,253,14,255,162,113,254,255,38,239,138,254,52,46,166,0,241,101,33,254,131,186,156,0,111,208,62,255,124,94,160,255,31,172,254,0,112,174,56,255,188,99,27,255,67,138,251,0,125,58,128,1,156,152,174,255,178,12,247,255,252,84,158,0,82,197,14,254,172,200,83,255,37,39,46,1,106,207,167,0,24,189,34,0,131,178,144,0,206,213,4,0,161,226,210,0,72,51,105,255,97,45,187,255,78,184,223,255,176,29,251,0,79,160,86,255,116,37,178,0,82,77,213,1,82,84,141,255,226,101,212,1,175,88,199,255,245,94,247,1,172,118,109,255,166,185,190,0,131,181,120,0,87,254,93,255,134,240,73,255,32,245,143,255,139,162,103,255,179,98,18,254,217,204,112,0,147,223,120,255,53,10,243,0,166,140,150,0,125,80,200,255,14,109,219,255,91,218,1,255,252,252,47,254,109,156,116,255,115,49,127,1,204,87,211,255,148,202,217,255,26,85,249,255,14,245,134,1,76,89,169,255,242,45,230,0,59,98,172,255,114,73,132,254,78,155,49,255,158,126,84,0,49,175,43,255,16,182,84,255,157,103,35,0,104,193,109,255,67,221,154,0,201,172,1,254,8,162,88,0,165,1,29,255,125,155,229,255,30,154,220,1,103,239,92,0,220,1,109,255,202,198,1,0,94,2,142,1,36,54,44,0,235,226,158,255,170,251,214,255,185,77,9,0,97,74,242,0,219,163,149,255,240,35,118,255,223,114,88,254,192,199,3,0,106,37,24,255,201,161,118,255,97,89,99,1,224,58,103,255,101,199,147,254,222,60,99,0,234,25,59,1,52,135,27,0,102,3,91,254,168,216,235,0,229,232,136,0,104,60,129,0,46,168,238,0,39,191,67,0,75,163,47,0,143,97,98,255,56,216,168,1,168,233,252,255,35,111,22,255,92,84,43,0,26,200,87,1,91,253,152,0,202,56,70,0,142,8,77,0,80,10,175,1,252,199,76,0,22,110,82,255,129,1,194,0,11,128,61,1,87,14,145,255,253,222,190,1,15,72,174,0,85,163,86,254,58,99,44,255,45,24,188,254,26,205,15,0,19,229,210,254,248,67,195,0,99,71,184,0,154,199,37,255,151,243,121,255,38,51,75,255,201,85,130,254,44,65,250,0,57,147,243,254,146,43,59,255,89,28,53,0,33,84,24,255,179,51,18,254,189,70,83,0,11,156,179,1,98,134,119,0,158,111,111,0,119,154,73,255,200,63,140,254,45,13,13,255,154,192,2,254,81,72,42,0,46,160,185,254,44,112,6,0,146,215,149,1,26,176,104,0,68,28,87,1,236,50,153,255,179,128,250,254,206,193,191,255,166,92,137,254,53,40,239,0,210,1,204,254,168,173,35,0,141,243,45,1,36,50,109,255,15,242,194,255,227,159,122,255,176,175,202,254,70,57,72,0,40,223,56,0,208,162,58,255,183,98,93,0,15,111,12,0,30,8,76,255,132,127,246,255,45,242,103,0,69,181,15,255,10,209,30,0,3,179,121,0,241,232,218,1,123,199,88,255,2,210,202,1,188,130,81,255,94,101,208,1,103,36,45,0,76,193,24,1,95,26,241,255,165,162,187,0,36,114,140,0,202,66,5,255,37,56,147,0,152,11,243,1,127,85,232,255,250,135,212,1,185,177,113,0,90,220,75,255,69,248,146,0,50,111,50,0,92,22,80,0,244,36,115,254,163,100,82,255,25,193,6,1,127,61,36,0,253,67,30,254,65,236,170,255,161,17,215,254,63,175,140,0,55,127,4,0,79,112,233,0,109,160,40,0,143,83,7,255,65,26,238,255,217,169,140,255,78,94,189,255,0,147,190,255,147,71,186,254,106,77,127,255,233,157,233,1,135,87,237,255,208,13,236,1,155,109,36,255,180,100,218,0,180,163,18,0,190,110,9,1,17,63,123,255,179,136,180,255,165,123,123,255,144,188,81,254,71,240,108,255,25,112,11,255,227,218,51,255,167,50,234,255,114,79,108,255,31,19,115,255,183,240,99,0,227,87,143,255,72,217,248,255,102,169,95,1,129,149,149,0,238,133,12,1,227,204,35,0,208,115,26,1,102,8,234,0,112,88,143,1,144,249,14,0,240,158,172,254,100,112,119],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([194,141,153,254,40,56,83,255,121,176,46,0,42,53,76,255,158,191,154,0,91,209,92,0,173,13,16,1,5,72,226,255,204,254,149,0,80,184,207,0,100,9,122,254,118,101,171,255,252,203,0,254,160,207,54,0,56,72,249,1,56,140,13,255,10,64,107,254,91,101,52,255,225,181,248,1,139,255,132,0,230,145,17,0,233,56,23,0,119,1,241,255,213,169,151,255,99,99,9,254,185,15,191,255,173,103,109,1,174,13,251,255,178,88,7,254,27,59,68,255,10,33,2,255,248,97,59,0,26,30,146,1,176,147,10,0,95,121,207,1,188,88,24,0,185,94,254,254,115,55,201,0,24,50,70,0,120,53,6,0,142,66,146,0,228,226,249,255,104,192,222,1,173,68,219,0,162,184,36,255,143,102,137,255,157,11,23,0,125,45,98,0,235,93,225,254,56,112,160,255,70,116,243,1,153,249,55,255,129,39,17,1,241,80,244,0,87,69,21,1,94,228,73,255,78,66,65,255,194,227,231,0,61,146,87,255,173,155,23,255,112,116,219,254,216,38,11,255,131,186,133,0,94,212,187,0,100,47,91,0,204,254,175,255,222,18,215,254,173,68,108,255,227,228,79,255,38,221,213,0,163,227,150,254,31,190,18,0,160,179,11,1,10,90,94,255,220,174,88,0,163,211,229,255,199,136,52,0,130,95,221,255,140,188,231,254,139,113,128,255,117,171,236,254,49,220,20,255,59,20,171,255,228,109,188,0,20,225,32,254,195,16,174,0,227,254,136,1,135,39,105,0,150,77,206,255,210,238,226,0,55,212,132,254,239,57,124,0,170,194,93,255,249,16,247,255,24,151,62,255,10,151,10,0,79,139,178,255,120,242,202,0,26,219,213,0,62,125,35,255,144,2,108,255,230,33,83,255,81,45,216,1,224,62,17,0,214,217,125,0,98,153,153,255,179,176,106,254,131,93,138,255,109,62,36,255,178,121,32,255,120,252,70,0,220,248,37,0,204,88,103,1,128,220,251,255,236,227,7,1,106,49,198,255,60,56,107,0,99,114,238,0,220,204,94,1,73,187,1,0,89,154,34,0,78,217,165,255,14,195,249,255,9,230,253,255,205,135,245,0,26,252,7,255,84,205,27,1,134,2,112,0,37,158,32,0,231,91,237,255,191,170,204,255,152,7,222,0,109,192,49,0,193,166,146,255,232,19,181,255,105,142,52,255,103,16,27,1,253,200,165,0,195,217,4,255,52,189,144,255,123,155,160,254,87,130,54,255,78,120,61,255,14,56,41,0,25,41,125,255,87,168,245,0,214,165,70,0,212,169,6,255,219,211,194,254,72,93,164,255,197,33,103,255,43,142,141,0,131,225,172,0,244,105,28,0,68,68,225,0,136,84,13,255,130,57,40,254,139,77,56,0,84,150,53,0,54,95,157,0,144,13,177,254,95,115,186,0,117,23,118,255,244,166,241,255,11,186,135,0,178,106,203,255,97,218,93,0,43,253,45,0,164,152,4,0,139,118,239,0,96,1,24,254,235,153,211,255,168,110,20,255,50,239,176,0,114,41,232,0,193,250,53,0,254,160,111,254,136,122,41,255,97,108,67,0,215,152,23,255,140,209,212,0,42,189,163,0,202,42,50,255,106,106,189,255,190,68,217,255,233,58,117,0,229,220,243,1,197,3,4,0,37,120,54,254,4,156,134,255,36,61,171,254,165,136,100,255,212,232,14,0,90,174,10,0,216,198,65,255,12,3,64,0,116,113,115,255,248,103,8,0,231,125,18,255,160,28,197,0,30,184,35,1,223,73,249,255,123,20,46,254,135,56,37,255,173,13,229,1,119,161,34,255,245,61,73,0,205,125,112,0,137,104,134,0,217,246,30,255,237,142,143,0,65,159,102,255,108,164,190,0,219,117,173,255,34,37,120,254,200,69,80,0,31,124,218,254,74,27,160,255,186,154,199,255,71,199,252,0,104,81,159,1,17,200,39,0,211,61,192,1,26,238,91,0,148,217,12,0,59,91,213,255,11,81,183,255,129,230,122,255,114,203,145,1,119,180,66,255,72,138,180,0,224,149,106,0,119,82,104,255,208,140,43,0,98,9,182,255,205,101,134,255,18,101,38,0,95,197,166,255,203,241,147,0,62,208,145,255,133,246,251,0,2,169,14,0,13,247,184,0,142,7,254,0,36,200,23,255,88,205,223,0,91,129,52,255,21,186,30,0,143,228,210,1,247,234,248,255,230,69,31,254,176,186,135,255,238,205,52,1,139,79,43,0,17,176,217,254,32,243,67,0,242,111,233,0,44,35,9,255,227,114,81,1,4,71,12,255,38,105,191,0,7,117,50,255,81,79,16,0,63,68,65,255,157,36,110,255,77,241,3,255,226,45,251,1,142,25,206,0,120,123,209,1,28,254,238,255,5,128,126,255,91,222,215,255,162,15,191,0,86,240,73,0,135,185,81,254,44,241,163,0,212,219,210,255,112,162,155,0,207,101,118,0,168,72,56,255,196,5,52,0,72,172,242,255,126,22,157,255,146,96,59,255,162,121,152,254,140,16,95,0,195,254,200,254,82,150,162,0,119,43,145,254,204,172,78,255,166,224,159,0,104,19,237,255,245,126,208,255,226,59,213,0,117,217,197,0,152,72,237,0,220,31,23,254,14,90,231,255,188,212,64,1,60,101,246,255,85,24,86,0,1,177,109,0,146,83,32,1,75,182,192,0,119,241,224,0,185,237,27,255,184,101,82,1,235,37,77,255,253,134,19,0,232,246,122,0,60,106,179,0,195,11,12,0,109,66,235,1,125,113,59,0,61,40,164,0,175,104,240,0,2,47,187,255,50,12,141,0,194,139,181,255,135,250,104,0,97,92,222,255,217,149,201,255,203,241,118,255,79,151,67,0,122,142,218,255,149,245,239,0,138,42,200,254,80,37,97,255,124,112,167,255,36,138,87,255,130,29,147,255,241,87,78,255,204,97,19,1,177,209,22,255,247,227,127,254,99,119,83,255,212,25,198,1,16,179,179,0,145,77,172,254,89,153,14,255,218,189,167,0,107,233,59,255,35,33,243,254,44,112,112,255,161,127,79,1,204,175,10,0,40,21,138,254,104,116,228,0,199,95,137,255,133,190,168,255,146,165,234,1,183,99,39,0,183,220,54,254,255,222,133,0,162,219,121,254,63,239,6,0,225,102,54,255,251,18,246,0,4,34,129,1,135,36,131,0,206,50,59,1,15,97,183,0,171,216,135,255,101,152,43,255,150,251,91,0,38,145,95,0,34,204,38,254,178,140,83,255,25,129,243,255,76,144,37,0,106,36,26,254,118,144,172,255,68,186,229,255,107,161,213,255,46,163,68,255,149,170,253,0,187,17,15,0,218,160,165,255,171,35,246,1,96,13,19,0,165,203,117,0,214,107,192,255,244,123,177,1,100,3,104,0,178,242,97,255,251,76,130,255,211,77,42,1,250,79,70,255,63,244,80,1,105,101,246,0,61,136,58,1,238,91,213,0,14,59,98,255,167,84,77,0,17,132,46,254,57,175,197,255,185,62,184,0,76,64,207,0,172,175,208,254,175,74,37,0,138,27,211,254,148,125,194,0,10,89,81,0,168,203,101,255,43,213,209,1,235,245,54,0,30,35,226,255,9,126,70,0,226,125,94,254,156,117,20,255,57,248,112,1,230,48,64,255,164,92,166,1,224,214,230,255,36,120,143,0,55,8,43,255,251,1,245,1,106,98,165,0,74,107,106,254,53,4,54,255,90,178,150,1,3,120,123,255,244,5,89,1,114,250,61,255,254,153,82,1,77,15,17,0,57,238,90,1,95,223,230,0,236,52,47,254,103,148,164,255,121,207,36,1,18,16,185,255,75,20,74,0,187,11,101,0,46,48,129,255,22,239,210,255,77,236,129,255,111,77,204,255,61,72,97,255,199,217,251,255,42,215,204,0,133,145,201,255,57,230,146,1,235,100,198,0,146,73,35,254,108,198,20,255,182,79,210,255,82,103,136,0,246,108,176,0,34,17,60,255,19,74,114,254,168,170,78,255,157,239,20,255,149,41,168,0,58,121,28,0,79,179,134,255,231,121,135,255,174,209,98,255,243,122,190,0,171,166,205,0,212,116,48,0,29,108,66,255,162,222,182,1,14,119,21,0,213,39,249,255,254,223,228,255,183,165,198,0,133,190,48,0,124,208,109,255,119,175,85,255,9,209,121,1,48,171,189,255,195,71,134,1,136,219,51,255,182,91,141,254,49,159,72,0,35,118,245,255,112,186,227,255,59,137,31,0,137,44,163,0,114,103,60,254,8,213,150,0,162,10,113,255,194,104,72,0,220,131,116,255,178,79,92,0,203,250,213,254,93,193,189,255,130,255,34,254,212,188,151,0,136,17,20,255,20,101,83,255,212,206,166,0,229,238,73,255,151,74,3,255,168,87,215,0,155,188,133,255,166,129,73,0,240,79,133,255,178,211,81,255,203,72,163,254,193,168,165,0,14,164,199,254,30,255,204,0,65,72,91,1,166,74,102,255,200,42,0,255,194,113,227,255,66,23,208,0,229,216,100,255,24,239,26,0,10,233,62,255,123,10,178,1,26,36,174,255,119,219,199,1,45,163,190,0,16,168,42,0,166,57,198,255,28,26,26,0,126,165,231,0,251,108,100,255,61,229,121,255,58,118,138,0,76,207,17,0,13,34,112,254,89,16,168,0,37,208,105,255,35,201,215,255,40,106,101,254,6,239,114,0,40,103,226,254,246,127,110,255,63,167,58,0,132,240,142,0,5,158,88,255,129,73,158,255,94,89,146,0,230,54,146,0,8,45,173,0,79,169,1,0,115,186,247,0,84,64,131,0,67,224,253,255,207,189,64,0,154,28,81,1,45,184,54,255,87,212,224,255,0,96,73,255,129,33,235,1,52,66,80,255,251,174,155,255,4,179,37,0,234,164,93,254,93,175,253,0,198,69,87,255,224,106,46,0,99,29,210,0,62,188,114,255,44,234,8,0,169,175,247,255,23,109,137,255,229,182,39,0,192,165,94,254,245,101,217,0,191,88,96,0,196,94,99,255,106,238,11,254,53,126,243,0,94,1,101,255,46,147,2,0,201,124,124,255,141,12,218,0,13,166,157,1,48,251,237,255,155,250,124,255,106,148,146,255,182,13,202,0,28,61,167,0,217,152,8,254,220,130,45,255,200,230,255,1,55,65,87,255,93,191,97,254,114,251,14,0,32,105,92,1,26,207,141,0,24,207,13,254,21,50,48,255,186,148,116,255,211,43,225,0,37,34,162,254,164,210,42,255,68,23,96,255,182,214,8,255,245,117,137,255,66,195,50,0,75,12,83,254,80,140,164,0,9,165,36,1,228,110,227,0,241,17,90,1,25,52,212,0,6,223,12,255,139,243,57,0,12,113,75,1,246,183,191,255,213,191,69,255,230,15,142,0,1,195,196,255,138,171,47,255,64,63,106,1,16,169,214,255,207,174,56,1,88,73,133,255,182,133,140,0,177,14,25,255,147,184,53,255,10,227,161,255,120,216,244,255,73,77,233,0,157,238,139,1,59,65,233,0,70,251,216,1,41,184,153,255,32,203,112,0,146,147,253,0,87,101,109,1,44,82,133,255,244,150,53,255,94,152,232,255,59,93,39,255,88,147,220,255,78,81,13,1,32,47,252,255,160,19,114,255,93,107,39,255,118,16,211,1,185,119,209,255,227,219,127,254,88,105,236,255,162,110,23,255,36,166,110,255,91,236,221,255,66,234,116,0,111,19,244,254,10,233,26,0,32,183,6,254,2,191,242,0,218,156,53,254,41,60,70,255,168,236,111,0,121,185,126,255,238,142,207,255,55,126,52,0,220,129,208,254,80,204,164,255,67,23,144,254,218,40,108,255,127,202,164,0,203,33,3,255,2,158,0,0,37,96,188,255,192,49,74,0,109,4,0,0,111,167,10,254,91,218,135,255,203,66,173,255,150,194,226,0,201,253,6,255,174,102,121,0,205,191,110,0,53,194,4,0,81,40,45,254,35,102,143,255,12,108,198,255,16,27,232,255,252,71,186,1,176,110,114,0,142,3,117,1,113,77,142,0,19,156,197,1,92,47,252,0,53,232,22,1,54,18,235,0,46,35,189,255,236,212,129,0,2,96,208,254,200,238,199,255,59,175,164,255,146,43,231,0,194,217,52,255,3,223,12,0,138,54,178,254,85,235,207,0,232,207,34,0,49,52,50,255,166,113,89,255,10,45,216,255,62,173,28,0,111,165,246,0,118,115,91,255,128,84,60,0,167,144,203,0,87,13,243,0,22,30,228,1,177,113,146,255,129,170,230,254,252,153,129,255,145,225,43,0,70,231,5,255,122,105,126,254,86,246,148,255,110,37,154,254,209,3,91,0,68,145,62,0,228,16,165,255,55,221,249,254,178,210,91,0,83,146,226,254,69,146,186,0,93,210,104,254,16,25,173,0,231,186,38,0,189,122,140,255,251,13,112,255,105,110,93,0,251,72,170,0,192,23,223,255,24,3,202,1,225,93,228,0,153,147,199,254,109,170,22,0,248,101,246,255,178,124,12,255,178,254,102,254,55,4,65,0,125,214,180,0,183,96,147,0,45,117,23,254,132,191,249,0,143,176,203,254,136,183,54,255,146,234,177,0,146,101,86,255,44,123,143,1,33,209,152,0,192,90,41,254,83,15,125,255,213,172,82,0,215,169,144,0,16,13,34,0,32,209,100,255,84,18,249,1,197,17,236,255,217,186,230,0,49,160,176,255,111,118,97,255,237,104,235,0,79,59,92,254,69,249,11,255,35,172,74,1,19,118,68,0,222,124,165,255,180,66,35,255,86,174,246,0,43,74,111,255,126,144,86,255,228,234,91,0,242,213,24,254,69,44,235,255,220,180,35,0,8,248,7,255,102,47,92,255,240,205,102,255,113,230,171,1,31,185,201,255,194,246,70,255,122,17,187,0,134,70,199,255,149,3,150,255,117,63,103,0,65,104,123,255,212,54,19,1,6,141,88,0,83,134,243,255,136,53,103,0,169,27,180,0,177,49,24,0,111,54,167,0,195,61,215,255,31,1,108,1,60,42,70,0,185,3,162,255,194,149,40,255,246,127,38,254,190,119,38,255,61,119,8,1,96,161,219,255,42,203,221,1,177,242,164,255,245,159,10,0,116,196,0,0,5,93,205,254,128,127,179,0,125,237,246,255,149,162,217,255,87,37,20,254,140,238,192,0,9,9,193,0,97,1,226,0,29,38,10,0,0,136,63,255,229,72,210,254,38,134,92,255,78,218,208,1,104,36,84,255,12,5,193,255,242,175,61,255,191,169,46,1,179,147,147,255,113,190,139,254,125,172,31,0,3,75,252,254,215,36,15,0,193,27,24,1,255,69,149,255,110,129,118,0,203,93,249,0,138,137,64,254,38,70,6,0,153,116,222,0,161,74,123,0,193,99,79,255,118,59,94,255,61,12,43,1,146,177,157,0,46,147,191,0,16,255,38,0,11,51,31,1,60,58,98,255,111,194,77,1,154,91,244,0,140,40,144,1,173,10,251,0,203,209,50,254,108,130,78,0,228,180,90,0,174,7,250,0,31,174,60,0,41,171,30,0,116,99,82,255,118,193,139,255,187,173,198,254,218,111,56,0,185,123,216,0,249,158,52,0,52,180,93,255,201,9,91,255,56,45,166,254,132,155,203,255,58,232,110,0,52,211,89,255,253,0,162,1,9,87,183,0,145,136,44,1,94,122,245,0,85,188,171,1,147,92,198,0,0,8,104,0,30,95,174,0,221,230,52,1,247,247,235,255,137,174,53,255,35,21,204,255,71,227,214,1,232,82,194,0,11,48,227,255,170,73,184,255,198,251,252,254,44,112,34,0,131,101,131,255,72,168,187,0,132,135,125,255,138,104,97,255,238,184,168,255,243,104,84,255,135,216,226,255,139,144,237,0,188,137,150,1,80,56,140,255,86,169,167,255,194,78,25,255,220,17,180,255,17,13,193,0,117,137,212,255,141,224,151,0,49,244,175,0,193,99,175,255,19,99,154,1,255,65,62,255,156,210,55,255,242,244,3,255,250,14,149,0,158,88,217,255,157,207,134,254,251,232,28,0,46,156,251,255,171,56,184,255,239,51,234,0,142,138,131,255,25,254,243,1,10,201,194,0,63,97,75,0,210,239,162,0,192,200,31,1,117,214,243,0,24,71,222,254,54,40,232,255,76,183,111,254,144,14,87,255,214,79,136,255,216,196,212,0,132,27,140,254,131,5,253,0,124,108,19,255,28,215,75,0,76,222,55,254,233,182,63,0,68,171,191,254,52,111,222,255,10,105,77,255,80,170,235,0,143,24,88,255,45,231,121,0,148,129,224,1,61,246,84,0,253,46,219,255,239,76,33,0,49,148,18,254,230,37,69,0,67,134,22,254,142,155,94,0,31,157,211,254,213,42,30,255,4,228,247,254,252,176,13,255,39,0,31,254,241,244,255,255,170,45,10,254,253,222,249,0,222,114,132,0,255,47,6,255,180,163,179,1,84,94,151,255,89,209,82,254,229,52,169,255,213,236,0,1,214,56,228,255,135,119,151,255,112,201,193,0,83,160,53,254,6,151,66,0,18,162,17,0,233,97,91,0,131,5,78,1,181,120,53,255,117,95,63,255,237,117,185,0,191,126,136,255,144,119,233,0,183,57,97,1,47,201,187,255,167,165,119,1,45,100,126,0,21,98,6,254,145,150,95,255,120,54,152,0,209,98,104,0,143,111,30,254,184,148,249,0,235,216,46,0,248,202,148,255,57,95,22,0,242,225,163,0,233,247,232,255,71,171,19,255,103,244,49,255,84,103,93,255,68,121,244,1,82,224,13,0,41,79,43,255,249,206,167,255,215,52,21,254,192,32,22,255,247,111,60,0,101,74,38,255,22,91,84,254,29,28,13,255,198,231,215,254,244,154,200,0,223,137,237,0,211,132,14,0,95,64,206,255,17,62,247,255,233,131,121,1,93,23,77,0,205,204,52,254,81,189,136,0,180,219,138,1,143,18,94,0,204,43,140,254,188,175,219,0,111,98,143,255,151,63,162,255,211,50,71,254,19,146,53,0,146,45,83,254,178,82,238,255,16,133,84,255,226,198,93,255,201,97,20,255,120,118,35,255,114,50,231,255,162,229,156,255,211,26,12,0,114,39,115,255,206,212,134,0,197,217,160,255,116,129,94,254,199,215,219,255,75,223,249,1,253,116,181,255,232,215,104,255,228,130,246,255,185,117,86,0,14,5,8,0,239,29,61,1,237,87,133,255,125,146,137,254,204,168,223,0,46,168,245,0,154,105,22,0,220,212,161,255,107,69,24,255,137,218,181,255,241,84,198,255,130,122,211,255,141,8,153,255,190,177,118,0,96,89,178,0,255,16,48,254,122,96,105,255,117,54,232,255,34,126,105,255,204,67,166,0,232,52,138,255,211,147,12,0,25,54,7,0,44,15,215,254,51,236,45,0,190,68,129,1,106,147,225,0,28,93,45,254,236,141,15,255,17,61,161,0,220,115,192,0,236,145,24,254,111,168,169,0,224,58,63,255,127,164,188,0,82,234,75,1,224,158,134,0,209,68,110,1,217,166,217,0,70,225,166,1,187,193,143,255,16,7,88,255,10,205,140,0,117,192,156,1,17,56,38,0,27,124,108,1,171,215,55,255,95,253,212,0,155,135,168,255,246,178,153,254,154,68,74,0,232,61,96,254,105,132,59,0,33,76,199,1,189,176,130,255,9,104,25,254,75,198,102,255,233,1,112,0,108,220,20,255,114,230,70,0,140,194,133,255,57,158,164,254,146,6,80,255,169,196,97,1,85,183,130,0,70,158,222,1,59,237,234,255,96,25,26,255,232,175,97,255,11,121,248,254,88,35,194,0,219,180,252,254,74,8,227,0,195,227,73,1,184,110,161,255,49,233,164,1,128,53,47,0,82,14,121,255,193,190,58,0,48,174,117,255,132,23,32,0,40,10,134,1,22,51,25,255,240,11,176,255,110,57,146,0,117,143,239,1,157,101,118,255,54,84,76,0,205,184,18,255,47,4,72,255,78,112,85,255,193,50,66,1,93,16,52,255,8,105,134,0,12,109,72,255,58,156,251,0,144,35,204,0,44,160,117,254,50,107,194,0,1,68,165,255,111,110,162,0,158,83,40,254,76,214,234,0,58,216,205,255,171,96,147,255,40,227,114,1,176,227,241,0,70,249,183,1,136,84,139,255,60,122,247,254,143,9,117,255,177,174,137,254,73,247,143,0,236,185,126,255,62,25,247,255,45,64,56,255,161,244,6,0,34,57,56,1,105,202,83,0,128,147,208,0,6,103,10,255,74,138,65,255,97,80,100,255,214,174,33,255,50,134,74,255,110,151,130,254,111,84,172,0,84,199,75,254,248,59,112,255,8,216,178,1,9,183,95,0,238,27,8,254,170,205,220,0,195,229,135,0,98,76,237,255,226,91,26,1,82,219,39,255,225,190,199,1,217,200,121,255,81,179,8,255,140,65,206,0,178,207,87,254,250,252,46,255,104,89,110,1,253,189,158,255,144,214,158,255,160,245,54,255,53,183,92,1,21,200,194,255,146,33,113,1,209,1,255,0,235,106,43,255,167,52,232,0,157,229,221,0,51,30,25,0,250,221,27,1,65,147,87,255,79,123,196,0,65,196,223,255,76,44,17,1,85,241,68,0,202,183,249,255,65,212,212,255,9,33,154,1,71,59,80,0,175,194,59,255,141,72,9,0,100,160,244,0,230,208,56,0,59,25,75,254,80,194,194,0,18,3,200,254,160,159,115,0,132,143,247,1,111,93,57,255,58,237,11,1,134,222,135,255,122,163,108,1,123,43,190,255,251,189,206,254,80,182,72,255,208,246,224,1,17,60,9,0,161,207,38,0,141,109,91,0,216,15,211,255,136,78,110,0,98,163,104,255,21,80,121,255,173,178,183,1,127,143,4,0,104,60,82,254,214,16,13,255,96,238,33,1,158,148,230,255,127,129,62,255,51,255,210,255,62,141,236,254,157,55,224,255,114,39,244,0,192,188,250,255,228,76,53,0,98,84,81,255,173,203,61,254,147,50,55,255,204,235,191,0,52,197,244,0,88,43,211,254,27,191,119,0,188,231,154,0,66,81,161,0,92,193,160,1,250,227,120,0,123,55,226,0,184,17,72,0,133,168,10,254,22,135,156,255,41,25,103,255,48,202,58,0,186,149,81,255,188,134,239,0,235,181,189,254,217,139,188,255,74,48,82,0,46,218,229,0,189,253,251,0,50,229,12,255,211,141,191,1,128,244,25,255,169,231,122,254,86,47,189,255,132,183,23,255,37,178,150,255,51,137,253,0,200,78,31,0,22,105,50,0,130,60,0,0,132,163,91,254,23,231,187,0,192,79,239,0,157,102,164,255,192,82,20,1,24,181,103,255,240,9,234,0,1,123,164,255,133,233,0,255,202,242,242,0,60,186,245,0,241,16,199,255,224,116,158,254,191,125,91,255,224,86,207,0,121,37,231,255,227,9,198,255,15,153,239,255,121,232,217,254,75,112,82,0,95,12,57,254,51,214,105,255,148,220,97,1,199,98,36,0,156,209,12,254,10,212,52,0,217,180,55,254,212,170,232,255,216,20,84,255,157,250,135,0,157,99,127,254,1,206,41,0,149,36,70,1,54,196,201,255,87,116,0,254,235,171,150,0,27,163,234,0,202,135,180,0,208,95,0,254,123,156,93,0,183,62,75,0,137,235,182,0,204,225,255,255,214,139,210,255,2,115,8,255,29,12,111,0,52,156,1,0,253,21,251,255,37,165,31,254,12,130,211,0,106,18,53,254,42,99,154,0,14,217,61,254,216,11,92,255,200,197,112,254,147,38,199,0,36,252,120,254,107,169,77,0,1,123,159,255,207,75,102,0,163,175,196,0,44,1,240,0,120,186,176,254,13,98,76,255,237,124,241,255,232,146,188,255,200,96,224,0,204,31,41,0,208,200,13,0,21,225,96,255,175,156,196,0,247,208,126,0,62,184,244,254,2,171,81,0,85,115,158,0,54,64,45,255,19,138,114,0,135,71,205,0,227,47,147,1,218,231,66,0,253,209,28,0,244,15,173,255,6,15,118,254,16,150,208,255,185,22,50,255,86,112,207,255,75,113,215,1,63,146,43,255,4,225,19,254,227,23,62,255,14,255,214,254,45,8,205,255,87,197,151,254,210,82,215,255,245,248,247,255,128,248,70,0,225,247,87,0,90,120,70,0,213,245,92,0,13,133,226,0,47,181,5,1,92,163,105,255,6,30,133,254,232,178,61,255,230,149,24,255,18,49,158,0,228,100,61,254,116,243,251,255,77,75,92,1,81,219,147,255,76,163,254,254,141,213,246,0,232,37,152,254,97,44,100,0,201,37,50,1,212,244,57,0,174,171,183,255,249,74,112,0,166,156,30,0,222,221,97,255,243,93,73,254,251,101,100,255,216,217,93,255,254,138,187,255,142,190,52,255,59,203,177,255,200,94,52,0,115,114,158,255,165,152,104,1,126,99,226,255,118,157,244,1,107,200,16,0,193,90,229,0,121,6,88,0,156,32,93,254,125,241,211,255,14,237,157,255,165,154,21,255,184,224,22,255,250,24,152,255,113,77,31,0,247,171,23,255,237,177,204,255,52,137,145,255,194,182,114,0,224,234,149,0,10,111,103,1,201,129,4,0,238,142,78,0,52,6,40,255,110,213,165,254,60,207,253,0,62,215,69,0,96,97,0,255,49,45,202,0,120,121,22,255,235,139,48,1,198,45,34,255,182,50,27,1,131,210,91,255,46,54,128,0,175,123,105,255,198,141,78,254,67,244,239,255,245,54,103,254,78,38,242,255,2,92,249,254,251,174,87,255,139,63,144,0,24,108,27,255,34,102,18,1,34,22,152,0,66,229,118,254,50,143,99,0,144,169,149,1,118,30,152,0,178,8,121,1,8,159,18,0,90,101,230,255,129,29,119,0,68,36,11,1,232,183,55,0,23,255,96,255,161,41,193,255,63,139,222,0,15,179,243,0,255,100,15,255,82,53,135,0,137,57,149,1,99,240,170,255,22,230,228,254,49,180,82,255,61,82,43,0,110,245,217,0,199,125,61,0,46,253,52,0,141,197,219,0,211,159,193,0,55,121,105,254,183,20,129,0,169,119,170,255,203,178,139,255,135,40,182,255,172,13,202,255,65,178,148,0,8,207,43,0,122,53,127,1,74,161,48,0,227,214,128,254,86,11,243,255,100,86,7,1,245,68,134,255,61,43,21,1,152,84,94,255,190,60,250,254,239,118,232,255,214,136,37,1,113,76,107,255,93,104,100,1,144,206,23,255,110,150,154,1,228,103,185,0,218,49,50,254,135,77,139,255,185,1,78,0,0,161,148,255,97,29,233,255,207,148,149,255,160,168,0,0,91,128,171,255,6,28,19,254,11,111,247,0,39,187,150,255,138,232,149,0,117,62,68,255,63,216,188,255,235,234,32,254,29,57,160,255,25,12,241,1,169,60,191,0,32,131,141,255,237,159,123,255,94,197,94,254,116,254,3,255,92,179,97,254,121,97,92,255,170,112,14,0,21,149,248,0,248,227,3,0,80,96,109,0,75,192,74,1,12,90,226,255,161,106,68,1,208,114,127,255,114,42,255,254,74,26,74,255,247,179,150,254,121,140,60,0,147,70,200,255,214,40,161,255,161,188,201,255,141,65,135,255,242,115,252,0,62,47,202,0,180,149,255,254,130,55,237,0,165,17,186,255,10,169,194,0,156,109,218,255,112,140,123,255,104,128,223,254,177,142,108,255,121,37,219,255,128,77,18,255,111,108,23,1,91,192,75,0,174,245,22,255,4,236,62,255,43,64,153,1,227,173,254,0,237,122,132,1,127,89,186,255,142,82,128,254,252,84,174,0,90,179,177,1,243,214,87,255,103,60,162,255,208,130,14,255,11,130,139,0,206,129,219,255,94,217,157,255,239,230,230,255,116,115,159,254,164,107,95,0,51,218,2,1,216,125,198,255,140,202,128,254,11,95,68,255,55,9,93,254,174,153,6,255,204,172,96,0,69,160,110,0,213,38,49,254,27,80,213,0,118,125,114,0,70,70,67,255,15,142,73,255,131,122,185,255,243,20,50,254,130,237,40,0,210,159,140,1,197,151,65,255,84,153,66,0,195,126,90,0,16,238,236,1,118,187,102,255,3,24,133,255,187,69,230,0,56,197,92,1,213,69,94,255,80,138,229,1,206,7,230,0,222,111,230,1,91,233,119,255,9,89,7,1,2,98,1,0,148,74,133,255,51,246,180,255,228,177,112,1,58,189,108,255,194,203,237,254,21,209,195,0,147,10,35,1,86,157,226,0,31,163,139,254,56,7,75,255,62,90,116,0,181,60,169,0,138,162,212,254,81,167,31,0,205,90,112,255,33,112,227,0,83,151,117,1,177,224,73,255,174,144,217,255,230,204,79,255,22,77,232,255,114,78,234,0,224,57,126,254,9,49,141,0,242,147,165,1,104,182,140,255,167,132,12,1,123,68,127,0,225,87,39,1,251,108,8,0,198,193,143,1,121,135,207,255,172,22,70,0,50,68,116,255,101,175,40,255,248,105,233,0,166,203,7,0,110,197,218,0,215,254,26,254,168,226,253,0,31,143,96,0,11,103,41,0,183,129,203,254,100,247,74,255,213,126,132,0,210,147,44,0,199,234,27,1,148,47,181,0,155,91,158,1,54,105,175,255,2,78,145,254,102,154,95,0,128,207,127,254,52,124,236,255,130,84,71,0,221,243,211,0,152,170,207,0,222,106,199,0,183,84,94,254,92,200,56,255,138,182,115,1,142,96,146,0,133,136,228,0,97,18,150,0,55,251,66,0,140,102,4,0,202,103,151,0,30,19,248,255,51,184,207,0,202,198,89,0,55,197,225,254,169,95,249,255,66,65,68,255,188,234,126,0,166,223,100,1,112,239,244,0,144,23,194,0,58,39,182,0,244,44,24,254,175,68,179,255,152,118,154,1,176,162,130,0,217,114,204,254,173,126,78,255,33,222,30,255,36,2,91,255,2,143,243,0,9,235,215,0,3,171,151,1,24,215,245,255,168,47,164,254,241,146,207,0,69,129,180,0,68,243,113,0,144,53,72,254,251,45,14,0,23,110,168,0,68,68,79,255,110,70,95,254,174,91,144,255,33,206,95,255,137,41,7,255,19,187,153,254,35,255,112,255,9,145,185,254,50,157,37,0,11,112,49,1,102,8,190,255,234,243,169,1,60,85,23,0,74,39,189,0,116,49,239,0,173,213,210,0,46,161,108,255,159,150,37,0,196,120,185,255,34,98,6,255,153,195,62,255,97,230,71,255,102,61,76,0,26,212,236,255,164,97,16,0,198,59,146,0,163,23,196,0,56,24,61,0,181,98,193,0,251,147,229,255,98,189,24,255,46,54,206,255,234,82,246,0,183,103,38,1,109,62,204,0,10,240,224,0,146,22,117,255,142,154,120,0,69,212,35,0,208,99,118,1,121,255,3,255,72,6,194,0,117,17,197,255,125,15,23,0,154,79,153,0,214,94,197,255,185,55,147,255,62,254,78,254,127,82,153,0,110,102,63,255,108,82,161,255,105,187,212,1,80,138,39,0,60,255,93,255,72,12,186,0,210,251,31,1,190,167,144,255,228,44,19,254,128,67,232,0,214,249,107,254,136,145,86,255,132,46,176,0,189,187,227,255,208,22,140,0,217,211,116,0,50,81,186,254,139,250,31,0,30,64,198,1,135,155,100,0,160,206,23,254,187,162,211,255,16,188,63,0,254,208,49,0,85,84,191,0,241,192,242,255,153,126,145,1,234,162,162,255,230,97,216,1,64,135,126,0,190,148,223,1,52,0,43,255,28,39,189,1,64,136,238,0,175,196,185,0,98,226,213,255,127,159,244,1,226,175,60,0,160,233,142,1,180,243,207,255,69,152,89,1,31,101,21,0,144,25,164,254,139,191,209,0,91,25,121,0,32,147,5,0,39,186,123,255,63,115,230,255,93,167,198,255,143,213,220,255,179,156,19,255,25,66,122,0,214,160,217,255,2,45,62,255,106,79,146,254,51,137,99,255,87,100,231,255,175,145,232,255,101,184,1,255,174,9,125,0,82,37,161,1,36,114,141,255,48,222,142,255,245,186,154,0,5,174,221,254,63,114,155,255,135,55,160,1,80,31,135,0,126,250,179,1,236,218,45,0,20,28,145,1,16,147,73,0,249,189,132,1,17,189,192,255,223,142,198,255,72,20,15,255,250,53,237,254,15,11,18,0,27,211,113,254,213,107,56,255,174,147,146,255,96,126,48,0,23,193,109,1,37,162,94,0,199,157,249,254,24,128,187,255,205,49,178,254,93,164,42,255,43,119,235,1,88,183,237,255,218,210,1,255,107,254,42,0,230,10,99,255,162,0,226,0,219,237,91,0,129,178,203,0,208,50,95,254,206,208,95,255,247,191,89,254,110,234,79,255,165,61,243,0,20,122,112,255,246,246,185,254,103,4,123,0,233,99,230,1,219,91,252,255,199,222,22,255,179,245,233,255,211,241,234,0,111,250,192,255,85,84,136,0,101,58,50,255,131,173,156,254,119,45,51,255,118,233,16,254,242,90,214,0,94,159,219,1,3,3,234,255,98,76,92,254,80,54,230,0,5,228,231,254,53,24,223,255,113,56,118,1,20,132,1,255,171,210,236,0,56,241,158,255,186,115,19,255,8,229,174,0,48,44,0,1,114,114,166,255,6,73,226,255,205,89,244,0,137,227,75,1,248,173,56,0,74,120,246,254,119,3,11,255,81,120,198,255,136,122,98,255,146,241,221,1,109,194,78,255,223,241,70,1,214,200,169,255,97,190,47,255,47,103,174,255,99,92,72,254,118,233,180,255,193,35,233,254,26,229,32,255,222,252,198,0,204,43,71,255,199,84,172,0,134,102,190,0,111,238,97,254,230,40,230,0,227,205,64,254,200,12,225,0,166,25,222,0,113,69,51,255,143,159,24,0,167,184,74,0,29,224,116,254,158,208,233,0,193,116,126,255,212,11,133,255,22,58,140,1,204,36,51,255,232,30,43,0,235,70,181,255,64,56,146,254,169,18,84,255,226,1,13,255,200,50,176,255,52,213,245,254,168,209,97,0,191,71,55,0,34,78,156,0,232,144,58,1,185,74,189,0,186,142,149,254,64,69,127,255,161,203,147,255,176,151,191,0,136,231,203,254,163,182,137,0,161,126,251,254,233,32,66,0,68,207,66,0,30,28,37,0,93,114,96,1,254,92,247,255,44,171,69,0,202,119,11,255,188,118,50,1,255,83,136,255,71,82,26,0,70,227,2,0,32,235,121,1,181,41,154,0,71,134,229,254,202,255,36,0,41,152,5,0,154,63,73,255,34,182,124,0,121,221,150,255,26,204,213,1,41,172,87,0,90,157,146,255,109,130,20,0,71,107,200,255,243,102,189,0,1,195,145,254,46,88,117,0,8,206,227,0,191,110,253,255,109,128,20,254,134,85,51,255,137,177,112,1,216,34,22,255,131,16,208,255,121,149,170,0,114,19,23,1,166,80,31,255,113,240,122,0,232,179,250,0,68,110,180,254,210,170,119,0,223,108,164,255,207,79,233,255,27,229,226,254,209,98,81,255,79,68,7,0,131,185,100,0,170,29,162,255,17,162,107,255,57,21,11,1,100,200,181,255,127,65,166,1,165,134,204,0,104,167,168,0,1,164,79,0,146,135,59,1,70,50,128,255,102,119,13,254,227,6,135,0,162,142,179,255,160,100,222,0,27,224,219,1,158,93,195,255,234,141,137,0,16,24,125,255,238,206,47,255,97,17,98,255,116,110,12,255,96,115,77,0,91,227,232,255,248,254,79,255,92,229,6,254,88,198,139,0,206,75,129,0,250,77,206,255,141,244,123,1,138,69,220,0,32,151,6,1,131,167,22,255,237,68,167,254,199,189,150,0,163,171,138,255,51,188,6,255,95,29,137,254,148,226,179,0,181,107,208,255,134,31,82,255,151,101,45,255,129,202,225,0,224,72,147,0,48,138,151,255,195,64,206,254,237,218,158,0,106,29,137,254,253,189,233,255,103,15,17,255,194,97,255,0,178,45,169,254,198,225,155,0,39,48,117,255,135,106,115,0,97,38,181,0,150,47,65,255,83,130,229,254,246,38,129,0,92,239,154,254,91,99,127,0,161,111,33,255,238,217,242,255,131,185,195,255,213,191,158,255,41,150,218,0,132,169,131,0,89,84,252,1,171,70,128,255,163,248,203,254,1,50,180,255,124,76,85,1,251,111,80,0,99,66,239,255,154,237,182,255,221,126,133,254,74,204,99,255,65,147,119,255,99,56,167,255,79,248,149,255,116,155,228,255,237,43,14,254,69,137,11,255,22,250,241,1,91,122,143,255,205,249,243,0,212,26,60,255,48,182,176,1,48,23,191,255,203,121,152,254,45,74,213,255,62,90,18,254,245,163,230,255,185,106,116,255,83,35,159,0,12,33,2,255,80,34,62,0,16,87,174,255,173,101,85,0,202,36,81,254,160,69,204,255,64,225,187,0,58,206,94,0,86,144,47,0,229,86,245,0,63,145,190,1,37,5,39,0,109,251,26,0,137,147,234,0,162,121,145,255,144,116,206,255,197,232,185,255,183,190,140,255,73,12,254,255,139,20,242,255,170,90,239,255,97,66,187,255,245,181,135,254,222,136,52,0,245,5,51,254,203,47,78,0,152,101,216,0,73,23,125,0,254,96,33,1,235,210,73,255,43,209,88,1,7,129,109,0,122,104,228,254,170,242,203,0,242,204,135,255,202,28,233,255,65,6,127,0,159,144,71,0,100,140,95,0,78,150,13,0,251,107,118,1,182,58,125,255,1,38,108,255,141,189,209,255,8,155,125,1,113,163,91,255,121,79,190,255,134,239,108,255,76,47,248,0,163,228,239,0,17,111,10,0,88,149,75,255,215,235,239,0,167,159,24,255,47,151,108,255,107,209,188,0,233,231,99,254,28,202,148,255,174,35,138,255,110,24,68,255,2,69,181,0,107,102,82,0,102,237,7,0,92,36,237,255,221,162,83,1,55,202,6,255,135,234,135,255,24,250,222,0,65,94,168,254,245,248,210,255,167,108,201,254,255,161,111,0,205,8,254,0,136,13,116,0,100,176,132,255,43,215,126,255,177,133,130,255,158,79,148,0,67,224,37,1,12,206,21,255,62,34,110,1,237,104,175,255,80,132,111,255,142,174,72,0,84,229,180,254,105,179,140,0,64,248,15,255,233,138,16,0,245,67,123,254,218,121,212,255,63,95,218,1,213,133,137,255,143,182,82,255,48,28,11,0,244,114,141,1,209,175,76,255,157,181,150,255,186,229,3,255,164,157,111,1,231,189,139,0,119,202,190,255,218,106,64,255,68,235,63,254,96,26,172,255,187,47,11,1,215,18,251,255,81,84,89,0,68,58,128,0,94,113,5,1,92,129,208,255,97,15,83,254,9,28,188,0,239,9,164,0,60,205,152,0,192,163,98,255,184,18,60,0,217,182,139,0,109,59,120,255,4,192,251,0,169,210,240,255,37,172,92,254,148,211,245,255,179,65,52,0,253,13,115,0,185,174,206,1,114,188,149,255,237,90,173,0,43,199,192,255,88,108,113,0,52,35,76,0,66,25,148,255,221,4,7,255,151,241,114,255,190,209,232,0,98,50,199,0,151,150,213,255,18,74,36,1,53,40,7,0,19,135,65,255,26,172,69,0,174,237,85,0,99,95,41,0,3,56,16,0,39,160,177,255,200,106,218,254,185,68,84,255,91,186,61,254,67,143,141,255,13,244,166,255,99,114,198,0,199,110,163,255,193,18,186,0,124,239,246,1,110,68,22,0,2,235,46,1,212,60,107,0,105,42,105,1,14,230,152,0,7,5,131,0,141,104,154,255,213,3,6,0,131,228,162,255,179,100,28,1,231,123,85,255,206,14,223,1,253,96,230,0,38,152,149,1,98,137,122,0,214,205,3,255,226,152,179,255,6,133,137,0,158,69,140,255,113,162,154,255,180,243,172,255,27,189,115,255,143,46,220,255,213,134,225,255,126,29,69,0,188,43,137,1,242,70,9,0,90,204,255,255,231,170,147,0,23,56,19,254,56,125,157,255,48,179,218,255,79,182,253,255,38,212,191,1,41,235,124,0,96,151,28,0,135,148,190,0,205,249,39,254,52,96,136,255,212,44,136,255,67,209,131,255,252,130,23,255,219,128,20,255,198,129,118,0,108,101,11,0,178,5,146,1,62,7,100,255,181,236,94,254,28,26,164,0,76,22,112,255,120,102,79,0,202,192,229,1,200,176,215,0,41,64,244,255,206,184,78,0,167,45,63,1,160,35,0,255,59,12,142,255,204,9,144,255,219,94,229,1,122,27,112,0,189,105,109,255,64,208,74,255,251,127,55,1,2,226,198,0,44,76,209,0,151,152,77,255,210,23,46,1,201,171,69,255,44,211,231,0,190,37,224,255,245,196,62,255,169,181,222,255,34,211,17,0,119,241,197,255,229,35,152,1,21,69,40,255,178,226,161,0,148,179,193,0,219,194,254,1,40,206,51,255,231,92,250,1,67,153,170,0,21,148,241,0,170,69,82,255,121,18,231,255,92,114,3,0,184,62,230,0,225,201,87,255,146,96,162,255,181,242,220,0,173,187,221,1,226,62,170,255,56,126,217,1,117,13,227,255,179,44,239,0,157,141,155,255,144,221,83,0,235,209,208,0,42,17,165,1,251,81,133,0,124,245,201,254,97,211,24,255,83,214,166,0,154,36,9,255,248,47,127,0,90,219,140,255,161,217,38,254,212,147,63,255,66,84,148,1,207,3,1,0,230,134,89,1,127,78,122,255,224,155,1,255,82,136,74,0,178,156,208,255,186,25,49,255,222,3,210,1,229,150,190,255,85,162,52,255,41,84,141,255,73,123,84,254,93,17,150,0,119,19,28,1,32,22,215,255,28,23,204,255,142,241,52,255,228,52,125,0,29,76,207,0,215,167,250,254,175,164,230,0,55,207,105,1,109,187,245,255,161,44,220,1,41,101,128,255,167,16,94,0,93,214,107,255,118,72,0,254,80,61,234,255,121,175,125,0,139,169,251,0,97,39,147,254,250,196,49,255,165,179,110,254,223,70,187,255,22,142,125,1,154,179,138,255,118,176,42,1,10,174,153,0,156,92,102,0,168,13,161,255,143,16,32,0,250,197,180,255,203,163,44,1,87,32,36,0,161,153,20,255,123,252,15,0,25,227,80,0,60,88,142,0,17,22,201,1,154,205,77,255,39,63,47,0,8,122,141,0,128,23,182,254,204,39,19,255,4,112,29,255,23,36,140,255,210,234,116,254,53,50,63,255,121,171,104,255,160,219,94,0,87,82,14,254,231,42,5,0,165,139,127,254,86,78,38,0,130,60,66,254,203,30,45,255,46,196,122,1,249,53,162,255,136,143,103,254,215,210,114,0,231,7,160,254,169,152,42,255,111,45,246,0,142,131,135,255,131,71,204,255,36,226,11,0,0,28,242,255,225,138,213,255,247,46,216,254,245,3,183,0,108,252,74,1,206,26,48,255,205,54,246,255,211,198,36,255,121,35,50,0,52,216,202,255,38,139,129,254,242,73,148,0,67,231,141,255,42,47,204,0,78,116,25,1,4,225,191,255,6,147,228,0,58,88,177,0,122,165,229,255,252,83,201,255,224,167,96,1,177,184,158,255,242,105,179,1,248,198,240,0,133,66,203,1,254,36,47,0,45,24,115,255,119,62,254,0,196,225,186,254,123,141,172,0,26,85,41,255,226,111,183,0,213,231,151,0,4,59,7,255,238,138,148,0,66,147,33,255,31,246,141,255,209,141,116,255,104,112,31,0,88,161,172,0,83,215,230,254,47,111,151,0,45,38,52,1,132,45,204,0,138,128,109,254,233,117,134,255,243,190,173,254,241,236,240,0,82,127,236,254,40,223,161,255,110,182,225,255,123,174,239,0,135,242,145,1,51,209,154,0,150,3,115,254,217,164,252,255,55,156,69,1,84,94,255,255,232,73,45,1,20,19,212,255,96,197,59,254,96,251,33,0,38,199,73,1,64,172,247,255,117,116,56,255,228,17,18,0,62,138,103,1,246,229,164,255,244,118,201,254,86,32,159,255,109,34,137,1,85,211,186,0,10,193,193,254,122,194,177,0,122,238,102,255,162,218,171,0,108,217,161,1,158,170,34,0,176,47,155,1,181,228,11,255,8,156,0,0,16,75,93,0,206,98,255,1,58,154,35,0,12,243,184,254,67,117,66,255,230,229,123,0,201,42,110,0,134,228,178,254,186,108,118,255,58,19,154,255,82,169,62,255,114,143,115,1,239,196,50,255,173,48,193,255,147,2,84,255,150,134,147,254,95,232,73,0,109,227,52,254,191,137,10,0,40,204,30,254,76,52,97,255,164,235,126,0,254,124,188,0,74,182,21,1,121,29,35,255,241,30,7,254,85,218,214,255,7,84,150,254,81,27,117,255,160,159,152,254,66,24,221,255,227,10,60,1,141,135,102,0,208,189,150,1,117,179,92,0,132,22,136,255,120,199,28,0,21,129,79,254,182,9,65,0,218,163,169,0,246,147,198,255,107,38,144,1,78,175,205,255,214,5,250,254,47,88,29,255,164,47,204,255,43,55,6,255,131,134,207,254,116,100,214,0,96,140,75,1,106,220,144,0,195,32,28,1,172,81,5,255,199,179,52,255,37,84,203,0,170,112,174,0,11,4,91,0,69,244,27,1,117,131,92,0,33,152,175,255,140,153,107,255,251,135,43,254,87,138,4,255,198,234,147,254,121,152,84,255,205,101,155,1,157,9,25,0,72,106,17,254,108,153,0,255],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);allocate([189,229,186,0,193,8,176,255,174,149,209,0,238,130,29,0,233,214,126,1,61,226,102,0,57,163,4,1,198,111,51,255,45,79,78,1,115,210,10,255,218,9,25,255,158,139,198,255,211,82,187,254,80,133,83,0,157,129,230,1,243,133,134,255,40,136,16,0,77,107,79,255,183,85,92,1,177,204,202,0,163,71,147,255,152,69,190,0,172,51,188,1,250,210,172,255,211,242,113,1,89,89,26,255,64,66,111,254,116,152,42,0,161,39,27,255,54,80,254,0,106,209,115,1,103,124,97,0,221,230,98,255,31,231,6,0,178,192,120,254,15,217,203,255,124,158,79,0,112,145,247,0,92,250,48,1,163,181,193,255,37,47,142,254,144,189,165,255,46,146,240,0,6,75,128,0,41,157,200,254,87,121,213,0,1,113,236,0,5,45,250,0,144,12,82,0,31,108,231,0,225,239,119,255,167,7,189,255,187,228,132,255,110,189,34,0,94,44,204,1,162,52,197,0,78,188,241,254,57,20,141,0,244,146,47,1,206,100,51,0,125,107,148,254,27,195,77,0,152,253,90,1,7,143,144,255,51,37,31,0,34,119,38,255,7,197,118,0,153,188,211,0,151,20,116,254,245,65,52,255,180,253,110,1,47,177,209,0,161,99,17,255,118,222,202,0,125,179,252,1,123,54,126,255,145,57,191,0,55,186,121,0,10,243,138,0,205,211,229,255,125,156,241,254,148,156,185,255,227,19,188,255,124,41,32,255,31,34,206,254,17,57,83,0,204,22,37,255,42,96,98,0,119,102,184,1,3,190,28,0,110,82,218,255,200,204,192,255,201,145,118,0,117,204,146,0,132,32,98,1,192,194,121,0,106,161,248,1,237,88,124,0,23,212,26,0,205,171,90,255,248,48,216,1,141,37,230,255,124,203,0,254,158,168,30,255,214,248,21,0,112,187,7,255,75,133,239,255,74,227,243,255,250,147,70,0,214,120,162,0,167,9,179,255,22,158,18,0,218,77,209,1,97,109,81,255,244,33,179,255,57,52,57,255,65,172,210,255,249,71,209,255,142,169,238,0,158,189,153,255,174,254,103,254,98,33,14,0,141,76,230,255,113,139,52,255,15,58,212,0,168,215,201,255,248,204,215,1,223,68,160,255,57,154,183,254,47,231,121,0,106,166,137,0,81,136,138,0,165,43,51,0,231,139,61,0,57,95,59,254,118,98,25,255,151,63,236,1,94,190,250,255,169,185,114,1,5,250,58,255,75,105,97,1,215,223,134,0,113,99,163,1,128,62,112,0,99,106,147,0,163,195,10,0,33,205,182,0,214,14,174,255,129,38,231,255,53,182,223,0,98,42,159,255,247,13,40,0,188,210,177,1,6,21,0,255,255,61,148,254,137,45,129,255,89,26,116,254,126,38,114,0,251,50,242,254,121,134,128,255,204,249,167,254,165,235,215,0,202,177,243,0,133,141,62,0,240,130,190,1,110,175,255,0,0,20,146,1,37,210,121,255,7,39,130,0,142,250,84,255,141,200,207,0,9,95,104,255,11,244,174,0,134,232,126,0,167,1,123,254,16,193,149,255,232,233,239,1,213,70,112,255,252,116,160,254,242,222,220,255,205,85,227,0,7,185,58,0,118,247,63,1,116,77,177,255,62,245,200,254,63,18,37,255,107,53,232,254,50,221,211,0,162,219,7,254,2,94,43,0,182,62,182,254,160,78,200,255,135,140,170,0,235,184,228,0,175,53,138,254,80,58,77,255,152,201,2,1,63,196,34,0,5,30,184,0,171,176,154,0,121,59,206,0,38,99,39,0,172,80,77,254,0,134,151,0,186,33,241,254,94,253,223,255,44,114,252,0,108,126,57,255,201,40,13,255,39,229,27,255,39,239,23,1,151,121,51,255,153,150,248,0,10,234,174,255,118,246,4,254,200,245,38,0,69,161,242,1,16,178,150,0,113,56,130,0,171,31,105,0,26,88,108,255,49,42,106,0,251,169,66,0,69,93,149,0,20,57,254,0,164,25,111,0,90,188,90,255,204,4,197,0,40,213,50,1,212,96,132,255,88,138,180,254,228,146,124,255,184,246,247,0,65,117,86,255,253,102,210,254,254,121,36,0,137,115,3,255,60,24,216,0,134,18,29,0,59,226,97,0,176,142,71,0,7,209,161,0,189,84,51,254,155,250,72,0,213,84,235,255,45,222,224,0,238,148,143,255,170,42,53,255,78,167,117,0,186,0,40,255,125,177,103,255,69,225,66,0,227,7,88,1,75,172,6,0,169,45,227,1,16,36,70,255,50,2,9,255,139,193,22,0,143,183,231,254,218,69,50,0,236,56,161,1,213,131,42,0,138,145,44,254,136,229,40,255,49,63,35,255,61,145,245,255,101,192,2,254,232,167,113,0,152,104,38,1,121,185,218,0,121,139,211,254,119,240,35,0,65,189,217,254,187,179,162,255,160,187,230,0,62,248,14,255,60,78,97,0,255,247,163,255,225,59,91,255,107,71,58,255,241,47,33,1,50,117,236,0,219,177,63,254,244,90,179,0,35,194,215,255,189,67,50,255,23,135,129,0,104,189,37,255,185,57,194,0,35,62,231,255,220,248,108,0,12,231,178,0,143,80,91,1,131,93,101,255,144,39,2,1,255,250,178,0,5,17,236,254,139,32,46,0,204,188,38,254,245,115,52,255,191,113,73,254,191,108,69,255,22,69,245,1,23,203,178,0,170,99,170,0,65,248,111,0,37,108,153,255,64,37,69,0,0,88,62,254,89,148,144,255,191,68,224,1,241,39,53,0,41,203,237,255,145,126,194,255,221,42,253,255,25,99,151,0,97,253,223,1,74,115,49,255,6,175,72,255,59,176,203,0,124,183,249,1,228,228,99,0,129,12,207,254,168,192,195,255,204,176,16,254,152,234,171,0,77,37,85,255,33,120,135,255,142,194,227,1,31,214,58,0,213,187,125,255,232,46,60,255,190,116,42,254,151,178,19,255,51,62,237,254,204,236,193,0,194,232,60,0,172,34,157,255,189,16,184,254,103,3,95,255,141,233,36,254,41,25,11,255,21,195,166,0,118,245,45,0,67,213,149,255,159,12,18,255,187,164,227,1,160,25,5,0,12,78,195,1,43,197,225,0,48,142,41,254,196,155,60,255,223,199,18,1,145,136,156,0,252,117,169,254,145,226,238,0,239,23,107,0,109,181,188,255,230,112,49,254,73,170,237,255,231,183,227,255,80,220,20,0,194,107,127,1,127,205,101,0,46,52,197,1,210,171,36,255,88,3,90,255,56,151,141,0,96,187,255,255,42,78,200,0,254,70,70,1,244,125,168,0,204,68,138,1,124,215,70,0,102,66,200,254,17,52,228,0,117,220,143,254,203,248,123,0,56,18,174,255,186,151,164,255,51,232,208,1,160,228,43,255,249,29,25,1,68,190,63,0,103,230,9,106,133,174,103,187,114,243,110,60,58,245,79,165,127,82,14,81,140,104,5,155,171,217,131,31,25,205,224,91,5,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,19,0,0,0,144,135,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,126,0,0,99,117,114,118,101,50,53,53,49,57,120,115,97,108,115,97,50,48,112,111,108,121,49,51,48,53,0,98,108,97,107,101,50,98,0,83,45,62,98,117,102,108,101,110,32,60,61,32,66,76,65,75,69,50,66,95,66,76,79,67,75,66,89,84,69,83,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,98,108,97,107,101,50,98,45,114,101,102,46,99,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,95,102,105,110,97,108,0,111,117,116,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,46,99,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,0,107,101,121,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,115,97,108,116,95,112,101,114,115,111,110,97,108,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,95,115,97,108,116,95,112,101,114,115,111,110,97,108,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,102,105,110,97,108,0,115,104,97,53,49,50,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,111,108,121,49,51,48,53,0,36,97,114,103,111,110,50,105,0,36,118,61,0,36,109,61,0,44,116,61,0,44,112,61,0,44,100,97,116,97,61,0,36,97,114,103,111,110,50,105,36,118,61,0,36,97,114,103,111,110,50,105,36,0,97,114,103,111,110,50,105,0,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,36,55,36,0,99,117,114,118,101,50,53,53,49,57,0,120,115,97,108,115,97,50,48,112,111,108,121,49,51,48,53,0,115,105,112,104,97,115,104,50,52,0,101,100,50,53,53,49,57,0,237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,120,115,97,108,115,97,50,48,0,106,115,0,123,32,114,101,116,117,114,110,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,40,41,59,32,125,0,123,32,105,102,32,40,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,61,61,32,117,110,100,101,102,105,110,101,100,41,32,123,32,116,114,121,32,123,32,118,97,114,32,119,105,110,100,111,119,95,32,61,32,34,111,98,106,101,99,116,34,32,61,61,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,63,32,119,105,110,100,111,119,32,58,32,115,101,108,102,44,32,99,114,121,112,116,111,95,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,58,32,119,105,110,100,111,119,95,46,109,115,67,114,121,112,116,111,44,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,49,41,59,32,99,114,121,112,116,111,95,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,98,117,102,41,59,32,114,101,116,117,114,110,32,98,117,102,91,48,93,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,121,112,116,111,32,61,32,114,101,113,117,105,114,101,40,39,99,114,121,112,116,111,39,41,44,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,99,114,121,112,116,111,46,114,97,110,100,111,109,66,121,116,101,115,40,52,41,59,32,114,101,116,117,114,110,32,40,98,117,102,91,48,93,32,60,60,32,50,52,32,124,32,98,117,102,91,49,93,32,60,60,32,49,54,32,124,32,98,117,102,91,50,93,32,60,60,32,56,32,124,32,98,117,102,91,51,93,41,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,104,114,111,119,32,39,78,111,32,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,32,102,111,117,110,100,39,59,32,125,32,125,32,125,32,125,0,98,117,102,95,108,101,110,32,60,61,32,83,73,90,69,95,77,65,88,0,114,97,110,100,111,109,98,121,116,101,115,47,114,97,110,100,111,109,98,121,116,101,115,46,99,0,114,97,110,100,111,109,98,121,116,101,115,0,49,46,48,46,49,48,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+30720);var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}Module["_i64Subtract"]=_i64Subtract;Module["_i64Add"]=_i64Add;Module["_bitshift64Ashr"]=_bitshift64Ashr;Module["_memset"]=_memset;function _pthread_cleanup_push(routine,arg){__ATEXIT__.push(function(){Runtime.dynCall("vi",routine,[arg])});_pthread_cleanup_push.level=__ATEXIT__.length}Module["_bitshift64Lshr"]=_bitshift64Lshr;Module["_bitshift64Shl"]=_bitshift64Shl;function _pthread_cleanup_pop(){assert(_pthread_cleanup_push.level==__ATEXIT__.length,"cannot pop if something else added meanwhile!");__ATEXIT__.pop();_pthread_cleanup_push.level=__ATEXIT__.length}function _abort(){Module["abort"]()}function ___lock(){}function ___unlock(){}var SYSCALLS={varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=Pointer_stringify(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low},getZero:function(){assert(SYSCALLS.get()===0)}};function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___assert_fail(condition,filename,line,func){ABORT=true;throw"Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"]+" at "+stackTrace()}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=function(){abort("cannot dynamically allocate, sbrk now has control")}}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;Module["_memmove"]=_memmove;function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _pthread_self(){return 0}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffer){___syscall146.buffers=[null,[],[]];___syscall146.printChar=function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?Module["print"]:Module["printErr"])(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}__ATEXIT__.push(function(){var fflush=Module["_fflush"];if(fflush)fflush(0);var printChar=___syscall146.printChar;if(!printChar)return;var buffers=___syscall146.buffers;if(buffers[1].length)printChar(1,10);if(buffers[2].length)printChar(2,10)});STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_ii(index,a1){return Runtime.functionPointers[index](a1)}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiii(index,a1,a2,a3){return Runtime.functionPointers[index](a1,a2,a3)}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_vi(index,a1){Runtime.functionPointers[index](a1)}Module.asmGlobalArg={Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:Infinity};Module.asmLibraryArg={abort:abort,assert:assert,invoke_ii:invoke_ii,jsCall_ii:jsCall_ii,invoke_iiii:invoke_iiii,jsCall_iiii:jsCall_iiii,invoke_vi:invoke_vi,jsCall_vi:jsCall_vi,_pthread_cleanup_pop:_pthread_cleanup_pop,_sysconf:_sysconf,___lock:___lock,_emscripten_asm_const_i:_emscripten_asm_const_i,_emscripten_asm_const_v:_emscripten_asm_const_v,_pthread_self:_pthread_self,___syscall6:___syscall6,___setErrNo:___setErrNo,_abort:_abort,_sbrk:_sbrk,_time:_time,_pthread_cleanup_push:_pthread_cleanup_push,_emscripten_memcpy_big:_emscripten_memcpy_big,___syscall54:___syscall54,___unlock:___unlock,___syscall140:___syscall140,___assert_fail:___assert_fail,___syscall146:___syscall146,STACKTOP:STACKTOP,STACK_MAX:STACK_MAX,tempDoublePtr:tempDoublePtr,ABORT:ABORT,cttz_i8:cttz_i8};var asm=function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=0;var o=0;var p=0;var q=0;var r=global.NaN,s=global.Infinity;var t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0.0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=global.Math.floor;var N=global.Math.abs;var O=global.Math.sqrt;var P=global.Math.pow;var Q=global.Math.cos;var R=global.Math.sin;var S=global.Math.tan;var T=global.Math.acos;var U=global.Math.asin;var V=global.Math.atan;var W=global.Math.atan2;var X=global.Math.exp;var Y=global.Math.log;var Z=global.Math.ceil;var _=global.Math.imul;var $=global.Math.min;var aa=global.Math.clz32;var ba=env.abort;var ca=env.assert;var da=env.invoke_ii;var ea=env.jsCall_ii;var fa=env.invoke_iiii;var ga=env.jsCall_iiii;var ha=env.invoke_vi;var ia=env.jsCall_vi;var ja=env._pthread_cleanup_pop;var ka=env._sysconf;var la=env.___lock;var ma=env._emscripten_asm_const_i;var na=env._emscripten_asm_const_v;var oa=env._pthread_self;var pa=env.___syscall6;var qa=env.___setErrNo;var ra=env._abort;var sa=env._sbrk;var ta=env._time;var ua=env._pthread_cleanup_push;var va=env._emscripten_memcpy_big;var wa=env.___syscall54;var xa=env.___unlock;var ya=env.___syscall140;var za=env.___assert_fail;var Aa=env.___syscall146;var Ba=0.0;function ee(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=i;e=i=i+63&-64;i=i+2048|0;f=e+1024|0;qh(f|0,b|0,1024)|0;b=0;do{k=a+(b<<3)|0;h=f+(b<<3)|0;l=h;j=c[l+4>>2]^c[k+4>>2];c[h>>2]=c[l>>2]^c[k>>2];c[h+4>>2]=j;b=b+1|0}while((b|0)!=128);qh(e|0,f|0,1024)|0;b=0;do{j=d+(b<<3)|0;l=e+(b<<3)|0;h=l;k=c[h+4>>2]^c[j+4>>2];c[l>>2]=c[h>>2]^c[j>>2];c[l+4>>2]=k;b=b+1|0}while((b|0)!=128);b=0;do{t=b<<4;J=f+(t<<3)|0;q=J;s=c[q>>2]|0;q=c[q+4>>2]|0;l=f+((t|4)<<3)|0;D=l;h=c[D>>2]|0;D=c[D+4>>2]|0;A=lh(h|0,D|0,s|0,q|0)|0;w=C;q=ph(s|0,q|0,1)|0;q=wh(q&-2|0,C&1|0,h|0,0)|0;q=lh(A|0,w|0,q|0,C|0)|0;w=C;A=f+((t|12)<<3)|0;s=A;x=q^c[s>>2];s=w^c[s+4>>2];n=f+((t|8)<<3)|0;k=n;G=c[k>>2]|0;k=c[k+4>>2]|0;m=lh(s|0,x|0,G|0,k|0)|0;o=C;k=ph(G|0,k|0,1)|0;k=wh(k&-2|0,C&1|0,s|0,0)|0;k=lh(m|0,o|0,k|0,C|0)|0;o=C;h=k^h;D=o^D;m=oh(h|0,D|0,24)|0;G=C;D=ph(h|0,D|0,40)|0;D=D|m;G=C|G;h=lh(D|0,G|0,q|0,w|0)|0;j=C;w=ph(q|0,w|0,1)|0;w=wh(m|0,0,w&-2|0,C&1|0)|0;w=lh(h|0,j|0,w|0,C|0)|0;j=C;h=J;c[h>>2]=w;c[h+4>>2]=j;s=w^s;x=j^x;j=oh(s|0,x|0,16)|0;w=C;x=ph(s|0,x|0,48)|0;x=x|j;w=C|w;s=A;c[s>>2]=x;c[s+4>>2]=w;w=lh(x|0,w|0,k|0,o|0)|0;x=C;o=ph(k|0,o|0,1)|0;o=wh(j|0,0,o&-2|0,C&1|0)|0;o=lh(w|0,x|0,o|0,C|0)|0;x=C;w=n;c[w>>2]=o;c[w+4>>2]=x;D=o^D;G=x^G;x=oh(D|0,G|0,63)|0;o=C;G=ph(D|0,G|0,1)|0;D=l;c[D>>2]=G|x;c[D+4>>2]=C|o;D=f+((t|1)<<3)|0;o=D;x=c[o>>2]|0;o=c[o+4>>2]|0;G=f+((t|5)<<3)|0;w=G;j=c[w>>2]|0;w=c[w+4>>2]|0;k=lh(j|0,w|0,x|0,o|0)|0;s=C;o=ph(x|0,o|0,1)|0;o=wh(o&-2|0,C&1|0,j|0,0)|0;o=lh(k|0,s|0,o|0,C|0)|0;s=C;k=f+((t|13)<<3)|0;x=k;h=o^c[x>>2];x=s^c[x+4>>2];m=f+((t|9)<<3)|0;q=m;z=c[q>>2]|0;q=c[q+4>>2]|0;y=lh(x|0,h|0,z|0,q|0)|0;u=C;q=ph(z|0,q|0,1)|0;q=wh(q&-2|0,C&1|0,x|0,0)|0;q=lh(y|0,u|0,q|0,C|0)|0;u=C;j=q^j;w=u^w;y=oh(j|0,w|0,24)|0;z=C;w=ph(j|0,w|0,40)|0;w=w|y;z=C|z;j=lh(w|0,z|0,o|0,s|0)|0;H=C;s=ph(o|0,s|0,1)|0;s=wh(y|0,0,s&-2|0,C&1|0)|0;s=lh(j|0,H|0,s|0,C|0)|0;H=C;j=D;c[j>>2]=s;c[j+4>>2]=H;x=s^x;h=H^h;H=oh(x|0,h|0,16)|0;s=C;h=ph(x|0,h|0,48)|0;h=h|H;s=C|s;x=k;c[x>>2]=h;c[x+4>>2]=s;s=lh(h|0,s|0,q|0,u|0)|0;h=C;u=ph(q|0,u|0,1)|0;u=wh(H|0,0,u&-2|0,C&1|0)|0;u=lh(s|0,h|0,u|0,C|0)|0;h=C;s=m;c[s>>2]=u;c[s+4>>2]=h;w=u^w;z=h^z;h=oh(w|0,z|0,63)|0;u=C;z=ph(w|0,z|0,1)|0;w=G;c[w>>2]=z|h;c[w+4>>2]=C|u;w=f+((t|2)<<3)|0;u=w;h=c[u>>2]|0;u=c[u+4>>2]|0;z=f+((t|6)<<3)|0;s=z;H=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(H|0,s|0,h|0,u|0)|0;x=C;u=ph(h|0,u|0,1)|0;u=wh(u&-2|0,C&1|0,H|0,0)|0;u=lh(q|0,x|0,u|0,C|0)|0;x=C;q=f+((t|14)<<3)|0;h=q;j=u^c[h>>2];h=x^c[h+4>>2];y=f+((t|10)<<3)|0;o=y;v=c[o>>2]|0;o=c[o+4>>2]|0;I=lh(h|0,j|0,v|0,o|0)|0;E=C;o=ph(v|0,o|0,1)|0;o=wh(o&-2|0,C&1|0,h|0,0)|0;o=lh(I|0,E|0,o|0,C|0)|0;E=C;H=o^H;s=E^s;I=oh(H|0,s|0,24)|0;v=C;s=ph(H|0,s|0,40)|0;s=s|I;v=C|v;H=lh(s|0,v|0,u|0,x|0)|0;L=C;x=ph(u|0,x|0,1)|0;x=wh(I|0,0,x&-2|0,C&1|0)|0;x=lh(H|0,L|0,x|0,C|0)|0;L=C;H=w;c[H>>2]=x;c[H+4>>2]=L;h=x^h;j=L^j;L=oh(h|0,j|0,16)|0;x=C;j=ph(h|0,j|0,48)|0;j=j|L;x=C|x;h=q;c[h>>2]=j;c[h+4>>2]=x;x=lh(j|0,x|0,o|0,E|0)|0;j=C;E=ph(o|0,E|0,1)|0;E=wh(L|0,0,E&-2|0,C&1|0)|0;E=lh(x|0,j|0,E|0,C|0)|0;j=C;s=E^s;v=j^v;x=oh(s|0,v|0,63)|0;L=C;v=ph(s|0,v|0,1)|0;s=z;c[s>>2]=v|x;c[s+4>>2]=C|L;s=f+((t|3)<<3)|0;L=s;x=c[L>>2]|0;L=c[L+4>>2]|0;v=f+((t|7)<<3)|0;o=v;h=c[o>>2]|0;o=c[o+4>>2]|0;H=lh(h|0,o|0,x|0,L|0)|0;I=C;L=ph(x|0,L|0,1)|0;L=wh(L&-2|0,C&1|0,h|0,0)|0;L=lh(H|0,I|0,L|0,C|0)|0;I=C;H=f+((t|15)<<3)|0;x=H;u=L^c[x>>2];x=I^c[x+4>>2];t=f+((t|11)<<3)|0;B=t;M=c[B>>2]|0;B=c[B+4>>2]|0;K=lh(x|0,u|0,M|0,B|0)|0;p=C;B=ph(M|0,B|0,1)|0;B=wh(B&-2|0,C&1|0,x|0,0)|0;B=lh(K|0,p|0,B|0,C|0)|0;p=C;h=B^h;o=p^o;K=oh(h|0,o|0,24)|0;M=C;o=ph(h|0,o|0,40)|0;o=o|K;M=C|M;h=lh(o|0,M|0,L|0,I|0)|0;r=C;I=ph(L|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(h|0,r|0,I|0,C|0)|0;r=C;h=s;c[h>>2]=I;c[h+4>>2]=r;x=I^x;u=r^u;r=oh(x|0,u|0,16)|0;I=C;u=ph(x|0,u|0,48)|0;u=u|r;I=C|I;x=lh(u|0,I|0,B|0,p|0)|0;h=C;p=ph(B|0,p|0,1)|0;p=wh(r|0,0,p&-2|0,C&1|0)|0;p=lh(x|0,h|0,p|0,C|0)|0;h=C;o=p^o;M=h^M;x=oh(o|0,M|0,63)|0;r=C;M=ph(o|0,M|0,1)|0;x=M|x;r=C|r;M=v;c[M>>2]=x;c[M+4>>2]=r;M=J;o=c[M>>2]|0;M=c[M+4>>2]|0;B=G;K=c[B>>2]|0;B=c[B+4>>2]|0;L=lh(K|0,B|0,o|0,M|0)|0;F=C;M=ph(o|0,M|0,1)|0;M=wh(M&-2|0,C&1|0,K|0,0)|0;M=lh(L|0,F|0,M|0,C|0)|0;F=C;u=M^u;I=F^I;L=lh(I|0,u|0,E|0,j|0)|0;o=C;j=ph(E|0,j|0,1)|0;j=wh(j&-2|0,C&1|0,I|0,0)|0;j=lh(L|0,o|0,j|0,C|0)|0;o=C;K=j^K;B=o^B;L=oh(K|0,B|0,24)|0;E=C;B=ph(K|0,B|0,40)|0;B=B|L;E=C|E;K=lh(B|0,E|0,M|0,F|0)|0;a=C;F=ph(M|0,F|0,1)|0;F=wh(L|0,0,F&-2|0,C&1|0)|0;F=lh(K|0,a|0,F|0,C|0)|0;a=C;c[J>>2]=F;c[J+4>>2]=a;I=F^I;u=a^u;a=oh(I|0,u|0,16)|0;F=C;u=ph(I|0,u|0,48)|0;u=u|a;F=C|F;c[H>>2]=u;c[H+4>>2]=F;F=lh(u|0,F|0,j|0,o|0)|0;u=C;o=ph(j|0,o|0,1)|0;o=wh(a|0,0,o&-2|0,C&1|0)|0;o=lh(F|0,u|0,o|0,C|0)|0;u=C;c[y>>2]=o;c[y+4>>2]=u;B=o^B;E=u^E;u=oh(B|0,E|0,63)|0;o=C;E=ph(B|0,E|0,1)|0;c[G>>2]=E|u;c[G+4>>2]=C|o;G=D;o=c[G>>2]|0;G=c[G+4>>2]|0;u=z;E=c[u>>2]|0;u=c[u+4>>2]|0;B=lh(E|0,u|0,o|0,G|0)|0;y=C;G=ph(o|0,G|0,1)|0;G=wh(G&-2|0,C&1|0,E|0,0)|0;G=lh(B|0,y|0,G|0,C|0)|0;y=C;B=A;o=G^c[B>>2];B=y^c[B+4>>2];F=lh(B|0,o|0,p|0,h|0)|0;a=C;h=ph(p|0,h|0,1)|0;h=wh(h&-2|0,C&1|0,B|0,0)|0;h=lh(F|0,a|0,h|0,C|0)|0;a=C;E=h^E;u=a^u;F=oh(E|0,u|0,24)|0;p=C;u=ph(E|0,u|0,40)|0;u=u|F;p=C|p;E=lh(u|0,p|0,G|0,y|0)|0;j=C;y=ph(G|0,y|0,1)|0;y=wh(F|0,0,y&-2|0,C&1|0)|0;y=lh(E|0,j|0,y|0,C|0)|0;j=C;c[D>>2]=y;c[D+4>>2]=j;B=y^B;o=j^o;j=oh(B|0,o|0,16)|0;y=C;o=ph(B|0,o|0,48)|0;o=o|j;y=C|y;c[A>>2]=o;c[A+4>>2]=y;y=lh(o|0,y|0,h|0,a|0)|0;o=C;a=ph(h|0,a|0,1)|0;a=wh(j|0,0,a&-2|0,C&1|0)|0;a=lh(y|0,o|0,a|0,C|0)|0;o=C;c[t>>2]=a;c[t+4>>2]=o;u=a^u;p=o^p;o=oh(u|0,p|0,63)|0;a=C;p=ph(u|0,p|0,1)|0;c[z>>2]=p|o;c[z+4>>2]=C|a;z=w;a=c[z>>2]|0;z=c[z+4>>2]|0;o=lh(x|0,r|0,a|0,z|0)|0;p=C;z=ph(a|0,z|0,1)|0;z=wh(z&-2|0,C&1|0,x|0,0)|0;z=lh(o|0,p|0,z|0,C|0)|0;p=C;o=k;a=z^c[o>>2];o=p^c[o+4>>2];u=n;t=c[u>>2]|0;u=c[u+4>>2]|0;y=lh(o|0,a|0,t|0,u|0)|0;j=C;u=ph(t|0,u|0,1)|0;u=wh(u&-2|0,C&1|0,o|0,0)|0;u=lh(y|0,j|0,u|0,C|0)|0;j=C;x=u^x;r=j^r;y=oh(x|0,r|0,24)|0;t=C;r=ph(x|0,r|0,40)|0;r=r|y;t=C|t;x=lh(r|0,t|0,z|0,p|0)|0;h=C;p=ph(z|0,p|0,1)|0;p=wh(y|0,0,p&-2|0,C&1|0)|0;p=lh(x|0,h|0,p|0,C|0)|0;h=C;c[w>>2]=p;c[w+4>>2]=h;o=p^o;a=h^a;h=oh(o|0,a|0,16)|0;p=C;a=ph(o|0,a|0,48)|0;a=a|h;p=C|p;c[k>>2]=a;c[k+4>>2]=p;p=lh(a|0,p|0,u|0,j|0)|0;a=C;j=ph(u|0,j|0,1)|0;j=wh(h|0,0,j&-2|0,C&1|0)|0;j=lh(p|0,a|0,j|0,C|0)|0;a=C;c[n>>2]=j;c[n+4>>2]=a;r=j^r;t=a^t;a=oh(r|0,t|0,63)|0;j=C;t=ph(r|0,t|0,1)|0;c[v>>2]=t|a;c[v+4>>2]=C|j;v=s;j=c[v>>2]|0;v=c[v+4>>2]|0;a=l;t=c[a>>2]|0;a=c[a+4>>2]|0;r=lh(t|0,a|0,j|0,v|0)|0;n=C;v=ph(j|0,v|0,1)|0;v=wh(v&-2|0,C&1|0,t|0,0)|0;v=lh(r|0,n|0,v|0,C|0)|0;n=C;r=q;j=v^c[r>>2];r=n^c[r+4>>2];p=m;h=c[p>>2]|0;p=c[p+4>>2]|0;u=lh(r|0,j|0,h|0,p|0)|0;k=C;p=ph(h|0,p|0,1)|0;p=wh(p&-2|0,C&1|0,r|0,0)|0;p=lh(u|0,k|0,p|0,C|0)|0;k=C;t=p^t;a=k^a;u=oh(t|0,a|0,24)|0;h=C;a=ph(t|0,a|0,40)|0;a=a|u;h=C|h;t=lh(a|0,h|0,v|0,n|0)|0;o=C;n=ph(v|0,n|0,1)|0;n=wh(u|0,0,n&-2|0,C&1|0)|0;n=lh(t|0,o|0,n|0,C|0)|0;o=C;c[s>>2]=n;c[s+4>>2]=o;r=n^r;j=o^j;o=oh(r|0,j|0,16)|0;n=C;j=ph(r|0,j|0,48)|0;j=j|o;n=C|n;c[q>>2]=j;c[q+4>>2]=n;n=lh(j|0,n|0,p|0,k|0)|0;j=C;k=ph(p|0,k|0,1)|0;k=wh(o|0,0,k&-2|0,C&1|0)|0;k=lh(n|0,j|0,k|0,C|0)|0;j=C;c[m>>2]=k;c[m+4>>2]=j;a=k^a;h=j^h;j=oh(a|0,h|0,63)|0;k=C;h=ph(a|0,h|0,1)|0;c[l>>2]=h|j;c[l+4>>2]=C|k;b=b+1|0}while((b|0)!=8);b=0;do{z=b<<1;k=f+(z<<3)|0;D=k;A=c[D>>2]|0;D=c[D+4>>2]|0;M=f+(z+32<<3)|0;q=M;J=c[q>>2]|0;q=c[q+4>>2]|0;s=lh(J|0,q|0,A|0,D|0)|0;w=C;D=ph(A|0,D|0,1)|0;D=wh(D&-2|0,C&1|0,J|0,0)|0;D=lh(s|0,w|0,D|0,C|0)|0;w=C;s=f+(z+96<<3)|0;A=s;v=D^c[A>>2];A=w^c[A+4>>2];G=f+(z+64<<3)|0;L=G;n=c[L>>2]|0;L=c[L+4>>2]|0;H=lh(A|0,v|0,n|0,L|0)|0;F=C;L=ph(n|0,L|0,1)|0;L=wh(L&-2|0,C&1|0,A|0,0)|0;L=lh(H|0,F|0,L|0,C|0)|0;F=C;J=L^J;q=F^q;H=oh(J|0,q|0,24)|0;n=C;q=ph(J|0,q|0,40)|0;q=q|H;n=C|n;J=lh(q|0,n|0,D|0,w|0)|0;K=C;w=ph(D|0,w|0,1)|0;w=wh(H|0,0,w&-2|0,C&1|0)|0;w=lh(J|0,K|0,w|0,C|0)|0;K=C;J=k;c[J>>2]=w;c[J+4>>2]=K;A=w^A;v=K^v;K=oh(A|0,v|0,16)|0;w=C;v=ph(A|0,v|0,48)|0;v=v|K;w=C|w;A=s;c[A>>2]=v;c[A+4>>2]=w;w=lh(v|0,w|0,L|0,F|0)|0;v=C;F=ph(L|0,F|0,1)|0;F=wh(K|0,0,F&-2|0,C&1|0)|0;F=lh(w|0,v|0,F|0,C|0)|0;v=C;w=G;c[w>>2]=F;c[w+4>>2]=v;q=F^q;n=v^n;v=oh(q|0,n|0,63)|0;F=C;n=ph(q|0,n|0,1)|0;q=M;c[q>>2]=n|v;c[q+4>>2]=C|F;q=f+((z|1)<<3)|0;F=q;v=c[F>>2]|0;F=c[F+4>>2]|0;n=f+(z+33<<3)|0;w=n;K=c[w>>2]|0;w=c[w+4>>2]|0;L=lh(K|0,w|0,v|0,F|0)|0;A=C;F=ph(v|0,F|0,1)|0;F=wh(F&-2|0,C&1|0,K|0,0)|0;F=lh(L|0,A|0,F|0,C|0)|0;A=C;L=f+(z+97<<3)|0;v=L;J=F^c[v>>2];v=A^c[v+4>>2];H=f+(z+65<<3)|0;D=H;t=c[D>>2]|0;D=c[D+4>>2]|0;u=lh(v|0,J|0,t|0,D|0)|0;y=C;D=ph(t|0,D|0,1)|0;D=wh(D&-2|0,C&1|0,v|0,0)|0;D=lh(u|0,y|0,D|0,C|0)|0;y=C;K=D^K;w=y^w;u=oh(K|0,w|0,24)|0;t=C;w=ph(K|0,w|0,40)|0;w=w|u;t=C|t;K=lh(w|0,t|0,F|0,A|0)|0;m=C;A=ph(F|0,A|0,1)|0;A=wh(u|0,0,A&-2|0,C&1|0)|0;A=lh(K|0,m|0,A|0,C|0)|0;m=C;K=q;c[K>>2]=A;c[K+4>>2]=m;v=A^v;J=m^J;m=oh(v|0,J|0,16)|0;A=C;J=ph(v|0,J|0,48)|0;J=J|m;A=C|A;v=L;c[v>>2]=J;c[v+4>>2]=A;A=lh(J|0,A|0,D|0,y|0)|0;J=C;y=ph(D|0,y|0,1)|0;y=wh(m|0,0,y&-2|0,C&1|0)|0;y=lh(A|0,J|0,y|0,C|0)|0;J=C;A=H;c[A>>2]=y;c[A+4>>2]=J;w=y^w;t=J^t;J=oh(w|0,t|0,63)|0;y=C;t=ph(w|0,t|0,1)|0;w=n;c[w>>2]=t|J;c[w+4>>2]=C|y;w=f+(z+16<<3)|0;y=w;J=c[y>>2]|0;y=c[y+4>>2]|0;t=f+(z+48<<3)|0;A=t;m=c[A>>2]|0;A=c[A+4>>2]|0;D=lh(m|0,A|0,J|0,y|0)|0;v=C;y=ph(J|0,y|0,1)|0;y=wh(y&-2|0,C&1|0,m|0,0)|0;y=lh(D|0,v|0,y|0,C|0)|0;v=C;D=f+(z+112<<3)|0;J=D;K=y^c[J>>2];J=v^c[J+4>>2];u=f+(z+80<<3)|0;F=u;x=c[F>>2]|0;F=c[F+4>>2]|0;l=lh(J|0,K|0,x|0,F|0)|0;p=C;F=ph(x|0,F|0,1)|0;F=wh(F&-2|0,C&1|0,J|0,0)|0;F=lh(l|0,p|0,F|0,C|0)|0;p=C;m=F^m;A=p^A;l=oh(m|0,A|0,24)|0;x=C;A=ph(m|0,A|0,40)|0;A=A|l;x=C|x;m=lh(A|0,x|0,y|0,v|0)|0;h=C;v=ph(y|0,v|0,1)|0;v=wh(l|0,0,v&-2|0,C&1|0)|0;v=lh(m|0,h|0,v|0,C|0)|0;h=C;m=w;c[m>>2]=v;c[m+4>>2]=h;J=v^J;K=h^K;h=oh(J|0,K|0,16)|0;v=C;K=ph(J|0,K|0,48)|0;K=K|h;v=C|v;J=D;c[J>>2]=K;c[J+4>>2]=v;v=lh(K|0,v|0,F|0,p|0)|0;K=C;p=ph(F|0,p|0,1)|0;p=wh(h|0,0,p&-2|0,C&1|0)|0;p=lh(v|0,K|0,p|0,C|0)|0;K=C;A=p^A;x=K^x;v=oh(A|0,x|0,63)|0;h=C;x=ph(A|0,x|0,1)|0;A=t;c[A>>2]=x|v;c[A+4>>2]=C|h;A=f+(z+17<<3)|0;h=A;v=c[h>>2]|0;h=c[h+4>>2]|0;x=f+(z+49<<3)|0;F=x;J=c[F>>2]|0;F=c[F+4>>2]|0;m=lh(J|0,F|0,v|0,h|0)|0;l=C;h=ph(v|0,h|0,1)|0;h=wh(h&-2|0,C&1|0,J|0,0)|0;h=lh(m|0,l|0,h|0,C|0)|0;l=C;m=f+(z+113<<3)|0;v=m;y=h^c[v>>2];v=l^c[v+4>>2];z=f+(z+81<<3)|0;r=z;a=c[r>>2]|0;r=c[r+4>>2]|0;j=lh(v|0,y|0,a|0,r|0)|0;E=C;r=ph(a|0,r|0,1)|0;r=wh(r&-2|0,C&1|0,v|0,0)|0;r=lh(j|0,E|0,r|0,C|0)|0;E=C;J=r^J;F=E^F;j=oh(J|0,F|0,24)|0;a=C;F=ph(J|0,F|0,40)|0;F=F|j;a=C|a;J=lh(F|0,a|0,h|0,l|0)|0;B=C;l=ph(h|0,l|0,1)|0;l=wh(j|0,0,l&-2|0,C&1|0)|0;l=lh(J|0,B|0,l|0,C|0)|0;B=C;J=A;c[J>>2]=l;c[J+4>>2]=B;v=l^v;y=B^y;B=oh(v|0,y|0,16)|0;l=C;y=ph(v|0,y|0,48)|0;y=y|B;l=C|l;v=lh(y|0,l|0,r|0,E|0)|0;J=C;E=ph(r|0,E|0,1)|0;E=wh(B|0,0,E&-2|0,C&1|0)|0;E=lh(v|0,J|0,E|0,C|0)|0;J=C;F=E^F;a=J^a;v=oh(F|0,a|0,63)|0;B=C;a=ph(F|0,a|0,1)|0;v=a|v;B=C|B;a=x;c[a>>2]=v;c[a+4>>2]=B;a=k;F=c[a>>2]|0;a=c[a+4>>2]|0;r=n;j=c[r>>2]|0;r=c[r+4>>2]|0;h=lh(j|0,r|0,F|0,a|0)|0;o=C;a=ph(F|0,a|0,1)|0;a=wh(a&-2|0,C&1|0,j|0,0)|0;a=lh(h|0,o|0,a|0,C|0)|0;o=C;y=a^y;l=o^l;h=lh(l|0,y|0,p|0,K|0)|0;F=C;K=ph(p|0,K|0,1)|0;K=wh(K&-2|0,C&1|0,l|0,0)|0;K=lh(h|0,F|0,K|0,C|0)|0;F=C;j=K^j;r=F^r;h=oh(j|0,r|0,24)|0;p=C;r=ph(j|0,r|0,40)|0;r=r|h;p=C|p;j=lh(r|0,p|0,a|0,o|0)|0;I=C;o=ph(a|0,o|0,1)|0;o=wh(h|0,0,o&-2|0,C&1|0)|0;o=lh(j|0,I|0,o|0,C|0)|0;I=C;c[k>>2]=o;c[k+4>>2]=I;l=o^l;y=I^y;I=oh(l|0,y|0,16)|0;o=C;y=ph(l|0,y|0,48)|0;y=y|I;o=C|o;c[m>>2]=y;c[m+4>>2]=o;o=lh(y|0,o|0,K|0,F|0)|0;y=C;F=ph(K|0,F|0,1)|0;F=wh(I|0,0,F&-2|0,C&1|0)|0;F=lh(o|0,y|0,F|0,C|0)|0;y=C;c[u>>2]=F;c[u+4>>2]=y;r=F^r;p=y^p;y=oh(r|0,p|0,63)|0;F=C;p=ph(r|0,p|0,1)|0;c[n>>2]=p|y;c[n+4>>2]=C|F;n=q;F=c[n>>2]|0;n=c[n+4>>2]|0;y=t;p=c[y>>2]|0;y=c[y+4>>2]|0;r=lh(p|0,y|0,F|0,n|0)|0;u=C;n=ph(F|0,n|0,1)|0;n=wh(n&-2|0,C&1|0,p|0,0)|0;n=lh(r|0,u|0,n|0,C|0)|0;u=C;r=s;F=n^c[r>>2];r=u^c[r+4>>2];o=lh(r|0,F|0,E|0,J|0)|0;I=C;J=ph(E|0,J|0,1)|0;J=wh(J&-2|0,C&1|0,r|0,0)|0;J=lh(o|0,I|0,J|0,C|0)|0;I=C;p=J^p;y=I^y;o=oh(p|0,y|0,24)|0;E=C;y=ph(p|0,y|0,40)|0;y=y|o;E=C|E;p=lh(y|0,E|0,n|0,u|0)|0;K=C;u=ph(n|0,u|0,1)|0;u=wh(o|0,0,u&-2|0,C&1|0)|0;u=lh(p|0,K|0,u|0,C|0)|0;K=C;c[q>>2]=u;c[q+4>>2]=K;r=u^r;F=K^F;K=oh(r|0,F|0,16)|0;u=C;F=ph(r|0,F|0,48)|0;F=F|K;u=C|u;c[s>>2]=F;c[s+4>>2]=u;u=lh(F|0,u|0,J|0,I|0)|0;F=C;I=ph(J|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(u|0,F|0,I|0,C|0)|0;F=C;c[z>>2]=I;c[z+4>>2]=F;y=I^y;E=F^E;F=oh(y|0,E|0,63)|0;I=C;E=ph(y|0,E|0,1)|0;c[t>>2]=E|F;c[t+4>>2]=C|I;t=w;I=c[t>>2]|0;t=c[t+4>>2]|0;F=lh(v|0,B|0,I|0,t|0)|0;E=C;t=ph(I|0,t|0,1)|0;t=wh(t&-2|0,C&1|0,v|0,0)|0;t=lh(F|0,E|0,t|0,C|0)|0;E=C;F=L;I=t^c[F>>2];F=E^c[F+4>>2];y=G;z=c[y>>2]|0;y=c[y+4>>2]|0;u=lh(F|0,I|0,z|0,y|0)|0;K=C;y=ph(z|0,y|0,1)|0;y=wh(y&-2|0,C&1|0,F|0,0)|0;y=lh(u|0,K|0,y|0,C|0)|0;K=C;v=y^v;B=K^B;u=oh(v|0,B|0,24)|0;z=C;B=ph(v|0,B|0,40)|0;B=B|u;z=C|z;v=lh(B|0,z|0,t|0,E|0)|0;J=C;E=ph(t|0,E|0,1)|0;E=wh(u|0,0,E&-2|0,C&1|0)|0;E=lh(v|0,J|0,E|0,C|0)|0;J=C;c[w>>2]=E;c[w+4>>2]=J;F=E^F;I=J^I;J=oh(F|0,I|0,16)|0;E=C;I=ph(F|0,I|0,48)|0;I=I|J;E=C|E;c[L>>2]=I;c[L+4>>2]=E;E=lh(I|0,E|0,y|0,K|0)|0;I=C;K=ph(y|0,K|0,1)|0;K=wh(J|0,0,K&-2|0,C&1|0)|0;K=lh(E|0,I|0,K|0,C|0)|0;I=C;c[G>>2]=K;c[G+4>>2]=I;B=K^B;z=I^z;I=oh(B|0,z|0,63)|0;K=C;z=ph(B|0,z|0,1)|0;c[x>>2]=z|I;c[x+4>>2]=C|K;x=A;K=c[x>>2]|0;x=c[x+4>>2]|0;I=M;z=c[I>>2]|0;I=c[I+4>>2]|0;B=lh(z|0,I|0,K|0,x|0)|0;G=C;x=ph(K|0,x|0,1)|0;x=wh(x&-2|0,C&1|0,z|0,0)|0;x=lh(B|0,G|0,x|0,C|0)|0;G=C;B=D;K=x^c[B>>2];B=G^c[B+4>>2];E=H;J=c[E>>2]|0;E=c[E+4>>2]|0;y=lh(B|0,K|0,J|0,E|0)|0;L=C;E=ph(J|0,E|0,1)|0;E=wh(E&-2|0,C&1|0,B|0,0)|0;E=lh(y|0,L|0,E|0,C|0)|0;L=C;z=E^z;I=L^I;y=oh(z|0,I|0,24)|0;J=C;I=ph(z|0,I|0,40)|0;I=I|y;J=C|J;z=lh(I|0,J|0,x|0,G|0)|0;F=C;G=ph(x|0,G|0,1)|0;G=wh(y|0,0,G&-2|0,C&1|0)|0;G=lh(z|0,F|0,G|0,C|0)|0;F=C;c[A>>2]=G;c[A+4>>2]=F;B=G^B;K=F^K;F=oh(B|0,K|0,16)|0;G=C;K=ph(B|0,K|0,48)|0;K=K|F;G=C|G;c[D>>2]=K;c[D+4>>2]=G;G=lh(K|0,G|0,E|0,L|0)|0;K=C;L=ph(E|0,L|0,1)|0;L=wh(F|0,0,L&-2|0,C&1|0)|0;L=lh(G|0,K|0,L|0,C|0)|0;K=C;c[H>>2]=L;c[H+4>>2]=K;I=L^I;J=K^J;K=oh(I|0,J|0,63)|0;L=C;J=ph(I|0,J|0,1)|0;c[M>>2]=J|K;c[M+4>>2]=C|L;b=b+1|0}while((b|0)!=8);qh(d|0,e|0,1024)|0;b=0;do{K=f+(b<<3)|0;M=d+(b<<3)|0;J=M;L=c[J+4>>2]^c[K+4>>2];c[M>>2]=c[J>>2]^c[K>>2];c[M+4>>2]=L;b=b+1|0}while((b|0)!=128);i=g;return}function fe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;e=i;d=i=i+63&-64;i=i+48|0;b=ae(a)|0;if(b|0){d=b;i=e;return d|0}f=c[a+44>>2]|0;b=c[a+48>>2]|0;h=b<<3;g=b<<2;f=((f>>>0<h>>>0?h:f)>>>0)/(g>>>0)|0;g=_(f,g)|0;c[d>>2]=0;c[d+4>>2]=c[a+40>>2];c[d+8>>2]=g;c[d+12>>2]=f;c[d+16>>2]=f<<2;c[d+20>>2]=b;c[d+24>>2]=c[a+52>>2];c[d+28>>2]=1;b=be(d,a)|0;if(b|0){h=b;i=e;return h|0}b=$d(d)|0;if(b|0){h=b;i=e;return h|0}_d(a,d);h=0;i=e;return h|0}function ge(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=i;q=i=i+63&-64;i=i+496|0;u=q;g=q+360|0;s=q+432|0;q=q+368|0;c[g>>2]=d;if(d>>>0>=65){nh(u+64|0,0,293)|0;v=u;w=400;x=v+48|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));l=u;c[l>>2]=-222443192;c[l+4>>2]=1779033703;l=u+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=u+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=u+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=u+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=u+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=u+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;l=u+56|0;c[l>>2]=327033209;c[l+4>>2]=1541459225;l=u+352|0;m=u+96|0;n=u+64|0;o=u+72|0;p=u+224|0;c[u+96>>2]=c[g>>2];g=(c[l>>2]|0)+4|0;c[l>>2]=g;a:do{if(f|0){k=0;while(1){j=256-g|0;g=u+96+g|0;if(!(k>>>0>0|(k|0)==0&f>>>0>j>>>0))break;qh(g|0,e|0,j|0)|0;c[l>>2]=(c[l>>2]|0)+j;x=n;v=c[x>>2]|0;x=c[x+4>>2]|0;h=lh(v|0,x|0,128,0)|0;w=n;c[w>>2]=h;c[w+4>>2]=C;w=o;w=lh((x>>>0>4294967295|(x|0)==-1&v>>>0>4294967167)&1|0,0,c[w>>2]|0,c[w+4>>2]|0)|0;v=o;c[v>>2]=w;c[v+4>>2]=C;id(u,m);v=m;w=p;x=v+128|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));g=(c[l>>2]|0)+-128|0;c[l>>2]=g;h=kh(f|0,k|0,j|0,0)|0;if((f|0)==(j|0)&(k|0)==0)break a;else{e=e+j|0;k=C;f=h}}qh(g|0,e|0,f|0)|0;x=lh(c[l>>2]|0,0,f|0,k|0)|0;c[l>>2]=x}}while(0);jd(u,s,64);v=b;w=s;x=v+32|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));g=d+-32|0;j=b+32|0;h=g>>>0>64;v=q;w=s;x=v+64|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));b:do{if(h)while(1){if((kd(s,64,q,64,0,0,0)|0)<0)break b;v=j;w=s;x=v+32|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));g=g+-32|0;j=j+32|0;h=g>>>0>64;v=q;w=s;x=v+64|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));if(!h){r=j;t=g;y=21;break}}else{r=j;t=g;y=21}}while(0);if((y|0)==21?(kd(s,t,q,64,0,0,0)|0)>=0:0)qh(r|0,s|0,t|0)|0;i=z;return}if((d+-1|0)>>>0>63){i=z;return}l=d&255;if((l+-1&255)>63)ra();nh(u+64|0,0,293)|0;v=u;w=400;x=v+48|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));m=u;c[m>>2]=d&255^-222443256;c[m+4>>2]=1779033703;m=u+8|0;c[m>>2]=-2067093701;c[m+4>>2]=-1150833019;m=u+16|0;c[m>>2]=-23791573;c[m+4>>2]=1013904242;m=u+24|0;c[m>>2]=1595750129;c[m+4>>2]=-1521486534;m=u+32|0;c[m>>2]=-1377402159;c[m+4>>2]=1359893119;m=u+40|0;c[m>>2]=725511199;c[m+4>>2]=-1694144372;m=u+48|0;c[m>>2]=-79577749;c[m+4>>2]=528734635;m=u+56|0;c[m>>2]=327033209;c[m+4>>2]=1541459225;m=u+352|0;n=u+96|0;o=u+64|0;p=u+72|0;q=u+224|0;c[u+96>>2]=c[g>>2];g=(c[m>>2]|0)+4|0;c[m>>2]=g;if(f|0){k=0;while(1){j=256-g|0;g=u+96+g|0;if(!(k>>>0>0|(k|0)==0&f>>>0>j>>>0)){y=8;break}qh(g|0,e|0,j|0)|0;c[m>>2]=(c[m>>2]|0)+j;x=o;v=c[x>>2]|0;x=c[x+4>>2]|0;t=lh(v|0,x|0,128,0)|0;w=o;c[w>>2]=t;c[w+4>>2]=C;w=p;w=lh((x>>>0>4294967295|(x|0)==-1&v>>>0>4294967167)&1|0,0,c[w>>2]|0,c[w+4>>2]|0)|0;v=p;c[v>>2]=w;c[v+4>>2]=C;id(u,n);v=n;w=q;x=v+128|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));g=(c[m>>2]|0)+-128|0;c[m>>2]=g;h=kh(f|0,k|0,j|0,0)|0;if((f|0)==(j|0)&(k|0)==0)break;else{e=e+j|0;k=C;f=h}}if((y|0)==8){qh(g|0,e|0,f|0)|0;y=lh(c[m>>2]|0,0,f|0,k|0)|0;c[m>>2]=y}if(d>>>0>=256)za(32557,32577,106,32795)}jd(u,b,l);i=z;return}function he(){return 1}function ie(){return 16}function je(){return 128}function ke(){return 33080}function le(){return 4}function me(){return 33554432}function ne(){return 6}function oe(){return 134217728}function pe(){return 8}function qe(){return 536870912}function re(a,b,d,e,f,g,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;q=i;n=i=i+63&-64;i=i+96|0;o=n+60|0;if((m|0)!=1){p=-1;i=q;return p|0}m=l>>>10;g=g|d|k;if(g>>>0>0|(g|0)==0&(f|b|j)>>>0>4294967295|l>>>0>2147484671){if(!(c[8522]|0))m=34132;else m=c[(oa()|0)+64>>2]|0;c[m>>2]=27;p=-1;i=q;return p|0}if(d>>>0<0|(d|0)==0&b>>>0<16|(k>>>0<0|(k|0)==0&j>>>0<3)|l>>>0<8192){if(!(c[8522]|0))m=34132;else m=c[(oa()|0)+64>>2]|0;c[m>>2]=22;p=-1;i=q;return p|0}d=fh(b)|0;do{if(!d)m=-22;else{c[n>>2]=d;c[n+4>>2]=b;c[n+8>>2]=e;c[n+12>>2]=f;c[n+16>>2]=h;c[n+20>>2]=16;k=n+24|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[n+40>>2]=j;c[n+44>>2]=m;c[n+48>>2]=1;c[n+52>>2]=1;c[n+56>>2]=4;if(b>>>0>=16)if((e|0)!=0|(f|0)==0)if(h)if(l>>>0>=8192)if(l>>>0<=2147484671)if(j>>>0>=3){m=l>>>12;c[o>>2]=0;c[o+4>>2]=j;c[o+8>>2]=m<<2;c[o+12>>2]=m;c[o+16>>2]=m<<2;c[o+20>>2]=1;c[o+24>>2]=1;c[o+28>>2]=1;m=be(o,n)|0;if(!m){m=$d(o)|0;if(!m){_d(n,o);if(a|0)qh(a|0,d|0,b|0)|0;gh(d);m=0;break}}}else{m=-12;p=17}else{m=-15;p=17}else{m=-14;p=17}else{m=-19;p=17}else{m=-18;p=17}else{m=-2;p=17}gh(d)}}while(0);p=((m|0)!=0)<<31>>31;i=q;return p|0}function se(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=i;m=i=i+63&-64;i=i+112|0;t=m+88|0;u=m+60|0;y=m;m=m+72|0;n=e;q=n+128|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(q|0));n=l>>>10;A=k|h;if(A>>>0>0|(A|0)==0&(j|g)>>>0>4294967295|l>>>0>2147484671){if(!(c[8522]|0))h=34132;else h=c[(oa()|0)+64>>2]|0;c[h>>2]=27;e=-1;i=B;return e|0}if(k>>>0<0|(k|0)==0&j>>>0<3|l>>>0<8192){if(!(c[8522]|0))h=34132;else h=c[(oa()|0)+64>>2]|0;c[h>>2]=22;e=-1;i=B;return e|0}else h=0;do{a[m+h>>0]=ma(0)|0;h=h+1|0}while((h|0)!=16);A=fh(32)|0;a:do{if(!A)h=-1;else{c[y>>2]=A;x=y+4|0;c[x>>2]=32;o=y+8|0;c[o>>2]=f;l=y+12|0;c[l>>2]=g;w=y+16|0;c[w>>2]=m;v=y+20|0;c[v>>2]=16;k=y+24|0;p=y+40|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[p>>2]=j;f=y+44|0;c[f>>2]=n;g=y+48|0;c[g>>2]=1;m=y+52|0;c[m>>2]=1;c[y+56>>2]=4;if(fe(y)|0){gh(A);h=-1;break}b:do{if(e|0){n=e;h=33068;q=n+12|0;do{a[n>>0]=a[h>>0]|0;n=n+1|0;h=h+1|0}while((n|0)<(q|0));j=e+11|0;do{if(!((c[y>>2]|0)==0|(c[x>>2]|0)>>>0<16)?(c[o>>2]|0)!=0|(c[l>>2]|0)==0:0){l=c[v>>2]|0;if(!(c[w>>2]|0)){if(l|0)break}else if(l>>>0<8)break;if((c[k>>2]|0)==0?c[y+28>>2]|0:0)break;q=c[y+32>>2]|0;if((q|0)==0?c[y+36>>2]|0:0)break;n=c[f>>2]|0;if((((n+-8|0)>>>0<=2097144?(s=c[g>>2]|0,n>>>0>=s<<3>>>0):0)?(r=c[p>>2]|0,!((s+-1|0)>>>0>16777214|r>>>0<3)):0)?((c[m>>2]|0)+-1|0)>>>0<=16777214:0){a[t+9>>0]=57;h=t+8|0;a[h>>0]=49;h=d[h>>0]|d[h+1>>0]<<8;b[u>>1]=h;a[u+2>>0]=0;g=u;c:do{if(!(g&2)){h=u;z=32}else{f=u;k=g;h=h&255;while(1){if(!(h<<24>>24)){h=k;break c}h=f+1|0;k=h;if(!(k&3)){z=32;break c}f=h;h=a[h>>0]|0}}}while(0);if((z|0)==32){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do{h=h+1|0}while((a[h>>0]|0)!=0)}h=h-g|0;if(h>>>0>=117)break;qh(j|0,u|0,h+1|0)|0;f=j+h|0;g=117-h|0;if(g>>>0>=4){a[f>>0]=36;a[f+1>>0]=109;a[f+2>>0]=61;a[f+3>>0]=0;h=n;n=10;while(1){k=n+-1|0;m=t+k|0;a[m>>0]=(h>>>0)%10|0|48;if(h>>>0>9&(k|0)!=0){h=(h>>>0)/10|0;n=k}else break}j=f+3|0;g=g+-3|0;f=11-n|0;qh(u|0,m|0,f|0)|0;a[u+f>>0]=0;f=u;d:do{if(!(f&3)){h=u;z=45}else{h=u;k=f;while(1){if(!(a[h>>0]|0)){h=k;break d}h=h+1|0;k=h;if(!(k&3)){z=45;break}}}}while(0);if((z|0)==45){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do{h=h+1|0}while((a[h>>0]|0)!=0)}h=h-f|0;if(g>>>0<=h>>>0)break;qh(j|0,u|0,h+1|0)|0;n=j+h|0;f=g-h|0;if(f>>>0<4)break;a[n>>0]=44;a[n+1>>0]=116;a[n+2>>0]=61;a[n+3>>0]=0;h=r;m=10;while(1){k=m+-1|0;g=t+k|0;a[g>>0]=(h>>>0)%10|0|48;if(h>>>0>9&(k|0)!=0){h=(h>>>0)/10|0;m=k}else break}n=n+3|0;j=f+-3|0;f=11-m|0;qh(u|0,g|0,f|0)|0;a[u+f>>0]=0;f=u;e:do{if(!(f&3)){h=u;z=58}else{h=u;k=f;while(1){if(!(a[h>>0]|0)){h=k;break e}h=h+1|0;k=h;if(!(k&3)){z=58;break}}}}while(0);if((z|0)==58){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do{h=h+1|0}while((a[h>>0]|0)!=0)}h=h-f|0;if(j>>>0<=h>>>0)break;qh(n|0,u|0,h+1|0)|0;n=n+h|0;f=j-h|0;if(f>>>0<4)break;a[n>>0]=44;a[n+1>>0]=112;a[n+2>>0]=61;a[n+3>>0]=0;h=s;m=10;while(1){k=m+-1|0;g=t+k|0;a[g>>0]=(h>>>0)%10|0|48;if(h>>>0>9&(k|0)!=0){h=(h>>>0)/10|0;m=k}else break}n=n+3|0;j=f+-3|0;f=11-m|0;qh(u|0,g|0,f|0)|0;a[u+f>>0]=0;f=u;f:do{if(!(f&3)){h=u;z=71}else{h=u;k=f;while(1){if(!(a[h>>0]|0)){h=k;break f}h=h+1|0;k=h;if(!(k&3)){z=71;break}}}}while(0);if((z|0)==71){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do{h=h+1|0}while((a[h>>0]|0)!=0)}h=h-f|0;if(j>>>0<=h>>>0)break;qh(n|0,u|0,h+1|0)|0;k=n+h|0;h=j-h|0;f=c[y+36>>2]|0;if(f){if(h>>>0<7)break;a[k>>0]=a[33061]|0;a[k+1>>0]=a[33062]|0;a[k+2>>0]=a[33063]|0;a[k+3>>0]=a[33064]|0;a[k+4>>0]=a[33065]|0;a[k+5>>0]=a[33066]|0;a[k+6>>0]=a[33067]|0;j=k+6|0;o=h+-6|0;h=((f>>>0)/3|0)<<2;switch((f>>>0)%3|0|0){case 2:{h=h|1;z=82;break}case 1:{z=82;break}default:n=h}if((z|0)==82)n=h+2|0;if(o>>>0>n>>>0){h=j;m=0;k=0;g=q}else break;do{f=f+-1|0;u=g;g=g+1|0;m=d[u>>0]|m<<8;k=k+8|0;if(k>>>0>5)while(1){k=k+-6|0;t=m>>>k&63;s=(t+65510|0)>>>8;u=(t+65484|0)>>>8;l=h+1|0;a[h>>0]=(0-(t^62)|0)>>>8&43^43|s&t+65|(0-(t^63)|0)>>>8&47^47|u&t+71&(s^255)|(t+65474|0)>>>8&t+252&(u^255);if(k>>>0>5)h=l;else{h=l;break}}}while((f|0)!=0);if(k){t=m<<6-k&63;s=(t+65510|0)>>>8;u=(t+65484|0)>>>8;a[h>>0]=(0-(t^62)|0)>>>8&43^43|s&t+65|(0-(t^63)|0)>>>8&47^47|u&t+71&(s^255)|(t+65474|0)>>>8&t+252&(u^255);h=h+1|0}a[h>>0]=0;h=(n|0)==-1;if(h)break;k=j+n|0;h=o-(h?0:n)|0;l=c[v>>2]|0}if(!l)break b;if(h>>>0<2)break;a[k>>0]=36;a[k+1>>0]=0;o=k+1|0;j=h+-1|0;f=c[w>>2]|0;h=((l>>>0)/3|0)<<2;switch((l>>>0)%3|0|0){case 2:{h=h|1;z=95;break}case 1:{z=95;break}default:n=h}if((z|0)==95)n=h+2|0;if(j>>>0>n>>>0){h=o;g=l;m=0;k=0}else break;do{g=g+-1|0;w=f;f=f+1|0;m=d[w>>0]|m<<8;k=k+8|0;if(k>>>0>5)while(1){k=k+-6|0;v=m>>>k&63;u=(v+65510|0)>>>8;w=(v+65484|0)>>>8;l=h+1|0;a[h>>0]=(0-(v^62)|0)>>>8&43^43|u&v+65|(0-(v^63)|0)>>>8&47^47|w&v+71&(u^255)|(v+65474|0)>>>8&v+252&(w^255);if(k>>>0>5)h=l;else{h=l;break}}}while((g|0)!=0);if(k){v=m<<6-k&63;u=(v+65510|0)>>>8;w=(v+65484|0)>>>8;a[h>>0]=(0-(v^62)|0)>>>8&43^43|u&v+65|(0-(v^63)|0)>>>8&47^47|w&v+71&(u^255)|(v+65474|0)>>>8&v+252&(w^255);h=h+1|0}a[h>>0]=0;w=(n|0)==-1;k=j-(w?0:n)|0;h=w?o:o+n|0;if(w)break;if(!(c[x>>2]|0))break b;if(k>>>0<2)break;a[h>>0]=36;a[h+1>>0]=0;h=h+1|0;f=k+-1|0;g=c[y>>2]|0;l=c[x>>2]|0;k=((l>>>0)/3|0)<<2;switch((l>>>0)%3|0|0){case 2:{k=k|1;z=107;break}case 1:{z=107;break}default:{}}if((z|0)==107)k=k+2|0;if(k>>>0>=f>>>0)break;do{if(l){m=l;n=0;l=0;do{m=m+-1|0;z=g;g=g+1|0;n=d[z>>0]|n<<8;l=l+8|0;if(l>>>0>5)while(1){l=l+-6|0;y=n>>>l&63;x=(y+65510|0)>>>8;z=(y+65484|0)>>>8;f=h+1|0;a[h>>0]=(0-(y^62)|0)>>>8&43^43|x&y+65|(0-(y^63)|0)>>>8&47^47|z&y+71&(x^255)|(y+65474|0)>>>8&y+252&(z^255);if(l>>>0>5)h=f;else{h=f;break}}}while((m|0)!=0);if(!l)break;y=n<<6-l&63;x=(y+65510|0)>>>8;z=(y+65484|0)>>>8;a[h>>0]=(0-(y^62)|0)>>>8&43^43|x&y+65|(0-(y^63)|0)>>>8&47^47|z&y+71&(x^255)|(y+65474|0)>>>8&y+252&(z^255);h=h+1|0}}while(0);a[h>>0]=0;if((k|0)!=-1)break b}}}}while(0);n=A;q=n+32|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(q|0));n=e;q=n+128|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(q|0));gh(A);h=-1;break a}}while(0);gh(A);h=0}}while(0);e=h;i=B;return e|0}function te(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;x=i;v=i=i+63&-64;i=i+64|0;if(f>>>0>0|(f|0)==0&e>>>0>4294967295){if(!(c[8522]|0))f=34132;else f=c[(oa()|0)+64>>2]|0;c[f>>2]=27;w=-1;i=x;return w|0}h=b;a:do{if(!(h&3)){f=b;w=8}else{f=b;g=h;while(1){if(!(a[f>>0]|0)){f=g;break a}f=f+1|0;g=f;if(!(g&3)){w=8;break}}}}while(0);if((w|0)==8){while(1){g=c[f>>2]|0;if(!((g&-2139062144^-2139062144)&g+-16843009))f=f+4|0;else break}if((g&255)<<24>>24)do{f=f+1|0}while((a[f>>0]|0)!=0)}p=f-h|0;r=fh(p)|0;s=fh(p)|0;q=s;t=fh(p)|0;b:do{if((t|0)==0|(s|0)==0|(r|0)==0){gh(r);gh(s);gh(t);f=-22}else{u=fh(p)|0;if(!u){gh(r);gh(s);gh(t);f=-22;break}f=a[b>>0]|0;c:do{if(!(f<<24>>24)){f=0;g=33036}else{j=8;h=b;g=33036;while(1){j=j+-1|0;o=a[g>>0]|0;if(!(f<<24>>24==o<<24>>24&((j|0)!=0&o<<24>>24!=0)))break c;h=h+1|0;g=g+1|0;f=a[h>>0]|0;if(!(f<<24>>24)){f=0;break}}}}while(0);o=f<<24>>24==(a[g>>0]|0);b=o?b+8|0:b;d:do{if(o){f=a[b>>0]|0;e:do{if(!(f<<24>>24)){f=0;g=33045}else{j=3;h=b;g=33045;while(1){j=j+-1|0;o=a[g>>0]|0;if(!(f<<24>>24==o<<24>>24&((j|0)!=0&o<<24>>24!=0)))break e;h=h+1|0;g=g+1|0;f=a[h>>0]|0;if(!(f<<24>>24)){f=0;break}}}}while(0);o=f<<24>>24==(a[g>>0]|0);f=b+3|0;j=o?f:b;if(o?(l=a[j>>0]|0,(l+-48&255)<=9):0){h=l;g=0;while(1){h=(h<<24>>24)+-48|0;if(g>>>0>429496729){f=-32;break d}g=g*10|0;if(h>>>0>~g>>>0){f=-32;break d}g=h+g|0;k=f+1|0;h=a[k>>0]|0;if((h+-48&255)>9)break;else f=k}if((k|0)!=(j|0)?!((f|0)!=(j|0)&l<<24>>24==48|(k|0)==0):0)if((g|0)==19){f:do{if(!(h<<24>>24)){h=0;g=33049}else{b=3;j=k;g=33049;while(1){b=b+-1|0;o=a[g>>0]|0;if(!(h<<24>>24==o<<24>>24&((b|0)!=0&o<<24>>24!=0)))break f;j=j+1|0;g=g+1|0;h=a[j>>0]|0;if(!(h<<24>>24)){h=0;break}}}}while(0);o=h<<24>>24==(a[g>>0]|0);f=f+4|0;j=o?f:k;if(o?(m=a[j>>0]|0,(m+-48&255)<=9):0){g=m;o=0;while(1){h=(g<<24>>24)+-48|0;if(o>>>0>429496729){f=-32;break d}g=o*10|0;if(h>>>0>~g>>>0){f=-32;break d}o=h+g|0;k=f+1|0;g=a[k>>0]|0;if((g+-48&255)>9)break;else f=k}if((k|0)!=(j|0)?!(m<<24>>24==48&(f|0)!=(j|0)|(k|0)==0):0){g:do{if(!(g<<24>>24)){h=0;g=33053}else{b=3;h=g;j=k;g=33053;while(1){b=b+-1|0;n=a[g>>0]|0;if(!(h<<24>>24==n<<24>>24&((b|0)!=0&n<<24>>24!=0)))break g;j=j+1|0;g=g+1|0;h=a[j>>0]|0;if(!(h<<24>>24)){h=0;break}}}}while(0);n=h<<24>>24==(a[g>>0]|0);f=f+4|0;j=n?f:k;if(!n){f=-32;break}b=a[j>>0]|0;if((b+-48&255)>9){f=-32;break}else{g=b;n=0}while(1){h=(g<<24>>24)+-48|0;if(n>>>0>429496729){f=-32;break d}g=n*10|0;if(h>>>0>~g>>>0){f=-32;break d}n=h+g|0;k=f+1|0;g=a[k>>0]|0;if((g+-48&255)>9)break;else f=k}if((k|0)==(j|0)){f=-32;break}if(b<<24>>24==48&(f|0)!=(j|0)|(k|0)==0){f=-32;break}h:do{if(!(g<<24>>24)){h=0;g=33057}else{b=3;h=g;j=k;g=33057;while(1){b=b+-1|0;m=a[g>>0]|0;if(!(h<<24>>24==m<<24>>24&((b|0)!=0&m<<24>>24!=0)))break h;j=j+1|0;g=g+1|0;h=a[j>>0]|0;if(!(h<<24>>24)){h=0;break}}}}while(0);m=h<<24>>24==(a[g>>0]|0);f=f+4|0;h=m?f:k;if(!m){f=-32;break}j=a[h>>0]|0;if((j+-48&255)>9){f=-32;break}else{l=f;f=j;m=0}while(1){g=(f<<24>>24)+-48|0;if(m>>>0>429496729){f=-32;break d}f=m*10|0;if(g>>>0>~f>>>0){f=-32;break d}m=g+f|0;g=l+1|0;f=a[g>>0]|0;if((f+-48&255)>9)break;else l=g}if((g|0)==(h|0)){f=-32;break}if(j<<24>>24==48&(l|0)!=(h|0)|(g|0)==0){f=-32;break}i:do{if(!(f<<24>>24)){j=0;h=33061}else{b=6;j=f;k=g;h=33061;while(1){b=b+-1|0;y=a[h>>0]|0;if(!(j<<24>>24==y<<24>>24&((b|0)!=0&y<<24>>24!=0)))break i;k=k+1|0;h=h+1|0;j=a[k>>0]|0;if(!(j<<24>>24)){j=0;break}}}}while(0);if(j<<24>>24==(a[h>>0]|0)){c[v>>2]=p;f=ce(r,v,l+7|0)|0;if(!f){f=-32;break}g=f;f=a[f>>0]|0}j:do{switch(f<<24>>24){case 0:{h=0;j=0;break}case 36:{c[v>>2]=p;f=ce(s,v,g+1|0)|0;if(!f){f=-32;break d}h=c[v>>2]|0;switch(a[f>>0]|0){case 0:{j=0;break j}case 36:break;default:{f=-32;break d}}c[v>>2]=p;f=ce(t,v,f+1|0)|0;if(!f){f=-32;break d}g=c[v>>2]|0;if(g>>>0<16){f=-2;break d}if(!s){if(h|0){f=-19;break d}}else if(h>>>0<8){f=-6;break d}if(o>>>0<8){f=-14;break d}if(o>>>0>2097152){f=-15;break d}if(o>>>0<m<<3>>>0){f=-14;break d}if(n>>>0<3){f=-12;break d}if(!m){f=-16;break d}if(m>>>0>16777215){f=-17;break d}if(!(a[f>>0]|0))j=g;else{f=-32;break d}break}default:{f=-32;break d}}}while(0);f=fh(j)|0;do{if(f){c[v>>2]=f;c[v+4>>2]=j;c[v+8>>2]=d;c[v+12>>2]=e;c[v+16>>2]=q;c[v+20>>2]=h;y=v+24|0;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[v+40>>2]=n;c[v+44>>2]=o;c[v+48>>2]=m;c[v+52>>2]=m;c[v+56>>2]=4;if(fe(v)|0){gh(f);gh(r);gh(s);w=93;break}qh(u|0,f|0,j|0)|0;gh(f);gh(r);gh(s);if(!j)f=0;else{f=0;g=0;do{f=a[t+g>>0]^a[u+g>>0]|f;g=g+1|0}while((g|0)!=(j|0))}if(!((f&255)+511&256))w=93;else f=0}else{gh(r);gh(s);w=93}}while(0);if((w|0)==93)f=-35;gh(u);gh(t);break b}else f=-32}else f=-32}else f=-26;else f=-32}else f=-32}else f=-32}while(0);gh(r);gh(s);gh(t);gh(u)}}while(0);y=((f|0)!=0)<<31>>31;i=x;return y|0}function ue(){return 1}function ve(){return 1}function we(){return 16}function xe(){return 128}function ye(){return 33080}function ze(){return 4}function Ae(){return 33554432}function Be(){return 6}function Ce(){return 134217728}function De(){return 8}function Ee(){return 536870912}function Fe(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if((l|0)==1){h=re(a,b,d,e,f,g,h,i,j,k,1)|0;return h|0}if(!(c[8522]|0))b=34132;else b=c[(oa()|0)+64>>2]|0;c[b>>2]=22;h=-1;return h|0}function Ge(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return se(a,b,c,d,e,f,g)|0}function He(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return te(a,b,c,d)|0}function Ie(){return 33090}function Je(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;t=i=i+63&-64;i=i+48|0;j=t+8|0;u=t+4|0;if((a[g>>0]|0)!=36){h=0;i=w;return h|0}if((a[g+1>>0]|0)!=55){h=0;i=w;return h|0}if((a[g+2>>0]|0)!=36){h=0;i=w;return h|0}o=a[g+3>>0]|0;n=o&255;a:do{if(2){l=65;k=33098;do{if((a[k>>0]|0)==o<<24>>24)break a;k=k+1|0;l=l+-1|0;m=(l|0)!=0}while(m&(k&3|0)!=0);if(!m){h=0;i=w;return h|0}}else{l=65;k=33098}}while(0);b:do{if((a[k>>0]|0)!=o<<24>>24){m=_(n,16843009)|0;c:do{if(l>>>0>3)while(1){s=c[k>>2]^m;if((s&-2139062144^-2139062144)&s+-16843009|0)break c;k=k+4|0;l=l+-4|0;if(l>>>0<=3){v=12;break}}else v=12}while(0);if((v|0)==12)if(!l){h=0;i=w;return h|0}while(1){if((a[k>>0]|0)==o<<24>>24)break b;l=l+-1|0;if(!l){j=0;break}else k=k+1|0}i=w;return j|0}}while(0);if((k|0)==0|(l|0)==0){h=0;i=w;return h|0}r=ph(1,0,k-33098|0)|0;s=C;k=Ke(u,g+4|0)|0;if(!k){h=0;i=w;return h|0}q=Ke(t,k)|0;if(!q){h=0;i=w;return h|0}o=q;p=o-g|0;n=(o&3|0)==0;d:do{if(n){k=q;v=22}else{l=q;k=o;while(1){if(!(a[l>>0]|0))break d;l=l+1|0;k=l;if(!(k&3)){k=l;v=22;break}}}}while(0);if((v|0)==22){while(1){l=c[k>>2]|0;if(!((l&-2139062144^-2139062144)&l+-16843009))k=k+4|0;else break}if((l&255)<<24>>24)do{k=k+1|0}while((a[k>>0]|0)!=0)}l=k-o+1|0;while(1){k=l+-1|0;if(!l){v=32;break}m=q+k|0;if((a[m>>0]|0)==36){v=30;break}else l=k}if((v|0)==30)if(!m)v=32;else l=l+-1|0;if((v|0)==32){e:do{if(n){k=q;v=35}else{k=q;l=o;while(1){if(!(a[k>>0]|0)){k=l;break e}k=k+1|0;l=k;if(!(l&3)){v=35;break}}}}while(0);if((v|0)==35){while(1){l=c[k>>2]|0;if(!((l&-2139062144^-2139062144)&l+-16843009))k=k+4|0;else break}if((l&255)<<24>>24)do{k=k+1|0}while((a[k>>0]|0)!=0)}l=k-o|0}k=l+p|0;p=k+45|0;if(p>>>0>102|p>>>0<l>>>0){h=0;i=w;return h|0}if(Xe(b,e,f,q,l,r,s,c[u>>2]|0,c[t>>2]|0,j,32)|0){h=0;i=w;return h|0}qh(h|0,g|0,k|0)|0;r=h+k|0;p=r+1|0;a[r>>0]=36;r=p;p=h+102-p|0;k=0;f:while(1){if(k>>>0<32){q=0;l=0}else break;do{g=k;k=k+1|0;l=d[j+g>>0]<<q|l;q=q+8|0}while(k>>>0<32&q>>>0<24);m=p;n=r;o=0;while(1){if(!m){v=49;break f}g=n;n=n+1|0;a[g>>0]=a[33098+(l&63)>>0]|0;o=o+6|0;if(o>>>0>=q>>>0)break;else{l=l>>>6;m=m+-1|0}}g=(n|0)==0;p=(g?0:r-n|0)+p|0;if(g){v=49;break}else r=n}if((v|0)==49){k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));h=0;i=w;return h|0}k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));if(!((r|0)!=0&r>>>0<(h+102|0)>>>0)){h=0;i=w;return h|0}a[r>>0]=0;i=w;return h|0}function Ke(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;i=a[d>>0]|0;h=i&255;a:do{if(2){e=65;f=33098;do{if((a[f>>0]|0)==i<<24>>24)break a;f=f+1|0;e=e+-1|0;g=(e|0)!=0}while(g&(f&3|0)!=0);if(!g){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;f=33098}}while(0);b:do{if((a[f>>0]|0)!=i<<24>>24){g=_(h,16843009)|0;c:do{if(e>>>0>3)while(1){m=c[f>>2]^g;if((m&-2139062144^-2139062144)&m+-16843009|0)break c;f=f+4|0;e=e+-4|0;if(e>>>0<=3){n=9;break}}else n=9}while(0);if((n|0)==9)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[f>>0]|0)==i<<24>>24)break b;e=e+-1|0;if(!e){e=0;f=0;break}else f=f+1|0}c[b>>2]=f;return e|0}}while(0);if((f|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}j=a[d+1>>0]|0;i=j&255;d:do{if(2){e=65;g=33098;do{if((a[g>>0]|0)==j<<24>>24)break d;g=g+1|0;e=e+-1|0;h=(e|0)!=0}while(h&(g&3|0)!=0);if(!h){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;g=33098}}while(0);e:do{if((a[g>>0]|0)!=j<<24>>24){h=_(i,16843009)|0;f:do{if(e>>>0>3)while(1){m=c[g>>2]^h;if((m&-2139062144^-2139062144)&m+-16843009|0)break f;g=g+4|0;e=e+-4|0;if(e>>>0<=3){n=22;break}}else n=22}while(0);if((n|0)==22)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[g>>0]|0)==j<<24>>24)break e;e=e+-1|0;if(!e){e=0;f=0;break}else g=g+1|0}c[b>>2]=f;return e|0}}while(0);if((g|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}k=a[d+2>>0]|0;j=k&255;g:do{if(2){e=65;h=33098;do{if((a[h>>0]|0)==k<<24>>24)break g;h=h+1|0;e=e+-1|0;i=(e|0)!=0}while(i&(h&3|0)!=0);if(!i){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;h=33098}}while(0);h:do{if((a[h>>0]|0)!=k<<24>>24){i=_(j,16843009)|0;i:do{if(e>>>0>3)while(1){m=c[h>>2]^i;if((m&-2139062144^-2139062144)&m+-16843009|0)break i;h=h+4|0;e=e+-4|0;if(e>>>0<=3){n=36;break}}else n=36}while(0);if((n|0)==36)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[h>>0]|0)==k<<24>>24)break h;e=e+-1|0;if(!e){e=0;f=0;break}else h=h+1|0}c[b>>2]=f;return e|0}}while(0);if((h|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+3>>0]|0;k=l&255;j:do{if(2){e=65;i=33098;do{if((a[i>>0]|0)==l<<24>>24)break j;i=i+1|0;e=e+-1|0;j=(e|0)!=0}while(j&(i&3|0)!=0);if(!j){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;i=33098}}while(0);k:do{if((a[i>>0]|0)==l<<24>>24)m=i;else{j=_(k,16843009)|0;l:do{if(e>>>0>3)while(1){m=c[i>>2]^j;if((m&-2139062144^-2139062144)&m+-16843009|0)break l;i=i+4|0;e=e+-4|0;if(e>>>0<=3){n=49;break}}else n=49}while(0);if((n|0)==49)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[i>>0]|0)==l<<24>>24){m=i;break k}e=e+-1|0;if(!e){e=0;f=0;break}else i=i+1|0}c[b>>2]=f;return e|0}}while(0);if((m|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+4>>0]|0;k=l&255;m:do{if(2){i=65;e=33098;do{if((a[e>>0]|0)==l<<24>>24)break m;e=e+1|0;i=i+-1|0;j=(i|0)!=0}while(j&(e&3|0)!=0);if(!j){d=0;n=0;c[b>>2]=n;return d|0}}else{i=65;e=33098}}while(0);n:do{if((a[e>>0]|0)!=l<<24>>24){j=_(k,16843009)|0;o:do{if(i>>>0>3)while(1){k=c[e>>2]^j;if((k&-2139062144^-2139062144)&k+-16843009|0)break o;e=e+4|0;i=i+-4|0;if(i>>>0<=3){n=62;break}}else n=62}while(0);if((n|0)==62)if(!i){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[e>>0]|0)==l<<24>>24)break n;i=i+-1|0;if(!i){e=0;f=0;break}else e=e+1|0}c[b>>2]=f;return e|0}}while(0);if((e|0)==0|(i|0)==0){d=0;n=0;c[b>>2]=n;return d|0}d=d+5|0;n=e-33098<<24|(m-33098<<18|(h-33098<<12|(g-33098<<6|f-33098)));c[b>>2]=n;return d|0}function Le(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;m=i;n=i=i+63&-64;i=i+16|0;c[n+4>>2]=0;c[n>>2]=0;c[n+8>>2]=0;f=Xe(n,a,b,d,e,f,g,h,j,k,l)|0;g=c[n>>2]|0;if(!g){i=m;return f|0}gh(g);i=m;return f|0}function Me(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;q=i=i+63&-64;i=i+464|0;p=q+208|0;r=q;s=q+416|0;q=q+424|0;jb(p,b,d)|0;do{if(f|0){d=p+32|0;n=d;m=c[n>>2]|0;n=c[n+4>>2]|0;b=oh(m|0,n|0,3)|0;b=b&63;o=ph(f|0,0,3)|0;o=lh(m|0,n|0,o|0,C|0)|0;c[d>>2]=o;c[d+4>>2]=C;d=64-b|0;b=p+40+b|0;if(d>>>0>f>>>0){qh(b|0,e|0,f|0)|0;break}qh(b|0,e|0,d|0)|0;j=p+40|0;xd(p,j);b=e+d|0;e=kh(f|0,0,d|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&e>>>0>63){do{xd(p,b);b=b+64|0;e=lh(e|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&e>>>0>63);d=e}else d=e;qh(j|0,b|0,d|0)|0}}while(0);if(!h){i=t;return}f=s+3|0;j=s+2|0;k=s+1|0;l=r+32|0;m=r+40|0;n=0;o=0;do{o=o+1|0;a[f>>0]=o;a[j>>0]=o>>>8;a[k>>0]=o>>>16;a[s>>0]=o>>>24;qh(r|0,p|0,208)|0;e=l;d=c[e>>2]|0;e=c[e+4>>2]|0;b=oh(d|0,e|0,3)|0;b=b&63;e=lh(d|0,e|0,32,0)|0;d=l;c[d>>2]=e;c[d+4>>2]=C;d=64-b|0;b=r+40+b|0;if(d>>>0>4){e=c[s>>2]|0;a[b>>0]=e;a[b+1>>0]=e>>8;a[b+2>>0]=e>>16;a[b+3>>0]=e>>24}else{qh(b|0,s|0,d|0)|0;xd(r,m);b=s+d|0;e=kh(4,0,d|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&e>>>0>63){do{xd(r,b);b=b+64|0;e=lh(e|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&e>>>0>63);d=e}else d=e;qh(m|0,b|0,d|0)|0}lb(r,q)|0;e=h-n|0;qh(g+n|0,q|0,(e>>>0>32?32:e)|0)|0;n=o<<5}while(n>>>0<h>>>0);i=t;return}function Ne(){return 32}function Oe(){return 102}function Pe(){return 33163}function Qe(){return 524288}function Re(){return 16777216}function Se(){return 33554432}function Te(){return 1073741824}function Ue(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=i;n=i=i+63&-64;i=i+16|0;nh(a|0,0,b|0)|0;m=g|d;if(m>>>0>0|(m|0)==0&(f|b)>>>0>4294967295){if(!(c[8522]|0))d=34132;else d=c[(oa()|0)+64>>2]|0;c[d>>2]=27;n=-1;i=o;return n|0}g=k>>>0<0|(k|0)==0&j>>>0<32768;m=g?32768:j;k=g?0:k;a:do{if(k>>>0<0|(k|0)==0&m>>>0<l>>>5>>>0){g=oh(m|0,k|0,6)|0;j=C;k=1;while(1){m=ph(1,0,k|0)|0;l=C;d=k+1|0;if(l>>>0>j>>>0|(l|0)==(j|0)&m>>>0>g>>>0){d=k;g=1;break a}if(d>>>0<63)k=d;else{g=1;break}}}else{j=l>>>11;g=1;while(1){l=ph(1,0,g|0)|0;p=C;d=g+1|0;if(p>>>0>0|(p|0)==0&l>>>0>j>>>0){d=g;break}if(d>>>0<63)g=d;else break}g=oh(m|0,k|0,2)|0;g=oh(g|0,C|0,d|0)|0;p=C;m=p>>>0>0|(p|0)==0&g>>>0>1073741823;g=m?1073741823:g;g=g>>>3}}while(0);d=ph(1,0,d|0)|0;c[n+4>>2]=0;c[n>>2]=0;c[n+8>>2]=0;g=Xe(n,e,f,h,32,d,C,8,g,a,b)|0;d=c[n>>2]|0;if(d|0)gh(d);p=g;i=o;return p|0}function Ve(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;v=i=i+63&-64;i=i+112|0;t=v+72|0;u=v+12|0;l=b;m=l+102|0;do{a[l>>0]=0;l=l+1|0}while((l|0)<(m|0));if(g>>>0>0|(g|0)==0&f>>>0>4294967295){if(!(c[8522]|0))g=34132;else g=c[(oa()|0)+64>>2]|0;c[g>>2]=27;v=-1;i=w;return v|0}m=j>>>0<0|(j|0)==0&h>>>0<32768;n=m?32768:h;m=m?0:j;a:do{if(m>>>0<0|(m|0)==0&n>>>0<k>>>5>>>0){h=oh(n|0,m|0,6)|0;l=C;m=1;while(1){k=ph(1,0,m|0)|0;n=C;g=m+1|0;if(n>>>0>l>>>0|(n|0)==(l|0)&k>>>0>h>>>0){g=m;l=1;break a}if(g>>>0<63)m=g;else{l=1;break}}}else{l=k>>>11;h=1;while(1){k=ph(1,0,h|0)|0;j=C;g=h+1|0;if(j>>>0>0|(j|0)==0&k>>>0>l>>>0){g=h;break}if(g>>>0<63)h=g;else break}l=oh(n|0,m|0,2)|0;l=oh(l|0,C|0,g|0)|0;k=C;n=k>>>0>0|(k|0)==0&l>>>0>1073741823;l=n?1073741823:l;l=l>>>3}}while(0);h=0;do{a[t+h>>0]=ma(0)|0;h=h+1|0}while((h|0)!=32);b:do{if((((((((g>>>0<=63?(k=ph(l|0,0,3)|0,n=C,!(n>>>0>0|(n|0)==0&k>>>0>1073741823)):0)?(a[u>>0]=36,a[u+1>>0]=55,a[u+2>>0]=36,a[u+3>>0]=a[33098+g>>0]|0,a[u+4>>0]=54,k=u+5|0,o=u+9|0,a[k>>0]=46,a[k+1>>0]=46,a[k+2>>0]=46,a[k+3>>0]=46,o|0):0)?(p=o,r=u+58|0,(r|0)!=(p|0)):0)?(q=r-p|0,a[o>>0]=a[33098+(l&63)>>0]|0,(q|0)!=1):0)?(a[u+10>>0]=a[33098+(l>>>6&63)>>0]|0,(q|0)!=2):0)?(a[u+11>>0]=a[33098+(l>>>12&63)>>0]|0,(q|0)!=3):0)?(a[u+12>>0]=a[33098+(l>>>18&63)>>0]|0,(q|0)!=4):0)?(s=u+14|0,a[u+13>>0]=a[33098+(l>>>24)>>0]|0,s|0):0){o=s;n=r-s|0;g=0;while(1){if(g>>>0<32){k=0;h=0}else break;do{s=g;g=g+1|0;h=(d[t+s>>0]|0)<<k|h;k=k+8|0}while(g>>>0<32&k>>>0<24);l=n;m=o;j=0;while(1){if(!l)break b;s=m;m=m+1|0;a[s>>0]=a[33098+(h&63)>>0]|0;j=j+6|0;if(j>>>0>=k>>>0)break;else{h=h>>>6;l=l+-1|0}}s=(m|0)==0;n=(s?0:o-m|0)+n|0;if(s)break b;else o=m}if(o>>>0<(u+58|0)>>>0){a[o>>0]=0;l=v+4|0;c[l>>2]=0;c[v>>2]=0;m=v+8|0;c[m>>2]=0;g=(Je(v,e,f,u,b)|0)==0;h=c[v>>2]|0;if(h|0)gh(h);c[l>>2]=0;c[v>>2]=0;c[m>>2]=0;if(!g){v=0;i=w;return v|0}if(!(c[8522]|0))g=34132;else g=c[(oa()|0)+64>>2]|0;c[g>>2]=22;v=-1;i=w;return v|0}}}while(0);if(!(c[8522]|0))g=34132;else g=c[(oa()|0)+64>>2]|0;c[g>>2]=22;v=-1;i=w;return v|0}function We(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;l=i=i+63&-64;i=i+128|0;m=l+12|0;a:do{if(b&3){f=102;g=b;do{if(!(a[g>>0]|0)){j=5;break a}g=g+1|0;f=f+-1|0;h=(f|0)!=0}while(h&(g&3|0)!=0);if(h)j=5;else f=0}else{f=102;g=b;j=5}}while(0);b:do{if((j|0)==5)if(a[g>>0]|0){c:do{if(f>>>0>3)while(1){k=c[g>>2]|0;if((k&-2139062144^-2139062144)&k+-16843009|0)break;g=g+4|0;f=f+-4|0;if(f>>>0<=3){j=10;break c}}else j=10}while(0);if((j|0)==10)if(!f){f=0;break}while(1){if(!(a[g>>0]|0))break b;g=g+1|0;f=f+-1|0;if(!f){f=0;break}}}}while(0);if(((f|0?g:0)|0)!=(b+101|0)){m=-1;i=n;return m|0}j=l+4|0;c[j>>2]=0;c[l>>2]=0;k=l+8|0;c[k>>2]=0;g=m;h=g+102|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(h|0));f=(Je(l,d,e,b,m)|0)==0;g=c[l>>2]|0;if(g|0)gh(g);c[j>>2]=0;c[l>>2]=0;c[k>>2]=0;if(f){m=-1;i=n;return m|0}else{f=0;g=0}do{f=a[b+g>>0]^a[m+g>>0]|f;g=g+1|0}while((g|0)!=102);f=(((f&255)+511|0)>>>8&1)+-1|0;g=m;h=g+102|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(h|0));m=f;i=n;return m|0}function Xe(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;I=i;u=i=i+63&-64;i=i+16|0;H=wh(m|0,0,l|0,0)|0;G=C;if(G>>>0>0|(G|0)==0&H>>>0>1073741823){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=27;f=-1;i=I;return f|0}if(k>>>0>0|(k|0)==0&j>>>0>4294967295){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=27;f=-1;i=I;return f|0}F=lh(j|0,k|0,-1,-1)|0;if(k>>>0<0|(k|0)==0&j>>>0<2|((F&j|0)!=0|(C&k|0)!=0)){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=22;f=-1;i=I;return f|0}if((l|0)==0|(m|0)==0){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=22;f=-1;i=I;return f|0}if(!(l>>>0>16777215?1:(33554431/(m>>>0)|0)>>>0<l>>>0)?!(0<k>>>0|(0==(k|0)?(33554431/(l>>>0)|0)>>>0<j>>>0:0)):0){G=l<<7;H=_(G,m)|0;v=wh(G|0,0,j|0,k|0)|0;p=v+H|0;if(p>>>0<v>>>0){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=12;f=-1;i=I;return f|0}E=l<<8|64;s=p+E|0;if(s>>>0<E>>>0){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=12;f=-1;i=I;return f|0}t=b+8|0;if((c[t>>2]|0)>>>0<s>>>0){p=c[b>>2]|0;if(p|0)gh(p);r=b+4|0;c[r>>2]=0;c[b>>2]=0;c[t>>2]=0;q=ih(u,s)|0;if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=q;if(!q)p=c[u>>2]|0;else{c[u>>2]=0;p=0}c[b>>2]=p;c[r>>2]=p;c[t>>2]=p|0?s:0;if(!p){f=-1;i=I;return f|0}}else p=c[b+4>>2]|0;E=p+H|0;D=E+v|0;Me(e,f,g,h,p,H);u=l<<5;b=D+(u<<2)|0;v=D+(l<<6<<2)|0;g=(u|0)==0;h=(j|0)==0&(k|0)==0;w=u&1073741792;x=(w|0)==0;z=G+-64|0;y=D+z|0;z=b+z|0;B=0;do{A=p+(_(G,B)|0)|0;if(!g){q=0;do{t=A+(q<<2)|0;c[D+(q<<2)>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;q=q+1|0}while((q|0)!=(u|0))}a:do{if(!h){if(x){q=0;r=0;do{Ye(D,b,v,l);Ye(b,D,v,l);q=lh(q|0,r|0,2,0)|0;r=C}while(r>>>0<k>>>0|(r|0)==(k|0)&q>>>0<j>>>0)}else{s=0;t=0;do{q=wh(s|0,t|0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{c[q+(r<<2)>>2]=c[D+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(D,b,v,l);q=wh(s|1|0,t|0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{c[q+(r<<2)>>2]=c[b+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(b,D,v,l);s=lh(s|0,t|0,2,0)|0;t=C}while(t>>>0<k>>>0|(t|0)==(k|0)&s>>>0<j>>>0)}if(x){q=0;r=0;while(1){Ye(D,b,v,l);Ye(b,D,v,l);q=lh(q|0,r|0,2,0)|0;r=C;if(!(r>>>0<k>>>0|(r|0)==(k|0)&q>>>0<j>>>0))break a}}else{s=0;t=0}do{q=wh(c[y>>2]&F|0,0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{J=D+(r<<2)|0;c[J>>2]=c[J>>2]^c[q+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(D,b,v,l);q=wh(c[z>>2]&F|0,0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{J=b+(r<<2)|0;c[J>>2]=c[J>>2]^c[q+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(b,D,v,l);s=lh(s|0,t|0,2,0)|0;t=C}while(t>>>0<k>>>0|(t|0)==(k|0)&s>>>0<j>>>0)}}while(0);if(!g){q=0;do{J=A+(q<<2)|0;t=c[D+(q<<2)>>2]|0;a[J>>0]=t;a[J+1>>0]=t>>8;a[J+2>>0]=t>>16;a[J+3>>0]=t>>24;q=q+1|0}while((q|0)!=(u|0))}B=B+1|0}while((B|0)!=(m|0));Me(e,f,p,H,n,o);J=0;i=I;return J|0}if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=12;J=-1;i=I;return J|0}function Ye(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;w=e<<1;m=a+((e<<5)+-16<<2)|0;o=c[m>>2]|0;c[d>>2]=o;q=c[m+4>>2]|0;L=d+4|0;c[L>>2]=q;t=c[m+8>>2]|0;x=d+8|0;c[x>>2]=t;u=c[m+12>>2]|0;y=d+12|0;c[y>>2]=u;s=c[m+16>>2]|0;z=d+16|0;c[z>>2]=s;r=c[m+20>>2]|0;A=d+20|0;c[A>>2]=r;p=c[m+24>>2]|0;B=d+24|0;c[B>>2]=p;n=c[m+28>>2]|0;C=d+28|0;c[C>>2]=n;l=c[m+32>>2]|0;D=d+32|0;c[D>>2]=l;j=c[m+36>>2]|0;E=d+36|0;c[E>>2]=j;h=c[m+40>>2]|0;F=d+40|0;c[F>>2]=h;f=c[m+44>>2]|0;G=d+44|0;c[G>>2]=f;g=c[m+48>>2]|0;H=d+48|0;c[H>>2]=g;i=c[m+52>>2]|0;I=d+52|0;c[I>>2]=i;k=c[m+56>>2]|0;J=d+56|0;c[J>>2]=k;m=c[m+60>>2]|0;K=d+60|0;c[K>>2]=m;if(!w)return;v=e<<4;e=0;while(1){M=e<<4;N=a+(M<<2)|0;c[d>>2]=o^c[N>>2];c[L>>2]=q^c[N+4>>2];c[x>>2]=t^c[N+8>>2];c[y>>2]=u^c[N+12>>2];c[z>>2]=s^c[N+16>>2];c[A>>2]=r^c[N+20>>2];c[B>>2]=p^c[N+24>>2];c[C>>2]=n^c[N+28>>2];c[D>>2]=l^c[N+32>>2];c[E>>2]=j^c[N+36>>2];c[F>>2]=h^c[N+40>>2];c[G>>2]=f^c[N+44>>2];c[H>>2]=g^c[N+48>>2];c[I>>2]=i^c[N+52>>2];c[J>>2]=k^c[N+56>>2];c[K>>2]=m^c[N+60>>2];Ze(d);u=e<<3;t=b+(u<<2)|0;c[t>>2]=c[d>>2];c[t+4>>2]=c[L>>2];c[t+8>>2]=c[x>>2];c[t+12>>2]=c[y>>2];c[t+16>>2]=c[z>>2];c[t+20>>2]=c[A>>2];c[t+24>>2]=c[B>>2];c[t+28>>2]=c[C>>2];c[t+32>>2]=c[D>>2];c[t+36>>2]=c[E>>2];c[t+40>>2]=c[F>>2];c[t+44>>2]=c[G>>2];c[t+48>>2]=c[H>>2];c[t+52>>2]=c[I>>2];c[t+56>>2]=c[J>>2];c[t+60>>2]=c[K>>2];t=a+((M|16)<<2)|0;c[d>>2]=c[d>>2]^c[t>>2];c[L>>2]=c[L>>2]^c[t+4>>2];c[x>>2]=c[x>>2]^c[t+8>>2];c[y>>2]=c[y>>2]^c[t+12>>2];c[z>>2]=c[z>>2]^c[t+16>>2];c[A>>2]=c[A>>2]^c[t+20>>2];c[B>>2]=c[B>>2]^c[t+24>>2];c[C>>2]=c[C>>2]^c[t+28>>2];c[D>>2]=c[D>>2]^c[t+32>>2];c[E>>2]=c[E>>2]^c[t+36>>2];c[F>>2]=c[F>>2]^c[t+40>>2];c[G>>2]=c[G>>2]^c[t+44>>2];c[H>>2]=c[H>>2]^c[t+48>>2];c[I>>2]=c[I>>2]^c[t+52>>2];c[J>>2]=c[J>>2]^c[t+56>>2];c[K>>2]=c[K>>2]^c[t+60>>2];Ze(d);u=b+(u+v<<2)|0;c[u>>2]=c[d>>2];c[u+4>>2]=c[L>>2];c[u+8>>2]=c[x>>2];c[u+12>>2]=c[y>>2];c[u+16>>2]=c[z>>2];c[u+20>>2]=c[A>>2];c[u+24>>2]=c[B>>2];c[u+28>>2]=c[C>>2];c[u+32>>2]=c[D>>2];c[u+36>>2]=c[E>>2];c[u+40>>2]=c[F>>2];c[u+44>>2]=c[G>>2];c[u+48>>2]=c[H>>2];c[u+52>>2]=c[I>>2];c[u+56>>2]=c[J>>2];c[u+60>>2]=c[K>>2];e=e+2|0;if(e>>>0>=w>>>0)break;f=c[G>>2]|0;g=c[H>>2]|0;i=c[I>>2]|0;k=c[J>>2]|0;m=c[K>>2]|0;o=c[d>>2]|0;q=c[L>>2]|0;t=c[x>>2]|0;u=c[y>>2]|0;s=c[z>>2]|0;r=c[A>>2]|0;p=c[B>>2]|0;n=c[C>>2]|0;l=c[D>>2]|0;j=c[E>>2]|0;h=c[F>>2]|0}return}function Ze(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;b=a+4|0;z=a+8|0;A=a+12|0;B=a+16|0;F=a+20|0;f=a+24|0;k=a+28|0;n=a+32|0;s=a+36|0;t=a+40|0;u=a+44|0;v=a+48|0;w=a+52|0;x=a+56|0;y=a+60|0;d=c[F>>2]|0;e=c[b>>2]|0;g=c[s>>2]|0;h=c[w>>2]|0;i=c[t>>2]|0;j=c[f>>2]|0;l=c[x>>2]|0;m=c[z>>2]|0;o=c[y>>2]|0;p=c[u>>2]|0;q=c[A>>2]|0;r=c[k>>2]|0;C=c[a>>2]|0;D=c[v>>2]|0;E=c[B>>2]|0;G=c[n>>2]|0;H=0;do{R=D+C|0;R=(R<<7|R>>>25)^E;O=R+C|0;O=(O<<9|O>>>23)^G;L=O+R|0;L=(L<<13|L>>>19)^D;U=L+O|0;U=(U<<18|U>>>14)^C;N=e+d|0;N=(N<<7|N>>>25)^g;K=N+d|0;K=(K<<9|K>>>23)^h;X=K+N|0;X=(X<<13|X>>>19)^e;Q=X+K|0;Q=(Q<<18|Q>>>14)^d;J=j+i|0;J=(J<<7|J>>>25)^l;W=J+i|0;W=(W<<9|W>>>23)^m;T=W+J|0;T=(T<<13|T>>>19)^j;M=T+W|0;M=(M<<18|M>>>14)^i;V=p+o|0;V=(V<<7|V>>>25)^q;S=V+o|0;S=(S<<9|S>>>23)^r;P=S+V|0;P=(P<<13|P>>>19)^p;I=P+S|0;I=(I<<18|I>>>14)^o;Y=V+U|0;e=(Y<<7|Y>>>25)^X;X=e+U|0;m=(X<<9|X>>>23)^W;W=m+e|0;q=(W<<13|W>>>19)^V;V=q+m|0;C=(V<<18|V>>>14)^U;U=R+Q|0;j=(U<<7|U>>>25)^T;T=j+Q|0;r=(T<<9|T>>>23)^S;S=r+j|0;E=(S<<13|S>>>19)^R;R=E+r|0;d=(R<<18|R>>>14)^Q;Q=N+M|0;p=(Q<<7|Q>>>25)^P;P=p+M|0;G=(P<<9|P>>>23)^O;O=G+p|0;g=(O<<13|O>>>19)^N;N=g+G|0;i=(N<<18|N>>>14)^M;M=J+I|0;D=(M<<7|M>>>25)^L;L=D+I|0;h=(L<<9|L>>>23)^K;K=h+D|0;l=(K<<13|K>>>19)^J;J=l+h|0;o=(J<<18|J>>>14)^I;H=H+2|0}while(H>>>0<8);c[a>>2]=(c[a>>2]|0)+C;c[b>>2]=(c[b>>2]|0)+e;c[z>>2]=(c[z>>2]|0)+m;c[A>>2]=(c[A>>2]|0)+q;c[B>>2]=(c[B>>2]|0)+E;c[F>>2]=(c[F>>2]|0)+d;c[f>>2]=(c[f>>2]|0)+j;c[k>>2]=(c[k>>2]|0)+r;c[n>>2]=(c[n>>2]|0)+G;c[s>>2]=(c[s>>2]|0)+g;c[t>>2]=(c[t>>2]|0)+i;c[u>>2]=(c[u>>2]|0)+p;c[v>>2]=(c[v>>2]|0)+D;c[w>>2]=(c[w>>2]|0)+h;c[x>>2]=(c[x>>2]|0)+l;c[y>>2]=(c[y>>2]|0)+o;return}function _e(){return 33167}function $e(a,b){a=a|0;b=b|0;return ef(a,b)|0}function af(a,b,c){a=a|0;b=b|0;c=c|0;return df(a,b,c)|0}function bf(){return 32}function cf(){return 32}function df(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0;Ua=i;Oa=i=i+63&-64;i=i+320|0;Ma=Oa+280|0;Pa=Oa+240|0;Qa=Oa+200|0;Sa=Oa+160|0;Ra=Oa+120|0;Ta=Oa+80|0;Na=Oa+40|0;h=Ma;g=h+32|0;do{a[h>>0]=a[e>>0]|0;h=h+1|0;e=e+1|0}while((h|0)<(g|0));a[Ma>>0]=(d[Ma>>0]|0)&248;Ba=Ma+31|0;a[Ba>>0]=(d[Ba>>0]|0)&63|64;sc(Pa,f);c[Qa>>2]=1;Ba=Qa+4|0;h=Ba;g=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));h=Sa;g=h+40|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));s=c[Pa>>2]|0;q=c[Pa+4>>2]|0;o=c[Pa+8>>2]|0;e=c[Pa+12>>2]|0;f=c[Pa+16>>2]|0;j=c[Pa+20>>2]|0;k=c[Pa+24>>2]|0;l=c[Pa+28>>2]|0;m=c[Pa+32>>2]|0;n=c[Pa+36>>2]|0;c[Ra>>2]=s;Ca=Ra+4|0;c[Ca>>2]=q;Da=Ra+8|0;c[Da>>2]=o;Ea=Ra+12|0;c[Ea>>2]=e;Fa=Ra+16|0;c[Fa>>2]=f;Ga=Ra+20|0;c[Ga>>2]=j;Ha=Ra+24|0;c[Ha>>2]=k;Ia=Ra+28|0;c[Ia>>2]=l;Ja=Ra+32|0;c[Ja>>2]=m;Ka=Ra+36|0;c[Ka>>2]=n;c[Ta>>2]=1;La=Ta+4|0;h=La;g=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));M=Qa+8|0;N=Qa+12|0;O=Qa+16|0;P=Qa+20|0;Q=Qa+24|0;R=Qa+28|0;S=Qa+32|0;T=Qa+36|0;U=Sa+4|0;V=Sa+8|0;W=Sa+12|0;X=Sa+16|0;Y=Sa+20|0;Z=Sa+24|0;_=Sa+28|0;$=Sa+32|0;aa=Sa+36|0;ba=Ta+8|0;ca=Ta+12|0;da=Ta+16|0;ea=Ta+20|0;fa=Ta+24|0;ga=Ta+28|0;ha=Ta+32|0;ia=Ta+36|0;ja=Oa+4|0;ka=Oa+8|0;la=Oa+12|0;ma=Oa+16|0;na=Oa+20|0;oa=Oa+24|0;pa=Oa+28|0;qa=Oa+32|0;ra=Oa+36|0;sa=Na+4|0;ta=Na+8|0;ua=Na+12|0;va=Na+16|0;wa=Na+20|0;xa=Na+24|0;ya=Na+28|0;za=Na+32|0;Aa=Na+36|0;L=0;K=0;J=0;I=0;H=0;G=0;F=0;u=0;v=0;w=0;x=0;y=0;z=0;A=0;B=0;D=0;E=1;t=0;r=0;h=o;o=254;p=0;while(1){g=(d[Ma+((o|0)/8|0)>>0]|0)>>>(o&7)&1;jb=0-(g^p)|0;Ya=(s^E)&jb;Xa=(q^t)&jb;Wa=(h^r)&jb;Va=(e^L)&jb;hb=(f^K)&jb;ib=(j^J)&jb;p=(k^I)&jb;ab=(l^H)&jb;eb=(m^G)&jb;gb=(n^F)&jb;c[Qa>>2]=Ya^E;c[Ba>>2]=Xa^t;c[M>>2]=Wa^r;c[N>>2]=Va^L;c[O>>2]=hb^K;c[P>>2]=ib^J;c[Q>>2]=p^I;c[R>>2]=ab^H;c[S>>2]=eb^G;c[T>>2]=gb^F;Ya=Ya^s;c[Ra>>2]=Ya;Xa=Xa^q;c[Ca>>2]=Xa;Wa=Wa^h;c[Da>>2]=Wa;Va=Va^e;c[Ea>>2]=Va;I=hb^f;c[Fa>>2]=I;E=ib^j;c[Ga>>2]=E;p=p^k;c[Ha>>2]=p;l=ab^l;c[Ia>>2]=l;j=eb^m;c[Ja>>2]=j;f=gb^n;c[Ka>>2]=f;K=c[aa>>2]|0;t=c[Ta>>2]|0;gb=c[La>>2]|0;eb=c[ba>>2]|0;q=c[ca>>2]|0;r=c[da>>2]|0;ab=c[ea>>2]|0;F=c[fa>>2]|0;H=c[ga>>2]|0;J=c[ha>>2]|0;L=c[ia>>2]|0;ib=(t^u)&jb;hb=(gb^v)&jb;fb=(eb^w)&jb;db=(q^x)&jb;cb=(r^y)&jb;bb=(ab^z)&jb;$a=(F^A)&jb;_a=(H^B)&jb;Za=(J^D)&jb;n=(L^K)&jb;e=ib^u;c[Sa>>2]=e;h=hb^v;c[U>>2]=h;k=fb^w;c[V>>2]=k;m=db^x;c[W>>2]=m;x=cb^y;c[X>>2]=x;s=bb^z;c[Y>>2]=s;w=$a^A;c[Z>>2]=w;A=_a^B;c[_>>2]=A;G=Za^D;c[$>>2]=G;K=n^K;c[aa>>2]=K;t=ib^t;c[Ta>>2]=t;v=hb^gb;c[La>>2]=v;B=fb^eb;c[ba>>2]=B;q=db^q;c[ca>>2]=q;r=cb^r;c[da>>2]=r;D=bb^ab;c[ea>>2]=D;F=$a^F;c[fa>>2]=F;H=_a^H;c[ga>>2]=H;J=Za^J;c[ha>>2]=J;L=n^L;c[ia>>2]=L;c[Na>>2]=Ya-t;c[sa>>2]=Xa-v;c[ta>>2]=Wa-B;c[ua>>2]=Va-q;c[va>>2]=I-r;c[wa>>2]=E-D;c[xa>>2]=p-F;c[ya>>2]=l-H;c[za>>2]=j-J;c[Aa>>2]=f-L;f=c[Qa>>2]|0;j=c[Ba>>2]|0;l=c[M>>2]|0;n=c[N>>2]|0;p=c[O>>2]|0;u=c[P>>2]|0;y=c[Q>>2]|0;E=c[R>>2]|0;I=c[S>>2]|0;z=c[T>>2]|0;c[Oa>>2]=f-e;c[ja>>2]=j-h;c[ka>>2]=l-k;c[la>>2]=n-m;c[ma>>2]=p-x;c[na>>2]=u-s;c[oa>>2]=y-w;c[pa>>2]=E-A;c[qa>>2]=I-G;c[ra>>2]=z-K;c[Qa>>2]=e+f;c[Ba>>2]=h+j;c[M>>2]=k+l;c[N>>2]=m+n;c[O>>2]=x+p;c[P>>2]=s+u;c[Q>>2]=w+y;c[R>>2]=A+E;c[S>>2]=G+I;c[T>>2]=K+z;v=v+(c[Ca>>2]|0)|0;B=B+(c[Da>>2]|0)|0;q=q+(c[Ea>>2]|0)|0;r=r+(c[Fa>>2]|0)|0;D=D+(c[Ga>>2]|0)|0;F=F+(c[Ha>>2]|0)|0;H=H+(c[Ia>>2]|0)|0;J=J+(c[Ja>>2]|0)|0;L=L+(c[Ka>>2]|0)|0;c[Sa>>2]=t+(c[Ra>>2]|0);c[U>>2]=v;c[V>>2]=B;c[W>>2]=q;c[X>>2]=r;c[Y>>2]=D;c[Z>>2]=F;c[_>>2]=H;c[$>>2]=J;c[aa>>2]=L;uc(Ta,Na,Qa);uc(Sa,Sa,Oa);vc(Na,Oa);vc(Oa,Qa);L=c[Ta>>2]|0;J=c[La>>2]|0;H=c[ba>>2]|0;F=c[ca>>2]|0;D=c[da>>2]|0;r=c[ea>>2]|0;q=c[fa>>2]|0;B=c[ga>>2]|0;v=c[ha>>2]|0;t=c[ia>>2]|0;z=c[Sa>>2]|0;K=c[U>>2]|0;I=c[V>>2]|0;G=c[W>>2]|0;E=c[X>>2]|0;A=c[Y>>2]|0;y=c[Z>>2]|0;w=c[_>>2]|0;u=c[$>>2]|0;s=c[aa>>2]|0;c[Ra>>2]=z+L;c[Ca>>2]=K+J;c[Da>>2]=I+H;c[Ea>>2]=G+F;c[Fa>>2]=E+D;c[Ga>>2]=A+r;c[Ha>>2]=y+q;c[Ia>>2]=w+B;c[Ja>>2]=u+v;c[Ka>>2]=s+t;c[Sa>>2]=L-z;c[U>>2]=J-K;c[V>>2]=H-I;c[W>>2]=F-G;c[X>>2]=D-E;c[Y>>2]=r-A;c[Z>>2]=q-y;c[_>>2]=B-w;c[$>>2]=v-u;c[aa>>2]=t-s;uc(Qa,Oa,Na);s=(c[Oa>>2]|0)-(c[Na>>2]|0)|0;t=(c[ja>>2]|0)-(c[sa>>2]|0)|0;u=(c[ka>>2]|0)-(c[ta>>2]|0)|0;v=(c[la>>2]|0)-(c[ua>>2]|0)|0;w=(c[ma>>2]|0)-(c[va>>2]|0)|0;B=(c[na>>2]|0)-(c[wa>>2]|0)|0;y=(c[oa>>2]|0)-(c[xa>>2]|0)|0;q=(c[pa>>2]|0)-(c[ya>>2]|0)|0;A=(c[qa>>2]|0)-(c[za>>2]|0)|0;r=(c[ra>>2]|0)-(c[Aa>>2]|0)|0;c[Oa>>2]=s;c[ja>>2]=t;c[ka>>2]=u;c[la>>2]=v;c[ma>>2]=w;c[na>>2]=B;c[oa>>2]=y;c[pa>>2]=q;c[qa>>2]=A;c[ra>>2]=r;vc(Sa,Sa);s=wh(s|0,((s|0)<0)<<31>>31|0,121666,0)|0;E=C;t=wh(t|0,((t|0)<0)<<31>>31|0,121666,0)|0;D=C;u=wh(u|0,((u|0)<0)<<31>>31|0,121666,0)|0;G=C;v=wh(v|0,((v|0)<0)<<31>>31|0,121666,0)|0;F=C;w=wh(w|0,((w|0)<0)<<31>>31|0,121666,0)|0;I=C;B=wh(B|0,((B|0)<0)<<31>>31|0,121666,0)|0;H=C;y=wh(y|0,((y|0)<0)<<31>>31|0,121666,0)|0;K=C;q=wh(q|0,((q|0)<0)<<31>>31|0,121666,0)|0;J=C;A=wh(A|0,((A|0)<0)<<31>>31|0,121666,0)|0;z=C;r=wh(r|0,((r|0)<0)<<31>>31|0,121666,0)|0;L=C;p=lh(r|0,L|0,16777216,0)|0;p=mh(p|0,C|0,25)|0;x=C;n=wh(p|0,x|0,19,0)|0;E=lh(n|0,C|0,s|0,E|0)|0;s=C;x=ph(p|0,x|0,25)|0;x=kh(r|0,L|0,x|0,C|0)|0;L=C;r=lh(t|0,D|0,16777216,0)|0;r=mh(r|0,C|0,25)|0;p=C;G=lh(r|0,p|0,u|0,G|0)|0;u=C;p=ph(r|0,p|0,25)|0;p=kh(t|0,D|0,p|0,C|0)|0;D=C;t=lh(v|0,F|0,16777216,0)|0;t=mh(t|0,C|0,25)|0;r=C;I=lh(t|0,r|0,w|0,I|0)|0;w=C;r=ph(t|0,r|0,25)|0;r=kh(v|0,F|0,r|0,C|0)|0;F=C;v=lh(B|0,H|0,16777216,0)|0;v=mh(v|0,C|0,25)|0;t=C;K=lh(v|0,t|0,y|0,K|0)|0;y=C;t=ph(v|0,t|0,25)|0;t=kh(B|0,H|0,t|0,C|0)|0;H=C;B=lh(q|0,J|0,16777216,0)|0;B=mh(B|0,C|0,25)|0;v=C;z=lh(B|0,v|0,A|0,z|0)|0;A=C;v=ph(B|0,v|0,25)|0;v=kh(q|0,J|0,v|0,C|0)|0;J=C;q=lh(E|0,s|0,33554432,0)|0;q=mh(q|0,C|0,26)|0;B=C;D=lh(p|0,D|0,q|0,B|0)|0;B=ph(q|0,B|0,26)|0;B=kh(E|0,s|0,B|0,C|0)|0;s=lh(G|0,u|0,33554432,0)|0;s=mh(s|0,C|0,26)|0;E=C;F=lh(r|0,F|0,s|0,E|0)|0;E=ph(s|0,E|0,26)|0;E=kh(G|0,u|0,E|0,C|0)|0;u=lh(I|0,w|0,33554432,0)|0;u=mh(u|0,C|0,26)|0;G=C;H=lh(t|0,H|0,u|0,G|0)|0;G=ph(u|0,G|0,26)|0;G=kh(I|0,w|0,G|0,C|0)|0;w=lh(K|0,y|0,33554432,0)|0;w=mh(w|0,C|0,26)|0;I=C;J=lh(v|0,J|0,w|0,I|0)|0;I=ph(w|0,I|0,26)|0;I=kh(K|0,y|0,I|0,C|0)|0;y=lh(z|0,A|0,33554432,0)|0;y=mh(y|0,C|0,26)|0;K=C;L=lh(x|0,L|0,y|0,K|0)|0;K=ph(y|0,K|0,26)|0;K=kh(z|0,A|0,K|0,C|0)|0;c[Ta>>2]=B;c[La>>2]=D;c[ba>>2]=E;c[ca>>2]=F;c[da>>2]=G;c[ea>>2]=H;c[fa>>2]=I;c[ga>>2]=J;c[ha>>2]=K;c[ia>>2]=L;vc(Ra,Ra);D=D+(c[sa>>2]|0)|0;E=E+(c[ta>>2]|0)|0;F=F+(c[ua>>2]|0)|0;G=G+(c[va>>2]|0)|0;H=H+(c[wa>>2]|0)|0;I=I+(c[xa>>2]|0)|0;J=J+(c[ya>>2]|0)|0;K=K+(c[za>>2]|0)|0;L=L+(c[Aa>>2]|0)|0;c[Na>>2]=B+(c[Na>>2]|0);c[sa>>2]=D;c[ta>>2]=E;c[ua>>2]=F;c[va>>2]=G;c[wa>>2]=H;c[xa>>2]=I;c[ya>>2]=J;c[za>>2]=K;c[Aa>>2]=L;uc(Ta,Pa,Sa);uc(Sa,Oa,Na);if((o|0)<=0)break;L=c[N>>2]|0;e=c[Ea>>2]|0;K=c[O>>2]|0;f=c[Fa>>2]|0;J=c[P>>2]|0;j=c[Ga>>2]|0;I=c[Q>>2]|0;k=c[Ha>>2]|0;H=c[R>>2]|0;l=c[Ia>>2]|0;G=c[S>>2]|0;m=c[Ja>>2]|0;F=c[T>>2]|0;n=c[Ka>>2]|0;u=c[Sa>>2]|0;v=c[U>>2]|0;w=c[V>>2]|0;x=c[W>>2]|0;y=c[X>>2]|0;z=c[Y>>2]|0;A=c[Z>>2]|0;B=c[_>>2]|0;D=c[$>>2]|0;E=c[Qa>>2]|0;s=c[Ra>>2]|0;t=c[Ba>>2]|0;q=c[Ca>>2]|0;r=c[M>>2]|0;h=c[Da>>2]|0;o=o+-1|0;p=g}Na=c[Qa>>2]|0;gb=c[Ba>>2]|0;cb=c[M>>2]|0;_a=c[N>>2]|0;Wa=c[O>>2]|0;hb=c[P>>2]|0;db=c[Q>>2]|0;$a=c[R>>2]|0;Xa=c[S>>2]|0;Pa=c[T>>2]|0;Oa=0-g|0;ib=(c[Ca>>2]^gb)&Oa;eb=(c[Da>>2]^cb)&Oa;ab=(c[Ea>>2]^_a)&Oa;Ya=(c[Fa>>2]^Wa)&Oa;jb=(c[Ga>>2]^hb)&Oa;fb=(c[Ha>>2]^db)&Oa;bb=(c[Ia>>2]^$a)&Oa;Za=(c[Ja>>2]^Xa)&Oa;Va=(c[Ka>>2]^Pa)&Oa;c[Qa>>2]=(c[Ra>>2]^Na)&Oa^Na;c[Ba>>2]=ib^gb;c[M>>2]=eb^cb;c[N>>2]=ab^_a;c[O>>2]=Ya^Wa;c[P>>2]=jb^hb;c[Q>>2]=fb^db;c[R>>2]=bb^$a;c[S>>2]=Za^Xa;c[T>>2]=Va^Pa;Pa=c[Sa>>2]|0;Va=c[U>>2]|0;Xa=c[V>>2]|0;Za=c[W>>2]|0;$a=c[X>>2]|0;bb=c[Y>>2]|0;db=c[Z>>2]|0;fb=c[_>>2]|0;hb=c[$>>2]|0;jb=c[aa>>2]|0;Ra=(c[La>>2]^Va)&Oa;Wa=(c[ba>>2]^Xa)&Oa;Ya=(c[ca>>2]^Za)&Oa;_a=(c[da>>2]^$a)&Oa;ab=(c[ea>>2]^bb)&Oa;cb=(c[fa>>2]^db)&Oa;eb=(c[ga>>2]^fb)&Oa;gb=(c[ha>>2]^hb)&Oa;ib=(c[ia>>2]^jb)&Oa;c[Sa>>2]=(c[Ta>>2]^Pa)&Oa^Pa;c[U>>2]=Ra^Va;c[V>>2]=Wa^Xa;c[W>>2]=Ya^Za;c[X>>2]=_a^$a;c[Y>>2]=ab^bb;c[Z>>2]=cb^db;c[_>>2]=eb^fb;c[$>>2]=gb^hb;c[aa>>2]=ib^jb;wc(Sa,Sa);uc(Qa,Qa,Sa);tc(b,Qa);i=Ua;return 0-((((a[b+31>>0]|(a[b+30>>0]|(a[b+29>>0]|(a[b+28>>0]|(a[b+27>>0]|(a[b+26>>0]|(a[b+25>>0]|(a[b+24>>0]|(a[b+23>>0]|(a[b+22>>0]|(a[b+21>>0]|(a[b+20>>0]|(a[b+19>>0]|(a[b+18>>0]|(a[b+17>>0]|(a[b+16>>0]|(a[b+15>>0]|(a[b+14>>0]|(a[b+13>>0]|(a[b+12>>0]|(a[b+11>>0]|(a[b+10>>0]|(a[b+9>>0]|(a[b+8>>0]|(a[b+7>>0]|(a[b+6>>0]|(a[b+5>>0]|(a[b+4>>0]|(a[b+3>>0]|(a[b+2>>0]|(a[b+1>>0]|a[b>>0])))))))))))))))))))))))))))))))&255)+511|0)>>>8&1)|0}function ef(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;j=i=i+63&-64;i=i+320|0;k=j+240|0;l=j+200|0;h=j+280|0;g=j+40|0;m=h;f=m+32|0;do{a[m>>0]=a[e>>0]|0;m=m+1|0;e=e+1|0}while((m|0)<(f|0));a[h>>0]=(d[h>>0]|0)&248;D=h+31|0;a[D>>0]=(d[D>>0]|0)&63|64;Cc(g,h);D=c[g+80>>2]|0;B=c[g+84>>2]|0;z=c[g+88>>2]|0;x=c[g+92>>2]|0;v=c[g+96>>2]|0;t=c[g+100>>2]|0;r=c[g+104>>2]|0;p=c[g+108>>2]|0;e=c[g+112>>2]|0;h=c[g+116>>2]|0;C=c[g+40>>2]|0;A=c[g+44>>2]|0;y=c[g+48>>2]|0;w=c[g+52>>2]|0;u=c[g+56>>2]|0;s=c[g+60>>2]|0;q=c[g+64>>2]|0;o=c[g+68>>2]|0;f=c[g+72>>2]|0;m=c[g+76>>2]|0;c[k>>2]=C+D;c[k+4>>2]=A+B;c[k+8>>2]=y+z;c[k+12>>2]=w+x;c[k+16>>2]=u+v;c[k+20>>2]=s+t;c[k+24>>2]=q+r;c[k+28>>2]=o+p;c[k+32>>2]=f+e;c[k+36>>2]=m+h;c[l>>2]=D-C;c[l+4>>2]=B-A;c[l+8>>2]=z-y;c[l+12>>2]=x-w;c[l+16>>2]=v-u;c[l+20>>2]=t-s;c[l+24>>2]=r-q;c[l+28>>2]=p-o;c[l+32>>2]=e-f;c[l+36>>2]=h-m;wc(l,l);uc(j,k,l);tc(b,j);i=n;return 0}function ff(){return 32}function gf(){return 32}function hf(){return 32}function jf(){return 24}function kf(){return 32}function lf(){return 16}function mf(){return 16}function nf(){return 33178}function of(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return zf(a,b,c,d,e,f)|0}function pf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Af(a,b,c,d,e,f)|0}function qf(b,f,g,h,j,k,l){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=i;t=i=i+63&-64;i=i+352|0;s=t;r=t+256|0;t=t+320|0;Fc(t,k,l,0)|0;l=b;m=g;if(b>>>0>=g>>>0?0<j>>>0|0==(j|0)&(l-m|0)>>>0<h>>>0:0)n=5;else if(g>>>0>=b>>>0?0<j>>>0|0==(j|0)&(m-l|0)>>>0<h>>>0:0)n=5;if((n|0)==5){rh(b|0,g|0,h|0)|0;g=b}c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[r+16>>2]=0;c[r+20>>2]=0;c[r+24>>2]=0;c[r+28>>2]=0;o=j>>>0>0|(j|0)==0&h>>>0>32;p=o?32:h;q=o?0:j;l=(p|0)==0&(q|0)==0;if(!l){n=j>>>0<0|(j|0)==0&h>>>0<32;n=lh((n?h:32)|0,(n?j:0)|0,-1,0)|0;qh(r+32|0,g|0,n+1|0)|0}m=lh(p|0,q|0,32,0)|0;n=k+16|0;Wg(r,r,m,C,n,0,0,t)|0;c[s>>2]=c[r>>2]&67108863;k=r+3|0;c[s+4>>2]=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)>>>2&67108611;k=r+6|0;c[s+8>>2]=(e[k>>1]|e[k+2>>1]<<16)>>>4&67092735;k=r+9|0;c[s+12>>2]=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)>>>6&66076671;c[s+16>>2]=(c[r+12>>2]|0)>>>8&1048575;k=s+20|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[s+40>>2]=c[r+16>>2];c[s+44>>2]=c[r+20>>2];c[s+48>>2]=c[r+24>>2];c[s+52>>2]=c[r+28>>2];k=s+56|0;c[k>>2]=0;c[k+4>>2]=0;a[s+80>>0]=0;if(!l){k=j>>>0<0|(j|0)==0&h>>>0<32;k=lh((k?h:32)|0,(k?j:0)|0,-1,0)|0;qh(b|0,r+32|0,k+1|0)|0}l=r;m=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));if(!o){Xd(s,b,h,j);Zd(s,f);i=u;return 0}r=kh(h|0,j|0,p|0,q|0)|0;Wg(b+p|0,g+p|0,r,C,n,1,0,t)|0;Xd(s,b,h,j);Zd(s,f);i=u;return 0}function rf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){e=-1;return e|0}qf(a+16|0,a,b,c,d,e,f)|0;e=0;return e|0}function sf(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;s=i=i+63&-64;i=i+208|0;m=s;o=s+144|0;n=s+112|0;r=s+48|0;s=s+16|0;Fc(s,j,k,0)|0;q=j+16|0;k=n;j=s;l=k+32|0;do{a[k>>0]=a[j>>0]|0;k=k+1|0;j=j+1|0}while((k|0)<(l|0));l=q;j=l;l=l+4|0;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;k=m;c[k>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;c[k+4>>2]=l;k=m+8|0;c[k>>2]=0;c[k+4>>2]=0;Kc(o,m,n,0)|0;k=0;do{a[r+k>>0]=a[o+k>>0]|0;k=k+1|0}while((k|0)!=32);if(Rd(f,e,g,h,r)|0){k=s;l=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0));s=-1;i=t;return s|0}k=e;j=b;if(e>>>0>=b>>>0?0<h>>>0|0==(h|0)&(k-j|0)>>>0<g>>>0:0)p=9;else if(b>>>0>=e>>>0?0<h>>>0|0==(h|0)&(j-k|0)>>>0<g>>>0:0)p=9;if((p|0)==9){rh(b|0,e|0,g|0)|0;e=b}k=h>>>0>0|(h|0)==0&g>>>0>32;j=k?32:g;l=k?0:h;if((j|0)==0&(l|0)==0)Wg(r,r,32,0,q,0,0,s)|0;else{f=r+32|0;p=h>>>0<0|(h|0)==0&g>>>0<32;p=lh((p?g:32)|0,(p?h:0)|0,-1,0)|0;p=p+1|0;qh(f|0,e|0,p|0)|0;o=lh(j|0,l|0,32,0)|0;Wg(r,r,o,C,q,0,0,s)|0;qh(b|0,f|0,p|0)|0}if(k){r=kh(g|0,h|0,j|0,l|0)|0;Wg(b+j|0,e+j|0,r,C,q,1,0,s)|0}k=s;l=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0));s=0;i=t;return s|0}function tf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16){e=-1;return e|0}d=lh(c|0,d|0,-16,-1)|0;e=sf(a,b+16|0,b,d,C,e,f)|0;return e|0}function uf(){return 32}function vf(){return 24}function wf(){return 32}function xf(){return 16}function yf(){return 16}function zf(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;l=i;k=i=i+63&-64;i=i+96|0;if(g>>>0<0|(g|0)==0&f>>>0<32){k=-1;i=l;return k|0}Fc(k,h,j,0)|0;Wg(b,e,f,g,h+16|0,0,0,k)|0;h=b+16|0;f=lh(f|0,g|0,-32,-1)|0;c[k>>2]=(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)&67108863;e=b+3|0;c[k+4>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>2&67108611;e=b+6|0;c[k+8>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>4&67092735;e=b+9|0;c[k+12>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>6&66076671;e=b+12|0;c[k+16>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>8&1048575;e=k+20|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[k+40>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;e=b+20|0;c[k+44>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+24|0;c[k+48>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+28|0;c[k+52>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=k+56|0;c[e>>2]=0;c[e+4>>2]=0;a[k+80>>0]=0;Xd(k,b+32|0,f,C);Zd(k,h);f=b+16|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(f|0));k=0;i=l;return k|0}function Af(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;r=i=i+63&-64;i=i+176|0;k=r;q=r+112|0;l=r+80|0;s=r+48|0;r=r+16|0;if(g>>>0<0|(g|0)==0&f>>>0<32){s=-1;i=t;return s|0}Fc(s,h,j,0)|0;p=h+16|0;m=l;n=s;o=m+32|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(o|0));n=p;m=n;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;o=k;c[o>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;c[o+4>>2]=n;o=k+8|0;c[o>>2]=0;c[o+4>>2]=0;Kc(q,k,l,0)|0;k=0;do{a[r+k>>0]=a[q+k>>0]|0;k=k+1|0}while((k|0)!=32);q=lh(f|0,g|0,-32,-1)|0;if(Rd(e+16|0,e+32|0,q,C,r)|0){s=-1;i=t;return s|0}Fc(s,h,j,0)|0;Wg(b,e,f,g,p,0,0,s)|0;m=b;o=m+32|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(o|0));s=0;i=t;return s|0}function Bf(){return 8}function Cf(){return 16}function Df(){return 33195}function Ef(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Hf(a,b,c,d,e)|0;return 0}function Ff(){return 8}function Gf(){return 16}function Hf(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=g;l=n;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;k=g+8|0;m=k;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;k=k+4|0;k=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;p=e&7;o=c+e+(0-p)|0;e=ph(e|0,f|0,56)|0;g=C;h=m^2037671283;j=k^1952801890;i=l^1852142177;f=n^1819895653;m=m^1852075885;k=k^1685025377;l=l^1886610805;n=n^1936682341;if((o|0)!=(c|0)){do{r=c;s=r;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;r=r+4|0;r=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;v=s^h;u=r^j;n=lh(l|0,n|0,m|0,k|0)|0;l=C;t=ph(m|0,k|0,13)|0;h=C;m=oh(m|0,k|0,51)|0;m=(t|m)^n;h=(h|C)^l;f=lh(v|0,u|0,i|0,f|0)|0;i=C;t=ph(v|0,u|0,16)|0;j=C;u=oh(v|0,u|0,48)|0;u=(t|u)^f;j=(j|C)^i;n=lh(u|0,j|0,l|0,n|0)|0;l=C;t=ph(u|0,j|0,21)|0;k=C;j=oh(u|0,j|0,43)|0;j=(t|j)^n;k=(k|C)^l;i=lh(f|0,i|0,m|0,h|0)|0;f=C;t=ph(m|0,h|0,17)|0;u=C;h=oh(m|0,h|0,47)|0;h=i^(t|h);u=f^(u|C);l=lh(n|0,l|0,h|0,u|0)|0;n=C;t=ph(h|0,u|0,13)|0;m=C;u=oh(h|0,u|0,51)|0;u=(t|u)^l;m=(m|C)^n;i=lh(j|0,k|0,f|0,i|0)|0;f=C;t=ph(j|0,k|0,16)|0;h=C;k=oh(j|0,k|0,48)|0;k=(t|k)^i;h=(h|C)^f;l=lh(k|0,h|0,n|0,l|0)|0;n=C;t=ph(k|0,h|0,21)|0;j=C;h=oh(k|0,h|0,43)|0;h=(t|h)^l;j=(j|C)^n;f=lh(i|0,f|0,u|0,m|0)|0;i=C;t=ph(u|0,m|0,17)|0;k=C;m=oh(u|0,m|0,47)|0;m=(t|m)^f;k=(k|C)^i;l=l^s;n=n^r;c=c+8|0}while((c|0)!=(o|0));c=o}switch(p|0){case 7:{e=ph(d[c+6>>0]|0|0,0,48)|0|e;g=C|g;q=5;break}case 6:{q=5;break}case 5:{q=6;break}case 4:{q=7;break}case 3:{q=8;break}case 2:{q=9;break}case 1:{q=10;break}default:{}}if((q|0)==5){v=ph(d[c+5>>0]|0|0,0,40)|0;g=C|g;e=v|e;q=6}if((q|0)==6){g=d[c+4>>0]|0|g;q=7}if((q|0)==7){v=ph(d[c+3>>0]|0|0,0,24)|0;e=v|e;g=C|g;q=8}if((q|0)==8){v=ph(d[c+2>>0]|0|0,0,16)|0;e=v|e;g=C|g;q=9}if((q|0)==9){v=ph(d[c+1>>0]|0|0,0,8)|0;e=v|e;g=C|g;q=10}if((q|0)==10)e=d[c>>0]|0|e;u=e^h;o=g^j;p=lh(l|0,n|0,m|0,k|0)|0;n=C;v=ph(m|0,k|0,13)|0;q=C;s=oh(m|0,k|0,51)|0;s=(v|s)^p;q=(q|C)^n;v=lh(u|0,o|0,i|0,f|0)|0;t=C;r=ph(u|0,o|0,16)|0;m=C;o=oh(u|0,o|0,48)|0;o=(r|o)^v;m=(m|C)^t;p=lh(o|0,m|0,n|0,p|0)|0;n=C;r=ph(o|0,m|0,21)|0;u=C;m=oh(o|0,m|0,43)|0;m=(r|m)^p;u=(u|C)^n;t=lh(v|0,t|0,s|0,q|0)|0;v=C;r=ph(s|0,q|0,17)|0;o=C;q=oh(s|0,q|0,47)|0;q=t^(r|q);o=v^(o|C);n=lh(p|0,n|0,q|0,o|0)|0;p=C;r=ph(q|0,o|0,13)|0;s=C;o=oh(q|0,o|0,51)|0;o=(r|o)^n;s=(s|C)^p;t=lh(m|0,u|0,v|0,t|0)|0;v=C;r=ph(m|0,u|0,16)|0;q=C;u=oh(m|0,u|0,48)|0;u=(r|u)^t;q=(q|C)^v;n=lh(u|0,q|0,p|0,n|0)|0;p=C;r=ph(u|0,q|0,21)|0;m=C;q=oh(u|0,q|0,43)|0;q=(r|q)^n;m=(m|C)^p;v=lh(t|0,v|0,o|0,s|0)|0;t=C;r=ph(o|0,s|0,17)|0;u=C;s=oh(o|0,s|0,47)|0;s=(r|s)^v;u=(u|C)^t;p=lh(n^e|0,p^g|0,s|0,u|0)|0;n=C;r=ph(s|0,u|0,13)|0;o=C;u=oh(s|0,u|0,51)|0;u=p^(r|u);o=n^(o|C);v=lh(q|0,m|0,t^255|0,v|0)|0;t=C;r=ph(q|0,m|0,16)|0;s=C;m=oh(q|0,m|0,48)|0;m=(r|m)^v;s=(s|C)^t;p=lh(m|0,s|0,n|0,p|0)|0;n=C;r=ph(m|0,s|0,21)|0;q=C;s=oh(m|0,s|0,43)|0;s=(r|s)^p;q=(q|C)^n;t=lh(v|0,t|0,u|0,o|0)|0;v=C;r=ph(u|0,o|0,17)|0;m=C;o=oh(u|0,o|0,47)|0;o=(r|o)^t;m=(m|C)^v;n=lh(p|0,n|0,o|0,m|0)|0;p=C;r=ph(o|0,m|0,13)|0;u=C;m=oh(o|0,m|0,51)|0;m=(r|m)^n;u=(u|C)^p;t=lh(s|0,q|0,v|0,t|0)|0;v=C;r=ph(s|0,q|0,16)|0;o=C;q=oh(s|0,q|0,48)|0;q=(r|q)^t;o=(o|C)^v;n=lh(q|0,o|0,p|0,n|0)|0;p=C;r=ph(q|0,o|0,21)|0;s=C;o=oh(q|0,o|0,43)|0;o=(r|o)^n;s=(s|C)^p;v=lh(t|0,v|0,m|0,u|0)|0;t=C;r=ph(m|0,u|0,17)|0;q=C;u=oh(m|0,u|0,47)|0;u=(r|u)^v;q=(q|C)^t;p=lh(n|0,p|0,u|0,q|0)|0;n=C;r=ph(u|0,q|0,13)|0;m=C;q=oh(u|0,q|0,51)|0;q=(r|q)^p;m=(m|C)^n;v=lh(o|0,s|0,t|0,v|0)|0;t=C;r=ph(o|0,s|0,16)|0;u=C;s=oh(o|0,s|0,48)|0;s=(r|s)^v;u=(u|C)^t;p=lh(s|0,u|0,n|0,p|0)|0;n=C;r=ph(s|0,u|0,21)|0;o=C;u=oh(s|0,u|0,43)|0;u=(r|u)^p;o=(o|C)^n;t=lh(v|0,t|0,q|0,m|0)|0;v=C;r=ph(q|0,m|0,17)|0;s=C;m=oh(q|0,m|0,47)|0;m=(r|m)^t;s=(s|C)^v;n=lh(p|0,n|0,m|0,s|0)|0;p=C;r=ph(m|0,s|0,13)|0;q=C;s=oh(m|0,s|0,51)|0;n=(r|s)^n;p=(q|C)^p;t=lh(u|0,o|0,v|0,t|0)|0;v=C;q=ph(u|0,o|0,16)|0;s=C;o=oh(u|0,o|0,48)|0;o=(q|o)^t;s=(s|C)^v;q=ph(o|0,s|0,21)|0;u=C;s=oh(o|0,s|0,43)|0;u=u|C;v=lh(t|0,v|0,n|0,p|0)|0;t=C;o=ph(n|0,p|0,17)|0;r=C;p=oh(n|0,p|0,47)|0;s=(o|p)^v^t^(q|s);u=(r|C)^t^v^u;v=b;t=v;a[t>>0]=s;a[t+1>>0]=s>>8;a[t+2>>0]=s>>16;a[t+3>>0]=s>>24;v=v+4|0;a[v>>0]=u;a[v+1>>0]=u>>8;a[v+2>>0]=u>>16;a[v+3>>0]=u>>24;return 0}function If(){return 64}function Jf(){return 32}function Kf(){return 32}function Lf(){return 64}function Mf(){return 33205}function Nf(a,b,c){a=a|0;b=b|0;c=c|0;Zf(a,b,c)|0;return 0}function Of(a,b){a=a|0;b=b|0;_f(a,b)|0;return 0}function Pf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=i=i+63&-64;i=i+16|0;k=a+64|0;rh(k|0,d|0,e|0)|0;dg(a,j,k,e,f,g)|0;g=j;d=(b|0)!=0;if((c[g>>2]|0)==64&(c[g+4>>2]|0)==0){if(!d){k=0;i=h;return k|0}j=lh(e|0,f|0,64,0)|0;k=b;c[k>>2]=j;c[k+4>>2]=C;k=0;i=h;return k|0}else{if(d){k=b;c[k>>2]=0;c[k+4>>2]=0}k=lh(e|0,f|0,64,0)|0;nh(a|0,0,k|0)|0;k=-1;i=h;return k|0}return 0}function Qf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;e=lh(e|0,f|0,-64,-1)|0;f=C;do{if(!(f>>>0>0|(f|0)==0&e>>>0>4294967231)){h=d+64|0;if(bg(d,h,e,f,g)|0){nh(a|0,0,e|0)|0;break}if(b|0){d=b;c[d>>2]=e;c[d+4>>2]=f}rh(a|0,h|0,e|0)|0;d=0;return d|0}}while(0);if(!b){d=-1;return d|0}d=b;c[d>>2]=0;c[d+4>>2]=0;d=-1;return d|0}function Rf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;dg(a,b,c,d,e,f)|0;return 0}function Sf(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return bg(a,b,c,d,e)|0}function Tf(){return 64}function Uf(){return 32}function Vf(){return 32}function Wf(){return 64}function Xf(a,b){a=a|0;b=b|0;rh(a|0,b|0,32)|0;return 0}function Yf(a,b){a=a|0;b=b|0;rh(a|0,b+32|0,32)|0;return 0}function Zf(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;h=i=i+63&-64;i=i+496|0;k=h;j=h+448|0;l=h+408|0;m=h+368|0;h=h+208|0;g=k+64|0;n=k;p=400;q=n+64|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0}while((n|0)<(q|0));n=k+72|0;c[n>>2]=256;c[n+4>>2]=0;n=g;c[n>>2]=0;c[n+4>>2]=0;n=k+80|0;p=f;q=n+32|0;do{a[n>>0]=a[p>>0]|0;n=n+1|0;p=p+1|0}while((n|0)<(q|0));Fd(k,e)|0;a[e>>0]=(d[e>>0]|0)&248;q=e+31|0;a[q>>0]=(d[q>>0]|0)&63|64;Cc(h,e);wc(j,h+80|0);uc(l,h,j);uc(m,h+40|0,j);tc(b,m);tc(k,l);q=b+31|0;a[q>>0]=(d[q>>0]|0)^(d[k>>0]|0)<<7;rh(e|0,f|0,32)|0;rh(e+32|0,b|0,32)|0;i=o;return 0}function _f(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=i;n=i=i+63&-64;i=i+528|0;m=n;l=n+448|0;o=n+408|0;p=n+368|0;k=n+208|0;n=n+488|0;f=0;do{a[n+f>>0]=ma(0)|0;f=f+1|0}while((f|0)!=32);f=m+64|0;g=m;h=400;j=g+64|0;do{c[g>>2]=c[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(j|0));g=m+72|0;c[g>>2]=256;c[g+4>>2]=0;g=f;c[g>>2]=0;c[g+4>>2]=0;g=m+80|0;h=n;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));Fd(m,e)|0;a[e>>0]=(d[e>>0]|0)&248;g=e+31|0;a[g>>0]=(d[g>>0]|0)&63|64;Cc(k,e);wc(l,k+80|0);uc(o,k,l);uc(p,k+40|0,l);tc(b,p);tc(m,o);g=b+31|0;a[g>>0]=(d[g>>0]|0)^(d[m>>0]|0)<<7;g=e;h=n;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));rh(e+32|0,b|0,32)|0;i=q;return 0}function $f(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;e=i=i+63&-64;i=i+240|0;d=e+80|0;f=e+40|0;if(yc(d,b)|0){f=-1;i=g;return f|0}y=e+4|0;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[y+16>>2]=0;c[y+20>>2]=0;c[y+24>>2]=0;c[y+28>>2]=0;q=d+40|0;p=d+44|0;n=d+48|0;m=d+52|0;l=d+56|0;k=d+60|0;j=d+64|0;h=d+68|0;r=d+72|0;b=d+76|0;z=0-(c[p>>2]|0)|0;x=0-(c[n>>2]|0)|0;w=0-(c[m>>2]|0)|0;v=0-(c[l>>2]|0)|0;u=0-(c[k>>2]|0)|0;t=0-(c[j>>2]|0)|0;s=0-(c[h>>2]|0)|0;d=0-(c[r>>2]|0)|0;o=0-(c[b>>2]|0)|0;c[e>>2]=1-(c[q>>2]|0);c[y>>2]=z;c[e+8>>2]=x;c[e+12>>2]=w;c[e+16>>2]=v;c[e+20>>2]=u;c[e+24>>2]=t;c[e+28>>2]=s;c[e+32>>2]=d;c[e+36>>2]=o;wc(e,e);o=f+4|0;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;p=c[p>>2]|0;n=c[n>>2]|0;m=c[m>>2]|0;l=c[l>>2]|0;k=c[k>>2]|0;j=c[j>>2]|0;h=c[h>>2]|0;d=c[r>>2]|0;b=c[b>>2]|0;c[f>>2]=(c[q>>2]|0)+1;c[o>>2]=p;c[f+8>>2]=n;c[f+12>>2]=m;c[f+16>>2]=l;c[f+20>>2]=k;c[f+24>>2]=j;c[f+28>>2]=h;c[f+32>>2]=d;c[f+36>>2]=b;uc(f,f,e);tc(a,f);f=0;i=g;return f|0}function ag(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;g=i=i+63&-64;i=i+272|0;h=g;g=g+208|0;f=h+64|0;j=h;l=400;m=j+64|0;do{c[j>>2]=c[l>>2];j=j+4|0;l=l+4|0}while((j|0)<(m|0));j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=f;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;l=e;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));Fd(h,g)|0;a[g>>0]=(d[g>>0]|0)&248;j=g+31|0;a[j>>0]=(d[j>>0]|0)&63|64;j=b;l=g;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));i=k;return 0}function bg(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;Ga=i;za=i=i+63&-64;i=i+2976|0;Ca=za+2760|0;Aa=za+2504|0;Ba=za+2248|0;ya=za+968|0;Da=za+808|0;Ea=za+648|0;s=za+488|0;o=za;p=za+2912|0;Fa=za+2880|0;r=za+328|0;za=za+208|0;q=b+32|0;m=0;n=32;j=1;while(1){n=n+-1|0;k=a[q+n>>0]|0;l=a[33213+n>>0]|0;j=j&255;m=((k&255)-(l&255)|0)>>>8&j|m&255;if(!n)break;else j=(((l^k)&255)+65535|0)>>>8&j}if(!m){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[16+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[48+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[80+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[112+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[144+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[176+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[208+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[240+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[272+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[304+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[336+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[368+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}if(yc(r,h)|0){b=-1;i=Ga;return b|0}if(!((a[h+31>>0]|(a[h+30>>0]|(a[h+29>>0]|(a[h+28>>0]|(a[h+27>>0]|(a[h+26>>0]|(a[h+25>>0]|(a[h+24>>0]|(a[h+23>>0]|(a[h+22>>0]|(a[h+21>>0]|(a[h+20>>0]|(a[h+19>>0]|(a[h+18>>0]|(a[h+17>>0]|(a[h+16>>0]|(a[h+15>>0]|(a[h+14>>0]|(a[h+13>>0]|(a[h+12>>0]|(a[h+11>>0]|(a[h+10>>0]|(a[h+9>>0]|(a[h+8>>0]|(a[h+7>>0]|(a[h+6>>0]|(a[h+5>>0]|(a[h+4>>0]|(a[h+3>>0]|(a[h+2>>0]|(a[h+1>>0]|a[h>>0])))))))))))))))))))))))))))))))<<24>>24)){b=-1;i=Ga;return b|0}j=o+64|0;m=j;c[m>>2]=0;c[m+4>>2]=0;m=o;l=400;n=m+64|0;do{c[m>>2]=c[l>>2];m=m+4|0;l=l+4|0}while((m|0)<(n|0));k=o+72|0;m=k;c[m>>2]=256;c[m+4>>2]=0;m=j;c[m>>2]=0;c[m+4>>2]=0;m=o+80|0;l=b;n=m+32|0;do{a[m>>0]=a[l>>0]|0;m=m+1|0;l=l+1|0}while((m|0)<(n|0));m=k;c[m>>2]=512;c[m+4>>2]=0;m=j;c[m>>2]=0;c[m+4>>2]=0;m=o+112|0;l=h;n=m+32|0;do{a[m>>0]=a[l>>0]|0;m=m+1|0;l=l+1|0}while((m|0)<(n|0));Dd(o,e,f,g)|0;Fd(o,p)|0;Ec(p);j=0;do{a[Aa+j>>0]=(d[p+(j>>3)>>0]|0)>>>(j&7)&1;j=j+1|0}while((j|0)!=256);o=0;while(1){f=Aa+o|0;a:do{if(a[f>>0]|0){g=1;do{j=g+o|0;if((j|0)>=256)break a;n=Aa+j|0;k=a[n>>0]|0;b:do{if(k<<24>>24){m=a[f>>0]|0;k=k<<24>>24<<g;l=m+k|0;if((l|0)<16){a[f>>0]=l;a[n>>0]=0;break}k=m-k|0;if((k|0)<=-16)break a;a[f>>0]=k;k=n;do{a[k>>0]=0;j=j+1|0;if((j|0)>=256)break b;k=Aa+j|0}while((a[k>>0]|0)!=0);a[k>>0]=1}}while(0);g=g+1|0}while((g|0)<7)}}while(0);o=o+1|0;if((o|0)==256){j=0;break}}do{a[Ba+j>>0]=(d[q+(j>>3)>>0]|0)>>>(j&7)&1;j=j+1|0}while((j|0)!=256);o=0;do{f=Ba+o|0;c:do{if(a[f>>0]|0){g=1;do{j=g+o|0;if((j|0)>=256)break c;n=Ba+j|0;k=a[n>>0]|0;d:do{if(k<<24>>24){m=a[f>>0]|0;k=k<<24>>24<<g;l=m+k|0;if((l|0)<16){a[f>>0]=l;a[n>>0]=0;break}k=m-k|0;if((k|0)<=-16)break c;a[f>>0]=k;k=n;do{a[k>>0]=0;j=j+1|0;if((j|0)>=256)break d;k=Ba+j|0}while((a[k>>0]|0)!=0);a[k>>0]=1}}while(0);g=g+1|0}while((g|0)<7)}}while(0);o=o+1|0}while((o|0)!=256);Bc(ya,r);ra=c[r+4>>2]|0;n=c[r+8>>2]|0;m=c[r+12>>2]|0;xa=c[r+16>>2]|0;wa=c[r+20>>2]|0;va=c[r+24>>2]|0;ua=c[r+28>>2]|0;ta=c[r+32>>2]|0;sa=c[r+36>>2]|0;c[Ca>>2]=c[r>>2];c[Ca+4>>2]=ra;c[Ca+8>>2]=n;c[Ca+12>>2]=m;c[Ca+16>>2]=xa;c[Ca+20>>2]=wa;c[Ca+24>>2]=va;c[Ca+28>>2]=ua;c[Ca+32>>2]=ta;c[Ca+36>>2]=sa;sa=c[r+44>>2]|0;ta=c[r+48>>2]|0;ua=c[r+52>>2]|0;va=c[r+56>>2]|0;wa=c[r+60>>2]|0;xa=c[r+64>>2]|0;m=c[r+68>>2]|0;n=c[r+72>>2]|0;ra=c[r+76>>2]|0;c[Ca+40>>2]=c[r+40>>2];c[Ca+44>>2]=sa;c[Ca+48>>2]=ta;c[Ca+52>>2]=ua;c[Ca+56>>2]=va;c[Ca+60>>2]=wa;c[Ca+64>>2]=xa;c[Ca+68>>2]=m;c[Ca+72>>2]=n;c[Ca+76>>2]=ra;ra=c[r+84>>2]|0;n=c[r+88>>2]|0;m=c[r+92>>2]|0;xa=c[r+96>>2]|0;wa=c[r+100>>2]|0;va=c[r+104>>2]|0;ua=c[r+108>>2]|0;ta=c[r+112>>2]|0;sa=c[r+116>>2]|0;c[Ca+80>>2]=c[r+80>>2];c[Ca+84>>2]=ra;c[Ca+88>>2]=n;c[Ca+92>>2]=m;c[Ca+96>>2]=xa;c[Ca+100>>2]=wa;c[Ca+104>>2]=va;c[Ca+108>>2]=ua;c[Ca+112>>2]=ta;c[Ca+116>>2]=sa;Ac(Da,Ca);sa=Da+120|0;uc(s,Da,sa);ta=Da+40|0;ua=Da+80|0;uc(s+40|0,ta,ua);uc(s+80|0,ua,sa);uc(s+120|0,Da,ta);xc(Da,s,ya);uc(Ea,Da,sa);va=Ea+40|0;uc(va,ta,ua);wa=Ea+80|0;uc(wa,ua,sa);xa=Ea+120|0;uc(xa,Da,ta);m=ya+160|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+320|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+480|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+640|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+800|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+960|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);Bc(ya+1120|0,Ea);m=za;n=m+40|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));qa=za+40|0;c[qa>>2]=1;m=za+44|0;n=m+36|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));ra=za+80|0;c[ra>>2]=1;m=za+84|0;n=m+36|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));k=255;while(1){if(a[Aa+k>>0]|0){j=k;break}if(a[Ba+k>>0]|0){j=k;break}j=k+-1|0;if((k|0)>0)k=j;else break}if((j|0)>-1){l=Ea+44|0;m=Ea+48|0;n=Ea+52|0;f=Ea+56|0;g=Ea+60|0;o=Ea+64|0;e=Ea+68|0;h=Ea+72|0;p=Ea+76|0;q=Ea+4|0;r=Ea+8|0;s=Ea+12|0;t=Ea+16|0;u=Ea+20|0;v=Ea+24|0;w=Ea+28|0;x=Ea+32|0;y=Ea+36|0;z=Da+4|0;A=Da+8|0;B=Da+12|0;C=Da+16|0;D=Da+20|0;E=Da+24|0;F=Da+28|0;G=Da+32|0;H=Da+36|0;I=Da+44|0;J=Da+48|0;K=Da+52|0;L=Da+56|0;M=Da+60|0;N=Da+64|0;O=Da+68|0;P=Da+72|0;Q=Da+76|0;R=Ea+84|0;S=Ea+88|0;T=Ea+92|0;U=Ea+96|0;V=Ea+100|0;W=Ea+104|0;X=Ea+108|0;Y=Ea+112|0;Z=Ea+116|0;_=Da+84|0;$=Da+88|0;aa=Da+92|0;ba=Da+96|0;ca=Da+100|0;da=Da+104|0;ea=Da+108|0;fa=Da+112|0;ga=Da+116|0;ha=Da+124|0;ia=Da+128|0;ja=Da+132|0;ka=Da+136|0;la=Da+140|0;ma=Da+144|0;na=Da+148|0;oa=Da+152|0;pa=Da+156|0;while(1){Ac(Da,za);k=a[Aa+j>>0]|0;do{if(k<<24>>24>0){uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);xc(Da,Ea,ya+(((k<<24>>24|0)/2|0)*160|0)|0)}else{if(k<<24>>24>=0)break;uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);Ya=(k<<24>>24|0)/-2|0;hb=c[va>>2]|0;Va=c[l>>2]|0;Na=c[m>>2]|0;_a=c[n>>2]|0;cb=c[f>>2]|0;gb=c[g>>2]|0;Ia=c[o>>2]|0;Ma=c[e>>2]|0;Qa=c[h>>2]|0;Ua=c[p>>2]|0;Za=c[Ea>>2]|0;Ra=c[q>>2]|0;Ja=c[r>>2]|0;ab=c[s>>2]|0;eb=c[t>>2]|0;k=c[u>>2]|0;Ka=c[v>>2]|0;Oa=c[w>>2]|0;Sa=c[x>>2]|0;Wa=c[y>>2]|0;c[Da>>2]=Za+hb;c[z>>2]=Ra+Va;c[A>>2]=Ja+Na;c[B>>2]=ab+_a;c[C>>2]=eb+cb;c[D>>2]=k+gb;c[E>>2]=Ka+Ia;c[F>>2]=Oa+Ma;c[G>>2]=Sa+Qa;c[H>>2]=Wa+Ua;c[ta>>2]=hb-Za;c[I>>2]=Va-Ra;c[J>>2]=Na-Ja;c[K>>2]=_a-ab;c[L>>2]=cb-eb;c[M>>2]=gb-k;c[N>>2]=Ia-Ka;c[O>>2]=Ma-Oa;c[P>>2]=Qa-Sa;c[Q>>2]=Ua-Wa;uc(ua,Da,ya+(Ya*160|0)+40|0);uc(ta,ta,ya+(Ya*160|0)|0);uc(sa,ya+(Ya*160|0)+120|0,xa);uc(Da,wa,ya+(Ya*160|0)+80|0);Ya=c[Da>>2]<<1;Wa=c[z>>2]<<1;Ua=c[A>>2]<<1;Sa=c[B>>2]<<1;Qa=c[C>>2]<<1;Oa=c[D>>2]<<1;Ma=c[E>>2]<<1;Ka=c[F>>2]<<1;Ia=c[G>>2]<<1;k=c[H>>2]<<1;gb=c[ua>>2]|0;eb=c[_>>2]|0;cb=c[$>>2]|0;ab=c[aa>>2]|0;_a=c[ba>>2]|0;Ja=c[ca>>2]|0;Na=c[da>>2]|0;Ra=c[ea>>2]|0;Va=c[fa>>2]|0;Za=c[ga>>2]|0;hb=c[ta>>2]|0;fb=c[I>>2]|0;db=c[J>>2]|0;bb=c[K>>2]|0;$a=c[L>>2]|0;Ha=c[M>>2]|0;La=c[N>>2]|0;Pa=c[O>>2]|0;Ta=c[P>>2]|0;Xa=c[Q>>2]|0;c[Da>>2]=gb-hb;c[z>>2]=eb-fb;c[A>>2]=cb-db;c[B>>2]=ab-bb;c[C>>2]=_a-$a;c[D>>2]=Ja-Ha;c[E>>2]=Na-La;c[F>>2]=Ra-Pa;c[G>>2]=Va-Ta;c[H>>2]=Za-Xa;c[ta>>2]=hb+gb;c[I>>2]=fb+eb;c[J>>2]=db+cb;c[K>>2]=bb+ab;c[L>>2]=$a+_a;c[M>>2]=Ha+Ja;c[N>>2]=La+Na;c[O>>2]=Pa+Ra;c[P>>2]=Ta+Va;c[Q>>2]=Xa+Za;Za=c[sa>>2]|0;Xa=c[ha>>2]|0;Va=c[ia>>2]|0;Ta=c[ja>>2]|0;Ra=c[ka>>2]|0;Pa=c[la>>2]|0;Na=c[ma>>2]|0;La=c[na>>2]|0;Ja=c[oa>>2]|0;Ha=c[pa>>2]|0;c[ua>>2]=Ya-Za;c[_>>2]=Wa-Xa;c[$>>2]=Ua-Va;c[aa>>2]=Sa-Ta;c[ba>>2]=Qa-Ra;c[ca>>2]=Oa-Pa;c[da>>2]=Ma-Na;c[ea>>2]=Ka-La;c[fa>>2]=Ia-Ja;c[ga>>2]=k-Ha;c[sa>>2]=Za+Ya;c[ha>>2]=Xa+Wa;c[ia>>2]=Va+Ua;c[ja>>2]=Ta+Sa;c[ka>>2]=Ra+Qa;c[la>>2]=Pa+Oa;c[ma>>2]=Na+Ma;c[na>>2]=La+Ka;c[oa>>2]=Ja+Ia;c[pa>>2]=Ha+k}}while(0);k=a[Ba+j>>0]|0;do{if(k<<24>>24>0){uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);zc(Da,Ea,584+(((k<<24>>24|0)/2|0)*120|0)|0)}else{if(k<<24>>24>=0)break;uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);Ra=(k<<24>>24|0)/-2|0;k=c[va>>2]|0;Ua=c[l>>2]|0;ab=c[m>>2]|0;Pa=c[n>>2]|0;La=c[f>>2]|0;Ha=c[g>>2]|0;fb=c[o>>2]|0;bb=c[e>>2]|0;Za=c[h>>2]|0;Va=c[p>>2]|0;Qa=c[Ea>>2]|0;Ya=c[q>>2]|0;eb=c[r>>2]|0;Na=c[s>>2]|0;Ja=c[t>>2]|0;hb=c[u>>2]|0;db=c[v>>2]|0;$a=c[w>>2]|0;Xa=c[x>>2]|0;Ta=c[y>>2]|0;c[Da>>2]=Qa+k;c[z>>2]=Ya+Ua;c[A>>2]=eb+ab;c[B>>2]=Na+Pa;c[C>>2]=Ja+La;c[D>>2]=hb+Ha;c[E>>2]=db+fb;c[F>>2]=$a+bb;c[G>>2]=Xa+Za;c[H>>2]=Ta+Va;c[ta>>2]=k-Qa;c[I>>2]=Ua-Ya;c[J>>2]=ab-eb;c[K>>2]=Pa-Na;c[L>>2]=La-Ja;c[M>>2]=Ha-hb;c[N>>2]=fb-db;c[O>>2]=bb-$a;c[P>>2]=Za-Xa;c[Q>>2]=Va-Ta;uc(ua,Da,584+(Ra*120|0)+40|0);uc(ta,ta,584+(Ra*120|0)|0);uc(sa,584+(Ra*120|0)+80|0,xa);Ra=c[wa>>2]<<1;Ta=c[R>>2]<<1;Va=c[S>>2]<<1;Xa=c[T>>2]<<1;Za=c[U>>2]<<1;$a=c[V>>2]<<1;bb=c[W>>2]<<1;db=c[X>>2]<<1;fb=c[Y>>2]<<1;hb=c[Z>>2]<<1;Ha=c[ua>>2]|0;Ja=c[_>>2]|0;La=c[$>>2]|0;Na=c[aa>>2]|0;Pa=c[ba>>2]|0;eb=c[ca>>2]|0;ab=c[da>>2]|0;Ya=c[ea>>2]|0;Ua=c[fa>>2]|0;Qa=c[ga>>2]|0;k=c[ta>>2]|0;Ia=c[I>>2]|0;Ka=c[J>>2]|0;Ma=c[K>>2]|0;Oa=c[L>>2]|0;gb=c[M>>2]|0;cb=c[N>>2]|0;_a=c[O>>2]|0;Wa=c[P>>2]|0;Sa=c[Q>>2]|0;c[Da>>2]=Ha-k;c[z>>2]=Ja-Ia;c[A>>2]=La-Ka;c[B>>2]=Na-Ma;c[C>>2]=Pa-Oa;c[D>>2]=eb-gb;c[E>>2]=ab-cb;c[F>>2]=Ya-_a;c[G>>2]=Ua-Wa;c[H>>2]=Qa-Sa;c[ta>>2]=k+Ha;c[I>>2]=Ia+Ja;c[J>>2]=Ka+La;c[K>>2]=Ma+Na;c[L>>2]=Oa+Pa;c[M>>2]=gb+eb;c[N>>2]=cb+ab;c[O>>2]=_a+Ya;c[P>>2]=Wa+Ua;c[Q>>2]=Sa+Qa;Qa=c[sa>>2]|0;Sa=c[ha>>2]|0;Ua=c[ia>>2]|0;Wa=c[ja>>2]|0;Ya=c[ka>>2]|0;_a=c[la>>2]|0;ab=c[ma>>2]|0;cb=c[na>>2]|0;eb=c[oa>>2]|0;gb=c[pa>>2]|0;c[ua>>2]=Ra-Qa;c[_>>2]=Ta-Sa;c[$>>2]=Va-Ua;c[aa>>2]=Xa-Wa;c[ba>>2]=Za-Ya;c[ca>>2]=$a-_a;c[da>>2]=bb-ab;c[ea>>2]=db-cb;c[fa>>2]=fb-eb;c[ga>>2]=hb-gb;c[sa>>2]=Qa+Ra;c[ha>>2]=Sa+Ta;c[ia>>2]=Ua+Va;c[ja>>2]=Wa+Xa;c[ka>>2]=Ya+Za;c[la>>2]=_a+$a;c[ma>>2]=ab+bb;c[na>>2]=cb+db;c[oa>>2]=eb+fb;c[pa>>2]=gb+hb}}while(0);uc(za,Da,sa);uc(qa,ta,ua);uc(ra,ua,sa);if((j|0)>0)j=j+-1|0;else break}}wc(Aa,ra);uc(Ba,za,Aa);uc(ya,qa,Aa);tc(Fa,ya);tc(Ca,Ba);j=Fa+31|0;a[j>>0]=d[j>>0]^d[Ca>>0]<<7;j=0;k=0;do{j=(a[b+k>>0]^a[Fa+k>>0])&255|j;k=k+1|0}while((k|0)!=32);j=(j+511|0)>>>8&1;k=(Fa|0)==(b|0);l=0;m=0;do{l=a[Fa+m>>0]^a[b+m>>0]|l;m=m+1|0}while((m|0)!=32);hb=(k?-1:j+-1|0)|(((l&255)+511|0)>>>8&1)+-1;i=Ga;return hb|0}function cg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;e=lh(e|0,f|0,-64,-1)|0;f=C;do{if(!(f>>>0>0|(f|0)==0&e>>>0>4294967231)){h=d+64|0;if(bg(d,h,e,f,g)|0){nh(a|0,0,e|0)|0;break}if(b|0){d=b;c[d>>2]=e;c[d+4>>2]=f}rh(a|0,h|0,e|0)|0;d=0;return d|0}}while(0);if(!b){d=-1;return d|0}d=b;c[d>>2]=0;c[d+4>>2]=0;d=-1;return d|0}function dg(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,vc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Dc=0,Fc=0,Gc=0;z=i;p=i=i+63&-64;i=i+896|0;v=p+208|0;u=p+656|0;w=p+616|0;x=p+576|0;s=p;q=p+824|0;t=p+760|0;r=p+696|0;p=p+416|0;k=v+64|0;y=v;A=400;B=y+64|0;do{c[y>>2]=c[A>>2];y=y+4|0;A=A+4|0}while((y|0)<(B|0));y=v+72|0;c[y>>2]=256;c[y+4>>2]=0;y=k;c[y>>2]=0;c[y+4>>2]=0;y=v+80|0;A=j;B=y+32|0;do{a[y>>0]=a[A>>0]|0;y=y+1|0;A=A+1|0}while((y|0)<(B|0));Fd(v,q)|0;a[q>>0]=(d[q>>0]|0)&248;k=q+31|0;a[k>>0]=(d[k>>0]|0)&63|64;l=s+64|0;y=l;c[y>>2]=0;c[y+4>>2]=0;y=s;A=400;B=y+64|0;do{c[y>>2]=c[A>>2];y=y+4|0;A=A+4|0}while((y|0)<(B|0));m=s+72|0;n=m;c[n>>2]=256;c[n+4>>2]=0;n=l;c[n>>2]=0;c[n+4>>2]=0;n=s+80|0;y=n;A=q+32|0;B=y+32|0;do{a[y>>0]=a[A>>0]|0;y=y+1|0;A=A+1|0}while((y|0)<(B|0));Dd(s,f,g,h)|0;Fd(s,t)|0;o=b+32|0;rh(o|0,j+32|0,32)|0;Ec(t);Cc(p,t);wc(u,p+80|0);uc(w,p,u);uc(x,p+40|0,u);tc(b,x);tc(v,w);y=b+31|0;a[y>>0]=(d[y>>0]|0)^(d[v>>0]|0)<<7;y=l;c[y>>2]=0;c[y+4>>2]=0;y=s;A=400;B=y+64|0;do{c[y>>2]=c[A>>2];y=y+4|0;A=A+4|0}while((y|0)<(B|0));y=m;c[y>>2]=512;c[y+4>>2]=0;y=l;c[y>>2]=0;c[y+4>>2]=0;y=n;A=b;B=y+64|0;do{a[y>>0]=a[A>>0]|0;y=y+1|0;A=A+1|0}while((y|0)<(B|0));Dd(s,f,g,h)|0;Fd(s,r)|0;Ec(r);I=a[r+2>>0]|0;Sa=d[r>>0]|0;wb=ph(d[r+1>>0]|0|0,0,8)|0;pb=C;I=I&255;jb=ph(I|0,0,16)|0;jb=wb|Sa|jb&2031616;Sa=ph(d[r+3>>0]|0|0,0,8)|0;wb=C;E=ph(d[r+4>>0]|0|0,0,16)|0;wb=wb|C;tb=d[r+5>>0]|0;cb=ph(tb|0,0,24)|0;wb=oh(Sa|I|E|cb|0,wb|C|0,5)|0;wb=wb&2097151;cb=a[r+7>>0]|0;E=ph(d[r+6>>0]|0|0,0,8)|0;I=C;cb=cb&255;Sa=ph(cb|0,0,16)|0;I=oh(E|tb|Sa|0,I|C|0,2)|0;I=I&2097151;Sa=ph(d[r+8>>0]|0|0,0,8)|0;tb=C;E=ph(d[r+9>>0]|0|0,0,16)|0;tb=tb|C;v=d[r+10>>0]|0;Ra=ph(v|0,0,24)|0;tb=oh(Sa|cb|E|Ra|0,tb|C|0,7)|0;tb=tb&2097151;Ra=ph(d[r+11>>0]|0|0,0,8)|0;E=C;cb=ph(d[r+12>>0]|0|0,0,16)|0;E=E|C;Sa=d[r+13>>0]|0;y=ph(Sa|0,0,24)|0;E=oh(Ra|v|cb|y|0,E|C|0,4)|0;E=E&2097151;y=a[r+15>>0]|0;cb=ph(d[r+14>>0]|0|0,0,8)|0;v=C;y=y&255;Ra=ph(y|0,0,16)|0;v=oh(cb|Sa|Ra|0,v|C|0,1)|0;v=v&2097151;Ra=ph(d[r+16>>0]|0|0,0,8)|0;Sa=C;cb=ph(d[r+17>>0]|0|0,0,16)|0;Sa=Sa|C;Bc=d[r+18>>0]|0;ia=ph(Bc|0,0,24)|0;Sa=oh(Ra|y|cb|ia|0,Sa|C|0,6)|0;Sa=Sa&2097151;ia=a[r+20>>0]|0;cb=ph(d[r+19>>0]|0|0,0,8)|0;y=C;ia=ph(ia&255|0,0,16)|0;y=oh(cb|Bc|ia|0,y|C|0,3)|0;ia=C;Bc=a[r+23>>0]|0;cb=d[r+21>>0]|0;Ra=ph(d[r+22>>0]|0|0,0,8)|0;rb=C;Bc=Bc&255;Pa=ph(Bc|0,0,16)|0;Pa=Ra|cb|Pa&2031616;cb=ph(d[r+24>>0]|0|0,0,8)|0;Ra=C;h=ph(d[r+25>>0]|0|0,0,16)|0;Ra=Ra|C;Ja=d[r+26>>0]|0;f=ph(Ja|0,0,24)|0;Ra=oh(cb|Bc|h|f|0,Ra|C|0,5)|0;Ra=Ra&2097151;f=a[r+28>>0]|0;h=ph(d[r+27>>0]|0|0,0,8)|0;Bc=C;f=f&255;cb=ph(f|0,0,16)|0;Bc=oh(h|Ja|cb|0,Bc|C|0,2)|0;Bc=Bc&2097151;cb=ph(d[r+29>>0]|0|0,0,8)|0;Ja=C;h=ph(d[r+30>>0]|0|0,0,16)|0;Ja=Ja|C;r=ph(d[r+31>>0]|0|0,0,24)|0;r=oh(cb|f|h|r|0,Ja|C|0,7)|0;Ja=C;h=a[q+2>>0]|0;f=d[q>>0]|0;cb=ph(d[q+1>>0]|0|0,0,8)|0;ha=C;h=h&255;ga=ph(h|0,0,16)|0;ga=cb|f|ga&2031616;f=ph(d[q+3>>0]|0|0,0,8)|0;cb=C;ka=ph(d[q+4>>0]|0|0,0,16)|0;cb=cb|C;p=d[q+5>>0]|0;yc=ph(p|0,0,24)|0;cb=oh(f|h|ka|yc|0,cb|C|0,5)|0;cb=cb&2097151;yc=a[q+7>>0]|0;ka=ph(d[q+6>>0]|0|0,0,8)|0;h=C;yc=yc&255;f=ph(yc|0,0,16)|0;h=oh(ka|p|f|0,h|C|0,2)|0;h=h&2097151;f=ph(d[q+8>>0]|0|0,0,8)|0;p=C;ka=ph(d[q+9>>0]|0|0,0,16)|0;p=p|C;Za=d[q+10>>0]|0;Oa=ph(Za|0,0,24)|0;p=oh(f|yc|ka|Oa|0,p|C|0,7)|0;p=p&2097151;Oa=ph(d[q+11>>0]|0|0,0,8)|0;ka=C;yc=ph(d[q+12>>0]|0|0,0,16)|0;ka=ka|C;f=d[q+13>>0]|0;Gc=ph(f|0,0,24)|0;ka=oh(Oa|Za|yc|Gc|0,ka|C|0,4)|0;ka=ka&2097151;Gc=a[q+15>>0]|0;yc=ph(d[q+14>>0]|0|0,0,8)|0;Za=C;Gc=Gc&255;Oa=ph(Gc|0,0,16)|0;Za=oh(yc|f|Oa|0,Za|C|0,1)|0;Za=Za&2097151;Oa=ph(d[q+16>>0]|0|0,0,8)|0;f=C;yc=ph(d[q+17>>0]|0|0,0,16)|0;f=f|C;Q=d[q+18>>0]|0;Ab=ph(Q|0,0,24)|0;f=oh(Oa|Gc|yc|Ab|0,f|C|0,6)|0;f=f&2097151;Ab=a[q+20>>0]|0;yc=ph(d[q+19>>0]|0|0,0,8)|0;Gc=C;Ab=ph(Ab&255|0,0,16)|0;Gc=oh(yc|Q|Ab|0,Gc|C|0,3)|0;Ab=C;Q=a[q+23>>0]|0;yc=d[q+21>>0]|0;Oa=ph(d[q+22>>0]|0|0,0,8)|0;Ca=C;Q=Q&255;ta=ph(Q|0,0,16)|0;ta=Oa|yc|ta&2031616;yc=ph(d[q+24>>0]|0|0,0,8)|0;Oa=C;La=ph(d[q+25>>0]|0|0,0,16)|0;Oa=Oa|C;Ha=d[q+26>>0]|0;zc=ph(Ha|0,0,24)|0;Oa=oh(yc|Q|La|zc|0,Oa|C|0,5)|0;Oa=Oa&2097151;zc=a[q+28>>0]|0;La=ph(d[q+27>>0]|0|0,0,8)|0;Q=C;zc=zc&255;yc=ph(zc|0,0,16)|0;Q=oh(La|Ha|yc|0,Q|C|0,2)|0;Q=Q&2097151;yc=ph(d[q+29>>0]|0|0,0,8)|0;Ha=C;La=ph(d[q+30>>0]|0|0,0,16)|0;Ha=Ha|C;k=ph(d[k>>0]|0|0,0,24)|0;k=oh(yc|zc|La|k|0,Ha|C|0,7)|0;Ha=C;La=a[t+2>>0]|0;zc=d[t>>0]|0;yc=ph(d[t+1>>0]|0|0,0,8)|0;aa=C;La=La&255;Ac=ph(La|0,0,16)|0;Wa=ph(d[t+3>>0]|0|0,0,8)|0;Da=C;Fa=ph(d[t+4>>0]|0|0,0,16)|0;Da=Da|C;ob=d[t+5>>0]|0;ya=ph(ob|0,0,24)|0;Da=oh(Wa|La|Fa|ya|0,Da|C|0,5)|0;ya=a[t+7>>0]|0;Fa=ph(d[t+6>>0]|0|0,0,8)|0;La=C;ya=ya&255;Wa=ph(ya|0,0,16)|0;La=oh(Fa|ob|Wa|0,La|C|0,2)|0;Wa=ph(d[t+8>>0]|0|0,0,8)|0;ob=C;Fa=ph(d[t+9>>0]|0|0,0,16)|0;ob=ob|C;W=d[t+10>>0]|0;N=ph(W|0,0,24)|0;ob=oh(Wa|ya|Fa|N|0,ob|C|0,7)|0;N=ph(d[t+11>>0]|0|0,0,8)|0;Fa=C;ya=ph(d[t+12>>0]|0|0,0,16)|0;Fa=Fa|C;Wa=d[t+13>>0]|0;G=ph(Wa|0,0,24)|0;Fa=oh(N|W|ya|G|0,Fa|C|0,4)|0;G=a[t+15>>0]|0;ya=ph(d[t+14>>0]|0|0,0,8)|0;W=C;G=G&255;N=ph(G|0,0,16)|0;W=oh(ya|Wa|N|0,W|C|0,1)|0;N=ph(d[t+16>>0]|0|0,0,8)|0;Wa=C;ya=ph(d[t+17>>0]|0|0,0,16)|0;Wa=Wa|C;T=d[t+18>>0]|0;w=ph(T|0,0,24)|0;Wa=oh(N|G|ya|w|0,Wa|C|0,6)|0;w=a[t+20>>0]|0;ya=ph(d[t+19>>0]|0|0,0,8)|0;G=C;w=ph(w&255|0,0,16)|0;G=oh(ya|T|w|0,G|C|0,3)|0;w=C;T=a[t+23>>0]|0;ya=d[t+21>>0]|0;N=ph(d[t+22>>0]|0|0,0,8)|0;ca=C;T=T&255;da=ph(T|0,0,16)|0;Aa=ph(d[t+24>>0]|0|0,0,8)|0;M=C;Ga=ph(d[t+25>>0]|0|0,0,16)|0;M=M|C;A=d[t+26>>0]|0;sa=ph(A|0,0,24)|0;M=oh(Aa|T|Ga|sa|0,M|C|0,5)|0;sa=a[t+28>>0]|0;Ga=ph(d[t+27>>0]|0|0,0,8)|0;T=C;sa=sa&255;Aa=ph(sa|0,0,16)|0;T=oh(Ga|A|Aa|0,T|C|0,2)|0;Aa=ph(d[t+29>>0]|0|0,0,8)|0;A=C;Ga=ph(d[t+30>>0]|0|0,0,16)|0;A=A|C;j=ph(d[t+31>>0]|0|0,0,24)|0;A=oh(Aa|sa|Ga|j|0,A|C|0,7)|0;j=C;Ga=wh(ga|0,ha|0,jb|0,pb|0)|0;Ga=lh(yc|zc|Ac&2031616|0,aa|0,Ga|0,C|0)|0;aa=C;Ac=wh(cb|0,0,jb|0,pb|0)|0;zc=C;yc=wh(ga|0,ha|0,wb|0,0)|0;sa=C;Aa=wh(h|0,0,jb|0,pb|0)|0;Ka=C;Ba=wh(cb|0,0,wb|0,0)|0;qc=C;oa=wh(ga|0,ha|0,I|0,0)|0;oa=lh(Ba|0,qc|0,oa|0,C|0)|0;Ka=lh(oa|0,C|0,Aa|0,Ka|0)|0;La=lh(Ka|0,C|0,La&2097151|0,0)|0;Ka=C;Aa=wh(p|0,0,jb|0,pb|0)|0;oa=C;qc=wh(h|0,0,wb|0,0)|0;Ba=C;xc=wh(cb|0,0,I|0,0)|0;vc=C;sc=wh(ga|0,ha|0,tb|0,0)|0;rc=C;Na=wh(ka|0,0,jb|0,pb|0)|0;Ea=C;hc=wh(p|0,0,wb|0,0)|0;X=C;jc=wh(h|0,0,I|0,0)|0;Ma=C;kc=wh(cb|0,0,tb|0,0)|0;lc=C;ic=wh(ga|0,ha|0,E|0,0)|0;ic=lh(kc|0,lc|0,ic|0,C|0)|0;Ma=lh(ic|0,C|0,jc|0,Ma|0)|0;X=lh(Ma|0,C|0,hc|0,X|0)|0;Ea=lh(X|0,C|0,Na|0,Ea|0)|0;Fa=lh(Ea|0,C|0,Fa&2097151|0,0)|0;Ea=C;Na=wh(Za|0,0,jb|0,pb|0)|0;X=C;hc=wh(ka|0,0,wb|0,0)|0;Ma=C;jc=wh(p|0,0,I|0,0)|0;ic=C;lc=wh(h|0,0,tb|0,0)|0;kc=C;pc=wh(cb|0,0,E|0,0)|0;oc=C;nc=wh(ga|0,ha|0,v|0,0)|0;mc=C;ba=wh(f|0,0,jb|0,pb|0)|0;Xa=C;Wb=wh(Za|0,0,wb|0,0)|0;ja=C;Yb=wh(ka|0,0,I|0,0)|0;Vb=C;_b=wh(p|0,0,tb|0,0)|0;Xb=C;ac=wh(h|0,0,E|0,0)|0;Zb=C;bc=wh(cb|0,0,v|0,0)|0;cc=C;$b=wh(ga|0,ha|0,Sa|0,0)|0;$b=lh(bc|0,cc|0,$b|0,C|0)|0;Zb=lh($b|0,C|0,ac|0,Zb|0)|0;Xb=lh(Zb|0,C|0,_b|0,Xb|0)|0;Vb=lh(Xb|0,C|0,Yb|0,Vb|0)|0;ja=lh(Vb|0,C|0,Wb|0,ja|0)|0;Xa=lh(ja|0,C|0,ba|0,Xa|0)|0;Wa=lh(Xa|0,C|0,Wa&2097151|0,0)|0;Xa=C;ba=wh(Gc|0,Ab|0,jb|0,pb|0)|0;ja=C;Wb=wh(f|0,0,wb|0,0)|0;Vb=C;Yb=wh(Za|0,0,I|0,0)|0;Xb=C;_b=wh(ka|0,0,tb|0,0)|0;Zb=C;ac=wh(p|0,0,E|0,0)|0;$b=C;cc=wh(h|0,0,v|0,0)|0;bc=C;gc=wh(cb|0,0,Sa|0,0)|0;fc=C;ec=wh(ga|0,ha|0,y|0,ia|0)|0;dc=C;za=wh(ta|0,Ca|0,jb|0,pb|0)|0;Eb=C;Fb=wh(Gc|0,Ab|0,wb|0,0)|0;Gb=C;Hb=wh(f|0,0,I|0,0)|0;Ib=C;Jb=wh(Za|0,0,tb|0,0)|0;Kb=C;Lb=wh(ka|0,0,E|0,0)|0;Mb=C;Nb=wh(p|0,0,v|0,0)|0;Ob=C;Pb=wh(h|0,0,Sa|0,0)|0;Qb=C;Sb=wh(cb|0,0,y|0,ia|0)|0;Tb=C;Ub=wh(ga|0,ha|0,Pa|0,rb|0)|0;Ub=lh(Sb|0,Tb|0,Ub|0,C|0)|0;Qb=lh(Ub|0,C|0,Pb|0,Qb|0)|0;Ob=lh(Qb|0,C|0,Nb|0,Ob|0)|0;Mb=lh(Ob|0,C|0,Lb|0,Mb|0)|0;Kb=lh(Mb|0,C|0,Jb|0,Kb|0)|0;Ib=lh(Kb|0,C|0,Hb|0,Ib|0)|0;Gb=lh(Ib|0,C|0,Fb|0,Gb|0)|0;Eb=lh(Gb|0,C|0,za|0,Eb|0)|0;ca=lh(Eb|0,C|0,N|ya|da&2031616|0,ca|0)|0;da=C;ya=wh(Oa|0,0,jb|0,pb|0)|0;N=C;Eb=wh(ta|0,Ca|0,wb|0,0)|0;za=C;Gb=wh(Gc|0,Ab|0,I|0,0)|0;Fb=C;Ib=wh(f|0,0,tb|0,0)|0;Hb=C;Kb=wh(Za|0,0,E|0,0)|0;Jb=C;Mb=wh(ka|0,0,v|0,0)|0;Lb=C;Ob=wh(p|0,0,Sa|0,0)|0;Nb=C;Qb=wh(h|0,0,y|0,ia|0)|0;Pb=C;Ub=wh(cb|0,0,Pa|0,rb|0)|0;Tb=C;Sb=wh(ga|0,ha|0,Ra|0,0)|0;Rb=C;U=wh(Q|0,0,jb|0,pb|0)|0;S=C;gb=wh(Oa|0,0,wb|0,0)|0;V=C;H=wh(ta|0,Ca|0,I|0,0)|0;hb=C;ub=wh(Gc|0,Ab|0,tb|0,0)|0;D=C;P=wh(f|0,0,E|0,0)|0;vb=C;Ua=wh(Za|0,0,v|0,0)|0;J=C;mb=wh(ka|0,0,Sa|0,0)|0;Va=C;_=wh(p|0,0,y|0,ia|0)|0;nb=C;ab=wh(h|0,0,Pa|0,rb|0)|0;$=C;Cb=wh(cb|0,0,Ra|0,0)|0;Db=C;bb=wh(ga|0,ha|0,Bc|0,0)|0;bb=lh(Cb|0,Db|0,bb|0,C|0)|0;$=lh(bb|0,C|0,ab|0,$|0)|0;nb=lh($|0,C|0,_|0,nb|0)|0;Va=lh(nb|0,C|0,mb|0,Va|0)|0;J=lh(Va|0,C|0,Ua|0,J|0)|0;vb=lh(J|0,C|0,P|0,vb|0)|0;D=lh(vb|0,C|0,ub|0,D|0)|0;hb=lh(D|0,C|0,H|0,hb|0)|0;V=lh(hb|0,C|0,gb|0,V|0)|0;S=lh(V|0,C|0,U|0,S|0)|0;T=lh(S|0,C|0,T&2097151|0,0)|0;S=C;pb=wh(k|0,Ha|0,jb|0,pb|0)|0;jb=C;U=wh(Q|0,0,wb|0,0)|0;V=C;gb=wh(Oa|0,0,I|0,0)|0;hb=C;H=wh(ta|0,Ca|0,tb|0,0)|0;D=C;ub=wh(Gc|0,Ab|0,E|0,0)|0;vb=C;P=wh(f|0,0,v|0,0)|0;J=C;Ua=wh(Za|0,0,Sa|0,0)|0;Va=C;mb=wh(ka|0,0,y|0,ia|0)|0;nb=C;_=wh(p|0,0,Pa|0,rb|0)|0;$=C;ab=wh(h|0,0,Ra|0,0)|0;bb=C;Db=wh(cb|0,0,Bc|0,0)|0;Cb=C;ha=wh(ga|0,ha|0,r|0,Ja|0)|0;ga=C;wb=wh(k|0,Ha|0,wb|0,0)|0;xb=C;kb=wh(Q|0,0,I|0,0)|0;F=C;la=wh(Oa|0,0,tb|0,0)|0;lb=C;na=wh(ta|0,Ca|0,E|0,0)|0;fa=C;yb=wh(Gc|0,Ab|0,v|0,0)|0;qb=C;ra=wh(f|0,0,Sa|0,0)|0;zb=C;wa=wh(Za|0,0,y|0,ia|0)|0;qa=C;Ta=wh(ka|0,0,Pa|0,rb|0)|0;va=C;db=wh(p|0,0,Ra|0,0)|0;ma=C;sb=wh(h|0,0,Bc|0,0)|0;m=C;cb=wh(cb|0,0,r|0,Ja|0)|0;cb=lh(sb|0,m|0,cb|0,C|0)|0;ma=lh(cb|0,C|0,db|0,ma|0)|0;va=lh(ma|0,C|0,Ta|0,va|0)|0;qa=lh(va|0,C|0,wa|0,qa|0)|0;zb=lh(qa|0,C|0,ra|0,zb|0)|0;qb=lh(zb|0,C|0,yb|0,qb|0)|0;fa=lh(qb|0,C|0,na|0,fa|0)|0;lb=lh(fa|0,C|0,la|0,lb|0)|0;F=lh(lb|0,C|0,kb|0,F|0)|0;xb=lh(F|0,C|0,wb|0,xb|0)|0;wb=C;I=wh(k|0,Ha|0,I|0,0)|0;F=C;kb=wh(Q|0,0,tb|0,0)|0;lb=C;la=wh(Oa|0,0,E|0,0)|0;fa=C;na=wh(ta|0,Ca|0,v|0,0)|0;qb=C;yb=wh(Gc|0,Ab|0,Sa|0,0)|0;zb=C;ra=wh(f|0,0,y|0,ia|0)|0;qa=C;wa=wh(Za|0,0,Pa|0,rb|0)|0;va=C;Ta=wh(ka|0,0,Ra|0,0)|0;ma=C;db=wh(p|0,0,Bc|0,0)|0;cb=C;h=wh(h|0,0,r|0,Ja|0)|0;m=C;tb=wh(k|0,Ha|0,tb|0,0)|0;sb=C;eb=wh(Q|0,0,E|0,0)|0;g=C;K=wh(Oa|0,0,v|0,0)|0;fb=C;s=wh(ta|0,Ca|0,Sa|0,0)|0;n=C;ea=wh(Gc|0,Ab|0,y|0,ia|0)|0;x=C;pa=wh(f|0,0,Pa|0,rb|0)|0;l=C;ua=wh(Za|0,0,Ra|0,0)|0;L=C;Bb=wh(ka|0,0,Bc|0,0)|0;t=C;p=wh(p|0,0,r|0,Ja|0)|0;p=lh(Bb|0,t|0,p|0,C|0)|0;L=lh(p|0,C|0,ua|0,L|0)|0;l=lh(L|0,C|0,pa|0,l|0)|0;x=lh(l|0,C|0,ea|0,x|0)|0;n=lh(x|0,C|0,s|0,n|0)|0;fb=lh(n|0,C|0,K|0,fb|0)|0;g=lh(fb|0,C|0,eb|0,g|0)|0;sb=lh(g|0,C|0,tb|0,sb|0)|0;tb=C;E=wh(k|0,Ha|0,E|0,0)|0;g=C;eb=wh(Q|0,0,v|0,0)|0;fb=C;K=wh(Oa|0,0,Sa|0,0)|0;n=C;s=wh(ta|0,Ca|0,y|0,ia|0)|0;x=C;ea=wh(Gc|0,Ab|0,Pa|0,rb|0)|0;l=C;pa=wh(f|0,0,Ra|0,0)|0;L=C;ua=wh(Za|0,0,Bc|0,0)|0;p=C;ka=wh(ka|0,0,r|0,Ja|0)|0;t=C;v=wh(k|0,Ha|0,v|0,0)|0;Bb=C;B=wh(Q|0,0,Sa|0,0)|0;R=C;Z=wh(Oa|0,0,y|0,ia|0)|0;Qa=C;$a=wh(ta|0,Ca|0,Pa|0,rb|0)|0;Y=C;Ya=wh(Gc|0,Ab|0,Ra|0,0)|0;_a=C;O=wh(f|0,0,Bc|0,0)|0;u=C;Za=wh(Za|0,0,r|0,Ja|0)|0;Za=lh(O|0,u|0,Za|0,C|0)|0;_a=lh(Za|0,C|0,Ya|0,_a|0)|0;Y=lh(_a|0,C|0,$a|0,Y|0)|0;Qa=lh(Y|0,C|0,Z|0,Qa|0)|0;R=lh(Qa|0,C|0,B|0,R|0)|0;Bb=lh(R|0,C|0,v|0,Bb|0)|0;v=C;Sa=wh(k|0,Ha|0,Sa|0,0)|0;R=C;B=wh(Q|0,0,y|0,ia|0)|0;Qa=C;Z=wh(Oa|0,0,Pa|0,rb|0)|0;Y=C;$a=wh(ta|0,Ca|0,Ra|0,0)|0;_a=C;Ya=wh(Gc|0,Ab|0,Bc|0,0)|0;Za=C;f=wh(f|0,0,r|0,Ja|0)|0;u=C;ia=wh(k|0,Ha|0,y|0,ia|0)|0;y=C;O=wh(Q|0,0,Pa|0,rb|0)|0;Ia=C;xa=wh(Oa|0,0,Ra|0,0)|0;ib=C;Dc=wh(ta|0,Ca|0,Bc|0,0)|0;Fc=C;Ab=wh(Gc|0,Ab|0,r|0,Ja|0)|0;Ab=lh(Dc|0,Fc|0,Ab|0,C|0)|0;ib=lh(Ab|0,C|0,xa|0,ib|0)|0;Ia=lh(ib|0,C|0,O|0,Ia|0)|0;y=lh(Ia|0,C|0,ia|0,y|0)|0;ia=C;rb=wh(k|0,Ha|0,Pa|0,rb|0)|0;Pa=C;Ia=wh(Q|0,0,Ra|0,0)|0;O=C;ib=wh(Oa|0,0,Bc|0,0)|0;xa=C;Ca=wh(ta|0,Ca|0,r|0,Ja|0)|0;ta=C;Ra=wh(k|0,Ha|0,Ra|0,0)|0;Ab=C;Fc=wh(Q|0,0,Bc|0,0)|0;Dc=C;Oa=wh(Oa|0,0,r|0,Ja|0)|0;Oa=lh(Fc|0,Dc|0,Oa|0,C|0)|0;Ab=lh(Oa|0,C|0,Ra|0,Ab|0)|0;Ra=C;Bc=wh(k|0,Ha|0,Bc|0,0)|0;Oa=C;Q=wh(Q|0,0,r|0,Ja|0)|0;Q=lh(Bc|0,Oa|0,Q|0,C|0)|0;Oa=C;Ja=wh(k|0,Ha|0,r|0,Ja|0)|0;r=C;Ha=lh(Ga|0,aa|0,1048576,0)|0;Ha=oh(Ha|0,C|0,21)|0;k=C;sa=lh(Ac|0,zc|0,yc|0,sa|0)|0;sa=lh(sa|0,C|0,Ha|0,k|0)|0;Da=lh(sa|0,C|0,Da&2097151|0,0)|0;sa=C;k=ph(Ha|0,k|0,21)|0;k=kh(Ga|0,aa|0,k|0,C|0)|0;aa=C;Ga=lh(La|0,Ka|0,1048576,0)|0;Ga=oh(Ga|0,C|0,21)|0;Ha=C;rc=lh(xc|0,vc|0,sc|0,rc|0)|0;Ba=lh(rc|0,C|0,qc|0,Ba|0)|0;oa=lh(Ba|0,C|0,Aa|0,oa|0)|0;ob=lh(oa|0,C|0,ob&2097151|0,0)|0;ob=lh(ob|0,C|0,Ga|0,Ha|0)|0;oa=C;Ha=ph(Ga|0,Ha|0,21)|0;Ga=C;Aa=lh(Fa|0,Ea|0,1048576,0)|0;Aa=mh(Aa|0,C|0,21)|0;Ba=C;mc=lh(pc|0,oc|0,nc|0,mc|0)|0;kc=lh(mc|0,C|0,lc|0,kc|0)|0;ic=lh(kc|0,C|0,jc|0,ic|0)|0;Ma=lh(ic|0,C|0,hc|0,Ma|0)|0;X=lh(Ma|0,C|0,Na|0,X|0)|0;W=lh(X|0,C|0,W&2097151|0,0)|0;W=lh(W|0,C|0,Aa|0,Ba|0)|0;X=C;Ba=ph(Aa|0,Ba|0,21)|0;Aa=C;Na=lh(Wa|0,Xa|0,1048576,0)|0;Na=mh(Na|0,C|0,21)|0;Ma=C;dc=lh(gc|0,fc|0,ec|0,dc|0)|0;bc=lh(dc|0,C|0,cc|0,bc|0)|0;$b=lh(bc|0,C|0,ac|0,$b|0)|0;Zb=lh($b|0,C|0,_b|0,Zb|0)|0;Xb=lh(Zb|0,C|0,Yb|0,Xb|0)|0;Vb=lh(Xb|0,C|0,Wb|0,Vb|0)|0;ja=lh(Vb|0,C|0,ba|0,ja|0)|0;w=lh(ja|0,C|0,G|0,w|0)|0;w=lh(w|0,C|0,Na|0,Ma|0)|0;G=C;Ma=ph(Na|0,Ma|0,21)|0;Na=C;ja=lh(ca|0,da|0,1048576,0)|0;ja=mh(ja|0,C|0,21)|0;ba=C;Rb=lh(Ub|0,Tb|0,Sb|0,Rb|0)|0;Pb=lh(Rb|0,C|0,Qb|0,Pb|0)|0;Nb=lh(Pb|0,C|0,Ob|0,Nb|0)|0;Lb=lh(Nb|0,C|0,Mb|0,Lb|0)|0;Jb=lh(Lb|0,C|0,Kb|0,Jb|0)|0;Hb=lh(Jb|0,C|0,Ib|0,Hb|0)|0;Fb=lh(Hb|0,C|0,Gb|0,Fb|0)|0;za=lh(Fb|0,C|0,Eb|0,za|0)|0;N=lh(za|0,C|0,ya|0,N|0)|0;M=lh(N|0,C|0,M&2097151|0,0)|0;M=lh(M|0,C|0,ja|0,ba|0)|0;N=C;ba=ph(ja|0,ba|0,21)|0;ja=C;ya=lh(T|0,S|0,1048576,0)|0;ya=mh(ya|0,C|0,21)|0;za=C;ga=lh(Db|0,Cb|0,ha|0,ga|0)|0;bb=lh(ga|0,C|0,ab|0,bb|0)|0;$=lh(bb|0,C|0,_|0,$|0)|0;nb=lh($|0,C|0,mb|0,nb|0)|0;Va=lh(nb|0,C|0,Ua|0,Va|0)|0;J=lh(Va|0,C|0,P|0,J|0)|0;vb=lh(J|0,C|0,ub|0,vb|0)|0;D=lh(vb|0,C|0,H|0,D|0)|0;hb=lh(D|0,C|0,gb|0,hb|0)|0;V=lh(hb|0,C|0,U|0,V|0)|0;jb=lh(V|0,C|0,pb|0,jb|0)|0;j=lh(jb|0,C|0,A|0,j|0)|0;j=lh(j|0,C|0,ya|0,za|0)|0;A=C;za=ph(ya|0,za|0,21)|0;ya=C;jb=lh(xb|0,wb|0,1048576,0)|0;jb=mh(jb|0,C|0,21)|0;pb=C;m=lh(db|0,cb|0,h|0,m|0)|0;ma=lh(m|0,C|0,Ta|0,ma|0)|0;va=lh(ma|0,C|0,wa|0,va|0)|0;qa=lh(va|0,C|0,ra|0,qa|0)|0;zb=lh(qa|0,C|0,yb|0,zb|0)|0;qb=lh(zb|0,C|0,na|0,qb|0)|0;fa=lh(qb|0,C|0,la|0,fa|0)|0;lb=lh(fa|0,C|0,kb|0,lb|0)|0;F=lh(lb|0,C|0,I|0,F|0)|0;F=lh(F|0,C|0,jb|0,pb|0)|0;I=C;pb=ph(jb|0,pb|0,21)|0;jb=C;lb=lh(sb|0,tb|0,1048576,0)|0;lb=mh(lb|0,C|0,21)|0;kb=C;t=lh(ua|0,p|0,ka|0,t|0)|0;L=lh(t|0,C|0,pa|0,L|0)|0;l=lh(L|0,C|0,ea|0,l|0)|0;x=lh(l|0,C|0,s|0,x|0)|0;n=lh(x|0,C|0,K|0,n|0)|0;fb=lh(n|0,C|0,eb|0,fb|0)|0;g=lh(fb|0,C|0,E|0,g|0)|0;g=lh(g|0,C|0,lb|0,kb|0)|0;E=C;kb=ph(lb|0,kb|0,21)|0;lb=C;fb=lh(Bb|0,v|0,1048576,0)|0;fb=mh(fb|0,C|0,21)|0;eb=C;u=lh(Ya|0,Za|0,f|0,u|0)|0;_a=lh(u|0,C|0,$a|0,_a|0)|0;Y=lh(_a|0,C|0,Z|0,Y|0)|0;Qa=lh(Y|0,C|0,B|0,Qa|0)|0;R=lh(Qa|0,C|0,Sa|0,R|0)|0;R=lh(R|0,C|0,fb|0,eb|0)|0;Sa=C;eb=ph(fb|0,eb|0,21)|0;fb=C;Qa=lh(y|0,ia|0,1048576,0)|0;Qa=mh(Qa|0,C|0,21)|0;B=C;ta=lh(ib|0,xa|0,Ca|0,ta|0)|0;O=lh(ta|0,C|0,Ia|0,O|0)|0;Pa=lh(O|0,C|0,rb|0,Pa|0)|0;Pa=lh(Pa|0,C|0,Qa|0,B|0)|0;rb=C;B=ph(Qa|0,B|0,21)|0;B=kh(y|0,ia|0,B|0,C|0)|0;ia=C;y=lh(Ab|0,Ra|0,1048576,0)|0;y=mh(y|0,C|0,21)|0;Qa=C;Oa=lh(Q|0,Oa|0,y|0,Qa|0)|0;Q=C;Qa=ph(y|0,Qa|0,21)|0;Qa=kh(Ab|0,Ra|0,Qa|0,C|0)|0;Ra=C;Ab=lh(Ja|0,r|0,1048576,0)|0;Ab=mh(Ab|0,C|0,21)|0;y=C;O=ph(Ab|0,y|0,21)|0;O=kh(Ja|0,r|0,O|0,C|0)|0;r=C;Ja=lh(Da|0,sa|0,1048576,0)|0;Ja=oh(Ja|0,C|0,21)|0;Ia=C;ta=ph(Ja|0,Ia|0,21)|0;ta=kh(Da|0,sa|0,ta|0,C|0)|0;sa=C;Da=lh(ob|0,oa|0,1048576,0)|0;Da=mh(Da|0,C|0,21)|0;Ca=C;xa=ph(Da|0,Ca|0,21)|0;xa=kh(ob|0,oa|0,xa|0,C|0)|0;oa=C;ob=lh(W|0,X|0,1048576,0)|0;ob=mh(ob|0,C|0,21)|0;ib=C;Y=ph(ob|0,ib|0,21)|0;Z=C;_a=lh(w|0,G|0,1048576,0)|0;_a=mh(_a|0,C|0,21)|0;$a=C;u=ph(_a|0,$a|0,21)|0;f=C;Za=lh(M|0,N|0,1048576,0)|0;Za=mh(Za|0,C|0,21)|0;Ya=C;n=ph(Za|0,Ya|0,21)|0;K=C;x=lh(j|0,A|0,1048576,0)|0;x=mh(x|0,C|0,21)|0;s=C;l=ph(x|0,s|0,21)|0;ea=C;L=lh(F|0,I|0,1048576,0)|0;L=mh(L|0,C|0,21)|0;pa=C;t=ph(L|0,pa|0,21)|0;ka=C;p=lh(g|0,E|0,1048576,0)|0;p=mh(p|0,C|0,21)|0;ua=C;fa=ph(p|0,ua|0,21)|0;la=C;qb=lh(R|0,Sa|0,1048576,0)|0;qb=mh(qb|0,C|0,21)|0;na=C;ia=lh(qb|0,na|0,B|0,ia|0)|0;B=C;na=ph(qb|0,na|0,21)|0;na=kh(R|0,Sa|0,na|0,C|0)|0;Sa=C;R=lh(Pa|0,rb|0,1048576,0)|0;R=mh(R|0,C|0,21)|0;qb=C;Ra=lh(R|0,qb|0,Qa|0,Ra|0)|0;Qa=C;qb=ph(R|0,qb|0,21)|0;qb=kh(Pa|0,rb|0,qb|0,C|0)|0;rb=C;Pa=lh(Oa|0,Q|0,1048576,0)|0;Pa=mh(Pa|0,C|0,21)|0;R=C;r=lh(Pa|0,R|0,O|0,r|0)|0;O=C;R=ph(Pa|0,R|0,21)|0;R=kh(Oa|0,Q|0,R|0,C|0)|0;Q=C;Oa=wh(Ab|0,y|0,666643,0)|0;Pa=C;zb=wh(Ab|0,y|0,470296,0)|0;yb=C;qa=wh(Ab|0,y|0,654183,0)|0;ra=C;va=wh(Ab|0,y|0,-997805,-1)|0;wa=C;ma=wh(Ab|0,y|0,136657,0)|0;Ta=C;y=wh(Ab|0,y|0,-683901,-1)|0;y=lh(Bb|0,v|0,y|0,C|0)|0;fb=kh(y|0,C|0,eb|0,fb|0)|0;ua=lh(fb|0,C|0,p|0,ua|0)|0;p=C;fb=wh(r|0,O|0,666643,0)|0;eb=C;y=wh(r|0,O|0,470296,0)|0;v=C;Bb=wh(r|0,O|0,654183,0)|0;Ab=C;m=wh(r|0,O|0,-997805,-1)|0;h=C;cb=wh(r|0,O|0,136657,0)|0;db=C;O=wh(r|0,O|0,-683901,-1)|0;r=C;V=wh(R|0,Q|0,666643,0)|0;U=C;hb=wh(R|0,Q|0,470296,0)|0;gb=C;D=wh(R|0,Q|0,654183,0)|0;H=C;vb=wh(R|0,Q|0,-997805,-1)|0;ub=C;J=wh(R|0,Q|0,136657,0)|0;P=C;Q=wh(R|0,Q|0,-683901,-1)|0;R=C;wa=lh(sb|0,tb|0,va|0,wa|0)|0;db=lh(wa|0,C|0,cb|0,db|0)|0;R=lh(db|0,C|0,Q|0,R|0)|0;lb=kh(R|0,C|0,kb|0,lb|0)|0;pa=lh(lb|0,C|0,L|0,pa|0)|0;L=C;lb=wh(Ra|0,Qa|0,666643,0)|0;kb=C;R=wh(Ra|0,Qa|0,470296,0)|0;Q=C;db=wh(Ra|0,Qa|0,654183,0)|0;cb=C;wa=wh(Ra|0,Qa|0,-997805,-1)|0;va=C;tb=wh(Ra|0,Qa|0,136657,0)|0;sb=C;Qa=wh(Ra|0,Qa|0,-683901,-1)|0;Ra=C;Va=wh(qb|0,rb|0,666643,0)|0;Ua=C;nb=wh(qb|0,rb|0,470296,0)|0;mb=C;$=wh(qb|0,rb|0,654183,0)|0;_=C;bb=wh(qb|0,rb|0,-997805,-1)|0;ab=C;ga=wh(qb|0,rb|0,136657,0)|0;ha=C;rb=wh(qb|0,rb|0,-683901,-1)|0;qb=C;yb=lh(Bb|0,Ab|0,zb|0,yb|0)|0;wb=lh(yb|0,C|0,xb|0,wb|0)|0;ub=lh(wb|0,C|0,vb|0,ub|0)|0;sb=lh(ub|0,C|0,tb|0,sb|0)|0;qb=lh(sb|0,C|0,rb|0,qb|0)|0;jb=kh(qb|0,C|0,pb|0,jb|0)|0;s=lh(jb|0,C|0,x|0,s|0)|0;x=C;jb=wh(ia|0,B|0,666643,0)|0;jb=lh(ob|0,ib|0,jb|0,C|0)|0;Xa=lh(jb|0,C|0,Wa|0,Xa|0)|0;Na=kh(Xa|0,C|0,Ma|0,Na|0)|0;Ma=C;Xa=wh(ia|0,B|0,470296,0)|0;Wa=C;jb=wh(ia|0,B|0,654183,0)|0;ib=C;kb=lh(nb|0,mb|0,lb|0,kb|0)|0;ib=lh(kb|0,C|0,jb|0,ib|0)|0;$a=lh(ib|0,C|0,_a|0,$a|0)|0;da=lh($a|0,C|0,ca|0,da|0)|0;ja=kh(da|0,C|0,ba|0,ja|0)|0;ba=C;da=wh(ia|0,B|0,-997805,-1)|0;ca=C;$a=wh(ia|0,B|0,136657,0)|0;_a=C;eb=lh(hb|0,gb|0,fb|0,eb|0)|0;cb=lh(eb|0,C|0,db|0,cb|0)|0;ab=lh(cb|0,C|0,bb|0,ab|0)|0;_a=lh(ab|0,C|0,$a|0,_a|0)|0;Ya=lh(_a|0,C|0,Za|0,Ya|0)|0;S=lh(Ya|0,C|0,T|0,S|0)|0;ya=kh(S|0,C|0,za|0,ya|0)|0;za=C;B=wh(ia|0,B|0,-683901,-1)|0;ia=C;S=lh(Na|0,Ma|0,1048576,0)|0;S=mh(S|0,C|0,21)|0;T=C;Ua=lh(Xa|0,Wa|0,Va|0,Ua|0)|0;G=lh(Ua|0,C|0,w|0,G|0)|0;f=kh(G|0,C|0,u|0,f|0)|0;f=lh(f|0,C|0,S|0,T|0)|0;u=C;T=ph(S|0,T|0,21)|0;S=C;G=lh(ja|0,ba|0,1048576,0)|0;G=mh(G|0,C|0,21)|0;w=C;U=lh(R|0,Q|0,V|0,U|0)|0;_=lh(U|0,C|0,$|0,_|0)|0;ca=lh(_|0,C|0,da|0,ca|0)|0;N=lh(ca|0,C|0,M|0,N|0)|0;K=kh(N|0,C|0,n|0,K|0)|0;K=lh(K|0,C|0,G|0,w|0)|0;n=C;w=ph(G|0,w|0,21)|0;G=C;N=lh(ya|0,za|0,1048576,0)|0;N=mh(N|0,C|0,21)|0;M=C;Pa=lh(y|0,v|0,Oa|0,Pa|0)|0;H=lh(Pa|0,C|0,D|0,H|0)|0;va=lh(H|0,C|0,wa|0,va|0)|0;ha=lh(va|0,C|0,ga|0,ha|0)|0;ia=lh(ha|0,C|0,B|0,ia|0)|0;A=lh(ia|0,C|0,j|0,A|0)|0;ea=kh(A|0,C|0,l|0,ea|0)|0;ea=lh(ea|0,C|0,N|0,M|0)|0;l=C;M=ph(N|0,M|0,21)|0;N=C;A=lh(s|0,x|0,1048576,0)|0;A=mh(A|0,C|0,21)|0;j=C;ra=lh(m|0,h|0,qa|0,ra|0)|0;P=lh(ra|0,C|0,J|0,P|0)|0;Ra=lh(P|0,C|0,Qa|0,Ra|0)|0;I=lh(Ra|0,C|0,F|0,I|0)|0;ka=kh(I|0,C|0,t|0,ka|0)|0;ka=lh(ka|0,C|0,A|0,j|0)|0;t=C;j=ph(A|0,j|0,21)|0;j=kh(s|0,x|0,j|0,C|0)|0;x=C;s=lh(pa|0,L|0,1048576,0)|0;s=mh(s|0,C|0,21)|0;A=C;Ta=lh(O|0,r|0,ma|0,Ta|0)|0;E=lh(Ta|0,C|0,g|0,E|0)|0;la=kh(E|0,C|0,fa|0,la|0)|0;la=lh(la|0,C|0,s|0,A|0)|0;fa=C;A=ph(s|0,A|0,21)|0;A=kh(pa|0,L|0,A|0,C|0)|0;L=C;pa=lh(ua|0,p|0,1048576,0)|0;pa=mh(pa|0,C|0,21)|0;s=C;Sa=lh(pa|0,s|0,na|0,Sa|0)|0;na=C;s=ph(pa|0,s|0,21)|0;s=kh(ua|0,p|0,s|0,C|0)|0;p=C;ua=lh(f|0,u|0,1048576,0)|0;ua=mh(ua|0,C|0,21)|0;pa=C;E=ph(ua|0,pa|0,21)|0;g=C;Ta=lh(K|0,n|0,1048576,0)|0;Ta=mh(Ta|0,C|0,21)|0;ma=C;r=ph(Ta|0,ma|0,21)|0;O=C;I=lh(ea|0,l|0,1048576,0)|0;I=mh(I|0,C|0,21)|0;F=C;x=lh(I|0,F|0,j|0,x|0)|0;j=C;F=ph(I|0,F|0,21)|0;F=kh(ea|0,l|0,F|0,C|0)|0;l=C;ea=lh(ka|0,t|0,1048576,0)|0;ea=mh(ea|0,C|0,21)|0;I=C;L=lh(ea|0,I|0,A|0,L|0)|0;A=C;I=ph(ea|0,I|0,21)|0;I=kh(ka|0,t|0,I|0,C|0)|0;t=C;ka=lh(la|0,fa|0,1048576,0)|0;ka=mh(ka|0,C|0,21)|0;ea=C;p=lh(ka|0,ea|0,s|0,p|0)|0;s=C;ea=ph(ka|0,ea|0,21)|0;ea=kh(la|0,fa|0,ea|0,C|0)|0;fa=C;la=wh(Sa|0,na|0,666643,0)|0;ka=C;Ra=wh(Sa|0,na|0,470296,0)|0;Qa=C;P=wh(Sa|0,na|0,654183,0)|0;J=C;ra=wh(Sa|0,na|0,-997805,-1)|0;qa=C;h=wh(Sa|0,na|0,136657,0)|0;m=C;na=wh(Sa|0,na|0,-683901,-1)|0;na=lh(Ta|0,ma|0,na|0,C|0)|0;za=lh(na|0,C|0,ya|0,za|0)|0;N=kh(za|0,C|0,M|0,N|0)|0;M=C;za=wh(p|0,s|0,666643,0)|0;ya=C;na=wh(p|0,s|0,470296,0)|0;ma=C;Ta=wh(p|0,s|0,654183,0)|0;Sa=C;ia=wh(p|0,s|0,-997805,-1)|0;B=C;ha=wh(p|0,s|0,136657,0)|0;ga=C;s=wh(p|0,s|0,-683901,-1)|0;p=C;va=wh(ea|0,fa|0,666643,0)|0;va=lh(xa|0,oa|0,va|0,C|0)|0;oa=C;xa=wh(ea|0,fa|0,470296,0)|0;wa=C;H=wh(ea|0,fa|0,654183,0)|0;D=C;Pa=wh(ea|0,fa|0,-997805,-1)|0;Oa=C;v=wh(ea|0,fa|0,136657,0)|0;y=C;fa=wh(ea|0,fa|0,-683901,-1)|0;ea=C;qa=lh(ha|0,ga|0,ra|0,qa|0)|0;ea=lh(qa|0,C|0,fa|0,ea|0)|0;pa=lh(ea|0,C|0,ua|0,pa|0)|0;ba=lh(pa|0,C|0,ja|0,ba|0)|0;G=kh(ba|0,C|0,w|0,G|0)|0;w=C;ba=wh(L|0,A|0,666643,0)|0;ja=C;pa=wh(L|0,A|0,470296,0)|0;pa=lh(va|0,oa|0,pa|0,C|0)|0;oa=C;va=wh(L|0,A|0,654183,0)|0;ua=C;ea=wh(L|0,A|0,-997805,-1)|0;fa=C;qa=wh(L|0,A|0,136657,0)|0;ra=C;A=wh(L|0,A|0,-683901,-1)|0;L=C;ga=wh(I|0,t|0,666643,0)|0;ha=C;ca=wh(I|0,t|0,470296,0)|0;da=C;_=wh(I|0,t|0,654183,0)|0;$=C;U=wh(I|0,t|0,-997805,-1)|0;V=C;Q=wh(I|0,t|0,136657,0)|0;R=C;t=wh(I|0,t|0,-683901,-1)|0;I=C;Qa=lh(Ta|0,Sa|0,Ra|0,Qa|0)|0;Oa=lh(Qa|0,C|0,Pa|0,Oa|0)|0;Ma=lh(Oa|0,C|0,Na|0,Ma|0)|0;S=kh(Ma|0,C|0,T|0,S|0)|0;ra=lh(S|0,C|0,qa|0,ra|0)|0;I=lh(ra|0,C|0,t|0,I|0)|0;t=C;ra=wh(x|0,j|0,666643,0)|0;aa=lh(ra|0,C|0,k|0,aa|0)|0;k=C;ra=wh(x|0,j|0,470296,0)|0;qa=C;S=wh(x|0,j|0,654183,0)|0;T=C;Ia=lh(La|0,Ka|0,Ja|0,Ia|0)|0;Ga=kh(Ia|0,C|0,Ha|0,Ga|0)|0;ja=lh(Ga|0,C|0,ba|0,ja|0)|0;T=lh(ja|0,C|0,S|0,T|0)|0;da=lh(T|0,C|0,ca|0,da|0)|0;ca=C;T=wh(x|0,j|0,-997805,-1)|0;S=C;ja=wh(x|0,j|0,136657,0)|0;ba=C;Ca=lh(Fa|0,Ea|0,Da|0,Ca|0)|0;Aa=kh(Ca|0,C|0,Ba|0,Aa|0)|0;ya=lh(Aa|0,C|0,za|0,ya|0)|0;wa=lh(ya|0,C|0,xa|0,wa|0)|0;ua=lh(wa|0,C|0,va|0,ua|0)|0;ba=lh(ua|0,C|0,ja|0,ba|0)|0;V=lh(ba|0,C|0,U|0,V|0)|0;U=C;j=wh(x|0,j|0,-683901,-1)|0;x=C;ba=lh(aa|0,k|0,1048576,0)|0;ba=mh(ba|0,C|0,21)|0;ja=C;qa=lh(ta|0,sa|0,ra|0,qa|0)|0;ha=lh(qa|0,C|0,ga|0,ha|0)|0;ha=lh(ha|0,C|0,ba|0,ja|0)|0;ga=C;ja=ph(ba|0,ja|0,21)|0;ja=kh(aa|0,k|0,ja|0,C|0)|0;k=C;aa=lh(da|0,ca|0,1048576,0)|0;aa=mh(aa|0,C|0,21)|0;ba=C;S=lh(pa|0,oa|0,T|0,S|0)|0;$=lh(S|0,C|0,_|0,$|0)|0;$=lh($|0,C|0,aa|0,ba|0)|0;_=C;ba=ph(aa|0,ba|0,21)|0;aa=C;S=lh(V|0,U|0,1048576,0)|0;S=mh(S|0,C|0,21)|0;T=C;ka=lh(na|0,ma|0,la|0,ka|0)|0;D=lh(ka|0,C|0,H|0,D|0)|0;X=lh(D|0,C|0,W|0,X|0)|0;Z=kh(X|0,C|0,Y|0,Z|0)|0;fa=lh(Z|0,C|0,ea|0,fa|0)|0;x=lh(fa|0,C|0,j|0,x|0)|0;R=lh(x|0,C|0,Q|0,R|0)|0;R=lh(R|0,C|0,S|0,T|0)|0;Q=C;T=ph(S|0,T|0,21)|0;S=C;x=lh(I|0,t|0,1048576,0)|0;x=mh(x|0,C|0,21)|0;j=C;J=lh(ia|0,B|0,P|0,J|0)|0;y=lh(J|0,C|0,v|0,y|0)|0;u=lh(y|0,C|0,f|0,u|0)|0;g=kh(u|0,C|0,E|0,g|0)|0;L=lh(g|0,C|0,A|0,L|0)|0;L=lh(L|0,C|0,x|0,j|0)|0;A=C;j=ph(x|0,j|0,21)|0;j=kh(I|0,t|0,j|0,C|0)|0;t=C;I=lh(G|0,w|0,1048576,0)|0;I=mh(I|0,C|0,21)|0;x=C;m=lh(s|0,p|0,h|0,m|0)|0;n=lh(m|0,C|0,K|0,n|0)|0;n=lh(n|0,C|0,I|0,x|0)|0;O=kh(n|0,C|0,r|0,O|0)|0;r=C;x=ph(I|0,x|0,21)|0;x=kh(G|0,w|0,x|0,C|0)|0;w=C;G=lh(N|0,M|0,1048576,0)|0;G=mh(G|0,C|0,21)|0;I=C;l=lh(F|0,l|0,G|0,I|0)|0;F=C;I=ph(G|0,I|0,21)|0;G=C;n=lh(ha|0,ga|0,1048576,0)|0;n=mh(n|0,C|0,21)|0;K=C;m=ph(n|0,K|0,21)|0;h=C;p=lh($|0,_|0,1048576,0)|0;p=mh(p|0,C|0,21)|0;s=C;g=ph(p|0,s|0,21)|0;E=C;u=lh(R|0,Q|0,1048576,0)|0;u=mh(u|0,C|0,21)|0;f=C;t=lh(j|0,t|0,u|0,f|0)|0;j=C;f=ph(u|0,f|0,21)|0;u=C;y=lh(L|0,A|0,1048576,0)|0;y=mh(y|0,C|0,21)|0;v=C;w=lh(x|0,w|0,y|0,v|0)|0;x=C;v=ph(y|0,v|0,21)|0;v=kh(L|0,A|0,v|0,C|0)|0;A=C;L=lh(O|0,r|0,1048576,0)|0;L=mh(L|0,C|0,21)|0;y=C;J=ph(L|0,y|0,21)|0;J=kh(O|0,r|0,J|0,C|0)|0;r=C;O=lh(l|0,F|0,1048576,0)|0;O=mh(O|0,C|0,21)|0;P=C;B=ph(O|0,P|0,21)|0;B=kh(l|0,F|0,B|0,C|0)|0;F=C;l=wh(O|0,P|0,666643,0)|0;l=lh(ja|0,k|0,l|0,C|0)|0;k=C;ja=wh(O|0,P|0,470296,0)|0;ia=C;fa=wh(O|0,P|0,654183,0)|0;ea=C;Z=wh(O|0,P|0,-997805,-1)|0;Y=C;X=wh(O|0,P|0,136657,0)|0;W=C;P=wh(O|0,P|0,-683901,-1)|0;O=C;D=mh(l|0,k|0,21)|0;H=C;ga=lh(ja|0,ia|0,ha|0,ga|0)|0;h=kh(ga|0,C|0,m|0,h|0)|0;h=lh(h|0,C|0,D|0,H|0)|0;m=C;H=ph(D|0,H|0,21)|0;H=kh(l|0,k|0,H|0,C|0)|0;k=C;l=mh(h|0,m|0,21)|0;D=C;ca=lh(fa|0,ea|0,da|0,ca|0)|0;aa=kh(ca|0,C|0,ba|0,aa|0)|0;K=lh(aa|0,C|0,n|0,K|0)|0;K=lh(K|0,C|0,l|0,D|0)|0;n=C;D=ph(l|0,D|0,21)|0;D=kh(h|0,m|0,D|0,C|0)|0;m=C;h=mh(K|0,n|0,21)|0;l=C;Y=lh($|0,_|0,Z|0,Y|0)|0;E=kh(Y|0,C|0,g|0,E|0)|0;E=lh(E|0,C|0,h|0,l|0)|0;g=C;l=ph(h|0,l|0,21)|0;l=kh(K|0,n|0,l|0,C|0)|0;n=C;K=mh(E|0,g|0,21)|0;h=C;U=lh(X|0,W|0,V|0,U|0)|0;S=kh(U|0,C|0,T|0,S|0)|0;s=lh(S|0,C|0,p|0,s|0)|0;s=lh(s|0,C|0,K|0,h|0)|0;p=C;h=ph(K|0,h|0,21)|0;h=kh(E|0,g|0,h|0,C|0)|0;g=C;E=mh(s|0,p|0,21)|0;K=C;O=lh(R|0,Q|0,P|0,O|0)|0;u=kh(O|0,C|0,f|0,u|0)|0;u=lh(u|0,C|0,E|0,K|0)|0;f=C;K=ph(E|0,K|0,21)|0;K=kh(s|0,p|0,K|0,C|0)|0;p=C;s=mh(u|0,f|0,21)|0;E=C;j=lh(t|0,j|0,s|0,E|0)|0;t=C;E=ph(s|0,E|0,21)|0;E=kh(u|0,f|0,E|0,C|0)|0;f=C;u=mh(j|0,t|0,21)|0;s=C;A=lh(u|0,s|0,v|0,A|0)|0;v=C;s=ph(u|0,s|0,21)|0;s=kh(j|0,t|0,s|0,C|0)|0;t=C;j=mh(A|0,v|0,21)|0;u=C;x=lh(w|0,x|0,j|0,u|0)|0;w=C;u=ph(j|0,u|0,21)|0;u=kh(A|0,v|0,u|0,C|0)|0;v=C;A=mh(x|0,w|0,21)|0;j=C;r=lh(A|0,j|0,J|0,r|0)|0;J=C;j=ph(A|0,j|0,21)|0;j=kh(x|0,w|0,j|0,C|0)|0;w=C;x=mh(r|0,J|0,21)|0;A=C;y=lh(N|0,M|0,L|0,y|0)|0;G=kh(y|0,C|0,I|0,G|0)|0;G=lh(G|0,C|0,x|0,A|0)|0;I=C;A=ph(x|0,A|0,21)|0;A=kh(r|0,J|0,A|0,C|0)|0;J=C;r=mh(G|0,I|0,21)|0;x=C;F=lh(r|0,x|0,B|0,F|0)|0;B=C;x=ph(r|0,x|0,21)|0;x=kh(G|0,I|0,x|0,C|0)|0;I=C;G=mh(F|0,B|0,21)|0;r=C;y=ph(G|0,r|0,21)|0;y=kh(F|0,B|0,y|0,C|0)|0;B=C;F=wh(G|0,r|0,666643,0)|0;k=lh(F|0,C|0,H|0,k|0)|0;H=C;F=wh(G|0,r|0,470296,0)|0;F=lh(D|0,m|0,F|0,C|0)|0;m=C;D=wh(G|0,r|0,654183,0)|0;D=lh(l|0,n|0,D|0,C|0)|0;n=C;l=wh(G|0,r|0,-997805,-1)|0;l=lh(h|0,g|0,l|0,C|0)|0;g=C;h=wh(G|0,r|0,136657,0)|0;h=lh(K|0,p|0,h|0,C|0)|0;p=C;r=wh(G|0,r|0,-683901,-1)|0;r=lh(E|0,f|0,r|0,C|0)|0;f=C;E=mh(k|0,H|0,21)|0;G=C;m=lh(F|0,m|0,E|0,G|0)|0;F=C;G=ph(E|0,G|0,21)|0;G=kh(k|0,H|0,G|0,C|0)|0;H=C;k=mh(m|0,F|0,21)|0;E=C;n=lh(D|0,n|0,k|0,E|0)|0;D=C;E=ph(k|0,E|0,21)|0;E=kh(m|0,F|0,E|0,C|0)|0;F=C;m=mh(n|0,D|0,21)|0;k=C;g=lh(l|0,g|0,m|0,k|0)|0;l=C;k=ph(m|0,k|0,21)|0;k=kh(n|0,D|0,k|0,C|0)|0;D=C;n=mh(g|0,l|0,21)|0;m=C;p=lh(h|0,p|0,n|0,m|0)|0;h=C;m=ph(n|0,m|0,21)|0;m=kh(g|0,l|0,m|0,C|0)|0;l=C;g=mh(p|0,h|0,21)|0;n=C;f=lh(r|0,f|0,g|0,n|0)|0;r=C;n=ph(g|0,n|0,21)|0;n=kh(p|0,h|0,n|0,C|0)|0;h=C;p=mh(f|0,r|0,21)|0;g=C;t=lh(p|0,g|0,s|0,t|0)|0;s=C;g=ph(p|0,g|0,21)|0;g=kh(f|0,r|0,g|0,C|0)|0;r=C;f=mh(t|0,s|0,21)|0;p=C;v=lh(f|0,p|0,u|0,v|0)|0;u=C;p=ph(f|0,p|0,21)|0;p=kh(t|0,s|0,p|0,C|0)|0;s=C;t=mh(v|0,u|0,21)|0;f=C;w=lh(t|0,f|0,j|0,w|0)|0;j=C;f=ph(t|0,f|0,21)|0;f=kh(v|0,u|0,f|0,C|0)|0;u=C;v=mh(w|0,j|0,21)|0;t=C;J=lh(v|0,t|0,A|0,J|0)|0;A=C;t=ph(v|0,t|0,21)|0;t=kh(w|0,j|0,t|0,C|0)|0;j=C;w=mh(J|0,A|0,21)|0;v=C;I=lh(w|0,v|0,x|0,I|0)|0;x=C;v=ph(w|0,v|0,21)|0;v=kh(J|0,A|0,v|0,C|0)|0;A=C;J=mh(I|0,x|0,21)|0;w=C;B=lh(J|0,w|0,y|0,B|0)|0;y=C;w=ph(J|0,w|0,21)|0;w=kh(I|0,x|0,w|0,C|0)|0;x=C;a[o>>0]=G;o=oh(G|0,H|0,8)|0;a[b+33>>0]=o;o=oh(G|0,H|0,16)|0;H=C;G=ph(E|0,F|0,5)|0;a[b+34>>0]=G|o;o=oh(E|0,F|0,3)|0;a[b+35>>0]=o;o=oh(E|0,F|0,11)|0;a[b+36>>0]=o;o=oh(E|0,F|0,19)|0;F=C;E=ph(k|0,D|0,2)|0;a[b+37>>0]=E|o;o=oh(k|0,D|0,6)|0;a[b+38>>0]=o;o=oh(k|0,D|0,14)|0;D=C;k=ph(m|0,l|0,7)|0;a[b+39>>0]=k|o;o=oh(m|0,l|0,1)|0;a[b+40>>0]=o;o=oh(m|0,l|0,9)|0;a[b+41>>0]=o;o=oh(m|0,l|0,17)|0;l=C;m=ph(n|0,h|0,4)|0;a[b+42>>0]=m|o;o=oh(n|0,h|0,4)|0;a[b+43>>0]=o;o=oh(n|0,h|0,12)|0;a[b+44>>0]=o;h=oh(n|0,h|0,20)|0;n=C;o=ph(g|0,r|0,1)|0;a[b+45>>0]=o|h;h=oh(g|0,r|0,7)|0;a[b+46>>0]=h;r=oh(g|0,r|0,15)|0;g=C;h=ph(p|0,s|0,6)|0;a[b+47>>0]=h|r;r=oh(p|0,s|0,2)|0;a[b+48>>0]=r;r=oh(p|0,s|0,10)|0;a[b+49>>0]=r;s=oh(p|0,s|0,18)|0;p=C;r=ph(f|0,u|0,3)|0;a[b+50>>0]=r|s;s=oh(f|0,u|0,5)|0;a[b+51>>0]=s;u=oh(f|0,u|0,13)|0;a[b+52>>0]=u;a[b+53>>0]=t;u=oh(t|0,j|0,8)|0;a[b+54>>0]=u;j=oh(t|0,j|0,16)|0;t=C;u=ph(v|0,A|0,5)|0;a[b+55>>0]=u|j;j=oh(v|0,A|0,3)|0;a[b+56>>0]=j;j=oh(v|0,A|0,11)|0;a[b+57>>0]=j;A=oh(v|0,A|0,19)|0;v=C;j=ph(w|0,x|0,2)|0;a[b+58>>0]=j|A;A=oh(w|0,x|0,6)|0;a[b+59>>0]=A;x=oh(w|0,x|0,14)|0;w=C;A=ph(B|0,y|0,7)|0;a[b+60>>0]=x|A;A=oh(B|0,y|0,1)|0;a[b+61>>0]=A;A=oh(B|0,y|0,9)|0;a[b+62>>0]=A;y=oh(B|0,y|0,17)|0;a[b+63>>0]=y;y=q;B=y+64|0;do{a[y>>0]=0;y=y+1|0}while((y|0)<(B|0));if(!e){i=z;return 0}Gc=e;c[Gc>>2]=64;c[Gc+4>>2]=0;i=z;return 0}function eg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=i=i+63&-64;i=i+16|0;k=a+64|0;rh(k|0,d|0,e|0)|0;dg(a,j,k,e,f,g)|0;g=j;d=(b|0)!=0;if((c[g>>2]|0)==64&(c[g+4>>2]|0)==0){if(!d){k=0;i=h;return k|0}j=lh(e|0,f|0,64,0)|0;k=b;c[k>>2]=j;c[k+4>>2]=C;k=0;i=h;return k|0}else{if(d){k=b;c[k>>2]=0;c[k+4>>2]=0}k=lh(e|0,f|0,64,0)|0;nh(a|0,0,k|0)|0;k=-1;i=h;return k|0}return 0}function fg(){return 32}function gg(){return 8}function hg(){return 12}function ig(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;j=i;h=i=i+63&-64;i=i+64|0;if((b|0)==0&(e|0)==0){i=j;return 0}c[h>>2]=1634760805;c[h+4>>2]=857760878;c[h+8>>2]=2036477234;c[h+12>>2]=1797285236;c[h+16>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;k=g+4|0;c[h+20>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+8|0;c[h+24>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+12|0;c[h+28>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+16|0;c[h+32>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+20|0;c[h+36>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+24|0;c[h+40>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;g=g+28|0;c[h+44>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[h+48>>2]=0;c[h+52>>2]=0;c[h+56>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=f+4|0;c[h+60>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;nh(a|0,0,b|0)|0;og(h,a,a,b,e);b=h+64|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(b|0));i=j;return 0}function jg(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;j=i;h=i=i+63&-64;i=i+64|0;if((b|0)==0&(e|0)==0){i=j;return 0}c[h>>2]=1634760805;c[h+4>>2]=857760878;c[h+8>>2]=2036477234;c[h+12>>2]=1797285236;c[h+16>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;k=g+4|0;c[h+20>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+8|0;c[h+24>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+12|0;c[h+28>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+16|0;c[h+32>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+20|0;c[h+36>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+24|0;c[h+40>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;g=g+28|0;c[h+44>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[h+48>>2]=0;c[h+52>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;g=f+4|0;c[h+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;f=f+8|0;c[h+60>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;nh(a|0,0,b|0)|0;og(h,a,a,b,e);b=h+64|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(b|0));i=j;return 0}function Fa(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function Ga(){return i|0}function Ha(a){a=a|0;i=a}function Ia(a,b){a=a|0;b=b|0;i=a;j=b}function Ja(a,b){a=a|0;b=b|0;if(!n){n=a;o=b}}function Ka(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function La(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function Ma(a){a=a|0;C=a}function Na(){return C|0}function Oa(b,f,g,h,j,k,l,m,n,o,p,q){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=i;i=i+400|0;z=D+328|0;B=D;y=D+264|0;A=D+256|0;c[z>>2]=1634760805;c[z+4>>2]=857760878;c[z+8>>2]=2036477234;c[z+12>>2]=1797285236;c[z+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;x=q+4|0;c[z+20>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;o=q+8|0;c[z+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;r=q+12|0;c[z+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;s=q+16|0;c[z+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=q+20|0;c[z+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=q+24|0;c[z+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=q+28|0;c[z+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[z+48>>2]=0;c[z+52>>2]=0;c[z+56>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;w=p+4|0;c[z+60>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;C=y;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));og(z,y,y,64,0);c[B>>2]=c[y>>2]&67108863;C=y+3|0;c[B+4>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>2&67108611;C=y+6|0;c[B+8>>2]=(e[C>>1]|e[C+2>>1]<<16)>>>4&67092735;C=y+9|0;c[B+12>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>6&66076671;c[B+16>>2]=(c[y+12>>2]|0)>>>8&1048575;C=B+20|0;c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[C+12>>2]=0;c[C+16>>2]=0;c[B+40>>2]=c[y+16>>2];c[B+44>>2]=c[y+20>>2];c[B+48>>2]=c[y+24>>2];c[B+52>>2]=c[y+28>>2];C=B+56|0;c[C>>2]=0;c[C+4>>2]=0;a[B+80>>0]=0;C=y;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));Xd(B,l,m,n);l=A;c[l>>2]=m;c[l+4>>2]=n;Xd(B,A,8,0);if(!((j|0)==0&(k|0)==0)){c[z>>2]=1634760805;c[z+4>>2]=857760878;c[z+8>>2]=2036477234;c[z+12>>2]=1797285236;c[z+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;c[z+20>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[z+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[z+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;c[z+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[z+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[z+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[z+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[z+48>>2]=1;c[z+52>>2]=0;c[z+56>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[z+60>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;og(z,h,b,j,k);C=z;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0))}Xd(B,b,j,k);p=A;c[p>>2]=j;c[p+4>>2]=k;Xd(B,A,8,0);Zd(B,f);nh(B|0,0,256)|0;if(!g){i=D;return 0}p=g;c[p>>2]=16;c[p+4>>2]=0;i=D;return 0}function Pa(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(f>>>0>4294967295|(f|0)==-1&e>>>0>4294967279)ra();Oa(a,a+e|0,0,d,e,f,g,h,i,0,k,l)|0;if(!b)return 0;k=lh(e|0,f|0,16,0)|0;j=b;c[j>>2]=k;c[j+4>>2]=C;return 0}function Qa(b,f,g,h,j,k,l,m,n,o,p,q){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;E=i;i=i+400|0;A=E+328|0;C=E;z=E+264|0;B=E+256|0;c[A>>2]=1634760805;c[A+4>>2]=857760878;c[A+8>>2]=2036477234;c[A+12>>2]=1797285236;c[A+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;y=q+4|0;c[A+20>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;o=q+8|0;c[A+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;r=q+12|0;c[A+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;s=q+16|0;c[A+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=q+20|0;c[A+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=q+24|0;c[A+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=q+28|0;c[A+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[A+48>>2]=0;c[A+52>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;w=p+4|0;c[A+56>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=p+8|0;c[A+60>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;D=z;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));og(A,z,z,64,0);c[C>>2]=c[z>>2]&67108863;D=z+3|0;c[C+4>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>2&67108611;D=z+6|0;c[C+8>>2]=(e[D>>1]|e[D+2>>1]<<16)>>>4&67092735;D=z+9|0;c[C+12>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>6&66076671;c[C+16>>2]=(c[z+12>>2]|0)>>>8&1048575;D=C+20|0;c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;c[D+12>>2]=0;c[D+16>>2]=0;c[C+40>>2]=c[z+16>>2];c[C+44>>2]=c[z+20>>2];c[C+48>>2]=c[z+24>>2];c[C+52>>2]=c[z+28>>2];D=C+56|0;c[D>>2]=0;c[D+4>>2]=0;a[C+80>>0]=0;D=z;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));Xd(C,l,m,n);l=kh(0,0,m|0,n|0)|0;Xd(C,34632,l&15,0);if(!((j|0)==0&(k|0)==0)){c[A>>2]=1634760805;c[A+4>>2]=857760878;c[A+8>>2]=2036477234;c[A+12>>2]=1797285236;c[A+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;c[A+20>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;c[A+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[A+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;c[A+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[A+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[A+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[A+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[A+48>>2]=1;c[A+52>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[A+56>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[A+60>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;og(A,h,b,j,k);D=A;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0))}Xd(C,b,j,k);p=kh(0,0,j|0,k|0)|0;Xd(C,34632,p&15,0);p=B;c[p>>2]=m;c[p+4>>2]=n;Xd(C,B,8,0);p=B;c[p>>2]=j;c[p+4>>2]=k;Xd(C,B,8,0);Zd(C,f);nh(C|0,0,256)|0;if(!g){i=E;return 0}p=g;c[p>>2]=16;c[p+4>>2]=0;i=E;return 0}function Ra(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(f>>>0>4294967295|(f|0)==-1&e>>>0>4294967279)ra();Qa(a,a+e|0,0,d,e,f,g,h,i,0,k,l)|0;if(!b)return 0;k=lh(e|0,f|0,16,0)|0;j=b;c[j>>2]=k;c[j+4>>2]=C;return 0}function Sa(b,f,g,h,j,k,l,m,n,o,p){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=i;i=i+416|0;B=D+328|0;r=D;f=D+264|0;q=D+256|0;A=D+392|0;c[B>>2]=1634760805;c[B+4>>2]=857760878;c[B+8>>2]=2036477234;c[B+12>>2]=1797285236;c[B+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;z=p+4|0;c[B+20>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;s=p+8|0;c[B+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=p+12|0;c[B+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=p+16|0;c[B+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=p+20|0;c[B+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;w=p+24|0;c[B+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=p+28|0;c[B+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[B+48>>2]=0;c[B+52>>2]=0;c[B+56>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;y=o+4|0;c[B+60>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;C=f;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));og(B,f,f,64,0);c[r>>2]=c[f>>2]&67108863;C=f+3|0;c[r+4>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>2&67108611;C=f+6|0;c[r+8>>2]=(e[C>>1]|e[C+2>>1]<<16)>>>4&67092735;C=f+9|0;c[r+12>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>6&66076671;c[r+16>>2]=(c[f+12>>2]|0)>>>8&1048575;C=r+20|0;c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[C+12>>2]=0;c[C+16>>2]=0;c[r+40>>2]=c[f+16>>2];c[r+44>>2]=c[f+20>>2];c[r+48>>2]=c[f+24>>2];c[r+52>>2]=c[f+28>>2];C=r+56|0;c[C>>2]=0;c[C+4>>2]=0;a[r+80>>0]=0;C=f;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));Xd(r,l,m,n);f=q;c[f>>2]=m;c[f+4>>2]=n;Xd(r,q,8,0);Xd(r,g,h,j);f=q;c[f>>2]=h;c[f+4>>2]=j;Xd(r,q,8,0);Zd(r,A);nh(r|0,0,256)|0;f=((a[k+15>>0]^a[A+15>>0]|(a[k+14>>0]^a[A+14>>0]|(a[k+13>>0]^a[A+13>>0]|(a[k+12>>0]^a[A+12>>0]|(a[k+11>>0]^a[A+11>>0]|(a[k+10>>0]^a[A+10>>0]|(a[k+9>>0]^a[A+9>>0]|(a[k+8>>0]^a[A+8>>0]|(a[k+7>>0]^a[A+7>>0]|(a[k+6>>0]^a[A+6>>0]|(a[k+5>>0]^a[A+5>>0]|(a[k+4>>0]^a[A+4>>0]|(a[k+3>>0]^a[A+3>>0]|(a[k+2>>0]^a[A+2>>0]|(a[k+1>>0]^a[A+1>>0]|a[k>>0]^a[A>>0])))))))))))))))&255)+511&256;C=A;E=C+16|0;do{a[C>>0]=0;C=C+1|0}while((C|0)<(E|0));if(!f){nh(b|0,0,h|0)|0;o=-1;i=D;return o|0}if(!((h|0)==0&(j|0)==0)){c[B>>2]=1634760805;c[B+4>>2]=857760878;c[B+8>>2]=2036477234;c[B+12>>2]=1797285236;c[B+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[B+20>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;c[B+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[B+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[B+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[B+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[B+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[B+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[B+48>>2]=1;c[B+52>>2]=0;c[B+56>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[B+60>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;og(B,g,b,h,j);C=B;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0))}o=0;i=D;return o|0}function Ta(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(g>>>0>0|(g|0)==0&f>>>0>15){d=lh(f|0,g|0,-16,-1)|0;i=Sa(a,0,e,d,C,e+f+-16|0,h,i,j,k,l)|0}else i=-1;if(!b)return i|0;d=(i|0)==0;g=lh(f|0,g|0,-16,-1)|0;c[b>>2]=d?g:0;c[b+4>>2]=d?C:0;return i|0}function Ua(b,f,g,h,j,k,l,m,n,o,p){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;E=i;i=i+416|0;C=E+328|0;r=E;f=E+264|0;q=E+256|0;B=E+392|0;c[C>>2]=1634760805;c[C+4>>2]=857760878;c[C+8>>2]=2036477234;c[C+12>>2]=1797285236;c[C+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;A=p+4|0;c[C+20>>2]=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;s=p+8|0;c[C+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=p+12|0;c[C+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=p+16|0;c[C+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=p+20|0;c[C+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;w=p+24|0;c[C+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=p+28|0;c[C+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[C+48>>2]=0;c[C+52>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;y=o+4|0;c[C+56>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;z=o+8|0;c[C+60>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;D=f;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));og(C,f,f,64,0);c[r>>2]=c[f>>2]&67108863;D=f+3|0;c[r+4>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>2&67108611;D=f+6|0;c[r+8>>2]=(e[D>>1]|e[D+2>>1]<<16)>>>4&67092735;D=f+9|0;c[r+12>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>6&66076671;c[r+16>>2]=(c[f+12>>2]|0)>>>8&1048575;D=r+20|0;c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;c[D+12>>2]=0;c[D+16>>2]=0;c[r+40>>2]=c[f+16>>2];c[r+44>>2]=c[f+20>>2];c[r+48>>2]=c[f+24>>2];c[r+52>>2]=c[f+28>>2];D=r+56|0;c[D>>2]=0;c[D+4>>2]=0;a[r+80>>0]=0;D=f;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));Xd(r,l,m,n);f=kh(0,0,m|0,n|0)|0;Xd(r,34632,f&15,0);Xd(r,g,h,j);f=kh(0,0,h|0,j|0)|0;Xd(r,34632,f&15,0);f=q;c[f>>2]=m;c[f+4>>2]=n;Xd(r,q,8,0);f=q;c[f>>2]=h;c[f+4>>2]=j;Xd(r,q,8,0);Zd(r,B);nh(r|0,0,256)|0;f=((a[k+15>>0]^a[B+15>>0]|(a[k+14>>0]^a[B+14>>0]|(a[k+13>>0]^a[B+13>>0]|(a[k+12>>0]^a[B+12>>0]|(a[k+11>>0]^a[B+11>>0]|(a[k+10>>0]^a[B+10>>0]|(a[k+9>>0]^a[B+9>>0]|(a[k+8>>0]^a[B+8>>0]|(a[k+7>>0]^a[B+7>>0]|(a[k+6>>0]^a[B+6>>0]|(a[k+5>>0]^a[B+5>>0]|(a[k+4>>0]^a[B+4>>0]|(a[k+3>>0]^a[B+3>>0]|(a[k+2>>0]^a[B+2>>0]|(a[k+1>>0]^a[B+1>>0]|a[k>>0]^a[B>>0])))))))))))))))&255)+511&256;D=B;F=D+16|0;do{a[D>>0]=0;D=D+1|0}while((D|0)<(F|0));if(!f){nh(b|0,0,h|0)|0;o=-1;i=E;return o|0}if(!((h|0)==0&(j|0)==0)){c[C>>2]=1634760805;c[C+4>>2]=857760878;c[C+8>>2]=2036477234;c[C+12>>2]=1797285236;c[C+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[C+20>>2]=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;c[C+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[C+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[C+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[C+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[C+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[C+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[C+48>>2]=1;c[C+52>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[C+56>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;c[C+60>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;og(C,g,b,h,j);D=C;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0))}o=0;i=E;return o|0}function Va(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(g>>>0>0|(g|0)==0&f>>>0>15){d=lh(f|0,g|0,-16,-1)|0;i=Ua(a,0,e,d,C,e+f+-16|0,h,i,j,k,l)|0}else i=-1;if(!b)return i|0;d=(i|0)==0;g=lh(f|0,g|0,-16,-1)|0;c[b>>2]=d?g:0;c[b+4>>2]=d?C:0;return i|0}function Wa(){return 32}function Xa(){return 12}function Ya(){return 0}function Za(){return 16}function _a(){return 32}function $a(){return 8}function ab(){return 0}function bb(){return 16}function cb(){return 32}function db(){return 32}function eb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+480|0;h=g+416|0;j=g;rb(j,f,32)|0;Dd(j,c,d,e)|0;tb(j,h)|0;d=h;e=b+32|0;do{a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}while((b|0)<(e|0));i=g;return 0}function fb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Db(a,b,c,d,e)|0}function gb(){return 32}function hb(){return 32}function ib(){return 208}function jb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;i=i+96|0;o=p+32|0;h=p;n=b+32|0;if(e>>>0<=64){j=n;c[j>>2]=0;c[j+4>>2]=0;c[b>>2]=c[8066];c[b+4>>2]=c[8067];c[b+8>>2]=c[8068];c[b+12>>2]=c[8069];c[b+16>>2]=c[8070];c[b+20>>2]=c[8071];c[b+24>>2]=c[8072];c[b+28>>2]=c[8073];j=o;k=j+64|0;do{a[j>>0]=54;j=j+1|0}while((j|0)<(k|0));g=(e|0)==0;if(!g){a[o>>0]=a[d>>0]^54;if((e|0)==1)l=d;else{f=e;e=1;m=8}}else l=d}else{j=n;c[j>>2]=0;c[j+4>>2]=0;c[b>>2]=c[8066];c[b+4>>2]=c[8067];c[b+8>>2]=c[8068];c[b+12>>2]=c[8069];c[b+16>>2]=c[8070];c[b+20>>2]=c[8071];c[b+24>>2]=c[8072];c[b+28>>2]=c[8073];j=ph(e|0,0,3)|0;g=n;c[g>>2]=j;c[g+4>>2]=C;g=b+40|0;j=g;f=d;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(b,g);d=d+64|0;f=lh(e|0,0,-64,-1)|0;e=C;if(e>>>0>0|(e|0)==0&f>>>0>63){do{xd(b,d);d=d+64|0;f=lh(f|0,e|0,-64,-1)|0;e=C}while(e>>>0>0|(e|0)==0&f>>>0>63);e=f}else e=f;qh(g|0,d|0,e|0)|0;yd(b,h)|0;j=n;c[j>>2]=0;c[j+4>>2]=0;c[b>>2]=c[8066];c[b+4>>2]=c[8067];c[b+8>>2]=c[8068];c[b+12>>2]=c[8069];c[b+16>>2]=c[8070];c[b+20>>2]=c[8071];c[b+24>>2]=c[8072];c[b+28>>2]=c[8073];j=o;k=j+64|0;do{a[j>>0]=54;j=j+1|0}while((j|0)<(k|0));a[o>>0]=a[h>>0]^54;d=h;f=32;e=1;g=0;m=8}if((m|0)==8)while(1){m=o+e|0;a[m>>0]=a[m>>0]^a[d+e>>0];e=e+1|0;if((e|0)==(f|0)){l=d;e=f;break}else m=8}d=n;c[d>>2]=512;c[d+4>>2]=0;d=b+40|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(b,d);h=b+104|0;f=b+136|0;j=f;c[j>>2]=0;c[j+4>>2]=0;c[h>>2]=c[8066];c[h+4>>2]=c[8067];c[h+8>>2]=c[8068];c[h+12>>2]=c[8069];c[h+16>>2]=c[8070];c[h+20>>2]=c[8071];c[h+24>>2]=c[8072];c[h+28>>2]=c[8073];j=o;k=j+64|0;do{a[j>>0]=92;j=j+1|0}while((j|0)<(k|0));if(g){d=f;j=d;c[j>>2]=512;d=d+4|0;c[d>>2]=0;d=b+144|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(h,d);i=p;return 0}a[o>>0]=a[l>>0]^92;if((e|0)==1){d=f;j=d;c[j>>2]=512;d=d+4|0;c[d>>2]=0;d=b+144|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(h,d);i=p;return 0}else d=1;do{n=o+d|0;a[n>>0]=a[n>>0]^a[l+d>>0];d=d+1|0}while((d|0)!=(e|0));d=f;j=d;c[j>>2]=512;d=d+4|0;c[d>>2]=0;d=b+144|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(h,d);i=p;return 0}function kb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((d|0)==0&(e|0)==0)return 0;g=a+32|0;i=g;j=c[i>>2]|0;i=c[i+4>>2]|0;f=oh(j|0,i|0,3)|0;f=f&63;h=ph(d|0,e|0,3)|0;h=lh(j|0,i|0,h|0,C|0)|0;c[g>>2]=h;c[g+4>>2]=C;g=64-f|0;f=a+40+f|0;if(0>e>>>0|0==(e|0)&g>>>0>d>>>0){qh(f|0,b|0,d|0)|0;return 0}qh(f|0,b|0,g|0)|0;h=a+40|0;xd(a,h);f=b+g|0;b=kh(d|0,e|0,g|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&b>>>0>63)do{xd(a,f);f=f+64|0;b=lh(b|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&b>>>0>63);qh(h|0,f|0,b|0)|0;return 0}function lb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;k=i;i=i+32|0;e=k;yd(b,e)|0;j=b+104|0;g=b+136|0;h=g;l=c[h>>2]|0;h=c[h+4>>2]|0;f=oh(l|0,h|0,3)|0;f=f&63;h=lh(l|0,h|0,256,0)|0;c[g>>2]=h;c[g+4>>2]=C;g=64-f|0;f=b+144+f|0;if(g>>>0>32){b=f;f=b+32|0;do{a[b>>0]=a[e>>0]|0;b=b+1|0;e=e+1|0}while((b|0)<(f|0));yd(j,d)|0;i=k;return 0}qh(f|0,e|0,g|0)|0;h=b+144|0;xd(j,h);e=e+g|0;b=kh(32,0,g|0,0)|0;f=C;if(f>>>0>0|(f|0)==0&b>>>0>63){do{xd(j,e);e=e+64|0;b=lh(b|0,f|0,-64,-1)|0;f=C}while(f>>>0>0|(f|0)==0&b>>>0>63);f=b}else f=b;qh(h|0,e|0,f|0)|0;yd(j,d)|0;i=k;return 0}function mb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;m=i;i=i+240|0;h=m+208|0;l=m;jb(l,g,32)|0;do{if(!((e|0)==0&(f|0)==0)){j=l+32|0;n=j;o=c[n>>2]|0;n=c[n+4>>2]|0;g=oh(o|0,n|0,3)|0;g=g&63;k=ph(e|0,f|0,3)|0;k=lh(o|0,n|0,k|0,C|0)|0;c[j>>2]=k;c[j+4>>2]=C;j=64-g|0;g=l+40+g|0;if(0>f>>>0|0==(f|0)&j>>>0>e>>>0){qh(g|0,d|0,e|0)|0;break}qh(g|0,d|0,j|0)|0;k=l+40|0;xd(l,k);g=d+j|0;d=kh(e|0,f|0,j|0,0)|0;j=C;if(j>>>0>0|(j|0)==0&d>>>0>63){do{xd(l,g);g=g+64|0;d=lh(d|0,j|0,-64,-1)|0;j=C}while(j>>>0>0|(j|0)==0&d>>>0>63);j=d}else j=d;qh(k|0,g|0,j|0)|0}}while(0);yd(l,h)|0;e=l+104|0;j=l+136|0;o=j;n=c[o>>2]|0;o=c[o+4>>2]|0;g=oh(n|0,o|0,3)|0;g=g&63;o=lh(n|0,o|0,256,0)|0;c[j>>2]=o;c[j+4>>2]=C;j=64-g|0;g=l+144+g|0;if(j>>>0>32){j=g;g=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(g|0));yd(e,b)|0;i=m;return 0}qh(g|0,h|0,j|0)|0;d=l+144|0;xd(e,d);h=h+j|0;j=kh(32,0,j|0,0)|0;g=C;if(g>>>0>0|(g|0)==0&j>>>0>63){do{xd(e,h);h=h+64|0;j=lh(j|0,g|0,-64,-1)|0;g=C}while(g>>>0>0|(g|0)==0&j>>>0>63);g=j}else g=j;qh(d|0,h|0,g|0)|0;yd(e,b)|0;i=m;return 0}function nb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;i=i+32|0;g=h;mb(g,c,d,e,f)|0;d=0;e=0;do{d=(a[g+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);d=(d+511|0)>>>8&1;e=(g|0)==(b|0);c=0;f=0;do{c=a[b+f>>0]^a[g+f>>0]|c;f=f+1|0}while((f|0)!=32);i=h;return(e?-1:d+-1|0)|(((c&255)+511|0)>>>8&1)+-1|0}function ob(){return 64}function pb(){return 32}function qb(){return 416}function rb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;i=i+192|0;n=o+64|0;f=o;g=b+64|0;if(e>>>0>128){c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;k=b;l=400;m=k+64|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));Dd(b,d,e,0)|0;Fd(b,f)|0;j=64;d=f}else j=e;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;k=b;l=400;m=k+64|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));k=n;m=k+128|0;do{a[k>>0]=54;k=k+1|0}while((k|0)<(m|0));h=(j|0)==0;if(!h?(a[n>>0]=a[d>>0]^54,(j|0)!=1):0){e=1;do{m=n+e|0;a[m>>0]=a[m>>0]^a[d+e>>0];e=e+1|0}while((e|0)!=(j|0))}e=b+72|0;c[e>>2]=1024;c[e+4>>2]=0;e=g;c[e>>2]=0;c[e+4>>2]=0;e=b+80|0;k=e;l=n;m=k+128|0;do{a[k>>0]=a[l>>0]|0;k=k+1|0;l=l+1|0}while((k|0)<(m|0));Ed(b,e);g=b+208|0;f=b+272|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;k=g;l=400;m=k+64|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));k=n;m=k+128|0;do{a[k>>0]=92;k=k+1|0}while((k|0)<(m|0));if(!h?(a[n>>0]=a[d>>0]^92,(j|0)!=1):0){e=1;do{m=n+e|0;a[m>>0]=a[m>>0]^a[d+e>>0];e=e+1|0}while((e|0)!=(j|0))}e=b+280|0;c[e>>2]=1024;c[e+4>>2]=0;e=f;c[e>>2]=0;c[e+4>>2]=0;e=b+288|0;k=e;l=n;m=k+128|0;do{a[k>>0]=a[l>>0]|0;k=k+1|0;l=l+1|0}while((k|0)<(m|0));Ed(g,e);i=o;return 0}function sb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Dd(a,b,c,d)|0;return 0}function tb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+64|0;e=l;Fd(b,e)|0;k=b+208|0;h=b+280|0;n=h;m=c[n>>2]|0;n=c[n+4>>2]|0;j=oh(m|0,n|0,3)|0;j=j&127;g=lh(m|0,n|0,512,0)|0;c[h>>2]=g;c[h+4>>2]=C;h=b+272|0;g=h;f=c[g>>2]|0;g=c[g+4>>2]|0;if(n>>>0>4294967295|(n|0)==-1&m>>>0>4294966783){f=lh(f|0,g|0,1,0)|0;g=C;n=h;c[n>>2]=f;c[n+4>>2]=g}c[h>>2]=f;c[h+4>>2]=g;f=kh(128,0,j|0,0)|0;h=C;g=b+288+j|0;if(h>>>0>0|(h|0)==0&f>>>0>64){f=g+64|0;do{a[g>>0]=a[e>>0]|0;g=g+1|0;e=e+1|0}while((g|0)<(f|0));Fd(k,d)|0;i=l;return 0}qh(g|0,e|0,f|0)|0;j=b+288|0;Ed(k,j);e=e+f|0;f=kh(64,0,f|0,h|0)|0;g=C;if(g>>>0>0|(g|0)==0&f>>>0>127)do{Ed(k,e);e=e+128|0;f=lh(f|0,g|0,-128,-1)|0;g=C}while(g>>>0>0|(g|0)==0&f>>>0>127);qh(j|0,e|0,f|0)|0;Fd(k,d)|0;i=l;return 0}function ub(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+480|0;h=l+416|0;j=l;rb(j,g,32)|0;Dd(j,d,e,f)|0;Fd(j,h)|0;k=j+208|0;d=j+280|0;n=d;m=c[n>>2]|0;n=c[n+4>>2]|0;g=oh(m|0,n|0,3)|0;g=g&127;f=lh(m|0,n|0,512,0)|0;c[d>>2]=f;c[d+4>>2]=C;d=j+272|0;f=d;e=c[f>>2]|0;f=c[f+4>>2]|0;if(n>>>0>4294967295|(n|0)==-1&m>>>0>4294966783){e=lh(e|0,f|0,1,0)|0;f=C;n=d;c[n>>2]=e;c[n+4>>2]=f}c[d>>2]=e;c[d+4>>2]=f;e=kh(128,0,g|0,0)|0;d=C;f=j+288+g|0;if(d>>>0>0|(d|0)==0&e>>>0>64){e=f+64|0;do{a[f>>0]=a[h>>0]|0;f=f+1|0;h=h+1|0}while((f|0)<(e|0));Fd(k,b)|0;i=l;return 0}qh(f|0,h|0,e|0)|0;g=j+288|0;Ed(k,g);h=h+e|0;e=kh(64,0,e|0,d|0)|0;f=C;if(f>>>0>0|(f|0)==0&e>>>0>127)do{Ed(k,h);h=h+128|0;e=lh(e|0,f|0,-128,-1)|0;f=C}while(f>>>0>0|(f|0)==0&e>>>0>127);qh(g|0,h|0,e|0)|0;Fd(k,b)|0;i=l;return 0}function vb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;i=i+64|0;g=h;ub(g,c,d,e,f)|0;d=0;e=0;do{d=(a[g+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=64);d=(d+511|0)>>>8&1;e=(g|0)==(b|0);c=0;f=0;do{c=a[b+f>>0]^a[g+f>>0]|c;f=f+1|0}while((f|0)!=64);i=h;return(e?-1:d+-1|0)|(((c&255)+511|0)>>>8&1)+-1|0}function wb(){return 32}function xb(){return 32}function yb(){return 416}function zb(a,b,c){a=a|0;b=b|0;c=c|0;rb(a,b,c)|0;return 0}function Ab(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Dd(a,b,c,d)|0;return 0}function Bb(b,c){b=b|0;c=c|0;var d=0,e=0;e=i;i=i+64|0;d=e;tb(b,d)|0;b=d;d=c+32|0;do{a[c>>0]=a[b>>0]|0;c=c+1|0;b=b+1|0}while((c|0)<(d|0));i=e;return 0}function Cb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+480|0;h=g+416|0;j=g;rb(j,f,32)|0;Dd(j,c,d,e)|0;tb(j,h)|0;d=h;e=b+32|0;do{a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}while((b|0)<(e|0));i=g;return 0}function Db(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;h=i;i=i+512|0;j=h+448|0;k=h;g=h+416|0;rb(k,f,32)|0;Dd(k,c,d,e)|0;tb(k,j)|0;d=g;e=j;c=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(c|0));d=0;e=0;do{d=(a[g+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);d=(d+511|0)>>>8&1;e=0;c=0;do{e=a[b+c>>0]^a[g+c>>0]|e;c=c+1|0}while((c|0)!=32);i=h;return d+-1|(((e&255)+511|0)>>>8&1)+-1|0}function Eb(){return 32}function Fb(){return 32}function Gb(){return 32}function Hb(){return 32}function Ib(){return 24}function Jb(){return 32}function Kb(){return 16}function Lb(){return 16}function Mb(){return 32412}function Nb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;i=i+272|0;h=k;g=k+208|0;f=h+64|0;j=h;l=400;m=j+64|0;do{c[j>>2]=c[l>>2];j=j+4|0;l=l+4|0}while((j|0)<(m|0));j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=f;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;l=e;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));Fd(h,g)|0;j=d;l=g;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));m=ef(b,d)|0;i=k;return m|0}function Ob(b,c){b=b|0;c=c|0;var d=0;d=0;do{a[c+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=32);return ef(b,c)|0}function Pb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=i;i=i+32|0;d=e;if(!(df(d,c,b)|0)){Fc(a,34648,d,0)|0;a=0}else a=-1;i=e;return a|0}function Qb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return zf(a,b,c,d,e,f)|0}function Rb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Af(a,b,c,d,e,f)|0}function Sb(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=zf(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function Tb(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=Af(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function Ub(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;qf(a,b,c,d,e,f,g)|0;return 0}function Vb(b,c,d,e,f,g,h,j){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;m=i;i=i+64|0;l=m+32|0;k=m;if(!(df(l,j,h)|0)){Fc(k,34648,l,0)|0;qf(b,c,d,e,f,g,k)|0;e=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(e|0));j=0;i=m;return j|0}else{j=-1;i=m;return j|0}return 0}function Wb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){e=-1;return e|0}qf(a+16|0,a,b,c,d,e,f)|0;e=0;return e|0}function Xb(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(e>>>0>0|(e|0)==0&d>>>0>4294967279){h=-1;i=l;return h|0}if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;qf(b+16|0,b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));j=0}else j=-1;h=j;i=l;return h|0}function Yb(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return sf(a,b,c,d,e,f,g)|0}function Zb(b,c,d,e,f,g,h,j){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;m=i;i=i+64|0;l=m+32|0;k=m;if(!(df(l,j,h)|0)){Fc(k,34648,l,0)|0;f=sf(b,c,d,e,f,g,k)|0;e=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(e|0));j=f;i=m;return j|0}else{j=-1;i=m;return j|0}return 0}function _b(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16){e=-1;return e|0}d=lh(c|0,d|0,-16,-1)|0;e=sf(a,b+16|0,b,d,C,e,f)|0;return e|0}function $b(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(e>>>0<0|(e|0)==0&d>>>0<16){h=-1;i=l;return h|0}if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;d=lh(d|0,e|0,-16,-1)|0;d=sf(b,c+16|0,c,d,C,f,j)|0;e=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(e|0))}else d=-1;h=d;i=l;return h|0}function ac(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;A=i;y=i=i+63&-64;i=i+480|0;w=y;v=y+448|0;z=y+424|0;x=y+392|0;y=y+360|0;h=0;do{a[y+h>>0]=ma(0)|0;h=h+1|0}while((h|0)!=32);if(ef(x,y)|0){z=-1;i=A;return z|0}j=b;h=x;k=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(k|0));nh(w+64|0,0,293)|0;j=w;h=400;k=j+48|0;do{c[j>>2]=c[h>>2];j=j+4|0;h=h+4|0}while((j|0)<(k|0));m=w;c[m>>2]=-222443248;c[m+4>>2]=1779033703;m=w+8|0;c[m>>2]=-2067093701;c[m+4>>2]=-1150833019;m=w+16|0;c[m>>2]=-23791573;c[m+4>>2]=1013904242;m=w+24|0;c[m>>2]=1595750129;c[m+4>>2]=-1521486534;m=w+32|0;c[m>>2]=-1377402159;c[m+4>>2]=1359893119;m=w+40|0;c[m>>2]=725511199;c[m+4>>2]=-1694144372;m=w+48|0;c[m>>2]=-79577749;c[m+4>>2]=528734635;m=w+56|0;c[m>>2]=327033209;c[m+4>>2]=1541459225;m=w+352|0;n=w+96|0;o=w+64|0;p=w+72|0;q=w+224|0;j=w+96|0;h=x;k=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(k|0));j=(c[m>>2]|0)+32|0;c[m>>2]=j;l=g;s=0;t=32;while(1){r=256-j|0;h=w+96+j|0;if(!(s>>>0>0|(s|0)==0&t>>>0>r>>>0)){u=6;break}qh(h|0,l|0,r|0)|0;c[m>>2]=(c[m>>2]|0)+r;k=o;j=c[k>>2]|0;k=c[k+4>>2]|0;B=lh(j|0,k|0,128,0)|0;h=o;c[h>>2]=B;c[h+4>>2]=C;h=p;h=lh((k>>>0>4294967295|(k|0)==-1&j>>>0>4294967167)&1|0,0,c[h>>2]|0,c[h+4>>2]|0)|0;j=p;c[j>>2]=h;c[j+4>>2]=C;id(w,n);j=n;h=q;k=j+128|0;do{c[j>>2]=c[h>>2];j=j+4|0;h=h+4|0}while((j|0)<(k|0));j=(c[m>>2]|0)+-128|0;c[m>>2]=j;h=kh(t|0,s|0,r|0,0)|0;if((t|0)==(r|0)&(s|0)==0)break;else{l=l+r|0;s=C;t=h}}if((u|0)==6){qh(h|0,l|0,t|0)|0;B=lh(c[m>>2]|0,0,t|0,s|0)|0;c[m>>2]=B}jd(w,z,24);h=b+32|0;if(f>>>0>0|(f|0)==0&e>>>0>4294967279)h=-1;else if(!(df(w,y,g)|0)){Fc(v,34648,w,0)|0;qf(b+48|0,h,d,e,f,z,v)|0;j=v;k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));h=0}else h=-1;j=y;k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));j=x;k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));j=z;k=j+24|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));B=h;i=A;return B|0}function bc(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=i;u=i=i+63&-64;i=i+416|0;v=u;x=u+384|0;u=u+360|0;if(f>>>0<0|(f|0)==0&e>>>0<48){x=-1;i=y;return x|0}nh(v+64|0,0,293)|0;k=v;j=400;l=k+48|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));p=v;c[p>>2]=-222443248;c[p+4>>2]=1779033703;p=v+8|0;c[p>>2]=-2067093701;c[p+4>>2]=-1150833019;p=v+16|0;c[p>>2]=-23791573;c[p+4>>2]=1013904242;p=v+24|0;c[p>>2]=1595750129;c[p+4>>2]=-1521486534;p=v+32|0;c[p>>2]=-1377402159;c[p+4>>2]=1359893119;p=v+40|0;c[p>>2]=725511199;c[p+4>>2]=-1694144372;p=v+48|0;c[p>>2]=-79577749;c[p+4>>2]=528734635;p=v+56|0;c[p>>2]=327033209;c[p+4>>2]=1541459225;p=v+352|0;q=v+96|0;r=v+64|0;s=v+72|0;t=v+224|0;k=v+96|0;j=d;l=k+32|0;do{a[k>>0]=a[j>>0]|0;k=k+1|0;j=j+1|0}while((k|0)<(l|0));k=(c[p>>2]|0)+32|0;c[p>>2]=k;n=0;o=32;while(1){m=256-k|0;j=v+96+k|0;if(!(n>>>0>0|(n|0)==0&o>>>0>m>>>0)){w=4;break}qh(j|0,g|0,m|0)|0;c[p>>2]=(c[p>>2]|0)+m;l=r;k=c[l>>2]|0;l=c[l+4>>2]|0;z=lh(k|0,l|0,128,0)|0;j=r;c[j>>2]=z;c[j+4>>2]=C;j=s;j=lh((l>>>0>4294967295|(l|0)==-1&k>>>0>4294967167)&1|0,0,c[j>>2]|0,c[j+4>>2]|0)|0;k=s;c[k>>2]=j;c[k+4>>2]=C;id(v,q);k=q;j=t;l=k+128|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));k=(c[p>>2]|0)+-128|0;c[p>>2]=k;j=kh(o|0,n|0,m|0,0)|0;if((o|0)==(m|0)&(n|0)==0)break;else{g=g+m|0;n=C;o=j}}if((w|0)==4){qh(j|0,g|0,o|0)|0;z=lh(c[p>>2]|0,0,o|0,n|0)|0;c[p>>2]=z}jd(v,u,24);if((e&-16|0)==32&(f|0)==0){z=-1;i=y;return z|0}if(!(df(v,h,d)|0)){Fc(x,34648,v,0)|0;g=lh(e|0,f|0,-48,-1)|0;g=sf(b,d+48|0,d+32|0,g,C,u,x)|0;k=x;l=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0))}else g=-1;z=g;i=y;return z|0}function cc(){return 48}function dc(){return 32}function ec(){return 32}function fc(){return 32}function gc(){return 32}function hc(){return 24}function ic(){return 32}function jc(){return 16}function kc(){return 16}function lc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return zf(a,b,c,d,e,f)|0}function mc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Af(a,b,c,d,e,f)|0}function nc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=i;d=i=i+63&-64;i=i+32|0;if(df(d,c,b)|0){c=-1;i=e;return c|0}Fc(a,34648,d,0)|0;c=0;i=e;return c|0}function oc(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;j=i=i+63&-64;i=i+64|0;k=j+32|0;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=zf(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function pc(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;j=i=i+63&-64;i=i+64|0;k=j+32|0;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=Af(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function qc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;g=i=i+63&-64;i=i+272|0;h=g;g=g+208|0;f=h+64|0;j=h;l=400;m=j+64|0;do{c[j>>2]=c[l>>2];j=j+4|0;l=l+4|0}while((j|0)<(m|0));j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=f;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;l=e;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));Fd(h,g)|0;j=d;l=g;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));m=ef(b,d)|0;i=k;return m|0}function rc(b,c){b=b|0;c=c|0;var d=0;d=0;do{a[c+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=32);return ef(b,c)|0}function sc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0;H=d[e>>0]|0;i=ph(d[e+1>>0]|0|0,0,8)|0;l=C;D=ph(d[e+2>>0]|0|0,0,16)|0;l=l|C;B=ph(d[e+3>>0]|0|0,0,24)|0;l=l|C;m=a[e+6>>0]|0;j=d[e+4>>0]|0;E=ph(d[e+5>>0]|0|0,0,8)|0;k=C;m=ph(m&255|0,0,16)|0;k=ph(E|j|m|0,k|C|0,6)|0;m=C;j=a[e+9>>0]|0;E=d[e+7>>0]|0;h=ph(d[e+8>>0]|0|0,0,8)|0;x=C;j=ph(j&255|0,0,16)|0;x=ph(h|E|j|0,x|C|0,5)|0;j=C;E=a[e+12>>0]|0;h=d[e+10>>0]|0;v=ph(d[e+11>>0]|0|0,0,8)|0;F=C;E=ph(E&255|0,0,16)|0;F=ph(v|h|E|0,F|C|0,3)|0;E=C;h=a[e+15>>0]|0;v=d[e+13>>0]|0;p=ph(d[e+14>>0]|0|0,0,8)|0;t=C;h=ph(h&255|0,0,16)|0;t=ph(p|v|h|0,t|C|0,2)|0;h=C;v=d[e+16>>0]|0;p=ph(d[e+17>>0]|0|0,0,8)|0;z=C;f=ph(d[e+18>>0]|0|0,0,16)|0;z=z|C;A=ph(d[e+19>>0]|0|0,0,24)|0;A=p|v|f|A;z=z|C;f=a[e+22>>0]|0;v=d[e+20>>0]|0;p=ph(d[e+21>>0]|0|0,0,8)|0;q=C;f=ph(f&255|0,0,16)|0;q=ph(p|v|f|0,q|C|0,7)|0;f=C;v=a[e+25>>0]|0;p=d[e+23>>0]|0;g=ph(d[e+24>>0]|0|0,0,8)|0;w=C;v=ph(v&255|0,0,16)|0;w=ph(g|p|v|0,w|C|0,5)|0;v=C;p=a[e+28>>0]|0;g=d[e+26>>0]|0;r=ph(d[e+27>>0]|0|0,0,8)|0;o=C;p=ph(p&255|0,0,16)|0;o=ph(r|g|p|0,o|C|0,4)|0;p=C;g=a[e+31>>0]|0;r=d[e+29>>0]|0;y=ph(d[e+30>>0]|0|0,0,8)|0;s=C;e=ph(g&255|0,0,16)|0;s=ph(y|r|e|0,s|C|0,2)|0;s=s&33554428;e=lh(s|0,0,16777216,0)|0;e=oh(e|0,C|0,25)|0;r=C;y=kh(0,0,e|0,r|0)|0;l=lh(y&19|0,0,i|H|D|B|0,l|0)|0;B=C;r=ph(e|0,r|0,25)|0;e=C;D=lh(k|0,m|0,16777216,0)|0;D=oh(D|0,C|0,25)|0;H=C;j=lh(x|0,j|0,D|0,H|0)|0;x=C;H=ph(D|0,H|0,25)|0;H=kh(k|0,m|0,H|0,C|0)|0;m=C;k=lh(F|0,E|0,16777216,0)|0;k=oh(k|0,C|0,25)|0;D=C;h=lh(t|0,h|0,k|0,D|0)|0;t=C;D=ph(k|0,D|0,25)|0;k=C;i=lh(A|0,z|0,16777216,0)|0;i=oh(i|0,C|0,25)|0;y=C;f=lh(q|0,f|0,i|0,y|0)|0;q=C;y=ph(i|0,y|0,25)|0;i=C;g=lh(w|0,v|0,16777216,0)|0;g=oh(g|0,C|0,25)|0;u=C;p=lh(o|0,p|0,g|0,u|0)|0;o=C;u=ph(g|0,u|0,25)|0;g=C;G=lh(l|0,B|0,33554432,0)|0;G=mh(G|0,C|0,26)|0;n=C;m=lh(H|0,m|0,G|0,n|0)|0;n=ph(G|0,n|0,26)|0;n=kh(l|0,B|0,n|0,C|0)|0;B=lh(j|0,x|0,33554432,0)|0;B=mh(B|0,C|0,26)|0;l=C;E=lh(B|0,l|0,F|0,E|0)|0;k=kh(E|0,C|0,D|0,k|0)|0;l=ph(B|0,l|0,26)|0;l=kh(j|0,x|0,l|0,C|0)|0;x=lh(h|0,t|0,33554432,0)|0;x=mh(x|0,C|0,26)|0;j=C;z=lh(x|0,j|0,A|0,z|0)|0;i=kh(z|0,C|0,y|0,i|0)|0;j=ph(x|0,j|0,26)|0;j=kh(h|0,t|0,j|0,C|0)|0;t=lh(f|0,q|0,33554432,0)|0;t=mh(t|0,C|0,26)|0;h=C;v=lh(t|0,h|0,w|0,v|0)|0;g=kh(v|0,C|0,u|0,g|0)|0;h=ph(t|0,h|0,26)|0;h=kh(f|0,q|0,h|0,C|0)|0;q=lh(p|0,o|0,33554432,0)|0;q=mh(q|0,C|0,26)|0;f=C;s=lh(s|0,0,q|0,f|0)|0;e=kh(s|0,C|0,r|0,e|0)|0;f=ph(q|0,f|0,26)|0;f=kh(p|0,o|0,f|0,C|0)|0;c[b>>2]=n;c[b+4>>2]=m;c[b+8>>2]=l;c[b+12>>2]=k;c[b+16>>2]=j;c[b+20>>2]=i;c[b+24>>2]=h;c[b+28>>2]=g;c[b+32>>2]=f;c[b+36>>2]=e;return}function tc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=c[d>>2]|0;l=c[d+4>>2]|0;k=c[d+8>>2]|0;j=c[d+12>>2]|0;i=c[d+16>>2]|0;h=c[d+20>>2]|0;g=c[d+24>>2]|0;f=c[d+28>>2]|0;o=c[d+32>>2]|0;e=c[d+36>>2]|0;m=((((((((((((((e*19|0)+16777216|0)>>>25)+m>>26)+l>>25)+k>>26)+j>>25)+i>>26)+h>>25)+g>>26)+f>>25)+o>>26)+e>>25)*19|0)+m|0;n=m>>26;l=n+l|0;n=m-(n<<26)|0;m=l>>25;k=m+k|0;m=l-(m<<25)|0;l=k>>26;j=l+j|0;l=k-(l<<26)|0;k=j>>25;i=k+i|0;k=j-(k<<25)|0;j=i>>26;h=j+h|0;j=i-(j<<26)|0;i=h>>25;g=i+g|0;i=h-(i<<25)|0;h=g>>26;f=h+f|0;h=g-(h<<26)|0;g=f>>25;d=g+o|0;g=f-(g<<25)|0;f=d>>26;e=f+e|0;f=d-(f<<26)|0;d=e&33554431;a[b>>0]=n;a[b+1>>0]=n>>>8;a[b+2>>0]=n>>>16;a[b+3>>0]=m<<2|n>>>24;a[b+4>>0]=m>>>6;a[b+5>>0]=m>>>14;a[b+6>>0]=l<<3|m>>>22;a[b+7>>0]=l>>>5;a[b+8>>0]=l>>>13;a[b+9>>0]=k<<5|l>>>21;a[b+10>>0]=k>>>3;a[b+11>>0]=k>>>11;a[b+12>>0]=j<<6|k>>>19;a[b+13>>0]=j>>>2;a[b+14>>0]=j>>>10;a[b+15>>0]=j>>>18;a[b+16>>0]=i;a[b+17>>0]=i>>>8;a[b+18>>0]=i>>>16;a[b+19>>0]=h<<1|i>>>24;a[b+20>>0]=h>>>7;a[b+21>>0]=h>>>15;a[b+22>>0]=g<<3|h>>>23;a[b+23>>0]=g>>>5;a[b+24>>0]=g>>>13;a[b+25>>0]=f<<4|g>>>21;a[b+26>>0]=f>>>4;a[b+27>>0]=f>>>12;a[b+28>>0]=f>>>20|d<<6;a[b+29>>0]=e>>>2;a[b+30>>0]=e>>>10;a[b+31>>0]=d>>>18;return}function uc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0;l=c[b>>2]|0;s=c[b+4>>2]|0;j=c[b+8>>2]|0;Rb=c[b+12>>2]|0;e=c[b+16>>2]|0;za=c[b+20>>2]|0;ya=c[b+24>>2]|0;zb=c[b+28>>2]|0;h=c[b+32>>2]|0;ga=c[b+36>>2]|0;H=c[d>>2]|0;J=c[d+4>>2]|0;F=c[d+8>>2]|0;D=c[d+12>>2]|0;A=c[d+16>>2]|0;y=c[d+20>>2]|0;w=c[d+24>>2]|0;u=c[d+28>>2]|0;k=c[d+32>>2]|0;t=c[d+36>>2]|0;Oc=J*19|0;bc=F*19|0;rb=D*19|0;Ha=A*19|0;jc=y*19|0;Db=w*19|0;Ta=u*19|0;Sc=k*19|0;Qc=t*19|0;p=s<<1;f=Rb<<1;M=za<<1;i=zb<<1;d=ga<<1;o=((l|0)<0)<<31>>31;I=((H|0)<0)<<31>>31;Mc=wh(H|0,I|0,l|0,o|0)|0;Lc=C;K=((J|0)<0)<<31>>31;wc=wh(J|0,K|0,l|0,o|0)|0;vc=C;G=((F|0)<0)<<31>>31;ub=wh(F|0,G|0,l|0,o|0)|0;tb=C;E=((D|0)<0)<<31>>31;Ka=wh(D|0,E|0,l|0,o|0)|0;Ja=C;B=((A|0)<0)<<31>>31;mc=wh(A|0,B|0,l|0,o|0)|0;lc=C;z=((y|0)<0)<<31>>31;Gb=wh(y|0,z|0,l|0,o|0)|0;Fb=C;x=((w|0)<0)<<31>>31;Wa=wh(w|0,x|0,l|0,o|0)|0;Va=C;v=((u|0)<0)<<31>>31;ja=wh(u|0,v|0,l|0,o|0)|0;ia=C;Pc=((k|0)<0)<<31>>31;P=wh(k|0,Pc|0,l|0,o|0)|0;O=C;o=wh(t|0,((t|0)<0)<<31>>31|0,l|0,o|0)|0;l=C;t=((s|0)<0)<<31>>31;dc=wh(H|0,I|0,s|0,t|0)|0;ec=C;n=((p|0)<0)<<31>>31;yb=wh(J|0,K|0,p|0,n|0)|0;xb=C;Ma=wh(F|0,G|0,s|0,t|0)|0;La=C;oc=wh(D|0,E|0,p|0,n|0)|0;nc=C;Ib=wh(A|0,B|0,s|0,t|0)|0;Hb=C;Ya=wh(y|0,z|0,p|0,n|0)|0;Xa=C;la=wh(w|0,x|0,s|0,t|0)|0;ka=C;R=wh(u|0,v|0,p|0,n|0)|0;Q=C;t=wh(k|0,Pc|0,s|0,t|0)|0;s=C;Pc=((Qc|0)<0)<<31>>31;n=wh(Qc|0,Pc|0,p|0,n|0)|0;p=C;k=((j|0)<0)<<31>>31;wb=wh(H|0,I|0,j|0,k|0)|0;vb=C;Qa=wh(J|0,K|0,j|0,k|0)|0;Pa=C;qc=wh(F|0,G|0,j|0,k|0)|0;pc=C;Kb=wh(D|0,E|0,j|0,k|0)|0;Jb=C;_a=wh(A|0,B|0,j|0,k|0)|0;Za=C;na=wh(y|0,z|0,j|0,k|0)|0;ma=C;T=wh(w|0,x|0,j|0,k|0)|0;S=C;v=wh(u|0,v|0,j|0,k|0)|0;u=C;Rc=((Sc|0)<0)<<31>>31;yc=wh(Sc|0,Rc|0,j|0,k|0)|0;xc=C;k=wh(Qc|0,Pc|0,j|0,k|0)|0;j=C;Sb=((Rb|0)<0)<<31>>31;Oa=wh(H|0,I|0,Rb|0,Sb|0)|0;Na=C;fa=((f|0)<0)<<31>>31;uc=wh(J|0,K|0,f|0,fa|0)|0;tc=C;Mb=wh(F|0,G|0,Rb|0,Sb|0)|0;Lb=C;ab=wh(D|0,E|0,f|0,fa|0)|0;$a=C;pa=wh(A|0,B|0,Rb|0,Sb|0)|0;oa=C;V=wh(y|0,z|0,f|0,fa|0)|0;U=C;x=wh(w|0,x|0,Rb|0,Sb|0)|0;w=C;Ua=((Ta|0)<0)<<31>>31;Ac=wh(Ta|0,Ua|0,f|0,fa|0)|0;zc=C;Sb=wh(Sc|0,Rc|0,Rb|0,Sb|0)|0;Rb=C;fa=wh(Qc|0,Pc|0,f|0,fa|0)|0;f=C;N=((e|0)<0)<<31>>31;sc=wh(H|0,I|0,e|0,N|0)|0;rc=C;Qb=wh(J|0,K|0,e|0,N|0)|0;Pb=C;cb=wh(F|0,G|0,e|0,N|0)|0;bb=C;ra=wh(D|0,E|0,e|0,N|0)|0;qa=C;X=wh(A|0,B|0,e|0,N|0)|0;W=C;z=wh(y|0,z|0,e|0,N|0)|0;y=C;Eb=((Db|0)<0)<<31>>31;Cc=wh(Db|0,Eb|0,e|0,N|0)|0;Bc=C;Ub=wh(Ta|0,Ua|0,e|0,N|0)|0;Tb=C;ib=wh(Sc|0,Rc|0,e|0,N|0)|0;hb=C;N=wh(Qc|0,Pc|0,e|0,N|0)|0;e=C;Aa=((za|0)<0)<<31>>31;Ob=wh(H|0,I|0,za|0,Aa|0)|0;Nb=C;b=((M|0)<0)<<31>>31;gb=wh(J|0,K|0,M|0,b|0)|0;fb=C;ta=wh(F|0,G|0,za|0,Aa|0)|0;sa=C;Z=wh(D|0,E|0,M|0,b|0)|0;Y=C;B=wh(A|0,B|0,za|0,Aa|0)|0;A=C;kc=((jc|0)<0)<<31>>31;Ec=wh(jc|0,kc|0,M|0,b|0)|0;Dc=C;Wb=wh(Db|0,Eb|0,za|0,Aa|0)|0;Vb=C;kb=wh(Ta|0,Ua|0,M|0,b|0)|0;jb=C;Aa=wh(Sc|0,Rc|0,za|0,Aa|0)|0;za=C;b=wh(Qc|0,Pc|0,M|0,b|0)|0;M=C;g=((ya|0)<0)<<31>>31;eb=wh(H|0,I|0,ya|0,g|0)|0;db=C;xa=wh(J|0,K|0,ya|0,g|0)|0;wa=C;$=wh(F|0,G|0,ya|0,g|0)|0;_=C;E=wh(D|0,E|0,ya|0,g|0)|0;D=C;Ia=((Ha|0)<0)<<31>>31;Gc=wh(Ha|0,Ia|0,ya|0,g|0)|0;Fc=C;Yb=wh(jc|0,kc|0,ya|0,g|0)|0;Xb=C;mb=wh(Db|0,Eb|0,ya|0,g|0)|0;lb=C;Ca=wh(Ta|0,Ua|0,ya|0,g|0)|0;Ba=C;m=wh(Sc|0,Rc|0,ya|0,g|0)|0;r=C;g=wh(Qc|0,Pc|0,ya|0,g|0)|0;ya=C;Ab=((zb|0)<0)<<31>>31;va=wh(H|0,I|0,zb|0,Ab|0)|0;ua=C;ea=((i|0)<0)<<31>>31;da=wh(J|0,K|0,i|0,ea|0)|0;ca=C;G=wh(F|0,G|0,zb|0,Ab|0)|0;F=C;sb=((rb|0)<0)<<31>>31;Ic=wh(rb|0,sb|0,i|0,ea|0)|0;Hc=C;_b=wh(Ha|0,Ia|0,zb|0,Ab|0)|0;Zb=C;ob=wh(jc|0,kc|0,i|0,ea|0)|0;nb=C;Ea=wh(Db|0,Eb|0,zb|0,Ab|0)|0;Da=C;gc=wh(Ta|0,Ua|0,i|0,ea|0)|0;fc=C;Ab=wh(Sc|0,Rc|0,zb|0,Ab|0)|0;zb=C;ea=wh(Qc|0,Pc|0,i|0,ea|0)|0;i=C;L=((h|0)<0)<<31>>31;ba=wh(H|0,I|0,h|0,L|0)|0;aa=C;K=wh(J|0,K|0,h|0,L|0)|0;J=C;cc=((bc|0)<0)<<31>>31;Kc=wh(bc|0,cc|0,h|0,L|0)|0;Jc=C;ac=wh(rb|0,sb|0,h|0,L|0)|0;$b=C;qb=wh(Ha|0,Ia|0,h|0,L|0)|0;pb=C;Ga=wh(jc|0,kc|0,h|0,L|0)|0;Fa=C;ic=wh(Db|0,Eb|0,h|0,L|0)|0;hc=C;Cb=wh(Ta|0,Ua|0,h|0,L|0)|0;Bb=C;Sa=wh(Sc|0,Rc|0,h|0,L|0)|0;Ra=C;L=wh(Qc|0,Pc|0,h|0,L|0)|0;h=C;ha=((ga|0)<0)<<31>>31;I=wh(H|0,I|0,ga|0,ha|0)|0;H=C;q=((d|0)<0)<<31>>31;Oc=wh(Oc|0,((Oc|0)<0)<<31>>31|0,d|0,q|0)|0;Nc=C;cc=wh(bc|0,cc|0,ga|0,ha|0)|0;bc=C;sb=wh(rb|0,sb|0,d|0,q|0)|0;rb=C;Ia=wh(Ha|0,Ia|0,ga|0,ha|0)|0;Ha=C;kc=wh(jc|0,kc|0,d|0,q|0)|0;jc=C;Eb=wh(Db|0,Eb|0,ga|0,ha|0)|0;Db=C;Ua=wh(Ta|0,Ua|0,d|0,q|0)|0;Ta=C;ha=wh(Sc|0,Rc|0,ga|0,ha|0)|0;ga=C;q=wh(Qc|0,Pc|0,d|0,q|0)|0;d=C;Lc=lh(Oc|0,Nc|0,Mc|0,Lc|0)|0;Jc=lh(Lc|0,C|0,Kc|0,Jc|0)|0;Hc=lh(Jc|0,C|0,Ic|0,Hc|0)|0;Fc=lh(Hc|0,C|0,Gc|0,Fc|0)|0;Dc=lh(Fc|0,C|0,Ec|0,Dc|0)|0;Bc=lh(Dc|0,C|0,Cc|0,Bc|0)|0;zc=lh(Bc|0,C|0,Ac|0,zc|0)|0;xc=lh(zc|0,C|0,yc|0,xc|0)|0;p=lh(xc|0,C|0,n|0,p|0)|0;n=C;ec=lh(wc|0,vc|0,dc|0,ec|0)|0;dc=C;rc=lh(uc|0,tc|0,sc|0,rc|0)|0;pc=lh(rc|0,C|0,qc|0,pc|0)|0;nc=lh(pc|0,C|0,oc|0,nc|0)|0;lc=lh(nc|0,C|0,mc|0,lc|0)|0;jc=lh(lc|0,C|0,kc|0,jc|0)|0;hc=lh(jc|0,C|0,ic|0,hc|0)|0;fc=lh(hc|0,C|0,gc|0,fc|0)|0;r=lh(fc|0,C|0,m|0,r|0)|0;M=lh(r|0,C|0,b|0,M|0)|0;b=C;r=lh(p|0,n|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;m=C;bc=lh(ec|0,dc|0,cc|0,bc|0)|0;$b=lh(bc|0,C|0,ac|0,$b|0)|0;Zb=lh($b|0,C|0,_b|0,Zb|0)|0;Xb=lh(Zb|0,C|0,Yb|0,Xb|0)|0;Vb=lh(Xb|0,C|0,Wb|0,Vb|0)|0;Tb=lh(Vb|0,C|0,Ub|0,Tb|0)|0;Rb=lh(Tb|0,C|0,Sb|0,Rb|0)|0;j=lh(Rb|0,C|0,k|0,j|0)|0;j=lh(j|0,C|0,r|0,m|0)|0;k=C;m=ph(r|0,m|0,26)|0;m=kh(p|0,n|0,m|0,C|0)|0;n=C;p=lh(M|0,b|0,33554432,0)|0;p=mh(p|0,C|0,26)|0;r=C;Nb=lh(Qb|0,Pb|0,Ob|0,Nb|0)|0;Lb=lh(Nb|0,C|0,Mb|0,Lb|0)|0;Jb=lh(Lb|0,C|0,Kb|0,Jb|0)|0;Hb=lh(Jb|0,C|0,Ib|0,Hb|0)|0;Fb=lh(Hb|0,C|0,Gb|0,Fb|0)|0;Db=lh(Fb|0,C|0,Eb|0,Db|0)|0;Bb=lh(Db|0,C|0,Cb|0,Bb|0)|0;zb=lh(Bb|0,C|0,Ab|0,zb|0)|0;ya=lh(zb|0,C|0,g|0,ya|0)|0;ya=lh(ya|0,C|0,p|0,r|0)|0;g=C;r=ph(p|0,r|0,26)|0;r=kh(M|0,b|0,r|0,C|0)|0;b=C;M=lh(j|0,k|0,16777216,0)|0;M=mh(M|0,C|0,25)|0;p=C;vb=lh(yb|0,xb|0,wb|0,vb|0)|0;tb=lh(vb|0,C|0,ub|0,tb|0)|0;rb=lh(tb|0,C|0,sb|0,rb|0)|0;pb=lh(rb|0,C|0,qb|0,pb|0)|0;nb=lh(pb|0,C|0,ob|0,nb|0)|0;lb=lh(nb|0,C|0,mb|0,lb|0)|0;jb=lh(lb|0,C|0,kb|0,jb|0)|0;hb=lh(jb|0,C|0,ib|0,hb|0)|0;f=lh(hb|0,C|0,fa|0,f|0)|0;f=lh(f|0,C|0,M|0,p|0)|0;fa=C;p=ph(M|0,p|0,25)|0;p=kh(j|0,k|0,p|0,C|0)|0;k=C;j=lh(ya|0,g|0,16777216,0)|0;j=mh(j|0,C|0,25)|0;M=C;db=lh(gb|0,fb|0,eb|0,db|0)|0;bb=lh(db|0,C|0,cb|0,bb|0)|0;$a=lh(bb|0,C|0,ab|0,$a|0)|0;Za=lh($a|0,C|0,_a|0,Za|0)|0;Xa=lh(Za|0,C|0,Ya|0,Xa|0)|0;Va=lh(Xa|0,C|0,Wa|0,Va|0)|0;Ta=lh(Va|0,C|0,Ua|0,Ta|0)|0;Ra=lh(Ta|0,C|0,Sa|0,Ra|0)|0;i=lh(Ra|0,C|0,ea|0,i|0)|0;i=lh(i|0,C|0,j|0,M|0)|0;ea=C;M=ph(j|0,M|0,25)|0;M=kh(ya|0,g|0,M|0,C|0)|0;g=C;ya=lh(f|0,fa|0,33554432,0)|0;ya=mh(ya|0,C|0,26)|0;j=C;Na=lh(Qa|0,Pa|0,Oa|0,Na|0)|0;La=lh(Na|0,C|0,Ma|0,La|0)|0;Ja=lh(La|0,C|0,Ka|0,Ja|0)|0;Ha=lh(Ja|0,C|0,Ia|0,Ha|0)|0;Fa=lh(Ha|0,C|0,Ga|0,Fa|0)|0;Da=lh(Fa|0,C|0,Ea|0,Da|0)|0;Ba=lh(Da|0,C|0,Ca|0,Ba|0)|0;za=lh(Ba|0,C|0,Aa|0,za|0)|0;e=lh(za|0,C|0,N|0,e|0)|0;e=lh(e|0,C|0,ya|0,j|0)|0;N=C;j=ph(ya|0,j|0,26)|0;j=kh(f|0,fa|0,j|0,C|0)|0;fa=lh(i|0,ea|0,33554432,0)|0;fa=mh(fa|0,C|0,26)|0;f=C;ua=lh(xa|0,wa|0,va|0,ua|0)|0;sa=lh(ua|0,C|0,ta|0,sa|0)|0;qa=lh(sa|0,C|0,ra|0,qa|0)|0;oa=lh(qa|0,C|0,pa|0,oa|0)|0;ma=lh(oa|0,C|0,na|0,ma|0)|0;ka=lh(ma|0,C|0,la|0,ka|0)|0;ia=lh(ka|0,C|0,ja|0,ia|0)|0;ga=lh(ia|0,C|0,ha|0,ga|0)|0;h=lh(ga|0,C|0,L|0,h|0)|0;h=lh(h|0,C|0,fa|0,f|0)|0;L=C;f=ph(fa|0,f|0,26)|0;f=kh(i|0,ea|0,f|0,C|0)|0;ea=lh(e|0,N|0,16777216,0)|0;ea=mh(ea|0,C|0,25)|0;i=C;b=lh(ea|0,i|0,r|0,b|0)|0;r=C;i=ph(ea|0,i|0,25)|0;i=kh(e|0,N|0,i|0,C|0)|0;N=lh(h|0,L|0,16777216,0)|0;N=mh(N|0,C|0,25)|0;e=C;aa=lh(da|0,ca|0,ba|0,aa|0)|0;_=lh(aa|0,C|0,$|0,_|0)|0;Y=lh(_|0,C|0,Z|0,Y|0)|0;W=lh(Y|0,C|0,X|0,W|0)|0;U=lh(W|0,C|0,V|0,U|0)|0;S=lh(U|0,C|0,T|0,S|0)|0;Q=lh(S|0,C|0,R|0,Q|0)|0;O=lh(Q|0,C|0,P|0,O|0)|0;d=lh(O|0,C|0,q|0,d|0)|0;d=lh(d|0,C|0,N|0,e|0)|0;q=C;e=ph(N|0,e|0,25)|0;e=kh(h|0,L|0,e|0,C|0)|0;L=lh(b|0,r|0,33554432,0)|0;L=mh(L|0,C|0,26)|0;h=C;g=lh(M|0,g|0,L|0,h|0)|0;h=ph(L|0,h|0,26)|0;h=kh(b|0,r|0,h|0,C|0)|0;r=lh(d|0,q|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;b=C;H=lh(K|0,J|0,I|0,H|0)|0;F=lh(H|0,C|0,G|0,F|0)|0;D=lh(F|0,C|0,E|0,D|0)|0;A=lh(D|0,C|0,B|0,A|0)|0;y=lh(A|0,C|0,z|0,y|0)|0;w=lh(y|0,C|0,x|0,w|0)|0;u=lh(w|0,C|0,v|0,u|0)|0;s=lh(u|0,C|0,t|0,s|0)|0;l=lh(s|0,C|0,o|0,l|0)|0;l=lh(l|0,C|0,r|0,b|0)|0;o=C;b=ph(r|0,b|0,26)|0;b=kh(d|0,q|0,b|0,C|0)|0;q=lh(l|0,o|0,16777216,0)|0;q=mh(q|0,C|0,25)|0;d=C;r=wh(q|0,d|0,19,0)|0;n=lh(r|0,C|0,m|0,n|0)|0;m=C;d=ph(q|0,d|0,25)|0;d=kh(l|0,o|0,d|0,C|0)|0;o=lh(n|0,m|0,33554432,0)|0;o=mh(o|0,C|0,26)|0;l=C;k=lh(p|0,k|0,o|0,l|0)|0;l=ph(o|0,l|0,26)|0;l=kh(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=b;c[a+36>>2]=d;return}function vc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0;bb=c[b>>2]|0;ua=c[b+4>>2]|0;j=c[b+8>>2]|0;la=c[b+12>>2]|0;e=c[b+16>>2]|0;db=c[b+20>>2]|0;Y=c[b+24>>2]|0;La=c[b+28>>2]|0;h=c[b+32>>2]|0;b=c[b+36>>2]|0;l=bb<<1;p=ua<<1;Xa=j<<1;f=la<<1;na=e<<1;B=db<<1;m=Y<<1;i=La<<1;Ka=db*38|0;ra=Y*19|0;va=La*38|0;da=h*19|0;gb=b*38|0;cb=((bb|0)<0)<<31>>31;cb=wh(bb|0,cb|0,bb|0,cb|0)|0;bb=C;o=((l|0)<0)<<31>>31;ta=((ua|0)<0)<<31>>31;Ia=wh(l|0,o|0,ua|0,ta|0)|0;Ha=C;k=((j|0)<0)<<31>>31;Wa=wh(j|0,k|0,l|0,o|0)|0;Va=C;ma=((la|0)<0)<<31>>31;Ua=wh(la|0,ma|0,l|0,o|0)|0;Ta=C;D=((e|0)<0)<<31>>31;Oa=wh(e|0,D|0,l|0,o|0)|0;Na=C;eb=((db|0)<0)<<31>>31;ya=wh(db|0,eb|0,l|0,o|0)|0;xa=C;g=((Y|0)<0)<<31>>31;ga=wh(Y|0,g|0,l|0,o|0)|0;fa=C;Ma=((La|0)<0)<<31>>31;R=wh(La|0,Ma|0,l|0,o|0)|0;Q=C;A=((h|0)<0)<<31>>31;F=wh(h|0,A|0,l|0,o|0)|0;E=C;q=((b|0)<0)<<31>>31;o=wh(b|0,q|0,l|0,o|0)|0;l=C;n=((p|0)<0)<<31>>31;ta=wh(p|0,n|0,ua|0,ta|0)|0;ua=C;ba=wh(p|0,n|0,j|0,k|0)|0;ca=C;P=((f|0)<0)<<31>>31;Sa=wh(f|0,P|0,p|0,n|0)|0;Ra=C;Ca=wh(e|0,D|0,p|0,n|0)|0;Ba=C;d=((B|0)<0)<<31>>31;ia=wh(B|0,d|0,p|0,n|0)|0;ha=C;T=wh(Y|0,g|0,p|0,n|0)|0;S=C;O=((i|0)<0)<<31>>31;H=wh(i|0,O|0,p|0,n|0)|0;G=C;t=wh(h|0,A|0,p|0,n|0)|0;s=C;fb=((gb|0)<0)<<31>>31;n=wh(gb|0,fb|0,p|0,n|0)|0;p=C;Qa=wh(j|0,k|0,j|0,k|0)|0;Pa=C;Ya=((Xa|0)<0)<<31>>31;Aa=wh(Xa|0,Ya|0,la|0,ma|0)|0;za=C;ka=wh(e|0,D|0,Xa|0,Ya|0)|0;ja=C;X=wh(db|0,eb|0,Xa|0,Ya|0)|0;W=C;N=wh(Y|0,g|0,Xa|0,Ya|0)|0;M=C;v=wh(La|0,Ma|0,Xa|0,Ya|0)|0;u=C;ea=((da|0)<0)<<31>>31;Ya=wh(da|0,ea|0,Xa|0,Ya|0)|0;Xa=C;k=wh(gb|0,fb|0,j|0,k|0)|0;j=C;ma=wh(f|0,P|0,la|0,ma|0)|0;la=C;V=wh(f|0,P|0,e|0,D|0)|0;U=C;J=wh(B|0,d|0,f|0,P|0)|0;I=C;z=wh(Y|0,g|0,f|0,P|0)|0;y=C;wa=((va|0)<0)<<31>>31;_a=wh(va|0,wa|0,f|0,P|0)|0;Za=C;Ea=wh(da|0,ea|0,f|0,P|0)|0;Da=C;P=wh(gb|0,fb|0,f|0,P|0)|0;f=C;L=wh(e|0,D|0,e|0,D|0)|0;K=C;oa=((na|0)<0)<<31>>31;x=wh(na|0,oa|0,db|0,eb|0)|0;w=C;sa=((ra|0)<0)<<31>>31;ab=wh(ra|0,sa|0,na|0,oa|0)|0;$a=C;Ga=wh(va|0,wa|0,e|0,D|0)|0;Fa=C;oa=wh(da|0,ea|0,na|0,oa|0)|0;na=C;D=wh(gb|0,fb|0,e|0,D|0)|0;e=C;eb=wh(Ka|0,((Ka|0)<0)<<31>>31|0,db|0,eb|0)|0;db=C;Ka=wh(ra|0,sa|0,B|0,d|0)|0;Ja=C;qa=wh(va|0,wa|0,B|0,d|0)|0;pa=C;_=wh(da|0,ea|0,B|0,d|0)|0;Z=C;d=wh(gb|0,fb|0,B|0,d|0)|0;B=C;sa=wh(ra|0,sa|0,Y|0,g|0)|0;ra=C;aa=wh(va|0,wa|0,Y|0,g|0)|0;$=C;m=wh(da|0,ea|0,m|0,((m|0)<0)<<31>>31|0)|0;r=C;g=wh(gb|0,fb|0,Y|0,g|0)|0;Y=C;Ma=wh(va|0,wa|0,La|0,Ma|0)|0;La=C;wa=wh(da|0,ea|0,i|0,O|0)|0;va=C;O=wh(gb|0,fb|0,i|0,O|0)|0;i=C;ea=wh(da|0,ea|0,h|0,A|0)|0;da=C;A=wh(gb|0,fb|0,h|0,A|0)|0;h=C;q=wh(gb|0,fb|0,b|0,q|0)|0;b=C;bb=lh(eb|0,db|0,cb|0,bb|0)|0;$a=lh(bb|0,C|0,ab|0,$a|0)|0;Za=lh($a|0,C|0,_a|0,Za|0)|0;Xa=lh(Za|0,C|0,Ya|0,Xa|0)|0;p=lh(Xa|0,C|0,n|0,p|0)|0;n=C;ua=lh(Wa|0,Va|0,ta|0,ua|0)|0;ta=C;ca=lh(Ua|0,Ta|0,ba|0,ca|0)|0;ba=C;Pa=lh(Sa|0,Ra|0,Qa|0,Pa|0)|0;Na=lh(Pa|0,C|0,Oa|0,Na|0)|0;La=lh(Na|0,C|0,Ma|0,La|0)|0;r=lh(La|0,C|0,m|0,r|0)|0;B=lh(r|0,C|0,d|0,B|0)|0;d=C;r=lh(p|0,n|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;m=C;Ha=lh(Ka|0,Ja|0,Ia|0,Ha|0)|0;Fa=lh(Ha|0,C|0,Ga|0,Fa|0)|0;Da=lh(Fa|0,C|0,Ea|0,Da|0)|0;j=lh(Da|0,C|0,k|0,j|0)|0;j=lh(j|0,C|0,r|0,m|0)|0;k=C;m=ph(r|0,m|0,26)|0;m=kh(p|0,n|0,m|0,C|0)|0;n=C;p=lh(B|0,d|0,33554432,0)|0;p=mh(p|0,C|0,26)|0;r=C;za=lh(Ca|0,Ba|0,Aa|0,za|0)|0;xa=lh(za|0,C|0,ya|0,xa|0)|0;va=lh(xa|0,C|0,wa|0,va|0)|0;Y=lh(va|0,C|0,g|0,Y|0)|0;Y=lh(Y|0,C|0,p|0,r|0)|0;g=C;r=ph(p|0,r|0,26)|0;r=kh(B|0,d|0,r|0,C|0)|0;d=C;B=lh(j|0,k|0,16777216,0)|0;B=mh(B|0,C|0,25)|0;p=C;ra=lh(ua|0,ta|0,sa|0,ra|0)|0;pa=lh(ra|0,C|0,qa|0,pa|0)|0;na=lh(pa|0,C|0,oa|0,na|0)|0;f=lh(na|0,C|0,P|0,f|0)|0;f=lh(f|0,C|0,B|0,p|0)|0;P=C;p=ph(B|0,p|0,25)|0;p=kh(j|0,k|0,p|0,C|0)|0;k=C;j=lh(Y|0,g|0,16777216,0)|0;j=mh(j|0,C|0,25)|0;B=C;ja=lh(ma|0,la|0,ka|0,ja|0)|0;ha=lh(ja|0,C|0,ia|0,ha|0)|0;fa=lh(ha|0,C|0,ga|0,fa|0)|0;da=lh(fa|0,C|0,ea|0,da|0)|0;i=lh(da|0,C|0,O|0,i|0)|0;i=lh(i|0,C|0,j|0,B|0)|0;O=C;B=ph(j|0,B|0,25)|0;B=kh(Y|0,g|0,B|0,C|0)|0;g=C;Y=lh(f|0,P|0,33554432,0)|0;Y=mh(Y|0,C|0,26)|0;j=C;$=lh(ca|0,ba|0,aa|0,$|0)|0;Z=lh($|0,C|0,_|0,Z|0)|0;e=lh(Z|0,C|0,D|0,e|0)|0;e=lh(e|0,C|0,Y|0,j|0)|0;D=C;j=ph(Y|0,j|0,26)|0;j=kh(f|0,P|0,j|0,C|0)|0;P=lh(i|0,O|0,33554432,0)|0;P=mh(P|0,C|0,26)|0;f=C;U=lh(X|0,W|0,V|0,U|0)|0;S=lh(U|0,C|0,T|0,S|0)|0;Q=lh(S|0,C|0,R|0,Q|0)|0;h=lh(Q|0,C|0,A|0,h|0)|0;h=lh(h|0,C|0,P|0,f|0)|0;A=C;f=ph(P|0,f|0,26)|0;f=kh(i|0,O|0,f|0,C|0)|0;O=lh(e|0,D|0,16777216,0)|0;O=mh(O|0,C|0,25)|0;i=C;d=lh(O|0,i|0,r|0,d|0)|0;r=C;i=ph(O|0,i|0,25)|0;i=kh(e|0,D|0,i|0,C|0)|0;D=lh(h|0,A|0,16777216,0)|0;D=mh(D|0,C|0,25)|0;e=C;K=lh(N|0,M|0,L|0,K|0)|0;I=lh(K|0,C|0,J|0,I|0)|0;G=lh(I|0,C|0,H|0,G|0)|0;E=lh(G|0,C|0,F|0,E|0)|0;b=lh(E|0,C|0,q|0,b|0)|0;b=lh(b|0,C|0,D|0,e|0)|0;q=C;e=ph(D|0,e|0,25)|0;e=kh(h|0,A|0,e|0,C|0)|0;A=lh(d|0,r|0,33554432,0)|0;A=mh(A|0,C|0,26)|0;h=C;g=lh(B|0,g|0,A|0,h|0)|0;h=ph(A|0,h|0,26)|0;h=kh(d|0,r|0,h|0,C|0)|0;r=lh(b|0,q|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;d=C;w=lh(z|0,y|0,x|0,w|0)|0;u=lh(w|0,C|0,v|0,u|0)|0;s=lh(u|0,C|0,t|0,s|0)|0;l=lh(s|0,C|0,o|0,l|0)|0;l=lh(l|0,C|0,r|0,d|0)|0;o=C;d=ph(r|0,d|0,26)|0;d=kh(b|0,q|0,d|0,C|0)|0;q=lh(l|0,o|0,16777216,0)|0;q=mh(q|0,C|0,25)|0;b=C;r=wh(q|0,b|0,19,0)|0;n=lh(r|0,C|0,m|0,n|0)|0;m=C;b=ph(q|0,b|0,25)|0;b=kh(l|0,o|0,b|0,C|0)|0;o=lh(n|0,m|0,33554432,0)|0;o=mh(o|0,C|0,26)|0;l=C;k=lh(p|0,k|0,o|0,l|0)|0;l=ph(o|0,l|0,26)|0;l=kh(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=d;c[a+36>>2]=b;return}function wc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=i;c=i=i+63&-64;i=i+160|0;d=c+120|0;e=c+80|0;f=c+40|0;vc(d,b);vc(e,d);vc(e,e);uc(e,b,e);uc(d,d,e);vc(f,d);uc(e,e,f);vc(f,e);vc(f,f);vc(f,f);vc(f,f);vc(f,f);uc(e,f,e);vc(f,e);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);uc(f,f,e);vc(c,f);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);uc(f,c,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);uc(e,f,e);vc(f,e);b=1;do{vc(f,f);b=b+1|0}while((b|0)!=50);uc(f,f,e);vc(c,f);b=1;do{vc(c,c);b=b+1|0}while((b|0)!=100);uc(f,c,f);vc(f,f);b=1;do{vc(f,f);b=b+1|0}while((b|0)!=50);uc(e,f,e);vc(e,e);vc(e,e);vc(e,e);vc(e,e);vc(e,e);uc(a,e,d);i=g;return}function xc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;V=b+40|0;j=b+44|0;m=b+48|0;p=b+52|0;s=b+56|0;v=b+60|0;y=b+64|0;B=b+68|0;E=b+72|0;C=b+76|0;S=b+4|0;P=b+8|0;e=b+12|0;l=b+16|0;n=b+20|0;u=b+24|0;w=b+28|0;D=b+32|0;O=b+36|0;ga=(c[S>>2]|0)+(c[j>>2]|0)|0;fa=(c[P>>2]|0)+(c[m>>2]|0)|0;ea=(c[e>>2]|0)+(c[p>>2]|0)|0;da=(c[l>>2]|0)+(c[s>>2]|0)|0;ca=(c[n>>2]|0)+(c[v>>2]|0)|0;ba=(c[u>>2]|0)+(c[y>>2]|0)|0;aa=(c[w>>2]|0)+(c[B>>2]|0)|0;$=(c[D>>2]|0)+(c[E>>2]|0)|0;Y=(c[O>>2]|0)+(c[C>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[V>>2]|0);ha=a+4|0;c[ha>>2]=ga;ga=a+8|0;c[ga>>2]=fa;fa=a+12|0;c[fa>>2]=ea;ea=a+16|0;c[ea>>2]=da;da=a+20|0;c[da>>2]=ca;ca=a+24|0;c[ca>>2]=ba;ba=a+28|0;c[ba>>2]=aa;aa=a+32|0;c[aa>>2]=$;$=a+36|0;c[$>>2]=Y;Y=a+40|0;S=(c[j>>2]|0)-(c[S>>2]|0)|0;P=(c[m>>2]|0)-(c[P>>2]|0)|0;e=(c[p>>2]|0)-(c[e>>2]|0)|0;l=(c[s>>2]|0)-(c[l>>2]|0)|0;n=(c[v>>2]|0)-(c[n>>2]|0)|0;u=(c[y>>2]|0)-(c[u>>2]|0)|0;w=(c[B>>2]|0)-(c[w>>2]|0)|0;D=(c[E>>2]|0)-(c[D>>2]|0)|0;O=(c[C>>2]|0)-(c[O>>2]|0)|0;c[Y>>2]=(c[V>>2]|0)-(c[b>>2]|0);V=a+44|0;c[V>>2]=S;S=a+48|0;c[S>>2]=P;P=a+52|0;c[P>>2]=e;e=a+56|0;c[e>>2]=l;l=a+60|0;c[l>>2]=n;n=a+64|0;c[n>>2]=u;u=a+68|0;c[u>>2]=w;w=a+72|0;c[w>>2]=D;D=a+76|0;c[D>>2]=O;O=a+80|0;uc(O,a,d);uc(Y,Y,d+40|0);C=a+120|0;uc(C,d+120|0,b+120|0);uc(a,b+80|0,d+80|0);E=c[a>>2]<<1;B=c[ha>>2]<<1;y=c[ga>>2]<<1;v=c[fa>>2]<<1;s=c[ea>>2]<<1;p=c[da>>2]<<1;m=c[ca>>2]<<1;j=c[ba>>2]<<1;g=c[aa>>2]<<1;b=c[$>>2]<<1;Z=c[O>>2]|0;N=a+84|0;W=c[N>>2]|0;M=a+88|0;T=c[M>>2]|0;L=a+92|0;Q=c[L>>2]|0;K=a+96|0;f=c[K>>2]|0;J=a+100|0;h=c[J>>2]|0;I=a+104|0;o=c[I>>2]|0;H=a+108|0;q=c[H>>2]|0;G=a+112|0;x=c[G>>2]|0;F=a+116|0;z=c[F>>2]|0;_=c[Y>>2]|0;X=c[V>>2]|0;U=c[S>>2]|0;R=c[P>>2]|0;d=c[e>>2]|0;i=c[l>>2]|0;k=c[n>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;A=c[D>>2]|0;c[a>>2]=Z-_;c[ha>>2]=W-X;c[ga>>2]=T-U;c[fa>>2]=Q-R;c[ea>>2]=f-d;c[da>>2]=h-i;c[ca>>2]=o-k;c[ba>>2]=q-r;c[aa>>2]=x-t;c[$>>2]=z-A;c[Y>>2]=_+Z;c[V>>2]=X+W;c[S>>2]=U+T;c[P>>2]=R+Q;c[e>>2]=d+f;c[l>>2]=i+h;c[n>>2]=k+o;c[u>>2]=r+q;c[w>>2]=t+x;c[D>>2]=A+z;D=c[C>>2]|0;z=a+124|0;A=c[z>>2]|0;w=a+128|0;x=c[w>>2]|0;t=a+132|0;u=c[t>>2]|0;q=a+136|0;r=c[q>>2]|0;n=a+140|0;o=c[n>>2]|0;k=a+144|0;l=c[k>>2]|0;h=a+148|0;i=c[h>>2]|0;e=a+152|0;f=c[e>>2]|0;a=a+156|0;d=c[a>>2]|0;c[O>>2]=D+E;c[N>>2]=A+B;c[M>>2]=x+y;c[L>>2]=u+v;c[K>>2]=r+s;c[J>>2]=o+p;c[I>>2]=l+m;c[H>>2]=i+j;c[G>>2]=f+g;c[F>>2]=d+b;c[C>>2]=E-D;c[z>>2]=B-A;c[w>>2]=y-x;c[t>>2]=v-u;c[q>>2]=s-r;c[n>>2]=p-o;c[k>>2]=m-l;c[h>>2]=j-i;c[e>>2]=g-f;c[a>>2]=b-d;return}function yc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;V=i;R=i=i+63&-64;i=i+320|0;U=R+280|0;l=R+240|0;k=R+200|0;S=R+160|0;m=R+120|0;n=R+80|0;o=R+40|0;T=b+40|0;sc(T,e);h=b+80|0;c[h>>2]=1;j=b+84|0;f=j;g=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));vc(S,T);uc(m,S,464);O=S+4|0;P=S+8|0;Q=S+12|0;I=S+16|0;J=S+20|0;K=S+24|0;L=S+28|0;M=S+32|0;N=S+36|0;$=c[h>>2]|0;_=c[j>>2]|0;Y=c[b+88>>2]|0;W=c[b+92>>2]|0;q=c[b+96>>2]|0;u=c[b+100>>2]|0;w=c[b+104>>2]|0;y=c[b+108>>2]|0;A=c[b+112>>2]|0;C=c[b+116>>2]|0;g=(c[S>>2]|0)-$|0;h=(c[O>>2]|0)-_|0;j=(c[P>>2]|0)-Y|0;s=(c[Q>>2]|0)-W|0;t=(c[I>>2]|0)-q|0;D=(c[J>>2]|0)-u|0;E=(c[K>>2]|0)-w|0;F=(c[L>>2]|0)-y|0;G=(c[M>>2]|0)-A|0;H=(c[N>>2]|0)-C|0;c[S>>2]=g;c[O>>2]=h;c[P>>2]=j;c[Q>>2]=s;c[I>>2]=t;c[J>>2]=D;c[K>>2]=E;c[L>>2]=F;c[M>>2]=G;c[N>>2]=H;Z=m+4|0;X=m+8|0;p=m+12|0;r=m+16|0;v=m+20|0;x=m+24|0;z=m+28|0;B=m+32|0;f=m+36|0;_=_+(c[Z>>2]|0)|0;Y=Y+(c[X>>2]|0)|0;W=W+(c[p>>2]|0)|0;q=q+(c[r>>2]|0)|0;u=u+(c[v>>2]|0)|0;w=w+(c[x>>2]|0)|0;y=y+(c[z>>2]|0)|0;A=A+(c[B>>2]|0)|0;C=C+(c[f>>2]|0)|0;c[m>>2]=$+(c[m>>2]|0);c[Z>>2]=_;c[X>>2]=Y;c[p>>2]=W;c[r>>2]=q;c[v>>2]=u;c[x>>2]=w;c[z>>2]=y;c[B>>2]=A;c[f>>2]=C;vc(n,m);uc(n,n,m);vc(b,n);uc(b,b,m);uc(b,b,S);vc(U,b);vc(l,U);vc(l,l);uc(l,b,l);uc(U,U,l);vc(U,U);uc(U,l,U);vc(l,U);vc(l,l);vc(l,l);vc(l,l);vc(l,l);uc(U,l,U);vc(l,U);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);uc(l,l,U);vc(k,l);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);uc(l,k,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);uc(U,l,U);vc(l,U);f=1;do{vc(l,l);f=f+1|0}while((f|0)!=50);uc(l,l,U);vc(k,l);f=1;do{vc(k,k);f=f+1|0}while((f|0)!=100);uc(l,k,l);vc(l,l);f=1;do{vc(l,l);f=f+1|0}while((f|0)!=50);uc(U,l,U);vc(U,U);vc(U,U);uc(b,U,b);uc(b,b,n);uc(b,b,S);vc(o,b);uc(o,o,m);u=c[o>>2]|0;v=c[o+4>>2]|0;w=c[o+8>>2]|0;x=c[o+12>>2]|0;y=c[o+16>>2]|0;z=c[o+20>>2]|0;A=c[o+24>>2]|0;B=c[o+28>>2]|0;C=c[o+32>>2]|0;r=c[o+36>>2]|0;c[R>>2]=u-g;q=R+4|0;c[q>>2]=v-h;p=R+8|0;c[p>>2]=w-j;o=R+12|0;c[o>>2]=x-s;n=R+16|0;c[n>>2]=y-t;m=R+20|0;c[m>>2]=z-D;l=R+24|0;c[l>>2]=A-E;k=R+28|0;c[k>>2]=B-F;j=R+32|0;c[j>>2]=C-G;h=R+36|0;c[h>>2]=r-H;tc(U,R);f=0;g=0;do{f=(a[34664+g>>0]^a[U+g>>0])&255|f;g=g+1|0}while((g|0)!=32);do{if(!(f+511&256)){O=(c[O>>2]|0)+v|0;W=(c[P>>2]|0)+w|0;X=(c[Q>>2]|0)+x|0;Y=(c[I>>2]|0)+y|0;Z=(c[J>>2]|0)+z|0;_=(c[K>>2]|0)+A|0;$=(c[L>>2]|0)+B|0;g=(c[M>>2]|0)+C|0;f=(c[N>>2]|0)+r|0;c[R>>2]=(c[S>>2]|0)+u;c[q>>2]=O;c[p>>2]=W;c[o>>2]=X;c[n>>2]=Y;c[m>>2]=Z;c[l>>2]=_;c[k>>2]=$;c[j>>2]=g;c[h>>2]=f;tc(U,R);f=0;g=0;do{f=(a[34664+g>>0]^a[U+g>>0])&255|f;g=g+1|0}while((g|0)!=32);if(!(f+511&256)){$=-1;i=V;return $|0}else{uc(b,b,504);break}}}while(0);tc(U,b);if(((d[U>>0]|0)&1|0)==((d[e+31>>0]|0)>>>7|0)){K=b+4|0;M=b+8|0;O=b+12|0;Q=b+16|0;S=b+20|0;U=b+24|0;X=b+28|0;Z=b+32|0;$=b+36|0;J=0-(c[K>>2]|0)|0;L=0-(c[M>>2]|0)|0;N=0-(c[O>>2]|0)|0;P=0-(c[Q>>2]|0)|0;R=0-(c[S>>2]|0)|0;e=0-(c[U>>2]|0)|0;W=0-(c[X>>2]|0)|0;Y=0-(c[Z>>2]|0)|0;_=0-(c[$>>2]|0)|0;c[b>>2]=0-(c[b>>2]|0);c[K>>2]=J;c[M>>2]=L;c[O>>2]=N;c[Q>>2]=P;c[S>>2]=R;c[U>>2]=e;c[X>>2]=W;c[Z>>2]=Y;c[$>>2]=_}uc(b+120|0,b,T);$=0;i=V;return $|0}function zc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;V=b+40|0;j=b+44|0;m=b+48|0;p=b+52|0;s=b+56|0;v=b+60|0;y=b+64|0;B=b+68|0;E=b+72|0;C=b+76|0;S=b+4|0;P=b+8|0;e=b+12|0;l=b+16|0;n=b+20|0;u=b+24|0;w=b+28|0;D=b+32|0;O=b+36|0;ga=(c[S>>2]|0)+(c[j>>2]|0)|0;fa=(c[P>>2]|0)+(c[m>>2]|0)|0;ea=(c[e>>2]|0)+(c[p>>2]|0)|0;da=(c[l>>2]|0)+(c[s>>2]|0)|0;ca=(c[n>>2]|0)+(c[v>>2]|0)|0;ba=(c[u>>2]|0)+(c[y>>2]|0)|0;aa=(c[w>>2]|0)+(c[B>>2]|0)|0;$=(c[D>>2]|0)+(c[E>>2]|0)|0;Y=(c[O>>2]|0)+(c[C>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[V>>2]|0);ha=a+4|0;c[ha>>2]=ga;ga=a+8|0;c[ga>>2]=fa;fa=a+12|0;c[fa>>2]=ea;ea=a+16|0;c[ea>>2]=da;da=a+20|0;c[da>>2]=ca;ca=a+24|0;c[ca>>2]=ba;ba=a+28|0;c[ba>>2]=aa;aa=a+32|0;c[aa>>2]=$;$=a+36|0;c[$>>2]=Y;Y=a+40|0;S=(c[j>>2]|0)-(c[S>>2]|0)|0;P=(c[m>>2]|0)-(c[P>>2]|0)|0;e=(c[p>>2]|0)-(c[e>>2]|0)|0;l=(c[s>>2]|0)-(c[l>>2]|0)|0;n=(c[v>>2]|0)-(c[n>>2]|0)|0;u=(c[y>>2]|0)-(c[u>>2]|0)|0;w=(c[B>>2]|0)-(c[w>>2]|0)|0;D=(c[E>>2]|0)-(c[D>>2]|0)|0;O=(c[C>>2]|0)-(c[O>>2]|0)|0;c[Y>>2]=(c[V>>2]|0)-(c[b>>2]|0);V=a+44|0;c[V>>2]=S;S=a+48|0;c[S>>2]=P;P=a+52|0;c[P>>2]=e;e=a+56|0;c[e>>2]=l;l=a+60|0;c[l>>2]=n;n=a+64|0;c[n>>2]=u;u=a+68|0;c[u>>2]=w;w=a+72|0;c[w>>2]=D;D=a+76|0;c[D>>2]=O;O=a+80|0;uc(O,a,d);uc(Y,Y,d+40|0);C=a+120|0;uc(C,d+80|0,b+120|0);E=c[b+80>>2]<<1;B=c[b+84>>2]<<1;y=c[b+88>>2]<<1;v=c[b+92>>2]<<1;s=c[b+96>>2]<<1;p=c[b+100>>2]<<1;m=c[b+104>>2]<<1;j=c[b+108>>2]<<1;g=c[b+112>>2]<<1;b=c[b+116>>2]<<1;Z=c[O>>2]|0;N=a+84|0;W=c[N>>2]|0;M=a+88|0;T=c[M>>2]|0;L=a+92|0;Q=c[L>>2]|0;K=a+96|0;f=c[K>>2]|0;J=a+100|0;h=c[J>>2]|0;I=a+104|0;o=c[I>>2]|0;H=a+108|0;q=c[H>>2]|0;G=a+112|0;x=c[G>>2]|0;F=a+116|0;z=c[F>>2]|0;_=c[Y>>2]|0;X=c[V>>2]|0;U=c[S>>2]|0;R=c[P>>2]|0;d=c[e>>2]|0;i=c[l>>2]|0;k=c[n>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;A=c[D>>2]|0;c[a>>2]=Z-_;c[ha>>2]=W-X;c[ga>>2]=T-U;c[fa>>2]=Q-R;c[ea>>2]=f-d;c[da>>2]=h-i;c[ca>>2]=o-k;c[ba>>2]=q-r;c[aa>>2]=x-t;c[$>>2]=z-A;c[Y>>2]=_+Z;c[V>>2]=X+W;c[S>>2]=U+T;c[P>>2]=R+Q;c[e>>2]=d+f;c[l>>2]=i+h;c[n>>2]=k+o;c[u>>2]=r+q;c[w>>2]=t+x;c[D>>2]=A+z;D=c[C>>2]|0;z=a+124|0;A=c[z>>2]|0;w=a+128|0;x=c[w>>2]|0;t=a+132|0;u=c[t>>2]|0;q=a+136|0;r=c[q>>2]|0;n=a+140|0;o=c[n>>2]|0;k=a+144|0;l=c[k>>2]|0;h=a+148|0;i=c[h>>2]|0;e=a+152|0;f=c[e>>2]|0;a=a+156|0;d=c[a>>2]|0;c[O>>2]=D+E;c[N>>2]=A+B;c[M>>2]=x+y;c[L>>2]=u+v;c[K>>2]=r+s;c[J>>2]=o+p;c[I>>2]=l+m;c[H>>2]=i+j;c[G>>2]=f+g;c[F>>2]=d+b;c[C>>2]=E-D;c[z>>2]=B-A;c[w>>2]=y-x;c[t>>2]=v-u;c[q>>2]=s-r;c[n>>2]=p-o;c[k>>2]=m-l;c[h>>2]=j-i;c[e>>2]=g-f;c[a>>2]=b-d;return}function Ac(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;d=i;S=i=i+63&-64;i=i+48|0;vc(a,b);aa=a+80|0;ta=b+40|0;vc(aa,ta);v=a+120|0;ib=c[b+80>>2]|0;Sa=c[b+84>>2]|0;p=c[b+88>>2]|0;x=c[b+92>>2]|0;f=c[b+96>>2]|0;kb=c[b+100>>2]|0;_=c[b+104>>2]|0;wa=c[b+108>>2]|0;l=c[b+112>>2]|0;ua=c[b+116>>2]|0;t=ib<<1;ra=Sa<<1;cb=p<<1;g=x<<1;Ma=f<<1;e=kb<<1;va=_<<1;n=wa<<1;bb=kb*38|0;Qa=_*19|0;Q=wa*38|0;H=l*19|0;nb=ua*38|0;jb=((ib|0)<0)<<31>>31;jb=wh(ib|0,jb|0,ib|0,jb|0)|0;ib=C;qa=((t|0)<0)<<31>>31;Ta=((Sa|0)<0)<<31>>31;$a=wh(t|0,qa|0,Sa|0,Ta|0)|0;_a=C;r=((p|0)<0)<<31>>31;Va=wh(p|0,r|0,t|0,qa|0)|0;Ua=C;R=((x|0)<0)<<31>>31;La=wh(x|0,R|0,t|0,qa|0)|0;Ka=C;ka=((f|0)<0)<<31>>31;za=wh(f|0,ka|0,t|0,qa|0)|0;ya=C;lb=((kb|0)<0)<<31>>31;K=wh(kb|0,lb|0,t|0,qa|0)|0;M=C;j=((_|0)<0)<<31>>31;k=wh(_|0,j|0,t|0,qa|0)|0;F=C;xa=((wa|0)<0)<<31>>31;u=wh(wa|0,xa|0,t|0,qa|0)|0;P=C;ma=((l|0)<0)<<31>>31;W=wh(l|0,ma|0,t|0,qa|0)|0;fa=C;oa=((ua|0)<0)<<31>>31;qa=wh(ua|0,oa|0,t|0,qa|0)|0;t=C;pa=((ra|0)<0)<<31>>31;Ta=wh(ra|0,pa|0,Sa|0,Ta|0)|0;Sa=C;Ja=wh(ra|0,pa|0,p|0,r|0)|0;Ia=C;ja=((g|0)<0)<<31>>31;Da=wh(g|0,ja|0,ra|0,pa|0)|0;Ca=C;B=wh(f|0,ka|0,ra|0,pa|0)|0;E=C;la=((e|0)<0)<<31>>31;h=wh(e|0,la|0,ra|0,pa|0)|0;D=C;s=wh(_|0,j|0,ra|0,pa|0)|0;N=C;$=((n|0)<0)<<31>>31;V=wh(n|0,$|0,ra|0,pa|0)|0;ea=C;sa=wh(l|0,ma|0,ra|0,pa|0)|0;na=C;mb=((nb|0)<0)<<31>>31;pa=wh(nb|0,mb|0,ra|0,pa|0)|0;ra=C;Ba=wh(p|0,r|0,p|0,r|0)|0;Aa=C;db=((cb|0)<0)<<31>>31;G=wh(cb|0,db|0,x|0,R|0)|0;I=C;y=wh(f|0,ka|0,cb|0,db|0)|0;A=C;o=wh(kb|0,lb|0,cb|0,db|0)|0;J=C;w=wh(_|0,j|0,cb|0,db|0)|0;ba=C;Z=wh(wa|0,xa|0,cb|0,db|0)|0;ia=C;m=((H|0)<0)<<31>>31;db=wh(H|0,m|0,cb|0,db|0)|0;cb=C;r=wh(nb|0,mb|0,p|0,r|0)|0;p=C;R=wh(g|0,ja|0,x|0,R|0)|0;x=C;q=wh(g|0,ja|0,f|0,ka|0)|0;L=C;U=wh(e|0,la|0,g|0,ja|0)|0;da=C;X=wh(_|0,j|0,g|0,ja|0)|0;ga=C;O=((Q|0)<0)<<31>>31;fb=wh(Q|0,O|0,g|0,ja|0)|0;eb=C;Xa=wh(H|0,m|0,g|0,ja|0)|0;Wa=C;ja=wh(nb|0,mb|0,g|0,ja|0)|0;g=C;T=wh(f|0,ka|0,f|0,ka|0)|0;ca=C;Na=((Ma|0)<0)<<31>>31;Y=wh(Ma|0,Na|0,kb|0,lb|0)|0;ha=C;Ra=((Qa|0)<0)<<31>>31;hb=wh(Qa|0,Ra|0,Ma|0,Na|0)|0;gb=C;Za=wh(Q|0,O|0,f|0,ka|0)|0;Ya=C;Na=wh(H|0,m|0,Ma|0,Na|0)|0;Ma=C;ka=wh(nb|0,mb|0,f|0,ka|0)|0;f=C;lb=wh(bb|0,((bb|0)<0)<<31>>31|0,kb|0,lb|0)|0;kb=C;bb=wh(Qa|0,Ra|0,e|0,la|0)|0;ab=C;Pa=wh(Q|0,O|0,e|0,la|0)|0;Oa=C;Fa=wh(H|0,m|0,e|0,la|0)|0;Ea=C;la=wh(nb|0,mb|0,e|0,la|0)|0;e=C;Ra=wh(Qa|0,Ra|0,_|0,j|0)|0;Qa=C;Ha=wh(Q|0,O|0,_|0,j|0)|0;Ga=C;va=wh(H|0,m|0,va|0,((va|0)<0)<<31>>31|0)|0;z=C;j=wh(nb|0,mb|0,_|0,j|0)|0;_=C;xa=wh(Q|0,O|0,wa|0,xa|0)|0;wa=C;O=wh(H|0,m|0,n|0,$|0)|0;Q=C;$=wh(nb|0,mb|0,n|0,$|0)|0;n=C;m=wh(H|0,m|0,l|0,ma|0)|0;H=C;ma=wh(nb|0,mb|0,l|0,ma|0)|0;l=C;oa=wh(nb|0,mb|0,ua|0,oa|0)|0;ua=C;ib=lh(lb|0,kb|0,jb|0,ib|0)|0;gb=lh(ib|0,C|0,hb|0,gb|0)|0;eb=lh(gb|0,C|0,fb|0,eb|0)|0;cb=lh(eb|0,C|0,db|0,cb|0)|0;ra=lh(cb|0,C|0,pa|0,ra|0)|0;pa=C;_a=lh(bb|0,ab|0,$a|0,_a|0)|0;Ya=lh(_a|0,C|0,Za|0,Ya|0)|0;Wa=lh(Ya|0,C|0,Xa|0,Wa|0)|0;p=lh(Wa|0,C|0,r|0,p|0)|0;r=C;Sa=lh(Va|0,Ua|0,Ta|0,Sa|0)|0;Qa=lh(Sa|0,C|0,Ra|0,Qa|0)|0;Oa=lh(Qa|0,C|0,Pa|0,Oa|0)|0;Ma=lh(Oa|0,C|0,Na|0,Ma|0)|0;g=lh(Ma|0,C|0,ja|0,g|0)|0;ja=C;Ia=lh(La|0,Ka|0,Ja|0,Ia|0)|0;Ga=lh(Ia|0,C|0,Ha|0,Ga|0)|0;Ea=lh(Ga|0,C|0,Fa|0,Ea|0)|0;f=lh(Ea|0,C|0,ka|0,f|0)|0;ka=C;Aa=lh(Da|0,Ca|0,Ba|0,Aa|0)|0;ya=lh(Aa|0,C|0,za|0,ya|0)|0;wa=lh(ya|0,C|0,xa|0,wa|0)|0;z=lh(wa|0,C|0,va|0,z|0)|0;e=lh(z|0,C|0,la|0,e|0)|0;la=C;I=lh(B|0,E|0,G|0,I|0)|0;M=lh(I|0,C|0,K|0,M|0)|0;Q=lh(M|0,C|0,O|0,Q|0)|0;_=lh(Q|0,C|0,j|0,_|0)|0;j=C;A=lh(R|0,x|0,y|0,A|0)|0;D=lh(A|0,C|0,h|0,D|0)|0;F=lh(D|0,C|0,k|0,F|0)|0;H=lh(F|0,C|0,m|0,H|0)|0;n=lh(H|0,C|0,$|0,n|0)|0;$=C;L=lh(o|0,J|0,q|0,L|0)|0;N=lh(L|0,C|0,s|0,N|0)|0;P=lh(N|0,C|0,u|0,P|0)|0;l=lh(P|0,C|0,ma|0,l|0)|0;ma=C;ca=lh(w|0,ba|0,T|0,ca|0)|0;da=lh(ca|0,C|0,U|0,da|0)|0;ea=lh(da|0,C|0,V|0,ea|0)|0;fa=lh(ea|0,C|0,W|0,fa|0)|0;ua=lh(fa|0,C|0,oa|0,ua|0)|0;oa=C;ha=lh(X|0,ga|0,Y|0,ha|0)|0;ia=lh(ha|0,C|0,Z|0,ia|0)|0;na=lh(ia|0,C|0,sa|0,na|0)|0;t=lh(na|0,C|0,qa|0,t|0)|0;qa=C;pa=ph(ra|0,pa|0,1)|0;ra=C;r=ph(p|0,r|0,1)|0;p=C;ja=ph(g|0,ja|0,1)|0;g=C;ka=ph(f|0,ka|0,1)|0;f=C;la=ph(e|0,la|0,1)|0;e=C;j=ph(_|0,j|0,1)|0;_=C;$=ph(n|0,$|0,1)|0;n=C;ma=ph(l|0,ma|0,1)|0;l=C;oa=ph(ua|0,oa|0,1)|0;ua=C;qa=ph(t|0,qa|0,1)|0;t=C;na=lh(pa|0,ra|0,33554432,0)|0;na=mh(na|0,C|0,26)|0;sa=C;p=lh(na|0,sa|0,r|0,p|0)|0;r=C;sa=ph(na|0,sa|0,26)|0;sa=kh(pa|0,ra|0,sa|0,C|0)|0;ra=C;pa=lh(la|0,e|0,33554432,0)|0;pa=mh(pa|0,C|0,26)|0;na=C;_=lh(pa|0,na|0,j|0,_|0)|0;j=C;na=ph(pa|0,na|0,26)|0;na=kh(la|0,e|0,na|0,C|0)|0;e=C;la=lh(p|0,r|0,16777216,0)|0;la=mh(la|0,C|0,25)|0;pa=C;g=lh(la|0,pa|0,ja|0,g|0)|0;ja=C;pa=ph(la|0,pa|0,25)|0;pa=kh(p|0,r|0,pa|0,C|0)|0;r=C;p=lh(_|0,j|0,16777216,0)|0;p=mh(p|0,C|0,25)|0;la=C;n=lh(p|0,la|0,$|0,n|0)|0;$=C;la=ph(p|0,la|0,25)|0;la=kh(_|0,j|0,la|0,C|0)|0;j=C;_=lh(g|0,ja|0,33554432,0)|0;_=mh(_|0,C|0,26)|0;p=C;f=lh(_|0,p|0,ka|0,f|0)|0;ka=C;p=ph(_|0,p|0,26)|0;p=kh(g|0,ja|0,p|0,C|0)|0;ja=lh(n|0,$|0,33554432,0)|0;ja=mh(ja|0,C|0,26)|0;g=C;l=lh(ja|0,g|0,ma|0,l|0)|0;ma=C;g=ph(ja|0,g|0,26)|0;g=kh(n|0,$|0,g|0,C|0)|0;$=lh(f|0,ka|0,16777216,0)|0;$=mh($|0,C|0,25)|0;n=C;e=lh($|0,n|0,na|0,e|0)|0;na=C;n=ph($|0,n|0,25)|0;n=kh(f|0,ka|0,n|0,C|0)|0;ka=lh(l|0,ma|0,16777216,0)|0;ka=mh(ka|0,C|0,25)|0;f=C;ua=lh(ka|0,f|0,oa|0,ua|0)|0;oa=C;f=ph(ka|0,f|0,25)|0;f=kh(l|0,ma|0,f|0,C|0)|0;ma=lh(e|0,na|0,33554432,0)|0;ma=mh(ma|0,C|0,26)|0;l=C;j=lh(la|0,j|0,ma|0,l|0)|0;l=ph(ma|0,l|0,26)|0;l=kh(e|0,na|0,l|0,C|0)|0;na=lh(ua|0,oa|0,33554432,0)|0;na=mh(na|0,C|0,26)|0;e=C;t=lh(na|0,e|0,qa|0,t|0)|0;qa=C;e=ph(na|0,e|0,26)|0;e=kh(ua|0,oa|0,e|0,C|0)|0;oa=lh(t|0,qa|0,16777216,0)|0;oa=mh(oa|0,C|0,25)|0;ua=C;na=wh(oa|0,ua|0,19,0)|0;ra=lh(na|0,C|0,sa|0,ra|0)|0;sa=C;ua=ph(oa|0,ua|0,25)|0;ua=kh(t|0,qa|0,ua|0,C|0)|0;qa=lh(ra|0,sa|0,33554432,0)|0;qa=mh(qa|0,C|0,26)|0;t=C;r=lh(pa|0,r|0,qa|0,t|0)|0;t=ph(qa|0,t|0,26)|0;t=kh(ra|0,sa|0,t|0,C|0)|0;c[v>>2]=t;t=a+124|0;c[t>>2]=r;r=a+128|0;c[r>>2]=p;p=a+132|0;c[p>>2]=n;n=a+136|0;c[n>>2]=l;l=a+140|0;c[l>>2]=j;j=a+144|0;c[j>>2]=g;g=a+148|0;c[g>>2]=f;f=a+152|0;c[f>>2]=e;e=a+156|0;c[e>>2]=ua;ua=a+40|0;sa=(c[b+44>>2]|0)+(c[b+4>>2]|0)|0;ra=(c[b+48>>2]|0)+(c[b+8>>2]|0)|0;qa=(c[b+52>>2]|0)+(c[b+12>>2]|0)|0;pa=(c[b+56>>2]|0)+(c[b+16>>2]|0)|0;oa=(c[b+60>>2]|0)+(c[b+20>>2]|0)|0;na=(c[b+64>>2]|0)+(c[b+24>>2]|0)|0;ma=(c[b+68>>2]|0)+(c[b+28>>2]|0)|0;la=(c[b+72>>2]|0)+(c[b+32>>2]|0)|0;ka=(c[b+76>>2]|0)+(c[b+36>>2]|0)|0;c[ua>>2]=(c[ta>>2]|0)+(c[b>>2]|0);ta=a+44|0;c[ta>>2]=sa;sa=a+48|0;c[sa>>2]=ra;ra=a+52|0;c[ra>>2]=qa;qa=a+56|0;c[qa>>2]=pa;pa=a+60|0;c[pa>>2]=oa;oa=a+64|0;c[oa>>2]=na;na=a+68|0;c[na>>2]=ma;ma=a+72|0;c[ma>>2]=la;la=a+76|0;c[la>>2]=ka;vc(S,ua);ka=c[aa>>2]|0;$=a+84|0;ja=c[$>>2]|0;_=a+88|0;ia=c[_>>2]|0;Z=a+92|0;ha=c[Z>>2]|0;Y=a+96|0;ga=c[Y>>2]|0;X=a+100|0;fa=c[X>>2]|0;W=a+104|0;ea=c[W>>2]|0;V=a+108|0;da=c[V>>2]|0;U=a+112|0;ca=c[U>>2]|0;T=a+116|0;ba=c[T>>2]|0;w=c[a>>2]|0;P=a+4|0;u=c[P>>2]|0;N=a+8|0;s=c[N>>2]|0;L=a+12|0;q=c[L>>2]|0;J=a+16|0;o=c[J>>2]|0;H=a+20|0;m=c[H>>2]|0;F=a+24|0;k=c[F>>2]|0;D=a+28|0;h=c[D>>2]|0;A=a+32|0;b=c[A>>2]|0;y=a+36|0;x=c[y>>2]|0;R=w+ka|0;Q=u+ja|0;O=s+ia|0;M=q+ha|0;K=o+ga|0;I=m+fa|0;G=k+ea|0;E=h+da|0;B=b+ca|0;z=x+ba|0;c[ua>>2]=R;c[ta>>2]=Q;c[sa>>2]=O;c[ra>>2]=M;c[qa>>2]=K;c[pa>>2]=I;c[oa>>2]=G;c[na>>2]=E;c[ma>>2]=B;c[la>>2]=z;w=ka-w|0;u=ja-u|0;s=ia-s|0;q=ha-q|0;o=ga-o|0;m=fa-m|0;k=ea-k|0;h=da-h|0;b=ca-b|0;x=ba-x|0;c[aa>>2]=w;c[$>>2]=u;c[_>>2]=s;c[Z>>2]=q;c[Y>>2]=o;c[X>>2]=m;c[W>>2]=k;c[V>>2]=h;c[U>>2]=b;c[T>>2]=x;Q=(c[S+4>>2]|0)-Q|0;O=(c[S+8>>2]|0)-O|0;M=(c[S+12>>2]|0)-M|0;K=(c[S+16>>2]|0)-K|0;I=(c[S+20>>2]|0)-I|0;G=(c[S+24>>2]|0)-G|0;E=(c[S+28>>2]|0)-E|0;B=(c[S+32>>2]|0)-B|0;z=(c[S+36>>2]|0)-z|0;c[a>>2]=(c[S>>2]|0)-R;c[P>>2]=Q;c[N>>2]=O;c[L>>2]=M;c[J>>2]=K;c[H>>2]=I;c[F>>2]=G;c[D>>2]=E;c[A>>2]=B;c[y>>2]=z;u=(c[t>>2]|0)-u|0;s=(c[r>>2]|0)-s|0;q=(c[p>>2]|0)-q|0;o=(c[n>>2]|0)-o|0;m=(c[l>>2]|0)-m|0;k=(c[j>>2]|0)-k|0;h=(c[g>>2]|0)-h|0;b=(c[f>>2]|0)-b|0;a=(c[e>>2]|0)-x|0;c[v>>2]=(c[v>>2]|0)-w;c[t>>2]=u;c[r>>2]=s;c[p>>2]=q;c[n>>2]=o;c[l>>2]=m;c[j>>2]=k;c[g>>2]=h;c[f>>2]=b;c[e>>2]=a;i=d;return}function Bc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;m=b+40|0;v=b+44|0;u=b+48|0;t=b+52|0;s=b+56|0;r=b+60|0;q=b+64|0;p=b+68|0;o=b+72|0;n=b+76|0;d=b+4|0;e=b+8|0;f=b+12|0;g=b+16|0;h=b+20|0;i=b+24|0;j=b+28|0;k=b+32|0;l=b+36|0;E=(c[d>>2]|0)+(c[v>>2]|0)|0;D=(c[e>>2]|0)+(c[u>>2]|0)|0;C=(c[f>>2]|0)+(c[t>>2]|0)|0;B=(c[g>>2]|0)+(c[s>>2]|0)|0;A=(c[h>>2]|0)+(c[r>>2]|0)|0;z=(c[i>>2]|0)+(c[q>>2]|0)|0;y=(c[j>>2]|0)+(c[p>>2]|0)|0;x=(c[k>>2]|0)+(c[o>>2]|0)|0;w=(c[l>>2]|0)+(c[n>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[m>>2]|0);c[a+4>>2]=E;c[a+8>>2]=D;c[a+12>>2]=C;c[a+16>>2]=B;c[a+20>>2]=A;c[a+24>>2]=z;c[a+28>>2]=y;c[a+32>>2]=x;c[a+36>>2]=w;d=(c[v>>2]|0)-(c[d>>2]|0)|0;e=(c[u>>2]|0)-(c[e>>2]|0)|0;f=(c[t>>2]|0)-(c[f>>2]|0)|0;g=(c[s>>2]|0)-(c[g>>2]|0)|0;h=(c[r>>2]|0)-(c[h>>2]|0)|0;i=(c[q>>2]|0)-(c[i>>2]|0)|0;j=(c[p>>2]|0)-(c[j>>2]|0)|0;k=(c[o>>2]|0)-(c[k>>2]|0)|0;l=(c[n>>2]|0)-(c[l>>2]|0)|0;c[a+40>>2]=(c[m>>2]|0)-(c[b>>2]|0);c[a+44>>2]=d;c[a+48>>2]=e;c[a+52>>2]=f;c[a+56>>2]=g;c[a+60>>2]=h;c[a+64>>2]=i;c[a+68>>2]=j;c[a+72>>2]=k;c[a+76>>2]=l;l=c[b+84>>2]|0;k=c[b+88>>2]|0;j=c[b+92>>2]|0;i=c[b+96>>2]|0;h=c[b+100>>2]|0;g=c[b+104>>2]|0;f=c[b+108>>2]|0;e=c[b+112>>2]|0;d=c[b+116>>2]|0;c[a+80>>2]=c[b+80>>2];c[a+84>>2]=l;c[a+88>>2]=k;c[a+92>>2]=j;c[a+96>>2]=i;c[a+100>>2]=h;c[a+104>>2]=g;c[a+108>>2]=f;c[a+112>>2]=e;c[a+116>>2]=d;uc(a+120|0,b+120|0,544);return}function Cc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;t=i;s=i=i+63&-64;i=i+592|0;o=s+400|0;q=s+520|0;r=s+240|0;p=s+120|0;f=0;do{m=a[e+f>>0]|0;n=f<<1;a[q+n>>0]=m&15;a[q+(n|1)>>0]=(m&255)>>>4;f=f+1|0}while((f|0)!=32);e=0;f=0;do{n=q+f|0;m=(d[n>>0]|0)+e|0;e=(m<<24)+134217728>>28;a[n>>0]=m-(e<<4);f=f+1|0}while((f|0)!=63);f=q+63|0;a[f>>0]=(d[f>>0]|0)+e;e=b;f=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));m=b+40|0;c[m>>2]=1;k=b+44|0;e=k;f=e+36|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));n=b+80|0;c[n>>2]=1;l=b+84|0;e=l;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));f=r+120|0;g=r+40|0;h=r+80|0;j=b+120|0;e=1;do{Dc(s,(e|0)/2|0,a[q+e>>0]|0);zc(r,b,s);uc(b,r,f);uc(m,g,h);uc(n,h,f);uc(j,r,g);e=e+2|0}while((e|0)<64);B=c[b+4>>2]|0;z=c[b+8>>2]|0;y=c[b+12>>2]|0;x=c[b+16>>2]|0;w=c[b+20>>2]|0;v=c[b+24>>2]|0;u=c[b+28>>2]|0;e=c[b+32>>2]|0;A=c[b+36>>2]|0;c[o>>2]=c[b>>2];c[o+4>>2]=B;c[o+8>>2]=z;c[o+12>>2]=y;c[o+16>>2]=x;c[o+20>>2]=w;c[o+24>>2]=v;c[o+28>>2]=u;c[o+32>>2]=e;c[o+36>>2]=A;A=c[k>>2]|0;e=c[b+48>>2]|0;k=c[b+52>>2]|0;u=c[b+56>>2]|0;v=c[b+60>>2]|0;w=c[b+64>>2]|0;x=c[b+68>>2]|0;y=c[b+72>>2]|0;z=c[b+76>>2]|0;c[o+40>>2]=c[m>>2];c[o+44>>2]=A;c[o+48>>2]=e;c[o+52>>2]=k;c[o+56>>2]=u;c[o+60>>2]=v;c[o+64>>2]=w;c[o+68>>2]=x;c[o+72>>2]=y;c[o+76>>2]=z;z=c[l>>2]|0;y=c[b+88>>2]|0;x=c[b+92>>2]|0;w=c[b+96>>2]|0;v=c[b+100>>2]|0;u=c[b+104>>2]|0;k=c[b+108>>2]|0;l=c[b+112>>2]|0;e=c[b+116>>2]|0;c[o+80>>2]=c[n>>2];c[o+84>>2]=z;c[o+88>>2]=y;c[o+92>>2]=x;c[o+96>>2]=w;c[o+100>>2]=v;c[o+104>>2]=u;c[o+108>>2]=k;c[o+112>>2]=l;c[o+116>>2]=e;Ac(r,o);uc(p,r,f);o=p+40|0;uc(o,g,h);e=p+80|0;uc(e,h,f);Ac(r,p);uc(p,r,f);uc(o,g,h);uc(e,h,f);Ac(r,p);uc(p,r,f);uc(o,g,h);uc(e,h,f);Ac(r,p);uc(b,r,f);uc(m,g,h);uc(n,h,f);uc(j,r,g);e=0;do{Dc(s,(e|0)/2|0,a[q+e>>0]|0);zc(r,b,s);uc(b,r,f);uc(m,g,h);uc(n,h,f);uc(j,r,g);e=e+2|0}while((e|0)<64);i=t;return}function Dc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;g=d<<24>>24;g=oh(g|0,((g|0)<0)<<31>>31|0,63)|0;h=d<<24>>24;g=0-g|0;h=h-((h&g)<<1)|0;d=a+4|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;e=a+40|0;f=a+44|0;i=f;j=i+76|0;do{c[i>>2]=0;i=i+4|0}while((i|0)<(j|0));ia=h&255;ea=a+8|0;ca=a+12|0;aa=a+16|0;_=a+20|0;s=a+24|0;O=a+28|0;U=a+32|0;Y=a+36|0;F=(ia^1)+-1>>31;r=c[1544+(b*960|0)+4>>2]&F;E=c[1544+(b*960|0)+8>>2]&F;v=c[1544+(b*960|0)+12>>2]&F;G=c[1544+(b*960|0)+16>>2]&F;I=c[1544+(b*960|0)+20>>2]&F;K=c[1544+(b*960|0)+24>>2]&F;N=c[1544+(b*960|0)+28>>2]&F;Q=c[1544+(b*960|0)+32>>2]&F;T=c[1544+(b*960|0)+36>>2]&F;c[a>>2]=(c[1544+(b*960|0)>>2]^1)&F^1;c[d>>2]=r;c[ea>>2]=E;c[ca>>2]=v;c[aa>>2]=G;c[_>>2]=I;c[s>>2]=K;c[O>>2]=N;c[U>>2]=Q;c[Y>>2]=T;T=a+48|0;Q=a+52|0;N=a+56|0;K=a+60|0;I=a+64|0;G=a+68|0;v=a+72|0;E=a+76|0;r=c[1544+(b*960|0)+44>>2]&F;o=c[1544+(b*960|0)+48>>2]&F;u=c[1544+(b*960|0)+52>>2]&F;C=c[1544+(b*960|0)+56>>2]&F;x=c[1544+(b*960|0)+60>>2]&F;da=c[1544+(b*960|0)+64>>2]&F;A=c[1544+(b*960|0)+68>>2]&F;ga=c[1544+(b*960|0)+72>>2]&F;D=c[1544+(b*960|0)+76>>2]&F;c[e>>2]=(c[1544+(b*960|0)+40>>2]^1)&F^1;c[f>>2]=r;c[T>>2]=o;c[Q>>2]=u;c[N>>2]=C;c[K>>2]=x;c[I>>2]=da;c[G>>2]=A;c[v>>2]=ga;c[E>>2]=D;D=a+80|0;ga=c[D>>2]|0;A=a+84|0;da=c[A>>2]|0;x=a+88|0;C=c[x>>2]|0;u=a+92|0;o=c[u>>2]|0;r=a+96|0;t=c[r>>2]|0;p=a+100|0;fa=c[p>>2]|0;n=a+104|0;B=c[n>>2]|0;l=a+108|0;w=c[l>>2]|0;i=a+112|0;W=c[i>>2]|0;j=a+116|0;ba=c[j>>2]|0;R=(c[1544+(b*960|0)+84>>2]^da)&F;L=(c[1544+(b*960|0)+88>>2]^C)&F;m=(c[1544+(b*960|0)+92>>2]^o)&F;k=(c[1544+(b*960|0)+96>>2]^t)&F;ha=(c[1544+(b*960|0)+100>>2]^fa)&F;Z=(c[1544+(b*960|0)+104>>2]^B)&F;$=(c[1544+(b*960|0)+108>>2]^w)&F;q=(c[1544+(b*960|0)+112>>2]^W)&F;z=(c[1544+(b*960|0)+116>>2]^ba)&F;c[D>>2]=(c[1544+(b*960|0)+80>>2]^ga)&F^ga;c[A>>2]=R^da;c[x>>2]=L^C;c[u>>2]=m^o;c[r>>2]=k^t;c[p>>2]=ha^fa;c[n>>2]=Z^B;c[l>>2]=$^w;c[i>>2]=q^W;c[j>>2]=z^ba;ba=c[a>>2]|0;z=c[d>>2]|0;W=c[ea>>2]|0;q=c[ca>>2]|0;w=c[aa>>2]|0;$=c[_>>2]|0;B=c[s>>2]|0;Z=c[O>>2]|0;fa=c[U>>2]|0;ha=c[Y>>2]|0;t=(ia^2)+-1>>31;k=(c[1544+(b*960|0)+124>>2]^z)&t;o=(c[1544+(b*960|0)+128>>2]^W)&t;m=(c[1544+(b*960|0)+132>>2]^q)&t;C=(c[1544+(b*960|0)+136>>2]^w)&t;L=(c[1544+(b*960|0)+140>>2]^$)&t;da=(c[1544+(b*960|0)+144>>2]^B)&t;R=(c[1544+(b*960|0)+148>>2]^Z)&t;ga=(c[1544+(b*960|0)+152>>2]^fa)&t;F=(c[1544+(b*960|0)+156>>2]^ha)&t;c[a>>2]=(c[1544+(b*960|0)+120>>2]^ba)&t^ba;c[d>>2]=k^z;c[ea>>2]=o^W;c[ca>>2]=m^q;c[aa>>2]=C^w;c[_>>2]=L^$;c[s>>2]=da^B;c[O>>2]=R^Z;c[U>>2]=ga^fa;c[Y>>2]=F^ha;ha=c[e>>2]|0;F=c[f>>2]|0;fa=c[T>>2]|0;ga=c[Q>>2]|0;Z=c[N>>2]|0;R=c[K>>2]|0;B=c[I>>2]|0;da=c[G>>2]|0;$=c[v>>2]|0;L=c[E>>2]|0;w=(c[1544+(b*960|0)+164>>2]^F)&t;C=(c[1544+(b*960|0)+168>>2]^fa)&t;q=(c[1544+(b*960|0)+172>>2]^ga)&t;m=(c[1544+(b*960|0)+176>>2]^Z)&t;W=(c[1544+(b*960|0)+180>>2]^R)&t;o=(c[1544+(b*960|0)+184>>2]^B)&t;z=(c[1544+(b*960|0)+188>>2]^da)&t;k=(c[1544+(b*960|0)+192>>2]^$)&t;ba=(c[1544+(b*960|0)+196>>2]^L)&t;c[e>>2]=(c[1544+(b*960|0)+160>>2]^ha)&t^ha;c[f>>2]=w^F;c[T>>2]=C^fa;c[Q>>2]=q^ga;c[N>>2]=m^Z;c[K>>2]=W^R;c[I>>2]=o^B;c[G>>2]=z^da;c[v>>2]=k^$;c[E>>2]=ba^L;L=c[D>>2]|0;ba=c[A>>2]|0;$=c[x>>2]|0;k=c[u>>2]|0;da=c[r>>2]|0;z=c[p>>2]|0;B=c[n>>2]|0;o=c[l>>2]|0;R=c[i>>2]|0;W=c[j>>2]|0;Z=(c[1544+(b*960|0)+204>>2]^ba)&t;m=(c[1544+(b*960|0)+208>>2]^$)&t;ga=(c[1544+(b*960|0)+212>>2]^k)&t;q=(c[1544+(b*960|0)+216>>2]^da)&t;fa=(c[1544+(b*960|0)+220>>2]^z)&t;C=(c[1544+(b*960|0)+224>>2]^B)&t;F=(c[1544+(b*960|0)+228>>2]^o)&t;w=(c[1544+(b*960|0)+232>>2]^R)&t;ha=(c[1544+(b*960|0)+236>>2]^W)&t;c[D>>2]=(c[1544+(b*960|0)+200>>2]^L)&t^L;c[A>>2]=Z^ba;c[x>>2]=m^$;c[u>>2]=ga^k;c[r>>2]=q^da;c[p>>2]=fa^z;c[n>>2]=C^B;c[l>>2]=F^o;c[i>>2]=w^R;c[j>>2]=ha^W;W=c[a>>2]|0;ha=c[d>>2]|0;R=c[ea>>2]|0;w=c[ca>>2]|0;o=c[aa>>2]|0;F=c[_>>2]|0;B=c[s>>2]|0;C=c[O>>2]|0;z=c[U>>2]|0;fa=c[Y>>2]|0;da=(ia^3)+-1>>31;q=(c[1544+(b*960|0)+244>>2]^ha)&da;k=(c[1544+(b*960|0)+248>>2]^R)&da;ga=(c[1544+(b*960|0)+252>>2]^w)&da;$=(c[1544+(b*960|0)+256>>2]^o)&da;m=(c[1544+(b*960|0)+260>>2]^F)&da;ba=(c[1544+(b*960|0)+264>>2]^B)&da;Z=(c[1544+(b*960|0)+268>>2]^C)&da;L=(c[1544+(b*960|0)+272>>2]^z)&da;t=(c[1544+(b*960|0)+276>>2]^fa)&da;c[a>>2]=(c[1544+(b*960|0)+240>>2]^W)&da^W;c[d>>2]=q^ha;c[ea>>2]=k^R;c[ca>>2]=ga^w;c[aa>>2]=$^o;c[_>>2]=m^F;c[s>>2]=ba^B;c[O>>2]=Z^C;c[U>>2]=L^z;c[Y>>2]=t^fa;fa=c[e>>2]|0;t=c[f>>2]|0;z=c[T>>2]|0;L=c[Q>>2]|0;C=c[N>>2]|0;Z=c[K>>2]|0;B=c[I>>2]|0;ba=c[G>>2]|0;F=c[v>>2]|0;m=c[E>>2]|0;o=(c[1544+(b*960|0)+284>>2]^t)&da;$=(c[1544+(b*960|0)+288>>2]^z)&da;w=(c[1544+(b*960|0)+292>>2]^L)&da;ga=(c[1544+(b*960|0)+296>>2]^C)&da;R=(c[1544+(b*960|0)+300>>2]^Z)&da;k=(c[1544+(b*960|0)+304>>2]^B)&da;ha=(c[1544+(b*960|0)+308>>2]^ba)&da;q=(c[1544+(b*960|0)+312>>2]^F)&da;W=(c[1544+(b*960|0)+316>>2]^m)&da;c[e>>2]=(c[1544+(b*960|0)+280>>2]^fa)&da^fa;c[f>>2]=o^t;c[T>>2]=$^z;c[Q>>2]=w^L;c[N>>2]=ga^C;c[K>>2]=R^Z;c[I>>2]=k^B;c[G>>2]=ha^ba;c[v>>2]=q^F;c[E>>2]=W^m;m=c[D>>2]|0;W=c[A>>2]|0;F=c[x>>2]|0;q=c[u>>2]|0;ba=c[r>>2]|0;ha=c[p>>2]|0;B=c[n>>2]|0;k=c[l>>2]|0;Z=c[i>>2]|0;R=c[j>>2]|0;C=(c[1544+(b*960|0)+324>>2]^W)&da;ga=(c[1544+(b*960|0)+328>>2]^F)&da;L=(c[1544+(b*960|0)+332>>2]^q)&da;w=(c[1544+(b*960|0)+336>>2]^ba)&da;z=(c[1544+(b*960|0)+340>>2]^ha)&da;$=(c[1544+(b*960|0)+344>>2]^B)&da;t=(c[1544+(b*960|0)+348>>2]^k)&da;o=(c[1544+(b*960|0)+352>>2]^Z)&da;fa=(c[1544+(b*960|0)+356>>2]^R)&da;c[D>>2]=(c[1544+(b*960|0)+320>>2]^m)&da^m;c[A>>2]=C^W;c[x>>2]=ga^F;c[u>>2]=L^q;c[r>>2]=w^ba;c[p>>2]=z^ha;c[n>>2]=$^B;c[l>>2]=t^k;c[i>>2]=o^Z;c[j>>2]=fa^R;R=c[a>>2]|0;fa=c[d>>2]|0;Z=c[ea>>2]|0;o=c[ca>>2]|0;k=c[aa>>2]|0;t=c[_>>2]|0;B=c[s>>2]|0;$=c[O>>2]|0;ha=c[U>>2]|0;z=c[Y>>2]|0;ba=(ia^4)+-1>>31;w=(c[1544+(b*960|0)+364>>2]^fa)&ba;q=(c[1544+(b*960|0)+368>>2]^Z)&ba;L=(c[1544+(b*960|0)+372>>2]^o)&ba;F=(c[1544+(b*960|0)+376>>2]^k)&ba;ga=(c[1544+(b*960|0)+380>>2]^t)&ba;W=(c[1544+(b*960|0)+384>>2]^B)&ba;C=(c[1544+(b*960|0)+388>>2]^$)&ba;m=(c[1544+(b*960|0)+392>>2]^ha)&ba;da=(c[1544+(b*960|0)+396>>2]^z)&ba;c[a>>2]=(c[1544+(b*960|0)+360>>2]^R)&ba^R;c[d>>2]=w^fa;c[ea>>2]=q^Z;c[ca>>2]=L^o;c[aa>>2]=F^k;c[_>>2]=ga^t;c[s>>2]=W^B;c[O>>2]=C^$;c[U>>2]=m^ha;c[Y>>2]=da^z;z=c[e>>2]|0;da=c[f>>2]|0;ha=c[T>>2]|0;m=c[Q>>2]|0;$=c[N>>2]|0;C=c[K>>2]|0;B=c[I>>2]|0;W=c[G>>2]|0;t=c[v>>2]|0;ga=c[E>>2]|0;k=(c[1544+(b*960|0)+404>>2]^da)&ba;F=(c[1544+(b*960|0)+408>>2]^ha)&ba;o=(c[1544+(b*960|0)+412>>2]^m)&ba;L=(c[1544+(b*960|0)+416>>2]^$)&ba;Z=(c[1544+(b*960|0)+420>>2]^C)&ba;q=(c[1544+(b*960|0)+424>>2]^B)&ba;fa=(c[1544+(b*960|0)+428>>2]^W)&ba;w=(c[1544+(b*960|0)+432>>2]^t)&ba;R=(c[1544+(b*960|0)+436>>2]^ga)&ba;c[e>>2]=(c[1544+(b*960|0)+400>>2]^z)&ba^z;c[f>>2]=k^da;c[T>>2]=F^ha;c[Q>>2]=o^m;c[N>>2]=L^$;c[K>>2]=Z^C;c[I>>2]=q^B;c[G>>2]=fa^W;c[v>>2]=w^t;c[E>>2]=R^ga;ga=c[D>>2]|0;R=c[A>>2]|0;t=c[x>>2]|0;w=c[u>>2]|0;W=c[r>>2]|0;fa=c[p>>2]|0;B=c[n>>2]|0;q=c[l>>2]|0;C=c[i>>2]|0;Z=c[j>>2]|0;$=(c[1544+(b*960|0)+444>>2]^R)&ba;L=(c[1544+(b*960|0)+448>>2]^t)&ba;m=(c[1544+(b*960|0)+452>>2]^w)&ba;o=(c[1544+(b*960|0)+456>>2]^W)&ba;ha=(c[1544+(b*960|0)+460>>2]^fa)&ba;F=(c[1544+(b*960|0)+464>>2]^B)&ba;da=(c[1544+(b*960|0)+468>>2]^q)&ba;k=(c[1544+(b*960|0)+472>>2]^C)&ba;z=(c[1544+(b*960|0)+476>>2]^Z)&ba;c[D>>2]=(c[1544+(b*960|0)+440>>2]^ga)&ba^ga;c[A>>2]=$^R;c[x>>2]=L^t;c[u>>2]=m^w;c[r>>2]=o^W;c[p>>2]=ha^fa;c[n>>2]=F^B;c[l>>2]=da^q;c[i>>2]=k^C;c[j>>2]=z^Z;Z=c[a>>2]|0;z=c[d>>2]|0;C=c[ea>>2]|0;k=c[ca>>2]|0;q=c[aa>>2]|0;da=c[_>>2]|0;B=c[s>>2]|0;F=c[O>>2]|0;fa=c[U>>2]|0;ha=c[Y>>2]|0;W=(ia^5)+-1>>31;o=(c[1544+(b*960|0)+484>>2]^z)&W;w=(c[1544+(b*960|0)+488>>2]^C)&W;m=(c[1544+(b*960|0)+492>>2]^k)&W;t=(c[1544+(b*960|0)+496>>2]^q)&W;L=(c[1544+(b*960|0)+500>>2]^da)&W;R=(c[1544+(b*960|0)+504>>2]^B)&W;$=(c[1544+(b*960|0)+508>>2]^F)&W;ga=(c[1544+(b*960|0)+512>>2]^fa)&W;ba=(c[1544+(b*960|0)+516>>2]^ha)&W;c[a>>2]=(c[1544+(b*960|0)+480>>2]^Z)&W^Z;c[d>>2]=o^z;c[ea>>2]=w^C;c[ca>>2]=m^k;c[aa>>2]=t^q;c[_>>2]=L^da;c[s>>2]=R^B;c[O>>2]=$^F;c[U>>2]=ga^fa;c[Y>>2]=ba^ha;ha=c[e>>2]|0;ba=c[f>>2]|0;fa=c[T>>2]|0;ga=c[Q>>2]|0;F=c[N>>2]|0;$=c[K>>2]|0;B=c[I>>2]|0;R=c[G>>2]|0;da=c[v>>2]|0;L=c[E>>2]|0;q=(c[1544+(b*960|0)+524>>2]^ba)&W;t=(c[1544+(b*960|0)+528>>2]^fa)&W;k=(c[1544+(b*960|0)+532>>2]^ga)&W;m=(c[1544+(b*960|0)+536>>2]^F)&W;C=(c[1544+(b*960|0)+540>>2]^$)&W;w=(c[1544+(b*960|0)+544>>2]^B)&W;z=(c[1544+(b*960|0)+548>>2]^R)&W;o=(c[1544+(b*960|0)+552>>2]^da)&W;Z=(c[1544+(b*960|0)+556>>2]^L)&W;c[e>>2]=(c[1544+(b*960|0)+520>>2]^ha)&W^ha;c[f>>2]=q^ba;c[T>>2]=t^fa;c[Q>>2]=k^ga;c[N>>2]=m^F;c[K>>2]=C^$;c[I>>2]=w^B;c[G>>2]=z^R;c[v>>2]=o^da;c[E>>2]=Z^L;L=c[D>>2]|0;Z=c[A>>2]|0;da=c[x>>2]|0;o=c[u>>2]|0;R=c[r>>2]|0;z=c[p>>2]|0;B=c[n>>2]|0;w=c[l>>2]|0;$=c[i>>2]|0;C=c[j>>2]|0;F=(c[1544+(b*960|0)+564>>2]^Z)&W;m=(c[1544+(b*960|0)+568>>2]^da)&W;ga=(c[1544+(b*960|0)+572>>2]^o)&W;k=(c[1544+(b*960|0)+576>>2]^R)&W;fa=(c[1544+(b*960|0)+580>>2]^z)&W;t=(c[1544+(b*960|0)+584>>2]^B)&W;ba=(c[1544+(b*960|0)+588>>2]^w)&W;q=(c[1544+(b*960|0)+592>>2]^$)&W;ha=(c[1544+(b*960|0)+596>>2]^C)&W;c[D>>2]=(c[1544+(b*960|0)+560>>2]^L)&W^L;c[A>>2]=F^Z;c[x>>2]=m^da;c[u>>2]=ga^o;c[r>>2]=k^R;c[p>>2]=fa^z;c[n>>2]=t^B;c[l>>2]=ba^w;c[i>>2]=q^$;c[j>>2]=ha^C;C=c[a>>2]|0;ha=c[d>>2]|0;$=c[ea>>2]|0;q=c[ca>>2]|0;w=c[aa>>2]|0;ba=c[_>>2]|0;B=c[s>>2]|0;t=c[O>>2]|0;z=c[U>>2]|0;fa=c[Y>>2]|0;R=(ia^6)+-1>>31;k=(c[1544+(b*960|0)+604>>2]^ha)&R;o=(c[1544+(b*960|0)+608>>2]^$)&R;ga=(c[1544+(b*960|0)+612>>2]^q)&R;da=(c[1544+(b*960|0)+616>>2]^w)&R;m=(c[1544+(b*960|0)+620>>2]^ba)&R;Z=(c[1544+(b*960|0)+624>>2]^B)&R;F=(c[1544+(b*960|0)+628>>2]^t)&R;L=(c[1544+(b*960|0)+632>>2]^z)&R;W=(c[1544+(b*960|0)+636>>2]^fa)&R;c[a>>2]=(c[1544+(b*960|0)+600>>2]^C)&R^C;c[d>>2]=k^ha;c[ea>>2]=o^$;c[ca>>2]=ga^q;c[aa>>2]=da^w;c[_>>2]=m^ba;c[s>>2]=Z^B;c[O>>2]=F^t;c[U>>2]=L^z;c[Y>>2]=W^fa;fa=c[e>>2]|0;W=c[f>>2]|0;z=c[T>>2]|0;L=c[Q>>2]|0;t=c[N>>2]|0;F=c[K>>2]|0;B=c[I>>2]|0;Z=c[G>>2]|0;ba=c[v>>2]|0;m=c[E>>2]|0;w=(c[1544+(b*960|0)+644>>2]^W)&R;da=(c[1544+(b*960|0)+648>>2]^z)&R;q=(c[1544+(b*960|0)+652>>2]^L)&R;ga=(c[1544+(b*960|0)+656>>2]^t)&R;$=(c[1544+(b*960|0)+660>>2]^F)&R;o=(c[1544+(b*960|0)+664>>2]^B)&R;ha=(c[1544+(b*960|0)+668>>2]^Z)&R;k=(c[1544+(b*960|0)+672>>2]^ba)&R;C=(c[1544+(b*960|0)+676>>2]^m)&R;c[e>>2]=(c[1544+(b*960|0)+640>>2]^fa)&R^fa;c[f>>2]=w^W;c[T>>2]=da^z;c[Q>>2]=q^L;c[N>>2]=ga^t;c[K>>2]=$^F;c[I>>2]=o^B;c[G>>2]=ha^Z;c[v>>2]=k^ba;c[E>>2]=C^m;m=c[D>>2]|0;C=c[A>>2]|0;ba=c[x>>2]|0;k=c[u>>2]|0;Z=c[r>>2]|0;ha=c[p>>2]|0;B=c[n>>2]|0;o=c[l>>2]|0;F=c[i>>2]|0;$=c[j>>2]|0;t=(c[1544+(b*960|0)+684>>2]^C)&R;ga=(c[1544+(b*960|0)+688>>2]^ba)&R;L=(c[1544+(b*960|0)+692>>2]^k)&R;q=(c[1544+(b*960|0)+696>>2]^Z)&R;z=(c[1544+(b*960|0)+700>>2]^ha)&R;da=(c[1544+(b*960|0)+704>>2]^B)&R;W=(c[1544+(b*960|0)+708>>2]^o)&R;w=(c[1544+(b*960|0)+712>>2]^F)&R;fa=(c[1544+(b*960|0)+716>>2]^$)&R;c[D>>2]=(c[1544+(b*960|0)+680>>2]^m)&R^m;c[A>>2]=t^C;c[x>>2]=ga^ba;c[u>>2]=L^k;c[r>>2]=q^Z;c[p>>2]=z^ha;c[n>>2]=da^B;c[l>>2]=W^o;c[i>>2]=w^F;c[j>>2]=fa^$;$=c[a>>2]|0;fa=c[d>>2]|0;F=c[ea>>2]|0;w=c[ca>>2]|0;o=c[aa>>2]|0;W=c[_>>2]|0;B=c[s>>2]|0;da=c[O>>2]|0;ha=c[U>>2]|0;z=c[Y>>2]|0;Z=(ia^7)+-1>>31;q=(c[1544+(b*960|0)+724>>2]^fa)&Z;k=(c[1544+(b*960|0)+728>>2]^F)&Z;L=(c[1544+(b*960|0)+732>>2]^w)&Z;ba=(c[1544+(b*960|0)+736>>2]^o)&Z;ga=(c[1544+(b*960|0)+740>>2]^W)&Z;C=(c[1544+(b*960|0)+744>>2]^B)&Z;t=(c[1544+(b*960|0)+748>>2]^da)&Z;m=(c[1544+(b*960|0)+752>>2]^ha)&Z;R=(c[1544+(b*960|0)+756>>2]^z)&Z;c[a>>2]=(c[1544+(b*960|0)+720>>2]^$)&Z^$;c[d>>2]=q^fa;c[ea>>2]=k^F;c[ca>>2]=L^w;c[aa>>2]=ba^o;c[_>>2]=ga^W;c[s>>2]=C^B;c[O>>2]=t^da;c[U>>2]=m^ha;c[Y>>2]=R^z;z=c[e>>2]|0;R=c[f>>2]|0;ha=c[T>>2]|0;m=c[Q>>2]|0;da=c[N>>2]|0;t=c[K>>2]|0;B=c[I>>2]|0;C=c[G>>2]|0;W=c[v>>2]|0;ga=c[E>>2]|0;o=(c[1544+(b*960|0)+764>>2]^R)&Z;ba=(c[1544+(b*960|0)+768>>2]^ha)&Z;w=(c[1544+(b*960|0)+772>>2]^m)&Z;L=(c[1544+(b*960|0)+776>>2]^da)&Z;F=(c[1544+(b*960|0)+780>>2]^t)&Z;k=(c[1544+(b*960|0)+784>>2]^B)&Z;fa=(c[1544+(b*960|0)+788>>2]^C)&Z;q=(c[1544+(b*960|0)+792>>2]^W)&Z;$=(c[1544+(b*960|0)+796>>2]^ga)&Z;c[e>>2]=(c[1544+(b*960|0)+760>>2]^z)&Z^z;c[f>>2]=o^R;c[T>>2]=ba^ha;c[Q>>2]=w^m;c[N>>2]=L^da;c[K>>2]=F^t;c[I>>2]=k^B;c[G>>2]=fa^C;c[v>>2]=q^W;c[E>>2]=$^ga;ga=c[D>>2]|0;$=c[A>>2]|0;W=c[x>>2]|0;q=c[u>>2]|0;C=c[r>>2]|0;fa=c[p>>2]|0;B=c[n>>2]|0;k=c[l>>2]|0;t=c[i>>2]|0;F=c[j>>2]|0;da=(c[1544+(b*960|0)+804>>2]^$)&Z;L=(c[1544+(b*960|0)+808>>2]^W)&Z;m=(c[1544+(b*960|0)+812>>2]^q)&Z;w=(c[1544+(b*960|0)+816>>2]^C)&Z;ha=(c[1544+(b*960|0)+820>>2]^fa)&Z;ba=(c[1544+(b*960|0)+824>>2]^B)&Z;R=(c[1544+(b*960|0)+828>>2]^k)&Z;o=(c[1544+(b*960|0)+832>>2]^t)&Z;z=(c[1544+(b*960|0)+836>>2]^F)&Z;c[D>>2]=(c[1544+(b*960|0)+800>>2]^ga)&Z^ga;c[A>>2]=da^$;c[x>>2]=L^W;c[u>>2]=m^q;c[r>>2]=w^C;c[p>>2]=ha^fa;c[n>>2]=ba^B;c[l>>2]=R^k;c[i>>2]=o^t;c[j>>2]=z^F;F=c[a>>2]|0;z=c[d>>2]|0;t=c[ea>>2]|0;o=c[ca>>2]|0;k=c[aa>>2]|0;R=c[_>>2]|0;B=c[s>>2]|0;ba=c[O>>2]|0;fa=c[U>>2]|0;ha=c[Y>>2]|0;ia=(ia^8)+-1>>31;C=(c[1544+(b*960|0)+844>>2]^z)&ia;w=(c[1544+(b*960|0)+848>>2]^t)&ia;q=(c[1544+(b*960|0)+852>>2]^o)&ia;m=(c[1544+(b*960|0)+856>>2]^k)&ia;W=(c[1544+(b*960|0)+860>>2]^R)&ia;L=(c[1544+(b*960|0)+864>>2]^B)&ia;$=(c[1544+(b*960|0)+868>>2]^ba)&ia;da=(c[1544+(b*960|0)+872>>2]^fa)&ia;ga=(c[1544+(b*960|0)+876>>2]^ha)&ia;c[a>>2]=(c[1544+(b*960|0)+840>>2]^F)&ia^F;c[d>>2]=C^z;c[ea>>2]=w^t;c[ca>>2]=q^o;c[aa>>2]=m^k;c[_>>2]=W^R;c[s>>2]=L^B;c[O>>2]=$^ba;c[U>>2]=da^fa;c[Y>>2]=ga^ha;ha=c[e>>2]|0;ga=c[f>>2]|0;fa=c[T>>2]|0;da=c[Q>>2]|0;ba=c[N>>2]|0;$=c[K>>2]|0;B=c[I>>2]|0;L=c[G>>2]|0;R=c[v>>2]|0;W=c[E>>2]|0;k=(c[1544+(b*960|0)+884>>2]^ga)&ia;m=(c[1544+(b*960|0)+888>>2]^fa)&ia;o=(c[1544+(b*960|0)+892>>2]^da)&ia;q=(c[1544+(b*960|0)+896>>2]^ba)&ia;t=(c[1544+(b*960|0)+900>>2]^$)&ia;w=(c[1544+(b*960|0)+904>>2]^B)&ia;z=(c[1544+(b*960|0)+908>>2]^L)&ia;C=(c[1544+(b*960|0)+912>>2]^R)&ia;F=(c[1544+(b*960|0)+916>>2]^W)&ia;ha=(c[1544+(b*960|0)+880>>2]^ha)&ia^ha;c[e>>2]=ha;ga=k^ga;c[f>>2]=ga;fa=m^fa;c[T>>2]=fa;da=o^da;c[Q>>2]=da;ba=q^ba;c[N>>2]=ba;$=t^$;c[K>>2]=$;B=w^B;c[I>>2]=B;L=z^L;c[G>>2]=L;R=C^R;c[v>>2]=R;W=F^W;c[E>>2]=W;F=c[D>>2]|0;C=c[A>>2]|0;z=c[x>>2]|0;w=c[u>>2]|0;t=c[r>>2]|0;q=c[p>>2]|0;o=c[n>>2]|0;m=c[l>>2]|0;k=c[i>>2]|0;Z=c[j>>2]|0;y=(c[1544+(b*960|0)+924>>2]^C)&ia;h=(c[1544+(b*960|0)+928>>2]^z)&ia;H=(c[1544+(b*960|0)+932>>2]^w)&ia;J=(c[1544+(b*960|0)+936>>2]^t)&ia;M=(c[1544+(b*960|0)+940>>2]^q)&ia;P=(c[1544+(b*960|0)+944>>2]^o)&ia;S=(c[1544+(b*960|0)+948>>2]^m)&ia;V=(c[1544+(b*960|0)+952>>2]^k)&ia;X=(c[1544+(b*960|0)+956>>2]^Z)&ia;F=(c[1544+(b*960|0)+920>>2]^F)&ia^F;c[D>>2]=F;C=y^C;c[A>>2]=C;z=h^z;c[x>>2]=z;w=H^w;c[u>>2]=w;t=J^t;c[r>>2]=t;q=M^q;c[p>>2]=q;o=P^o;c[n>>2]=o;m=S^m;c[l>>2]=m;k=V^k;c[i>>2]=k;b=X^Z;c[j>>2]=b;Z=c[a>>2]|0;X=c[d>>2]|0;V=c[ea>>2]|0;S=c[ca>>2]|0;P=c[aa>>2]|0;M=c[_>>2]|0;J=c[s>>2]|0;H=c[O>>2]|0;h=c[U>>2]|0;y=c[Y>>2]|0;c[a>>2]=(Z^ha)&g^Z;c[d>>2]=(X^ga)&g^X;c[ea>>2]=(V^fa)&g^V;c[ca>>2]=(S^da)&g^S;c[aa>>2]=(P^ba)&g^P;c[_>>2]=(M^$)&g^M;c[s>>2]=(J^B)&g^J;c[O>>2]=(H^L)&g^H;c[U>>2]=(h^R)&g^h;c[Y>>2]=(y^W)&g^y;Y=c[e>>2]|0;W=c[f>>2]|0;U=c[T>>2]|0;R=c[Q>>2]|0;O=c[N>>2]|0;L=c[K>>2]|0;a=c[I>>2]|0;d=c[G>>2]|0;s=c[v>>2]|0;B=c[E>>2]|0;c[e>>2]=(Y^Z)&g^Y;c[f>>2]=(W^X)&g^W;c[T>>2]=(U^V)&g^U;c[Q>>2]=(R^S)&g^R;c[N>>2]=(O^P)&g^O;c[K>>2]=(L^M)&g^L;c[I>>2]=(a^J)&g^a;c[G>>2]=(d^H)&g^d;c[v>>2]=(s^h)&g^s;c[E>>2]=(B^y)&g^B;E=c[D>>2]|0;B=c[A>>2]|0;y=c[x>>2]|0;v=c[u>>2]|0;s=c[r>>2]|0;d=c[p>>2]|0;e=c[n>>2]|0;f=c[l>>2]|0;h=c[i>>2]|0;a=c[j>>2]|0;c[D>>2]=(E^0-F)&g^E;c[A>>2]=(B^0-C)&g^B;c[x>>2]=(y^0-z)&g^y;c[u>>2]=(v^0-w)&g^v;c[r>>2]=(s^0-t)&g^s;c[p>>2]=(d^0-q)&g^d;c[n>>2]=(e^0-o)&g^e;c[l>>2]=(f^0-m)&g^f;c[i>>2]=(h^0-k)&g^h;c[j>>2]=(a^0-b)&g^a;return}function Ec(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0;ea=b+1|0;ba=b+2|0;D=a[ba>>0]|0;f=d[b>>0]|0;n=ph(d[ea>>0]|0|0,0,8)|0;va=C;D=D&255;V=ph(D|0,0,16)|0;aa=b+3|0;y=ph(d[aa>>0]|0|0,0,8)|0;ga=C;$=b+4|0;U=ph(d[$>>0]|0|0,0,16)|0;ga=ga|C;Y=b+5|0;N=d[Y>>0]|0;X=ph(N|0,0,24)|0;ga=oh(y|D|U|X|0,ga|C|0,5)|0;X=b+6|0;U=b+7|0;D=a[U>>0]|0;y=ph(d[X>>0]|0|0,0,8)|0;Ba=C;D=D&255;T=ph(D|0,0,16)|0;Ba=oh(y|N|T|0,Ba|C|0,2)|0;T=b+8|0;N=ph(d[T>>0]|0|0,0,8)|0;y=C;S=b+9|0;Ca=ph(d[S>>0]|0|0,0,16)|0;y=y|C;P=b+10|0;Sa=d[P>>0]|0;O=ph(Sa|0,0,24)|0;y=oh(N|D|Ca|O|0,y|C|0,7)|0;O=b+11|0;Ca=ph(d[O>>0]|0|0,0,8)|0;D=C;N=b+12|0;G=ph(d[N>>0]|0|0,0,16)|0;D=D|C;K=b+13|0;u=d[K>>0]|0;J=ph(u|0,0,24)|0;D=oh(Ca|Sa|G|J|0,D|C|0,4)|0;J=b+14|0;G=b+15|0;Sa=a[G>>0]|0;Ca=ph(d[J>>0]|0|0,0,8)|0;Da=C;Sa=Sa&255;F=ph(Sa|0,0,16)|0;Da=oh(Ca|u|F|0,Da|C|0,1)|0;F=b+16|0;u=ph(d[F>>0]|0|0,0,8)|0;Ca=C;E=b+17|0;w=ph(d[E>>0]|0|0,0,16)|0;Ca=Ca|C;A=b+18|0;v=d[A>>0]|0;z=ph(v|0,0,24)|0;Ca=oh(u|Sa|w|z|0,Ca|C|0,6)|0;z=b+19|0;w=b+20|0;Sa=a[w>>0]|0;u=ph(d[z>>0]|0|0,0,8)|0;Ta=C;Sa=ph(Sa&255|0,0,16)|0;Ta=oh(u|v|Sa|0,Ta|C|0,3)|0;Sa=C;v=b+21|0;u=b+22|0;r=b+23|0;na=a[r>>0]|0;ab=d[v>>0]|0;bb=ph(d[u>>0]|0|0,0,8)|0;_a=C;na=na&255;$a=ph(na|0,0,16)|0;q=b+24|0;Ka=ph(d[q>>0]|0|0,0,8)|0;Pa=C;p=b+25|0;i=ph(d[p>>0]|0|0,0,16)|0;Pa=Pa|C;m=b+26|0;xa=d[m>>0]|0;l=ph(xa|0,0,24)|0;Pa=oh(Ka|na|i|l|0,Pa|C|0,5)|0;l=b+27|0;i=b+28|0;na=a[i>>0]|0;Ka=ph(d[l>>0]|0|0,0,8)|0;Za=C;na=na&255;h=ph(na|0,0,16)|0;Za=oh(Ka|xa|h|0,Za|C|0,2)|0;h=b+29|0;xa=ph(d[h>>0]|0|0,0,8)|0;Ka=C;g=b+30|0;fb=ph(d[g>>0]|0|0,0,16)|0;Ka=Ka|C;c=b+31|0;qa=d[c>>0]|0;oa=ph(qa|0,0,24)|0;Ka=oh(xa|na|fb|oa|0,Ka|C|0,7)|0;oa=ph(d[b+32>>0]|0|0,0,8)|0;fb=C;na=ph(d[b+33>>0]|0|0,0,16)|0;fb=fb|C;xa=d[b+34>>0]|0;la=ph(xa|0,0,24)|0;fb=oh(oa|qa|na|la|0,fb|C|0,4)|0;la=a[b+36>>0]|0;na=ph(d[b+35>>0]|0|0,0,8)|0;qa=C;la=la&255;oa=ph(la|0,0,16)|0;qa=oh(na|xa|oa|0,qa|C|0,1)|0;oa=ph(d[b+37>>0]|0|0,0,8)|0;xa=C;na=ph(d[b+38>>0]|0|0,0,16)|0;xa=xa|C;Ma=d[b+39>>0]|0;fa=ph(Ma|0,0,24)|0;xa=oh(oa|la|na|fa|0,xa|C|0,6)|0;fa=a[b+41>>0]|0;na=ph(d[b+40>>0]|0|0,0,8)|0;la=C;fa=ph(fa&255|0,0,16)|0;la=oh(na|Ma|fa|0,la|C|0,3)|0;fa=C;Ma=a[b+44>>0]|0;na=d[b+42>>0]|0;oa=ph(d[b+43>>0]|0|0,0,8)|0;j=C;Ma=Ma&255;za=ph(Ma|0,0,16)|0;ja=ph(d[b+45>>0]|0|0,0,8)|0;L=C;W=ph(d[b+46>>0]|0|0,0,16)|0;L=L|C;gb=d[b+47>>0]|0;o=ph(gb|0,0,24)|0;L=oh(ja|Ma|W|o|0,L|C|0,5)|0;o=a[b+49>>0]|0;W=ph(d[b+48>>0]|0|0,0,8)|0;Ma=C;o=o&255;ja=ph(o|0,0,16)|0;Ma=oh(W|gb|ja|0,Ma|C|0,2)|0;Ma=Ma&2097151;ja=ph(d[b+50>>0]|0|0,0,8)|0;gb=C;W=ph(d[b+51>>0]|0|0,0,16)|0;gb=gb|C;Aa=d[b+52>>0]|0;M=ph(Aa|0,0,24)|0;gb=oh(ja|o|W|M|0,gb|C|0,7)|0;gb=gb&2097151;M=ph(d[b+53>>0]|0|0,0,8)|0;W=C;o=ph(d[b+54>>0]|0|0,0,16)|0;W=W|C;ja=d[b+55>>0]|0;R=ph(ja|0,0,24)|0;W=oh(M|Aa|o|R|0,W|C|0,4)|0;W=W&2097151;R=a[b+57>>0]|0;o=ph(d[b+56>>0]|0|0,0,8)|0;Aa=C;R=R&255;M=ph(R|0,0,16)|0;Aa=oh(o|ja|M|0,Aa|C|0,1)|0;Aa=Aa&2097151;M=ph(d[b+58>>0]|0|0,0,8)|0;ja=C;o=ph(d[b+59>>0]|0|0,0,16)|0;ja=ja|C;ha=d[b+60>>0]|0;Q=ph(ha|0,0,24)|0;ja=oh(M|R|o|Q|0,ja|C|0,6)|0;ja=ja&2097151;Q=ph(d[b+61>>0]|0|0,0,8)|0;o=C;R=ph(d[b+62>>0]|0|0,0,16)|0;o=o|C;M=ph(d[b+63>>0]|0|0,0,24)|0;o=oh(Q|ha|R|M|0,o|C|0,3)|0;M=C;R=wh(o|0,M|0,666643,0)|0;ha=C;Q=wh(o|0,M|0,470296,0)|0;I=C;ca=wh(o|0,M|0,654183,0)|0;ta=C;Ea=wh(o|0,M|0,-997805,-1)|0;t=C;k=wh(o|0,M|0,136657,0)|0;B=C;M=wh(o|0,M|0,-683901,-1)|0;j=lh(M|0,C|0,oa|na|za&2031616|0,j|0)|0;za=C;na=wh(ja|0,0,666643,0)|0;oa=C;M=wh(ja|0,0,470296,0)|0;o=C;Va=wh(ja|0,0,654183,0)|0;s=C;ma=wh(ja|0,0,-997805,-1)|0;_=C;ya=wh(ja|0,0,136657,0)|0;sa=C;ja=wh(ja|0,0,-683901,-1)|0;H=C;e=wh(Aa|0,0,666643,0)|0;ra=C;wa=wh(Aa|0,0,470296,0)|0;La=C;Fa=wh(Aa|0,0,654183,0)|0;da=C;cb=wh(Aa|0,0,-997805,-1)|0;Ua=C;ka=wh(Aa|0,0,136657,0)|0;x=C;Aa=wh(Aa|0,0,-683901,-1)|0;xa=lh(Aa|0,C|0,xa&2097151|0,0)|0;sa=lh(xa|0,C|0,ya|0,sa|0)|0;t=lh(sa|0,C|0,Ea|0,t|0)|0;Ea=C;sa=wh(W|0,0,666643,0)|0;ya=C;xa=wh(W|0,0,470296,0)|0;Aa=C;Wa=wh(W|0,0,654183,0)|0;Z=C;Ha=wh(W|0,0,-997805,-1)|0;Ga=C;eb=wh(W|0,0,136657,0)|0;db=C;W=wh(W|0,0,-683901,-1)|0;pa=C;ia=wh(gb|0,0,666643,0)|0;ua=C;Qa=wh(gb|0,0,470296,0)|0;Ra=C;Oa=wh(gb|0,0,654183,0)|0;Na=C;Ya=wh(gb|0,0,-997805,-1)|0;Xa=C;Ja=wh(gb|0,0,136657,0)|0;Ia=C;gb=wh(gb|0,0,-683901,-1)|0;fb=lh(gb|0,C|0,fb&2097151|0,0)|0;db=lh(fb|0,C|0,eb|0,db|0)|0;Ua=lh(db|0,C|0,cb|0,Ua|0)|0;s=lh(Ua|0,C|0,Va|0,s|0)|0;I=lh(s|0,C|0,Q|0,I|0)|0;Q=C;s=wh(Ma|0,0,666643,0)|0;Ca=lh(s|0,C|0,Ca&2097151|0,0)|0;s=C;Va=wh(Ma|0,0,470296,0)|0;Ua=C;cb=wh(Ma|0,0,654183,0)|0;_a=lh(cb|0,C|0,bb|ab|$a&2031616|0,_a|0)|0;Ra=lh(_a|0,C|0,Qa|0,Ra|0)|0;ya=lh(Ra|0,C|0,sa|0,ya|0)|0;sa=C;Ra=wh(Ma|0,0,-997805,-1)|0;Qa=C;_a=wh(Ma|0,0,136657,0)|0;Za=lh(_a|0,C|0,Za&2097151|0,0)|0;Xa=lh(Za|0,C|0,Ya|0,Xa|0)|0;Z=lh(Xa|0,C|0,Wa|0,Z|0)|0;La=lh(Z|0,C|0,wa|0,La|0)|0;oa=lh(La|0,C|0,na|0,oa|0)|0;na=C;Ma=wh(Ma|0,0,-683901,-1)|0;La=C;wa=lh(Ca|0,s|0,1048576,0)|0;wa=oh(wa|0,C|0,21)|0;Z=C;Sa=lh(Va|0,Ua|0,Ta|0,Sa|0)|0;Sa=lh(Sa|0,C|0,wa|0,Z|0)|0;ua=lh(Sa|0,C|0,ia|0,ua|0)|0;ia=C;Z=ph(wa|0,Z|0,21)|0;Z=kh(Ca|0,s|0,Z|0,C|0)|0;s=C;Ca=lh(ya|0,sa|0,1048576,0)|0;Ca=oh(Ca|0,C|0,21)|0;wa=C;Pa=lh(Ra|0,Qa|0,Pa&2097151|0,0)|0;Na=lh(Pa|0,C|0,Oa|0,Na|0)|0;Aa=lh(Na|0,C|0,xa|0,Aa|0)|0;ra=lh(Aa|0,C|0,e|0,ra|0)|0;ra=lh(ra|0,C|0,Ca|0,wa|0)|0;e=C;wa=ph(Ca|0,wa|0,21)|0;Ca=C;Aa=lh(oa|0,na|0,1048576,0)|0;Aa=mh(Aa|0,C|0,21)|0;xa=C;Ka=lh(Ma|0,La|0,Ka&2097151|0,0)|0;Ia=lh(Ka|0,C|0,Ja|0,Ia|0)|0;Ga=lh(Ia|0,C|0,Ha|0,Ga|0)|0;da=lh(Ga|0,C|0,Fa|0,da|0)|0;o=lh(da|0,C|0,M|0,o|0)|0;ha=lh(o|0,C|0,R|0,ha|0)|0;ha=lh(ha|0,C|0,Aa|0,xa|0)|0;R=C;xa=ph(Aa|0,xa|0,21)|0;Aa=C;o=lh(I|0,Q|0,1048576,0)|0;o=mh(o|0,C|0,21)|0;M=C;qa=lh(W|0,pa|0,qa&2097151|0,0)|0;x=lh(qa|0,C|0,ka|0,x|0)|0;_=lh(x|0,C|0,ma|0,_|0)|0;ta=lh(_|0,C|0,ca|0,ta|0)|0;ta=lh(ta|0,C|0,o|0,M|0)|0;ca=C;M=ph(o|0,M|0,21)|0;M=kh(I|0,Q|0,M|0,C|0)|0;Q=C;I=lh(t|0,Ea|0,1048576,0)|0;I=mh(I|0,C|0,21)|0;o=C;fa=lh(ja|0,H|0,la|0,fa|0)|0;B=lh(fa|0,C|0,k|0,B|0)|0;B=lh(B|0,C|0,I|0,o|0)|0;k=C;o=ph(I|0,o|0,21)|0;o=kh(t|0,Ea|0,o|0,C|0)|0;Ea=C;t=lh(j|0,za|0,1048576,0)|0;t=mh(t|0,C|0,21)|0;I=C;L=lh(t|0,I|0,L&2097151|0,0)|0;fa=C;I=ph(t|0,I|0,21)|0;I=kh(j|0,za|0,I|0,C|0)|0;za=C;j=lh(ua|0,ia|0,1048576,0)|0;j=oh(j|0,C|0,21)|0;t=C;la=ph(j|0,t|0,21)|0;la=kh(ua|0,ia|0,la|0,C|0)|0;ia=C;ua=lh(ra|0,e|0,1048576,0)|0;ua=mh(ua|0,C|0,21)|0;H=C;ja=ph(ua|0,H|0,21)|0;ja=kh(ra|0,e|0,ja|0,C|0)|0;e=C;ra=lh(ha|0,R|0,1048576,0)|0;ra=mh(ra|0,C|0,21)|0;_=C;Q=lh(M|0,Q|0,ra|0,_|0)|0;M=C;_=ph(ra|0,_|0,21)|0;_=kh(ha|0,R|0,_|0,C|0)|0;R=C;ha=lh(ta|0,ca|0,1048576,0)|0;ha=mh(ha|0,C|0,21)|0;ra=C;Ea=lh(ha|0,ra|0,o|0,Ea|0)|0;o=C;ra=ph(ha|0,ra|0,21)|0;ra=kh(ta|0,ca|0,ra|0,C|0)|0;ca=C;ta=lh(B|0,k|0,1048576,0)|0;ta=mh(ta|0,C|0,21)|0;ha=C;za=lh(ta|0,ha|0,I|0,za|0)|0;I=C;ha=ph(ta|0,ha|0,21)|0;ha=kh(B|0,k|0,ha|0,C|0)|0;k=C;B=wh(L|0,fa|0,666643,0)|0;Da=lh(B|0,C|0,Da&2097151|0,0)|0;B=C;ta=wh(L|0,fa|0,470296,0)|0;ta=lh(Z|0,s|0,ta|0,C|0)|0;s=C;Z=wh(L|0,fa|0,654183,0)|0;Z=lh(la|0,ia|0,Z|0,C|0)|0;ia=C;la=wh(L|0,fa|0,-997805,-1)|0;ma=C;x=wh(L|0,fa|0,136657,0)|0;x=lh(ja|0,e|0,x|0,C|0)|0;e=C;fa=wh(L|0,fa|0,-683901,-1)|0;L=C;H=lh(oa|0,na|0,ua|0,H|0)|0;Aa=kh(H|0,C|0,xa|0,Aa|0)|0;L=lh(Aa|0,C|0,fa|0,L|0)|0;fa=C;Aa=wh(za|0,I|0,666643,0)|0;D=lh(Aa|0,C|0,D&2097151|0,0)|0;Aa=C;xa=wh(za|0,I|0,470296,0)|0;xa=lh(Da|0,B|0,xa|0,C|0)|0;B=C;Da=wh(za|0,I|0,654183,0)|0;Da=lh(ta|0,s|0,Da|0,C|0)|0;s=C;ta=wh(za|0,I|0,-997805,-1)|0;ta=lh(Z|0,ia|0,ta|0,C|0)|0;ia=C;Z=wh(za|0,I|0,136657,0)|0;H=C;I=wh(za|0,I|0,-683901,-1)|0;I=lh(x|0,e|0,I|0,C|0)|0;e=C;x=wh(ha|0,k|0,666643,0)|0;y=lh(x|0,C|0,y&2097151|0,0)|0;x=C;za=wh(ha|0,k|0,470296,0)|0;za=lh(D|0,Aa|0,za|0,C|0)|0;Aa=C;D=wh(ha|0,k|0,654183,0)|0;D=lh(xa|0,B|0,D|0,C|0)|0;B=C;xa=wh(ha|0,k|0,-997805,-1)|0;xa=lh(Da|0,s|0,xa|0,C|0)|0;s=C;Da=wh(ha|0,k|0,136657,0)|0;Da=lh(ta|0,ia|0,Da|0,C|0)|0;ia=C;k=wh(ha|0,k|0,-683901,-1)|0;ha=C;t=lh(ya|0,sa|0,j|0,t|0)|0;Ca=kh(t|0,C|0,wa|0,Ca|0)|0;ma=lh(Ca|0,C|0,la|0,ma|0)|0;H=lh(ma|0,C|0,Z|0,H|0)|0;ha=lh(H|0,C|0,k|0,ha|0)|0;k=C;H=wh(Ea|0,o|0,666643,0)|0;Z=C;ma=wh(Ea|0,o|0,470296,0)|0;la=C;Ca=wh(Ea|0,o|0,654183,0)|0;wa=C;t=wh(Ea|0,o|0,-997805,-1)|0;j=C;sa=wh(Ea|0,o|0,136657,0)|0;sa=lh(xa|0,s|0,sa|0,C|0)|0;s=C;o=wh(Ea|0,o|0,-683901,-1)|0;o=lh(Da|0,ia|0,o|0,C|0)|0;ia=C;Da=wh(ra|0,ca|0,666643,0)|0;Ea=C;xa=wh(ra|0,ca|0,470296,0)|0;ya=C;ta=wh(ra|0,ca|0,654183,0)|0;ua=C;na=wh(ra|0,ca|0,-997805,-1)|0;oa=C;ja=wh(ra|0,ca|0,136657,0)|0;ka=C;ca=wh(ra|0,ca|0,-683901,-1)|0;ca=lh(sa|0,s|0,ca|0,C|0)|0;s=C;sa=wh(Q|0,M|0,666643,0)|0;va=lh(sa|0,C|0,n|f|V&2031616|0,va|0)|0;V=C;f=wh(Q|0,M|0,470296,0)|0;n=C;sa=wh(Q|0,M|0,654183,0)|0;Ba=lh(sa|0,C|0,Ba&2097151|0,0)|0;Z=lh(Ba|0,C|0,H|0,Z|0)|0;ya=lh(Z|0,C|0,xa|0,ya|0)|0;xa=C;Z=wh(Q|0,M|0,-997805,-1)|0;H=C;Ba=wh(Q|0,M|0,136657,0)|0;Ba=lh(za|0,Aa|0,Ba|0,C|0)|0;wa=lh(Ba|0,C|0,Ca|0,wa|0)|0;oa=lh(wa|0,C|0,na|0,oa|0)|0;na=C;M=wh(Q|0,M|0,-683901,-1)|0;Q=C;wa=lh(va|0,V|0,1048576,0)|0;wa=mh(wa|0,C|0,21)|0;Ca=C;ga=lh(f|0,n|0,ga&2097151|0,0)|0;Ea=lh(ga|0,C|0,Da|0,Ea|0)|0;Ea=lh(Ea|0,C|0,wa|0,Ca|0)|0;Da=C;Ca=ph(wa|0,Ca|0,21)|0;Ca=kh(va|0,V|0,Ca|0,C|0)|0;V=C;va=lh(ya|0,xa|0,1048576,0)|0;va=mh(va|0,C|0,21)|0;wa=C;H=lh(y|0,x|0,Z|0,H|0)|0;la=lh(H|0,C|0,ma|0,la|0)|0;ua=lh(la|0,C|0,ta|0,ua|0)|0;ua=lh(ua|0,C|0,va|0,wa|0)|0;ta=C;wa=ph(va|0,wa|0,21)|0;va=C;la=lh(oa|0,na|0,1048576,0)|0;la=mh(la|0,C|0,21)|0;ma=C;Q=lh(D|0,B|0,M|0,Q|0)|0;j=lh(Q|0,C|0,t|0,j|0)|0;ka=lh(j|0,C|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,la|0,ma|0)|0;ja=C;ma=ph(la|0,ma|0,21)|0;la=C;j=lh(ca|0,s|0,1048576,0)|0;j=mh(j|0,C|0,21)|0;t=C;ia=lh(o|0,ia|0,j|0,t|0)|0;o=C;t=ph(j|0,t|0,21)|0;t=kh(ca|0,s|0,t|0,C|0)|0;s=C;ca=lh(ha|0,k|0,1048576,0)|0;ca=mh(ca|0,C|0,21)|0;j=C;e=lh(I|0,e|0,ca|0,j|0)|0;I=C;j=ph(ca|0,j|0,21)|0;j=kh(ha|0,k|0,j|0,C|0)|0;k=C;ha=lh(L|0,fa|0,1048576,0)|0;ha=mh(ha|0,C|0,21)|0;ca=C;R=lh(_|0,R|0,ha|0,ca|0)|0;_=C;ca=ph(ha|0,ca|0,21)|0;ca=kh(L|0,fa|0,ca|0,C|0)|0;fa=C;L=lh(Ea|0,Da|0,1048576,0)|0;L=mh(L|0,C|0,21)|0;ha=C;Q=ph(L|0,ha|0,21)|0;M=C;B=lh(ua|0,ta|0,1048576,0)|0;B=mh(B|0,C|0,21)|0;D=C;H=ph(B|0,D|0,21)|0;Z=C;x=lh(ka|0,ja|0,1048576,0)|0;x=mh(x|0,C|0,21)|0;y=C;s=lh(t|0,s|0,x|0,y|0)|0;t=C;y=ph(x|0,y|0,21)|0;x=C;ga=lh(ia|0,o|0,1048576,0)|0;ga=mh(ga|0,C|0,21)|0;n=C;k=lh(j|0,k|0,ga|0,n|0)|0;j=C;n=ph(ga|0,n|0,21)|0;n=kh(ia|0,o|0,n|0,C|0)|0;o=C;ia=lh(e|0,I|0,1048576,0)|0;ia=mh(ia|0,C|0,21)|0;ga=C;fa=lh(ca|0,fa|0,ia|0,ga|0)|0;ca=C;ga=ph(ia|0,ga|0,21)|0;ga=kh(e|0,I|0,ga|0,C|0)|0;I=C;e=lh(R|0,_|0,1048576,0)|0;e=mh(e|0,C|0,21)|0;ia=C;f=ph(e|0,ia|0,21)|0;f=kh(R|0,_|0,f|0,C|0)|0;_=C;R=wh(e|0,ia|0,666643,0)|0;R=lh(Ca|0,V|0,R|0,C|0)|0;V=C;Ca=wh(e|0,ia|0,470296,0)|0;Ba=C;Aa=wh(e|0,ia|0,654183,0)|0;za=C;sa=wh(e|0,ia|0,-997805,-1)|0;ra=C;qa=wh(e|0,ia|0,136657,0)|0;pa=C;ia=wh(e|0,ia|0,-683901,-1)|0;e=C;W=mh(R|0,V|0,21)|0;da=C;Ba=lh(Ea|0,Da|0,Ca|0,Ba|0)|0;Ba=lh(Ba|0,C|0,W|0,da|0)|0;M=kh(Ba|0,C|0,Q|0,M|0)|0;Q=C;da=ph(W|0,da|0,21)|0;da=kh(R|0,V|0,da|0,C|0)|0;V=C;R=mh(M|0,Q|0,21)|0;W=C;xa=lh(Aa|0,za|0,ya|0,xa|0)|0;va=kh(xa|0,C|0,wa|0,va|0)|0;ha=lh(va|0,C|0,L|0,ha|0)|0;ha=lh(ha|0,C|0,R|0,W|0)|0;L=C;W=ph(R|0,W|0,21)|0;W=kh(M|0,Q|0,W|0,C|0)|0;Q=C;M=mh(ha|0,L|0,21)|0;R=C;ra=lh(ua|0,ta|0,sa|0,ra|0)|0;Z=kh(ra|0,C|0,H|0,Z|0)|0;Z=lh(Z|0,C|0,M|0,R|0)|0;H=C;R=ph(M|0,R|0,21)|0;R=kh(ha|0,L|0,R|0,C|0)|0;L=C;ha=mh(Z|0,H|0,21)|0;M=C;na=lh(qa|0,pa|0,oa|0,na|0)|0;la=kh(na|0,C|0,ma|0,la|0)|0;D=lh(la|0,C|0,B|0,D|0)|0;D=lh(D|0,C|0,ha|0,M|0)|0;B=C;M=ph(ha|0,M|0,21)|0;M=kh(Z|0,H|0,M|0,C|0)|0;H=C;Z=mh(D|0,B|0,21)|0;ha=C;e=lh(ka|0,ja|0,ia|0,e|0)|0;x=kh(e|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,Z|0,ha|0)|0;y=C;ha=ph(Z|0,ha|0,21)|0;ha=kh(D|0,B|0,ha|0,C|0)|0;B=C;D=mh(x|0,y|0,21)|0;Z=C;t=lh(s|0,t|0,D|0,Z|0)|0;s=C;Z=ph(D|0,Z|0,21)|0;Z=kh(x|0,y|0,Z|0,C|0)|0;y=C;x=mh(t|0,s|0,21)|0;D=C;o=lh(x|0,D|0,n|0,o|0)|0;n=C;D=ph(x|0,D|0,21)|0;D=kh(t|0,s|0,D|0,C|0)|0;s=C;t=mh(o|0,n|0,21)|0;x=C;j=lh(k|0,j|0,t|0,x|0)|0;k=C;x=ph(t|0,x|0,21)|0;x=kh(o|0,n|0,x|0,C|0)|0;n=C;o=mh(j|0,k|0,21)|0;t=C;I=lh(o|0,t|0,ga|0,I|0)|0;ga=C;t=ph(o|0,t|0,21)|0;t=kh(j|0,k|0,t|0,C|0)|0;k=C;j=mh(I|0,ga|0,21)|0;o=C;ca=lh(fa|0,ca|0,j|0,o|0)|0;fa=C;o=ph(j|0,o|0,21)|0;o=kh(I|0,ga|0,o|0,C|0)|0;ga=C;I=mh(ca|0,fa|0,21)|0;j=C;_=lh(I|0,j|0,f|0,_|0)|0;f=C;j=ph(I|0,j|0,21)|0;j=kh(ca|0,fa|0,j|0,C|0)|0;fa=C;ca=mh(_|0,f|0,21)|0;I=C;e=ph(ca|0,I|0,21)|0;e=kh(_|0,f|0,e|0,C|0)|0;f=C;_=wh(ca|0,I|0,666643,0)|0;V=lh(_|0,C|0,da|0,V|0)|0;da=C;_=wh(ca|0,I|0,470296,0)|0;_=lh(W|0,Q|0,_|0,C|0)|0;Q=C;W=wh(ca|0,I|0,654183,0)|0;W=lh(R|0,L|0,W|0,C|0)|0;L=C;R=wh(ca|0,I|0,-997805,-1)|0;R=lh(M|0,H|0,R|0,C|0)|0;H=C;M=wh(ca|0,I|0,136657,0)|0;M=lh(ha|0,B|0,M|0,C|0)|0;B=C;I=wh(ca|0,I|0,-683901,-1)|0;I=lh(Z|0,y|0,I|0,C|0)|0;y=C;Z=mh(V|0,da|0,21)|0;ca=C;Q=lh(_|0,Q|0,Z|0,ca|0)|0;_=C;ca=ph(Z|0,ca|0,21)|0;ca=kh(V|0,da|0,ca|0,C|0)|0;da=C;V=mh(Q|0,_|0,21)|0;Z=C;L=lh(W|0,L|0,V|0,Z|0)|0;W=C;Z=ph(V|0,Z|0,21)|0;Z=kh(Q|0,_|0,Z|0,C|0)|0;_=C;Q=mh(L|0,W|0,21)|0;V=C;H=lh(R|0,H|0,Q|0,V|0)|0;R=C;V=ph(Q|0,V|0,21)|0;V=kh(L|0,W|0,V|0,C|0)|0;W=C;L=mh(H|0,R|0,21)|0;Q=C;B=lh(M|0,B|0,L|0,Q|0)|0;M=C;Q=ph(L|0,Q|0,21)|0;Q=kh(H|0,R|0,Q|0,C|0)|0;R=C;H=mh(B|0,M|0,21)|0;L=C;y=lh(I|0,y|0,H|0,L|0)|0;I=C;L=ph(H|0,L|0,21)|0;L=kh(B|0,M|0,L|0,C|0)|0;M=C;B=mh(y|0,I|0,21)|0;H=C;s=lh(B|0,H|0,D|0,s|0)|0;D=C;H=ph(B|0,H|0,21)|0;H=kh(y|0,I|0,H|0,C|0)|0;I=C;y=mh(s|0,D|0,21)|0;B=C;n=lh(y|0,B|0,x|0,n|0)|0;x=C;B=ph(y|0,B|0,21)|0;B=kh(s|0,D|0,B|0,C|0)|0;D=C;s=mh(n|0,x|0,21)|0;y=C;k=lh(s|0,y|0,t|0,k|0)|0;t=C;y=ph(s|0,y|0,21)|0;y=kh(n|0,x|0,y|0,C|0)|0;x=C;n=mh(k|0,t|0,21)|0;s=C;ga=lh(n|0,s|0,o|0,ga|0)|0;o=C;s=ph(n|0,s|0,21)|0;s=kh(k|0,t|0,s|0,C|0)|0;t=C;k=mh(ga|0,o|0,21)|0;n=C;fa=lh(k|0,n|0,j|0,fa|0)|0;j=C;n=ph(k|0,n|0,21)|0;n=kh(ga|0,o|0,n|0,C|0)|0;o=C;ga=mh(fa|0,j|0,21)|0;k=C;f=lh(ga|0,k|0,e|0,f|0)|0;e=C;k=ph(ga|0,k|0,21)|0;k=kh(fa|0,j|0,k|0,C|0)|0;j=C;a[b>>0]=ca;b=oh(ca|0,da|0,8)|0;a[ea>>0]=b;b=oh(ca|0,da|0,16)|0;da=C;ca=ph(Z|0,_|0,5)|0;a[ba>>0]=ca|b;b=oh(Z|0,_|0,3)|0;a[aa>>0]=b;b=oh(Z|0,_|0,11)|0;a[$>>0]=b;b=oh(Z|0,_|0,19)|0;_=C;Z=ph(V|0,W|0,2)|0;a[Y>>0]=Z|b;b=oh(V|0,W|0,6)|0;a[X>>0]=b;b=oh(V|0,W|0,14)|0;W=C;V=ph(Q|0,R|0,7)|0;a[U>>0]=V|b;b=oh(Q|0,R|0,1)|0;a[T>>0]=b;b=oh(Q|0,R|0,9)|0;a[S>>0]=b;b=oh(Q|0,R|0,17)|0;R=C;Q=ph(L|0,M|0,4)|0;a[P>>0]=Q|b;b=oh(L|0,M|0,4)|0;a[O>>0]=b;b=oh(L|0,M|0,12)|0;a[N>>0]=b;b=oh(L|0,M|0,20)|0;M=C;L=ph(H|0,I|0,1)|0;a[K>>0]=L|b;b=oh(H|0,I|0,7)|0;a[J>>0]=b;b=oh(H|0,I|0,15)|0;I=C;H=ph(B|0,D|0,6)|0;a[G>>0]=H|b;b=oh(B|0,D|0,2)|0;a[F>>0]=b;b=oh(B|0,D|0,10)|0;a[E>>0]=b;b=oh(B|0,D|0,18)|0;D=C;B=ph(y|0,x|0,3)|0;a[A>>0]=B|b;b=oh(y|0,x|0,5)|0;a[z>>0]=b;b=oh(y|0,x|0,13)|0;a[w>>0]=b;a[v>>0]=s;b=oh(s|0,t|0,8)|0;a[u>>0]=b;b=oh(s|0,t|0,16)|0;t=C;s=ph(n|0,o|0,5)|0;a[r>>0]=s|b;b=oh(n|0,o|0,3)|0;a[q>>0]=b;b=oh(n|0,o|0,11)|0;a[p>>0]=b;b=oh(n|0,o|0,19)|0;o=C;n=ph(k|0,j|0,2)|0;a[m>>0]=n|b;b=oh(k|0,j|0,6)|0;a[l>>0]=b;j=oh(k|0,j|0,14)|0;k=C;b=ph(f|0,e|0,7)|0;a[i>>0]=j|b;b=oh(f|0,e|0,1)|0;a[h>>0]=b;b=oh(f|0,e|0,9)|0;a[g>>0]=b;b=oh(f|0,e|0,17)|0;a[c>>0]=b;return}function Fc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;if(!f){f=1634760805;g=2036477234;h=1797285236;i=857760878}else{i=f+4|0;g=f+8|0;h=f+12|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;g=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;h=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;i=d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24}l=e+4|0;m=e+8|0;n=e+12|0;o=e+16|0;p=e+20|0;q=e+24|0;r=e+28|0;v=c+4|0;u=c+8|0;j=c+12|0;t=20;s=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;o=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;p=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;q=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;r=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;k=i;e=d[c>>0]|d[c+1>>0]<<8|d[c+2>>0]<<16|d[c+3>>0]<<24;i=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;j=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;while(1){D=p+f|0;D=(D>>>25|D<<7)^n;A=D+f|0;A=(A>>>23|A<<9)^c;x=A+D|0;x=(x>>>19|x<<13)^p;G=x+A|0;G=(G>>>14|G<<18)^f;z=k+s|0;z=j^(z>>>25|z<<7);w=z+k|0;w=q^(w>>>23|w<<9);J=w+z|0;J=(J>>>19|J<<13)^s;C=J+w|0;C=(C>>>14|C<<18)^k;u=g+e|0;u=r^(u>>>25|u<<7);I=u+g|0;I=(I>>>23|I<<9)^l;F=I+u|0;F=(F>>>19|F<<13)^e;y=F+I|0;y=(y>>>14|y<<18)^g;H=h+o|0;H=(H>>>25|H<<7)^m;E=H+h|0;E=(E>>>23|E<<9)^i;B=E+H|0;B=(B>>>19|B<<13)^o;v=B+E|0;v=(v>>>14|v<<18)^h;K=G+H|0;s=(K>>>25|K<<7)^J;J=s+G|0;l=(J>>>23|J<<9)^I;I=l+s|0;m=(I>>>19|I<<13)^H;H=m+l|0;f=(H>>>14|H<<18)^G;G=C+D|0;e=(G>>>25|G<<7)^F;F=e+C|0;i=(F>>>23|F<<9)^E;E=i+e|0;n=(E>>>19|E<<13)^D;D=n+i|0;k=(D>>>14|D<<18)^C;C=y+z|0;o=(C>>>25|C<<7)^B;B=o+y|0;c=(B>>>23|B<<9)^A;A=c+o|0;j=(A>>>19|A<<13)^z;z=j+c|0;g=(z>>>14|z<<18)^y;y=v+u|0;p=(y>>>25|y<<7)^x;x=p+v|0;q=(x>>>23|x<<9)^w;w=q+p|0;r=(w>>>19|w<<13)^u;u=r+q|0;h=(u>>>14|u<<18)^v;if((t|0)<=2)break;else t=t+-2|0}a[b>>0]=f;a[b+1>>0]=f>>8;a[b+2>>0]=f>>16;a[b+3>>0]=f>>24;K=b+4|0;a[K>>0]=k;a[K+1>>0]=k>>8;a[K+2>>0]=k>>16;a[K+3>>0]=k>>24;K=b+8|0;a[K>>0]=g;a[K+1>>0]=g>>8;a[K+2>>0]=g>>16;a[K+3>>0]=g>>24;K=b+12|0;a[K>>0]=h;a[K+1>>0]=h>>8;a[K+2>>0]=h>>16;a[K+3>>0]=h>>24;K=b+16|0;a[K>>0]=e;a[K+1>>0]=e>>8;a[K+2>>0]=e>>16;a[K+3>>0]=e>>24;K=b+20|0;a[K>>0]=i;a[K+1>>0]=i>>8;a[K+2>>0]=i>>16;a[K+3>>0]=i>>24;K=b+24|0;a[K>>0]=c;a[K+1>>0]=c>>8;a[K+2>>0]=c>>16;a[K+3>>0]=c>>24;K=b+28|0;a[K>>0]=j;a[K+1>>0]=j>>8;a[K+2>>0]=j>>16;a[K+3>>0]=j>>24;return 0}function Gc(){return 32}function Hc(){return 16}function Ic(){return 32}function Jc(){return 16}function Kc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;if(!f){G=1634760805;H=857760878;I=2036477234;J=1797285236}else{H=f+4|0;I=f+8|0;J=f+12|0;G=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;H=d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24;I=d[I>>0]|d[I+1>>0]<<8|d[I+2>>0]<<16|d[I+3>>0]<<24;J=d[J>>0]|d[J+1>>0]<<8|d[J+2>>0]<<16|d[J+3>>0]<<24}F=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;z=e+4|0;z=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;A=e+8|0;A=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;B=e+12|0;B=d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24;C=d[c>>0]|d[c+1>>0]<<8|d[c+2>>0]<<16|d[c+3>>0]<<24;D=c+4|0;D=d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24;E=c+8|0;E=d[E>>0]|d[E+1>>0]<<8|d[E+2>>0]<<16|d[E+3>>0]<<24;v=c+12|0;v=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;w=e+16|0;w=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=e+20|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;y=e+24|0;y=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;f=e+28|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;c=20;e=G;g=F;h=I;i=w;j=x;k=y;l=f;m=J;n=z;o=A;p=B;q=H;r=C;s=D;t=E;u=v;while(1){T=e+j|0;T=(T>>>25|T<<7)^p;Q=T+e|0;Q=(Q>>>23|Q<<9)^t;N=Q+T|0;N=(N>>>19|N<<13)^j;W=N+Q|0;W=(W>>>14|W<<18)^e;P=g+q|0;P=(P>>>25|P<<7)^u;M=P+q|0;M=(M>>>23|M<<9)^k;Z=M+P|0;Z=(Z>>>19|Z<<13)^g;S=Z+M|0;S=(S>>>14|S<<18)^q;L=r+h|0;L=(L>>>25|L<<7)^l;Y=L+h|0;Y=(Y>>>23|Y<<9)^n;V=Y+L|0;V=(V>>>19|V<<13)^r;O=V+Y|0;O=(O>>>14|O<<18)^h;X=i+m|0;X=o^(X>>>25|X<<7);U=X+m|0;U=(U>>>23|U<<9)^s;R=U+X|0;R=(R>>>19|R<<13)^i;K=R+U|0;K=(K>>>14|K<<18)^m;_=W+X|0;g=(_>>>25|_<<7)^Z;Z=g+W|0;n=(Z>>>23|Z<<9)^Y;Y=n+g|0;o=(Y>>>19|Y<<13)^X;X=o+n|0;e=(X>>>14|X<<18)^W;W=S+T|0;r=(W>>>25|W<<7)^V;V=r+S|0;s=(V>>>23|V<<9)^U;U=s+r|0;p=(U>>>19|U<<13)^T;T=p+s|0;q=(T>>>14|T<<18)^S;S=O+P|0;i=(S>>>25|S<<7)^R;R=i+O|0;t=(R>>>23|R<<9)^Q;Q=t+i|0;u=(Q>>>19|Q<<13)^P;P=u+t|0;h=(P>>>14|P<<18)^O;O=K+L|0;j=(O>>>25|O<<7)^N;N=j+K|0;k=(N>>>23|N<<9)^M;M=k+j|0;l=(M>>>19|M<<13)^L;L=l+k|0;m=(L>>>14|L<<18)^K;if((c|0)<=2)break;else c=c+-2|0}_=e+G|0;L=g+F|0;M=n+z|0;N=o+A|0;O=p+B|0;P=q+H|0;Q=r+C|0;R=s+D|0;S=t+E|0;T=u+v|0;U=h+I|0;V=i+w|0;W=j+x|0;X=k+y|0;Y=l+f|0;Z=m+J|0;a[b>>0]=_;a[b+1>>0]=_>>8;a[b+2>>0]=_>>16;a[b+3>>0]=_>>24;_=b+4|0;a[_>>0]=L;a[_+1>>0]=L>>8;a[_+2>>0]=L>>16;a[_+3>>0]=L>>24;_=b+8|0;a[_>>0]=M;a[_+1>>0]=M>>8;a[_+2>>0]=M>>16;a[_+3>>0]=M>>24;_=b+12|0;a[_>>0]=N;a[_+1>>0]=N>>8;a[_+2>>0]=N>>16;a[_+3>>0]=N>>24;_=b+16|0;a[_>>0]=O;a[_+1>>0]=O>>8;a[_+2>>0]=O>>16;a[_+3>>0]=O>>24;_=b+20|0;a[_>>0]=P;a[_+1>>0]=P>>8;a[_+2>>0]=P>>16;a[_+3>>0]=P>>24;_=b+24|0;a[_>>0]=Q;a[_+1>>0]=Q>>8;a[_+2>>0]=Q>>16;a[_+3>>0]=Q>>24;_=b+28|0;a[_>>0]=R;a[_+1>>0]=R>>8;a[_+2>>0]=R>>16;a[_+3>>0]=R>>24;_=b+32|0;a[_>>0]=S;a[_+1>>0]=S>>8;a[_+2>>0]=S>>16;a[_+3>>0]=S>>24;_=b+36|0;a[_>>0]=T;a[_+1>>0]=T>>8;a[_+2>>0]=T>>16;a[_+3>>0]=T>>24;_=b+40|0;a[_>>0]=U;a[_+1>>0]=U>>8;a[_+2>>0]=U>>16;a[_+3>>0]=U>>24;_=b+44|0;a[_>>0]=V;a[_+1>>0]=V>>8;a[_+2>>0]=V>>16;a[_+3>>0]=V>>24;_=b+48|0;a[_>>0]=W;a[_+1>>0]=W>>8;a[_+2>>0]=W>>16;a[_+3>>0]=W>>24;_=b+52|0;a[_>>0]=X;a[_+1>>0]=X>>8;a[_+2>>0]=X>>16;a[_+3>>0]=X>>24;_=b+56|0;a[_>>0]=Y;a[_+1>>0]=Y>>8;a[_+2>>0]=Y>>16;a[_+3>>0]=Y>>24;_=b+60|0;a[_>>0]=Z;a[_+1>>0]=Z>>8;a[_+2>>0]=Z>>16;a[_+3>>0]=Z>>24;return 0}function Lc(){return 64}function Mc(){return 16}function Nc(){return 32}function Oc(){return 16}function Pc(){return 16}function Qc(){return 64}function Rc(){return 32}function Sc(){return 16}function Tc(){return 64}function Uc(){return 32}function Vc(){return 32439}function Wc(){return 384}function Xc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kd(a,b,c,d,e,f,g)|0}function Yc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return md(a,b,c,d)|0}function Zc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((e|0)==0&(f|0)==0)return 0;k=b+352|0;l=b+96|0;m=b+64|0;n=b+72|0;o=b+224|0;g=c[k>>2]|0;j=e;while(1){i=256-g|0;e=b+96+g|0;if(!(f>>>0>0|(f|0)==0&j>>>0>i>>>0))break;qh(e|0,d|0,i|0)|0;c[k>>2]=(c[k>>2]|0)+i;h=m;e=c[h>>2]|0;h=c[h+4>>2]|0;q=lh(e|0,h|0,128,0)|0;g=m;c[g>>2]=q;c[g+4>>2]=C;g=n;g=lh((h>>>0>4294967295|(h|0)==-1&e>>>0>4294967167)&1|0,0,c[g>>2]|0,c[g+4>>2]|0)|0;e=n;c[e>>2]=g;c[e+4>>2]=C;id(b,l);e=l;g=o;h=e+128|0;do{a[e>>0]=a[g>>0]|0;e=e+1|0;g=g+1|0}while((e|0)<(h|0));g=(c[k>>2]|0)+-128|0;c[k>>2]=g;e=kh(j|0,f|0,i|0,0)|0;if((j|0)==(i|0)&(f|0)==0){p=6;break}else{d=d+i|0;f=C;j=e}}if((p|0)==6)return 0;qh(e|0,d|0,j|0)|0;q=lh(c[k>>2]|0,0,j|0,f|0)|0;c[k>>2]=q;return 0}function _c(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0<256){jd(a,b,c&255);return 0}else za(32557,32577,106,32795);return 0}function $c(){return 16}function ad(){return 64}function bd(){return 32}function cd(){return 16}function dd(){return 64}function ed(){return 32}function fd(){return 16}function gd(){return 16}function hd(){return 384}function Ed(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;h=i;g=i=i+63&-64;i=i+640|0;e=0;do{k=b+(e<<3)|0;p=d[k+7>>0]|0;q=ph(d[k+6>>0]|0|0,0,8)|0;j=C;o=ph(d[k+5>>0]|0|0,0,16)|0;j=j|C;n=ph(d[k+4>>0]|0|0,0,24)|0;j=j|C|(d[k+3>>0]|0);m=ph(d[k+2>>0]|0|0,0,40)|0;j=j|C;l=ph(d[k+1>>0]|0|0,0,48)|0;j=j|C;k=ph(d[k>>0]|0|0,0,56)|0;f=g+(e<<3)|0;c[f>>2]=q|p|o|n|m|l|k;c[f+4>>2]=j|C;e=e+1|0}while((e|0)!=16);e=g;b=c[e>>2]|0;e=c[e+4>>2]|0;f=16;do{s=g+(f+-2<<3)|0;w=c[s>>2]|0;s=c[s+4>>2]|0;r=oh(w|0,s|0,19)|0;k=C;j=ph(w|0,s|0,45)|0;k=k|C;u=oh(w|0,s|0,61)|0;v=C;t=ph(w|0,s|0,3)|0;v=v|C;s=oh(w|0,s|0,6)|0;k=v^C^k;v=g+(f+-7<<3)|0;w=c[v>>2]|0;v=c[v+4>>2]|0;o=g+(f+-15<<3)|0;y=b;b=c[o>>2]|0;x=e;e=c[o+4>>2]|0;o=oh(b|0,e|0,1)|0;p=C;q=ph(b|0,e|0,63)|0;p=p|C;l=oh(b|0,e|0,8)|0;z=C;m=ph(b|0,e|0,56)|0;z=z|C;n=oh(b|0,e|0,7)|0;p=z^C^p;v=lh(y|0,x|0,w|0,v|0)|0;k=lh(v|0,C|0,(u|t)^s^(r|j)|0,k|0)|0;p=lh(k|0,C|0,(l|m)^n^(o|q)|0,p|0)|0;q=g+(f<<3)|0;c[q>>2]=p;c[q+4>>2]=C;f=f+1|0}while((f|0)!=80);o=a;p=c[o>>2]|0;o=c[o+4>>2]|0;e=a+8|0;r=e;s=c[r>>2]|0;r=c[r+4>>2]|0;k=a+16|0;u=k;v=c[u>>2]|0;u=c[u+4>>2]|0;n=a+24|0;x=n;y=c[x>>2]|0;x=c[x+4>>2]|0;q=a+32|0;F=q;L=c[F>>2]|0;F=c[F+4>>2]|0;t=a+40|0;H=t;M=c[H>>2]|0;H=c[H+4>>2]|0;w=a+48|0;B=w;A=c[B>>2]|0;B=c[B+4>>2]|0;z=a+56|0;b=z;f=c[b>>2]|0;b=c[b+4>>2]|0;G=oh(L|0,F|0,14)|0;J=C;I=ph(L|0,F|0,50)|0;J=J|C;E=oh(L|0,F|0,18)|0;j=C;K=ph(L|0,F|0,46)|0;j=J^(j|C);J=oh(L|0,F|0,41)|0;m=C;l=ph(L|0,F|0,23)|0;m=j^(m|C);j=g;D=c[j>>2]|0;j=c[j+4>>2]|0;b=lh(f|0,b|0,-685199838,1116352408)|0;j=lh(b|0,C|0,D|0,j|0)|0;m=lh(j|0,C|0,(G|I)^(E|K)^(J|l)|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;J=oh(p|0,o|0,28)|0;K=C;E=ph(p|0,o|0,36)|0;K=K|C;I=oh(p|0,o|0,34)|0;G=C;j=ph(p|0,o|0,30)|0;G=K^(G|C);K=oh(p|0,o|0,39)|0;D=C;b=ph(p|0,o|0,25)|0;D=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(J|E)^(I|j)^(K|b)|0,G^(D|C)|0)|0;G=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(D|0,G|0,m|0,l|0)|0;m=C;G=oh(x|0,y|0,14)|0;D=C;b=ph(x|0,y|0,50)|0;D=D|C;K=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=D^(j|C);D=oh(x|0,y|0,41)|0;E=C;J=ph(x|0,y|0,23)|0;E=j^(E|C);j=g+8|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,602891725,1899447441)|0;E=lh(B|0,C|0,(G|b)^(K|I)^(D|J)|0,E|0)|0;j=lh(E|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;E=oh(l|0,m|0,28)|0;J=C;D=ph(l|0,m|0,36)|0;J=J|C;I=oh(l|0,m|0,34)|0;K=C;b=ph(l|0,m|0,30)|0;K=J^(K|C);J=oh(l|0,m|0,39)|0;G=C;B=ph(l|0,m|0,25)|0;G=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(E|D)^(I|b)^(J|B)|0,K^(G|C)|0)|0;K=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(G|0,K|0,j|0,f|0)|0;j=C;K=oh(u|0,v|0,14)|0;G=C;B=ph(u|0,v|0,50)|0;G=G|C;J=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=G^(b|C);G=oh(u|0,v|0,41)|0;D=C;E=ph(u|0,v|0,23)|0;D=b^(D|C);b=g+16|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,-330482897,-1245643825)|0;D=lh(H|0,C|0,(K|B)^(J|I)^(G|E)|0,D|0)|0;b=lh(D|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;D=oh(f|0,j|0,28)|0;E=C;G=ph(f|0,j|0,36)|0;E=E|C;I=oh(f|0,j|0,34)|0;J=C;B=ph(f|0,j|0,30)|0;J=E^(J|C);E=oh(f|0,j|0,39)|0;K=C;H=ph(f|0,j|0,25)|0;K=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(D|G)^(I|B)^(E|H)|0,J^(K|C)|0)|0;J=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(K|0,J|0,b|0,A|0)|0;b=C;J=oh(r|0,s|0,14)|0;K=C;H=ph(r|0,s|0,50)|0;K=K|C;E=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=K^(B|C);K=oh(r|0,s|0,41)|0;G=C;D=ph(r|0,s|0,23)|0;G=B^(G|C);B=g+24|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,-2121671748,-373957723)|0;G=lh(F|0,C|0,(J|H)^(E|I)^(K|D)|0,G|0)|0;B=lh(G|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;G=oh(A|0,b|0,28)|0;D=C;K=ph(A|0,b|0,36)|0;D=D|C;I=oh(A|0,b|0,34)|0;E=C;H=ph(A|0,b|0,30)|0;E=D^(E|C);D=oh(A|0,b|0,39)|0;J=C;F=ph(A|0,b|0,25)|0;J=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(G|K)^(I|H)^(D|F)|0,E^(J|C)|0)|0;E=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(J|0,E|0,B|0,M|0)|0;B=C;E=oh(o|0,p|0,14)|0;J=C;F=ph(o|0,p|0,50)|0;J=J|C;D=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=J^(H|C);J=oh(o|0,p|0,41)|0;K=C;G=ph(o|0,p|0,23)|0;K=H^(K|C);H=g+32|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-213338824,961987163)|0;K=lh(y|0,C|0,(E|F)^(D|I)^(J|G)|0,K|0)|0;H=lh(K|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;K=oh(M|0,B|0,28)|0;G=C;J=ph(M|0,B|0,36)|0;G=G|C;I=oh(M|0,B|0,34)|0;D=C;F=ph(M|0,B|0,30)|0;D=G^(D|C);G=oh(M|0,B|0,39)|0;E=C;y=ph(M|0,B|0,25)|0;E=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(K|J)^(I|F)^(G|y)|0,D^(E|C)|0)|0;D=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(E|0,D|0,H|0,L|0)|0;H=C;D=oh(m|0,l|0,14)|0;E=C;y=ph(m|0,l|0,50)|0;E=E|C;G=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=E^(F|C);E=oh(m|0,l|0,41)|0;J=C;K=ph(m|0,l|0,23)|0;J=F^(J|C);F=g+40|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,-1241133031,1508970993)|0;J=lh(v|0,C|0,(D|y)^(G|I)^(E|K)|0,J|0)|0;F=lh(J|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;J=oh(L|0,H|0,28)|0;K=C;E=ph(L|0,H|0,36)|0;K=K|C;I=oh(L|0,H|0,34)|0;G=C;y=ph(L|0,H|0,30)|0;G=K^(G|C);K=oh(L|0,H|0,39)|0;D=C;v=ph(L|0,H|0,25)|0;D=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(J|E)^(I|y)^(K|v)|0,G^(D|C)|0)|0;G=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(D|0,G|0,F|0,x|0)|0;F=C;G=oh(j|0,f|0,14)|0;D=C;v=ph(j|0,f|0,50)|0;D=D|C;K=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=D^(y|C);D=oh(j|0,f|0,41)|0;E=C;J=ph(j|0,f|0,23)|0;E=y^(E|C);y=g+48|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,-1357295717,-1841331548)|0;E=lh(s|0,C|0,(G|v)^(K|I)^(D|J)|0,E|0)|0;y=lh(E|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;E=oh(x|0,F|0,28)|0;J=C;D=ph(x|0,F|0,36)|0;J=J|C;I=oh(x|0,F|0,34)|0;K=C;v=ph(x|0,F|0,30)|0;K=J^(K|C);J=oh(x|0,F|0,39)|0;G=C;s=ph(x|0,F|0,25)|0;G=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(E|D)^(I|v)^(J|s)|0,K^(G|C)|0)|0;K=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(G|0,K|0,y|0,u|0)|0;y=C;K=oh(b|0,A|0,14)|0;G=C;s=ph(b|0,A|0,50)|0;G=G|C;J=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=G^(v|C);G=oh(b|0,A|0,41)|0;D=C;E=ph(b|0,A|0,23)|0;D=v^(D|C);v=g+56|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,-630357736,-1424204075)|0;D=lh(p|0,C|0,(K|s)^(J|I)^(G|E)|0,D|0)|0;v=lh(D|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;D=oh(u|0,y|0,28)|0;E=C;G=ph(u|0,y|0,36)|0;E=E|C;I=oh(u|0,y|0,34)|0;J=C;s=ph(u|0,y|0,30)|0;J=E^(J|C);E=oh(u|0,y|0,39)|0;K=C;p=ph(u|0,y|0,25)|0;K=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(D|G)^(I|s)^(E|p)|0,J^(K|C)|0)|0;J=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(K|0,J|0,v|0,r|0)|0;v=C;J=oh(B|0,M|0,14)|0;K=C;p=ph(B|0,M|0,50)|0;K=K|C;E=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=K^(s|C);K=oh(B|0,M|0,41)|0;G=C;D=ph(B|0,M|0,23)|0;G=s^(G|C);s=g+64|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,-1560083902,-670586216)|0;G=lh(l|0,C|0,(J|p)^(E|I)^(K|D)|0,G|0)|0;s=lh(G|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;G=oh(r|0,v|0,28)|0;D=C;K=ph(r|0,v|0,36)|0;D=D|C;I=oh(r|0,v|0,34)|0;E=C;p=ph(r|0,v|0,30)|0;E=D^(E|C);D=oh(r|0,v|0,39)|0;J=C;l=ph(r|0,v|0,25)|0;J=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(G|K)^(I|p)^(D|l)|0,E^(J|C)|0)|0;E=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(J|0,E|0,s|0,o|0)|0;s=C;E=oh(H|0,L|0,14)|0;J=C;l=ph(H|0,L|0,50)|0;J=J|C;D=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=J^(p|C);J=oh(H|0,L|0,41)|0;K=C;G=ph(H|0,L|0,23)|0;K=p^(K|C);p=g+72|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,1164996542,310598401)|0;K=lh(f|0,C|0,(E|l)^(D|I)^(J|G)|0,K|0)|0;p=lh(K|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;K=oh(o|0,s|0,28)|0;G=C;J=ph(o|0,s|0,36)|0;G=G|C;I=oh(o|0,s|0,34)|0;D=C;l=ph(o|0,s|0,30)|0;D=G^(D|C);G=oh(o|0,s|0,39)|0;E=C;f=ph(o|0,s|0,25)|0;E=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(K|J)^(I|l)^(G|f)|0,D^(E|C)|0)|0;D=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(E|0,D|0,p|0,m|0)|0;p=C;D=oh(F|0,x|0,14)|0;E=C;f=ph(F|0,x|0,50)|0;E=E|C;G=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=E^(l|C);E=oh(F|0,x|0,41)|0;J=C;K=ph(F|0,x|0,23)|0;J=l^(J|C);l=g+80|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,1323610764,607225278)|0;J=lh(A|0,C|0,(D|f)^(G|I)^(E|K)|0,J|0)|0;l=lh(J|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;J=oh(m|0,p|0,28)|0;K=C;E=ph(m|0,p|0,36)|0;K=K|C;I=oh(m|0,p|0,34)|0;G=C;f=ph(m|0,p|0,30)|0;G=K^(G|C);K=oh(m|0,p|0,39)|0;D=C;A=ph(m|0,p|0,25)|0;D=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(J|E)^(I|f)^(K|A)|0,G^(D|C)|0)|0;G=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(D|0,G|0,l|0,j|0)|0;l=C;G=oh(y|0,u|0,14)|0;D=C;A=ph(y|0,u|0,50)|0;D=D|C;K=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=D^(f|C);D=oh(y|0,u|0,41)|0;E=C;J=ph(y|0,u|0,23)|0;E=f^(E|C);f=g+88|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,-704662302,1426881987)|0;E=lh(M|0,C|0,(G|A)^(K|I)^(D|J)|0,E|0)|0;f=lh(E|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;E=oh(j|0,l|0,28)|0;J=C;D=ph(j|0,l|0,36)|0;J=J|C;I=oh(j|0,l|0,34)|0;K=C;A=ph(j|0,l|0,30)|0;K=J^(K|C);J=oh(j|0,l|0,39)|0;G=C;M=ph(j|0,l|0,25)|0;G=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(E|D)^(I|A)^(J|M)|0,K^(G|C)|0)|0;K=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(G|0,K|0,f|0,b|0)|0;f=C;K=oh(v|0,r|0,14)|0;G=C;M=ph(v|0,r|0,50)|0;G=G|C;J=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=G^(A|C);G=oh(v|0,r|0,41)|0;D=C;E=ph(v|0,r|0,23)|0;D=A^(D|C);A=g+96|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,-226784913,1925078388)|0;D=lh(L|0,C|0,(K|M)^(J|I)^(G|E)|0,D|0)|0;A=lh(D|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;D=oh(b|0,f|0,28)|0;E=C;G=ph(b|0,f|0,36)|0;E=E|C;I=oh(b|0,f|0,34)|0;J=C;M=ph(b|0,f|0,30)|0;J=E^(J|C);E=oh(b|0,f|0,39)|0;K=C;L=ph(b|0,f|0,25)|0;K=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(D|G)^(I|M)^(E|L)|0,J^(K|C)|0)|0;J=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(K|0,J|0,A|0,B|0)|0;A=C;J=oh(s|0,o|0,14)|0;K=C;L=ph(s|0,o|0,50)|0;K=K|C;E=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=K^(M|C);K=oh(s|0,o|0,41)|0;G=C;D=ph(s|0,o|0,23)|0;G=M^(G|C);M=g+104|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,991336113,-2132889090)|0;G=lh(x|0,C|0,(J|L)^(E|I)^(K|D)|0,G|0)|0;M=lh(G|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;G=oh(B|0,A|0,28)|0;D=C;K=ph(B|0,A|0,36)|0;D=D|C;I=oh(B|0,A|0,34)|0;E=C;L=ph(B|0,A|0,30)|0;E=D^(E|C);D=oh(B|0,A|0,39)|0;J=C;x=ph(B|0,A|0,25)|0;J=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(G|K)^(I|L)^(D|x)|0,E^(J|C)|0)|0;E=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(J|0,E|0,M|0,H|0)|0;M=C;E=oh(p|0,m|0,14)|0;J=C;x=ph(p|0,m|0,50)|0;J=J|C;D=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=J^(L|C);J=oh(p|0,m|0,41)|0;K=C;G=ph(p|0,m|0,23)|0;K=L^(K|C);L=g+112|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,633803317,-1680079193)|0;K=lh(u|0,C|0,(E|x)^(D|I)^(J|G)|0,K|0)|0;L=lh(K|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;K=oh(H|0,M|0,28)|0;G=C;J=ph(H|0,M|0,36)|0;G=G|C;I=oh(H|0,M|0,34)|0;D=C;x=ph(H|0,M|0,30)|0;D=G^(D|C);G=oh(H|0,M|0,39)|0;E=C;u=ph(H|0,M|0,25)|0;E=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(K|J)^(I|x)^(G|u)|0,D^(E|C)|0)|0;D=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(E|0,D|0,L|0,F|0)|0;L=C;D=oh(l|0,j|0,14)|0;E=C;u=ph(l|0,j|0,50)|0;E=E|C;G=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=E^(x|C);E=oh(l|0,j|0,41)|0;J=C;K=ph(l|0,j|0,23)|0;J=x^(J|C);x=g+120|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,-815192428,-1046744716)|0;J=lh(r|0,C|0,(D|u)^(G|I)^(E|K)|0,J|0)|0;x=lh(J|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;J=oh(F|0,L|0,28)|0;K=C;E=ph(F|0,L|0,36)|0;K=K|C;I=oh(F|0,L|0,34)|0;G=C;u=ph(F|0,L|0,30)|0;G=K^(G|C);K=oh(F|0,L|0,39)|0;D=C;r=ph(F|0,L|0,25)|0;D=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(J|E)^(I|u)^(K|r)|0,G^(D|C)|0)|0;G=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(D|0,G|0,x|0,y|0)|0;x=C;G=oh(f|0,b|0,14)|0;D=C;r=ph(f|0,b|0,50)|0;D=D|C;K=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=D^(u|C);D=oh(f|0,b|0,41)|0;E=C;J=ph(f|0,b|0,23)|0;E=u^(E|C);u=g+128|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,-1628353838,-459576895)|0;E=lh(o|0,C|0,(G|r)^(K|I)^(D|J)|0,E|0)|0;u=lh(E|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;E=oh(y|0,x|0,28)|0;J=C;D=ph(y|0,x|0,36)|0;J=J|C;I=oh(y|0,x|0,34)|0;K=C;r=ph(y|0,x|0,30)|0;K=J^(K|C);J=oh(y|0,x|0,39)|0;G=C;o=ph(y|0,x|0,25)|0;G=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(E|D)^(I|r)^(J|o)|0,K^(G|C)|0)|0;K=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(G|0,K|0,u|0,v|0)|0;u=C;K=oh(A|0,B|0,14)|0;G=C;o=ph(A|0,B|0,50)|0;G=G|C;J=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=G^(r|C);G=oh(A|0,B|0,41)|0;D=C;E=ph(A|0,B|0,23)|0;D=r^(D|C);r=g+136|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,944711139,-272742522)|0;D=lh(m|0,C|0,(K|o)^(J|I)^(G|E)|0,D|0)|0;r=lh(D|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;D=oh(v|0,u|0,28)|0;E=C;G=ph(v|0,u|0,36)|0;E=E|C;I=oh(v|0,u|0,34)|0;J=C;o=ph(v|0,u|0,30)|0;J=E^(J|C);E=oh(v|0,u|0,39)|0;K=C;m=ph(v|0,u|0,25)|0;K=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(D|G)^(I|o)^(E|m)|0,J^(K|C)|0)|0;J=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(K|0,J|0,r|0,s|0)|0;r=C;J=oh(M|0,H|0,14)|0;K=C;m=ph(M|0,H|0,50)|0;K=K|C;E=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=K^(o|C);K=oh(M|0,H|0,41)|0;G=C;D=ph(M|0,H|0,23)|0;G=o^(G|C);o=g+144|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,-1953704523,264347078)|0;G=lh(j|0,C|0,(J|m)^(E|I)^(K|D)|0,G|0)|0;o=lh(G|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;G=oh(s|0,r|0,28)|0;D=C;K=ph(s|0,r|0,36)|0;D=D|C;I=oh(s|0,r|0,34)|0;E=C;m=ph(s|0,r|0,30)|0;E=D^(E|C);D=oh(s|0,r|0,39)|0;J=C;j=ph(s|0,r|0,25)|0;J=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(G|K)^(I|m)^(D|j)|0,E^(J|C)|0)|0;E=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(J|0,E|0,o|0,p|0)|0;o=C;E=oh(L|0,F|0,14)|0;J=C;j=ph(L|0,F|0,50)|0;J=J|C;D=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=J^(m|C);J=oh(L|0,F|0,41)|0;K=C;G=ph(L|0,F|0,23)|0;K=m^(K|C);m=g+152|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,2007800933,604807628)|0;K=lh(b|0,C|0,(E|j)^(D|I)^(J|G)|0,K|0)|0;m=lh(K|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;K=oh(p|0,o|0,28)|0;G=C;J=ph(p|0,o|0,36)|0;G=G|C;I=oh(p|0,o|0,34)|0;D=C;j=ph(p|0,o|0,30)|0;D=G^(D|C);G=oh(p|0,o|0,39)|0;E=C;b=ph(p|0,o|0,25)|0;E=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(K|J)^(I|j)^(G|b)|0,D^(E|C)|0)|0;D=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(E|0,D|0,m|0,l|0)|0;m=C;D=oh(x|0,y|0,14)|0;E=C;b=ph(x|0,y|0,50)|0;E=E|C;G=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=E^(j|C);E=oh(x|0,y|0,41)|0;J=C;K=ph(x|0,y|0,23)|0;J=j^(J|C);j=g+160|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,1495990901,770255983)|0;J=lh(B|0,C|0,(D|b)^(G|I)^(E|K)|0,J|0)|0;j=lh(J|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;J=oh(l|0,m|0,28)|0;K=C;E=ph(l|0,m|0,36)|0;K=K|C;I=oh(l|0,m|0,34)|0;G=C;b=ph(l|0,m|0,30)|0;G=K^(G|C);K=oh(l|0,m|0,39)|0;D=C;B=ph(l|0,m|0,25)|0;D=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(J|E)^(I|b)^(K|B)|0,G^(D|C)|0)|0;G=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(D|0,G|0,j|0,f|0)|0;j=C;G=oh(u|0,v|0,14)|0;D=C;B=ph(u|0,v|0,50)|0;D=D|C;K=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=D^(b|C);D=oh(u|0,v|0,41)|0;E=C;J=ph(u|0,v|0,23)|0;E=b^(E|C);b=g+168|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,1856431235,1249150122)|0;E=lh(H|0,C|0,(G|B)^(K|I)^(D|J)|0,E|0)|0;b=lh(E|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;E=oh(f|0,j|0,28)|0;J=C;D=ph(f|0,j|0,36)|0;J=J|C;I=oh(f|0,j|0,34)|0;K=C;B=ph(f|0,j|0,30)|0;K=J^(K|C);J=oh(f|0,j|0,39)|0;G=C;H=ph(f|0,j|0,25)|0;G=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(E|D)^(I|B)^(J|H)|0,K^(G|C)|0)|0;K=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(G|0,K|0,b|0,A|0)|0;b=C;K=oh(r|0,s|0,14)|0;G=C;H=ph(r|0,s|0,50)|0;G=G|C;J=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=G^(B|C);G=oh(r|0,s|0,41)|0;D=C;E=ph(r|0,s|0,23)|0;D=B^(D|C);B=g+176|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,-1119749164,1555081692)|0;D=lh(F|0,C|0,(K|H)^(J|I)^(G|E)|0,D|0)|0;B=lh(D|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;D=oh(A|0,b|0,28)|0;E=C;G=ph(A|0,b|0,36)|0;E=E|C;I=oh(A|0,b|0,34)|0;J=C;H=ph(A|0,b|0,30)|0;J=E^(J|C);E=oh(A|0,b|0,39)|0;K=C;F=ph(A|0,b|0,25)|0;K=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(D|G)^(I|H)^(E|F)|0,J^(K|C)|0)|0;J=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(K|0,J|0,B|0,M|0)|0;B=C;J=oh(o|0,p|0,14)|0;K=C;F=ph(o|0,p|0,50)|0;K=K|C;E=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=K^(H|C);K=oh(o|0,p|0,41)|0;G=C;D=ph(o|0,p|0,23)|0;G=H^(G|C);H=g+184|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-2096016459,1996064986)|0;G=lh(y|0,C|0,(J|F)^(E|I)^(K|D)|0,G|0)|0;H=lh(G|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;G=oh(M|0,B|0,28)|0;D=C;K=ph(M|0,B|0,36)|0;D=D|C;I=oh(M|0,B|0,34)|0;E=C;F=ph(M|0,B|0,30)|0;E=D^(E|C);D=oh(M|0,B|0,39)|0;J=C;y=ph(M|0,B|0,25)|0;J=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(G|K)^(I|F)^(D|y)|0,E^(J|C)|0)|0;E=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(J|0,E|0,H|0,L|0)|0;H=C;E=oh(m|0,l|0,14)|0;J=C;y=ph(m|0,l|0,50)|0;J=J|C;D=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=J^(F|C);J=oh(m|0,l|0,41)|0;K=C;G=ph(m|0,l|0,23)|0;K=F^(K|C);F=g+192|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,-295247957,-1740746414)|0;K=lh(v|0,C|0,(E|y)^(D|I)^(J|G)|0,K|0)|0;F=lh(K|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;K=oh(L|0,H|0,28)|0;G=C;J=ph(L|0,H|0,36)|0;G=G|C;I=oh(L|0,H|0,34)|0;D=C;y=ph(L|0,H|0,30)|0;D=G^(D|C);G=oh(L|0,H|0,39)|0;E=C;v=ph(L|0,H|0,25)|0;E=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(K|J)^(I|y)^(G|v)|0,D^(E|C)|0)|0;D=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(E|0,D|0,F|0,x|0)|0;F=C;D=oh(j|0,f|0,14)|0;E=C;v=ph(j|0,f|0,50)|0;E=E|C;G=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=E^(y|C);E=oh(j|0,f|0,41)|0;J=C;K=ph(j|0,f|0,23)|0;J=y^(J|C);y=g+200|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,766784016,-1473132947)|0;J=lh(s|0,C|0,(D|v)^(G|I)^(E|K)|0,J|0)|0;y=lh(J|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;J=oh(x|0,F|0,28)|0;K=C;E=ph(x|0,F|0,36)|0;K=K|C;I=oh(x|0,F|0,34)|0;G=C;v=ph(x|0,F|0,30)|0;G=K^(G|C);K=oh(x|0,F|0,39)|0;D=C;s=ph(x|0,F|0,25)|0;D=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(J|E)^(I|v)^(K|s)|0,G^(D|C)|0)|0;G=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(D|0,G|0,y|0,u|0)|0;y=C;G=oh(b|0,A|0,14)|0;D=C;s=ph(b|0,A|0,50)|0;D=D|C;K=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=D^(v|C);D=oh(b|0,A|0,41)|0;E=C;J=ph(b|0,A|0,23)|0;E=v^(E|C);v=g+208|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,-1728372417,-1341970488)|0;E=lh(p|0,C|0,(G|s)^(K|I)^(D|J)|0,E|0)|0;v=lh(E|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;E=oh(u|0,y|0,28)|0;J=C;D=ph(u|0,y|0,36)|0;J=J|C;I=oh(u|0,y|0,34)|0;K=C;s=ph(u|0,y|0,30)|0;K=J^(K|C);J=oh(u|0,y|0,39)|0;G=C;p=ph(u|0,y|0,25)|0;G=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(E|D)^(I|s)^(J|p)|0,K^(G|C)|0)|0;K=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(G|0,K|0,v|0,r|0)|0;v=C;K=oh(B|0,M|0,14)|0;G=C;p=ph(B|0,M|0,50)|0;G=G|C;J=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=G^(s|C);G=oh(B|0,M|0,41)|0;D=C;E=ph(B|0,M|0,23)|0;D=s^(D|C);s=g+216|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,-1091629340,-1084653625)|0;D=lh(l|0,C|0,(K|p)^(J|I)^(G|E)|0,D|0)|0;s=lh(D|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;D=oh(r|0,v|0,28)|0;E=C;G=ph(r|0,v|0,36)|0;E=E|C;I=oh(r|0,v|0,34)|0;J=C;p=ph(r|0,v|0,30)|0;J=E^(J|C);E=oh(r|0,v|0,39)|0;K=C;l=ph(r|0,v|0,25)|0;K=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(D|G)^(I|p)^(E|l)|0,J^(K|C)|0)|0;J=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(K|0,J|0,s|0,o|0)|0;s=C;J=oh(H|0,L|0,14)|0;K=C;l=ph(H|0,L|0,50)|0;K=K|C;E=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=K^(p|C);K=oh(H|0,L|0,41)|0;G=C;D=ph(H|0,L|0,23)|0;G=p^(G|C);p=g+224|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,1034457026,-958395405)|0;G=lh(f|0,C|0,(J|l)^(E|I)^(K|D)|0,G|0)|0;p=lh(G|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;G=oh(o|0,s|0,28)|0;D=C;K=ph(o|0,s|0,36)|0;D=D|C;I=oh(o|0,s|0,34)|0;E=C;l=ph(o|0,s|0,30)|0;E=D^(E|C);D=oh(o|0,s|0,39)|0;J=C;f=ph(o|0,s|0,25)|0;J=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(G|K)^(I|l)^(D|f)|0,E^(J|C)|0)|0;E=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(J|0,E|0,p|0,m|0)|0;p=C;E=oh(F|0,x|0,14)|0;J=C;f=ph(F|0,x|0,50)|0;J=J|C;D=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=J^(l|C);J=oh(F|0,x|0,41)|0;K=C;G=ph(F|0,x|0,23)|0;K=l^(K|C);l=g+232|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,-1828018395,-710438585)|0;K=lh(A|0,C|0,(E|f)^(D|I)^(J|G)|0,K|0)|0;l=lh(K|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;K=oh(m|0,p|0,28)|0;G=C;J=ph(m|0,p|0,36)|0;G=G|C;I=oh(m|0,p|0,34)|0;D=C;f=ph(m|0,p|0,30)|0;D=G^(D|C);G=oh(m|0,p|0,39)|0;E=C;A=ph(m|0,p|0,25)|0;E=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(K|J)^(I|f)^(G|A)|0,D^(E|C)|0)|0;D=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(E|0,D|0,l|0,j|0)|0;l=C;D=oh(y|0,u|0,14)|0;E=C;A=ph(y|0,u|0,50)|0;E=E|C;G=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=E^(f|C);E=oh(y|0,u|0,41)|0;J=C;K=ph(y|0,u|0,23)|0;J=f^(J|C);f=g+240|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,-536640913,113926993)|0;J=lh(M|0,C|0,(D|A)^(G|I)^(E|K)|0,J|0)|0;f=lh(J|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;J=oh(j|0,l|0,28)|0;K=C;E=ph(j|0,l|0,36)|0;K=K|C;I=oh(j|0,l|0,34)|0;G=C;A=ph(j|0,l|0,30)|0;G=K^(G|C);K=oh(j|0,l|0,39)|0;D=C;M=ph(j|0,l|0,25)|0;D=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(J|E)^(I|A)^(K|M)|0,G^(D|C)|0)|0;G=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(D|0,G|0,f|0,b|0)|0;f=C;G=oh(v|0,r|0,14)|0;D=C;M=ph(v|0,r|0,50)|0;D=D|C;K=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=D^(A|C);D=oh(v|0,r|0,41)|0;E=C;J=ph(v|0,r|0,23)|0;E=A^(E|C);A=g+248|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,168717936,338241895)|0;E=lh(L|0,C|0,(G|M)^(K|I)^(D|J)|0,E|0)|0;A=lh(E|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;E=oh(b|0,f|0,28)|0;J=C;D=ph(b|0,f|0,36)|0;J=J|C;I=oh(b|0,f|0,34)|0;K=C;M=ph(b|0,f|0,30)|0;K=J^(K|C);J=oh(b|0,f|0,39)|0;G=C;L=ph(b|0,f|0,25)|0;G=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(E|D)^(I|M)^(J|L)|0,K^(G|C)|0)|0;K=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(G|0,K|0,A|0,B|0)|0;A=C;K=oh(s|0,o|0,14)|0;G=C;L=ph(s|0,o|0,50)|0;G=G|C;J=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=G^(M|C);G=oh(s|0,o|0,41)|0;D=C;E=ph(s|0,o|0,23)|0;D=M^(D|C);M=g+256|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,1188179964,666307205)|0;D=lh(x|0,C|0,(K|L)^(J|I)^(G|E)|0,D|0)|0;M=lh(D|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;D=oh(B|0,A|0,28)|0;E=C;G=ph(B|0,A|0,36)|0;E=E|C;I=oh(B|0,A|0,34)|0;J=C;L=ph(B|0,A|0,30)|0;J=E^(J|C);E=oh(B|0,A|0,39)|0;K=C;x=ph(B|0,A|0,25)|0;K=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(D|G)^(I|L)^(E|x)|0,J^(K|C)|0)|0;J=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(K|0,J|0,M|0,H|0)|0;M=C;J=oh(p|0,m|0,14)|0;K=C;x=ph(p|0,m|0,50)|0;K=K|C;E=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=K^(L|C);K=oh(p|0,m|0,41)|0;G=C;D=ph(p|0,m|0,23)|0;G=L^(G|C);L=g+264|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,1546045734,773529912)|0;G=lh(u|0,C|0,(J|x)^(E|I)^(K|D)|0,G|0)|0;L=lh(G|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;G=oh(H|0,M|0,28)|0;D=C;K=ph(H|0,M|0,36)|0;D=D|C;I=oh(H|0,M|0,34)|0;E=C;x=ph(H|0,M|0,30)|0;E=D^(E|C);D=oh(H|0,M|0,39)|0;J=C;u=ph(H|0,M|0,25)|0;J=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(G|K)^(I|x)^(D|u)|0,E^(J|C)|0)|0;E=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(J|0,E|0,L|0,F|0)|0;L=C;E=oh(l|0,j|0,14)|0;J=C;u=ph(l|0,j|0,50)|0;J=J|C;D=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=J^(x|C);J=oh(l|0,j|0,41)|0;K=C;G=ph(l|0,j|0,23)|0;K=x^(K|C);x=g+272|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,1522805485,1294757372)|0;K=lh(r|0,C|0,(E|u)^(D|I)^(J|G)|0,K|0)|0;x=lh(K|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;K=oh(F|0,L|0,28)|0;G=C;J=ph(F|0,L|0,36)|0;G=G|C;I=oh(F|0,L|0,34)|0;D=C;u=ph(F|0,L|0,30)|0;D=G^(D|C);G=oh(F|0,L|0,39)|0;E=C;r=ph(F|0,L|0,25)|0;E=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(K|J)^(I|u)^(G|r)|0,D^(E|C)|0)|0;D=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(E|0,D|0,x|0,y|0)|0;x=C;D=oh(f|0,b|0,14)|0;E=C;r=ph(f|0,b|0,50)|0;E=E|C;G=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=E^(u|C);E=oh(f|0,b|0,41)|0;J=C;K=ph(f|0,b|0,23)|0;J=u^(J|C);u=g+280|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,-1651133473,1396182291)|0;J=lh(o|0,C|0,(D|r)^(G|I)^(E|K)|0,J|0)|0;u=lh(J|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;J=oh(y|0,x|0,28)|0;K=C;E=ph(y|0,x|0,36)|0;K=K|C;I=oh(y|0,x|0,34)|0;G=C;r=ph(y|0,x|0,30)|0;G=K^(G|C);K=oh(y|0,x|0,39)|0;D=C;o=ph(y|0,x|0,25)|0;D=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(J|E)^(I|r)^(K|o)|0,G^(D|C)|0)|0;G=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(D|0,G|0,u|0,v|0)|0;u=C;G=oh(A|0,B|0,14)|0;D=C;o=ph(A|0,B|0,50)|0;D=D|C;K=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=D^(r|C);D=oh(A|0,B|0,41)|0;E=C;J=ph(A|0,B|0,23)|0;E=r^(E|C);r=g+288|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,-1951439906,1695183700)|0;E=lh(m|0,C|0,(G|o)^(K|I)^(D|J)|0,E|0)|0;r=lh(E|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;E=oh(v|0,u|0,28)|0;J=C;D=ph(v|0,u|0,36)|0;J=J|C;I=oh(v|0,u|0,34)|0;K=C;o=ph(v|0,u|0,30)|0;K=J^(K|C);J=oh(v|0,u|0,39)|0;G=C;m=ph(v|0,u|0,25)|0;G=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(E|D)^(I|o)^(J|m)|0,K^(G|C)|0)|0;K=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(G|0,K|0,r|0,s|0)|0;r=C;K=oh(M|0,H|0,14)|0;G=C;m=ph(M|0,H|0,50)|0;G=G|C;J=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=G^(o|C);G=oh(M|0,H|0,41)|0;D=C;E=ph(M|0,H|0,23)|0;D=o^(D|C);o=g+296|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,1014477480,1986661051)|0;D=lh(j|0,C|0,(K|m)^(J|I)^(G|E)|0,D|0)|0;o=lh(D|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;D=oh(s|0,r|0,28)|0;E=C;G=ph(s|0,r|0,36)|0;E=E|C;I=oh(s|0,r|0,34)|0;J=C;m=ph(s|0,r|0,30)|0;J=E^(J|C);E=oh(s|0,r|0,39)|0;K=C;j=ph(s|0,r|0,25)|0;K=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(D|G)^(I|m)^(E|j)|0,J^(K|C)|0)|0;J=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(K|0,J|0,o|0,p|0)|0;o=C;J=oh(L|0,F|0,14)|0;K=C;j=ph(L|0,F|0,50)|0;K=K|C;E=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=K^(m|C);K=oh(L|0,F|0,41)|0;G=C;D=ph(L|0,F|0,23)|0;G=m^(G|C);m=g+304|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,1206759142,-2117940946)|0;G=lh(b|0,C|0,(J|j)^(E|I)^(K|D)|0,G|0)|0;m=lh(G|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;G=oh(p|0,o|0,28)|0;D=C;K=ph(p|0,o|0,36)|0;D=D|C;I=oh(p|0,o|0,34)|0;E=C;j=ph(p|0,o|0,30)|0;E=D^(E|C);D=oh(p|0,o|0,39)|0;J=C;b=ph(p|0,o|0,25)|0;J=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(G|K)^(I|j)^(D|b)|0,E^(J|C)|0)|0;E=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(J|0,E|0,m|0,l|0)|0;m=C;E=oh(x|0,y|0,14)|0;J=C;b=ph(x|0,y|0,50)|0;J=J|C;D=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=J^(j|C);J=oh(x|0,y|0,41)|0;K=C;G=ph(x|0,y|0,23)|0;K=j^(K|C);j=g+312|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,344077627,-1838011259)|0;K=lh(B|0,C|0,(E|b)^(D|I)^(J|G)|0,K|0)|0;j=lh(K|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;K=oh(l|0,m|0,28)|0;G=C;J=ph(l|0,m|0,36)|0;G=G|C;I=oh(l|0,m|0,34)|0;D=C;b=ph(l|0,m|0,30)|0;D=G^(D|C);G=oh(l|0,m|0,39)|0;E=C;B=ph(l|0,m|0,25)|0;E=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(K|J)^(I|b)^(G|B)|0,D^(E|C)|0)|0;D=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(E|0,D|0,j|0,f|0)|0;j=C;D=oh(u|0,v|0,14)|0;E=C;B=ph(u|0,v|0,50)|0;E=E|C;G=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=E^(b|C);E=oh(u|0,v|0,41)|0;J=C;K=ph(u|0,v|0,23)|0;J=b^(J|C);b=g+320|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,1290863460,-1564481375)|0;J=lh(H|0,C|0,(D|B)^(G|I)^(E|K)|0,J|0)|0;b=lh(J|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;J=oh(f|0,j|0,28)|0;K=C;E=ph(f|0,j|0,36)|0;K=K|C;I=oh(f|0,j|0,34)|0;G=C;B=ph(f|0,j|0,30)|0;G=K^(G|C);K=oh(f|0,j|0,39)|0;D=C;H=ph(f|0,j|0,25)|0;D=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(J|E)^(I|B)^(K|H)|0,G^(D|C)|0)|0;G=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(D|0,G|0,b|0,A|0)|0;b=C;G=oh(r|0,s|0,14)|0;D=C;H=ph(r|0,s|0,50)|0;D=D|C;K=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=D^(B|C);D=oh(r|0,s|0,41)|0;E=C;J=ph(r|0,s|0,23)|0;E=B^(E|C);B=g+328|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,-1136513023,-1474664885)|0;E=lh(F|0,C|0,(G|H)^(K|I)^(D|J)|0,E|0)|0;B=lh(E|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;E=oh(A|0,b|0,28)|0;J=C;D=ph(A|0,b|0,36)|0;J=J|C;I=oh(A|0,b|0,34)|0;K=C;H=ph(A|0,b|0,30)|0;K=J^(K|C);J=oh(A|0,b|0,39)|0;G=C;F=ph(A|0,b|0,25)|0;G=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(E|D)^(I|H)^(J|F)|0,K^(G|C)|0)|0;K=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(G|0,K|0,B|0,M|0)|0;B=C;K=oh(o|0,p|0,14)|0;G=C;F=ph(o|0,p|0,50)|0;G=G|C;J=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=G^(H|C);G=oh(o|0,p|0,41)|0;D=C;E=ph(o|0,p|0,23)|0;D=H^(D|C);H=g+336|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-789014639,-1035236496)|0;D=lh(y|0,C|0,(K|F)^(J|I)^(G|E)|0,D|0)|0;H=lh(D|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;D=oh(M|0,B|0,28)|0;E=C;G=ph(M|0,B|0,36)|0;E=E|C;I=oh(M|0,B|0,34)|0;J=C;F=ph(M|0,B|0,30)|0;J=E^(J|C);E=oh(M|0,B|0,39)|0;K=C;y=ph(M|0,B|0,25)|0;K=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(D|G)^(I|F)^(E|y)|0,J^(K|C)|0)|0;J=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(K|0,J|0,H|0,L|0)|0;H=C;J=oh(m|0,l|0,14)|0;K=C;y=ph(m|0,l|0,50)|0;K=K|C;E=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=K^(F|C);K=oh(m|0,l|0,41)|0;G=C;D=ph(m|0,l|0,23)|0;G=F^(G|C);F=g+344|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,106217008,-949202525)|0;G=lh(v|0,C|0,(J|y)^(E|I)^(K|D)|0,G|0)|0;F=lh(G|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;G=oh(L|0,H|0,28)|0;D=C;K=ph(L|0,H|0,36)|0;D=D|C;I=oh(L|0,H|0,34)|0;E=C;y=ph(L|0,H|0,30)|0;E=D^(E|C);D=oh(L|0,H|0,39)|0;J=C;v=ph(L|0,H|0,25)|0;J=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(G|K)^(I|y)^(D|v)|0,E^(J|C)|0)|0;E=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(J|0,E|0,F|0,x|0)|0;F=C;E=oh(j|0,f|0,14)|0;J=C;v=ph(j|0,f|0,50)|0;J=J|C;D=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=J^(y|C);J=oh(j|0,f|0,41)|0;K=C;G=ph(j|0,f|0,23)|0;K=y^(K|C);y=g+352|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,-688958952,-778901479)|0;K=lh(s|0,C|0,(E|v)^(D|I)^(J|G)|0,K|0)|0;y=lh(K|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;K=oh(x|0,F|0,28)|0;G=C;J=ph(x|0,F|0,36)|0;G=G|C;I=oh(x|0,F|0,34)|0;D=C;v=ph(x|0,F|0,30)|0;D=G^(D|C);G=oh(x|0,F|0,39)|0;E=C;s=ph(x|0,F|0,25)|0;E=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(K|J)^(I|v)^(G|s)|0,D^(E|C)|0)|0;D=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(E|0,D|0,y|0,u|0)|0;y=C;D=oh(b|0,A|0,14)|0;E=C;s=ph(b|0,A|0,50)|0;E=E|C;G=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=E^(v|C);E=oh(b|0,A|0,41)|0;J=C;K=ph(b|0,A|0,23)|0;J=v^(J|C);v=g+360|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,1432725776,-694614492)|0;J=lh(p|0,C|0,(D|s)^(G|I)^(E|K)|0,J|0)|0;v=lh(J|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;J=oh(u|0,y|0,28)|0;K=C;E=ph(u|0,y|0,36)|0;K=K|C;I=oh(u|0,y|0,34)|0;G=C;s=ph(u|0,y|0,30)|0;G=K^(G|C);K=oh(u|0,y|0,39)|0;D=C;p=ph(u|0,y|0,25)|0;D=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(J|E)^(I|s)^(K|p)|0,G^(D|C)|0)|0;G=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(D|0,G|0,v|0,r|0)|0;v=C;G=oh(B|0,M|0,14)|0;D=C;p=ph(B|0,M|0,50)|0;D=D|C;K=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=D^(s|C);D=oh(B|0,M|0,41)|0;E=C;J=ph(B|0,M|0,23)|0;E=s^(E|C);s=g+368|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,1467031594,-200395387)|0;E=lh(l|0,C|0,(G|p)^(K|I)^(D|J)|0,E|0)|0;s=lh(E|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;E=oh(r|0,v|0,28)|0;J=C;D=ph(r|0,v|0,36)|0;J=J|C;I=oh(r|0,v|0,34)|0;K=C;p=ph(r|0,v|0,30)|0;K=J^(K|C);J=oh(r|0,v|0,39)|0;G=C;l=ph(r|0,v|0,25)|0;G=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(E|D)^(I|p)^(J|l)|0,K^(G|C)|0)|0;K=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(G|0,K|0,s|0,o|0)|0;s=C;K=oh(H|0,L|0,14)|0;G=C;l=ph(H|0,L|0,50)|0;G=G|C;J=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=G^(p|C);G=oh(H|0,L|0,41)|0;D=C;E=ph(H|0,L|0,23)|0;D=p^(D|C);p=g+376|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,851169720,275423344)|0;D=lh(f|0,C|0,(K|l)^(J|I)^(G|E)|0,D|0)|0;p=lh(D|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;D=oh(o|0,s|0,28)|0;E=C;G=ph(o|0,s|0,36)|0;E=E|C;I=oh(o|0,s|0,34)|0;J=C;l=ph(o|0,s|0,30)|0;J=E^(J|C);E=oh(o|0,s|0,39)|0;K=C;f=ph(o|0,s|0,25)|0;K=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(D|G)^(I|l)^(E|f)|0,J^(K|C)|0)|0;J=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(K|0,J|0,p|0,m|0)|0;p=C;J=oh(F|0,x|0,14)|0;K=C;f=ph(F|0,x|0,50)|0;K=K|C;E=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=K^(l|C);K=oh(F|0,x|0,41)|0;G=C;D=ph(F|0,x|0,23)|0;G=l^(G|C);l=g+384|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,-1194143544,430227734)|0;G=lh(A|0,C|0,(J|f)^(E|I)^(K|D)|0,G|0)|0;l=lh(G|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;G=oh(m|0,p|0,28)|0;D=C;K=ph(m|0,p|0,36)|0;D=D|C;I=oh(m|0,p|0,34)|0;E=C;f=ph(m|0,p|0,30)|0;E=D^(E|C);D=oh(m|0,p|0,39)|0;J=C;A=ph(m|0,p|0,25)|0;J=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(G|K)^(I|f)^(D|A)|0,E^(J|C)|0)|0;E=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(J|0,E|0,l|0,j|0)|0;l=C;E=oh(y|0,u|0,14)|0;J=C;A=ph(y|0,u|0,50)|0;J=J|C;D=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=J^(f|C);J=oh(y|0,u|0,41)|0;K=C;G=ph(y|0,u|0,23)|0;K=f^(K|C);f=g+392|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,1363258195,506948616)|0;K=lh(M|0,C|0,(E|A)^(D|I)^(J|G)|0,K|0)|0;f=lh(K|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;K=oh(j|0,l|0,28)|0;G=C;J=ph(j|0,l|0,36)|0;G=G|C;I=oh(j|0,l|0,34)|0;D=C;A=ph(j|0,l|0,30)|0;D=G^(D|C);G=oh(j|0,l|0,39)|0;E=C;M=ph(j|0,l|0,25)|0;E=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(K|J)^(I|A)^(G|M)|0,D^(E|C)|0)|0;D=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(E|0,D|0,f|0,b|0)|0;f=C;D=oh(v|0,r|0,14)|0;E=C;M=ph(v|0,r|0,50)|0;E=E|C;G=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=E^(A|C);E=oh(v|0,r|0,41)|0;J=C;K=ph(v|0,r|0,23)|0;J=A^(J|C);A=g+400|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,-544281703,659060556)|0;J=lh(L|0,C|0,(D|M)^(G|I)^(E|K)|0,J|0)|0;A=lh(J|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;J=oh(b|0,f|0,28)|0;K=C;E=ph(b|0,f|0,36)|0;K=K|C;I=oh(b|0,f|0,34)|0;G=C;M=ph(b|0,f|0,30)|0;G=K^(G|C);K=oh(b|0,f|0,39)|0;D=C;L=ph(b|0,f|0,25)|0;D=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(J|E)^(I|M)^(K|L)|0,G^(D|C)|0)|0;G=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(D|0,G|0,A|0,B|0)|0;A=C;G=oh(s|0,o|0,14)|0;D=C;L=ph(s|0,o|0,50)|0;D=D|C;K=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=D^(M|C);D=oh(s|0,o|0,41)|0;E=C;J=ph(s|0,o|0,23)|0;E=M^(E|C);M=g+408|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,-509917016,883997877)|0;E=lh(x|0,C|0,(G|L)^(K|I)^(D|J)|0,E|0)|0;M=lh(E|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;E=oh(B|0,A|0,28)|0;J=C;D=ph(B|0,A|0,36)|0;J=J|C;I=oh(B|0,A|0,34)|0;K=C;L=ph(B|0,A|0,30)|0;K=J^(K|C);J=oh(B|0,A|0,39)|0;G=C;x=ph(B|0,A|0,25)|0;G=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(E|D)^(I|L)^(J|x)|0,K^(G|C)|0)|0;K=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(G|0,K|0,M|0,H|0)|0;M=C;K=oh(p|0,m|0,14)|0;G=C;x=ph(p|0,m|0,50)|0;G=G|C;J=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=G^(L|C);G=oh(p|0,m|0,41)|0;D=C;E=ph(p|0,m|0,23)|0;D=L^(D|C);L=g+416|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,-976659869,958139571)|0;D=lh(u|0,C|0,(K|x)^(J|I)^(G|E)|0,D|0)|0;L=lh(D|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;D=oh(H|0,M|0,28)|0;E=C;G=ph(H|0,M|0,36)|0;E=E|C;I=oh(H|0,M|0,34)|0;J=C;x=ph(H|0,M|0,30)|0;J=E^(J|C);E=oh(H|0,M|0,39)|0;K=C;u=ph(H|0,M|0,25)|0;K=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(D|G)^(I|x)^(E|u)|0,J^(K|C)|0)|0;J=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(K|0,J|0,L|0,F|0)|0;L=C;J=oh(l|0,j|0,14)|0;K=C;u=ph(l|0,j|0,50)|0;K=K|C;E=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=K^(x|C);K=oh(l|0,j|0,41)|0;G=C;D=ph(l|0,j|0,23)|0;G=x^(G|C);x=g+424|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,-482243893,1322822218)|0;G=lh(r|0,C|0,(J|u)^(E|I)^(K|D)|0,G|0)|0;x=lh(G|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;G=oh(F|0,L|0,28)|0;D=C;K=ph(F|0,L|0,36)|0;D=D|C;I=oh(F|0,L|0,34)|0;E=C;u=ph(F|0,L|0,30)|0;E=D^(E|C);D=oh(F|0,L|0,39)|0;J=C;r=ph(F|0,L|0,25)|0;J=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(G|K)^(I|u)^(D|r)|0,E^(J|C)|0)|0;E=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(J|0,E|0,x|0,y|0)|0;x=C;E=oh(f|0,b|0,14)|0;J=C;r=ph(f|0,b|0,50)|0;J=J|C;D=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=J^(u|C);J=oh(f|0,b|0,41)|0;K=C;G=ph(f|0,b|0,23)|0;K=u^(K|C);u=g+432|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,2003034995,1537002063)|0;K=lh(o|0,C|0,(E|r)^(D|I)^(J|G)|0,K|0)|0;u=lh(K|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;K=oh(y|0,x|0,28)|0;G=C;J=ph(y|0,x|0,36)|0;G=G|C;I=oh(y|0,x|0,34)|0;D=C;r=ph(y|0,x|0,30)|0;D=G^(D|C);G=oh(y|0,x|0,39)|0;E=C;o=ph(y|0,x|0,25)|0;E=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(K|J)^(I|r)^(G|o)|0,D^(E|C)|0)|0;D=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(E|0,D|0,u|0,v|0)|0;u=C;D=oh(A|0,B|0,14)|0;E=C;o=ph(A|0,B|0,50)|0;E=E|C;G=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=E^(r|C);E=oh(A|0,B|0,41)|0;J=C;K=ph(A|0,B|0,23)|0;J=r^(J|C);r=g+440|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,-692930397,1747873779)|0;J=lh(m|0,C|0,(D|o)^(G|I)^(E|K)|0,J|0)|0;r=lh(J|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;J=oh(v|0,u|0,28)|0;K=C;E=ph(v|0,u|0,36)|0;K=K|C;I=oh(v|0,u|0,34)|0;G=C;o=ph(v|0,u|0,30)|0;G=K^(G|C);K=oh(v|0,u|0,39)|0;D=C;m=ph(v|0,u|0,25)|0;D=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(J|E)^(I|o)^(K|m)|0,G^(D|C)|0)|0;G=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(D|0,G|0,r|0,s|0)|0;r=C;G=oh(M|0,H|0,14)|0;D=C;m=ph(M|0,H|0,50)|0;D=D|C;K=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=D^(o|C);D=oh(M|0,H|0,41)|0;E=C;J=ph(M|0,H|0,23)|0;E=o^(E|C);o=g+448|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,1575990012,1955562222)|0;E=lh(j|0,C|0,(G|m)^(K|I)^(D|J)|0,E|0)|0;o=lh(E|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;E=oh(s|0,r|0,28)|0;J=C;D=ph(s|0,r|0,36)|0;J=J|C;I=oh(s|0,r|0,34)|0;K=C;m=ph(s|0,r|0,30)|0;K=J^(K|C);J=oh(s|0,r|0,39)|0;G=C;j=ph(s|0,r|0,25)|0;G=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(E|D)^(I|m)^(J|j)|0,K^(G|C)|0)|0;K=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(G|0,K|0,o|0,p|0)|0;o=C;K=oh(L|0,F|0,14)|0;G=C;j=ph(L|0,F|0,50)|0;G=G|C;J=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=G^(m|C);G=oh(L|0,F|0,41)|0;D=C;E=ph(L|0,F|0,23)|0;D=m^(D|C);m=g+456|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,1125592928,2024104815)|0;D=lh(b|0,C|0,(K|j)^(J|I)^(G|E)|0,D|0)|0;m=lh(D|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;D=oh(p|0,o|0,28)|0;E=C;G=ph(p|0,o|0,36)|0;E=E|C;I=oh(p|0,o|0,34)|0;J=C;j=ph(p|0,o|0,30)|0;J=E^(J|C);E=oh(p|0,o|0,39)|0;K=C;b=ph(p|0,o|0,25)|0;K=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(D|G)^(I|j)^(E|b)|0,J^(K|C)|0)|0;J=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(K|0,J|0,m|0,l|0)|0;m=C;J=oh(x|0,y|0,14)|0;K=C;b=ph(x|0,y|0,50)|0;K=K|C;E=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=K^(j|C);K=oh(x|0,y|0,41)|0;G=C;D=ph(x|0,y|0,23)|0;G=j^(G|C);j=g+464|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,-1578062990,-2067236844)|0;G=lh(B|0,C|0,(J|b)^(E|I)^(K|D)|0,G|0)|0;j=lh(G|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;G=oh(l|0,m|0,28)|0;D=C;K=ph(l|0,m|0,36)|0;D=D|C;I=oh(l|0,m|0,34)|0;E=C;b=ph(l|0,m|0,30)|0;E=D^(E|C);D=oh(l|0,m|0,39)|0;J=C;B=ph(l|0,m|0,25)|0;J=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(G|K)^(I|b)^(D|B)|0,E^(J|C)|0)|0;E=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(J|0,E|0,j|0,f|0)|0;j=C;E=oh(u|0,v|0,14)|0;J=C;B=ph(u|0,v|0,50)|0;J=J|C;D=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=J^(b|C);J=oh(u|0,v|0,41)|0;K=C;G=ph(u|0,v|0,23)|0;K=b^(K|C);b=g+472|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,442776044,-1933114872)|0;K=lh(H|0,C|0,(E|B)^(D|I)^(J|G)|0,K|0)|0;b=lh(K|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;K=oh(f|0,j|0,28)|0;G=C;J=ph(f|0,j|0,36)|0;G=G|C;I=oh(f|0,j|0,34)|0;D=C;B=ph(f|0,j|0,30)|0;D=G^(D|C);G=oh(f|0,j|0,39)|0;E=C;H=ph(f|0,j|0,25)|0;E=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(K|J)^(I|B)^(G|H)|0,D^(E|C)|0)|0;D=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(E|0,D|0,b|0,A|0)|0;b=C;D=oh(r|0,s|0,14)|0;E=C;H=ph(r|0,s|0,50)|0;E=E|C;G=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=E^(B|C);E=oh(r|0,s|0,41)|0;J=C;K=ph(r|0,s|0,23)|0;J=B^(J|C);B=g+480|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,593698344,-1866530822)|0;J=lh(F|0,C|0,(D|H)^(G|I)^(E|K)|0,J|0)|0;B=lh(J|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;J=oh(A|0,b|0,28)|0;K=C;E=ph(A|0,b|0,36)|0;K=K|C;I=oh(A|0,b|0,34)|0;G=C;H=ph(A|0,b|0,30)|0;G=K^(G|C);K=oh(A|0,b|0,39)|0;D=C;F=ph(A|0,b|0,25)|0;D=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(J|E)^(I|H)^(K|F)|0,G^(D|C)|0)|0;G=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(D|0,G|0,B|0,M|0)|0;B=C;G=oh(o|0,p|0,14)|0;D=C;F=ph(o|0,p|0,50)|0;D=D|C;K=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=D^(H|C);D=oh(o|0,p|0,41)|0;E=C;J=ph(o|0,p|0,23)|0;E=H^(E|C);H=g+488|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-561857047,-1538233109)|0;E=lh(y|0,C|0,(G|F)^(K|I)^(D|J)|0,E|0)|0;H=lh(E|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;E=oh(M|0,B|0,28)|0;J=C;D=ph(M|0,B|0,36)|0;J=J|C;I=oh(M|0,B|0,34)|0;K=C;F=ph(M|0,B|0,30)|0;K=J^(K|C);J=oh(M|0,B|0,39)|0;G=C;y=ph(M|0,B|0,25)|0;G=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(E|D)^(I|F)^(J|y)|0,K^(G|C)|0)|0;K=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(G|0,K|0,H|0,L|0)|0;H=C;K=oh(m|0,l|0,14)|0;G=C;y=ph(m|0,l|0,50)|0;G=G|C;J=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=G^(F|C);G=oh(m|0,l|0,41)|0;D=C;E=ph(m|0,l|0,23)|0;D=F^(D|C);F=g+496|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,-1295615723,-1090935817)|0;D=lh(v|0,C|0,(K|y)^(J|I)^(G|E)|0,D|0)|0;F=lh(D|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;D=oh(L|0,H|0,28)|0;E=C;G=ph(L|0,H|0,36)|0;E=E|C;I=oh(L|0,H|0,34)|0;J=C;y=ph(L|0,H|0,30)|0;J=E^(J|C);E=oh(L|0,H|0,39)|0;K=C;v=ph(L|0,H|0,25)|0;K=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(D|G)^(I|y)^(E|v)|0,J^(K|C)|0)|0;J=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(K|0,J|0,F|0,x|0)|0;F=C;J=oh(j|0,f|0,14)|0;K=C;v=ph(j|0,f|0,50)|0;K=K|C;E=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=K^(y|C);K=oh(j|0,f|0,41)|0;G=C;D=ph(j|0,f|0,23)|0;G=y^(G|C);y=g+504|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,-479046869,-965641998)|0;G=lh(s|0,C|0,(J|v)^(E|I)^(K|D)|0,G|0)|0;y=lh(G|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;G=oh(x|0,F|0,28)|0;D=C;K=ph(x|0,F|0,36)|0;D=D|C;I=oh(x|0,F|0,34)|0;E=C;v=ph(x|0,F|0,30)|0;E=D^(E|C);D=oh(x|0,F|0,39)|0;J=C;s=ph(x|0,F|0,25)|0;J=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(G|K)^(I|v)^(D|s)|0,E^(J|C)|0)|0;E=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(J|0,E|0,y|0,u|0)|0;y=C;E=oh(b|0,A|0,14)|0;J=C;s=ph(b|0,A|0,50)|0;J=J|C;D=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=J^(v|C);J=oh(b|0,A|0,41)|0;K=C;G=ph(b|0,A|0,23)|0;K=v^(K|C);v=g+512|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,-366583396,-903397682)|0;K=lh(p|0,C|0,(E|s)^(D|I)^(J|G)|0,K|0)|0;v=lh(K|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;K=oh(u|0,y|0,28)|0;G=C;J=ph(u|0,y|0,36)|0;G=G|C;I=oh(u|0,y|0,34)|0;D=C;s=ph(u|0,y|0,30)|0;D=G^(D|C);G=oh(u|0,y|0,39)|0;E=C;p=ph(u|0,y|0,25)|0;E=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(K|J)^(I|s)^(G|p)|0,D^(E|C)|0)|0;D=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(E|0,D|0,v|0,r|0)|0;v=C;D=oh(B|0,M|0,14)|0;E=C;p=ph(B|0,M|0,50)|0;E=E|C;G=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=E^(s|C);E=oh(B|0,M|0,41)|0;J=C;K=ph(B|0,M|0,23)|0;J=s^(J|C);s=g+520|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,566280711,-779700025)|0;J=lh(l|0,C|0,(D|p)^(G|I)^(E|K)|0,J|0)|0;s=lh(J|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;J=oh(r|0,v|0,28)|0;K=C;E=ph(r|0,v|0,36)|0;K=K|C;I=oh(r|0,v|0,34)|0;G=C;p=ph(r|0,v|0,30)|0;G=K^(G|C);K=oh(r|0,v|0,39)|0;D=C;l=ph(r|0,v|0,25)|0;D=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(J|E)^(I|p)^(K|l)|0,G^(D|C)|0)|0;G=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(D|0,G|0,s|0,o|0)|0;s=C;G=oh(H|0,L|0,14)|0;D=C;l=ph(H|0,L|0,50)|0;D=D|C;K=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=D^(p|C);D=oh(H|0,L|0,41)|0;E=C;J=ph(H|0,L|0,23)|0;E=p^(E|C);p=g+528|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,-840897762,-354779690)|0;E=lh(f|0,C|0,(G|l)^(K|I)^(D|J)|0,E|0)|0;p=lh(E|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;E=oh(o|0,s|0,28)|0;J=C;D=ph(o|0,s|0,36)|0;J=J|C;I=oh(o|0,s|0,34)|0;K=C;l=ph(o|0,s|0,30)|0;K=J^(K|C);J=oh(o|0,s|0,39)|0;G=C;f=ph(o|0,s|0,25)|0;G=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(E|D)^(I|l)^(J|f)|0,K^(G|C)|0)|0;K=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(G|0,K|0,p|0,m|0)|0;p=C;K=oh(F|0,x|0,14)|0;G=C;f=ph(F|0,x|0,50)|0;G=G|C;J=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=G^(l|C);G=oh(F|0,x|0,41)|0;D=C;E=ph(F|0,x|0,23)|0;D=l^(D|C);l=g+536|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,-294727304,-176337025)|0;D=lh(A|0,C|0,(K|f)^(J|I)^(G|E)|0,D|0)|0;l=lh(D|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;D=oh(m|0,p|0,28)|0;E=C;G=ph(m|0,p|0,36)|0;E=E|C;I=oh(m|0,p|0,34)|0;J=C;f=ph(m|0,p|0,30)|0;J=E^(J|C);E=oh(m|0,p|0,39)|0;K=C;A=ph(m|0,p|0,25)|0;K=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(D|G)^(I|f)^(E|A)|0,J^(K|C)|0)|0;J=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(K|0,J|0,l|0,j|0)|0;l=C;J=oh(y|0,u|0,14)|0;K=C;A=ph(y|0,u|0,50)|0;K=K|C;E=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=K^(f|C);K=oh(y|0,u|0,41)|0;G=C;D=ph(y|0,u|0,23)|0;G=f^(G|C);f=g+544|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,1914138554,116418474)|0;G=lh(M|0,C|0,(J|A)^(E|I)^(K|D)|0,G|0)|0;f=lh(G|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;G=oh(j|0,l|0,28)|0;D=C;K=ph(j|0,l|0,36)|0;D=D|C;I=oh(j|0,l|0,34)|0;E=C;A=ph(j|0,l|0,30)|0;E=D^(E|C);D=oh(j|0,l|0,39)|0;J=C;M=ph(j|0,l|0,25)|0;J=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(G|K)^(I|A)^(D|M)|0,E^(J|C)|0)|0;E=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(J|0,E|0,f|0,b|0)|0;f=C;E=oh(v|0,r|0,14)|0;J=C;M=ph(v|0,r|0,50)|0;J=J|C;D=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=J^(A|C);J=oh(v|0,r|0,41)|0;K=C;G=ph(v|0,r|0,23)|0;K=A^(K|C);A=g+552|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,-1563912026,174292421)|0;K=lh(L|0,C|0,(E|M)^(D|I)^(J|G)|0,K|0)|0;A=lh(K|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;K=oh(b|0,f|0,28)|0;G=C;J=ph(b|0,f|0,36)|0;G=G|C;I=oh(b|0,f|0,34)|0;D=C;M=ph(b|0,f|0,30)|0;D=G^(D|C);G=oh(b|0,f|0,39)|0;E=C;L=ph(b|0,f|0,25)|0;E=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(K|J)^(I|M)^(G|L)|0,D^(E|C)|0)|0;D=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(E|0,D|0,A|0,B|0)|0;A=C;D=oh(s|0,o|0,14)|0;E=C;L=ph(s|0,o|0,50)|0;E=E|C;G=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=E^(M|C);E=oh(s|0,o|0,41)|0;J=C;K=ph(s|0,o|0,23)|0;J=M^(J|C);M=g+560|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,-1090974290,289380356)|0;J=lh(x|0,C|0,(D|L)^(G|I)^(E|K)|0,J|0)|0;M=lh(J|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;J=oh(B|0,A|0,28)|0;K=C;E=ph(B|0,A|0,36)|0;K=K|C;I=oh(B|0,A|0,34)|0;G=C;L=ph(B|0,A|0,30)|0;G=K^(G|C);K=oh(B|0,A|0,39)|0;D=C;x=ph(B|0,A|0,25)|0;D=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(J|E)^(I|L)^(K|x)|0,G^(D|C)|0)|0;G=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(D|0,G|0,M|0,H|0)|0;M=C;G=oh(p|0,m|0,14)|0;D=C;x=ph(p|0,m|0,50)|0;D=D|C;K=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=D^(L|C);D=oh(p|0,m|0,41)|0;E=C;J=ph(p|0,m|0,23)|0;E=L^(E|C);L=g+568|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,320620315,460393269)|0;E=lh(u|0,C|0,(G|x)^(K|I)^(D|J)|0,E|0)|0;L=lh(E|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;E=oh(H|0,M|0,28)|0;J=C;D=ph(H|0,M|0,36)|0;J=J|C;I=oh(H|0,M|0,34)|0;K=C;x=ph(H|0,M|0,30)|0;K=J^(K|C);J=oh(H|0,M|0,39)|0;G=C;u=ph(H|0,M|0,25)|0;G=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(E|D)^(I|x)^(J|u)|0,K^(G|C)|0)|0;K=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(G|0,K|0,L|0,F|0)|0;L=C;K=oh(l|0,j|0,14)|0;G=C;u=ph(l|0,j|0,50)|0;G=G|C;J=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=G^(x|C);G=oh(l|0,j|0,41)|0;D=C;E=ph(l|0,j|0,23)|0;D=x^(D|C);x=g+576|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,587496836,685471733)|0;D=lh(r|0,C|0,(K|u)^(J|I)^(G|E)|0,D|0)|0;x=lh(D|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;D=oh(F|0,L|0,28)|0;E=C;G=ph(F|0,L|0,36)|0;E=E|C;I=oh(F|0,L|0,34)|0;J=C;u=ph(F|0,L|0,30)|0;J=E^(J|C);E=oh(F|0,L|0,39)|0;K=C;r=ph(F|0,L|0,25)|0;K=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(D|G)^(I|u)^(E|r)|0,J^(K|C)|0)|0;J=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(K|0,J|0,x|0,y|0)|0;x=C;J=oh(f|0,b|0,14)|0;K=C;r=ph(f|0,b|0,50)|0;K=K|C;E=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=K^(u|C);K=oh(f|0,b|0,41)|0;G=C;D=ph(f|0,b|0,23)|0;G=u^(G|C);u=g+584|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,1086792851,852142971)|0;G=lh(o|0,C|0,(J|r)^(E|I)^(K|D)|0,G|0)|0;u=lh(G|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;G=oh(y|0,x|0,28)|0;D=C;K=ph(y|0,x|0,36)|0;D=D|C;I=oh(y|0,x|0,34)|0;E=C;r=ph(y|0,x|0,30)|0;E=D^(E|C);D=oh(y|0,x|0,39)|0;J=C;o=ph(y|0,x|0,25)|0;J=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(G|K)^(I|r)^(D|o)|0,E^(J|C)|0)|0;E=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(J|0,E|0,u|0,v|0)|0;u=C;E=oh(A|0,B|0,14)|0;J=C;o=ph(A|0,B|0,50)|0;J=J|C;D=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=J^(r|C);J=oh(A|0,B|0,41)|0;K=C;G=ph(A|0,B|0,23)|0;K=r^(K|C);r=g+592|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,365543100,1017036298)|0;K=lh(m|0,C|0,(E|o)^(D|I)^(J|G)|0,K|0)|0;r=lh(K|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;K=oh(v|0,u|0,28)|0;G=C;J=ph(v|0,u|0,36)|0;G=G|C;I=oh(v|0,u|0,34)|0;D=C;o=ph(v|0,u|0,30)|0;D=G^(D|C);G=oh(v|0,u|0,39)|0;E=C;m=ph(v|0,u|0,25)|0;E=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(K|J)^(I|o)^(G|m)|0,D^(E|C)|0)|0;D=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(E|0,D|0,r|0,s|0)|0;r=C;D=oh(M|0,H|0,14)|0;E=C;m=ph(M|0,H|0,50)|0;E=E|C;G=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=E^(o|C);E=oh(M|0,H|0,41)|0;J=C;K=ph(M|0,H|0,23)|0;J=o^(J|C);o=g+600|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,-1676669620,1126000580)|0;J=lh(j|0,C|0,(D|m)^(G|I)^(E|K)|0,J|0)|0;o=lh(J|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;J=oh(s|0,r|0,28)|0;K=C;E=ph(s|0,r|0,36)|0;K=K|C;I=oh(s|0,r|0,34)|0;G=C;m=ph(s|0,r|0,30)|0;G=K^(G|C);K=oh(s|0,r|0,39)|0;D=C;j=ph(s|0,r|0,25)|0;D=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(J|E)^(I|m)^(K|j)|0,G^(D|C)|0)|0;G=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(D|0,G|0,o|0,p|0)|0;o=C;G=oh(L|0,F|0,14)|0;D=C;j=ph(L|0,F|0,50)|0;D=D|C;K=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=D^(m|C);D=oh(L|0,F|0,41)|0;E=C;J=ph(L|0,F|0,23)|0;E=m^(E|C);m=g+608|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,-885112138,1288033470)|0;E=lh(b|0,C|0,(G|j)^(K|I)^(D|J)|0,E|0)|0;m=lh(E|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;E=oh(p|0,o|0,28)|0;J=C;D=ph(p|0,o|0,36)|0;J=J|C;I=oh(p|0,o|0,34)|0;K=C;j=ph(p|0,o|0,30)|0;K=J^(K|C);J=oh(p|0,o|0,39)|0;G=C;b=ph(p|0,o|0,25)|0;G=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(E|D)^(I|j)^(J|b)|0,K^(G|C)|0)|0;K=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(G|0,K|0,m|0,l|0)|0;m=C;K=oh(x|0,y|0,14)|0;G=C;b=ph(x|0,y|0,50)|0;G=G|C;J=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=G^(j|C);G=oh(x|0,y|0,41)|0;D=C;E=ph(x|0,y|0,23)|0;D=j^(D|C);j=g+616|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,-60457430,1501505948)|0;D=lh(B|0,C|0,(K|b)^(J|I)^(G|E)|0,D|0)|0;j=lh(D|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;D=oh(l|0,m|0,28)|0;E=C;G=ph(l|0,m|0,36)|0;E=E|C;I=oh(l|0,m|0,34)|0;J=C;b=ph(l|0,m|0,30)|0;J=E^(J|C);E=oh(l|0,m|0,39)|0;K=C;B=ph(l|0,m|0,25)|0;K=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(D|G)^(I|b)^(E|B)|0,J^(K|C)|0)|0;J=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(K|0,J|0,j|0,f|0)|0;j=C;J=oh(u|0,v|0,14)|0;K=C;B=ph(u|0,v|0,50)|0;K=K|C;E=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=K^(b|C);K=oh(u|0,v|0,41)|0;G=C;D=ph(u|0,v|0,23)|0;G=b^(G|C);b=g+624|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,987167468,1607167915)|0;G=lh(H|0,C|0,(J|B)^(E|I)^(K|D)|0,G|0)|0;b=lh(G|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;G=oh(f|0,j|0,28)|0;D=C;K=ph(f|0,j|0,36)|0;D=D|C;I=oh(f|0,j|0,34)|0;E=C;B=ph(f|0,j|0,30)|0;E=D^(E|C);D=oh(f|0,j|0,39)|0;J=C;H=ph(f|0,j|0,25)|0;J=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(G|K)^(I|B)^(D|H)|0,E^(J|C)|0)|0;E=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(J|0,E|0,b|0,A|0)|0;b=C;E=oh(r|0,s|0,14)|0;J=C;H=ph(r|0,s|0,50)|0;J=J|C;D=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=J^(B|C);J=oh(r|0,s|0,41)|0;K=C;G=ph(r|0,s|0,23)|0;K=B^(K|C);g=g+632|0;B=c[g>>2]|0;g=c[g+4>>2]|0;F=lh(L|0,F|0,1246189591,1816402316)|0;K=lh(F|0,C|0,(E|H)^(D|I)^(J|G)|0,K|0)|0;g=lh(K|0,C|0,B|0,g|0)|0;g=lh(g|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;B=C;K=oh(A|0,b|0,28)|0;G=C;J=ph(A|0,b|0,36)|0;G=G|C;I=oh(A|0,b|0,34)|0;D=C;H=ph(A|0,b|0,30)|0;D=G^(D|C);G=oh(A|0,b|0,39)|0;E=C;F=ph(A|0,b|0,25)|0;E=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(K|J)^(I|H)^(G|F)|0,D^(E|C)|0)|0;D=C;o=lh(p|0,o|0,g|0,B|0)|0;p=C;B=lh(E|0,D|0,g|0,B|0)|0;g=a;B=lh(c[g>>2]|0,c[g+4>>2]|0,B|0,C|0)|0;g=a;c[g>>2]=B;c[g+4>>2]=C;g=e;g=lh(c[g>>2]|0,c[g+4>>2]|0,A|0,b|0)|0;a=e;c[a>>2]=g;c[a+4>>2]=C;a=k;j=lh(c[a>>2]|0,c[a+4>>2]|0,f|0,j|0)|0;c[k>>2]=j;c[k+4>>2]=C;k=n;m=lh(c[k>>2]|0,c[k+4>>2]|0,l|0,m|0)|0;c[n>>2]=m;c[n+4>>2]=C;n=q;p=lh(c[n>>2]|0,c[n+4>>2]|0,o|0,p|0)|0;c[q>>2]=p;c[q+4>>2]=C;q=t;s=lh(c[q>>2]|0,c[q+4>>2]|0,r|0,s|0)|0;c[t>>2]=s;c[t+4>>2]=C;t=w;v=lh(c[t>>2]|0,c[t+4>>2]|0,u|0,v|0)|0;c[w>>2]=v;c[w+4>>2]=C;w=z;y=lh(c[w>>2]|0,c[w+4>>2]|0,x|0,y|0)|0;c[z>>2]=y;c[z+4>>2]=C;i=h;return}function Fd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;s=i;e=i=i+63&-64;i=i+16|0;r=b+64|0;f=r;g=c[f>>2]|0;f=c[f+4>>2]|0;a[e+7>>0]=g;q=oh(g|0,f|0,8)|0;a[e+6>>0]=q;q=oh(g|0,f|0,16)|0;a[e+5>>0]=q;q=oh(g|0,f|0,24)|0;a[e+4>>0]=q;a[e+3>>0]=f;q=oh(g|0,f|0,40)|0;a[e+2>>0]=q;q=oh(g|0,f|0,48)|0;a[e+1>>0]=q;q=oh(g|0,f|0,56)|0;a[e>>0]=q;q=b+72|0;j=q;h=c[j>>2]|0;j=c[j+4>>2]|0;a[e+15>>0]=h;n=oh(h|0,j|0,8)|0;a[e+14>>0]=n;n=oh(h|0,j|0,16)|0;a[e+13>>0]=n;n=oh(h|0,j|0,24)|0;a[e+12>>0]=n;a[e+11>>0]=j;n=oh(h|0,j|0,40)|0;a[e+10>>0]=n;n=oh(h|0,j|0,48)|0;a[e+9>>0]=n;n=oh(h|0,j|0,56)|0;a[e+8>>0]=n;n=oh(h|0,j|0,3)|0;n=n&127;o=0<0|0==0&n>>>0<112;o=kh((o?112:240)|0,(o?0:0)|0,n|0,0)|0;p=C;m=ph(o|0,p|0,3)|0;t=C;k=oh(o|0,p|0,61)|0;l=C;j=lh(m|0,t|0,h|0,j|0)|0;h=C;u=q;c[u>>2]=j;c[u+4>>2]=h;if(h>>>0<t>>>0|(h|0)==(t|0)&j>>>0<m>>>0){g=lh(g|0,f|0,1,0)|0;f=C;u=r;c[u>>2]=g;c[u+4>>2]=f}g=lh(g|0,f|0,k|0,l|0)|0;f=C;l=r;c[l>>2]=g;c[l+4>>2]=f;l=kh(128,0,n|0,0)|0;m=C;k=b+80+n|0;if(p>>>0<m>>>0|(p|0)==(m|0)&o>>>0<l>>>0)qh(k|0,32899,o|0)|0;else{qh(k|0,32899,l|0)|0;j=b+80|0;Ed(b,j);f=32899+l|0;g=kh(o|0,p|0,l|0,m|0)|0;h=C;if(h>>>0>0|(h|0)==0&g>>>0>127)do{Ed(b,f);f=f+128|0;g=lh(g|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&g>>>0>127);qh(j|0,f|0,g|0)|0;h=q;f=r;j=c[h>>2]|0;h=c[h+4>>2]|0;g=c[f>>2]|0;f=c[f+4>>2]|0}k=oh(j|0,h|0,3)|0;k=k&127;t=lh(j|0,h|0,128,0)|0;u=q;c[u>>2]=t;c[u+4>>2]=C;if(h>>>0>4294967295|(h|0)==-1&j>>>0>4294967167){g=lh(g|0,f|0,1,0)|0;f=C;u=r;c[u>>2]=g;c[u+4>>2]=f}h=r;c[h>>2]=g;c[h+4>>2]=f;g=kh(128,0,k|0,0)|0;h=C;f=b+80+k|0;if(h>>>0>0|(h|0)==0&g>>>0>16){g=f;f=g+16|0;do{a[g>>0]=a[e>>0]|0;g=g+1|0;e=e+1|0}while((g|0)<(f|0))}else{qh(f|0,e|0,g|0)|0;j=b+80|0;Ed(b,j);e=e+g|0;f=kh(16,0,g|0,h|0)|0;g=C;if(g>>>0>0|(g|0)==0&f>>>0>127)do{Ed(b,e);e=e+128|0;f=lh(f|0,g|0,-128,-1)|0;g=C}while(g>>>0>0|(g|0)==0&f>>>0>127);qh(j|0,e|0,f|0)|0}e=0;do{u=d+(e<<3)|0;t=b+(e<<3)|0;r=c[t>>2]|0;t=c[t+4>>2]|0;a[u+7>>0]=r;q=oh(r|0,t|0,8)|0;a[u+6>>0]=q;q=oh(r|0,t|0,16)|0;a[u+5>>0]=q;q=oh(r|0,t|0,24)|0;a[u+4>>0]=q;a[u+3>>0]=t;q=oh(r|0,t|0,40)|0;a[u+2>>0]=q;q=oh(r|0,t|0,48)|0;a[u+1>>0]=q;t=oh(r|0,t|0,56)|0;a[u>>0]=t;e=e+1|0}while((e|0)!=8);nh(b|0,0,208)|0;i=s;return 0}function Gd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+208|0;g=m+64|0;h=m;j=400;k=h+64|0;do{c[h>>2]=c[j>>2];h=h+4|0;j=j+4|0}while((h|0)<(k|0));h=ph(e|0,f|0,3)|0;j=C;k=oh(e|0,f|0,61)|0;l=m+72|0;c[l>>2]=h;c[l+4>>2]=j;l=g;c[l>>2]=k;c[l+4>>2]=C;l=m+80|0;if(f>>>0<0|(f|0)==0&e>>>0<128){qh(l|0,d|0,e|0)|0;Fd(m,b)|0;i=n;return 0}h=l;j=d;k=h+128|0;do{a[h>>0]=a[j>>0]|0;h=h+1|0;j=j+1|0}while((h|0)<(k|0));Ed(m,l);g=d+128|0;d=lh(e|0,f|0,-128,-1)|0;h=C;if(h>>>0>0|(h|0)==0&d>>>0>127)do{Ed(m,g);g=g+128|0;d=lh(d|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&d>>>0>127);qh(l|0,g|0,d|0)|0;Fd(m,b)|0;i=n;return 0}function Hd(){return 256}function Id(){return 16}function Jd(){return 32}function Kd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;k=i=i+63&-64;i=i+96|0;c[k>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;m=h+3|0;c[k+4>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>2&67108611;m=h+6|0;c[k+8>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>4&67092735;m=h+9|0;c[k+12>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>6&66076671;m=h+12|0;c[k+16>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>8&1048575;m=k+20|0;l=h+16|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[m+16>>2]=0;c[k+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[k+44>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[k+48>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[k+52>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;h=k+56|0;c[h>>2]=0;c[h+4>>2]=0;a[k+80>>0]=0;Xd(k,e,f,g);Zd(k,b);i=j;return 0}function Ld(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Rd(a,b,c,d,e)|0}function Md(b,e){b=b|0;e=e|0;var f=0,g=0;c[b>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863;g=e+3|0;c[b+4>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>2&67108611;g=e+6|0;c[b+8>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>4&67092735;g=e+9|0;c[b+12>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>6&66076671;g=e+12|0;c[b+16>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>8&1048575;g=b+20|0;f=e+16|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[b+40>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+20|0;c[b+44>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+24|0;c[b+48>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;e=e+28|0;c[b+52>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+56|0;c[e>>2]=0;c[e+4>>2]=0;a[b+80>>0]=0;return 0}function Nd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Xd(a,b,c,d);return 0}function Od(a,b){a=a|0;b=b|0;Zd(a,b);return 0}function Pd(){return 33027}function Qd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;k=i=i+63&-64;i=i+96|0;c[k>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;m=h+3|0;c[k+4>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>2&67108611;m=h+6|0;c[k+8>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>4&67092735;m=h+9|0;c[k+12>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>6&66076671;m=h+12|0;c[k+16>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>8&1048575;m=k+20|0;l=h+16|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[m+16>>2]=0;c[k+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[k+44>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[k+48>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[k+52>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;h=k+56|0;c[h>>2]=0;c[h+4>>2]=0;a[k+80>>0]=0;Xd(k,e,f,g);Zd(k,b);i=j;return 0}function Rd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;k=i;j=i=i+63&-64;i=i+112|0;l=j;j=j+88|0;c[l>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;n=h+3|0;c[l+4>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>2&67108611;n=h+6|0;c[l+8>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>4&67092735;n=h+9|0;c[l+12>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>6&66076671;n=h+12|0;c[l+16>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>8&1048575;n=l+20|0;m=h+16|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[l+40>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=h+20|0;c[l+44>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=h+24|0;c[l+48>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;h=h+28|0;c[l+52>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;h=l+56|0;c[h>>2]=0;c[h+4>>2]=0;a[l+80>>0]=0;Xd(l,e,f,g);Zd(l,j);i=k;return((((a[j+15>>0]^a[b+15>>0]|(a[j+14>>0]^a[b+14>>0]|(a[j+13>>0]^a[b+13>>0]|(a[j+12>>0]^a[b+12>>0]|(a[j+11>>0]^a[b+11>>0]|(a[j+10>>0]^a[b+10>>0]|(a[j+9>>0]^a[b+9>>0]|(a[j+8>>0]^a[b+8>>0]|(a[j+7>>0]^a[b+7>>0]|(a[j+6>>0]^a[b+6>>0]|(a[j+5>>0]^a[b+5>>0]|(a[j+4>>0]^a[b+4>>0]|(a[j+3>>0]^a[b+3>>0]|(a[j+2>>0]^a[b+2>>0]|(a[j+1>>0]^a[b+1>>0]|a[j>>0]^a[b>>0])))))))))))))))&255)+511|0)>>>8&1)+-1|0}function Sd(b,e){b=b|0;e=e|0;var f=0,g=0;c[b>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863;g=e+3|0;c[b+4>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>2&67108611;g=e+6|0;c[b+8>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>4&67092735;g=e+9|0;c[b+12>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>6&66076671;g=e+12|0;c[b+16>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>8&1048575;g=b+20|0;f=e+16|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[b+40>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+20|0;c[b+44>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+24|0;c[b+48>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;e=e+28|0;c[b+52>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+56|0;c[e>>2]=0;c[e+4>>2]=0;a[b+80>>0]=0;return 0}function Td(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Xd(a,b,c,d);return 0}function Ud(a,b){a=a|0;b=b|0;Zd(a,b);return 0}function Vd(){return 16}function Wd(){return 32}function Xd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=b+56|0;g=m;h=c[g>>2]|0;g=c[g+4>>2]|0;do{if(!((h|0)==0&(g|0)==0)){k=kh(16,0,h|0,g|0)|0;l=C;j=l>>>0>f>>>0|(l|0)==(f|0)&k>>>0>e>>>0;k=j?e:k;l=j?f:l;if(!((k|0)==0&(l|0)==0)){j=0;i=0;do{n=a[d+j>>0]|0;g=lh(h|0,g|0,j|0,i|0)|0;a[b+64+g>>0]=n;j=lh(j|0,i|0,1,0)|0;i=C;g=m;h=c[g>>2]|0;g=c[g+4>>2]|0}while(i>>>0<l>>>0|(i|0)==(l|0)&j>>>0<k>>>0)}n=lh(h|0,g|0,k|0,l|0)|0;j=C;i=m;c[i>>2]=n;c[i+4>>2]=j;if(j>>>0<0|(j|0)==0&n>>>0<16)return;else{e=kh(e|0,f|0,k|0,l|0)|0;f=C;Yd(b,b+64|0,16,0);n=m;c[n>>2]=0;c[n+4>>2]=0;d=d+k|0;break}}}while(0);if(f>>>0>0|(f|0)==0&e>>>0>15){n=e&-16;Yd(b,d,n,f);e=kh(e|0,f|0,n|0,f|0)|0;d=d+n|0;f=C}if((e|0)==0&(f|0)==0)return;else{g=0;h=0}do{l=a[d+g>>0]|0;n=m;n=lh(c[n>>2]|0,c[n+4>>2]|0,g|0,h|0)|0;a[b+64+n>>0]=l;g=lh(g|0,h|0,1,0)|0;h=C}while(h>>>0<f>>>0|(h|0)==(f|0)&g>>>0<e>>>0);b=m;b=lh(c[b>>2]|0,c[b+4>>2]|0,e|0,f|0)|0;n=m;c[n>>2]=b;c[n+4>>2]=C;return}function Yd(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;s=a[b+80>>0]|0?0:16777216;t=c[b+4>>2]|0;u=c[b+8>>2]|0;m=c[b+12>>2]|0;n=c[b+16>>2]|0;v=b+20|0;l=c[v>>2]|0;w=b+24|0;k=c[w>>2]|0;x=b+28|0;j=c[x>>2]|0;y=b+32|0;i=c[y>>2]|0;z=b+36|0;h=c[z>>2]|0;if(!(g>>>0>0|(g|0)==0&f>>>0>15)){q=l;r=k;s=j;t=i;u=h;c[v>>2]=q;c[w>>2]=r;c[x>>2]=s;c[y>>2]=t;c[z>>2]=u;return}o=n*5|0;p=m*5|0;q=u*5|0;r=t*5|0;b=c[b>>2]|0;while(1){B=((d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863)+l|0;J=e+3|0;J=((d[J>>0]|d[J+1>>0]<<8|d[J+2>>0]<<16|d[J+3>>0]<<24)>>>2&67108863)+k|0;H=e+6|0;H=((d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24)>>>4&67108863)+j|0;G=e+9|0;G=((d[G>>0]|d[G+1>>0]<<8|d[G+2>>0]<<16|d[G+3>>0]<<24)>>>6)+i|0;l=e+12|0;l=((d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)>>>8|s)+h|0;k=wh(B|0,0,b|0,0)|0;j=C;A=wh(J|0,0,o|0,0)|0;j=lh(A|0,C|0,k|0,j|0)|0;k=C;A=wh(H|0,0,p|0,0)|0;A=lh(j|0,k|0,A|0,C|0)|0;k=C;j=wh(G|0,0,q|0,0)|0;j=lh(A|0,k|0,j|0,C|0)|0;k=C;A=wh(l|0,0,r|0,0)|0;A=lh(j|0,k|0,A|0,C|0)|0;k=C;j=wh(B|0,0,t|0,0)|0;i=C;F=wh(J|0,0,b|0,0)|0;i=lh(F|0,C|0,j|0,i|0)|0;j=C;F=wh(H|0,0,o|0,0)|0;F=lh(i|0,j|0,F|0,C|0)|0;j=C;i=wh(G|0,0,p|0,0)|0;i=lh(F|0,j|0,i|0,C|0)|0;j=C;F=wh(l|0,0,q|0,0)|0;F=lh(i|0,j|0,F|0,C|0)|0;j=C;i=wh(B|0,0,u|0,0)|0;h=C;E=wh(J|0,0,t|0,0)|0;h=lh(E|0,C|0,i|0,h|0)|0;i=C;E=wh(H|0,0,b|0,0)|0;E=lh(h|0,i|0,E|0,C|0)|0;i=C;h=wh(G|0,0,o|0,0)|0;h=lh(E|0,i|0,h|0,C|0)|0;i=C;E=wh(l|0,0,p|0,0)|0;E=lh(h|0,i|0,E|0,C|0)|0;i=C;h=wh(B|0,0,m|0,0)|0;I=C;D=wh(J|0,0,u|0,0)|0;I=lh(D|0,C|0,h|0,I|0)|0;h=C;D=wh(H|0,0,t|0,0)|0;D=lh(I|0,h|0,D|0,C|0)|0;h=C;I=wh(G|0,0,b|0,0)|0;I=lh(D|0,h|0,I|0,C|0)|0;h=C;D=wh(l|0,0,o|0,0)|0;D=lh(I|0,h|0,D|0,C|0)|0;h=C;B=wh(B|0,0,n|0,0)|0;I=C;J=wh(J|0,0,m|0,0)|0;I=lh(J|0,C|0,B|0,I|0)|0;B=C;H=wh(H|0,0,u|0,0)|0;H=lh(I|0,B|0,H|0,C|0)|0;B=C;G=wh(G|0,0,t|0,0)|0;G=lh(H|0,B|0,G|0,C|0)|0;B=C;l=wh(l|0,0,b|0,0)|0;l=lh(G|0,B|0,l|0,C|0)|0;B=C;k=oh(A|0,k|0,26)|0;k=lh(F|0,j|0,k|0,0)|0;j=oh(k|0,C|0,26)|0;j=lh(E|0,i|0,j|0,0)|0;i=oh(j|0,C|0,26)|0;j=j&67108863;i=lh(D|0,h|0,i|0,0)|0;h=oh(i|0,C|0,26)|0;i=i&67108863;h=lh(l|0,B|0,h|0,0)|0;B=oh(h|0,C|0,26)|0;h=h&67108863;B=B*5|0;l=B+A&67108863;k=((B+(A&67108863)|0)>>>26)+(k&67108863)|0;f=lh(f|0,g|0,-16,-1)|0;g=C;if(!(g>>>0>0|(g|0)==0&f>>>0>15))break;else e=e+16|0}c[v>>2]=l;c[w>>2]=k;c[x>>2]=j;c[y>>2]=i;c[z>>2]=h;return}function Zd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=b+56|0;f=c[g>>2]|0;g=c[g+4>>2]|0;if(!((f|0)==0&(g|0)==0)){a[b+64+f>>0]=1;e=lh(f|0,g|0,1,0)|0;h=C;if(h>>>0<0|(h|0)==0&e>>>0<16){h=kh(14,0,f|0,g|0)|0;nh(b+64+e|0,0,h+1|0)|0}a[b+80>>0]=1;Yd(b,b+64|0,16,0)}g=c[b+24>>2]|0;p=(c[b+28>>2]|0)+(g>>>26)|0;h=p&67108863;n=(p>>>26)+(c[b+32>>2]|0)|0;m=n&67108863;i=(n>>>26)+(c[b+36>>2]|0)|0;f=((i>>>26)*5|0)+(c[b+20>>2]|0)|0;e=f&67108863;g=(f>>>26)+(g&67108863)|0;r=((e+5|0)>>>26)+g|0;q=r>>>26;o=(q+h|0)>>>26;k=(i|-67108864)+((o+m|0)>>>26)|0;l=(k>>>31)+-1|0;j=k>>31;g=r&67108863&l|j&g;h=q+p&67108863&l|j&h;m=o+n&67108863&l|j&m;e=lh(f+5&67108863&l|j&e|g<<26|0,0,c[b+40>>2]|0,0)|0;f=C;g=lh(g>>>6|h<<20|0,0,c[b+44>>2]|0,0)|0;f=lh(g|0,C|0,f|0,0)|0;g=C;h=lh(h>>>12|m<<14|0,0,c[b+48>>2]|0,0)|0;g=lh(h|0,C|0,g|0,0)|0;h=C;i=lh(m>>>18|(l&k|j&i)<<8|0,0,c[b+52>>2]|0,0)|0;h=lh(i|0,C|0,h|0,0)|0;a[d>>0]=e;a[d+1>>0]=e>>8;a[d+2>>0]=e>>16;a[d+3>>0]=e>>24;e=d+4|0;a[e>>0]=f;a[e+1>>0]=f>>8;a[e+2>>0]=f>>16;a[e+3>>0]=f>>24;e=d+8|0;a[e>>0]=g;a[e+1>>0]=g>>8;a[e+2>>0]=g>>16;a[e+3>>0]=g>>24;e=d+12|0;a[e>>0]=h;a[e+1>>0]=h>>8;a[e+2>>0]=h>>16;a[e+3>>0]=h>>24;e=b+88|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));return}function _d(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=i;k=i=i+63&-64;i=i+2048|0;j=k;k=k+1024|0;if(!((a|0)!=0&(b|0)!=0)){i=n;return}g=c[(c[b>>2]|0)+4>>2]|0;h=c[b+16>>2]|0;qh(j|0,g+(h<<10)+-1024|0,1024)|0;d=c[b+20>>2]|0;if(d>>>0>1){e=h+-1|0;m=1;do{f=e+(_(h,m)|0)|0;l=0;do{q=g+(f<<10)+(l<<3)|0;o=j+(l<<3)|0;r=o;p=c[r+4>>2]^c[q+4>>2];c[o>>2]=c[r>>2]^c[q>>2];c[o+4>>2]=p;l=l+1|0}while((l|0)!=128);m=m+1|0}while((m|0)!=(d|0))}qh(k|0,j|0,1024)|0;ge(c[a>>2]|0,c[a+4>>2]|0,k,1024);nh(j|0,0,1024)|0;e=c[b>>2]|0;if(e|0?(c[a+56>>2]&1|0)!=0:0){nh(c[e+4>>2]|0,0,c[b+8>>2]<<10|0)|0;e=c[b>>2]|0}d=c[e>>2]|0;if(d|0)gh(d);gh(e);i=n;return}function $d(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;m=i=i+63&-64;i=i+32|0;n=m+16|0;if(!b){n=0;i=o;return n|0}g=b+20|0;d=c[g>>2]|0;if(!d){n=0;i=o;return n|0}h=b+4|0;if(!(c[h>>2]|0)){n=0;i=o;return n|0}j=m+4|0;k=m+8|0;l=m+12|0;f=0;a:while(1){if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=0;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0);if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=1;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0);if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=2;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0);if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=3;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0)}else d=0}else d=0}else d=0}else d=0;f=f+1|0;if(f>>>0>=(c[h>>2]|0)>>>0){d=0;e=9;break}}if((e|0)==9){i=o;return d|0}return 0}function ae(a){a=a|0;var b=0,d=0;if(!a){a=-25;return a|0}if(!(c[a>>2]|0)){a=-1;return a|0}if((c[a+4>>2]|0)>>>0<16){a=-2;return a|0}if((c[a+8>>2]|0)==0?c[a+12>>2]|0:0){a=-18;return a|0}b=c[a+20>>2]|0;if(!(c[a+16>>2]|0)){if(b|0){a=-19;return a|0}}else if(b>>>0<8){a=-6;return a|0}if((c[a+24>>2]|0)==0?c[a+28>>2]|0:0){a=-20;return a|0}if((c[a+32>>2]|0)==0?c[a+36>>2]|0:0){a=-21;return a|0}b=c[a+44>>2]|0;if(b>>>0<8){a=-14;return a|0}if(b>>>0>2097152){a=-15;return a|0}d=c[a+48>>2]|0;if(b>>>0<d<<3>>>0){a=-14;return a|0}if((c[a+40>>2]|0)>>>0<3){a=-12;return a|0}if(!d){a=-16;return a|0}if(d>>>0>16777215){a=-17;return a|0}b=c[a+52>>2]|0;if(!b){a=-28;return a|0}a=b>>>0>16777215?-29:0;return a|0}function be(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=i;z=i=i+63&-64;i=i+1104|0;A=z;m=z+1024|0;z=z+1032|0;if((b|0)==0|(e|0)==0){b=-25;i=B;return b|0}y=c[b+8>>2]|0;h=y<<10;do{if((y|0?((h>>>0)/(y>>>0)|0|0)==1024:0)?(y=fh(12)|0,c[b>>2]=y,y|0):0){g=ih(A,h)|0;if(!(c[8522]|0))f=34132;else f=c[(oa()|0)+64>>2]|0;c[f>>2]=g;if(g|0){c[A>>2]=0;break}f=c[A>>2]|0;if(f|0){c[c[b>>2]>>2]=f;c[(c[b>>2]|0)+4>>2]=f;c[(c[b>>2]|0)+8>>2]=h;p=c[b+28>>2]|0;nh(A+64|0,0,293)|0;g=A;r=400;s=g+48|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));u=A;c[u>>2]=-222443192;c[u+4>>2]=1779033703;u=A+8|0;c[u>>2]=-2067093701;c[u+4>>2]=-1150833019;u=A+16|0;c[u>>2]=-23791573;c[u+4>>2]=1013904242;u=A+24|0;c[u>>2]=1595750129;c[u+4>>2]=-1521486534;u=A+32|0;c[u>>2]=-1377402159;c[u+4>>2]=1359893119;u=A+40|0;c[u>>2]=725511199;c[u+4>>2]=-1694144372;u=A+48|0;c[u>>2]=-79577749;c[u+4>>2]=528734635;u=A+56|0;c[u>>2]=327033209;c[u+4>>2]=1541459225;c[m>>2]=c[e+48>>2];u=A+352|0;v=A+96|0;w=A+64|0;x=A+72|0;y=A+224|0;c[A+96>>2]=c[m>>2];g=(c[u>>2]|0)+4|0;c[u>>2]=g;c[m>>2]=c[e+4>>2];h=m;n=0;o=4;while(1){j=256-g|0;f=A+96+g|0;if(!(n>>>0>0|(n|0)==0&o>>>0>j>>>0)){t=13;break}qh(f|0,h|0,j|0)|0;c[u>>2]=(c[u>>2]|0)+j;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(o|0,n|0,j|0,0)|0;if((o|0)==(j|0)&(n|0)==0)break;else{h=h+j|0;n=C;o=f}}if((t|0)==13){qh(f|0,h|0,o|0)|0;g=lh(c[u>>2]|0,0,o|0,n|0)|0;c[u>>2]=g}c[m>>2]=c[e+44>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=17;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==17){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}c[m>>2]=c[e+40>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=21;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==21){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}c[m>>2]=19;o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=25;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==25){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}c[m>>2]=p;o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=29;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==29){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}q=e+12|0;c[m>>2]=c[q>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=33;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;p=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=p;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==33){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}p=e+8|0;f=c[p>>2]|0;if(f){h=c[q>>2]|0;a:do{if(h){o=0;while(1){n=256-g|0;g=A+96+g|0;if(!(o>>>0>0|(o|0)==0&h>>>0>n>>>0))break;qh(g|0,f|0,n|0)|0;c[u>>2]=(c[u>>2]|0)+n;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;j=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=j;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;j=kh(h|0,o|0,n|0,0)|0;if((h|0)==(n|0)&(o|0)==0)break a;else{f=f+n|0;o=C;h=j}}qh(g|0,f|0,h|0)|0;g=lh(c[u>>2]|0,0,h|0,o|0)|0;c[u>>2]=g}}while(0);if(c[e+56>>2]&1){nh(c[p>>2]|0,0,c[q>>2]|0)|0;c[q>>2]=0;g=c[u>>2]|0}}p=e+20|0;c[m>>2]=c[p>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=45;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==45){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}f=c[e+16>>2]|0;b:do{if((f|0)!=0?(l=c[p>>2]|0,(l|0)!=0):0){n=0;while(1){j=256-g|0;g=A+96+g|0;if(!(n>>>0>0|(n|0)==0&l>>>0>j>>>0))break;qh(g|0,f|0,j|0)|0;c[u>>2]=(c[u>>2]|0)+j;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;h=kh(l|0,n|0,j|0,0)|0;if((l|0)==(j|0)&(n|0)==0)break b;else{f=f+j|0;n=C;l=h}}qh(g|0,f|0,l|0)|0;g=lh(c[u>>2]|0,0,l|0,n|0)|0;c[u>>2]=g}}while(0);p=e+28|0;c[m>>2]=c[p>>2];n=m;j=0;l=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&l>>>0>h>>>0)){t=55;break}qh(f|0,n|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(l|0,j|0,h|0,0)|0;if((l|0)==(h|0)&(j|0)==0)break;else{n=n+h|0;j=C;l=f}}if((t|0)==55){qh(f|0,n|0,l|0)|0;g=lh(c[u>>2]|0,0,l|0,j|0)|0;c[u>>2]=g}o=e+24|0;f=c[o>>2]|0;if(f){h=c[p>>2]|0;c:do{if(h){n=0;while(1){l=256-g|0;g=A+96+g|0;if(!(n>>>0>0|(n|0)==0&h>>>0>l>>>0))break;qh(g|0,f|0,l|0)|0;c[u>>2]=(c[u>>2]|0)+l;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;j=kh(h|0,n|0,l|0,0)|0;if((h|0)==(l|0)&(n|0)==0)break c;else{f=f+l|0;n=C;h=j}}qh(g|0,f|0,h|0)|0;g=lh(c[u>>2]|0,0,h|0,n|0)|0;c[u>>2]=g}}while(0);if(c[e+56>>2]&2){nh(c[o>>2]|0,0,c[p>>2]|0)|0;c[p>>2]=0;g=c[u>>2]|0}}n=e+36|0;c[m>>2]=c[n>>2];j=0;l=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&l>>>0>h>>>0)){t=67;break}qh(f|0,m|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(l|0,j|0,h|0,0)|0;if((l|0)==(h|0)&(j|0)==0)break;else{m=m+h|0;j=C;l=f}}if((t|0)==67){qh(f|0,m|0,l|0)|0;g=lh(c[u>>2]|0,0,l|0,j|0)|0;c[u>>2]=g}f=c[e+32>>2]|0;d:do{if(f|0?(k=c[n>>2]|0,k|0):0){h=g;l=0;while(1){j=256-h|0;g=A+96+h|0;if(!(l>>>0>0|(l|0)==0&k>>>0>j>>>0))break;qh(g|0,f|0,j|0)|0;c[u>>2]=(c[u>>2]|0)+j;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;t=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=t;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));h=(c[u>>2]|0)+-128|0;c[u>>2]=h;g=kh(k|0,l|0,j|0,0)|0;if((k|0)==(j|0)&(l|0)==0)break d;else{f=f+j|0;l=C;k=g}}qh(g|0,f|0,k|0)|0;y=lh(c[u>>2]|0,0,k|0,l|0)|0;c[u>>2]=y}}while(0);jd(A,z,64);j=z+64|0;k=j;y=k;a[y>>0]=0;a[y+1>>0]=0;a[y+2>>0]=0;a[y+3>>0]=0;k=k+4|0;a[k>>0]=0;a[k+1>>0]=0;a[k+2>>0]=0;a[k+3>>0]=0;k=b+20|0;if(c[k>>2]|0){l=z+68|0;m=b+16|0;n=0;do{a[j>>0]=0;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;a[l>>0]=n;a[l+1>>0]=n>>8;a[l+2>>0]=n>>16;a[l+3>>0]=n>>24;ge(A,1024,z,72);f=_(c[m>>2]|0,n)|0;g=c[(c[b>>2]|0)+4>>2]|0;h=0;do{x=A+(h<<3)|0;w=x;x=x+4|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;y=g+(f<<10)+(h<<3)|0;c[y>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[y+4>>2]=x;h=h+1|0}while((h|0)!=128);a[j>>0]=1;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;ge(A,1024,z,72);f=(_(c[m>>2]|0,n)|0)+1|0;g=c[(c[b>>2]|0)+4>>2]|0;h=0;do{x=A+(h<<3)|0;w=x;x=x+4|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;y=g+(f<<10)+(h<<3)|0;c[y>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[y+4>>2]=x;h=h+1|0}while((h|0)!=128);n=n+1|0}while(n>>>0<(c[k>>2]|0)>>>0)}g=z;s=g+72|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(s|0));b=0;i=B;return b|0}}}while(0);b=-22;i=B;return b|0}function ce(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;g=0;f=0;i=0;a:while(1){h=f;while(1){k=a[e>>0]|0;f=k+-65|0;f=(0-(k^47)|0)>>>8&63^63|(0-(k^43)|0)>>>8&62^62|((k+65439|0)>>>8^255)&k+185&((122-k|0)>>>8&255^255)|(f>>>8^255)&f&((90-k|0)>>>8&255^255)|((k+65488|0)>>>8^255)&k+4&((57-k|0)>>>8&255^255);f=((0-f|0)>>>8&255^255)&(0-(k^65)|0)>>>8|f;if((f|0)==255)break a;e=e+1|0;g=f+(g<<6)|0;f=h+6|0;if(f>>>0>7)break;else h=f}f=h+-2|0;if(i>>>0>=(c[d>>2]|0)>>>0){e=0;j=10;break}a[b>>0]=g>>>f;b=b+1|0;i=i+1|0}if((j|0)==10)return e|0;if(h>>>0>4){k=0;return k|0}if((1<<h)+-1&g|0){k=0;return k|0}c[d>>2]=i;k=e;return k|0}function de(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0,ca=0,da=0;B=i;m=i=i+63&-64;i=i+4096|0;z=m+3072|0;A=m+2048|0;l=m+1024|0;if(!b){d=0;i=B;return d|0}w=b+12|0;y=fh(c[w>>2]<<3)|0;if(!y){d=-22;i=B;return d|0}nh(z|0,0,1024)|0;nh(A|0,0,1024)|0;n=c[d>>2]|0;x=A;c[x>>2]=n;c[x+4>>2]=0;x=c[d+4>>2]|0;o=A+8|0;c[o>>2]=x;c[o+4>>2]=0;o=a[d+8>>0]|0;e=A+16|0;c[e>>2]=o&255;c[e+4>>2]=0;e=A+24|0;c[e>>2]=c[b+8>>2];c[e+4>>2]=0;e=A+32|0;c[e>>2]=c[b+4>>2];c[e+4>>2]=0;e=A+40|0;c[e>>2]=c[b+28>>2];c[e+4>>2]=0;e=c[w>>2]|0;if(!e)e=0;else{k=A+48|0;f=0;g=0;j=0;do{h=j&127;if(!h){f=lh(f|0,g|0,1,0)|0;g=C;e=k;c[e>>2]=f;c[e+4>>2]=g;nh(m|0,0,1024)|0;nh(l|0,0,1024)|0;ee(z,A,m);ee(z,m,l);e=c[w>>2]|0}t=l+(h<<3)|0;u=c[t+4>>2]|0;v=y+(j<<3)|0;c[v>>2]=c[t>>2];c[v+4>>2]=u;j=j+1|0}while(j>>>0<e>>>0)}r=(n|0)==0;s=o<<24>>24==0;t=r&s;f=t?2:0;u=b+16|0;g=c[u>>2]|0;v=o&255;h=(_(g,x)|0)+f+(_(v,e)|0)|0;if(f>>>0<e>>>0){q=b+20|0;n=o<<24>>24==3;o=v+1|0;l=g;p=h;e=(((h>>>0)%(g>>>0)|0|0)==0?g+-1|0:-1)+h|0;while(1){m=((p>>>0)%(l>>>0)|0|0)==1?p+-1|0:e;j=y+(f<<3)|0;h=c[j>>2]|0;j=yh(c[j+4>>2]|0,0,c[q>>2]|0,0)|0;j=t?x:j;k=t?0:C;g=(j|0)==(x|0)&(k|0)==0;do{if(r){if(s){e=f+-1|0;break}e=_(c[w>>2]|0,v)|0;if(g){e=f+-1+e|0;break}else{e=(((f|0)==0)<<31>>31)+e|0;break}}else{e=l-(c[w>>2]|0)|0;if(g){e=f+-1+e|0;break}else{e=(((f|0)==0)<<31>>31)+e|0;break}}}while(0);wh(h|0,0,h|0,0)|0;wh(e|0,0,C|0,0)|0;e=kh(e+-1|0,0,C|0,0)|0;if(r|n){g=0;h=0}else{g=_(c[w>>2]|0,o)|0;h=0}e=lh(e|0,C|0,g|0,h|0)|0;e=yh(e|0,C|0,l|0,0)|0;h=c[(c[b>>2]|0)+4>>2]|0;g=wh(l|0,0,j|0,k|0)|0;e=h+(g<<10)+(e<<10)|0;g=h+(p<<10)|0;if(r){qh(z|0,e|0,1024)|0;e=0;do{j=h+(m<<10)+(e<<3)|0;l=z+(e<<3)|0;D=l;k=c[D+4>>2]^c[j+4>>2];c[l>>2]=c[D>>2]^c[j>>2];c[l+4>>2]=k;e=e+1|0}while((e|0)!=128);qh(A|0,z|0,1024)|0;e=0;do{M=e<<4;aa=z+(M<<3)|0;J=aa;L=c[J>>2]|0;J=c[J+4>>2]|0;D=z+((M|4)<<3)|0;V=D;j=c[V>>2]|0;V=c[V+4>>2]|0;T=lh(j|0,V|0,L|0,J|0)|0;P=C;J=ph(L|0,J|0,1)|0;J=wh(J&-2|0,C&1|0,j|0,0)|0;J=lh(T|0,P|0,J|0,C|0)|0;P=C;T=z+((M|12)<<3)|0;L=T;Q=J^c[L>>2];L=P^c[L+4>>2];G=z+((M|8)<<3)|0;l=G;Y=c[l>>2]|0;l=c[l+4>>2]|0;F=lh(L|0,Q|0,Y|0,l|0)|0;H=C;l=ph(Y|0,l|0,1)|0;l=wh(L|0,0,l&-2|0,C&1|0)|0;l=lh(F|0,H|0,l|0,C|0)|0;H=C;j=l^j;V=H^V;F=oh(j|0,V|0,24)|0;Y=C;V=ph(j|0,V|0,40)|0;V=V|F;Y=C|Y;j=lh(V|0,Y|0,J|0,P|0)|0;k=C;P=ph(J|0,P|0,1)|0;P=wh(F|0,0,P&-2|0,C&1|0)|0;P=lh(j|0,k|0,P|0,C|0)|0;k=C;j=aa;c[j>>2]=P;c[j+4>>2]=k;L=P^L;Q=k^Q;k=oh(L|0,Q|0,16)|0;P=C;Q=ph(L|0,Q|0,48)|0;Q=Q|k;P=C|P;L=T;c[L>>2]=Q;c[L+4>>2]=P;P=lh(Q|0,P|0,l|0,H|0)|0;Q=C;H=ph(l|0,H|0,1)|0;H=wh(k|0,0,H&-2|0,C&1|0)|0;H=lh(P|0,Q|0,H|0,C|0)|0;Q=C;P=G;c[P>>2]=H;c[P+4>>2]=Q;V=H^V;Y=Q^Y;Q=oh(V|0,Y|0,63)|0;H=C;Y=ph(V|0,Y|0,1)|0;V=D;c[V>>2]=Y|Q;c[V+4>>2]=C|H;V=z+((M|1)<<3)|0;H=V;Q=c[H>>2]|0;H=c[H+4>>2]|0;Y=z+((M|5)<<3)|0;P=Y;k=c[P>>2]|0;P=c[P+4>>2]|0;l=lh(k|0,P|0,Q|0,H|0)|0;L=C;H=ph(Q|0,H|0,1)|0;H=wh(H&-2|0,C&1|0,k|0,0)|0;H=lh(l|0,L|0,H|0,C|0)|0;L=C;l=z+((M|13)<<3)|0;Q=l;j=H^c[Q>>2];Q=L^c[Q+4>>2];F=z+((M|9)<<3)|0;J=F;S=c[J>>2]|0;J=c[J+4>>2]|0;R=lh(Q|0,j|0,S|0,J|0)|0;N=C;J=ph(S|0,J|0,1)|0;J=wh(Q|0,0,J&-2|0,C&1|0)|0;J=lh(R|0,N|0,J|0,C|0)|0;N=C;k=J^k;P=N^P;R=oh(k|0,P|0,24)|0;S=C;P=ph(k|0,P|0,40)|0;P=P|R;S=C|S;k=lh(P|0,S|0,H|0,L|0)|0;Z=C;L=ph(H|0,L|0,1)|0;L=wh(R|0,0,L&-2|0,C&1|0)|0;L=lh(k|0,Z|0,L|0,C|0)|0;Z=C;k=V;c[k>>2]=L;c[k+4>>2]=Z;Q=L^Q;j=Z^j;Z=oh(Q|0,j|0,16)|0;L=C;j=ph(Q|0,j|0,48)|0;j=j|Z;L=C|L;Q=l;c[Q>>2]=j;c[Q+4>>2]=L;L=lh(j|0,L|0,J|0,N|0)|0;j=C;N=ph(J|0,N|0,1)|0;N=wh(Z|0,0,N&-2|0,C&1|0)|0;N=lh(L|0,j|0,N|0,C|0)|0;j=C;L=F;c[L>>2]=N;c[L+4>>2]=j;P=N^P;S=j^S;j=oh(P|0,S|0,63)|0;N=C;S=ph(P|0,S|0,1)|0;P=Y;c[P>>2]=S|j;c[P+4>>2]=C|N;P=z+((M|2)<<3)|0;N=P;j=c[N>>2]|0;N=c[N+4>>2]|0;S=z+((M|6)<<3)|0;L=S;Z=c[L>>2]|0;L=c[L+4>>2]|0;J=lh(Z|0,L|0,j|0,N|0)|0;Q=C;N=ph(j|0,N|0,1)|0;N=wh(N&-2|0,C&1|0,Z|0,0)|0;N=lh(J|0,Q|0,N|0,C|0)|0;Q=C;J=z+((M|14)<<3)|0;j=J;k=N^c[j>>2];j=Q^c[j+4>>2];R=z+((M|10)<<3)|0;H=R;O=c[H>>2]|0;H=c[H+4>>2]|0;$=lh(j|0,k|0,O|0,H|0)|0;W=C;H=ph(O|0,H|0,1)|0;H=wh(j|0,0,H&-2|0,C&1|0)|0;H=lh($|0,W|0,H|0,C|0)|0;W=C;Z=H^Z;L=W^L;$=oh(Z|0,L|0,24)|0;O=C;L=ph(Z|0,L|0,40)|0;L=L|$;O=C|O;Z=lh(L|0,O|0,N|0,Q|0)|0;ca=C;Q=ph(N|0,Q|0,1)|0;Q=wh($|0,0,Q&-2|0,C&1|0)|0;Q=lh(Z|0,ca|0,Q|0,C|0)|0;ca=C;Z=P;c[Z>>2]=Q;c[Z+4>>2]=ca;j=Q^j;k=ca^k;ca=oh(j|0,k|0,16)|0;Q=C;k=ph(j|0,k|0,48)|0;k=k|ca;Q=C|Q;j=J;c[j>>2]=k;c[j+4>>2]=Q;Q=lh(k|0,Q|0,H|0,W|0)|0;k=C;W=ph(H|0,W|0,1)|0;W=wh(ca|0,0,W&-2|0,C&1|0)|0;W=lh(Q|0,k|0,W|0,C|0)|0;k=C;L=W^L;O=k^O;Q=oh(L|0,O|0,63)|0;ca=C;O=ph(L|0,O|0,1)|0;L=S;c[L>>2]=O|Q;c[L+4>>2]=C|ca;L=z+((M|3)<<3)|0;ca=L;Q=c[ca>>2]|0;ca=c[ca+4>>2]|0;O=z+((M|7)<<3)|0;H=O;j=c[H>>2]|0;H=c[H+4>>2]|0;Z=lh(j|0,H|0,Q|0,ca|0)|0;$=C;ca=ph(Q|0,ca|0,1)|0;ca=wh(ca&-2|0,C&1|0,j|0,0)|0;ca=lh(Z|0,$|0,ca|0,C|0)|0;$=C;Z=z+((M|15)<<3)|0;Q=Z;N=ca^c[Q>>2];Q=$^c[Q+4>>2];M=z+((M|11)<<3)|0;U=M;da=c[U>>2]|0;U=c[U+4>>2]|0;ba=lh(Q|0,N|0,da|0,U|0)|0;I=C;U=ph(da|0,U|0,1)|0;U=wh(Q|0,0,U&-2|0,C&1|0)|0;U=lh(ba|0,I|0,U|0,C|0)|0;I=C;j=U^j;H=I^H;ba=oh(j|0,H|0,24)|0;da=C;H=ph(j|0,H|0,40)|0;H=H|ba;da=C|da;j=lh(H|0,da|0,ca|0,$|0)|0;K=C;$=ph(ca|0,$|0,1)|0;$=wh(ba|0,0,$&-2|0,C&1|0)|0;$=lh(j|0,K|0,$|0,C|0)|0;K=C;j=L;c[j>>2]=$;c[j+4>>2]=K;Q=$^Q;N=K^N;K=oh(Q|0,N|0,16)|0;$=C;N=ph(Q|0,N|0,48)|0;N=N|K;$=C|$;Q=lh(N|0,$|0,U|0,I|0)|0;j=C;I=ph(U|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(Q|0,j|0,I|0,C|0)|0;j=C;H=I^H;da=j^da;Q=oh(H|0,da|0,63)|0;K=C;da=ph(H|0,da|0,1)|0;Q=da|Q;K=C|K;da=O;c[da>>2]=Q;c[da+4>>2]=K;da=aa;H=c[da>>2]|0;da=c[da+4>>2]|0;U=Y;ba=c[U>>2]|0;U=c[U+4>>2]|0;ca=lh(ba|0,U|0,H|0,da|0)|0;X=C;da=ph(H|0,da|0,1)|0;da=wh(da&-2|0,C&1|0,ba|0,0)|0;da=lh(ca|0,X|0,da|0,C|0)|0;X=C;N=N^da;$=$^X;ca=lh($|0,N|0,W|0,k|0)|0;H=C;k=ph(W|0,k|0,1)|0;k=wh($|0,0,k&-2|0,C&1|0)|0;k=lh(ca|0,H|0,k|0,C|0)|0;H=C;ba=k^ba;U=H^U;ca=oh(ba|0,U|0,24)|0;W=C;U=ph(ba|0,U|0,40)|0;U=U|ca;W=C|W;ba=lh(U|0,W|0,da|0,X|0)|0;E=C;X=ph(da|0,X|0,1)|0;X=wh(ca|0,0,X&-2|0,C&1|0)|0;X=lh(ba|0,E|0,X|0,C|0)|0;E=C;c[aa>>2]=X;c[aa+4>>2]=E;$=X^$;N=E^N;E=oh($|0,N|0,16)|0;X=C;N=ph($|0,N|0,48)|0;N=N|E;X=C|X;c[Z>>2]=N;c[Z+4>>2]=X;X=lh(N|0,X|0,k|0,H|0)|0;N=C;H=ph(k|0,H|0,1)|0;H=wh(E|0,0,H&-2|0,C&1|0)|0;H=lh(X|0,N|0,H|0,C|0)|0;N=C;c[R>>2]=H;c[R+4>>2]=N;U=H^U;W=N^W;N=oh(U|0,W|0,63)|0;H=C;W=ph(U|0,W|0,1)|0;c[Y>>2]=W|N;c[Y+4>>2]=C|H;Y=V;H=c[Y>>2]|0;Y=c[Y+4>>2]|0;N=S;W=c[N>>2]|0;N=c[N+4>>2]|0;U=lh(W|0,N|0,H|0,Y|0)|0;R=C;Y=ph(H|0,Y|0,1)|0;Y=wh(Y&-2|0,C&1|0,W|0,0)|0;Y=lh(U|0,R|0,Y|0,C|0)|0;R=C;U=T;H=Y^c[U>>2];U=R^c[U+4>>2];X=lh(U|0,H|0,I|0,j|0)|0;E=C;j=ph(I|0,j|0,1)|0;j=wh(j&-2|0,C&1|0,U|0,0)|0;j=lh(X|0,E|0,j|0,C|0)|0;E=C;W=j^W;N=E^N;X=oh(W|0,N|0,24)|0;I=C;N=ph(W|0,N|0,40)|0;N=N|X;I=C|I;W=lh(N|0,I|0,Y|0,R|0)|0;k=C;R=ph(Y|0,R|0,1)|0;R=wh(X|0,0,R&-2|0,C&1|0)|0;R=lh(W|0,k|0,R|0,C|0)|0;k=C;c[V>>2]=R;c[V+4>>2]=k;U=R^U;H=k^H;k=oh(U|0,H|0,16)|0;R=C;H=ph(U|0,H|0,48)|0;H=H|k;R=C|R;c[T>>2]=H;c[T+4>>2]=R;R=lh(H|0,R|0,j|0,E|0)|0;H=C;E=ph(j|0,E|0,1)|0;E=wh(k|0,0,E&-2|0,C&1|0)|0;E=lh(R|0,H|0,E|0,C|0)|0;H=C;c[M>>2]=E;c[M+4>>2]=H;N=E^N;I=H^I;H=oh(N|0,I|0,63)|0;E=C;I=ph(N|0,I|0,1)|0;c[S>>2]=I|H;c[S+4>>2]=C|E;S=P;E=c[S>>2]|0;S=c[S+4>>2]|0;H=lh(Q|0,K|0,E|0,S|0)|0;I=C;S=ph(E|0,S|0,1)|0;S=wh(S&-2|0,C&1|0,Q|0,0)|0;S=lh(H|0,I|0,S|0,C|0)|0;I=C;H=l;E=S^c[H>>2];H=I^c[H+4>>2];N=G;M=c[N>>2]|0;N=c[N+4>>2]|0;R=lh(H|0,E|0,M|0,N|0)|0;k=C;N=ph(M|0,N|0,1)|0;N=wh(H|0,0,N&-2|0,C&1|0)|0;N=lh(R|0,k|0,N|0,C|0)|0;k=C;Q=N^Q;K=k^K;R=oh(Q|0,K|0,24)|0;M=C;K=ph(Q|0,K|0,40)|0;K=K|R;M=C|M;Q=lh(K|0,M|0,S|0,I|0)|0;j=C;I=ph(S|0,I|0,1)|0;I=wh(R|0,0,I&-2|0,C&1|0)|0;I=lh(Q|0,j|0,I|0,C|0)|0;j=C;c[P>>2]=I;c[P+4>>2]=j;H=I^H;E=j^E;j=oh(H|0,E|0,16)|0;I=C;E=ph(H|0,E|0,48)|0;E=E|j;I=C|I;c[l>>2]=E;c[l+4>>2]=I;I=lh(E|0,I|0,N|0,k|0)|0;E=C;k=ph(N|0,k|0,1)|0;k=wh(j|0,0,k&-2|0,C&1|0)|0;k=lh(I|0,E|0,k|0,C|0)|0;E=C;c[G>>2]=k;c[G+4>>2]=E;K=k^K;M=E^M;E=oh(K|0,M|0,63)|0;k=C;M=ph(K|0,M|0,1)|0;c[O>>2]=M|E;c[O+4>>2]=C|k;O=L;k=c[O>>2]|0;O=c[O+4>>2]|0;E=D;M=c[E>>2]|0;E=c[E+4>>2]|0;K=lh(M|0,E|0,k|0,O|0)|0;G=C;O=ph(k|0,O|0,1)|0;O=wh(O&-2|0,C&1|0,M|0,0)|0;O=lh(K|0,G|0,O|0,C|0)|0;G=C;K=J;k=O^c[K>>2];K=G^c[K+4>>2];I=F;j=c[I>>2]|0;I=c[I+4>>2]|0;N=lh(K|0,k|0,j|0,I|0)|0;l=C;I=ph(j|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(N|0,l|0,I|0,C|0)|0;l=C;M=I^M;E=l^E;N=oh(M|0,E|0,24)|0;j=C;E=ph(M|0,E|0,40)|0;E=E|N;j=C|j;M=lh(E|0,j|0,O|0,G|0)|0;H=C;G=ph(O|0,G|0,1)|0;G=wh(N|0,0,G&-2|0,C&1|0)|0;G=lh(M|0,H|0,G|0,C|0)|0;H=C;c[L>>2]=G;c[L+4>>2]=H;K=G^K;k=H^k;H=oh(K|0,k|0,16)|0;G=C;k=ph(K|0,k|0,48)|0;k=k|H;G=C|G;c[J>>2]=k;c[J+4>>2]=G;G=lh(k|0,G|0,I|0,l|0)|0;k=C;l=ph(I|0,l|0,1)|0;l=wh(H|0,0,l&-2|0,C&1|0)|0;l=lh(G|0,k|0,l|0,C|0)|0;k=C;c[F>>2]=l;c[F+4>>2]=k;E=l^E;j=k^j;k=oh(E|0,j|0,63)|0;l=C;j=ph(E|0,j|0,1)|0;c[D>>2]=j|k;c[D+4>>2]=C|l;e=e+1|0}while((e|0)!=8);e=0;do{S=e<<1;D=z+(S<<3)|0;V=D;T=c[V>>2]|0;V=c[V+4>>2]|0;da=z+(S+32<<3)|0;J=da;aa=c[J>>2]|0;J=c[J+4>>2]|0;L=lh(aa|0,J|0,T|0,V|0)|0;P=C;V=ph(T|0,V|0,1)|0;V=wh(V&-2|0,C&1|0,aa|0,0)|0;V=lh(L|0,P|0,V|0,C|0)|0;P=C;L=z+(S+96<<3)|0;T=L;O=V^c[T>>2];T=P^c[T+4>>2];Y=z+(S+64<<3)|0;ca=Y;G=c[ca>>2]|0;ca=c[ca+4>>2]|0;Z=lh(T|0,O|0,G|0,ca|0)|0;X=C;ca=ph(G|0,ca|0,1)|0;ca=wh(T|0,0,ca&-2|0,C&1|0)|0;ca=lh(Z|0,X|0,ca|0,C|0)|0;X=C;aa=ca^aa;J=X^J;Z=oh(aa|0,J|0,24)|0;G=C;J=ph(aa|0,J|0,40)|0;J=J|Z;G=C|G;aa=lh(J|0,G|0,V|0,P|0)|0;ba=C;P=ph(V|0,P|0,1)|0;P=wh(Z|0,0,P&-2|0,C&1|0)|0;P=lh(aa|0,ba|0,P|0,C|0)|0;ba=C;aa=D;c[aa>>2]=P;c[aa+4>>2]=ba;T=P^T;O=ba^O;ba=oh(T|0,O|0,16)|0;P=C;O=ph(T|0,O|0,48)|0;O=O|ba;P=C|P;T=L;c[T>>2]=O;c[T+4>>2]=P;P=lh(O|0,P|0,ca|0,X|0)|0;O=C;X=ph(ca|0,X|0,1)|0;X=wh(ba|0,0,X&-2|0,C&1|0)|0;X=lh(P|0,O|0,X|0,C|0)|0;O=C;P=Y;c[P>>2]=X;c[P+4>>2]=O;J=X^J;G=O^G;O=oh(J|0,G|0,63)|0;X=C;G=ph(J|0,G|0,1)|0;J=da;c[J>>2]=G|O;c[J+4>>2]=C|X;J=z+((S|1)<<3)|0;X=J;O=c[X>>2]|0;X=c[X+4>>2]|0;G=z+(S+33<<3)|0;P=G;ba=c[P>>2]|0;P=c[P+4>>2]|0;ca=lh(ba|0,P|0,O|0,X|0)|0;T=C;X=ph(O|0,X|0,1)|0;X=wh(X&-2|0,C&1|0,ba|0,0)|0;X=lh(ca|0,T|0,X|0,C|0)|0;T=C;ca=z+(S+97<<3)|0;O=ca;aa=X^c[O>>2];O=T^c[O+4>>2];Z=z+(S+65<<3)|0;V=Z;M=c[V>>2]|0;V=c[V+4>>2]|0;N=lh(O|0,aa|0,M|0,V|0)|0;R=C;V=ph(M|0,V|0,1)|0;V=wh(O|0,0,V&-2|0,C&1|0)|0;V=lh(N|0,R|0,V|0,C|0)|0;R=C;ba=V^ba;P=R^P;N=oh(ba|0,P|0,24)|0;M=C;P=ph(ba|0,P|0,40)|0;P=P|N;M=C|M;ba=lh(P|0,M|0,X|0,T|0)|0;F=C;T=ph(X|0,T|0,1)|0;T=wh(N|0,0,T&-2|0,C&1|0)|0;T=lh(ba|0,F|0,T|0,C|0)|0;F=C;ba=J;c[ba>>2]=T;c[ba+4>>2]=F;O=T^O;aa=F^aa;F=oh(O|0,aa|0,16)|0;T=C;aa=ph(O|0,aa|0,48)|0;aa=aa|F;T=C|T;O=ca;c[O>>2]=aa;c[O+4>>2]=T;T=lh(aa|0,T|0,V|0,R|0)|0;aa=C;R=ph(V|0,R|0,1)|0;R=wh(F|0,0,R&-2|0,C&1|0)|0;R=lh(T|0,aa|0,R|0,C|0)|0;aa=C;T=Z;c[T>>2]=R;c[T+4>>2]=aa;P=R^P;M=aa^M;aa=oh(P|0,M|0,63)|0;R=C;M=ph(P|0,M|0,1)|0;P=G;c[P>>2]=M|aa;c[P+4>>2]=C|R;P=z+(S+16<<3)|0;R=P;aa=c[R>>2]|0;R=c[R+4>>2]|0;M=z+(S+48<<3)|0;T=M;F=c[T>>2]|0;T=c[T+4>>2]|0;V=lh(F|0,T|0,aa|0,R|0)|0;O=C;R=ph(aa|0,R|0,1)|0;R=wh(R&-2|0,C&1|0,F|0,0)|0;R=lh(V|0,O|0,R|0,C|0)|0;O=C;V=z+(S+112<<3)|0;aa=V;ba=R^c[aa>>2];aa=O^c[aa+4>>2];N=z+(S+80<<3)|0;X=N;Q=c[X>>2]|0;X=c[X+4>>2]|0;E=lh(aa|0,ba|0,Q|0,X|0)|0;I=C;X=ph(Q|0,X|0,1)|0;X=wh(aa|0,0,X&-2|0,C&1|0)|0;X=lh(E|0,I|0,X|0,C|0)|0;I=C;F=X^F;T=I^T;E=oh(F|0,T|0,24)|0;Q=C;T=ph(F|0,T|0,40)|0;T=T|E;Q=C|Q;F=lh(T|0,Q|0,R|0,O|0)|0;k=C;O=ph(R|0,O|0,1)|0;O=wh(E|0,0,O&-2|0,C&1|0)|0;O=lh(F|0,k|0,O|0,C|0)|0;k=C;F=P;c[F>>2]=O;c[F+4>>2]=k;aa=O^aa;ba=k^ba;k=oh(aa|0,ba|0,16)|0;O=C;ba=ph(aa|0,ba|0,48)|0;ba=ba|k;O=C|O;aa=V;c[aa>>2]=ba;c[aa+4>>2]=O;O=lh(ba|0,O|0,X|0,I|0)|0;ba=C;I=ph(X|0,I|0,1)|0;I=wh(k|0,0,I&-2|0,C&1|0)|0;I=lh(O|0,ba|0,I|0,C|0)|0;ba=C;T=I^T;Q=ba^Q;O=oh(T|0,Q|0,63)|0;k=C;Q=ph(T|0,Q|0,1)|0;T=M;c[T>>2]=Q|O;c[T+4>>2]=C|k;T=z+(S+17<<3)|0;k=T;O=c[k>>2]|0;k=c[k+4>>2]|0;Q=z+(S+49<<3)|0;X=Q;aa=c[X>>2]|0;X=c[X+4>>2]|0;F=lh(aa|0,X|0,O|0,k|0)|0;E=C;k=ph(O|0,k|0,1)|0;k=wh(k&-2|0,C&1|0,aa|0,0)|0;k=lh(F|0,E|0,k|0,C|0)|0;E=C;F=z+(S+113<<3)|0;O=F;R=k^c[O>>2];O=E^c[O+4>>2];S=z+(S+81<<3)|0;K=S;j=c[K>>2]|0;K=c[K+4>>2]|0;l=lh(O|0,R|0,j|0,K|0)|0;W=C;K=ph(j|0,K|0,1)|0;K=wh(O|0,0,K&-2|0,C&1|0)|0;K=lh(l|0,W|0,K|0,C|0)|0;W=C;aa=K^aa;X=W^X;l=oh(aa|0,X|0,24)|0;j=C;X=ph(aa|0,X|0,40)|0;X=X|l;j=C|j;aa=lh(X|0,j|0,k|0,E|0)|0;U=C;E=ph(k|0,E|0,1)|0;E=wh(l|0,0,E&-2|0,C&1|0)|0;E=lh(aa|0,U|0,E|0,C|0)|0;U=C;aa=T;c[aa>>2]=E;c[aa+4>>2]=U;O=E^O;R=U^R;U=oh(O|0,R|0,16)|0;E=C;R=ph(O|0,R|0,48)|0;R=R|U;E=C|E;O=lh(R|0,E|0,K|0,W|0)|0;aa=C;W=ph(K|0,W|0,1)|0;W=wh(U|0,0,W&-2|0,C&1|0)|0;W=lh(O|0,aa|0,W|0,C|0)|0;aa=C;X=W^X;j=aa^j;O=oh(X|0,j|0,63)|0;U=C;j=ph(X|0,j|0,1)|0;O=j|O;U=C|U;j=Q;c[j>>2]=O;c[j+4>>2]=U;j=D;X=c[j>>2]|0;j=c[j+4>>2]|0;K=G;l=c[K>>2]|0;K=c[K+4>>2]|0;k=lh(l|0,K|0,X|0,j|0)|0;H=C;j=ph(X|0,j|0,1)|0;j=wh(j&-2|0,C&1|0,l|0,0)|0;j=lh(k|0,H|0,j|0,C|0)|0;H=C;R=R^j;E=E^H;k=lh(E|0,R|0,I|0,ba|0)|0;X=C;ba=ph(I|0,ba|0,1)|0;ba=wh(E|0,0,ba&-2|0,C&1|0)|0;ba=lh(k|0,X|0,ba|0,C|0)|0;X=C;l=ba^l;K=X^K;k=oh(l|0,K|0,24)|0;I=C;K=ph(l|0,K|0,40)|0;K=K|k;I=C|I;l=lh(K|0,I|0,j|0,H|0)|0;$=C;H=ph(j|0,H|0,1)|0;H=wh(k|0,0,H&-2|0,C&1|0)|0;H=lh(l|0,$|0,H|0,C|0)|0;$=C;c[D>>2]=H;c[D+4>>2]=$;E=H^E;R=$^R;$=oh(E|0,R|0,16)|0;H=C;R=ph(E|0,R|0,48)|0;R=R|$;H=C|H;c[F>>2]=R;c[F+4>>2]=H;H=lh(R|0,H|0,ba|0,X|0)|0;R=C;X=ph(ba|0,X|0,1)|0;X=wh($|0,0,X&-2|0,C&1|0)|0;X=lh(H|0,R|0,X|0,C|0)|0;R=C;c[N>>2]=X;c[N+4>>2]=R;K=X^K;I=R^I;R=oh(K|0,I|0,63)|0;X=C;I=ph(K|0,I|0,1)|0;c[G>>2]=I|R;c[G+4>>2]=C|X;G=J;X=c[G>>2]|0;G=c[G+4>>2]|0;R=M;I=c[R>>2]|0;R=c[R+4>>2]|0;K=lh(I|0,R|0,X|0,G|0)|0;N=C;G=ph(X|0,G|0,1)|0;G=wh(G&-2|0,C&1|0,I|0,0)|0;G=lh(K|0,N|0,G|0,C|0)|0;N=C;K=L;X=G^c[K>>2];K=N^c[K+4>>2];H=lh(K|0,X|0,W|0,aa|0)|0;$=C;aa=ph(W|0,aa|0,1)|0;aa=wh(aa&-2|0,C&1|0,K|0,0)|0;aa=lh(H|0,$|0,aa|0,C|0)|0;$=C;I=aa^I;R=$^R;H=oh(I|0,R|0,24)|0;W=C;R=ph(I|0,R|0,40)|0;R=R|H;W=C|W;I=lh(R|0,W|0,G|0,N|0)|0;ba=C;N=ph(G|0,N|0,1)|0;N=wh(H|0,0,N&-2|0,C&1|0)|0;N=lh(I|0,ba|0,N|0,C|0)|0;ba=C;c[J>>2]=N;c[J+4>>2]=ba;K=N^K;X=ba^X;ba=oh(K|0,X|0,16)|0;N=C;X=ph(K|0,X|0,48)|0;X=X|ba;N=C|N;c[L>>2]=X;c[L+4>>2]=N;N=lh(X|0,N|0,aa|0,$|0)|0;X=C;$=ph(aa|0,$|0,1)|0;$=wh(ba|0,0,$&-2|0,C&1|0)|0;$=lh(N|0,X|0,$|0,C|0)|0;X=C;c[S>>2]=$;c[S+4>>2]=X;R=$^R;W=X^W;X=oh(R|0,W|0,63)|0;$=C;W=ph(R|0,W|0,1)|0;c[M>>2]=W|X;c[M+4>>2]=C|$;M=P;$=c[M>>2]|0;M=c[M+4>>2]|0;X=lh(O|0,U|0,$|0,M|0)|0;W=C;M=ph($|0,M|0,1)|0;M=wh(M&-2|0,C&1|0,O|0,0)|0;M=lh(X|0,W|0,M|0,C|0)|0;W=C;X=ca;$=M^c[X>>2];X=W^c[X+4>>2];R=Y;S=c[R>>2]|0;R=c[R+4>>2]|0;N=lh(X|0,$|0,S|0,R|0)|0;ba=C;R=ph(S|0,R|0,1)|0;R=wh(X|0,0,R&-2|0,C&1|0)|0;R=lh(N|0,ba|0,R|0,C|0)|0;ba=C;O=R^O;U=ba^U;N=oh(O|0,U|0,24)|0;S=C;U=ph(O|0,U|0,40)|0;U=U|N;S=C|S;O=lh(U|0,S|0,M|0,W|0)|0;aa=C;W=ph(M|0,W|0,1)|0;W=wh(N|0,0,W&-2|0,C&1|0)|0;W=lh(O|0,aa|0,W|0,C|0)|0;aa=C;c[P>>2]=W;c[P+4>>2]=aa;X=W^X;$=aa^$;aa=oh(X|0,$|0,16)|0;W=C;$=ph(X|0,$|0,48)|0;$=$|aa;W=C|W;c[ca>>2]=$;c[ca+4>>2]=W;W=lh($|0,W|0,R|0,ba|0)|0;$=C;ba=ph(R|0,ba|0,1)|0;ba=wh(aa|0,0,ba&-2|0,C&1|0)|0;ba=lh(W|0,$|0,ba|0,C|0)|0;$=C;c[Y>>2]=ba;c[Y+4>>2]=$;U=ba^U;S=$^S;$=oh(U|0,S|0,63)|0;ba=C;S=ph(U|0,S|0,1)|0;c[Q>>2]=S|$;c[Q+4>>2]=C|ba;Q=T;ba=c[Q>>2]|0;Q=c[Q+4>>2]|0;$=da;S=c[$>>2]|0;$=c[$+4>>2]|0;U=lh(S|0,$|0,ba|0,Q|0)|0;Y=C;Q=ph(ba|0,Q|0,1)|0;Q=wh(Q&-2|0,C&1|0,S|0,0)|0;Q=lh(U|0,Y|0,Q|0,C|0)|0;Y=C;U=V;ba=Q^c[U>>2];U=Y^c[U+4>>2];W=Z;aa=c[W>>2]|0;W=c[W+4>>2]|0;R=lh(U|0,ba|0,aa|0,W|0)|0;ca=C;W=ph(aa|0,W|0,1)|0;W=wh(U|0,0,W&-2|0,C&1|0)|0;W=lh(R|0,ca|0,W|0,C|0)|0;ca=C;S=W^S;$=ca^$;R=oh(S|0,$|0,24)|0;aa=C;$=ph(S|0,$|0,40)|0;$=$|R;aa=C|aa;S=lh($|0,aa|0,Q|0,Y|0)|0;X=C;Y=ph(Q|0,Y|0,1)|0;Y=wh(R|0,0,Y&-2|0,C&1|0)|0;Y=lh(S|0,X|0,Y|0,C|0)|0;X=C;c[T>>2]=Y;c[T+4>>2]=X;U=Y^U;ba=X^ba;X=oh(U|0,ba|0,16)|0;Y=C;ba=ph(U|0,ba|0,48)|0;ba=ba|X;Y=C|Y;c[V>>2]=ba;c[V+4>>2]=Y;Y=lh(ba|0,Y|0,W|0,ca|0)|0;ba=C;ca=ph(W|0,ca|0,1)|0;ca=wh(X|0,0,ca&-2|0,C&1|0)|0;ca=lh(Y|0,ba|0,ca|0,C|0)|0;ba=C;c[Z>>2]=ca;c[Z+4>>2]=ba;$=ca^$;aa=ba^aa;ba=oh($|0,aa|0,63)|0;ca=C;aa=ph($|0,aa|0,1)|0;c[da>>2]=aa|ba;c[da+4>>2]=C|ca;e=e+1|0}while((e|0)!=8);qh(g|0,A|0,1024)|0;e=0;do{ba=z+(e<<3)|0;da=h+(p<<10)+(e<<3)|0;aa=da;ca=c[aa+4>>2]^c[ba+4>>2];c[da>>2]=c[aa>>2]^c[ba>>2];c[da+4>>2]=ca;e=e+1|0}while((e|0)!=128)}else ee(h+(m<<10)|0,e,g);e=f+1|0;if(e>>>0>=(c[w>>2]|0)>>>0)break;l=c[u>>2]|0;p=p+1|0;f=e;e=m+1|0}c[d+12>>2]=f}gh(y);da=0;i=B;return da|0}function id(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;A=b;w=A;w=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;A=A+4|0;A=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;i=b+8|0;e=i;e=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;i=i+4|0;i=d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24;P=b+16|0;R=P;R=d[R>>0]|d[R+1>>0]<<8|d[R+2>>0]<<16|d[R+3>>0]<<24;P=P+4|0;P=d[P>>0]|d[P+1>>0]<<8|d[P+2>>0]<<16|d[P+3>>0]<<24;F=b+24|0;H=F;H=d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24;F=F+4|0;F=d[F>>0]|d[F+1>>0]<<8|d[F+2>>0]<<16|d[F+3>>0]<<24;j=b+32|0;g=j;g=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;j=j+4|0;j=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;o=b+40|0;k=o;k=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;o=o+4|0;o=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;z=b+48|0;U=z;U=d[U>>0]|d[U+1>>0]<<8|d[U+2>>0]<<16|d[U+3>>0]<<24;z=z+4|0;z=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;K=b+56|0;M=K;M=d[M>>0]|d[M+1>>0]<<8|d[M+2>>0]<<16|d[M+3>>0]<<24;K=K+4|0;K=d[K>>0]|d[K+1>>0]<<8|d[K+2>>0]<<16|d[K+3>>0]<<24;n=b+64|0;$=n;$=d[$>>0]|d[$+1>>0]<<8|d[$+2>>0]<<16|d[$+3>>0]<<24;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;B=b+72|0;y=B;y=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;B=B+4|0;B=d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24;t=b+80|0;ca=t;ca=d[ca>>0]|d[ca+1>>0]<<8|d[ca+2>>0]<<16|d[ca+3>>0]<<24;t=t+4|0;t=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=b+88|0;q=u;q=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;u=u+4|0;u=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;V=b+96|0;O=V;O=d[O>>0]|d[O+1>>0]<<8|d[O+2>>0]<<16|d[O+3>>0]<<24;V=V+4|0;V=d[V>>0]|d[V+1>>0]<<8|d[V+2>>0]<<16|d[V+3>>0]<<24;v=b+104|0;s=v;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;v=v+4|0;v=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;p=b+112|0;m=p;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;p=p+4|0;p=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;h=b+120|0;Y=h;Y=d[Y>>0]|d[Y+1>>0]<<8|d[Y+2>>0]<<16|d[Y+3>>0]<<24;h=h+4|0;h=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;sa=a;J=a+8|0;oa=J;na=c[oa>>2]|0;oa=c[oa+4>>2]|0;E=a+16|0;ka=E;ja=c[ka>>2]|0;ka=c[ka+4>>2]|0;x=a+24|0;ga=x;fa=c[ga>>2]|0;ga=c[ga+4>>2]|0;r=a+32|0;ma=r;la=c[ma>>2]|0;ma=c[ma+4>>2]|0;l=a+40|0;ia=l;ha=c[ia>>2]|0;ia=c[ia+4>>2]|0;f=a+48|0;ua=f;ta=c[ua>>2]|0;ua=c[ua+4>>2]|0;b=a+56|0;qa=b;pa=c[qa>>2]|0;qa=c[qa+4>>2]|0;ba=a+64|0;aa=c[ba>>2]^-1377402159;ba=c[ba+4>>2]^1359893119;_=a+72|0;Z=c[_>>2]^725511199;_=c[_+4>>2]^-1694144372;X=a+80|0;W=c[X>>2]^-79577749;X=c[X+4>>2]^528734635;ea=a+88|0;da=c[ea>>2]^327033209;ea=c[ea+4>>2]^1541459225;sa=lh(la|0,ma|0,c[sa>>2]|0,c[sa+4>>2]|0)|0;sa=lh(sa|0,C|0,w|0,A|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,-205731576,1779033703)|0;T=C;la=la^S;ma=ma^T;N=oh(la|0,ma|0,24)|0;Q=C;ma=ph(la|0,ma|0,40)|0;N=ma|N;Q=C|Q;ra=lh(N|0,Q|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,e|0,i|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;N=N^T;Q=Q^S;aa=oh(N|0,Q|0,63)|0;ba=C;Q=ph(N|0,Q|0,1)|0;aa=Q|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,R|0,P|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,-2067093701,-1150833019)|0;N=C;ha=ha^Q;ia=ia^N;I=oh(ha|0,ia|0,24)|0;L=C;ia=ph(ha|0,ia|0,40)|0;I=ia|I;L=C|L;na=lh(I|0,L|0,oa|0,na|0)|0;na=lh(na|0,C|0,H|0,F|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;I=I^N;L=L^Q;Z=oh(I|0,L|0,63)|0;_=C;L=ph(I|0,L|0,1)|0;Z=L|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,g|0,j|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,-23791573,1013904242)|0;I=C;ta=ta^L;ua=ua^I;D=oh(ta|0,ua|0,24)|0;G=C;ua=ph(ta|0,ua|0,40)|0;D=ua|D;G=C|G;ja=lh(D|0,G|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,k|0,o|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;D=D^I;G=G^L;W=oh(D|0,G|0,63)|0;X=C;G=ph(D|0,G|0,1)|0;W=G|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,U|0,z|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,1595750129,-1521486534)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,M|0,K|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,$|0,n|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,y|0,B|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,ca|0,t|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,q|0,u|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,O|0,V|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,s|0,v|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,m|0,p|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,Y|0,h|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,m|0,p|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,ca|0,t|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,g|0,j|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,$|0,n|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,y|0,B|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,Y|0,h|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,s|0,v|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,U|0,z|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,e|0,i|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,O|0,V|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,w|0,A|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,R|0,P|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,q|0,u|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,M|0,K|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,k|0,o|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,H|0,F|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,q|0,u|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,$|0,n|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,O|0,V|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,w|0,A|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,k|0,o|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,R|0,P|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,Y|0,h|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,s|0,v|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,ca|0,t|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,m|0,p|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,H|0,F|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,U|0,z|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,M|0,K|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,e|0,i|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,y|0,B|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,g|0,j|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,M|0,K|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,y|0,B|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,H|0,F|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,e|0,i|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,s|0,v|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,O|0,V|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,q|0,u|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,m|0,p|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,R|0,P|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,U|0,z|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,k|0,o|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,ca|0,t|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,g|0,j|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,w|0,A|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,Y|0,h|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,$|0,n|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,y|0,B|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,w|0,A|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,k|0,o|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,M|0,K|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,R|0,P|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,g|0,j|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,ca|0,t|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,Y|0,h|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,m|0,p|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,e|0,i|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,q|0,u|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,O|0,V|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,U|0,z|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,$|0,n|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,H|0,F|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,s|0,v|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,R|0,P|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,O|0,V|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,U|0,z|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,ca|0,t|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,w|0,A|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,q|0,u|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,$|0,n|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,H|0,F|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,g|0,j|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,s|0,v|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,M|0,K|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,k|0,o|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,Y|0,h|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,m|0,p|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,e|0,i|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,y|0,B|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,O|0,V|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,k|0,o|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,e|0,i|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,Y|0,h|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,m|0,p|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,s|0,v|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,g|0,j|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,ca|0,t|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,w|0,A|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,M|0,K|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,U|0,z|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,H|0,F|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,y|0,B|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,R|0,P|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,$|0,n|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,q|0,u|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,s|0,v|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,q|0,u|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,M|0,K|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,m|0,p|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,O|0,V|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,e|0,i|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,H|0,F|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,y|0,B|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,k|0,o|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,w|0,A|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,Y|0,h|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,g|0,j|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,$|0,n|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,U|0,z|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,R|0,P|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,ca|0,t|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,U|0,z|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,Y|0,h|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,m|0,p|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,y|0,B|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,q|0,u|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,H|0,F|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,w|0,A|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,$|0,n|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,O|0,V|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,R|0,P|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,s|0,v|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,M|0,K|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,e|0,i|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,g|0,j|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,ca|0,t|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,k|0,o|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,ca|0,t|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,R|0,P|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,$|0,n|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,g|0,j|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,M|0,K|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,U|0,z|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,e|0,i|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,k|0,o|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,Y|0,h|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,q|0,u|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,y|0,B|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,m|0,p|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,H|0,F|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,O|0,V|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,s|0,v|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,w|0,A|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,w|0,A|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,e|0,i|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,R|0,P|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,H|0,F|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,g|0,j|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,k|0,o|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,U|0,z|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,M|0,K|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,$|0,n|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,y|0,B|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,ca|0,t|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,q|0,u|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,O|0,V|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,s|0,v|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,m|0,p|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,Y|0,h|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;p=lh(sa|0,C|0,m|0,p|0)|0;m=C;X=X^p;W=W^m;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;sa=oh(ua|0,ta|0,24)|0;ra=C;ta=ph(ua|0,ta|0,40)|0;sa=ta|sa;ra=C|ra;m=lh(sa|0,ra|0,p|0,m|0)|0;t=lh(m|0,C|0,ca|0,t|0)|0;ca=C;W=W^t;X=X^ca;m=oh(W|0,X|0,16)|0;p=C;X=ph(W|0,X|0,48)|0;m=X|m;p=C|p;T=lh(m|0,p|0,S|0,T|0)|0;S=C;sa=sa^T;ra=ra^S;X=oh(sa|0,ra|0,63)|0;W=C;ra=ph(sa|0,ra|0,1)|0;X=ra|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;j=lh(oa|0,C|0,g|0,j|0)|0;g=C;ea=ea^j;da=da^g;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;oa=oh(qa|0,pa|0,24)|0;na=C;pa=ph(qa|0,pa|0,40)|0;oa=pa|oa;na=C|na;g=lh(oa|0,na|0,j|0,g|0)|0;n=lh(g|0,C|0,$|0,n|0)|0;$=C;da=da^n;ea=ea^$;g=oh(da|0,ea|0,16)|0;j=C;ea=ph(da|0,ea|0,48)|0;g=ea|g;j=C|j;N=lh(g|0,j|0,Q|0,N|0)|0;Q=C;oa=oa^N;na=na^Q;ea=oh(oa|0,na|0,63)|0;da=C;na=ph(oa|0,na|0,1)|0;ea=na|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;B=lh(ka|0,C|0,y|0,B|0)|0;y=C;ba=ba^B;aa=aa^y;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;ka=oh(ma|0,la|0,24)|0;ja=C;la=ph(ma|0,la|0,40)|0;ka=la|ka;ja=C|ja;y=lh(ka|0,ja|0,B|0,y|0)|0;h=lh(y|0,C|0,Y|0,h|0)|0;Y=C;aa=aa^h;ba=ba^Y;y=oh(aa|0,ba|0,16)|0;B=C;ba=ph(aa|0,ba|0,48)|0;y=ba|y;B=C|B;I=lh(y|0,B|0,L|0,I|0)|0;L=C;ka=ka^I;ja=ja^L;ba=oh(ka|0,ja|0,63)|0;aa=C;ja=ph(ka|0,ja|0,1)|0;ba=ja|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;v=lh(ga|0,C|0,s|0,v|0)|0;s=C;_=_^v;Z=Z^s;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;ga=oh(ia|0,ha|0,24)|0;fa=C;ha=ph(ia|0,ha|0,40)|0;ga=ha|ga;fa=C|fa;s=lh(ga|0,fa|0,v|0,s|0)|0;z=lh(s|0,C|0,U|0,z|0)|0;U=C;Z=Z^z;_=_^U;s=oh(Z|0,_|0,16)|0;v=C;_=ph(Z|0,_|0,48)|0;s=_|s;v=C|v;D=lh(s|0,v|0,G|0,D|0)|0;G=C;ga=ga^D;fa=fa^G;_=oh(ga|0,fa|0,63)|0;Z=C;fa=ph(ga|0,fa|0,1)|0;_=fa|_;Z=C|Z;ca=lh(ea|0,da|0,t|0,ca|0)|0;i=lh(ca|0,C|0,e|0,i|0)|0;e=C;s=s^i;v=v^e;L=lh(v|0,s|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;ca=oh(ea|0,da|0,24)|0;t=C;da=ph(ea|0,da|0,40)|0;ca=da|ca;t=C|t;e=lh(ca|0,t|0,i|0,e|0)|0;V=lh(e|0,C|0,O|0,V|0)|0;O=C;v=v^V;s=s^O;e=oh(v|0,s|0,16)|0;i=C;s=ph(v|0,s|0,48)|0;e=s|e;i=C|i;I=lh(e|0,i|0,L|0,I|0)|0;L=C;ca=ca^I;t=t^L;s=oh(ca|0,t|0,63)|0;v=C;t=ph(ca|0,t|0,1)|0;v=C|v;$=lh(ba|0,aa|0,n|0,$|0)|0;A=lh($|0,C|0,w|0,A|0)|0;w=C;m=m^A;p=p^w;G=lh(p|0,m|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;$=oh(ba|0,aa|0,24)|0;n=C;aa=ph(ba|0,aa|0,40)|0;$=aa|$;n=C|n;w=lh($|0,n|0,A|0,w|0)|0;P=lh(w|0,C|0,R|0,P|0)|0;R=C;p=p^P;m=m^R;w=oh(p|0,m|0,16)|0;A=C;m=ph(p|0,m|0,48)|0;w=m|w;A=C|A;D=lh(w|0,A|0,G|0,D|0)|0;G=C;$=$^D;n=n^G;m=oh($|0,n|0,63)|0;p=C;n=ph($|0,n|0,1)|0;p=C|p;Y=lh(_|0,Z|0,h|0,Y|0)|0;u=lh(Y|0,C|0,q|0,u|0)|0;q=C;g=g^u;j=j^q;S=lh(j|0,g|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;Y=oh(_|0,Z|0,24)|0;h=C;Z=ph(_|0,Z|0,40)|0;Y=Z|Y;h=C|h;q=lh(Y|0,h|0,u|0,q|0)|0;K=lh(q|0,C|0,M|0,K|0)|0;M=C;j=j^K;g=g^M;q=oh(j|0,g|0,16)|0;u=C;g=ph(j|0,g|0,48)|0;q=g|q;u=C|u;T=lh(q|0,u|0,S|0,T|0)|0;S=C;Y=Y^T;h=h^S;g=oh(Y|0,h|0,63)|0;j=C;h=ph(Y|0,h|0,1)|0;j=C|j;U=lh(X|0,W|0,z|0,U|0)|0;o=lh(U|0,C|0,k|0,o|0)|0;k=C;y=y^o;B=B^k;Q=lh(B|0,y|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;U=oh(X|0,W|0,24)|0;z=C;W=ph(X|0,W|0,40)|0;U=W|U;z=C|z;k=lh(U|0,z|0,o|0,k|0)|0;F=lh(k|0,C|0,H|0,F|0)|0;H=C;B=B^F;y=y^H;k=oh(B|0,y|0,16)|0;o=C;y=ph(B|0,y|0,48)|0;k=y|k;o=C|o;N=lh(k|0,o|0,Q|0,N|0)|0;Q=C;U=U^N;z=z^Q;y=oh(U|0,z|0,63)|0;B=C;z=ph(U|0,z|0,1)|0;U=a;S=O^c[U+4>>2]^S;O=a;c[O>>2]=V^c[U>>2]^T;c[O+4>>2]=S;O=J;a=R^c[O+4>>2]^Q;c[J>>2]=P^c[O>>2]^N;c[J+4>>2]=a;J=E;a=M^c[J+4>>2]^L;c[E>>2]=K^c[J>>2]^I;c[E+4>>2]=a;E=x;a=H^c[E+4>>2]^G;c[x>>2]=F^c[E>>2]^D;c[x+4>>2]=a;x=r;a=(C|B)^c[x+4>>2]^A;c[r>>2]=(z|y)^c[x>>2]^w;c[r+4>>2]=a;r=l;a=v^c[r+4>>2]^u;c[l>>2]=(t|s)^c[r>>2]^q;c[l+4>>2]=a;l=f;a=p^c[l+4>>2]^o;c[f>>2]=(n|m)^c[l>>2]^k;c[f+4>>2]=a;f=b;a=j^c[f+4>>2]^i;c[b>>2]=(h|g)^c[f>>2]^e;c[b+4>>2]=a;return}function jd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!(e<<24>>24))ra();k=e&255;if((e&255)>64)ra();h=b+352|0;e=c[h>>2]|0;i=b+64|0;do{if(e>>>0>128){m=i;f=c[m>>2]|0;m=c[m+4>>2]|0;g=lh(f|0,m|0,128,0)|0;e=i;c[e>>2]=g;c[e+4>>2]=C;e=b+72|0;g=e;g=lh((m>>>0>4294967295|(m|0)==-1&f>>>0>4294967167)&1|0,0,c[g>>2]|0,c[g+4>>2]|0)|0;f=e;c[f>>2]=g;c[f+4>>2]=C;f=b+96|0;id(b,f);g=(c[h>>2]|0)+-128|0;c[h>>2]=g;if(g>>>0<129){qh(f|0,b+224|0,g|0)|0;j=e;l=c[h>>2]|0;break}else za(32447,32479,335,32523)}else{j=b+72|0;l=e}}while(0);m=i;m=lh(c[m>>2]|0,c[m+4>>2]|0,l|0,0)|0;h=C;c[i>>2]=m;c[i+4>>2]=h;i=j;i=lh((h>>>0<0|(h|0)==0&m>>>0<l>>>0)&1|0,0,c[i>>2]|0,c[i+4>>2]|0)|0;m=j;c[m>>2]=i;c[m+4>>2]=C;if(!(a[b+356>>0]|0)){m=b+80|0;j=m;c[j>>2]=-1;m=m+4|0;c[m>>2]=-1;m=b+96|0;j=b+96+l|0;l=256-l|0;nh(j|0,0,l|0)|0;id(b,m);qh(d|0,b|0,k|0)|0;return}m=b+88|0;c[m>>2]=-1;c[m+4>>2]=-1;m=b+80|0;j=m;c[j>>2]=-1;m=m+4|0;c[m>>2]=-1;m=b+96|0;j=b+96+l|0;l=256-l|0;nh(j|0,0,l|0)|0;id(b,m);qh(d|0,b|0,k|0)|0;return}function kd(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;v=i=i+63&-64;i=i+496|0;m=v+360|0;if((d+-1|0)>>>0>63|j>>>0>64){b=-1;i=w;return b|0}if(d>>>0>=256)za(32557,32577,18,32629);if(j>>>0>=256)za(32656,32577,19,32629);u=d&255;l=j&255;if((e|0)==0&((f|0)!=0|(g|0)!=0))ra();if(!b)ra();if((u+-1&255)>63)ra();k=l<<24>>24==0;if(!((h|0)!=0|k))ra();if((l&255)>64)ra();do{if(!k)if((h|0)==0|(l+-1&255)>63)ra();else{k=j&255;nh(v+64|0,0,293)|0;l=v;n=400;t=l+40|0;do{c[l>>2]=c[n>>2];l=l+4|0;n=n+4|0}while((l|0)<(t|0));n=ph(k|0,0,8)|0;l=v;c[l>>2]=(n|d&255)^-222443256;c[l+4>>2]=C^1779033703;l=v+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=v+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=v+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=v+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=v+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=v+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;l=v+56|0;c[l>>2]=327033209;c[l+4>>2]=1541459225;nh(m+k|0,0,128-k|0)|0;qh(m|0,h|0,k|0)|0;k=v+352|0;l=v+96|0;n=m;t=l+128|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(t|0));c[k>>2]=128;n=128;break}else{nh(v+64|0,0,293)|0;l=v;n=400;t=l+40|0;do{c[l>>2]=c[n>>2];l=l+4|0;n=n+4|0}while((l|0)<(t|0));n=v;c[n>>2]=d&255^-222443256;c[n+4>>2]=1779033703;n=v+8|0;c[n>>2]=-2067093701;c[n+4>>2]=-1150833019;n=v+16|0;c[n>>2]=-23791573;c[n+4>>2]=1013904242;n=v+24|0;c[n>>2]=1595750129;c[n+4>>2]=-1521486534;n=v+32|0;c[n>>2]=-1377402159;c[n+4>>2]=1359893119;n=v+40|0;c[n>>2]=725511199;c[n+4>>2]=-1694144372;n=v+48|0;c[n>>2]=-79577749;c[n+4>>2]=528734635;n=v+56|0;c[n>>2]=327033209;c[n+4>>2]=1541459225;n=0}}while(0);a:do{if(!((f|0)==0&(g|0)==0)){o=v+352|0;p=v+96|0;q=v+64|0;r=v+72|0;s=v+224|0;m=e;l=n;d=g;h=f;while(1){j=256-l|0;k=v+96+l|0;if(!(d>>>0>0|(d|0)==0&h>>>0>j>>>0))break;qh(k|0,m|0,j|0)|0;c[o>>2]=(c[o>>2]|0)+j;t=q;l=c[t>>2]|0;t=c[t+4>>2]|0;f=lh(l|0,t|0,128,0)|0;n=q;c[n>>2]=f;c[n+4>>2]=C;n=r;n=lh((t>>>0>4294967295|(t|0)==-1&l>>>0>4294967167)&1|0,0,c[n>>2]|0,c[n+4>>2]|0)|0;l=r;c[l>>2]=n;c[l+4>>2]=C;id(v,p);l=p;n=s;t=l+128|0;do{c[l>>2]=c[n>>2];l=l+4|0;n=n+4|0}while((l|0)<(t|0));l=(c[o>>2]|0)+-128|0;c[o>>2]=l;k=kh(h|0,d|0,j|0,0)|0;if((h|0)==(j|0)&(d|0)==0)break a;else{m=m+j|0;d=C;h=k}}qh(k|0,m|0,h|0)|0;f=lh(c[o>>2]|0,0,h|0,d|0)|0;c[o>>2]=f}}while(0);jd(v,b,u);b=0;i=w;return b|0}function ld(b,e,f,g,h,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=i;z=i=i+63&-64;i=i+496|0;u=z+360|0;if((e+-1|0)>>>0>63|k>>>0>64){b=-1;i=A;return b|0}if(e>>>0>=256)za(32557,32577,36,32676);if(k>>>0>=256)za(32656,32577,37,32676);y=e&255;p=k&255;if((f|0)==0&((g|0)!=0|(h|0)!=0))ra();if(!b)ra();if((y+-1&255)>63)ra();n=(j|0)!=0;o=p<<24>>24==0;if(!(n|o))ra();if((p&255)>64)ra();if(o){if(!l){l=-1377402159;q=1359893119;r=725511199;s=-1694144372}else{q=l;x=q;q=q+4|0;s=l+8|0;r=s;s=s+4|0;l=(d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24)^-1377402159;q=(d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24)^1359893119;r=(d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24)^725511199;s=(d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24)^-1694144372}if(!m){n=-79577749;o=528734635;p=327033209;k=1541459225}else{o=m;n=o;o=o+4|0;k=m+8|0;p=k;k=k+4|0;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^-79577749;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^528734635;p=(d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)^327033209;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^1541459225}nh(z+64|0,0,293)|0;v=z;w=400;x=v+40|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));x=z;c[x>>2]=e&255^-222443256;c[x+4>>2]=1779033703;x=z+8|0;c[x>>2]=-2067093701;c[x+4>>2]=-1150833019;x=z+16|0;c[x>>2]=-23791573;c[x+4>>2]=1013904242;x=z+24|0;c[x>>2]=1595750129;c[x+4>>2]=-1521486534;x=z+32|0;c[x>>2]=l;c[x+4>>2]=q;x=z+40|0;c[x>>2]=r;c[x+4>>2]=s;x=z+48|0;c[x>>2]=n;c[x+4>>2]=o;n=z+56|0;c[n>>2]=p;c[n+4>>2]=k;n=0}else{if(!n)ra();t=k&255;if(!l){l=-1377402159;q=1359893119;r=725511199;s=-1694144372}else{q=l;x=q;q=q+4|0;s=l+8|0;r=s;s=s+4|0;l=(d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24)^-1377402159;q=(d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24)^1359893119;r=(d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24)^725511199;s=(d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24)^-1694144372}if(!m){n=528734635;o=327033209;p=1541459225;k=-79577749}else{n=m;k=n;n=n+4|0;p=m+8|0;o=p;p=p+4|0;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^528734635;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^327033209;p=(d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)^1541459225;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^-79577749}nh(z+64|0,0,293)|0;v=z;w=400;x=v+40|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));w=ph(t|0,0,8)|0;v=z;c[v>>2]=(w|e&255)^-222443256;c[v+4>>2]=C^1779033703;v=z+8|0;c[v>>2]=-2067093701;c[v+4>>2]=-1150833019;v=z+16|0;c[v>>2]=-23791573;c[v+4>>2]=1013904242;v=z+24|0;c[v>>2]=1595750129;c[v+4>>2]=-1521486534;v=z+32|0;c[v>>2]=l;c[v+4>>2]=q;v=z+40|0;c[v>>2]=r;c[v+4>>2]=s;v=z+48|0;c[v>>2]=k;c[v+4>>2]=n;n=z+56|0;c[n>>2]=o;c[n+4>>2]=p;nh(u+t|0,0,128-t|0)|0;qh(u|0,j|0,t|0)|0;n=z+352|0;v=z+96|0;w=u;x=v+128|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));c[n>>2]=128;n=128}a:do{if(!((g|0)==0&(h|0)==0)){r=z+352|0;s=z+96|0;t=z+64|0;m=z+72|0;j=z+224|0;q=f;l=h;k=g;while(1){p=256-n|0;n=z+96+n|0;if(!(l>>>0>0|(l|0)==0&k>>>0>p>>>0))break;qh(n|0,q|0,p|0)|0;c[r>>2]=(c[r>>2]|0)+p;x=t;v=c[x>>2]|0;x=c[x+4>>2]|0;g=lh(v|0,x|0,128,0)|0;w=t;c[w>>2]=g;c[w+4>>2]=C;w=m;w=lh((x>>>0>4294967295|(x|0)==-1&v>>>0>4294967167)&1|0,0,c[w>>2]|0,c[w+4>>2]|0)|0;v=m;c[v>>2]=w;c[v+4>>2]=C;id(z,s);v=s;w=j;x=v+128|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));n=(c[r>>2]|0)+-128|0;c[r>>2]=n;o=kh(k|0,l|0,p|0,0)|0;if((k|0)==(p|0)&(l|0)==0)break a;else{q=q+p|0;l=C;k=o}}qh(n|0,q|0,k|0)|0;g=lh(c[r>>2]|0,0,k|0,l|0)|0;c[r>>2]=g}}while(0);jd(z,b,y);b=0;i=A;return b|0}function md(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;m=i;l=i=i+63&-64;i=i+128|0;if(e>>>0>64|(f+-1|0)>>>0>63){b=-1;i=m;return b|0}if(f>>>0>=256)za(32557,32577,53,32717);if(e>>>0>=256)za(32656,32577,54,32717);g=f&255;if((d|0)==0|(e|0)==0){if((g+-1&255)>63)ra();nh(b+64|0,0,293)|0;e=b;h=400;j=e+48|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));l=b;c[l>>2]=f&255^-222443256;c[l+4>>2]=1779033703;l=b+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=b+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=b+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=b+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=b+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=b+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;b=b+56|0;c[b>>2]=327033209;c[b+4>>2]=1541459225;b=0;i=m;return b|0}k=e&255;if((g+-1&255)>63)ra();if((k+-1&255)>63)ra();g=e&255;nh(b+64|0,0,293)|0;e=b;h=400;j=e+48|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));h=ph(g|0,0,8)|0;e=b;c[e>>2]=(h|f&255)^-222443256;c[e+4>>2]=C^1779033703;e=b+8|0;c[e>>2]=-2067093701;c[e+4>>2]=-1150833019;e=b+16|0;c[e>>2]=-23791573;c[e+4>>2]=1013904242;e=b+24|0;c[e>>2]=1595750129;c[e+4>>2]=-1521486534;e=b+32|0;c[e>>2]=-1377402159;c[e+4>>2]=1359893119;e=b+40|0;c[e>>2]=725511199;c[e+4>>2]=-1694144372;e=b+48|0;c[e>>2]=-79577749;c[e+4>>2]=528734635;e=b+56|0;c[e>>2]=327033209;c[e+4>>2]=1541459225;nh(l+g|0,0,(k<<24>>24<0?0:128-g|0)|0)|0;qh(l|0,d|0,g|0)|0;g=b+352|0;e=b+96|0;h=l;j=e+128|0;do{a[e>>0]=a[h>>0]|0;e=e+1|0;h=h+1|0}while((e|0)<(j|0));c[g>>2]=128;b=0;i=m;return b|0}function nd(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=i;r=i=i+63&-64;i=i+128|0;if(f>>>0>64|(g+-1|0)>>>0>63){b=-1;i=v;return b|0}if(g>>>0>=256)za(32557,32577,77,32749);if(f>>>0>=256)za(32656,32577,78,32749);k=g&255;if((e|0)==0|(f|0)==0){if((k+-1&255)>63)ra();if(!h){l=-1377402159;m=1359893119;n=725511199;o=-1694144372}else{m=h;l=m;m=m+4|0;o=h+8|0;n=o;o=o+4|0;l=(d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)^-1377402159;m=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)^1359893119;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^725511199;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^-1694144372}if(!j){k=-79577749;f=528734635;h=327033209;j=1541459225}else{f=j;k=f;f=f+4|0;j=j+8|0;h=j;j=j+4|0;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^-79577749;f=(d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)^528734635;h=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)^327033209;j=(d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)^1541459225}nh(b+64|0,0,293)|0;s=b;t=400;u=s+48|0;do{c[s>>2]=c[t>>2];s=s+4|0;t=t+4|0}while((s|0)<(u|0));u=b;c[u>>2]=g&255^-222443256;c[u+4>>2]=1779033703;g=b+8|0;c[g>>2]=-2067093701;c[g+4>>2]=-1150833019;g=b+16|0;c[g>>2]=-23791573;c[g+4>>2]=1013904242;g=b+24|0;c[g>>2]=1595750129;c[g+4>>2]=-1521486534;g=b+32|0;c[g>>2]=l;c[g+4>>2]=m;g=b+40|0;c[g>>2]=n;c[g+4>>2]=o;g=b+48|0;c[g>>2]=k;c[g+4>>2]=f;b=b+56|0;c[b>>2]=h;c[b+4>>2]=j;b=0;i=v;return b|0}q=f&255;if((k+-1&255)>63)ra();if(!(q<<24>>24))ra();p=f&255;if((q&255)>64)ra();if(!h){l=-1377402159;m=1359893119;n=725511199;o=-1694144372}else{m=h;l=m;m=m+4|0;o=h+8|0;n=o;o=o+4|0;l=(d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)^-1377402159;m=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)^1359893119;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^725511199;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^-1694144372}if(!j){k=-79577749;f=528734635;h=327033209;j=1541459225}else{f=j;k=f;f=f+4|0;j=j+8|0;h=j;j=j+4|0;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^-79577749;f=(d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)^528734635;h=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)^327033209;j=(d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)^1541459225}nh(b+64|0,0,293)|0;s=b;t=400;u=s+48|0;do{c[s>>2]=c[t>>2];s=s+4|0;t=t+4|0}while((s|0)<(u|0));t=ph(p|0,0,8)|0;s=b;c[s>>2]=(t|g&255)^-222443256;c[s+4>>2]=C^1779033703;s=b+8|0;c[s>>2]=-2067093701;c[s+4>>2]=-1150833019;s=b+16|0;c[s>>2]=-23791573;c[s+4>>2]=1013904242;s=b+24|0;c[s>>2]=1595750129;c[s+4>>2]=-1521486534;s=b+32|0;c[s>>2]=l;c[s+4>>2]=m;s=b+40|0;c[s>>2]=n;c[s+4>>2]=o;s=b+48|0;c[s>>2]=k;c[s+4>>2]=f;k=b+56|0;c[k>>2]=h;c[k+4>>2]=j;nh(r+p|0,0,(q<<24>>24<0?0:128-p|0)|0)|0;qh(r|0,e|0,p|0)|0;k=b+352|0;s=b+96|0;t=r;u=s+128|0;do{a[s>>0]=a[t>>0]|0;s=s+1|0;t=t+1|0}while((s|0)<(u|0));c[k>>2]=128;b=0;i=v;return b|0}function od(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((e|0)==0&(f|0)==0)return 0;k=b+352|0;l=b+96|0;m=b+64|0;n=b+72|0;o=b+224|0;g=c[k>>2]|0;j=e;while(1){i=256-g|0;e=b+96+g|0;if(!(f>>>0>0|(f|0)==0&j>>>0>i>>>0))break;qh(e|0,d|0,i|0)|0;c[k>>2]=(c[k>>2]|0)+i;h=m;e=c[h>>2]|0;h=c[h+4>>2]|0;q=lh(e|0,h|0,128,0)|0;g=m;c[g>>2]=q;c[g+4>>2]=C;g=n;g=lh((h>>>0>4294967295|(h|0)==-1&e>>>0>4294967167)&1|0,0,c[g>>2]|0,c[g+4>>2]|0)|0;e=n;c[e>>2]=g;c[e+4>>2]=C;id(b,l);e=l;g=o;h=e+128|0;do{a[e>>0]=a[g>>0]|0;e=e+1|0;g=g+1|0}while((e|0)<(h|0));g=(c[k>>2]|0)+-128|0;c[k>>2]=g;e=kh(j|0,f|0,i|0,0)|0;if((j|0)==(i|0)&(f|0)==0){p=6;break}else{d=d+i|0;f=C;j=e}}if((p|0)==6)return 0;qh(e|0,d|0,j|0)|0;q=lh(c[k>>2]|0,0,j|0,f|0)|0;c[k>>2]=q;return 0}function pd(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0<256){jd(a,b,c&255);return 0}else za(32557,32577,106,32795);return 0}function qd(){return 64}function rd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+208|0;g=m+64|0;h=m;j=400;k=h+64|0;do{c[h>>2]=c[j>>2];h=h+4|0;j=j+4|0}while((h|0)<(k|0));h=ph(e|0,f|0,3)|0;j=C;k=oh(e|0,f|0,61)|0;l=m+72|0;c[l>>2]=h;c[l+4>>2]=j;l=g;c[l>>2]=k;c[l+4>>2]=C;l=m+80|0;if(f>>>0<0|(f|0)==0&e>>>0<128){qh(l|0,d|0,e|0)|0;Fd(m,b)|0;i=n;return 0}h=l;j=d;k=h+128|0;do{a[h>>0]=a[j>>0]|0;h=h+1|0;j=j+1|0}while((h|0)<(k|0));Ed(m,l);g=d+128|0;d=lh(e|0,f|0,-128,-1)|0;h=C;if(h>>>0>0|(h|0)==0&d>>>0>127)do{Ed(m,g);g=g+128|0;d=lh(d|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&d>>>0>127);qh(l|0,g|0,d|0)|0;Fd(m,b)|0;i=n;return 0}function sd(){return 32828}function td(){return 32}function ud(){return 104}function vd(a){a=a|0;var b=0;b=a+32|0;c[b>>2]=0;c[b+4>>2]=0;c[a>>2]=c[8066];c[a+4>>2]=c[8067];c[a+8>>2]=c[8068];c[a+12>>2]=c[8069];c[a+16>>2]=c[8070];c[a+20>>2]=c[8071];c[a+24>>2]=c[8072];c[a+28>>2]=c[8073];return 0}function wd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((d|0)==0&(e|0)==0)return 0;g=a+32|0;i=g;j=c[i>>2]|0;i=c[i+4>>2]|0;f=oh(j|0,i|0,3)|0;f=f&63;h=ph(d|0,e|0,3)|0;h=lh(j|0,i|0,h|0,C|0)|0;c[g>>2]=h;c[g+4>>2]=C;g=64-f|0;f=a+40+f|0;if(0>e>>>0|0==(e|0)&g>>>0>d>>>0){qh(f|0,b|0,d|0)|0;return 0}qh(f|0,b|0,g|0)|0;h=a+40|0;xd(a,h);f=b+g|0;b=kh(d|0,e|0,g|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&b>>>0>63)do{xd(a,f);f=f+64|0;b=lh(b|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&b>>>0>63);qh(h|0,f|0,b|0)|0;return 0}function xd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;f=i=i+63&-64;i=i+256|0;e=0;do{h=b+(e<<2)|0;c[f+(e<<2)>>2]=(d[h+2>>0]|0)<<8|(d[h+3>>0]|0)|(d[h+1>>0]|0)<<16|(d[h>>0]|0)<<24;e=e+1|0}while((e|0)!=16);b=c[f>>2]|0;e=16;do{h=c[f+(e+-2<<2)>>2]|0;j=b;b=c[f+(e+-15<<2)>>2]|0;c[f+(e<<2)>>2]=j+(c[f+(e+-7<<2)>>2]|0)+((h>>>19|h<<13)^h>>>10^(h>>>17|h<<15))+((b>>>18|b<<14)^b>>>3^(b>>>7|b<<25));e=e+1|0}while((e|0)!=64);u=c[a>>2]|0;s=a+4|0;t=c[s>>2]|0;q=a+8|0;r=c[q>>2]|0;o=a+12|0;m=a+16|0;n=c[m>>2]|0;k=a+20|0;l=c[k>>2]|0;e=a+24|0;b=c[e>>2]|0;j=a+28|0;h=(c[j>>2]|0)+1116352408+(c[f>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=(c[o>>2]|0)+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+1899447441+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+4>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1245643825+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+8>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-373957723+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+12>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+961987163+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+16>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1508970993+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+20>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1841331548+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+24>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1424204075+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+28>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-670586216+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+32>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+310598401+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+36>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+607225278+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+40>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+1426881987+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+44>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+1925078388+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+48>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-2132889090+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+52>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1680079193+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+56>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1046744716+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+60>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-459576895+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+64>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-272742522+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+68>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+264347078+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+72>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+604807628+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+76>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+770255983+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+80>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1249150122+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+84>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+1555081692+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+88>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+1996064986+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+92>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-1740746414+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+96>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-1473132947+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+100>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1341970488+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+104>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-1084653625+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+108>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-958395405+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+112>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-710438585+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+116>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+113926993+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+120>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+338241895+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+124>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+666307205+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+128>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+773529912+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+132>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+1294757372+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+136>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+1396182291+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+140>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+1695183700+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+144>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1986661051+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+148>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-2117940946+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+152>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1838011259+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+156>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-1564481375+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+160>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-1474664885+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+164>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1035236496+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+168>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-949202525+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+172>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-778901479+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+176>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-694614492+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+180>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-200395387+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+184>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+275423344+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+188>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+430227734+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+192>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+506948616+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+196>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+659060556+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+200>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+883997877+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+204>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+958139571+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+208>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1322822218+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+212>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+1537002063+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+216>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+1747873779+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+220>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+1955562222+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+224>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+2024104815+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+228>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-2067236844+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+232>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-1933114872+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+236>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-1866530822+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+240>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-1538233109+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+244>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1090935817+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+248>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;f=u+-965641998+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+252>>2]|0)+((h^b)&l^h)|0;c[a>>2]=(c[a>>2]|0)+(((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+f);c[s>>2]=(c[s>>2]|0)+t;c[q>>2]=(c[q>>2]|0)+r;c[o>>2]=(c[o>>2]|0)+p;c[m>>2]=(c[m>>2]|0)+(n+f);c[k>>2]=(c[k>>2]|0)+l;c[e>>2]=(c[e>>2]|0)+b;c[j>>2]=(c[j>>2]|0)+h;i=g;return}function yd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+16|0;l=b+32|0;e=l;f=c[e>>2]|0;e=c[e+4>>2]|0;a[m+7>>0]=f;g=oh(f|0,e|0,8)|0;a[m+6>>0]=g;g=oh(f|0,e|0,16)|0;a[m+5>>0]=g;g=oh(f|0,e|0,24)|0;a[m+4>>0]=g;a[m+3>>0]=e;g=oh(f|0,e|0,40)|0;a[m+2>>0]=g;g=oh(f|0,e|0,48)|0;a[m+1>>0]=g;g=oh(f|0,e|0,56)|0;a[m>>0]=g;g=oh(f|0,e|0,3)|0;g=g&63;k=g>>>0<56?56:120;j=k-g|0;do{if((k|0)!=(g|0)){h=ph(j|0,0,3)|0;f=lh(h|0,C|0,f|0,e|0)|0;e=C;h=l;c[h>>2]=f;c[h+4>>2]=e;h=64-g|0;g=b+40+g|0;if(j>>>0<h>>>0){qh(g|0,32835,j|0)|0;break}qh(g|0,32835,h|0)|0;k=b+40|0;xd(b,k);e=32835+h|0;g=kh(j|0,0,h|0,0)|0;f=C;if(f>>>0>0|(f|0)==0&g>>>0>63){do{xd(b,e);e=e+64|0;g=lh(g|0,f|0,-64,-1)|0;f=C}while(f>>>0>0|(f|0)==0&g>>>0>63);f=g}else f=g;qh(k|0,e|0,f|0)|0;e=l;f=c[e>>2]|0;e=c[e+4>>2]|0}}while(0);k=oh(f|0,e|0,3)|0;k=k&63;e=lh(f|0,e|0,64,0)|0;f=l;c[f>>2]=e;c[f+4>>2]=C;f=64-k|0;e=b+40+k|0;if(f>>>0>8){k=c[m>>2]|0;m=c[m+4>>2]|0;l=e;a[l>>0]=k;a[l+1>>0]=k>>8;a[l+2>>0]=k>>16;a[l+3>>0]=k>>24;e=e+4|0;a[e>>0]=m;a[e+1>>0]=m>>8;a[e+2>>0]=m>>16;a[e+3>>0]=m>>24;e=b}else{qh(e|0,m|0,f|0)|0;h=b+40|0;xd(b,h);e=m+f|0;g=kh(8,0,f|0,0)|0;f=C;if(f>>>0>0|(f|0)==0&g>>>0>63){do{xd(b,e);e=e+64|0;g=lh(g|0,f|0,-64,-1)|0;f=C}while(f>>>0>0|(f|0)==0&g>>>0>63);f=g}else f=g;qh(h|0,e|0,f|0)|0;e=b}e=c[e>>2]|0;a[d+3>>0]=e;a[d+2>>0]=e>>>8;a[d+1>>0]=e>>>16;a[d>>0]=e>>>24;e=c[b+4>>2]|0;a[d+7>>0]=e;a[d+6>>0]=e>>>8;a[d+5>>0]=e>>>16;a[d+4>>0]=e>>>24;e=c[b+8>>2]|0;a[d+11>>0]=e;a[d+10>>0]=e>>>8;a[d+9>>0]=e>>>16;a[d+8>>0]=e>>>24;e=c[b+12>>2]|0;a[d+15>>0]=e;a[d+14>>0]=e>>>8;a[d+13>>0]=e>>>16;a[d+12>>0]=e>>>24;e=c[b+16>>2]|0;a[d+19>>0]=e;a[d+18>>0]=e>>>8;a[d+17>>0]=e>>>16;a[d+16>>0]=e>>>24;e=c[b+20>>2]|0;a[d+23>>0]=e;a[d+22>>0]=e>>>8;a[d+21>>0]=e>>>16;a[d+20>>0]=e>>>24;e=c[b+24>>2]|0;a[d+27>>0]=e;a[d+26>>0]=e>>>8;a[d+25>>0]=e>>>16;a[d+24>>0]=e>>>24;e=c[b+28>>2]|0;a[d+31>>0]=e;a[d+30>>0]=e>>>8;a[d+29>>0]=e>>>16;a[d+28>>0]=e>>>24;e=b+104|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));i=n;return 0}function zd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;m=i;l=i=i+63&-64;i=i+112|0;g=l+32|0;k=g;c[k>>2]=0;c[k+4>>2]=0;c[l>>2]=c[8066];c[l+4>>2]=c[8067];c[l+8>>2]=c[8068];c[l+12>>2]=c[8069];c[l+16>>2]=c[8070];c[l+20>>2]=c[8071];c[l+24>>2]=c[8072];c[l+28>>2]=c[8073];if((e|0)==0&(f|0)==0){yd(l,b)|0;i=m;return 0}j=ph(e|0,f|0,3)|0;k=g;c[k>>2]=j;c[k+4>>2]=C;k=l+40|0;if(f>>>0<0|(f|0)==0&e>>>0<64){qh(k|0,d|0,e|0)|0;yd(l,b)|0;i=m;return 0}g=k;h=d;j=g+64|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));xd(l,k);g=d+64|0;j=lh(e|0,f|0,-64,-1)|0;h=C;if(h>>>0>0|(h|0)==0&j>>>0>63){do{xd(l,g);g=g+64|0;j=lh(j|0,h|0,-64,-1)|0;h=C}while(h>>>0>0|(h|0)==0&j>>>0>63);h=j}else h=j;qh(k|0,g|0,h|0)|0;yd(l,b)|0;i=m;return 0}function Ad(){return 64}function Bd(){return 208}function Cd(a){a=a|0;var b=0,d=0;b=a+64|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;b=400;d=a+64|0;do{c[a>>2]=c[b>>2];a=a+4|0;b=b+4|0}while((a|0)<(d|0));return 0}function Dd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;j=a+72|0;m=j;o=c[m>>2]|0;m=c[m+4>>2]|0;k=oh(o|0,m|0,3)|0;k=k&127;l=ph(d|0,e|0,3)|0;n=C;h=oh(d|0,e|0,61)|0;i=C;m=lh(o|0,m|0,l|0,n|0)|0;o=C;c[j>>2]=m;c[j+4>>2]=o;j=a+64|0;g=j;f=c[g>>2]|0;g=c[g+4>>2]|0;if(o>>>0<n>>>0|(o|0)==(n|0)&m>>>0<l>>>0){f=lh(f|0,g|0,1,0)|0;g=C;o=j;c[o>>2]=f;c[o+4>>2]=g}h=lh(f|0,g|0,h|0,i|0)|0;g=j;c[g>>2]=h;c[g+4>>2]=C;g=kh(128,0,k|0,0)|0;h=C;f=a+80+k|0;if(h>>>0>e>>>0|(h|0)==(e|0)&g>>>0>d>>>0){qh(f|0,b|0,d|0)|0;return 0}qh(f|0,b|0,g|0)|0;i=a+80|0;Ed(a,i);f=b+g|0;g=kh(d|0,e|0,g|0,h|0)|0;h=C;if(h>>>0>0|(h|0)==0&g>>>0>127)do{Ed(a,f);f=f+128|0;g=lh(g|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&g>>>0>127);qh(i|0,f|0,g|0)|0;return 0}function kg(a,b,e,f,g,h,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;m=i;l=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=m;return 0}c[l>>2]=1634760805;c[l+4>>2]=857760878;c[l+8>>2]=2036477234;c[l+12>>2]=1797285236;c[l+16>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;n=k+4|0;c[l+20>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+8|0;c[l+24>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+12|0;c[l+28>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+16|0;c[l+32>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+20|0;c[l+36>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+24|0;c[l+40>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;k=k+28|0;c[l+44>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;c[l+48>>2]=h;c[l+52>>2]=j;c[l+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;g=g+4|0;c[l+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(l,b,a,e,f);e=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(e|0));i=m;return 0}function lg(a,b,e,f,g,h,j){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;l=i;k=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=l;return 0}c[k>>2]=1634760805;c[k+4>>2]=857760878;c[k+8>>2]=2036477234;c[k+12>>2]=1797285236;c[k+16>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;m=j+4|0;c[k+20>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+8|0;c[k+24>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+12|0;c[k+28>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+16|0;c[k+32>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+20|0;c[k+36>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+24|0;c[k+40>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;j=j+28|0;c[k+44>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;c[k+48>>2]=h;c[k+52>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;j=g+4|0;c[k+56>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;g=g+8|0;c[k+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(k,b,a,e,f);e=k+64|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(e|0));i=l;return 0}function mg(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;k=i;j=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=k;return 0}c[j>>2]=1634760805;c[j+4>>2]=857760878;c[j+8>>2]=2036477234;c[j+12>>2]=1797285236;c[j+16>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;l=h+4|0;c[j+20>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+8|0;c[j+24>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+12|0;c[j+28>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+16|0;c[j+32>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[j+36>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[j+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[j+44>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;c[j+48>>2]=0;c[j+52>>2]=0;c[j+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;g=g+4|0;c[j+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(j,b,a,e,f);e=j+64|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(e|0));i=k;return 0}function ng(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;k=i;j=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=k;return 0}c[j>>2]=1634760805;c[j+4>>2]=857760878;c[j+8>>2]=2036477234;c[j+12>>2]=1797285236;c[j+16>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;l=h+4|0;c[j+20>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+8|0;c[j+24>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+12|0;c[j+28>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+16|0;c[j+32>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[j+36>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[j+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[j+44>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;c[j+48>>2]=0;c[j+52>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;h=g+4|0;c[j+56>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;g=g+8|0;c[j+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(j,b,a,e,f);e=j+64|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(e|0));i=k;return 0}function og(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;V=i;S=i=i+63&-64;i=i+64|0;if((g|0)==0&(h|0)==0){i=V;return}if(h>>>0>63|(h|0)==63&g>>>0>4294967232)ra();F=c[b>>2]|0;G=c[b+4>>2]|0;H=c[b+8>>2]|0;I=c[b+12>>2]|0;J=c[b+16>>2]|0;K=c[b+20>>2]|0;L=c[b+24>>2]|0;M=c[b+28>>2]|0;N=c[b+32>>2]|0;O=c[b+36>>2]|0;P=c[b+40>>2]|0;Q=c[b+44>>2]|0;T=b+48|0;U=b+52|0;R=c[b+56>>2]|0;E=c[b+60>>2]|0;b=0;k=c[T>>2]|0;B=c[U>>2]|0;while(1){D=h>>>0<0|(h|0)==0&g>>>0<64;if(D){b=S;j=b+64|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0));b=0;do{a[S+b>>0]=a[e+b>>0]|0;b=b+1|0}while(0<h>>>0|0==(h|0)&b>>>0<g>>>0);e=S;A=S;z=f}else{A=f;z=b}b=20;f=F;j=G;l=P;m=Q;n=k;o=B;p=R;q=E;r=H;s=I;t=J;u=K;v=L;w=M;x=N;y=O;do{ja=f+t|0;ea=ja^n;ea=ea<<16|ea>>>16;$=ea+x|0;W=$^t;W=W<<12|W>>>20;ja=W+ja|0;ea=ja^ea;ea=ea<<8|ea>>>24;$=ea+$|0;W=$^W;W=W<<7|W>>>25;fa=j+u|0;aa=fa^o;aa=aa<<16|aa>>>16;X=aa+y|0;ga=X^u;ga=ga<<12|ga>>>20;fa=ga+fa|0;aa=fa^aa;aa=aa<<8|aa>>>24;X=aa+X|0;ga=X^ga;ga=ga<<7|ga>>>25;ba=r+v|0;Y=ba^p;Y=Y<<16|Y>>>16;ha=Y+l|0;ca=ha^v;ca=ca<<12|ca>>>20;ba=ca+ba|0;Y=ba^Y;Y=Y<<8|Y>>>24;ha=Y+ha|0;ca=ha^ca;ca=ca<<7|ca>>>25;Z=s+w|0;ia=Z^q;ia=ia<<16|ia>>>16;da=ia+m|0;_=da^w;_=_<<12|_>>>20;Z=_+Z|0;ia=Z^ia;ia=ia<<8|ia>>>24;da=ia+da|0;_=da^_;_=_<<7|_>>>25;ja=ga+ja|0;ia=ja^ia;ia=ia<<16|ia>>>16;ha=ia+ha|0;ga=ha^ga;ga=ga<<12|ga>>>20;f=ga+ja|0;ia=f^ia;q=ia<<8|ia>>>24;l=q+ha|0;ga=l^ga;u=ga<<7|ga>>>25;fa=ca+fa|0;ea=fa^ea;ea=ea<<16|ea>>>16;da=ea+da|0;ca=da^ca;ca=ca<<12|ca>>>20;j=ca+fa|0;ea=j^ea;n=ea<<8|ea>>>24;m=n+da|0;ca=m^ca;v=ca<<7|ca>>>25;ba=_+ba|0;aa=ba^aa;aa=aa<<16|aa>>>16;$=aa+$|0;_=$^_;_=_<<12|_>>>20;r=_+ba|0;aa=r^aa;o=aa<<8|aa>>>24;x=o+$|0;_=x^_;w=_<<7|_>>>25;Z=W+Z|0;Y=Z^Y;Y=Y<<16|Y>>>16;X=Y+X|0;W=X^W;W=W<<12|W>>>20;s=W+Z|0;Y=s^Y;p=Y<<8|Y>>>24;y=p+X|0;W=y^W;t=W<<7|W>>>25;b=b+-2|0}while((b|0)!=0);b=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)^f+F;W=e+4|0;W=(d[W>>0]|d[W+1>>0]<<8|d[W+2>>0]<<16|d[W+3>>0]<<24)^j+G;X=e+8|0;X=(d[X>>0]|d[X+1>>0]<<8|d[X+2>>0]<<16|d[X+3>>0]<<24)^r+H;Y=e+12|0;Y=(d[Y>>0]|d[Y+1>>0]<<8|d[Y+2>>0]<<16|d[Y+3>>0]<<24)^s+I;Z=e+16|0;Z=(d[Z>>0]|d[Z+1>>0]<<8|d[Z+2>>0]<<16|d[Z+3>>0]<<24)^t+J;_=e+20|0;_=(d[_>>0]|d[_+1>>0]<<8|d[_+2>>0]<<16|d[_+3>>0]<<24)^u+K;$=e+24|0;$=(d[$>>0]|d[$+1>>0]<<8|d[$+2>>0]<<16|d[$+3>>0]<<24)^v+L;aa=e+28|0;aa=(d[aa>>0]|d[aa+1>>0]<<8|d[aa+2>>0]<<16|d[aa+3>>0]<<24)^w+M;ba=e+32|0;ba=(d[ba>>0]|d[ba+1>>0]<<8|d[ba+2>>0]<<16|d[ba+3>>0]<<24)^x+N;ca=e+36|0;ca=(d[ca>>0]|d[ca+1>>0]<<8|d[ca+2>>0]<<16|d[ca+3>>0]<<24)^y+O;da=e+40|0;da=(d[da>>0]|d[da+1>>0]<<8|d[da+2>>0]<<16|d[da+3>>0]<<24)^l+P;ea=e+44|0;ea=(d[ea>>0]|d[ea+1>>0]<<8|d[ea+2>>0]<<16|d[ea+3>>0]<<24)^m+Q;fa=e+48|0;fa=(d[fa>>0]|d[fa+1>>0]<<8|d[fa+2>>0]<<16|d[fa+3>>0]<<24)^n+k;ga=e+52|0;ga=(d[ga>>0]|d[ga+1>>0]<<8|d[ga+2>>0]<<16|d[ga+3>>0]<<24)^o+B;ha=e+56|0;ha=(d[ha>>0]|d[ha+1>>0]<<8|d[ha+2>>0]<<16|d[ha+3>>0]<<24)^p+R;ia=e+60|0;ia=(d[ia>>0]|d[ia+1>>0]<<8|d[ia+2>>0]<<16|d[ia+3>>0]<<24)^q+E;k=k+1|0;j=((k|0)==0&1)+B|0;a[A>>0]=b;a[A+1>>0]=b>>8;a[A+2>>0]=b>>16;a[A+3>>0]=b>>24;ja=A+4|0;a[ja>>0]=W;a[ja+1>>0]=W>>8;a[ja+2>>0]=W>>16;a[ja+3>>0]=W>>24;ja=A+8|0;a[ja>>0]=X;a[ja+1>>0]=X>>8;a[ja+2>>0]=X>>16;a[ja+3>>0]=X>>24;ja=A+12|0;a[ja>>0]=Y;a[ja+1>>0]=Y>>8;a[ja+2>>0]=Y>>16;a[ja+3>>0]=Y>>24;ja=A+16|0;a[ja>>0]=Z;a[ja+1>>0]=Z>>8;a[ja+2>>0]=Z>>16;a[ja+3>>0]=Z>>24;ja=A+20|0;a[ja>>0]=_;a[ja+1>>0]=_>>8;a[ja+2>>0]=_>>16;a[ja+3>>0]=_>>24;ja=A+24|0;a[ja>>0]=$;a[ja+1>>0]=$>>8;a[ja+2>>0]=$>>16;a[ja+3>>0]=$>>24;ja=A+28|0;a[ja>>0]=aa;a[ja+1>>0]=aa>>8;a[ja+2>>0]=aa>>16;a[ja+3>>0]=aa>>24;ja=A+32|0;a[ja>>0]=ba;a[ja+1>>0]=ba>>8;a[ja+2>>0]=ba>>16;a[ja+3>>0]=ba>>24;ja=A+36|0;a[ja>>0]=ca;a[ja+1>>0]=ca>>8;a[ja+2>>0]=ca>>16;a[ja+3>>0]=ca>>24;ja=A+40|0;a[ja>>0]=da;a[ja+1>>0]=da>>8;a[ja+2>>0]=da>>16;a[ja+3>>0]=da>>24;ja=A+44|0;a[ja>>0]=ea;a[ja+1>>0]=ea>>8;a[ja+2>>0]=ea>>16;a[ja+3>>0]=ea>>24;ja=A+48|0;a[ja>>0]=fa;a[ja+1>>0]=fa>>8;a[ja+2>>0]=fa>>16;a[ja+3>>0]=fa>>24;ja=A+52|0;a[ja>>0]=ga;a[ja+1>>0]=ga>>8;a[ja+2>>0]=ga>>16;a[ja+3>>0]=ga>>24;ja=A+56|0;a[ja>>0]=ha;a[ja+1>>0]=ha>>8;a[ja+2>>0]=ha>>16;a[ja+3>>0]=ha>>24;ja=A+60|0;a[ja>>0]=ia;a[ja+1>>0]=ia>>8;a[ja+2>>0]=ia>>16;a[ja+3>>0]=ia>>24;if(h>>>0<0|(h|0)==0&g>>>0<65)break;b=lh(g|0,h|0,-64,-1)|0;e=e+64|0;f=A+64|0;h=C;g=b;b=z;B=j}if((D?g|0:0)?(a[z>>0]=b,(g|0)!=1):0){b=1;do{a[z+b>>0]=a[A+b>>0]|0;b=b+1|0}while((b|0)!=(g|0))}c[T>>2]=k;c[U>>2]=j;i=V;return}function pg(){return 32}function qg(){return 24}function rg(){return 33245}function sg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+32|0;Fc(g,d,e,0)|0;Vg(a,b,c,d+16|0,g)|0;i=f;return 0}function tg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=i=i+63&-64;i=i+32|0;Fc(h,e,f,0)|0;Wg(a,b,c,d,e+16|0,0,0,h)|0;i=g;return 0}function ug(){return 32}function vg(){return 8}function wg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Wg(a,b,c,d,e,0,0,f)|0;return 0}function xg(){return 32}function yg(){return 24}function zg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+32|0;Fc(g,d,e,0)|0;Vg(a,b,c,d+16|0,g)|0;i=f;return 0}function Ag(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;j=i;k=i=i+63&-64;i=i+32|0;Fc(k,e,h,0)|0;Wg(a,b,c,d,e+16|0,f,g,k)|0;i=j;return 0}function Bg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=i=i+63&-64;i=i+32|0;Fc(h,e,f,0)|0;Wg(a,b,c,d,e+16|0,0,0,h)|0;i=g;return 0}function Cg(){return 16}function Dg(b,c){b=b|0;c=c|0;return((((a[c+15>>0]^a[b+15>>0]|(a[c+14>>0]^a[b+14>>0]|(a[c+13>>0]^a[b+13>>0]|(a[c+12>>0]^a[b+12>>0]|(a[c+11>>0]^a[b+11>>0]|(a[c+10>>0]^a[b+10>>0]|(a[c+9>>0]^a[b+9>>0]|(a[c+8>>0]^a[b+8>>0]|(a[c+7>>0]^a[b+7>>0]|(a[c+6>>0]^a[b+6>>0]|(a[c+5>>0]^a[b+5>>0]|(a[c+4>>0]^a[b+4>>0]|(a[c+3>>0]^a[b+3>>0]|(a[c+2>>0]^a[b+2>>0]|(a[c+1>>0]^a[b+1>>0]|a[c>>0]^a[b>>0])))))))))))))))&255)+511|0)>>>8&1)+-1|0}function Eg(){return 32}function Fg(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);return((d+511|0)>>>8&1)+-1|0}function Gg(){return 64}function Hg(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=64);return((d+511|0)>>>8&1)+-1|0}function Ig(){return 33254}function Jg(){return ma(0)|0}function Kg(){na(1);return}function Lg(a){a=a|0;var b=0,c=0;if(a>>>0<2){a=0;return a|0}b=((0-a|0)>>>0)%(a>>>0)|0;do{c=ma(0)|0}while(c>>>0<b>>>0);a=(c>>>0)%(a>>>0)|0;return a|0}function Mg(b,c){b=b|0;c=c|0;var d=0;if(!c)return;else d=0;do{a[b+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=(c|0));return}function Ng(){return 0}function Og(b,c,d){b=b|0;c=c|0;d=d|0;if(!(d>>>0<1|(d|0)==1&c>>>0<0))za(34e3,34020,162,34046);if(!c)return;else d=0;do{a[b+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=(c|0));return}function Pg(){var a=0,b=0;if(c[8520]|0){b=1;return b|0}na(1);a=ka(30)|0;if((a|0)>0)c[8521]=a;else a=c[8521]|0;if(a>>>0<16)ra();else b=0;do{ma(0)|0;b=b+1|0}while((b|0)!=16);c[8520]=1;b=0;return b|0}function Qg(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=f<<1;if(!(f>>>0<2147483647&g>>>0<c>>>0))ra();if(!f){f=0;f=b+f|0;a[f>>0]=0;return b|0}else c=0;do{j=d[e+c>>0]|0;i=j&15;j=j>>>4;h=c<<1;a[b+h>>0]=j+87+((j+65526|0)>>>8&217);a[b+(h|1)>>0]=((i<<8)+22272+(i+65526&55552)|0)>>>8;c=c+1|0}while((c|0)!=(f|0));j=b+g|0;a[j>>0]=0;return b|0}function Rg(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;a:do{if(!g){n=0;l=0;o=0;k=0}else{b:do{if(!h){n=0;r=0;l=0;k=0;while(1){p=d[f+l>>0]|0;m=p^48;o=(m+65526|0)>>>8;p=(p&223)+201|0;q=p&255;q=(q+65526^q+65520)>>>8;if(!((q|o)&255)){o=0;break a}m=q&p|o&m;if(n>>>0>=e>>>0){m=k;break b}if(!(k<<24>>24))m=m<<4&255;else{a[b+n>>0]=m|r&255;n=n+1|0;m=r}k=(k&255^255)&255;l=l+1|0;if(l>>>0<g>>>0)r=m;else{o=0;break a}}}else{n=0;t=0;l=0;k=0;while(1){s=k<<24>>24==0;c:do{if(!s){q=d[f+l>>0]|0;m=q^48;o=(m+65526|0)>>>8;q=(q&223)+201|0;p=q&255;p=(p+65526^p+65520)>>>8;if(!((p|o)&255)){o=0;break a}}else while(1){o=d[f+l>>0]|0;m=o^48;q=(m+65526|0)>>>8;r=(o&223)+201|0;p=r&255;p=(p+65526^p+65520)>>>8;if((p|q)&255|0){o=q;q=r;break c}if(!(ch(h,o)|0)){o=0;k=0;break a}l=l+1|0;if(l>>>0>=g>>>0){o=0;k=0;break a}}}while(0);m=p&q|o&m;if(n>>>0>=e>>>0){m=k;break b}if(s)m=m<<4&255;else{a[b+n>>0]=m|t&255;n=n+1|0;m=t}k=(k&255^255)&255;l=l+1|0;if(l>>>0<g>>>0)t=m;else{o=0;break a}}}}while(0);if(!(c[8522]|0))k=34132;else k=c[(oa()|0)+64>>2]|0;c[k>>2]=34;o=-1;k=m}}while(0);if(j|0)c[j>>2]=f+(((k<<24>>24!=0)<<31>>31)+l);if(!i)return o|0;c[i>>2]=n;return o|0}function Sg(){return 34058}function Tg(){return 9}function Ug(){return 2}function Vg(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=i;x=i=i+63&-64;i=i+112|0;s=x;w=x+48|0;x=x+16|0;if((e|0)==0&(f|0)==0){i=y;return 0}k=x;j=k+32|0;do{a[k>>0]=a[h>>0]|0;k=k+1|0;h=h+1|0}while((k|0)<(j|0));q=g;p=q;q=q+4|0;q=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;r=s;c[r>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[r+4>>2]=q;r=s+8|0;q=r;c[q>>2]=0;c[q+4>>2]=0;if(f>>>0>0|(f|0)==0&e>>>0>63){k=s+9|0;l=s+10|0;m=s+11|0;n=s+12|0;o=s+13|0;p=s+14|0;q=s+15|0;g=b;j=e;h=f;do{Kc(g,s,x,0)|0;e=c[r>>2]|0;f=(e&255)+1|0;a[r>>0]=f;f=(e>>>8&255)+(f>>>8)|0;a[k>>0]=f;f=(e>>>16&255)+(f>>>8)|0;a[l>>0]=f;f=(e>>>24)+(f>>>8)|0;a[m>>0]=f;e=c[n>>2]|0;f=(e&255)+(f>>>8)|0;a[n>>0]=f;f=(e>>>8&255)+(f>>>8)|0;a[o>>0]=f;f=(e>>>16&255)+(f>>>8)|0;a[p>>0]=f;a[q>>0]=(e>>>24)+(f>>>8);j=lh(j|0,h|0,-64,-1)|0;h=C;g=g+64|0}while(h>>>0>0|(h|0)==0&j>>>0>63);if(!((j|0)==0&(h|0)==0)){u=g;v=j;t=6}}else{u=b;v=e;t=6}if((t|0)==6?(Kc(w,s,x,0)|0,v|0):0){h=0;do{a[u+h>>0]=a[w+h>>0]|0;h=h+1|0}while((h|0)!=(v|0))}k=w;j=k+64|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(j|0));k=x;j=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(j|0));i=y;return 0}function Wg(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0;D=i;B=i=i+63&-64;i=i+112|0;v=B;A=B+48|0;B=B+16|0;if((f|0)==0&(g|0)==0){i=D;return 0}n=B;m=n+32|0;do{a[n>>0]=a[l>>0]|0;n=n+1|0;l=l+1|0}while((n|0)<(m|0));s=h;p=s;s=s+4|0;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;o=v;c[o>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[o+4>>2]=s;o=v+8|0;a[o>>0]=j;s=oh(j|0,k|0,8)|0;p=v+9|0;a[p>>0]=s;s=oh(j|0,k|0,16)|0;q=v+10|0;a[q>>0]=s;s=oh(j|0,k|0,24)|0;r=v+11|0;a[r>>0]=s;s=v+12|0;a[s>>0]=k;n=oh(j|0,k|0,40)|0;t=v+13|0;a[t>>0]=n;n=oh(j|0,k|0,48)|0;u=v+14|0;a[u>>0]=n;k=oh(j|0,k|0,56)|0;j=v+15|0;a[j>>0]=k;if(g>>>0>0|(g|0)==0&f>>>0>63){n=e;h=f;l=g;do{Kc(A,v,B,0)|0;m=0;do{a[b+m>>0]=a[A+m>>0]^a[n+m>>0];m=m+1|0}while((m|0)!=64);f=c[o>>2]|0;g=(f&255)+1|0;a[o>>0]=g;g=(f>>>8&255)+(g>>>8)|0;a[p>>0]=g;g=(f>>>16&255)+(g>>>8)|0;a[q>>0]=g;g=(f>>>24)+(g>>>8)|0;a[r>>0]=g;f=c[s>>2]|0;g=(f&255)+(g>>>8)|0;a[s>>0]=g;g=(f>>>8&255)+(g>>>8)|0;a[t>>0]=g;g=(f>>>16&255)+(g>>>8)|0;a[u>>0]=g;a[j>>0]=(f>>>24)+(g>>>8);h=lh(h|0,l|0,-64,-1)|0;l=C;b=b+64|0;n=n+64|0}while(l>>>0>0|(l|0)==0&h>>>0>63);if(!((h|0)==0&(l|0)==0)){x=b;y=h;z=n;w=8}}else{x=b;y=f;z=e;w=8}if((w|0)==8?(Kc(A,v,B,0)|0,y|0):0){l=0;do{a[x+l>>0]=a[A+l>>0]^a[z+l>>0];l=l+1|0}while((l|0)!=(y|0))}n=A;m=n+64|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(m|0));n=B;m=n+32|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(m|0));i=D;return 0}function Xg(a){a=a|0;var b=0,d=0;d=i;b=i=i+63&-64;i=i+16|0;c[b>>2]=c[a+60>>2];a=pa(6,b|0)|0;if(a>>>0>4294963200){if(!(c[8522]|0))b=34132;else b=c[(oa()|0)+64>>2]|0;c[b>>2]=0-a;a=-1}i=d;return a|0}function Yg(){var a=0;if(!(c[8522]|0))a=34132;else a=c[(oa()|0)+64>>2]|0;return a|0}function Zg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=i;e=i=i+63&-64;i=i+32|0;h=e;e=e+20|0;c[h>>2]=c[a+60>>2];c[h+4>>2]=0;c[h+8>>2]=b;c[h+12>>2]=e;c[h+16>>2]=d;b=ya(140,h|0)|0;if(b>>>0<=4294963200)if((b|0)<0)f=7;else a=c[e>>2]|0;else{if(!(c[8522]|0))a=34132;else a=c[(oa()|0)+64>>2]|0;c[a>>2]=0-b;f=7}if((f|0)==7){c[e>>2]=-1;a=-1}i=g;return a|0}function _g(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=i;h=i=i+63&-64;i=i+80|0;f=h;c[b+36>>2]=20;if((c[b>>2]&64|0)==0?(c[f>>2]=c[b+60>>2],c[f+4>>2]=21505,c[f+8>>2]=h+12,wa(54,f|0)|0):0)a[b+75>>0]=-1;h=$g(b,d,e)|0;i=g;return h|0}function $g(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=i;k=i=i+63&-64;i=i+48|0;n=k+16|0;m=k;k=k+32|0;o=a+28|0;g=c[o>>2]|0;c[k>>2]=g;p=a+20|0;g=(c[p>>2]|0)-g|0;c[k+4>>2]=g;c[k+8>>2]=b;c[k+12>>2]=d;j=a+60|0;l=a+44|0;f=2;g=g+d|0;while(1){if(!(c[8522]|0)){c[n>>2]=c[j>>2];c[n+4>>2]=k;c[n+8>>2]=f;b=Aa(146,n|0)|0;if(b>>>0>4294963200){if(!(c[8522]|0))e=34132;else e=c[(oa()|0)+64>>2]|0;c[e>>2]=0-b;b=-1}}else{ua(18,a|0);c[m>>2]=c[j>>2];c[m+4>>2]=k;c[m+8>>2]=f;b=Aa(146,m|0)|0;if(b>>>0>4294963200){if(!(c[8522]|0))e=34132;else e=c[(oa()|0)+64>>2]|0;c[e>>2]=0-b;b=-1}ja(0)}if((g|0)==(b|0)){b=13;break}if((b|0)<0){b=15;break}g=g-b|0;e=c[k+4>>2]|0;if(b>>>0<=e>>>0)if((f|0)==2){c[o>>2]=(c[o>>2]|0)+b;h=e;e=k;f=2}else{h=e;e=k}else{h=c[l>>2]|0;c[o>>2]=h;c[p>>2]=h;h=c[k+12>>2]|0;b=b-e|0;e=k+8|0;f=f+-1|0}c[e>>2]=(c[e>>2]|0)+b;c[e+4>>2]=h-b;k=e}if((b|0)==13){n=c[l>>2]|0;c[a+16>>2]=n+(c[a+48>>2]|0);a=n;c[o>>2]=a;c[p>>2]=a}else if((b|0)==15){c[a+16>>2]=0;c[o>>2]=0;c[p>>2]=0;c[a>>2]=c[a>>2]|32;if((f|0)==2)d=0;else d=d-(c[k+4>>2]|0)|0}i=q;return d|0}function ah(a){a=a|0;return}function bh(b){b=b|0;var d=0,e=0,f=0;f=b;a:do{if(!(f&3))e=4;else{d=b;b=f;while(1){if(!(a[d>>0]|0))break a;d=d+1|0;b=d;if(!(b&3)){b=d;e=4;break}}}}while(0);if((e|0)==4){while(1){d=c[b>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009))b=b+4|0;else break}if((d&255)<<24>>24)do{b=b+1|0}while((a[b>>0]|0)!=0)}return b-f|0}function ch(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=d&255;a:do{if(!g){e=b+(bh(b)|0)|0;b=e;f=d&255;e=a[e>>0]|0}else{if(b&3){f=d&255;do{e=a[b>>0]|0;if(e<<24>>24==0?1:e<<24>>24==f<<24>>24)break a;b=b+1|0}while((b&3|0)!=0)}f=_(g,16843009)|0;e=c[b>>2]|0;b:do{if(!((e&-2139062144^-2139062144)&e+-16843009))do{g=e^f;if((g&-2139062144^-2139062144)&g+-16843009|0)break b;b=b+4|0;e=c[b>>2]|0}while(!((e&-2139062144^-2139062144)&e+-16843009|0))}while(0);f=d&255;while(1){e=a[b>>0]|0;if(e<<24>>24==0?1:e<<24>>24==f<<24>>24)break;else b=b+1|0}}}while(0);return(e<<24>>24==f<<24>>24?b:0)|0}function dh(a){a=a|0;var b=0;if(!a){if(!(c[8102]|0))a=0;else a=dh(c[8102]|0)|0;la(34116);b=c[8528]|0;if(b)do{if((c[b+20>>2]|0)>>>0>(c[b+28>>2]|0)>>>0)a=eh(b)|0|a;b=c[b+56>>2]|0}while((b|0)!=0);xa(34116)}else a=eh(a)|0;return a|0}function eh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a+20|0;g=a+28|0;if((c[b>>2]|0)>>>0>(c[g>>2]|0)>>>0?(Da[c[a+36>>2]&31](a,0,0)|0,(c[b>>2]|0)==0):0)b=-1;else{h=a+4|0;d=c[h>>2]|0;e=a+8|0;f=c[e>>2]|0;if(d>>>0<f>>>0)Da[c[a+40>>2]&31](a,d-f|0,1)|0;c[a+16>>2]=0;c[g>>2]=0;c[b>>2]=0;c[e>>2]=0;c[h>>2]=0;b=0}return b|0}function fh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;do{if(a>>>0<245){o=a>>>0<11?16:a+11&-8;a=o>>>3;j=c[8534]|0;b=j>>>a;if(b&3|0){b=(b&1^1)+a|0;d=34176+(b<<1<<2)|0;e=d+8|0;f=c[e>>2]|0;g=f+8|0;h=c[g>>2]|0;do{if((d|0)!=(h|0)){if(h>>>0<(c[8538]|0)>>>0)ra();a=h+12|0;if((c[a>>2]|0)==(f|0)){c[a>>2]=d;c[e>>2]=h;break}else ra()}else c[8534]=j&~(1<<b)}while(0);G=b<<3;c[f+4>>2]=G|3;G=f+G+4|0;c[G>>2]=c[G>>2]|1;G=g;return G|0}h=c[8536]|0;if(o>>>0>h>>>0){if(b|0){d=2<<a;d=b<<a&(d|0-d);d=(d&0-d)+-1|0;i=d>>>12&16;d=d>>>i;f=d>>>5&8;d=d>>>f;g=d>>>2&4;d=d>>>g;e=d>>>1&2;d=d>>>e;b=d>>>1&1;b=(f|i|g|e|b)+(d>>>b)|0;d=34176+(b<<1<<2)|0;e=d+8|0;g=c[e>>2]|0;i=g+8|0;f=c[i>>2]|0;do{if((d|0)!=(f|0)){if(f>>>0<(c[8538]|0)>>>0)ra();a=f+12|0;if((c[a>>2]|0)==(g|0)){c[a>>2]=d;c[e>>2]=f;k=c[8536]|0;break}else ra()}else{c[8534]=j&~(1<<b);k=h}}while(0);h=(b<<3)-o|0;c[g+4>>2]=o|3;e=g+o|0;c[e+4>>2]=h|1;c[e+h>>2]=h;if(k|0){f=c[8539]|0;b=k>>>3;d=34176+(b<<1<<2)|0;a=c[8534]|0;b=1<<b;if(a&b){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{l=a;m=b}}else{c[8534]=a|b;l=d+8|0;m=d}c[l>>2]=f;c[m+12>>2]=f;c[f+8>>2]=m;c[f+12>>2]=d}c[8536]=h;c[8539]=e;G=i;return G|0}a=c[8535]|0;if(a){i=(a&0-a)+-1|0;F=i>>>12&16;i=i>>>F;E=i>>>5&8;i=i>>>E;G=i>>>2&4;i=i>>>G;b=i>>>1&2;i=i>>>b;j=i>>>1&1;j=c[34440+((E|F|G|b|j)+(i>>>j)<<2)>>2]|0;i=(c[j+4>>2]&-8)-o|0;b=j;while(1){a=c[b+16>>2]|0;if(!a){a=c[b+20>>2]|0;if(!a)break}b=(c[a+4>>2]&-8)-o|0;G=b>>>0<i>>>0;i=G?b:i;b=a;j=G?a:j}f=c[8538]|0;if(j>>>0<f>>>0)ra();h=j+o|0;if(j>>>0>=h>>>0)ra();g=c[j+24>>2]|0;d=c[j+12>>2]|0;do{if((d|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){n=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<f>>>0)ra();else{c[b>>2]=0;n=a;break}}else{e=c[j+8>>2]|0;if(e>>>0<f>>>0)ra();a=e+12|0;if((c[a>>2]|0)!=(j|0))ra();b=d+8|0;if((c[b>>2]|0)==(j|0)){c[a>>2]=d;c[b>>2]=e;n=d;break}else ra()}}while(0);do{if(g|0){a=c[j+28>>2]|0;b=34440+(a<<2)|0;if((j|0)==(c[b>>2]|0)){c[b>>2]=n;if(!n){c[8535]=c[8535]&~(1<<a);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(j|0))c[a>>2]=n;else c[g+20>>2]=n;if(!n)break}b=c[8538]|0;if(n>>>0<b>>>0)ra();c[n+24>>2]=g;a=c[j+16>>2]|0;do{if(a|0)if(a>>>0<b>>>0)ra();else{c[n+16>>2]=a;c[a+24>>2]=n;break}}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[n+20>>2]=a;c[a+24>>2]=n;break}}}while(0);if(i>>>0<16){G=i+o|0;c[j+4>>2]=G|3;G=j+G+4|0;c[G>>2]=c[G>>2]|1}else{c[j+4>>2]=o|3;c[h+4>>2]=i|1;c[h+i>>2]=i;a=c[8536]|0;if(a|0){e=c[8539]|0;b=a>>>3;d=34176+(b<<1<<2)|0;a=c[8534]|0;b=1<<b;if(a&b){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{p=a;q=b}}else{c[8534]=a|b;p=d+8|0;q=d}c[p>>2]=e;c[q+12>>2]=e;c[e+8>>2]=q;c[e+12>>2]=d}c[8536]=i;c[8539]=h}G=j+8|0;return G|0}}}else if(a>>>0<=4294967231){a=a+11|0;o=a&-8;k=c[8535]|0;if(k){d=0-o|0;a=a>>>8;if(a)if(o>>>0>16777215)j=31;else{q=(a+1048320|0)>>>16&8;z=a<<q;p=(z+520192|0)>>>16&4;z=z<<p;j=(z+245760|0)>>>16&2;j=14-(p|q|j)+(z<<j>>>15)|0;j=o>>>(j+7|0)&1|j<<1}else j=0;b=c[34440+(j<<2)>>2]|0;a:do{if(!b){a=0;b=0;z=86}else{f=d;a=0;h=o<<((j|0)==31?0:25-(j>>>1)|0);i=b;b=0;while(1){e=c[i+4>>2]&-8;d=e-o|0;if(d>>>0<f>>>0)if((e|0)==(o|0)){a=i;b=i;z=90;break a}else b=i;else d=f;e=c[i+20>>2]|0;i=c[i+16+(h>>>31<<2)>>2]|0;a=(e|0)==0|(e|0)==(i|0)?a:e;e=(i|0)==0;if(e){z=86;break}else{f=d;h=h<<(e&1^1)}}}}while(0);if((z|0)==86){if((a|0)==0&(b|0)==0){a=2<<j;a=k&(a|0-a);if(!a)break;q=(a&0-a)+-1|0;m=q>>>12&16;q=q>>>m;l=q>>>5&8;q=q>>>l;n=q>>>2&4;q=q>>>n;p=q>>>1&2;q=q>>>p;a=q>>>1&1;a=c[34440+((l|m|n|p|a)+(q>>>a)<<2)>>2]|0}if(!a){i=d;j=b}else z=90}if((z|0)==90)while(1){z=0;q=(c[a+4>>2]&-8)-o|0;e=q>>>0<d>>>0;d=e?q:d;b=e?a:b;e=c[a+16>>2]|0;if(e|0){a=e;z=90;continue}a=c[a+20>>2]|0;if(!a){i=d;j=b;break}else z=90}if((j|0)!=0?i>>>0<((c[8536]|0)-o|0)>>>0:0){f=c[8538]|0;if(j>>>0<f>>>0)ra();h=j+o|0;if(j>>>0>=h>>>0)ra();g=c[j+24>>2]|0;d=c[j+12>>2]|0;do{if((d|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){s=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<f>>>0)ra();else{c[b>>2]=0;s=a;break}}else{e=c[j+8>>2]|0;if(e>>>0<f>>>0)ra();a=e+12|0;if((c[a>>2]|0)!=(j|0))ra();b=d+8|0;if((c[b>>2]|0)==(j|0)){c[a>>2]=d;c[b>>2]=e;s=d;break}else ra()}}while(0);do{if(g|0){a=c[j+28>>2]|0;b=34440+(a<<2)|0;if((j|0)==(c[b>>2]|0)){c[b>>2]=s;if(!s){c[8535]=c[8535]&~(1<<a);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(j|0))c[a>>2]=s;else c[g+20>>2]=s;if(!s)break}b=c[8538]|0;if(s>>>0<b>>>0)ra();c[s+24>>2]=g;a=c[j+16>>2]|0;do{if(a|0)if(a>>>0<b>>>0)ra();else{c[s+16>>2]=a;c[a+24>>2]=s;break}}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[s+20>>2]=a;c[a+24>>2]=s;break}}}while(0);do{if(i>>>0>=16){c[j+4>>2]=o|3;c[h+4>>2]=i|1;c[h+i>>2]=i;a=i>>>3;if(i>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;if(b&a){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{t=a;v=b}}else{c[8534]=b|a;t=d+8|0;v=d}c[t>>2]=h;c[v+12>>2]=h;c[h+8>>2]=v;c[h+12>>2]=d;break}a=i>>>8;if(a)if(i>>>0>16777215)d=31;else{F=(a+1048320|0)>>>16&8;G=a<<F;E=(G+520192|0)>>>16&4;G=G<<E;d=(G+245760|0)>>>16&2;d=14-(E|F|d)+(G<<d>>>15)|0;d=i>>>(d+7|0)&1|d<<1}else d=0;e=34440+(d<<2)|0;c[h+28>>2]=d;a=h+16|0;c[a+4>>2]=0;c[a>>2]=0;a=c[8535]|0;b=1<<d;if(!(a&b)){c[8535]=a|b;c[e>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}d=i<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(i|0)){z=148;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){z=145;break}else{d=d<<1;e=a}}if((z|0)==145)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}else if((z|0)==148){a=e+8|0;b=c[a>>2]|0;G=c[8538]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=h;c[a>>2]=h;c[h+8>>2]=b;c[h+12>>2]=e;c[h+24>>2]=0;break}else ra()}}else{G=i+o|0;c[j+4>>2]=G|3;G=j+G+4|0;c[G>>2]=c[G>>2]|1}}while(0);G=j+8|0;return G|0}}}else o=-1}while(0);d=c[8536]|0;if(d>>>0>=o>>>0){a=d-o|0;b=c[8539]|0;if(a>>>0>15){G=b+o|0;c[8539]=G;c[8536]=a;c[G+4>>2]=a|1;c[G+a>>2]=a;c[b+4>>2]=o|3}else{c[8536]=0;c[8539]=0;c[b+4>>2]=d|3;G=b+d+4|0;c[G>>2]=c[G>>2]|1}G=b+8|0;return G|0}a=c[8537]|0;if(a>>>0>o>>>0){E=a-o|0;c[8537]=E;G=c[8540]|0;F=G+o|0;c[8540]=F;c[F+4>>2]=E|1;c[G+4>>2]=o|3;G=G+8|0;return G|0}do{if(!(c[8652]|0)){a=ka(30)|0;if(!(a+-1&a)){c[8654]=a;c[8653]=a;c[8655]=-1;c[8656]=-1;c[8657]=0;c[8645]=0;c[8652]=(ta(0)|0)&-16^1431655768;break}else ra()}}while(0);h=o+48|0;e=c[8654]|0;i=o+47|0;d=e+i|0;e=0-e|0;j=d&e;if(j>>>0<=o>>>0){G=0;return G|0}a=c[8644]|0;if(a|0?(t=c[8642]|0,v=t+j|0,v>>>0<=t>>>0|v>>>0>a>>>0):0){G=0;return G|0}b:do{if(!(c[8645]&4)){b=c[8540]|0;c:do{if(b){f=34584;while(1){a=c[f>>2]|0;if(a>>>0<=b>>>0?(r=f+4|0,(a+(c[r>>2]|0)|0)>>>0>b>>>0):0)break;a=c[f+8>>2]|0;if(!a){z=173;break c}else f=a}a=d-(c[8537]|0)&e;if(a>>>0<2147483647){b=sa(a|0)|0;if((b|0)==((c[f>>2]|0)+(c[r>>2]|0)|0)){if((b|0)!=(-1|0)){h=b;g=a;z=193;break b}}else z=183}}else z=173}while(0);do{if((z|0)==173?(u=sa(0)|0,(u|0)!=(-1|0)):0){a=u;b=c[8653]|0;d=b+-1|0;if(!(d&a))a=j;else a=j-a+(d+a&0-b)|0;b=c[8642]|0;d=b+a|0;if(a>>>0>o>>>0&a>>>0<2147483647){v=c[8644]|0;if(v|0?d>>>0<=b>>>0|d>>>0>v>>>0:0)break;b=sa(a|0)|0;if((b|0)==(u|0)){h=u;g=a;z=193;break b}else z=183}}}while(0);d:do{if((z|0)==183){d=0-a|0;do{if(h>>>0>a>>>0&(a>>>0<2147483647&(b|0)!=(-1|0))?(w=c[8654]|0,w=i-a+w&0-w,w>>>0<2147483647):0)if((sa(w|0)|0)==(-1|0)){sa(d|0)|0;break d}else{a=w+a|0;break}}while(0);if((b|0)!=(-1|0)){h=b;g=a;z=193;break b}}}while(0);c[8645]=c[8645]|4;z=190}else z=190}while(0);if((((z|0)==190?j>>>0<2147483647:0)?(x=sa(j|0)|0,y=sa(0)|0,x>>>0<y>>>0&((x|0)!=(-1|0)&(y|0)!=(-1|0))):0)?(g=y-x|0,g>>>0>(o+40|0)>>>0):0){h=x;z=193}if((z|0)==193){a=(c[8642]|0)+g|0;c[8642]=a;if(a>>>0>(c[8643]|0)>>>0)c[8643]=a;k=c[8540]|0;do{if(k){f=34584;while(1){a=c[f>>2]|0;b=f+4|0;d=c[b>>2]|0;if((h|0)==(a+d|0)){z=203;break}e=c[f+8>>2]|0;if(!e)break;else f=e}if(((z|0)==203?(c[f+12>>2]&8|0)==0:0)?k>>>0<h>>>0&k>>>0>=a>>>0:0){c[b>>2]=d+g;G=k+8|0;G=(G&7|0)==0?0:0-G&7;F=k+G|0;G=g-G+(c[8537]|0)|0;c[8540]=F;c[8537]=G;c[F+4>>2]=G|1;c[F+G+4>>2]=40;c[8541]=c[8656];break}a=c[8538]|0;if(h>>>0<a>>>0){c[8538]=h;i=h}else i=a;b=h+g|0;a=34584;while(1){if((c[a>>2]|0)==(b|0)){z=211;break}a=c[a+8>>2]|0;if(!a){b=34584;break}}if((z|0)==211)if(!(c[a+12>>2]&8)){c[a>>2]=h;m=a+4|0;c[m>>2]=(c[m>>2]|0)+g;m=h+8|0;m=h+((m&7|0)==0?0:0-m&7)|0;a=b+8|0;a=b+((a&7|0)==0?0:0-a&7)|0;l=m+o|0;j=a-m-o|0;c[m+4>>2]=o|3;do{if((a|0)!=(k|0)){if((a|0)==(c[8539]|0)){G=(c[8536]|0)+j|0;c[8536]=G;c[8539]=l;c[l+4>>2]=G|1;c[l+G>>2]=G;break}b=c[a+4>>2]|0;if((b&3|0)==1){h=b&-8;f=b>>>3;e:do{if(b>>>0>=256){g=c[a+24>>2]|0;e=c[a+12>>2]|0;do{if((e|0)==(a|0)){e=a+16|0;d=e+4|0;b=c[d>>2]|0;if(!b){b=c[e>>2]|0;if(!b){E=0;break}else d=e}while(1){e=b+20|0;f=c[e>>2]|0;if(f|0){b=f;d=e;continue}e=b+16|0;f=c[e>>2]|0;if(!f)break;else{b=f;d=e}}if(d>>>0<i>>>0)ra();else{c[d>>2]=0;E=b;break}}else{f=c[a+8>>2]|0;if(f>>>0<i>>>0)ra();b=f+12|0;if((c[b>>2]|0)!=(a|0))ra();d=e+8|0;if((c[d>>2]|0)==(a|0)){c[b>>2]=e;c[d>>2]=f;E=e;break}else ra()}}while(0);if(!g)break;b=c[a+28>>2]|0;d=34440+(b<<2)|0;do{if((a|0)!=(c[d>>2]|0)){if(g>>>0<(c[8538]|0)>>>0)ra();b=g+16|0;if((c[b>>2]|0)==(a|0))c[b>>2]=E;else c[g+20>>2]=E;if(!E)break e}else{c[d>>2]=E;if(E|0)break;c[8535]=c[8535]&~(1<<b);break e}}while(0);e=c[8538]|0;if(E>>>0<e>>>0)ra();c[E+24>>2]=g;b=a+16|0;d=c[b>>2]|0;do{if(d|0)if(d>>>0<e>>>0)ra();else{c[E+16>>2]=d;c[d+24>>2]=E;break}}while(0);b=c[b+4>>2]|0;if(!b)break;if(b>>>0<(c[8538]|0)>>>0)ra();else{c[E+20>>2]=b;c[b+24>>2]=E;break}}else{d=c[a+8>>2]|0;e=c[a+12>>2]|0;b=34176+(f<<1<<2)|0;do{if((d|0)!=(b|0)){if(d>>>0<i>>>0)ra();if((c[d+12>>2]|0)==(a|0))break;ra()}}while(0);if((e|0)==(d|0)){c[8534]=c[8534]&~(1<<f);break}do{if((e|0)==(b|0))B=e+8|0;else{if(e>>>0<i>>>0)ra();b=e+8|0;if((c[b>>2]|0)==(a|0)){B=b;break}ra()}}while(0);c[d+12>>2]=e;c[B>>2]=d}}while(0);a=a+h|0;f=h+j|0}else f=j;a=a+4|0;c[a>>2]=c[a>>2]&-2;c[l+4>>2]=f|1;c[l+f>>2]=f;a=f>>>3;if(f>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;do{if(!(b&a)){c[8534]=b|a;F=d+8|0;G=d}else{a=d+8|0;b=c[a>>2]|0;if(b>>>0>=(c[8538]|0)>>>0){F=a;G=b;break}ra()}}while(0);c[F>>2]=l;c[G+12>>2]=l;c[l+8>>2]=G;c[l+12>>2]=d;break}a=f>>>8;do{if(!a)d=0;else{if(f>>>0>16777215){d=31;break}F=(a+1048320|0)>>>16&8;G=a<<F;E=(G+520192|0)>>>16&4;G=G<<E;d=(G+245760|0)>>>16&2;d=14-(E|F|d)+(G<<d>>>15)|0;d=f>>>(d+7|0)&1|d<<1}}while(0);e=34440+(d<<2)|0;c[l+28>>2]=d;a=l+16|0;c[a+4>>2]=0;c[a>>2]=0;a=c[8535]|0;b=1<<d;if(!(a&b)){c[8535]=a|b;c[e>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}d=f<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){z=281;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){z=278;break}else{d=d<<1;e=a}}if((z|0)==278)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}else if((z|0)==281){a=e+8|0;b=c[a>>2]|0;G=c[8538]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=l;c[a>>2]=l;c[l+8>>2]=b;c[l+12>>2]=e;c[l+24>>2]=0;break}else ra()}}else{G=(c[8537]|0)+j|0;c[8537]=G;c[8540]=l;c[l+4>>2]=G|1}}while(0);G=m+8|0;return G|0}else b=34584;while(1){a=c[b>>2]|0;if(a>>>0<=k>>>0?(A=a+(c[b+4>>2]|0)|0,A>>>0>k>>>0):0)break;b=c[b+8>>2]|0}f=A+-47|0;b=f+8|0;b=f+((b&7|0)==0?0:0-b&7)|0;f=k+16|0;b=b>>>0<f>>>0?k:b;a=b+8|0;d=h+8|0;d=(d&7|0)==0?0:0-d&7;G=h+d|0;d=g+-40-d|0;c[8540]=G;c[8537]=d;c[G+4>>2]=d|1;c[G+d+4>>2]=40;c[8541]=c[8656];d=b+4|0;c[d>>2]=27;c[a>>2]=c[8646];c[a+4>>2]=c[8647];c[a+8>>2]=c[8648];c[a+12>>2]=c[8649];c[8646]=h;c[8647]=g;c[8649]=0;c[8648]=a;a=b+24|0;do{a=a+4|0;c[a>>2]=7}while((a+4|0)>>>0<A>>>0);if((b|0)!=(k|0)){g=b-k|0;c[d>>2]=c[d>>2]&-2;c[k+4>>2]=g|1;c[b>>2]=g;a=g>>>3;if(g>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;if(b&a){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{C=a;D=b}}else{c[8534]=b|a;C=d+8|0;D=d}c[C>>2]=k;c[D+12>>2]=k;c[k+8>>2]=D;c[k+12>>2]=d;break}a=g>>>8;if(a)if(g>>>0>16777215)d=31;else{F=(a+1048320|0)>>>16&8;G=a<<F;E=(G+520192|0)>>>16&4;G=G<<E;d=(G+245760|0)>>>16&2;d=14-(E|F|d)+(G<<d>>>15)|0;d=g>>>(d+7|0)&1|d<<1}else d=0;e=34440+(d<<2)|0;c[k+28>>2]=d;c[k+20>>2]=0;c[f>>2]=0;a=c[8535]|0;b=1<<d;if(!(a&b)){c[8535]=a|b;c[e>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}d=g<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(g|0)){z=307;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){z=304;break}else{d=d<<1;e=a}}if((z|0)==304)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}else if((z|0)==307){a=e+8|0;b=c[a>>2]|0;G=c[8538]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=k;c[a>>2]=k;c[k+8>>2]=b;c[k+12>>2]=e;c[k+24>>2]=0;break}else ra()}}}else{G=c[8538]|0;if((G|0)==0|h>>>0<G>>>0)c[8538]=h;c[8646]=h;c[8647]=g;c[8649]=0;c[8543]=c[8652];c[8542]=-1;a=0;do{G=34176+(a<<1<<2)|0;c[G+12>>2]=G;c[G+8>>2]=G;a=a+1|0}while((a|0)!=32);G=h+8|0;G=(G&7|0)==0?0:0-G&7;F=h+G|0;G=g+-40-G|0;c[8540]=F;c[8537]=G;c[F+4>>2]=G|1;c[F+G+4>>2]=40;c[8541]=c[8656]}}while(0);a=c[8537]|0;if(a>>>0>o>>>0){E=a-o|0;c[8537]=E;G=c[8540]|0;F=G+o|0;c[8540]=F;c[F+4>>2]=E|1;c[G+4>>2]=o|3;G=G+8|0;return G|0}}if(!(c[8522]|0))a=34132;else a=c[(oa()|0)+64>>2]|0;c[a>>2]=12;G=0;return G|0}function gh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(!a)return;d=a+-8|0;h=c[8538]|0;if(d>>>0<h>>>0)ra();a=c[a+-4>>2]|0;b=a&3;if((b|0)==1)ra();e=a&-8;m=d+e|0;do{if(!(a&1)){a=c[d>>2]|0;if(!b)return;k=d+(0-a)|0;j=a+e|0;if(k>>>0<h>>>0)ra();if((k|0)==(c[8539]|0)){a=m+4|0;b=c[a>>2]|0;if((b&3|0)!=3){q=k;f=j;break}c[8536]=j;c[a>>2]=b&-2;c[k+4>>2]=j|1;c[k+j>>2]=j;return}e=a>>>3;if(a>>>0<256){b=c[k+8>>2]|0;d=c[k+12>>2]|0;a=34176+(e<<1<<2)|0;if((b|0)!=(a|0)){if(b>>>0<h>>>0)ra();if((c[b+12>>2]|0)!=(k|0))ra()}if((d|0)==(b|0)){c[8534]=c[8534]&~(1<<e);q=k;f=j;break}if((d|0)!=(a|0)){if(d>>>0<h>>>0)ra();a=d+8|0;if((c[a>>2]|0)==(k|0))g=a;else ra()}else g=d+8|0;c[b+12>>2]=d;c[g>>2]=b;q=k;f=j;break}g=c[k+24>>2]|0;d=c[k+12>>2]|0;do{if((d|0)==(k|0)){d=k+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){i=0;break}else b=d}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<h>>>0)ra();else{c[b>>2]=0;i=a;break}}else{e=c[k+8>>2]|0;if(e>>>0<h>>>0)ra();a=e+12|0;if((c[a>>2]|0)!=(k|0))ra();b=d+8|0;if((c[b>>2]|0)==(k|0)){c[a>>2]=d;c[b>>2]=e;i=d;break}else ra()}}while(0);if(g){a=c[k+28>>2]|0;b=34440+(a<<2)|0;if((k|0)==(c[b>>2]|0)){c[b>>2]=i;if(!i){c[8535]=c[8535]&~(1<<a);q=k;f=j;break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(k|0))c[a>>2]=i;else c[g+20>>2]=i;if(!i){q=k;f=j;break}}d=c[8538]|0;if(i>>>0<d>>>0)ra();c[i+24>>2]=g;a=k+16|0;b=c[a>>2]|0;do{if(b|0)if(b>>>0<d>>>0)ra();else{c[i+16>>2]=b;c[b+24>>2]=i;break}}while(0);a=c[a+4>>2]|0;if(a)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[i+20>>2]=a;c[a+24>>2]=i;q=k;f=j;break}else{q=k;f=j}}else{q=k;f=j}}else{q=d;f=e}}while(0);if(q>>>0>=m>>>0)ra();a=m+4|0;b=c[a>>2]|0;if(!(b&1))ra();if(!(b&2)){if((m|0)==(c[8540]|0)){p=(c[8537]|0)+f|0;c[8537]=p;c[8540]=q;c[q+4>>2]=p|1;if((q|0)!=(c[8539]|0))return;c[8539]=0;c[8536]=0;return}if((m|0)==(c[8539]|0)){p=(c[8536]|0)+f|0;c[8536]=p;c[8539]=q;c[q+4>>2]=p|1;c[q+p>>2]=p;return}f=(b&-8)+f|0;e=b>>>3;do{if(b>>>0>=256){g=c[m+24>>2]|0;a=c[m+12>>2]|0;do{if((a|0)==(m|0)){d=m+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){n=0;break}else b=d}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=0;n=a;break}}else{b=c[m+8>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();d=b+12|0;if((c[d>>2]|0)!=(m|0))ra();e=a+8|0;if((c[e>>2]|0)==(m|0)){c[d>>2]=a;c[e>>2]=b;n=a;break}else ra()}}while(0);if(g|0){a=c[m+28>>2]|0;b=34440+(a<<2)|0;if((m|0)==(c[b>>2]|0)){c[b>>2]=n;if(!n){c[8535]=c[8535]&~(1<<a);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(m|0))c[a>>2]=n;else c[g+20>>2]=n;if(!n)break}d=c[8538]|0;if(n>>>0<d>>>0)ra();c[n+24>>2]=g;a=m+16|0;b=c[a>>2]|0;do{if(b|0)if(b>>>0<d>>>0)ra();else{c[n+16>>2]=b;c[b+24>>2]=n;break}}while(0);a=c[a+4>>2]|0;if(a|0)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[n+20>>2]=a;c[a+24>>2]=n;break}}}else{b=c[m+8>>2]|0;d=c[m+12>>2]|0;a=34176+(e<<1<<2)|0;if((b|0)!=(a|0)){if(b>>>0<(c[8538]|0)>>>0)ra();if((c[b+12>>2]|0)!=(m|0))ra()}if((d|0)==(b|0)){c[8534]=c[8534]&~(1<<e);break}if((d|0)!=(a|0)){if(d>>>0<(c[8538]|0)>>>0)ra();a=d+8|0;if((c[a>>2]|0)==(m|0))l=a;else ra()}else l=d+8|0;c[b+12>>2]=d;c[l>>2]=b}}while(0);c[q+4>>2]=f|1;c[q+f>>2]=f;if((q|0)==(c[8539]|0)){c[8536]=f;return}}else{c[a>>2]=b&-2;c[q+4>>2]=f|1;c[q+f>>2]=f}a=f>>>3;if(f>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;if(b&a){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{o=a;p=b}}else{c[8534]=b|a;o=d+8|0;p=d}c[o>>2]=q;c[p+12>>2]=q;c[q+8>>2]=p;c[q+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)d=31;else{o=(a+1048320|0)>>>16&8;p=a<<o;n=(p+520192|0)>>>16&4;p=p<<n;d=(p+245760|0)>>>16&2;d=14-(n|o|d)+(p<<d>>>15)|0;d=f>>>(d+7|0)&1|d<<1}else d=0;e=34440+(d<<2)|0;c[q+28>>2]=d;c[q+20>>2]=0;c[q+16>>2]=0;a=c[8535]|0;b=1<<d;do{if(a&b){d=f<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){a=130;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){a=127;break}else{d=d<<1;e=a}}if((a|0)==127)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q;break}else if((a|0)==130){a=e+8|0;b=c[a>>2]|0;p=c[8538]|0;if(b>>>0>=p>>>0&e>>>0>=p>>>0){c[b+12>>2]=q;c[a>>2]=q;c[q+8>>2]=b;c[q+12>>2]=e;c[q+24>>2]=0;break}else ra()}}else{c[8535]=a|b;c[e>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q}}while(0);q=(c[8542]|0)+-1|0;c[8542]=q;if(!q)a=34592;else return;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0}c[8542]=-1;return}function hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;o=a+b|0;d=c[a+4>>2]|0;do{if(!(d&1)){g=c[a>>2]|0;if(!(d&3))return;l=a+(0-g)|0;k=g+b|0;i=c[8538]|0;if(l>>>0<i>>>0)ra();if((l|0)==(c[8539]|0)){a=o+4|0;d=c[a>>2]|0;if((d&3|0)!=3){r=l;f=k;break}c[8536]=k;c[a>>2]=d&-2;c[l+4>>2]=k|1;c[l+k>>2]=k;return}e=g>>>3;if(g>>>0<256){a=c[l+8>>2]|0;b=c[l+12>>2]|0;d=34176+(e<<1<<2)|0;if((a|0)!=(d|0)){if(a>>>0<i>>>0)ra();if((c[a+12>>2]|0)!=(l|0))ra()}if((b|0)==(a|0)){c[8534]=c[8534]&~(1<<e);r=l;f=k;break}if((b|0)!=(d|0)){if(b>>>0<i>>>0)ra();d=b+8|0;if((c[d>>2]|0)==(l|0))h=d;else ra()}else h=b+8|0;c[a+12>>2]=b;c[h>>2]=a;r=l;f=k;break}g=c[l+24>>2]|0;b=c[l+12>>2]|0;do{if((b|0)==(l|0)){b=l+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){j=0;break}else a=b}while(1){b=d+20|0;e=c[b>>2]|0;if(e|0){d=e;a=b;continue}b=d+16|0;e=c[b>>2]|0;if(!e)break;else{d=e;a=b}}if(a>>>0<i>>>0)ra();else{c[a>>2]=0;j=d;break}}else{e=c[l+8>>2]|0;if(e>>>0<i>>>0)ra();d=e+12|0;if((c[d>>2]|0)!=(l|0))ra();a=b+8|0;if((c[a>>2]|0)==(l|0)){c[d>>2]=b;c[a>>2]=e;j=b;break}else ra()}}while(0);if(g){d=c[l+28>>2]|0;a=34440+(d<<2)|0;if((l|0)==(c[a>>2]|0)){c[a>>2]=j;if(!j){c[8535]=c[8535]&~(1<<d);r=l;f=k;break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();d=g+16|0;if((c[d>>2]|0)==(l|0))c[d>>2]=j;else c[g+20>>2]=j;if(!j){r=l;f=k;break}}b=c[8538]|0;if(j>>>0<b>>>0)ra();c[j+24>>2]=g;d=l+16|0;a=c[d>>2]|0;do{if(a|0)if(a>>>0<b>>>0)ra();else{c[j+16>>2]=a;c[a+24>>2]=j;break}}while(0);d=c[d+4>>2]|0;if(d)if(d>>>0<(c[8538]|0)>>>0)ra();else{c[j+20>>2]=d;c[d+24>>2]=j;r=l;f=k;break}else{r=l;f=k}}else{r=l;f=k}}else{r=a;f=b}}while(0);h=c[8538]|0;if(o>>>0<h>>>0)ra();d=o+4|0;a=c[d>>2]|0;if(!(a&2)){if((o|0)==(c[8540]|0)){q=(c[8537]|0)+f|0;c[8537]=q;c[8540]=r;c[r+4>>2]=q|1;if((r|0)!=(c[8539]|0))return;c[8539]=0;c[8536]=0;return}if((o|0)==(c[8539]|0)){q=(c[8536]|0)+f|0;c[8536]=q;c[8539]=r;c[r+4>>2]=q|1;c[r+q>>2]=q;return}f=(a&-8)+f|0;e=a>>>3;do{if(a>>>0>=256){g=c[o+24>>2]|0;b=c[o+12>>2]|0;do{if((b|0)==(o|0)){b=o+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){n=0;break}else a=b}while(1){b=d+20|0;e=c[b>>2]|0;if(e|0){d=e;a=b;continue}b=d+16|0;e=c[b>>2]|0;if(!e)break;else{d=e;a=b}}if(a>>>0<h>>>0)ra();else{c[a>>2]=0;n=d;break}}else{e=c[o+8>>2]|0;if(e>>>0<h>>>0)ra();d=e+12|0;if((c[d>>2]|0)!=(o|0))ra();a=b+8|0;if((c[a>>2]|0)==(o|0)){c[d>>2]=b;c[a>>2]=e;n=b;break}else ra()}}while(0);if(g|0){d=c[o+28>>2]|0;a=34440+(d<<2)|0;if((o|0)==(c[a>>2]|0)){c[a>>2]=n;if(!n){c[8535]=c[8535]&~(1<<d);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();d=g+16|0;if((c[d>>2]|0)==(o|0))c[d>>2]=n;else c[g+20>>2]=n;if(!n)break}b=c[8538]|0;if(n>>>0<b>>>0)ra();c[n+24>>2]=g;d=o+16|0;a=c[d>>2]|0;do{if(a|0)if(a>>>0<b>>>0)ra();else{c[n+16>>2]=a;c[a+24>>2]=n;break}}while(0);d=c[d+4>>2]|0;if(d|0)if(d>>>0<(c[8538]|0)>>>0)ra();else{c[n+20>>2]=d;c[d+24>>2]=n;break}}}else{a=c[o+8>>2]|0;b=c[o+12>>2]|0;d=34176+(e<<1<<2)|0;if((a|0)!=(d|0)){if(a>>>0<h>>>0)ra();if((c[a+12>>2]|0)!=(o|0))ra()}if((b|0)==(a|0)){c[8534]=c[8534]&~(1<<e);break}if((b|0)!=(d|0)){if(b>>>0<h>>>0)ra();d=b+8|0;if((c[d>>2]|0)==(o|0))m=d;else ra()}else m=b+8|0;c[a+12>>2]=b;c[m>>2]=a}}while(0);c[r+4>>2]=f|1;c[r+f>>2]=f;if((r|0)==(c[8539]|0)){c[8536]=f;return}}else{c[d>>2]=a&-2;c[r+4>>2]=f|1;c[r+f>>2]=f}d=f>>>3;if(f>>>0<256){b=34176+(d<<1<<2)|0;a=c[8534]|0;d=1<<d;if(a&d){d=b+8|0;a=c[d>>2]|0;if(a>>>0<(c[8538]|0)>>>0)ra();else{p=d;q=a}}else{c[8534]=a|d;p=b+8|0;q=b}c[p>>2]=r;c[q+12>>2]=r;c[r+8>>2]=q;c[r+12>>2]=b;return}d=f>>>8;if(d)if(f>>>0>16777215)b=31;else{p=(d+1048320|0)>>>16&8;q=d<<p;o=(q+520192|0)>>>16&4;q=q<<o;b=(q+245760|0)>>>16&2;b=14-(o|p|b)+(q<<b>>>15)|0;b=f>>>(b+7|0)&1|b<<1}else b=0;e=34440+(b<<2)|0;c[r+28>>2]=b;c[r+20>>2]=0;c[r+16>>2]=0;d=c[8535]|0;a=1<<b;if(!(d&a)){c[8535]=d|a;c[e>>2]=r;c[r+24>>2]=e;c[r+12>>2]=r;c[r+8>>2]=r;return}b=f<<((b|0)==31?0:25-(b>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){d=127;break}a=e+16+(b>>>31<<2)|0;d=c[a>>2]|0;if(!d){d=124;break}else{b=b<<1;e=d}}if((d|0)==124){if(a>>>0<(c[8538]|0)>>>0)ra();c[a>>2]=r;c[r+24>>2]=e;c[r+12>>2]=r;c[r+8>>2]=r;return}else if((d|0)==127){d=e+8|0;a=c[d>>2]|0;q=c[8538]|0;if(!(a>>>0>=q>>>0&e>>>0>=q>>>0))ra();c[a+12>>2]=r;c[d>>2]=r;c[r+8>>2]=a;c[r+12>>2]=e;c[r+24>>2]=0;return}}function ih(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(b>>>0>4294967168){a=12;return a|0}if(b>>>0>=4294967168){if(!(c[8522]|0))b=34132;else b=c[(oa()|0)+64>>2]|0;c[b>>2]=12;a=12;return a|0}h=b>>>0<11?16:b+11&-8;b=fh(h+76|0)|0;if(!b){a=12;return a|0}e=b+-8|0;do{if(b&63){f=b+63&-64;j=f+-8|0;g=e;f=(j-g|0)>>>0>15?j:f+56|0;g=f-g|0;b=b+-4|0;j=c[b>>2]|0;d=(j&-8)-g|0;if(!(j&3)){c[f>>2]=(c[e>>2]|0)+g;c[f+4>>2]=d;e=f;break}else{j=f+4|0;c[j>>2]=d|c[j>>2]&1|2;d=f+d+4|0;c[d>>2]=c[d>>2]|1;c[b>>2]=g|c[b>>2]&1|2;c[j>>2]=c[j>>2]|1;hh(e,g);e=f;break}}}while(0);b=e+4|0;d=c[b>>2]|0;if(d&3|0?(i=d&-8,i>>>0>(h+16|0)>>>0):0){j=i-h|0;i=e+h|0;c[b>>2]=h|d&1|2;c[i+4>>2]=j|3;h=i+j+4|0;c[h>>2]=c[h>>2]|1;hh(i,j)}c[a>>2]=e+8;j=0;return j|0}function jh(){}function kh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return(C=d,a-c>>>0|0)|0}function lh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(C=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function mh(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=(b|0)<0?-1:0;return b>>c-32|0}function nh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;h=b&3;i=d|d<<8|d<<16|d<<24;g=f&~3;if(h){h=b+4-h|0;while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=i;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function oh(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=0;return b>>>c-32|0}function ph(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}C=a<<c-32;return 0}function qh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return va(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function rh(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else qh(b,c,d)|0;return b|0}function sh(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)>>0]|0)+24|0}function th(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=_(e,f)|0;d=a>>>16;a=(c>>>16)+(_(e,d)|0)|0;e=b>>>16;b=_(e,f)|0;return(C=(a>>>16)+(_(e,d)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|c&65535|0)|0}function uh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=kh(j^a|0,i^b|0,j|0,i|0)|0;g=C;a=f^j;b=e^i;return kh((zh(h,g,kh(f^c|0,e^d|0,f|0,e|0)|0,C,0)|0)^a|0,C^b|0,a|0,b|0)|0}function vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=kh(h^a|0,g^b|0,h|0,g|0)|0;b=C;zh(a,b,kh(l^d|0,k^e|0,l|0,k|0)|0,C,j)|0;e=kh(c[j>>2]^h|0,c[j+4>>2]^g|0,h|0,g|0)|0;d=C;i=f;return(C=d,e)|0}function wh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=th(e,f)|0;a=C;return(C=(_(b,f)|0)+(_(d,e)|0)+a|a&0,c|0|0)|0}function xh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return zh(a,b,c,d,0)|0}function yh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+16|0;f=g|0;zh(a,b,d,e,f)|0;i=g;return(C=c[f+4>>2]|0,c[f>>2]|0)|0}function zh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=b;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){c[f>>2]=(l>>>0)%(h>>>0);c[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return(C=n,f)|0}else{if(!g){n=0;f=0;return(C=n,f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;f=0;return(C=n,f)|0}}g=(i|0)==0;do{if(h){if(!g){g=(aa(i|0)|0)-(aa(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;b=g-31>>31;h=m;a=l>>>(m>>>0)&b|k<<i;b=k>>>(m>>>0)&b;g=0;i=l<<i;break}if(!f){n=0;f=0;return(C=n,f)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;n=0;f=0;return(C=n,f)|0}g=h-1|0;if(g&h|0){i=(aa(h|0)|0)+33-(aa(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;b=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&b;b=b&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){c[f>>2]=g&l;c[f+4>>2]=0}if((h|0)==1){o=j|b&0;p=a|0|0;return(C=o,p)|0}else{p=sh(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return(C=o,p)|0}}else{if(g){if(f|0){c[f>>2]=(k>>>0)%(h>>>0);c[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return(C=o,p)|0}if(!l){if(f|0){c[f>>2]=0;c[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return(C=o,p)|0}g=i-1|0;if(!(g&i)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=g&k|b&0}o=0;p=k>>>((sh(i|0)|0)>>>0);return(C=o,p)|0}g=(aa(i|0)|0)-(aa(k|0)|0)|0;if(g>>>0<=30){b=g+1|0;i=31-g|0;h=b;a=k<<i|l>>>(b>>>0);b=k>>>(b>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return(C=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(C=o,p)|0}}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=lh(m|0,l|0,-1,-1)|0;d=C;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|b<<1|0;kh(k|0,d|0,e|0,n|0)|0;p=C;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=kh(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;b=C;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){c[f>>2]=a;c[f+4>>2]=b}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return(C=o,p)|0}function Ah(a,b){a=a|0;b=b|0;return Ca[a&31](b|0)|0}function Bh(a){a=a|0;return ea(0,a|0)|0}function Ch(a){a=a|0;return ea(1,a|0)|0}function Dh(a){a=a|0;return ea(2,a|0)|0}function Eh(a){a=a|0;return ea(3,a|0)|0}function Fh(a){a=a|0;return ea(4,a|0)|0}function Gh(a){a=a|0;return ea(5,a|0)|0}function Hh(a){a=a|0;return ea(6,a|0)|0}function Ih(a){a=a|0;return ea(7,a|0)|0}function Jh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Da[a&31](b|0,c|0,d|0)|0}function Kh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(0,a|0,b|0,c|0)|0}function Lh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(1,a|0,b|0,c|0)|0}function Mh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(2,a|0,b|0,c|0)|0}function Nh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(3,a|0,b|0,c|0)|0}function Oh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(4,a|0,b|0,c|0)|0}function Ph(a,b,c){a=a|0;b=b|0;c=c|0;return ga(5,a|0,b|0,c|0)|0}function Qh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(6,a|0,b|0,c|0)|0}function Rh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(7,a|0,b|0,c|0)|0}function Sh(a,b){a=a|0;b=b|0;Ea[a&31](b|0)}function Th(a){a=a|0;ia(0,a|0)}function Uh(a){a=a|0;ia(1,a|0)}function Vh(a){a=a|0;ia(2,a|0)}function Wh(a){a=a|0;ia(3,a|0)}function Xh(a){a=a|0;ia(4,a|0)}function Yh(a){a=a|0;ia(5,a|0)}function Zh(a){a=a|0;ia(6,a|0)}function _h(a){a=a|0;ia(7,a|0)}function $h(a){a=a|0;ba(0);return 0}function ai(a,b,c){a=a|0;b=b|0;c=c|0;ba(1);return 0}function bi(a){a=a|0;ba(2)}var Ca=[$h,$h,Bh,$h,Ch,$h,Dh,$h,Eh,$h,Fh,$h,Gh,$h,Hh,$h,Ih,$h,Xg,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h];var Da=[ai,ai,Kh,ai,Lh,ai,Mh,ai,Nh,ai,Oh,ai,Ph,ai,Qh,ai,Rh,ai,_g,Zg,$g,ai,ai,ai,ai,ai,ai,ai,ai,ai,ai,ai];var Ea=[bi,bi,Th,bi,Uh,bi,Vh,bi,Wh,bi,Xh,bi,Yh,bi,Zh,bi,_h,bi,ah,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi];return{_crypto_onetimeauth_poly1305_init:Sd,_crypto_hash_sha512_init:Cd,_crypto_hash_primitive:sd,_crypto_onetimeauth_bytes:Id,_crypto_box_open:Tb,_crypto_stream_chacha20_ietf_noncebytes:hg,_crypto_stream_salsa20_xor:wg,_randombytes_buf:Mg,_crypto_auth_hmacsha512_verify:vb,_crypto_generichash_blake2b_keybytes_min:cd,_crypto_sign_open:Qf,_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive:Te,_crypto_sign_ed25519_keypair:_f,_crypto_scalarmult_curve25519_base:ef,_crypto_stream_salsa20:Vg,_crypto_sign_ed25519_open:cg,_sodium_init:Pg,_crypto_pwhash_scryptsalsa208sha256:Ue,_crypto_scalarmult_primitive:_e,_crypto_box_noncebytes:Ib,_crypto_aead_chacha20poly1305_ietf_keybytes:Wa,_crypto_aead_chacha20poly1305_ietf_encrypt_detached:Qa,_crypto_scalarmult_base:$e,_crypto_aead_chacha20poly1305_abytes:bb,_crypto_auth_bytes:cb,_crypto_pwhash_opslimit_sensitive:De,_crypto_pwhash_strbytes:xe,_crypto_auth_hmacsha512256_update:Ab,_memcpy:qh,_crypto_onetimeauth_poly1305:Qd,_crypto_sign_secretkeybytes:Lf,_crypto_generichash_primitive:Vc,_crypto_auth_hmacsha512256:Cb,_crypto_box_seed_keypair:Nb,_crypto_auth_hmacsha512_init:rb,_crypto_generichash_blake2b_keybytes_max:dd,_crypto_box_curve25519xsalsa20poly1305_macbytes:kc,_bitshift64Lshr:oh,_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive:Re,_crypto_sign_ed25519_sk_to_pk:Yf,_crypto_verify_16_bytes:Cg,_crypto_stream_xsalsa20:zg,_crypto_scalarmult_curve25519:df,_crypto_box_open_easy_afternm:_b,_crypto_auth_hmacsha512:ub,_crypto_stream_chacha20_ietf_xor_ic:lg,_crypto_hash:rd,_crypto_box_curve25519xsalsa20poly1305_seedbytes:dc,_crypto_box_zerobytes:Jb,_crypto_stream_salsa20_keybytes:ug,_crypto_auth_hmacsha512256_keybytes:xb,_crypto_aead_chacha20poly1305_keybytes:_a,_crypto_hash_sha512_bytes:Ad,_crypto_verify_32:Fg,_crypto_generichash_blake2b_final:pd,_crypto_generichash_blake2b_init_salt_personal:nd,_crypto_box_seal:ac,_crypto_core_hsalsa20_outputbytes:Gc,_free:gh,_crypto_sign_ed25519_publickeybytes:Vf,_crypto_core_hsalsa20_keybytes:Ic,_crypto_sign_primitive:Mf,_crypto_scalarmult_curve25519_bytes:ff,_crypto_auth_keybytes:db,_crypto_box:Sb,_crypto_stream_xsalsa20_noncebytes:yg,_crypto_onetimeauth_poly1305_keybytes:Wd,_crypto_box_beforenm:Pb,_crypto_box_curve25519xsalsa20poly1305_open_afternm:mc,_crypto_pwhash_scryptsalsa208sha256_saltbytes:Ne,_crypto_aead_chacha20poly1305_npubbytes:$a,_crypto_stream_primitive:rg,_crypto_pwhash_argon2i_str_verify:te,_crypto_pwhash_memlimit_sensitive:Ee,_crypto_shorthash:Ef,_crypto_onetimeauth_poly1305_bytes:Vd,_crypto_secretbox_detached:qf,_crypto_box_curve25519xsalsa20poly1305_seed_keypair:qc,_crypto_box_primitive:Mb,_crypto_pwhash_str:Ge,_crypto_box_detached_afternm:Ub,_crypto_stream_salsa20_xor_ic:Wg,_crypto_secretbox_xsalsa20poly1305_boxzerobytes:xf,_crypto_core_salsa20_constbytes:Oc,_crypto_auth_hmacsha512_keybytes:pb,_crypto_auth:eb,_crypto_auth_hmacsha512256_final:Bb,_randombytes_random:Jg,_crypto_stream_chacha20_keybytes:fg,_crypto_pwhash_str_verify:He,_crypto_sign_keypair:Of,_crypto_auth_hmacsha256_statebytes:ib,_crypto_generichash_keybytes_min:Sc,_crypto_generichash_statebytes:Wc,_randombytes:Og,_crypto_aead_chacha20poly1305_encrypt_detached:Oa,_randombytes_implementation_name:Ig,_crypto_core_salsa20_keybytes:Nc,_sodium_library_version_major:Tg,_crypto_hash_sha256_statebytes:ud,_crypto_pwhash_strprefix:ye,_crypto_box_afternm:Qb,_crypto_secretbox_primitive:nf,_i64Add:lh,_malloc:fh,_crypto_scalarmult_curve25519_scalarbytes:gf,_crypto_box_curve25519xsalsa20poly1305_keypair:rc,_crypto_hash_sha256_init:vd,_crypto_sign_ed25519_detached:dg,_crypto_pwhash_scryptsalsa208sha256_str_verify:We,_crypto_generichash_init:Yc,_crypto_generichash_keybytes_max:Tc,_crypto_sign_ed25519_pk_to_curve25519:$f,_crypto_stream_chacha20_ietf_xor:ng,_crypto_verify_64:Hg,_crypto_sign_publickeybytes:Kf,_crypto_shorthash_siphash24:Hf,_crypto_box_beforenmbytes:Hb,_crypto_stream_chacha20_ietf:jg,_crypto_generichash:Xc,_crypto_sign_ed25519:eg,_crypto_box_curve25519xsalsa20poly1305_open:pc,_crypto_pwhash_opslimit_interactive:ze,_sodium_hex2bin:Rg,_crypto_onetimeauth_poly1305_final:Ud,_crypto_auth_hmacsha256_init:jb,_crypto_aead_chacha20poly1305_ietf_encrypt:Ra,_crypto_aead_chacha20poly1305_ietf_nsecbytes:Ya,_crypto_box_curve25519xsalsa20poly1305_noncebytes:hc,_crypto_secretbox:of,_crypto_box_boxzerobytes:Kb,_crypto_pwhash_argon2i_saltbytes:ie,_crypto_hash_sha512_update:Dd,_crypto_onetimeauth_poly1305_verify:Rd,_crypto_box_curve25519xsalsa20poly1305_beforenmbytes:gc,_crypto_generichash_blake2b_init:md,_crypto_aead_chacha20poly1305_ietf_decrypt:Va,_crypto_auth_hmacsha512256_init:zb,_crypto_pwhash_primitive:Ie,_crypto_onetimeauth_keybytes:Jd,_crypto_pwhash_argon2i:re,_crypto_auth_hmacsha512_final:tb,_crypto_sign_ed25519_seedbytes:Uf,_crypto_auth_hmacsha512256_verify:Db,_crypto_auth_hmacsha256_final:lb,_crypto_box_secretkeybytes:Gb,_crypto_verify_16:Dg,_crypto_stream_chacha20_noncebytes:gg,_crypto_onetimeauth_update:Nd,_crypto_aead_chacha20poly1305_encrypt:Pa,_crypto_core_salsa20:Kc,_crypto_pwhash_scryptsalsa208sha256_ll:Le,_crypto_box_detached:Vb,_crypto_stream_xsalsa20_xor:Bg,_crypto_sign_seedbytes:Jf,_memset:nh,_crypto_pwhash_scryptsalsa208sha256_str:Ve,_crypto_generichash_blake2b_saltbytes:fd,_bitshift64Ashr:mh,_bitshift64Shl:ph,_sodium_version_string:Sg,_crypto_box_open_detached:Zb,_crypto_scalarmult_bytes:bf,_crypto_secretbox_xsalsa20poly1305:zf,_crypto_pwhash:Fe,_crypto_auth_verify:fb,_crypto_sign_ed25519_seed_keypair:Zf,_crypto_secretbox_xsalsa20poly1305_zerobytes:wf,_crypto_onetimeauth_poly1305_update:Td,_crypto_sign_detached:Rf,_crypto_verify_32_bytes:Eg,_crypto_box_curve25519xsalsa20poly1305_zerobytes:ic,_crypto_generichash_blake2b_keybytes:ed,_crypto_sign_ed25519_secretkeybytes:Wf,_crypto_stream_xor:tg,_crypto_stream_xsalsa20_xor_ic:Ag,_crypto_verify_64_bytes:Gg,_randombytes_stir:Kg,_crypto_secretbox_easy:rf,_crypto_pwhash_argon2i_strprefix:ke,_crypto_auth_hmacsha256_update:kb,_crypto_pwhash_scryptsalsa208sha256_strbytes:Oe,_crypto_stream_chacha20:ig,_crypto_stream_xsalsa20_keybytes:xg,_crypto_sign:Pf,_crypto_pwhash_argon2i_str:se,_crypto_box_open_detached_afternm:Yb,_crypto_pwhash_argon2i_memlimit_sensitive:qe,_crypto_box_sealbytes:cc,_crypto_onetimeauth:Kd,_crypto_auth_hmacsha512_statebytes:qb,_crypto_secretbox_boxzerobytes:lf,_i64Subtract:kh,_crypto_pwhash_alg_default:ve,_crypto_pwhash_scryptsalsa208sha256_strprefix:Pe,_crypto_onetimeauth_primitive:Pd,_crypto_box_seedbytes:Eb,_crypto_hash_sha256_update:wd,_crypto_core_hsalsa20_constbytes:Jc,_crypto_box_curve25519xsalsa20poly1305:oc,_crypto_generichash_blake2b_statebytes:hd,_crypto_box_curve25519xsalsa20poly1305_boxzerobytes:jc,_crypto_generichash_blake2b_bytes_min:$c,_crypto_pwhash_opslimit_moderate:Be,_crypto_secretbox_open:pf,_crypto_hash_sha256_bytes:td,_crypto_core_salsa20_inputbytes:Mc,_crypto_box_macbytes:Lb,_crypto_shorthash_bytes:Bf,_crypto_box_publickeybytes:Fb,_crypto_aead_chacha20poly1305_decrypt_detached:Sa,_crypto_auth_hmacsha256_verify:nb,_crypto_pwhash_argon2i_strbytes:je,_sodium_library_version_minor:Ug,_crypto_scalarmult_scalarbytes:cf,_crypto_onetimeauth_statebytes:Hd,_crypto_auth_hmacsha256_bytes:gb,_crypto_sign_seed_keypair:Nf,_crypto_pwhash_argon2i_opslimit_interactive:le,_crypto_stream_salsa20_noncebytes:vg,_crypto_shorthash_keybytes:Cf,_crypto_box_curve25519xsalsa20poly1305_afternm:lc,_crypto_stream_noncebytes:qg,_crypto_aead_chacha20poly1305_decrypt:Ta,_sodium_bin2hex:Qg,_crypto_secretbox_open_easy:tf,_crypto_aead_chacha20poly1305_ietf_decrypt_detached:Ua,_crypto_pwhash_memlimit_interactive:Ae,_crypto_hash_sha512_final:Fd,_crypto_generichash_final:_c,_crypto_secretbox_xsalsa20poly1305_keybytes:uf,_crypto_auth_hmacsha512_update:sb,_crypto_pwhash_saltbytes:we,_crypto_auth_hmacsha256:mb,_crypto_secretbox_noncebytes:jf,_crypto_box_keypair:Ob,_crypto_secretbox_xsalsa20poly1305_macbytes:yf,_crypto_box_open_afternm:Rb,_crypto_auth_hmacsha512_bytes:ob,_crypto_generichash_keybytes:Uc,_crypto_hash_bytes:qd,_crypto_generichash_bytes_min:Pc,_crypto_pwhash_argon2i_alg_argon2i13:he,_crypto_secretbox_macbytes:mf,_crypto_secretbox_keybytes:hf,_crypto_auth_hmacsha256_keybytes:hb,_crypto_pwhash_argon2i_opslimit_sensitive:pe,_crypto_aead_chacha20poly1305_ietf_abytes:Za,_randombytes_close:Ng,_crypto_pwhash_argon2i_memlimit_moderate:oe,_crypto_generichash_blake2b_bytes_max:ad,_crypto_generichash_blake2b:kd,_crypto_generichash_bytes:Rc,_crypto_generichash_bytes_max:Qc,_crypto_secretbox_open_detached:sf,_crypto_sign_ed25519_sk_to_seed:Xf,_crypto_sign_ed25519_sk_to_curve25519:ag,_crypto_core_salsa20_outputbytes:Lc,_crypto_box_easy_afternm:Wb,_crypto_generichash_blake2b_personalbytes:gd,_crypto_stream_chacha20_xor_ic:kg,_crypto_sign_verify_detached:Sf,_crypto_pwhash_argon2i_opslimit_moderate:ne,_crypto_onetimeauth_verify:Ld,_crypto_box_open_easy:$b,_crypto_stream:sg,_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive:Se,_crypto_box_curve25519xsalsa20poly1305_secretkeybytes:fc,_crypto_aead_chacha20poly1305_nsecbytes:ab,_crypto_hash_sha512_statebytes:Bd,_crypto_sign_bytes:If,_crypto_secretbox_zerobytes:kf,_crypto_generichash_update:Zc,_crypto_scalarmult:af,_crypto_shorthash_primitive:Df,_crypto_hash_sha512:Gd,_crypto_stream_chacha20_xor:mg,_crypto_box_seal_open:bc,_fflush:dh,_crypto_box_easy:Xb,___errno_location:Yg,_crypto_sign_ed25519_verify_detached:bg,_memmove:rh,_crypto_sign_ed25519_bytes:Tf,_crypto_generichash_blake2b_update:od,_crypto_hash_sha256:zd,_crypto_box_curve25519xsalsa20poly1305_beforenm:nc,_crypto_pwhash_alg_argon2i13:ue,_crypto_core_hsalsa20_inputbytes:Hc,_crypto_onetimeauth_final:Od,_crypto_generichash_blake2b_bytes:bd,_crypto_auth_hmacsha512256_bytes:wb,_crypto_generichash_blake2b_salt_personal:ld,_randombytes_uniform:Lg,_crypto_shorthash_siphash24_bytes:Ff,_crypto_auth_hmacsha512256_statebytes:yb,_crypto_shorthash_siphash24_keybytes:Gf,_crypto_secretbox_xsalsa20poly1305_noncebytes:vf,_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive:Qe,_crypto_core_hsalsa20:Fc,_crypto_pwhash_argon2i_memlimit_interactive:me,_crypto_hash_sha256_final:yd,_crypto_secretbox_xsalsa20poly1305_open:Af,_crypto_stream_keybytes:pg,_crypto_box_curve25519xsalsa20poly1305_publickeybytes:ec,_crypto_onetimeauth_init:Md,_crypto_aead_chacha20poly1305_ietf_npubbytes:Xa,_crypto_pwhash_memlimit_moderate:Ce,runPostSets:jh,stackAlloc:Fa,stackSave:Ga,stackRestore:Ha,establishStackSpace:Ia,setThrew:Ja,setTempRet0:Ma,getTempRet0:Na,dynCall_ii:Ah,dynCall_iiii:Jh,dynCall_vi:Sh}}(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=asm["_crypto_onetimeauth_poly1305_init"];var _crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=asm["_crypto_hash_sha512_init"];var _crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=asm["_crypto_stream_xsalsa20_noncebytes"];var _crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=asm["_crypto_auth_hmacsha256_verify"];var _crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=asm["_crypto_onetimeauth_bytes"];var _crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=asm["_crypto_shorthash_primitive"];var _crypto_box_open=Module["_crypto_box_open"]=asm["_crypto_box_open"];var _crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=asm["_crypto_stream_chacha20_ietf_noncebytes"];var _crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=asm["_crypto_stream_salsa20_xor"];var _crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=asm["_crypto_auth_hmacsha512_verify"];var _crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=asm["_crypto_generichash_blake2b_keybytes_min"];var _crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=asm["_crypto_generichash_blake2b_bytes"];var _crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=asm["_crypto_pwhash_saltbytes"];var _crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=asm["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"];var _crypto_box_seal_open=Module["_crypto_box_seal_open"]=asm["_crypto_box_seal_open"];var _crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=asm["_crypto_scalarmult_curve25519_base"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _sodium_bin2hex=Module["_sodium_bin2hex"]=asm["_sodium_bin2hex"];var _crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=asm["_crypto_pwhash_scryptsalsa208sha256"];var _crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=asm["_crypto_scalarmult_primitive"];var _crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=asm["_crypto_secretbox_xsalsa20poly1305_open"];var _crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=asm["_crypto_box_noncebytes"];var _crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=asm["_crypto_aead_chacha20poly1305_ietf_keybytes"];var _crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=asm["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"];var _crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=asm["_crypto_scalarmult_base"];var _crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=asm["_crypto_aead_chacha20poly1305_abytes"];var _crypto_auth_bytes=Module["_crypto_auth_bytes"]=asm["_crypto_auth_bytes"];var _crypto_onetimeauth=Module["_crypto_onetimeauth"]=asm["_crypto_onetimeauth"];var _crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=asm["_crypto_stream_chacha20_keybytes"];var _crypto_sign_open=Module["_crypto_sign_open"]=asm["_crypto_sign_open"];var _crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=asm["_crypto_auth_hmacsha512256_update"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=asm["_crypto_onetimeauth_poly1305"];var _crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=asm["_crypto_sign_ed25519_keypair"];var _crypto_pwhash=Module["_crypto_pwhash"]=asm["_crypto_pwhash"];var _crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=asm["_crypto_auth_hmacsha512256"];var _crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=asm["_crypto_shorthash_siphash24_keybytes"];var _crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=asm["_crypto_box_seed_keypair"];var _crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=asm["_crypto_auth_hmacsha512_init"];var _crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=asm["_crypto_generichash_blake2b_keybytes_max"];var _crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=asm["_crypto_box_beforenmbytes"];var _crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=asm["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"];var _crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=asm["_crypto_sign_ed25519_sk_to_pk"];var _crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=asm["_crypto_auth_hmacsha512_update"];var _crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=asm["_crypto_stream_xsalsa20"];var _crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=asm["_crypto_scalarmult_curve25519"];var _crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=asm["_crypto_box_open_easy_afternm"];var _crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=asm["_crypto_auth_hmacsha512"];var _crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=asm["_crypto_stream_chacha20_ietf_xor_ic"];var _crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=asm["_crypto_hash_sha256_update"];var _crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_seedbytes"];var _crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=asm["_crypto_box_zerobytes"];var _crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=asm["_crypto_stream_salsa20_keybytes"];var _crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=asm["_crypto_auth_hmacsha512256_keybytes"];var _randombytes_uniform=Module["_randombytes_uniform"]=asm["_randombytes_uniform"];var _crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=asm["_crypto_aead_chacha20poly1305_keybytes"];var _crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=asm["_crypto_hash_sha512_bytes"];var _crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=asm["_crypto_onetimeauth_statebytes"];var _crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=asm["_crypto_generichash_blake2b_final"];var _crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=asm["_crypto_generichash_blake2b_init_salt_personal"];var _crypto_box_seal=Module["_crypto_box_seal"]=asm["_crypto_box_seal"];var _crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=asm["_crypto_sign_ed25519_publickeybytes"];var _free=Module["_free"]=asm["_free"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var _crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=asm["_crypto_core_hsalsa20_keybytes"];var _crypto_sign_primitive=Module["_crypto_sign_primitive"]=asm["_crypto_sign_primitive"];var _crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=asm["_crypto_scalarmult_curve25519_bytes"];var _crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=asm["_crypto_auth_keybytes"];var _crypto_box=Module["_crypto_box"]=asm["_crypto_box"];var _crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=asm["_crypto_onetimeauth_poly1305_keybytes"];var _crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=asm["_crypto_box_curve25519xsalsa20poly1305_open_afternm"];var _crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=asm["_crypto_pwhash_scryptsalsa208sha256_saltbytes"];var _crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=asm["_crypto_aead_chacha20poly1305_npubbytes"];var _crypto_stream_primitive=Module["_crypto_stream_primitive"]=asm["_crypto_stream_primitive"];var _crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=asm["_crypto_pwhash_argon2i_str_verify"];var _crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=asm["_crypto_onetimeauth_poly1305_final"];var _crypto_shorthash=Module["_crypto_shorthash"]=asm["_crypto_shorthash"];var _crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=asm["_crypto_onetimeauth_poly1305_bytes"];var _crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=asm["_crypto_secretbox_detached"];var _crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=asm["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"];var _crypto_box_primitive=Module["_crypto_box_primitive"]=asm["_crypto_box_primitive"];var _crypto_pwhash_str=Module["_crypto_pwhash_str"]=asm["_crypto_pwhash_str"];var _crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=asm["_crypto_box_detached_afternm"];var _crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=asm["_crypto_stream_salsa20_xor_ic"];var _crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=asm["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"];var _crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=asm["_crypto_auth_hmacsha256_init"];var _crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=asm["_crypto_auth_hmacsha512_keybytes"];var _crypto_auth=Module["_crypto_auth"]=asm["_crypto_auth"];var _crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=asm["_crypto_auth_hmacsha512256_final"];var _randombytes_random=Module["_randombytes_random"]=asm["_randombytes_random"];var _crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=asm["_crypto_onetimeauth_verify"];var _crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=asm["_crypto_pwhash_str_verify"];var _crypto_sign_keypair=Module["_crypto_sign_keypair"]=asm["_crypto_sign_keypair"];var _crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=asm["_crypto_sign_ed25519_open"];var _crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=asm["_crypto_generichash_keybytes_min"];var _crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=asm["_crypto_generichash_statebytes"];var _crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=asm["_crypto_aead_chacha20poly1305_encrypt_detached"];var _crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=asm["_crypto_core_salsa20_keybytes"];var _crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=asm["_crypto_aead_chacha20poly1305_ietf_nsecbytes"];var _crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=asm["_crypto_pwhash_strprefix"];var _crypto_box_afternm=Module["_crypto_box_afternm"]=asm["_crypto_box_afternm"];var _crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=asm["_crypto_auth_hmacsha512256_bytes"];var _crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=asm["_crypto_box_curve25519xsalsa20poly1305_keypair"];var _crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=asm["_crypto_hash_sha256_init"];var _crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=asm["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"];var _crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=asm["_crypto_pwhash_scryptsalsa208sha256_str_verify"];var _crypto_hash_primitive=Module["_crypto_hash_primitive"]=asm["_crypto_hash_primitive"];var _crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=asm["_crypto_scalarmult_curve25519_scalarbytes"];var _crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=asm["_crypto_sign_ed25519_pk_to_curve25519"];var _crypto_verify_64=Module["_crypto_verify_64"]=asm["_crypto_verify_64"];var _crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=asm["_crypto_aead_chacha20poly1305_nsecbytes"];var _crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=asm["_crypto_shorthash_siphash24"];var _crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_macbytes"];var _crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=asm["_crypto_stream_chacha20_ietf"];var _crypto_generichash=Module["_crypto_generichash"]=asm["_crypto_generichash"];var _crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=asm["_crypto_sign_ed25519"];var _crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=asm["_crypto_core_hsalsa20_outputbytes"];var _crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=asm["_crypto_pwhash_opslimit_interactive"];var _crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_noncebytes"];var _crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=asm["_crypto_pwhash_memlimit_sensitive"];var _crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=asm["_crypto_core_salsa20_constbytes"];var _crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=asm["_crypto_box_boxzerobytes"];var _sodium_library_version_major=Module["_sodium_library_version_major"]=asm["_sodium_library_version_major"];var _crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=asm["_crypto_verify_16_bytes"];var _crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=asm["_crypto_aead_chacha20poly1305_ietf_encrypt"];var _crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=asm["_crypto_pwhash_argon2i_saltbytes"];var _crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=asm["_crypto_hash_sha512_update"];var _crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=asm["_crypto_onetimeauth_poly1305_verify"];var _crypto_box_beforenm=Module["_crypto_box_beforenm"]=asm["_crypto_box_beforenm"];var _crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=asm["_crypto_generichash_blake2b_init"];var _crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=asm["_crypto_aead_chacha20poly1305_ietf_decrypt"];var _crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=asm["_crypto_stream_chacha20_ietf_xor"];var _crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=asm["_crypto_pwhash_primitive"];var _crypto_scalarmult=Module["_crypto_scalarmult"]=asm["_crypto_scalarmult"];var _crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=asm["_crypto_onetimeauth_keybytes"];var _crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=asm["_crypto_pwhash_argon2i"];var _crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=asm["_crypto_auth_hmacsha512256_verify"];var _crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=asm["_crypto_auth_hmacsha256_final"];var _crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=asm["_crypto_box_secretkeybytes"];var _crypto_verify_16=Module["_crypto_verify_16"]=asm["_crypto_verify_16"];var _crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=asm["_crypto_aead_chacha20poly1305_ietf_npubbytes"];var _crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=asm["_crypto_onetimeauth_update"];var _crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=asm["_crypto_aead_chacha20poly1305_encrypt"];var _crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=asm["_crypto_secretbox_zerobytes"];var _crypto_core_salsa20=Module["_crypto_core_salsa20"]=asm["_crypto_core_salsa20"];var _crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"];var _crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=asm["_crypto_pwhash_scryptsalsa208sha256_ll"];var _crypto_box_detached=Module["_crypto_box_detached"]=asm["_crypto_box_detached"];var _randombytes_buf=Module["_randombytes_buf"]=asm["_randombytes_buf"];var _crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=asm["_crypto_box_open_detached_afternm"];var _crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=asm["_crypto_sign_seedbytes"];var _crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=asm["_crypto_pwhash_scryptsalsa208sha256_strbytes"];var _crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=asm["_crypto_generichash_blake2b_saltbytes"];var _bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"];var _fflush=Module["_fflush"]=asm["_fflush"];var _crypto_box_open_detached=Module["_crypto_box_open_detached"]=asm["_crypto_box_open_detached"];var _crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=asm["_crypto_scalarmult_bytes"];var _crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=asm["_crypto_secretbox_xsalsa20poly1305"];var _crypto_auth_verify=Module["_crypto_auth_verify"]=asm["_crypto_auth_verify"];var _crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=asm["_crypto_sign_ed25519_seed_keypair"];var _crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=asm["_crypto_secretbox_xsalsa20poly1305_zerobytes"];var _crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=asm["_crypto_onetimeauth_poly1305_update"];var _crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=asm["_crypto_auth_hmacsha512256_init"];var _crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=asm["_crypto_auth_hmacsha256"];var _crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=asm["_crypto_pwhash_strbytes"];var _crypto_stream_xor=Module["_crypto_stream_xor"]=asm["_crypto_stream_xor"];var _crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=asm["_crypto_stream_xsalsa20_xor_ic"];var _crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=asm["_crypto_verify_64_bytes"];var _randombytes_stir=Module["_randombytes_stir"]=asm["_randombytes_stir"];var _crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=asm["_crypto_secretbox_easy"];var _crypto_box_open_easy=Module["_crypto_box_open_easy"]=asm["_crypto_box_open_easy"];var _crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=asm["_crypto_pwhash_argon2i_strprefix"];var _crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=asm["_crypto_auth_hmacsha256_update"];var _crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=asm["_crypto_pwhash_scryptsalsa208sha256_str"];var _memset=Module["_memset"]=asm["_memset"];var _crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=asm["_crypto_stream_salsa20"];var _crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=asm["_crypto_pwhash_argon2i_str"];var _crypto_hash=Module["_crypto_hash"]=asm["_crypto_hash"];var _crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=asm["_crypto_pwhash_argon2i_memlimit_sensitive"];var _crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=asm["_crypto_pwhash_argon2i_opslimit_sensitive"];var _crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=asm["_crypto_box_sealbytes"];var _crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=asm["_crypto_auth_hmacsha512_final"];var _crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=asm["_crypto_auth_hmacsha512_statebytes"];var _crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=asm["_crypto_secretbox_boxzerobytes"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=asm["_crypto_pwhash_alg_default"];var _crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=asm["_crypto_pwhash_scryptsalsa208sha256_strprefix"];var _crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=asm["_crypto_onetimeauth_primitive"];var _crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=asm["_crypto_box_seedbytes"];var _crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=asm["_crypto_stream_chacha20"];var _crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=asm["_crypto_core_hsalsa20_constbytes"];var _crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=asm["_crypto_generichash_bytes"];var _crypto_secretbox=Module["_crypto_secretbox"]=asm["_crypto_secretbox"];var _crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=asm["_crypto_generichash_blake2b_statebytes"];var _crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=asm["_crypto_box_open_afternm"];var _crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=asm["_crypto_generichash_blake2b_bytes_min"];var _crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=asm["_crypto_pwhash_opslimit_moderate"];var _crypto_secretbox_open=Module["_crypto_secretbox_open"]=asm["_crypto_secretbox_open"];var _crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=asm["_crypto_auth_hmacsha512_bytes"];var _crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=asm["_crypto_core_salsa20_inputbytes"];var _crypto_box_macbytes=Module["_crypto_box_macbytes"]=asm["_crypto_box_macbytes"];var _crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=asm["_crypto_secretbox_macbytes"];var _crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=asm["_crypto_shorthash_bytes"];var _crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=asm["_crypto_box_publickeybytes"];var _crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=asm["_crypto_generichash_primitive"];var _crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=asm["_crypto_sign_secretkeybytes"];var _crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=asm["_crypto_pwhash_argon2i_strbytes"];var _crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=asm["_crypto_hash_sha512_statebytes"];var _crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=asm["_crypto_scalarmult_scalarbytes"];var _crypto_verify_32=Module["_crypto_verify_32"]=asm["_crypto_verify_32"];var _crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=asm["_crypto_auth_hmacsha256_bytes"];var _crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=asm["_crypto_auth_hmacsha256_statebytes"];var _crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=asm["_crypto_pwhash_argon2i_opslimit_interactive"];var _crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=asm["_crypto_aead_chacha20poly1305_decrypt"];var _crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=asm["_crypto_stream_salsa20_noncebytes"];var _crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=asm["_crypto_shorthash_keybytes"];var _malloc=Module["_malloc"]=asm["_malloc"];var _crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=asm["_crypto_stream_noncebytes"];var _crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=asm["_crypto_generichash_keybytes_max"];var _sodium_version_string=Module["_sodium_version_string"]=asm["_sodium_version_string"];var _memmove=Module["_memmove"]=asm["_memmove"];var _crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=asm["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"];var _crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=asm["_crypto_hash_sha512_final"];var _crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=asm["_crypto_pwhash_memlimit_interactive"];var _crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=asm["_crypto_secretbox_xsalsa20poly1305_keybytes"];var _crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=asm["_crypto_aead_chacha20poly1305_decrypt_detached"];var _crypto_sign=Module["_crypto_sign"]=asm["_crypto_sign"];var _crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_zerobytes"];var _crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=asm["_crypto_secretbox_noncebytes"];var _crypto_box_keypair=Module["_crypto_box_keypair"]=asm["_crypto_box_keypair"];var _crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=asm["_crypto_secretbox_xsalsa20poly1305_macbytes"];var _crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"];var _crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=asm["_crypto_hash_sha256_bytes"];var _crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=asm["_crypto_generichash_keybytes"];var _crypto_hash_bytes=Module["_crypto_hash_bytes"]=asm["_crypto_hash_bytes"];var _sodium_hex2bin=Module["_sodium_hex2bin"]=asm["_sodium_hex2bin"];var _sodium_init=Module["_sodium_init"]=asm["_sodium_init"];var _crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=asm["_crypto_box_curve25519xsalsa20poly1305_afternm"];var _crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=asm["_crypto_auth_hmacsha256_keybytes"];var _crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=asm["_crypto_secretbox_keybytes"];var _crypto_box_easy=Module["_crypto_box_easy"]=asm["_crypto_box_easy"];var _randombytes=Module["_randombytes"]=asm["_randombytes"];var _crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=asm["_crypto_sign_publickeybytes"];var _randombytes_close=Module["_randombytes_close"]=asm["_randombytes_close"];var _crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=asm["_crypto_pwhash_argon2i_memlimit_moderate"];var _crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=asm["_crypto_generichash_blake2b_bytes_max"];var _crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=asm["_crypto_generichash_blake2b"];var _crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=asm["_crypto_stream_chacha20_noncebytes"];var _crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=asm["_crypto_hash_sha256_statebytes"];var _crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=asm["_crypto_secretbox_open_detached"];var _crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=asm["_crypto_sign_ed25519_sk_to_seed"];var _crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=asm["_crypto_core_salsa20_outputbytes"];var _crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=asm["_crypto_sign_ed25519_secretkeybytes"];var _crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=asm["_crypto_pwhash_opslimit_sensitive"];var _crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=asm["_crypto_generichash_blake2b_personalbytes"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=asm["_crypto_box_curve25519xsalsa20poly1305_open"];var _crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=asm["_crypto_sign_verify_detached"];var _crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=asm["_crypto_pwhash_argon2i_opslimit_moderate"];var _crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=asm["_crypto_pwhash_alg_argon2i13"];var _randombytes_implementation_name=Module["_randombytes_implementation_name"]=asm["_randombytes_implementation_name"];var _crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=asm["_crypto_box_curve25519xsalsa20poly1305"];var _crypto_stream=Module["_crypto_stream"]=asm["_crypto_stream"];var _crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=asm["_crypto_sign_ed25519_detached"];var _crypto_generichash_init=Module["_crypto_generichash_init"]=asm["_crypto_generichash_init"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=asm["_crypto_sign_ed25519_sk_to_curve25519"];var _crypto_sign_bytes=Module["_crypto_sign_bytes"]=asm["_crypto_sign_bytes"];var _crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=asm["_crypto_secretbox_primitive"];var _crypto_generichash_update=Module["_crypto_generichash_update"]=asm["_crypto_generichash_update"];var _crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=asm["_crypto_generichash_blake2b_update"];var _crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=asm["_crypto_verify_32_bytes"];var _crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=asm["_crypto_aead_chacha20poly1305_ietf_abytes"];var _crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=asm["_crypto_generichash_blake2b_keybytes"];var _crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=asm["_crypto_generichash_bytes_min"];var _crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"];var _crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=asm["_crypto_stream_xsalsa20_xor"];var _crypto_sign_detached=Module["_crypto_sign_detached"]=asm["_crypto_sign_detached"];var _crypto_hash_sha512=Module["_crypto_hash_sha512"]=asm["_crypto_hash_sha512"];var _crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=asm["_crypto_generichash_bytes_max"];var _crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=asm["_crypto_box_easy_afternm"];var _crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=asm["_crypto_stream_chacha20_xor_ic"];var ___errno_location=Module["___errno_location"]=asm["___errno_location"];var _crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=asm["_crypto_sign_ed25519_verify_detached"];var _crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=asm["_crypto_sign_ed25519_bytes"];var _crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=asm["_crypto_stream_xsalsa20_keybytes"];var _crypto_hash_sha256=Module["_crypto_hash_sha256"]=asm["_crypto_hash_sha256"];var _crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=asm["_crypto_sign_ed25519_seedbytes"];var _sodium_library_version_minor=Module["_sodium_library_version_minor"]=asm["_sodium_library_version_minor"];var _crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=asm["_crypto_core_hsalsa20_inputbytes"];var _crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=asm["_crypto_onetimeauth_final"];var _crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=asm["_crypto_secretbox_open_easy"];var _crypto_generichash_final=Module["_crypto_generichash_final"]=asm["_crypto_generichash_final"];var _crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=asm["_crypto_generichash_blake2b_salt_personal"];var _crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=asm["_crypto_pwhash_argon2i_alg_argon2i13"];var _crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=asm["_crypto_shorthash_siphash24_bytes"];var _crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=asm["_crypto_auth_hmacsha512256_statebytes"];var _crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=asm["_crypto_sign_seed_keypair"];var _crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=asm["_crypto_secretbox_xsalsa20poly1305_noncebytes"];var _crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=asm["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"];var _crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=asm["_crypto_box_curve25519xsalsa20poly1305_beforenm"];var _crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=asm["_crypto_pwhash_argon2i_memlimit_interactive"];var _crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=asm["_crypto_hash_sha256_final"];var _crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=asm["_crypto_stream_chacha20_xor"];var _crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=asm["_crypto_stream_keybytes"];var _crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"];var _crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=asm["_crypto_onetimeauth_init"];var _crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=asm["_crypto_core_hsalsa20"];var _crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=asm["_crypto_pwhash_memlimit_moderate"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.establishStackSpace=asm["establishStackSpace"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach(function(decorator){output=decorator(output,what)})}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run();var nacl=function(){"use strict";var exports={};function encode_utf8(s){return encode_latin1(unescape(encodeURIComponent(s)))}function encode_latin1(s){var result=new Uint8Array(s.length);for(var i=0;i<s.length;i++){var c=s.charCodeAt(i);if((c&255)!==c)throw{message:"Cannot encode string in Latin1",str:s};result[i]=c&255}return result}function decode_utf8(bs){return decodeURIComponent(escape(decode_latin1(bs)))}function decode_latin1(bs){var encoded=[];for(var i=0;i<bs.length;i++){encoded.push(String.fromCharCode(bs[i]))}return encoded.join("")}function to_hex(bs){var encoded=[];for(var i=0;i<bs.length;i++){encoded.push("0123456789abcdef"[bs[i]>>4&15]);encoded.push("0123456789abcdef"[bs[i]&15])}return encoded.join("")}function from_hex(s){var result=new Uint8Array(s.length/2);for(var i=0;i<s.length/2;i++){result[i]=parseInt(s.substr(2*i,2),16)}return result}function MALLOC(nbytes){var result=nacl_raw._malloc(nbytes);if(result===0){throw{message:"malloc() failed",nbytes:nbytes}}return result}function FREE(pointer){nacl_raw._free(pointer)}function injectBytes(bs,leftPadding){var p=leftPadding||0;var address=MALLOC(bs.length+p);nacl_raw.HEAPU8.set(bs,address+p);for(var i=address;i<address+p;i++){nacl_raw.HEAPU8[i]=0}return address}function check_injectBytes(function_name,what,thing,expected_length,leftPadding){check_length(function_name,what,thing,expected_length);return injectBytes(thing,leftPadding)}function extractBytes(address,length){var result=new Uint8Array(length);result.set(nacl_raw.HEAPU8.subarray(address,address+length));return result}function check(function_name,result){if(result!==0){throw{message:"nacl_raw."+function_name+" signalled an error"}}}function check_length(function_name,what,thing,expected_length){if(thing.length!==expected_length){throw{message:"nacl."+function_name+" expected "+expected_length+"-byte "+what+" but got length "+thing.length}}}function Target(length){this.length=length;this.address=MALLOC(length)}Target.prototype.extractBytes=function(offset){var result=extractBytes(this.address+(offset||0),this.length-(offset||0));FREE(this.address);this.address=null;return result};function free_all(addresses){for(var i=0;i<addresses.length;i++){FREE(addresses[i])}}function random_bytes(count){var bs=new Target(count);nacl_raw._randombytes_buf(bs.address,count);return bs.extractBytes()}nacl_raw._randombytes_stir();function crypto_box_keypair(){var pk=new Target(nacl_raw._crypto_box_publickeybytes());var sk=new Target(nacl_raw._crypto_box_secretkeybytes());check("_crypto_box_keypair",nacl_raw._crypto_box_keypair(pk.address,sk.address));return{boxPk:pk.extractBytes(),boxSk:sk.extractBytes()}}function crypto_box_random_nonce(){return random_bytes(nacl_raw._crypto_box_noncebytes())}function crypto_box(msg,nonce,pk,sk){var m=injectBytes(msg,nacl_raw._crypto_box_zerobytes());var na=check_injectBytes("crypto_box","nonce",nonce,nacl_raw._crypto_box_noncebytes());var pka=check_injectBytes("crypto_box","pk",pk,nacl_raw._crypto_box_publickeybytes());var ska=check_injectBytes("crypto_box","sk",sk,nacl_raw._crypto_box_secretkeybytes());var c=new Target(msg.length+nacl_raw._crypto_box_zerobytes());check("_crypto_box",nacl_raw._crypto_box(c.address,m,c.length,0,na,pka,ska));free_all([m,na,pka,ska]);return c.extractBytes(nacl_raw._crypto_box_boxzerobytes())}function crypto_box_open(ciphertext,nonce,pk,sk){var c=injectBytes(ciphertext,nacl_raw._crypto_box_boxzerobytes());var na=check_injectBytes("crypto_box_open","nonce",nonce,nacl_raw._crypto_box_noncebytes());var pka=check_injectBytes("crypto_box_open","pk",pk,nacl_raw._crypto_box_publickeybytes());var ska=check_injectBytes("crypto_box_open","sk",sk,nacl_raw._crypto_box_secretkeybytes());var m=new Target(ciphertext.length+nacl_raw._crypto_box_boxzerobytes());check("_crypto_box_open",nacl_raw._crypto_box_open(m.address,c,m.length,0,na,pka,ska));free_all([c,na,pka,ska]);return m.extractBytes(nacl_raw._crypto_box_zerobytes())}function crypto_box_precompute(pk,sk){var pka=check_injectBytes("crypto_box_precompute","pk",pk,nacl_raw._crypto_box_publickeybytes());var ska=check_injectBytes("crypto_box_precompute","sk",sk,nacl_raw._crypto_box_secretkeybytes());var k=new Target(nacl_raw._crypto_box_beforenmbytes());check("_crypto_box_beforenm",nacl_raw._crypto_box_beforenm(k.address,pka,ska));free_all([pka,ska]);return{boxK:k.extractBytes()}}function crypto_box_precomputed(msg,nonce,state){var m=injectBytes(msg,nacl_raw._crypto_box_zerobytes());var na=check_injectBytes("crypto_box_precomputed","nonce",nonce,nacl_raw._crypto_box_noncebytes());var ka=check_injectBytes("crypto_box_precomputed","boxK",state.boxK,nacl_raw._crypto_box_beforenmbytes());var c=new Target(msg.length+nacl_raw._crypto_box_zerobytes());check("_crypto_box_afternm",nacl_raw._crypto_box_afternm(c.address,m,c.length,0,na,ka));free_all([m,na,ka]);return c.extractBytes(nacl_raw._crypto_box_boxzerobytes())}function crypto_box_open_precomputed(ciphertext,nonce,state){var c=injectBytes(ciphertext,nacl_raw._crypto_box_boxzerobytes());var na=check_injectBytes("crypto_box_open_precomputed","nonce",nonce,nacl_raw._crypto_box_noncebytes());var ka=check_injectBytes("crypto_box_open_precomputed","boxK",state.boxK,nacl_raw._crypto_box_beforenmbytes());var m=new Target(ciphertext.length+nacl_raw._crypto_box_boxzerobytes());check("_crypto_box_open_afternm",nacl_raw._crypto_box_open_afternm(m.address,c,m.length,0,na,ka));free_all([c,na,ka]);return m.extractBytes(nacl_raw._crypto_box_zerobytes())}function crypto_hash(bs){var address=injectBytes(bs);var hash=new Target(nacl_raw._crypto_hash_bytes());check("_crypto_hash",nacl_raw._crypto_hash(hash.address,address,bs.length,0));FREE(address);return hash.extractBytes()}function crypto_hash_sha256(bs){var address=injectBytes(bs);var hash=new Target(nacl_raw._crypto_hash_sha256_bytes());check("_crypto_hash_sha256",nacl_raw._crypto_hash_sha256(hash.address,address,bs.length,0));FREE(address);return hash.extractBytes()}function crypto_hash_string(s){return crypto_hash(encode_utf8(s))}function crypto_stream_random_nonce(){return random_bytes(nacl_raw._crypto_stream_noncebytes())}function crypto_stream(len,nonce,key){var na=check_injectBytes("crypto_stream","nonce",nonce,nacl_raw._crypto_stream_noncebytes());var ka=check_injectBytes("crypto_stream","key",key,nacl_raw._crypto_stream_keybytes());var out=new Target(len);check("_crypto_stream",nacl_raw._crypto_stream(out.address,len,0,na,ka));free_all([na,ka]);return out.extractBytes()}function crypto_stream_xor(msg,nonce,key){var na=check_injectBytes("crypto_stream_xor","nonce",nonce,nacl_raw._crypto_stream_noncebytes());var ka=check_injectBytes("crypto_stream_xor","key",key,nacl_raw._crypto_stream_keybytes());var ma=injectBytes(msg);var out=new Target(msg.length);check("_crypto_stream_xor",nacl_raw._crypto_stream_xor(out.address,ma,msg.length,0,na,ka));free_all([na,ka,ma]);return out.extractBytes()}function crypto_onetimeauth(msg,key){var ka=check_injectBytes("crypto_onetimeauth","key",key,nacl_raw._crypto_onetimeauth_keybytes());var ma=injectBytes(msg);var authenticator=new Target(nacl_raw._crypto_onetimeauth_bytes());check("_crypto_onetimeauth",nacl_raw._crypto_onetimeauth(authenticator.address,ma,msg.length,0,ka));free_all([ka,ma]);return authenticator.extractBytes()}function crypto_onetimeauth_verify(authenticator,msg,key){if(authenticator.length!=nacl_raw._crypto_onetimeauth_bytes())return false;var ka=check_injectBytes("crypto_onetimeauth_verify","key",key,nacl_raw._crypto_onetimeauth_keybytes());var ma=injectBytes(msg);var aa=injectBytes(authenticator);var result=nacl_raw._crypto_onetimeauth_verify(aa,ma,msg.length,0,ka);free_all([ka,ma,aa]);return result==0}function crypto_auth(msg,key){var ka=check_injectBytes("crypto_auth","key",key,nacl_raw._crypto_auth_keybytes());var ma=injectBytes(msg);var authenticator=new Target(nacl_raw._crypto_auth_bytes());check("_crypto_auth",nacl_raw._crypto_auth(authenticator.address,ma,msg.length,0,ka));free_all([ka,ma]);return authenticator.extractBytes()}function crypto_auth_verify(authenticator,msg,key){if(authenticator.length!=nacl_raw._crypto_auth_bytes())return false;var ka=check_injectBytes("crypto_auth_verify","key",key,nacl_raw._crypto_auth_keybytes());var ma=injectBytes(msg);var aa=injectBytes(authenticator);var result=nacl_raw._crypto_auth_verify(aa,ma,msg.length,0,ka);free_all([ka,ma,aa]);return result==0}function crypto_secretbox_random_nonce(){return random_bytes(nacl_raw._crypto_secretbox_noncebytes())}function crypto_secretbox(msg,nonce,key){var m=injectBytes(msg,nacl_raw._crypto_secretbox_zerobytes());var na=check_injectBytes("crypto_secretbox","nonce",nonce,nacl_raw._crypto_secretbox_noncebytes());var ka=check_injectBytes("crypto_secretbox","key",key,nacl_raw._crypto_secretbox_keybytes());var c=new Target(msg.length+nacl_raw._crypto_secretbox_zerobytes());check("_crypto_secretbox",nacl_raw._crypto_secretbox(c.address,m,c.length,0,na,ka));free_all([m,na,ka]);return c.extractBytes(nacl_raw._crypto_secretbox_boxzerobytes())}function crypto_secretbox_open(ciphertext,nonce,key){var c=injectBytes(ciphertext,nacl_raw._crypto_secretbox_boxzerobytes());var na=check_injectBytes("crypto_secretbox_open","nonce",nonce,nacl_raw._crypto_secretbox_noncebytes());var ka=check_injectBytes("crypto_secretbox_open","key",key,nacl_raw._crypto_secretbox_keybytes());var m=new Target(ciphertext.length+nacl_raw._crypto_secretbox_boxzerobytes());check("_crypto_secretbox_open",nacl_raw._crypto_secretbox_open(m.address,c,m.length,0,na,ka));free_all([c,na,ka]);return m.extractBytes(nacl_raw._crypto_secretbox_zerobytes())}function crypto_sign_keypair(){var pk=new Target(nacl_raw._crypto_sign_publickeybytes());var sk=new Target(nacl_raw._crypto_sign_secretkeybytes());check("_crypto_sign_keypair",nacl_raw._crypto_sign_keypair(pk.address,sk.address));return{signPk:pk.extractBytes(),signSk:sk.extractBytes()}}function crypto_sign(msg,sk){var ma=injectBytes(msg);var ska=check_injectBytes("crypto_sign","sk",sk,nacl_raw._crypto_sign_secretkeybytes());var sm=new Target(msg.length+nacl_raw._crypto_sign_bytes());var smlen=new Target(8);check("_crypto_sign",nacl_raw._crypto_sign(sm.address,smlen.address,ma,msg.length,0,ska));free_all([ma,ska]);sm.length=nacl_raw.HEAPU32[smlen.address>>2];FREE(smlen.address);return sm.extractBytes()}function crypto_sign_detached(msg,sk){var signed_msg=crypto_sign(msg,sk);return signed_msg.subarray(0,nacl_raw._crypto_sign_bytes())}function crypto_sign_open(sm,pk){var sma=injectBytes(sm);var pka=check_injectBytes("crypto_sign_open","pk",pk,nacl_raw._crypto_sign_publickeybytes());var m=new Target(sm.length);var mlen=new Target(8);if(nacl_raw._crypto_sign_open(m.address,mlen.address,sma,sm.length,0,pka)===0){free_all([sma,pka]);m.length=nacl_raw.HEAPU32[mlen.address>>2];FREE(mlen.address);return m.extractBytes()}else{free_all([sma,pka,m.address,mlen.address]);return null}}function crypto_sign_verify_detached(detached_signature,msg,pk){var signed_msg=new Uint8Array(detached_signature.length+msg.length);signed_msg.set(detached_signature,0);signed_msg.set(msg,detached_signature.length);return crypto_sign_open(signed_msg,pk)!==null}function crypto_sign_seed_keypair(bs){var seeda=check_injectBytes("crypto_sign_seed_keypair","seed",bs,nacl_raw._crypto_sign_secretkeybytes()/2);var pk=new Target(nacl_raw._crypto_sign_publickeybytes());var sk=new Target(nacl_raw._crypto_sign_secretkeybytes());check("_crypto_sign_seed_keypair",nacl_raw._crypto_sign_seed_keypair(pk.address,sk.address,seeda));FREE(seeda);return{signPk:pk.extractBytes(),signSk:sk.extractBytes()}}function crypto_box_seed_keypair(bs){var hash=new Uint8Array(crypto_hash(bs));return crypto_box_keypair_from_raw_sk(hash.subarray(0,nacl_raw._crypto_box_secretkeybytes()))}function crypto_box_keypair_from_raw_sk(sk){return{boxPk:crypto_scalarmult_base(sk),boxSk:sk}}function crypto_scalarmult(n,p){var na=check_injectBytes("crypto_scalarmult","n",n,nacl_raw._crypto_scalarmult_curve25519_scalarbytes());var pa=check_injectBytes("crypto_scalarmult","p",p,nacl_raw._crypto_scalarmult_curve25519_bytes());var q=new Target(nacl_raw._crypto_scalarmult_curve25519_bytes());check("_crypto_scalarmult_curve25519",nacl_raw._crypto_scalarmult_curve25519(q.address,na,pa));FREE(na);FREE(pa);return q.extractBytes()}function crypto_scalarmult_base(n){var na=check_injectBytes("crypto_scalarmult_base","n",n,nacl_raw._crypto_scalarmult_curve25519_scalarbytes());var q=new Target(nacl_raw._crypto_scalarmult_curve25519_bytes());check("_crypto_scalarmult_curve25519_base",nacl_raw._crypto_scalarmult_curve25519_base(q.address,na));FREE(na);return q.extractBytes()}exports.crypto_auth_BYTES=nacl_raw._crypto_auth_bytes();exports.crypto_auth_KEYBYTES=nacl_raw._crypto_auth_keybytes();exports.crypto_box_BEFORENMBYTES=nacl_raw._crypto_box_beforenmbytes();exports.crypto_box_BOXZEROBYTES=nacl_raw._crypto_box_boxzerobytes();exports.crypto_box_NONCEBYTES=nacl_raw._crypto_box_noncebytes();exports.crypto_box_PUBLICKEYBYTES=nacl_raw._crypto_box_publickeybytes();exports.crypto_box_SECRETKEYBYTES=nacl_raw._crypto_box_secretkeybytes();exports.crypto_box_ZEROBYTES=nacl_raw._crypto_box_zerobytes();exports.crypto_hash_BYTES=nacl_raw._crypto_hash_bytes();exports.crypto_hash_sha256_BYTES=nacl_raw._crypto_hash_sha256_bytes();exports.crypto_onetimeauth_BYTES=nacl_raw._crypto_onetimeauth_bytes();exports.crypto_onetimeauth_KEYBYTES=nacl_raw._crypto_onetimeauth_keybytes();exports.crypto_secretbox_BOXZEROBYTES=nacl_raw._crypto_secretbox_boxzerobytes();exports.crypto_secretbox_KEYBYTES=nacl_raw._crypto_secretbox_keybytes();exports.crypto_secretbox_NONCEBYTES=nacl_raw._crypto_secretbox_noncebytes();exports.crypto_secretbox_ZEROBYTES=nacl_raw._crypto_secretbox_zerobytes();exports.crypto_sign_BYTES=nacl_raw._crypto_sign_bytes();exports.crypto_sign_PUBLICKEYBYTES=nacl_raw._crypto_sign_publickeybytes();exports.crypto_sign_SECRETKEYBYTES=nacl_raw._crypto_sign_secretkeybytes();exports.crypto_stream_KEYBYTES=nacl_raw._crypto_stream_keybytes();exports.crypto_stream_NONCEBYTES=nacl_raw._crypto_stream_noncebytes();exports.crypto_scalarmult_SCALARBYTES=nacl_raw._crypto_scalarmult_curve25519_scalarbytes();exports.crypto_scalarmult_BYTES=nacl_raw._crypto_scalarmult_curve25519_bytes();exports.encode_utf8=encode_utf8;exports.encode_latin1=encode_latin1;exports.decode_utf8=decode_utf8;exports.decode_latin1=decode_latin1;exports.to_hex=to_hex;exports.from_hex=from_hex;exports.random_bytes=random_bytes;exports.crypto_box_keypair=crypto_box_keypair;exports.crypto_box_random_nonce=crypto_box_random_nonce;exports.crypto_box=crypto_box;exports.crypto_box_open=crypto_box_open;exports.crypto_box_precompute=crypto_box_precompute;exports.crypto_box_precomputed=crypto_box_precomputed;exports.crypto_box_open_precomputed=crypto_box_open_precomputed;exports.crypto_stream_random_nonce=crypto_stream_random_nonce;exports.crypto_stream=crypto_stream;exports.crypto_stream_xor=crypto_stream_xor;exports.crypto_onetimeauth=crypto_onetimeauth;exports.crypto_onetimeauth_verify=crypto_onetimeauth_verify;exports.crypto_auth=crypto_auth;exports.crypto_auth_verify=crypto_auth_verify;exports.crypto_secretbox_random_nonce=crypto_secretbox_random_nonce;exports.crypto_secretbox=crypto_secretbox;exports.crypto_secretbox_open=crypto_secretbox_open;exports.crypto_sign_keypair=crypto_sign_keypair;exports.crypto_sign=crypto_sign;exports.crypto_sign_detached=crypto_sign_detached;exports.crypto_sign_open=crypto_sign_open;exports.crypto_sign_verify_detached=crypto_sign_verify_detached;exports.crypto_hash=crypto_hash;exports.crypto_hash_sha256=crypto_hash_sha256;exports.crypto_hash_string=crypto_hash_string;exports.crypto_sign_seed_keypair=crypto_sign_seed_keypair;exports.crypto_box_seed_keypair=crypto_box_seed_keypair;exports.crypto_box_keypair_from_raw_sk=crypto_box_keypair_from_raw_sk;exports.crypto_sign_keypair_from_seed=crypto_sign_seed_keypair;exports.crypto_box_keypair_from_seed=crypto_box_seed_keypair;exports.crypto_scalarmult=crypto_scalarmult;exports.crypto_scalarmult_base=crypto_scalarmult_base;return exports}();nacl.nacl_raw=nacl_raw;if(on_ready_call_needed){on_ready(nacl)}return"nacl_factory API has changed -- see js-nacl README"}(typeof window!=="undefined"?window:undefined_reference_value,typeof document!=="undefined"?document:undefined_reference_value)}};if(typeof module!=="undefined"&&module.exports){module.exports=nacl_factory}}).call(this,require("_process"),"/node_modules/js-nacl/lib")},{_process:407,crypto:303,fs:147,path:383}],356:[function(require,module,exports){module.exports=extend;function extend(){var args=[].slice.call(arguments);var deep=false;if(typeof args[0]=="boolean"){deep=args.shift()}var result=args[0];if(!result||typeof result!="object"&&typeof result!="function"){throw new Error("extendee must be an object")}var extenders=args.slice(1);var len=extenders.length;for(var i=0;i<len;i++){var extender=extenders[i];for(var key in extender){var value=extender[key];if(deep&&value&&(typeof value=="object"||typeof value=="function")){var base=Array.isArray(value)?[]:{};result[key]=extend(true,result[key]||base,value)}else{result[key]=value}}}return result}},{}],357:[function(require,module,exports){(function(global){var FUNC_ERROR_TEXT="Expected a function";var HASH_UNDEFINED="__lodash_hash_undefined__";var INFINITY=1/0;var funcTag="[object Function]",genTag="[object GeneratorFunction]",symbolTag="[object Symbol]";var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,reLeadingDot=/^\./,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;var reEscapeChar=/\\(\\)?/g;var reIsHostCtor=/^\[object .+?Constructor\]$/;var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();function getValue(object,key){return object==null?undefined:object[key]}function isHostObject(value){var result=false;if(value!=null&&typeof value.toString!="function"){try{result=!!(value+"")}catch(e){}}return result}var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;var coreJsData=root["__core-js_shared__"];var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();var funcToString=funcProto.toString;var hasOwnProperty=objectProto.hasOwnProperty;var objectToString=objectProto.toString;var reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var Symbol=root.Symbol,splice=arrayProto.splice;var Map=getNative(root,"Map"),nativeCreate=getNative(Object,"create");var symbolProto=Symbol?Symbol.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;function Hash(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{}}function hashDelete(key){return this.has(key)&&delete this.__data__[key]}function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result}return hasOwnProperty.call(data,key)?data[key]:undefined}function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key)}function hashSet(key,value){var data=this.__data__;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function ListCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false}var lastIndex=data.length-1;if(index==lastIndex){data.pop()}else{splice.call(data,index,1)}return true}function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1]}function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1}function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){data.push([key,value])}else{data[index][1]=value}return this}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;function MapCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(Map||ListCache),string:new Hash}}function mapCacheDelete(key){return getMapData(this,key)["delete"](key)}function mapCacheGet(key){return getMapData(this,key).get(key)}function mapCacheHas(key){return getMapData(this,key).has(key)}function mapCacheSet(key,value){getMapData(this,key).set(key,value);return this}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length}}return-1}function baseGet(object,path){path=isKey(path,object)?[path]:castPath(path);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])]}return index&&index==length?object:undefined}function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false}var pattern=isFunction(value)||isHostObject(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}function baseToString(value){if(typeof value=="string"){return value}if(isSymbol(value)){return symbolToString?symbolToString.call(value):""}var result=value+"";return result=="0"&&1/value==-INFINITY?"-0":result}function castPath(value){return isArray(value)?value:stringToPath(value)}function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=="string"?"string":"hash"]:data.map}function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined}function isKey(value,object){if(isArray(value)){return false}var type=typeof value;if(type=="number"||type=="symbol"||type=="boolean"||value==null||isSymbol(value)){return true}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object)}function isKeyable(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null}function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}var stringToPath=memoize(function(string){string=toString(string);var result=[];if(reLeadingDot.test(string)){result.push("")}string.replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,"$1"):number||match)});return result});function toKey(value){if(typeof value=="string"||isSymbol(value)){return value}var result=value+"";return result=="0"&&1/value==-INFINITY?"-0":result}function toSource(func){if(func!=null){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}function memoize(func,resolver){if(typeof func!="function"||resolver&&typeof resolver!="function"){throw new TypeError(FUNC_ERROR_TEXT)}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key)}var result=func.apply(this,args);memoized.cache=cache.set(key,result);return result};memoized.cache=new(memoize.Cache||MapCache);return memoized}memoize.Cache=MapCache;function eq(value,other){return value===other||value!==value&&other!==other}var isArray=Array.isArray;function isFunction(value){var tag=isObject(value)?objectToString.call(value):"";return tag==funcTag||tag==genTag}function isObject(value){var type=typeof value;return!!value&&(type=="object"||type=="function")}function isObjectLike(value){return!!value&&typeof value=="object"}function isSymbol(value){return typeof value=="symbol"||isObjectLike(value)&&objectToString.call(value)==symbolTag}function toString(value){return value==null?"":baseToString(value)}function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result}module.exports=get}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],358:[function(require,module,exports){(function(global){"use strict";var userAgent=global.navigator&&global.navigator.userAgent;var isRunningInIE=userAgent&&userAgent.indexOf("MSIE ")>-1;var maxTimeout=Math.pow(2,31)-1;if(isRunningInIE){global.setTimeout=global.setTimeout;global.clearTimeout=global.clearTimeout;global.setInterval=global.setInterval;global.clearInterval=global.clearInterval;global.Date=global.Date}if(global.setImmediate!==undefined){global.setImmediate=global.setImmediate;global.clearImmediate=global.clearImmediate}var NOOP=function(){return undefined};var timeoutResult=setTimeout(NOOP,0);var addTimerReturnsObject=typeof timeoutResult==="object";var hrtimePresent=global.process&&typeof global.process.hrtime==="function";var nextTickPresent=global.process&&typeof global.process.nextTick==="function";var performancePresent=global.performance&&typeof global.performance.now==="function";var requestAnimationFramePresent=global.requestAnimationFrame&&typeof global.requestAnimationFrame==="function";var cancelAnimationFramePresent=global.cancelAnimationFrame&&typeof global.cancelAnimationFrame==="function";clearTimeout(timeoutResult);var NativeDate=Date;var uniqueTimerId=1;function parseTime(str){if(!str){return 0}var strings=str.split(":");var l=strings.length;var i=l;var ms=0;var parsed;if(l>3||!/^(\d\d:){0,2}\d\d?$/.test(str)){throw new Error("tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits")}while(i--){parsed=parseInt(strings[i],10);if(parsed>=60){throw new Error("Invalid time "+str)}ms+=parsed*Math.pow(60,l-i-1)}return ms*1e3}function fixedFloor(n){return n>=0?Math.floor(n):Math.ceil(n)}function fixedModulo(n,m){return(n%m+m)%m}function getEpoch(epoch){if(!epoch){return 0}if(typeof epoch.getTime==="function"){return epoch.getTime()}if(typeof epoch==="number"){return epoch}throw new TypeError("now should be milliseconds since UNIX epoch")}function inRange(from,to,timer){return timer&&timer.callAt>=from&&timer.callAt<=to}function mirrorDateProperties(target,source){var prop;for(prop in source){if(source.hasOwnProperty(prop)){target[prop]=source[prop]}}if(source.now){target.now=function now(){return target.clock.now}}else{delete target.now}if(source.toSource){target.toSource=function toSource(){return source.toSource()}}else{delete target.toSource}target.toString=function toString(){return source.toString()};target.prototype=source.prototype;target.parse=source.parse;target.UTC=source.UTC;target.prototype.toUTCString=source.prototype.toUTCString;return target}function createDate(){function ClockDate(year,month,date,hour,minute,second,ms){switch(arguments.length){case 0:return new NativeDate(ClockDate.clock.now);case 1:return new NativeDate(year);case 2:return new NativeDate(year,month);case 3:return new NativeDate(year,month,date);case 4:return new NativeDate(year,month,date,hour);case 5:return new NativeDate(year,month,date,hour,minute);case 6:return new NativeDate(year,month,date,hour,minute,second);default:return new NativeDate(year,month,date,hour,minute,second,ms)}}return mirrorDateProperties(ClockDate,NativeDate)}function enqueueJob(clock,job){if(!clock.jobs){clock.jobs=[]}clock.jobs.push(job)}function runJobs(clock){if(!clock.jobs){return}for(var i=0;i<clock.jobs.length;i++){var job=clock.jobs[i];job.func.apply(null,job.args)}clock.jobs=[]}function addTimer(clock,timer){if(timer.func===undefined){throw new Error("Callback must be provided to timer calls")}timer.type=timer.immediate?"Immediate":"Timeout";if(timer.hasOwnProperty("delay")){timer.delay=timer.delay>maxTimeout?1:timer.delay;timer.delay=Math.max(0,timer.delay)}if(timer.hasOwnProperty("interval")){timer.type="Interval";timer.interval=timer.interval>maxTimeout?1:timer.interval}if(timer.hasOwnProperty("animation")){timer.type="AnimationFrame";timer.animation=true}if(!clock.timers){clock.timers={}}timer.id=uniqueTimerId++;timer.createdAt=clock.now;timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0));clock.timers[timer.id]=timer;if(addTimerReturnsObject){return{id:timer.id,ref:NOOP,unref:NOOP}}return timer.id}function compareTimers(a,b){if(a.callAt<b.callAt){return-1}if(a.callAt>b.callAt){return 1}if(a.immediate&&!b.immediate){return-1}if(!a.immediate&&b.immediate){return 1}if(a.createdAt<b.createdAt){return-1}if(a.createdAt>b.createdAt){return 1}if(a.id<b.id){return-1}if(a.id>b.id){return 1}}function firstTimerInRange(clock,from,to){var timers=clock.timers;var timer=null;var id,isInRange;for(id in timers){if(timers.hasOwnProperty(id)){isInRange=inRange(from,to,timers[id]);if(isInRange&&(!timer||compareTimers(timer,timers[id])===1)){timer=timers[id]}}}return timer}function firstTimer(clock){var timers=clock.timers;var timer=null;var id;for(id in timers){if(timers.hasOwnProperty(id)){if(!timer||compareTimers(timer,timers[id])===1){timer=timers[id]}}}return timer}function lastTimer(clock){var timers=clock.timers;var timer=null;var id;for(id in timers){if(timers.hasOwnProperty(id)){if(!timer||compareTimers(timer,timers[id])===-1){timer=timers[id]}}}return timer}function callTimer(clock,timer){if(typeof timer.interval==="number"){clock.timers[timer.id].callAt+=timer.interval}else{delete clock.timers[timer.id]}if(typeof timer.func==="function"){timer.func.apply(null,timer.args)}else{eval(timer.func)}}function clearTimer(clock,timerId,ttype){if(!timerId){return}if(!clock.timers){clock.timers=[]}if(typeof timerId==="object"){timerId=timerId.id}if(clock.timers.hasOwnProperty(timerId)){var timer=clock.timers[timerId];if(timer.type===ttype){delete clock.timers[timerId]}else{var clear=ttype==="AnimationFrame"?"cancelAnimationFrame":"clear"+ttype;var schedule=timer.type==="AnimationFrame"?"requestAnimationFrame":"set"+timer.type;throw new Error("Cannot clear timer: timer created with "+schedule+"() but cleared with "+clear+"()")}}}function uninstall(clock,target,config){var method,i,l;var installedHrTime="_hrtime";var installedNextTick="_nextTick";for(i=0,l=clock.methods.length;i<l;i++){method=clock.methods[i];if(method==="hrtime"&&target.process){target.process.hrtime=clock[installedHrTime]}else if(method==="nextTick"&&target.process){target.process.nextTick=clock[installedNextTick]}else{if(target[method]&&target[method].hadOwnProperty){target[method]=clock["_"+method];if(method==="clearInterval"&&config.shouldAdvanceTime===true){target[method](clock.attachedInterval)}}else{try{delete target[method]}catch(ignore){}}}}clock.methods=[];if(!clock.timers){return[]}return Object.keys(clock.timers).map(function mapper(key){return clock.timers[key]})}function hijackMethod(target,method,clock){var prop;clock[method].hadOwnProperty=Object.prototype.hasOwnProperty.call(target,method);clock["_"+method]=target[method];if(method==="Date"){var date=mirrorDateProperties(clock[method],target[method]);target[method]=date}else{target[method]=function(){return clock[method].apply(clock,arguments)};for(prop in clock[method]){if(clock[method].hasOwnProperty(prop)){target[method][prop]=clock[method][prop]}}}target[method].clock=clock}function doIntervalTick(clock,advanceTimeDelta){clock.tick(advanceTimeDelta)}var timers={setTimeout:setTimeout,clearTimeout:clearTimeout,setImmediate:global.setImmediate,clearImmediate:global.clearImmediate,setInterval:setInterval,clearInterval:clearInterval,Date:Date};if(hrtimePresent){timers.hrtime=global.process.hrtime}if(nextTickPresent){timers.nextTick=global.process.nextTick}if(performancePresent){timers.performance=global.performance}if(requestAnimationFramePresent){timers.requestAnimationFrame=global.requestAnimationFrame}if(cancelAnimationFramePresent){timers.cancelAnimationFrame=global.cancelAnimationFrame}var keys=Object.keys||function(obj){var ks=[];var key;for(key in obj){if(obj.hasOwnProperty(key)){ks.push(key)}}return ks};exports.timers=timers;function createClock(start,loopLimit){start=start||0;loopLimit=loopLimit||1e3;var clock={now:getEpoch(start),hrNow:0,timeouts:{},Date:createDate(),loopLimit:loopLimit};clock.Date.clock=clock;function getTimeToNextFrame(){return 16-(clock.now-start)%16}clock.setTimeout=function setTimeout(func,timeout){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout})};clock.clearTimeout=function clearTimeout(timerId){return clearTimer(clock,timerId,"Timeout")};clock.nextTick=function nextTick(func){return enqueueJob(clock,{func:func,args:Array.prototype.slice.call(arguments,1)})};clock.setInterval=function setInterval(func,timeout){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout,interval:timeout})};clock.clearInterval=function clearInterval(timerId){return clearTimer(clock,timerId,"Interval")};clock.setImmediate=function setImmediate(func){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,1),immediate:true})};clock.clearImmediate=function clearImmediate(timerId){return clearTimer(clock,timerId,"Immediate")};clock.requestAnimationFrame=function requestAnimationFrame(func){var result=addTimer(clock,{func:func,delay:getTimeToNextFrame(),args:[clock.now+getTimeToNextFrame()],animation:true});return result.id||result};clock.cancelAnimationFrame=function cancelAnimationFrame(timerId){return clearTimer(clock,timerId,"AnimationFrame")};function updateHrTime(newNow){clock.hrNow+=newNow-clock.now}clock.tick=function tick(ms){ms=typeof ms==="number"?ms:parseTime(ms);var tickFrom=clock.now;var tickTo=clock.now+ms;var previous=clock.now;var timer,firstException,oldNow;clock.duringTick=true;oldNow=clock.now;runJobs(clock);if(oldNow!==clock.now){tickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow}timer=firstTimerInRange(clock,tickFrom,tickTo);while(timer&&tickFrom<=tickTo){if(clock.timers[timer.id]){updateHrTime(timer.callAt);tickFrom=timer.callAt;clock.now=timer.callAt;oldNow=clock.now;try{runJobs(clock);callTimer(clock,timer)}catch(e){firstException=firstException||e}if(oldNow!==clock.now){tickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;previous+=clock.now-oldNow}}timer=firstTimerInRange(clock,previous,tickTo);previous=tickFrom}oldNow=clock.now;runJobs(clock);if(oldNow!==clock.now){tickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow}clock.duringTick=false;timer=firstTimerInRange(clock,tickFrom,tickTo);if(timer){try{clock.tick(tickTo-clock.now)}catch(e){firstException=firstException||e}}else{updateHrTime(tickTo);clock.now=tickTo}if(firstException){throw firstException}return clock.now};clock.next=function next(){runJobs(clock);var timer=firstTimer(clock);if(!timer){return clock.now}clock.duringTick=true;try{updateHrTime(timer.callAt);clock.now=timer.callAt;callTimer(clock,timer);runJobs(clock);return clock.now}finally{clock.duringTick=false}};clock.runAll=function runAll(){var numTimers,i;runJobs(clock);for(i=0;i<clock.loopLimit;i++){if(!clock.timers){return clock.now}numTimers=keys(clock.timers).length;if(numTimers===0){return clock.now}clock.next()}throw new Error("Aborting after running "+clock.loopLimit+" timers, assuming an infinite loop!")};clock.runToFrame=function runToFrame(){return clock.tick(getTimeToNextFrame())};clock.runToLast=function runToLast(){var timer=lastTimer(clock);if(!timer){runJobs(clock);return clock.now}return clock.tick(timer.callAt)};clock.reset=function reset(){clock.timers={}};clock.setSystemTime=function setSystemTime(systemTime){var newNow=getEpoch(systemTime);var difference=newNow-clock.now;var id,timer;clock.now=newNow;for(id in clock.timers){if(clock.timers.hasOwnProperty(id)){timer=clock.timers[id];timer.createdAt+=difference;timer.callAt+=difference}}};if(performancePresent){clock.performance=Object.create(global.performance);clock.performance.now=function lolexNow(){return clock.hrNow}}if(hrtimePresent){clock.hrtime=function(prev){if(Array.isArray(prev)){var oldSecs=prev[0]+prev[1]/1e9;var newSecs=clock.hrNow/1e3;var difference=newSecs-oldSecs;var secs=fixedFloor(difference);var nanosecs=fixedModulo(difference*1e9,1e9);return[secs,nanosecs]}return[fixedFloor(clock.hrNow/1e3),fixedModulo(clock.hrNow*1e6,1e9)]}}return clock}exports.createClock=createClock;exports.install=function install(config){if(arguments.length>1||config instanceof Date||Array.isArray(config)||typeof config==="number"){throw new TypeError("lolex.install called with "+String(config)+" lolex 2.0+ requires an object parameter - see https://github.com/sinonjs/lolex")}config=typeof config!=="undefined"?config:{};config.shouldAdvanceTime=config.shouldAdvanceTime||false;config.advanceTimeDelta=config.advanceTimeDelta||20;var i,l;var target=config.target||global;var clock=createClock(config.now,config.loopLimit);clock.uninstall=function(){return uninstall(clock,target,config)};clock.methods=config.toFake||[];if(clock.methods.length===0){clock.methods=keys(timers).filter(function(key){return key!=="nextTick"})}for(i=0,l=clock.methods.length;i<l;i++){if(clock.methods[i]==="hrtime"){if(target.process&&typeof target.process.hrtime==="function"){hijackMethod(target.process,clock.methods[i],clock)}}else if(clock.methods[i]==="nextTick"){if(target.process&&typeof target.process.nextTick==="function"){hijackMethod(target.process,clock.methods[i],clock)}}else{if(clock.methods[i]==="setInterval"&&config.shouldAdvanceTime===true){var intervalTick=doIntervalTick.bind(null,clock,config.advanceTimeDelta);var intervalId=target[clock.methods[i]](intervalTick,config.advanceTimeDelta);clock.attachedInterval=intervalId}hijackMethod(target,clock.methods[i],clock)}}return clock}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],359:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};var makeError=require("make-error");function makeErrorCause(value,_super){if(_super===void 0){_super=makeErrorCause.BaseError}return makeError(value,_super)}var makeErrorCause;(function(makeErrorCause){var BaseError=function(_super){__extends(BaseError,_super);function BaseError(message,cause){_super.call(this,message);this.cause=cause}BaseError.prototype.toString=function(){return _super.prototype.toString.call(this)+(this.cause?"\nCaused by: "+this.cause.toString():"")};return BaseError}(makeError.BaseError);makeErrorCause.BaseError=BaseError})(makeErrorCause||(makeErrorCause={}));module.exports=makeErrorCause},{"make-error":360}],360:[function(require,module,exports){"use strict";var construct=typeof Reflect!=="undefined"?Reflect.construct:undefined;var defineProperty=Object.defineProperty;var captureStackTrace=Error.captureStackTrace;if(captureStackTrace===undefined){captureStackTrace=function captureStackTrace(error){var container=new Error;defineProperty(error,"stack",{configurable:true,get:function getStack(){var stack=container.stack;defineProperty(this,"stack",{configurable:true,value:stack,writable:true});return stack},set:function setStack(stack){defineProperty(error,"stack",{configurable:true,value:stack,writable:true})}})}}function BaseError(message){if(message!==undefined){defineProperty(this,"message",{configurable:true,value:message,writable:true})}var cname=this.constructor.name;if(cname!==undefined&&cname!==this.name){defineProperty(this,"name",{configurable:true,value:cname,writable:true})}captureStackTrace(this,this.constructor)}BaseError.prototype=Object.create(Error.prototype,{constructor:{configurable:true,value:BaseError,writable:true}});var setFunctionName=function(){function setFunctionName(fn,name){return defineProperty(fn,"name",{configurable:true,value:name})}try{var f=function(){};setFunctionName(f,"foo");if(f.name==="foo"){return setFunctionName}}catch(_){}}();function makeError(constructor,super_){if(super_==null||super_===Error){super_=BaseError}else if(typeof super_!=="function"){throw new TypeError("super_ should be a function")}var name;if(typeof constructor==="string"){name=constructor;constructor=construct!==undefined?function(){return construct(super_,arguments,this.constructor)}:function(){super_.apply(this,arguments)};if(setFunctionName!==undefined){setFunctionName(constructor,name);name=undefined}}else if(typeof constructor!=="function"){throw new TypeError("constructor should be either a string or a function")}constructor.super_=constructor["super"]=super_;var properties={constructor:{configurable:true,value:constructor,writable:true}};if(name!==undefined){properties.name={configurable:true,value:name,writable:true}}constructor.prototype=Object.create(super_.prototype,properties);return constructor}exports=module.exports=makeError;exports.BaseError=BaseError},{}],361:[function(require,module,exports){(function(Buffer){"use strict";var inherits=require("inherits");var HashBase=require("hash-base");var ARRAY16=new Array(16);function MD5(){HashBase.call(this,64);this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878}inherits(MD5,HashBase);MD5.prototype._update=function(){var M=ARRAY16;for(var i=0;i<16;++i)M[i]=this._block.readInt32LE(i*4);var a=this._a;var b=this._b;var c=this._c;var d=this._d;a=fnF(a,b,c,d,M[0],3614090360,7);d=fnF(d,a,b,c,M[1],3905402710,12);c=fnF(c,d,a,b,M[2],606105819,17);b=fnF(b,c,d,a,M[3],3250441966,22);a=fnF(a,b,c,d,M[4],4118548399,7);d=fnF(d,a,b,c,M[5],1200080426,12);c=fnF(c,d,a,b,M[6],2821735955,17);b=fnF(b,c,d,a,M[7],4249261313,22);a=fnF(a,b,c,d,M[8],1770035416,7);d=fnF(d,a,b,c,M[9],2336552879,12);c=fnF(c,d,a,b,M[10],4294925233,17);b=fnF(b,c,d,a,M[11],2304563134,22);a=fnF(a,b,c,d,M[12],1804603682,7);d=fnF(d,a,b,c,M[13],4254626195,12);c=fnF(c,d,a,b,M[14],2792965006,17);b=fnF(b,c,d,a,M[15],1236535329,22);a=fnG(a,b,c,d,M[1],4129170786,5);d=fnG(d,a,b,c,M[6],3225465664,9);c=fnG(c,d,a,b,M[11],643717713,14);b=fnG(b,c,d,a,M[0],3921069994,20);a=fnG(a,b,c,d,M[5],3593408605,5);d=fnG(d,a,b,c,M[10],38016083,9);c=fnG(c,d,a,b,M[15],3634488961,14);b=fnG(b,c,d,a,M[4],3889429448,20);a=fnG(a,b,c,d,M[9],568446438,5);d=fnG(d,a,b,c,M[14],3275163606,9);c=fnG(c,d,a,b,M[3],4107603335,14);b=fnG(b,c,d,a,M[8],1163531501,20);a=fnG(a,b,c,d,M[13],2850285829,5);d=fnG(d,a,b,c,M[2],4243563512,9);c=fnG(c,d,a,b,M[7],1735328473,14);b=fnG(b,c,d,a,M[12],2368359562,20);a=fnH(a,b,c,d,M[5],4294588738,4);d=fnH(d,a,b,c,M[8],2272392833,11);c=fnH(c,d,a,b,M[11],1839030562,16);b=fnH(b,c,d,a,M[14],4259657740,23);a=fnH(a,b,c,d,M[1],2763975236,4);d=fnH(d,a,b,c,M[4],1272893353,11);c=fnH(c,d,a,b,M[7],4139469664,16);b=fnH(b,c,d,a,M[10],3200236656,23);a=fnH(a,b,c,d,M[13],681279174,4);d=fnH(d,a,b,c,M[0],3936430074,11);c=fnH(c,d,a,b,M[3],3572445317,16);b=fnH(b,c,d,a,M[6],76029189,23);a=fnH(a,b,c,d,M[9],3654602809,4);d=fnH(d,a,b,c,M[12],3873151461,11);c=fnH(c,d,a,b,M[15],530742520,16);b=fnH(b,c,d,a,M[2],3299628645,23);a=fnI(a,b,c,d,M[0],4096336452,6);d=fnI(d,a,b,c,M[7],1126891415,10);c=fnI(c,d,a,b,M[14],2878612391,15);b=fnI(b,c,d,a,M[5],4237533241,21);a=fnI(a,b,c,d,M[12],1700485571,6);d=fnI(d,a,b,c,M[3],2399980690,10);c=fnI(c,d,a,b,M[10],4293915773,15);b=fnI(b,c,d,a,M[1],2240044497,21);a=fnI(a,b,c,d,M[8],1873313359,6);d=fnI(d,a,b,c,M[15],4264355552,10);c=fnI(c,d,a,b,M[6],2734768916,15);b=fnI(b,c,d,a,M[13],1309151649,21);a=fnI(a,b,c,d,M[4],4149444226,6);d=fnI(d,a,b,c,M[11],3174756917,10);c=fnI(c,d,a,b,M[2],718787259,15);b=fnI(b,c,d,a,M[9],3951481745,21);this._a=this._a+a|0;this._b=this._b+b|0;this._c=this._c+c|0;this._d=this._d+d|0};MD5.prototype._digest=function(){this._block[this._blockOffset++]=128;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();var buffer=new Buffer(16);buffer.writeInt32LE(this._a,0);buffer.writeInt32LE(this._b,4);buffer.writeInt32LE(this._c,8);buffer.writeInt32LE(this._d,12);return buffer};function rotl(x,n){return x<<n|x>>>32-n}function fnF(a,b,c,d,m,k,s){return rotl(a+(b&c|~b&d)+m+k|0,s)+b|0}function fnG(a,b,c,d,m,k,s){return rotl(a+(b&d|c&~d)+m+k|0,s)+b|0}function fnH(a,b,c,d,m,k,s){return rotl(a+(b^c^d)+m+k|0,s)+b|0}function fnI(a,b,c,d,m,k,s){return rotl(a+(c^(b|~d))+m+k|0,s)+b|0}module.exports=MD5}).call(this,require("buffer").Buffer)},{buffer:150,"hash-base":362,inherits:352}],362:[function(require,module,exports){"use strict";var Buffer=require("safe-buffer").Buffer;var Transform=require("stream").Transform;var inherits=require("inherits");function throwIfNotStringOrBuffer(val,prefix){if(!Buffer.isBuffer(val)&&typeof val!=="string"){throw new TypeError(prefix+" must be a string or a buffer")}}function HashBase(blockSize){Transform.call(this);this._block=Buffer.allocUnsafe(blockSize);this._blockSize=blockSize;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false}inherits(HashBase,Transform);HashBase.prototype._transform=function(chunk,encoding,callback){var error=null;try{this.update(chunk,encoding)}catch(err){error=err}callback(error)};HashBase.prototype._flush=function(callback){var error=null;try{this.push(this.digest())}catch(err){error=err}callback(error)};HashBase.prototype.update=function(data,encoding){throwIfNotStringOrBuffer(data,"Data");if(this._finalized)throw new Error("Digest already called");if(!Buffer.isBuffer(data))data=Buffer.from(data,encoding);var block=this._block;var offset=0;while(this._blockOffset+data.length-offset>=this._blockSize){for(var i=this._blockOffset;i<this._blockSize;)block[i++]=data[offset++];this._update();this._blockOffset=0}while(offset<data.length)block[this._blockOffset++]=data[offset++];for(var j=0,carry=data.length*8;carry>0;++j){this._length[j]+=carry;carry=this._length[j]/4294967296|0;if(carry>0)this._length[j]-=4294967296*carry}return this};HashBase.prototype._update=function(){throw new Error("_update is not implemented")};HashBase.prototype.digest=function(encoding){if(this._finalized)throw new Error("Digest already called");this._finalized=true;var digest=this._digest();if(encoding!==undefined)digest=digest.toString(encoding);this._block.fill(0);this._blockOffset=0;for(var i=0;i<4;++i)this._length[i]=0;return digest};HashBase.prototype._digest=function(){throw new Error("_digest is not implemented")};module.exports=HashBase},{inherits:352,"safe-buffer":434,stream:480}],363:[function(require,module,exports){var bn=require("bn.js");var brorand=require("brorand");function MillerRabin(rand){this.rand=rand||new brorand.Rand}module.exports=MillerRabin;MillerRabin.create=function create(rand){return new MillerRabin(rand)};MillerRabin.prototype._randbelow=function _randbelow(n){var len=n.bitLength();var min_bytes=Math.ceil(len/8);do{var a=new bn(this.rand.generate(min_bytes))}while(a.cmp(n)>=0);return a};MillerRabin.prototype._randrange=function _randrange(start,stop){var size=stop.sub(start);return start.add(this._randbelow(size))};MillerRabin.prototype.test=function test(n,k,cb){var len=n.bitLength();var red=bn.mont(n);var rone=new bn(1).toRed(red);if(!k)k=Math.max(1,len/48|0);var n1=n.subn(1);for(var s=0;!n1.testn(s);s++){}var d=n.shrn(s);var rn1=n1.toRed(red);var prime=true;for(;k>0;k--){var a=this._randrange(new bn(2),n1);if(cb)cb(a);var x=a.toRed(red).redPow(d);if(x.cmp(rone)===0||x.cmp(rn1)===0)continue;for(var i=1;i<s;i++){x=x.redSqr();if(x.cmp(rone)===0)return false;if(x.cmp(rn1)===0)break}if(i===s)return false}return prime};MillerRabin.prototype.getDivisor=function getDivisor(n,k){var len=n.bitLength();var red=bn.mont(n);var rone=new bn(1).toRed(red);if(!k)k=Math.max(1,len/48|0);var n1=n.subn(1);for(var s=0;!n1.testn(s);s++){}var d=n.shrn(s);var rn1=n1.toRed(red);for(;k>0;k--){var a=this._randrange(new bn(2),n1);var g=n.gcd(a);if(g.cmpn(1)!==0)return g;var x=a.toRed(red).redPow(d);if(x.cmp(rone)===0||x.cmp(rn1)===0)continue;for(var i=1;i<s;i++){x=x.redSqr();if(x.cmp(rone)===0)return x.fromRed().subn(1).gcd(n);if(x.cmp(rn1)===0)break}if(i===s){x=x.redSqr();return x.fromRed().subn(1).gcd(n)}}return false}},{"bn.js":116,brorand:117}],364:[function(require,module,exports){module.exports=assert;function assert(val,msg){if(!val)throw new Error(msg||"Assertion failed")}assert.equal=function assertEqual(l,r,msg){if(l!=r)throw new Error(msg||"Assertion failed: "+l+" != "+r)}},{}],365:[function(require,module,exports){"use strict";var utils=exports;function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg!=="string"){for(var i=0;i<msg.length;i++)res[i]=msg[i]|0;return res}if(enc==="hex"){msg=msg.replace(/[^a-z0-9]+/gi,"");if(msg.length%2!==0)msg="0"+msg;for(var i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}else{for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}return res}utils.toArray=toArray;function zero2(word){if(word.length===1)return"0"+word;else return word}utils.zero2=zero2;function toHex(msg){var res="";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}utils.toHex=toHex;utils.encode=function encode(arr,enc){if(enc==="hex")return toHex(arr);else return arr}},{}],366:[function(require,module,exports){"use strict";var realSetTimeout=setTimeout;function configureLogger(config){config=config||{};if(!config.hasOwnProperty("logger")){config.logger=function(){}}if(!config.hasOwnProperty("useImmediateExceptions")){config.useImmediateExceptions=true}if(!config.hasOwnProperty("setTimeout")){config.setTimeout=realSetTimeout}return function logError(label,e){var msg=label+" threw exception: ";var err={name:e.name||label,message:e.message||e.toString(),stack:e.stack};function throwLoggedError(){err.message=msg+err.message;throw err}config.logger(msg+"["+err.name+"] "+err.message);if(err.stack){config.logger(err.stack)}if(config.useImmediateExceptions){throwLoggedError()}else{config.setTimeout(throwLoggedError,0)}}}module.exports=configureLogger},{}],367:[function(require,module,exports){"use strict";var Event=require("./event");function CustomEvent(type,customData,target){this.initEvent(type,false,false,target);this.detail=customData.detail||null}CustomEvent.prototype=new Event;CustomEvent.prototype.constructor=CustomEvent;module.exports=CustomEvent},{"./event":369}],368:[function(require,module,exports){"use strict";function flattenOptions(options){if(options!==Object(options)){return{capture:Boolean(options),once:false,passive:false}}return{capture:Boolean(options.capture),once:Boolean(options.once),passive:Boolean(options.passive)}}function not(fn){return function(){return!fn.apply(this,arguments)}}function hasListenerFilter(listener,capture){return function(listenerSpec){return listenerSpec.capture===capture&&listenerSpec.listener===listener}}var EventTarget={addEventListener:function addEventListener(event,listener,providedOptions){var options=flattenOptions(providedOptions);if(listener==null){return}this.eventListeners=this.eventListeners||{};this.eventListeners[event]=this.eventListeners[event]||[];if(!this.eventListeners[event].some(hasListenerFilter(listener,options.capture))){this.eventListeners[event].push({listener:listener,capture:options.capture,once:options.once})}},removeEventListener:function removeEventListener(event,listener,providedOptions){if(!this.eventListeners||!this.eventListeners[event]){return}var options=flattenOptions(providedOptions);this.eventListeners[event]=this.eventListeners[event].filter(not(hasListenerFilter(listener,options.capture)))},dispatchEvent:function dispatchEvent(event){if(!this.eventListeners||!this.eventListeners[event.type]){return Boolean(event.defaultPrevented)}var self=this;var type=event.type;var listeners=self.eventListeners[type];self.eventListeners[type]=listeners.filter(function(listenerSpec){return!listenerSpec.once});listeners.forEach(function(listenerSpec){var listener=listenerSpec.listener;if(typeof listener==="function"){listener.call(self,event)}else{listener.handleEvent(event)}});return Boolean(event.defaultPrevented)}};module.exports=EventTarget},{}],369:[function(require,module,exports){"use strict";function Event(type,bubbles,cancelable,target){this.initEvent(type,bubbles,cancelable,target)}Event.prototype={initEvent:function(type,bubbles,cancelable,target){this.type=type;this.bubbles=bubbles;this.cancelable=cancelable;this.target=target;this.currentTarget=target},stopPropagation:function(){},preventDefault:function(){this.defaultPrevented=true}};module.exports=Event},{}],370:[function(require,module,exports){"use strict";module.exports={Event:require("./event"),ProgressEvent:require("./progress-event"),CustomEvent:require("./custom-event"),EventTarget:require("./event-target")}},{"./custom-event":367,"./event":369,"./event-target":368,"./progress-event":371}],371:[function(require,module,exports){"use strict";var Event=require("./event");function ProgressEvent(type,progressEventRaw,target){this.initEvent(type,false,false,target);this.loaded=typeof progressEventRaw.loaded==="number"?progressEventRaw.loaded:null;this.total=typeof progressEventRaw.total==="number"?progressEventRaw.total:null;this.lengthComputable=!!progressEventRaw.total}ProgressEvent.prototype=new Event;ProgressEvent.prototype.constructor=ProgressEvent;module.exports=ProgressEvent},{"./event":369}],372:[function(require,module,exports){"use strict";var lolex=require("lolex");var fakeServer=require("./index");function Server(){}Server.prototype=fakeServer;var fakeServerWithClock=new Server;fakeServerWithClock.addRequest=function addRequest(xhr){if(xhr.async){if(typeof setTimeout.clock==="object"){this.clock=setTimeout.clock}else{this.clock=lolex.install();this.resetClock=true}if(!this.longestTimeout){var clockSetTimeout=this.clock.setTimeout;var clockSetInterval=this.clock.setInterval;var server=this;this.clock.setTimeout=function(fn,timeout){server.longestTimeout=Math.max(timeout,server.longestTimeout||0);return clockSetTimeout.apply(this,arguments)};this.clock.setInterval=function(fn,timeout){server.longestTimeout=Math.max(timeout,server.longestTimeout||0);return clockSetInterval.apply(this,arguments)}}}return fakeServer.addRequest.call(this,xhr)};fakeServerWithClock.respond=function respond(){var returnVal=fakeServer.respond.apply(this,arguments);if(this.clock){this.clock.tick(this.longestTimeout||0);this.longestTimeout=0;if(this.resetClock){this.clock.uninstall();this.resetClock=false}}return returnVal};fakeServerWithClock.restore=function restore(){if(this.clock){this.clock.uninstall()}return fakeServer.restore.apply(this,arguments)};module.exports=fakeServerWithClock},{"./index":374,lolex:358}],373:[function(require,module,exports){"use strict";var formatio=require("@sinonjs/formatio");var formatter=formatio.configure({quoteStrings:false,limitChildrenCount:250});module.exports=function format(){return formatter.ascii.apply(formatter,arguments)}},{"@sinonjs/formatio":70}],374:[function(require,module,exports){"use strict";var fakeXhr=require("../fake-xhr");var push=[].push;var format=require("./format");var configureLogError=require("../configure-logger");var pathToRegexp=require("path-to-regexp");var supportsArrayBuffer=typeof ArrayBuffer!=="undefined";function responseArray(handler){var response=handler;if(Object.prototype.toString.call(handler)!=="[object Array]"){response=[200,{},handler]}if(typeof response[2]!=="string"){if(!supportsArrayBuffer){throw new TypeError("Fake server response body should be a string, but was "+typeof response[2])}else if(!(response[2]instanceof ArrayBuffer)){throw new TypeError("Fake server response body should be a string or ArrayBuffer, but was "+typeof response[2])}}return response}function getDefaultWindowLocation(){return{host:"localhost",protocol:"http"}}function getWindowLocation(){if(typeof window==="undefined"){return getDefaultWindowLocation()}if(typeof window.location!=="undefined"){return window.location}if(typeof window.window!=="undefined"&&typeof window.window.location!=="undefined"){return window.window.location}return getDefaultWindowLocation()}function matchOne(response,reqMethod,reqUrl){var rmeth=response.method;var matchMethod=!rmeth||rmeth.toLowerCase()===reqMethod.toLowerCase();var url=response.url;var matchUrl=!url||url===reqUrl||typeof url.test==="function"&&url.test(reqUrl);return matchMethod&&matchUrl}function match(response,request){var wloc=getWindowLocation();var rCurrLoc=new RegExp("^"+wloc.protocol+"//"+wloc.host);var requestUrl=request.url;if(!/^https?:\/\//.test(requestUrl)||rCurrLoc.test(requestUrl)){requestUrl=requestUrl.replace(rCurrLoc,"")}if(matchOne(response,this.getHTTPMethod(request),requestUrl)){if(typeof response.response==="function"){var ru=response.url;var args=[request].concat(ru&&typeof ru.exec==="function"?ru.exec(requestUrl).slice(1):[]);return response.response.apply(response,args)}return true}return false}function incrementRequestCount(){var count=++this.requestCount;this.requested=true;this.requestedOnce=count===1;this.requestedTwice=count===2;this.requestedThrice=count===3;this.firstRequest=this.getRequest(0);this.secondRequest=this.getRequest(1);this.thirdRequest=this.getRequest(2);this.lastRequest=this.getRequest(count-1)}var fakeServer={create:function(config){var server=Object.create(this);server.configure(config);this.xhr=fakeXhr.useFakeXMLHttpRequest();server.requests=[];server.requestCount=0;server.queue=[];server.responses=[];this.xhr.onCreate=function(xhrObj){xhrObj.unsafeHeadersEnabled=function(){return!(server.unsafeHeadersEnabled===false)};server.addRequest(xhrObj)};return server},configure:function(config){var self=this;var whitelist={autoRespond:true,autoRespondAfter:true,respondImmediately:true,fakeHTTPMethods:true,logger:true,unsafeHeadersEnabled:true};config=config||{};Object.keys(config).forEach(function(setting){if(setting in whitelist){self[setting]=config[setting]}});self.logError=configureLogError(config)},addRequest:function addRequest(xhrObj){var server=this;push.call(this.requests,xhrObj);incrementRequestCount.call(this);xhrObj.onSend=function(){server.handleRequest(this);if(server.respondImmediately){server.respond()}else if(server.autoRespond&&!server.responding){setTimeout(function(){server.responding=false;server.respond()},server.autoRespondAfter||10);server.responding=true}}},getHTTPMethod:function getHTTPMethod(request){if(this.fakeHTTPMethods&&/post/i.test(request.method)){var matches=(request.requestBody||"").match(/_method=([^\b;]+)/);return matches?matches[1]:request.method}return request.method},handleRequest:function handleRequest(xhr){if(xhr.async){push.call(this.queue,xhr)}else{this.processRequest(xhr)}},logger:function(){},logError:configureLogError({}),log:function log(response,request){var str;str="Request:\n"+format(request)+"\n\n";str+="Response:\n"+format(response)+"\n\n";if(typeof this.logger==="function"){this.logger(str)}},respondWith:function respondWith(method,url,body){if(arguments.length===1&&typeof method!=="function"){this.response=responseArray(method);return}if(arguments.length===1){body=method;url=method=null}if(arguments.length===2){body=url;url=method;method=null}push.call(this.responses,{method:method,url:typeof url==="string"&&url!==""?pathToRegexp(url):url,response:typeof body==="function"?body:responseArray(body)})},respond:function respond(){if(arguments.length>0){this.respondWith.apply(this,arguments)}var queue=this.queue||[];var requests=queue.splice(0,queue.length);var self=this;requests.forEach(function(request){self.processRequest(request)})},processRequest:function processRequest(request){try{if(request.aborted){return}var response=this.response||[404,{},""];if(this.responses){for(var l=this.responses.length,i=l-1;i>=0;i--){if(match.call(this,this.responses[i],request)){response=this.responses[i].response;break}}}if(request.readyState!==4){this.log(response,request);request.respond(response[0],response[1],response[2])}}catch(e){this.logError("Fake server request processing",e)}},restore:function restore(){return this.xhr.restore&&this.xhr.restore.apply(this.xhr,arguments)},getRequest:function getRequest(index){return this.requests[index]||null},reset:function reset(){this.resetBehavior();this.resetHistory()},resetBehavior:function resetBehavior(){this.responses.length=this.queue.length=0},resetHistory:function resetHistory(){this.requests.length=this.requestCount=0;this.requestedOnce=this.requestedTwice=this.requestedThrice=this.requested=false;this.firstRequest=this.secondRequest=this.thirdRequest=this.lastRequest=null}};module.exports=fakeServer},{"../configure-logger":366,"../fake-xhr":376,"./format":373,"path-to-regexp":384}],375:[function(require,module,exports){"use strict";exports.isSupported=function(){try{return!!new Blob}catch(e){return false}}()},{}],376:[function(require,module,exports){(function(global){"use strict";var TextEncoder=require("text-encoding").TextEncoder;var configureLogError=require("../configure-logger");var sinonEvent=require("../event");var extend=require("just-extend");function getWorkingXHR(globalScope){var supportsXHR=typeof globalScope.XMLHttpRequest!=="undefined";if(supportsXHR){return globalScope.XMLHttpRequest}var supportsActiveX=typeof globalScope.ActiveXObject!=="undefined";if(supportsActiveX){return function(){return new globalScope.ActiveXObject("MSXML2.XMLHTTP.3.0")}}return false}var supportsProgress=typeof ProgressEvent!=="undefined";var supportsCustomEvent=typeof CustomEvent!=="undefined";var supportsFormData=typeof FormData!=="undefined";var supportsArrayBuffer=typeof ArrayBuffer!=="undefined";var supportsBlob=require("./blob").isSupported;var isReactNative=global.navigator&&global.navigator.product==="ReactNative";var sinonXhr={XMLHttpRequest:global.XMLHttpRequest};sinonXhr.GlobalXMLHttpRequest=global.XMLHttpRequest;sinonXhr.GlobalActiveXObject=global.ActiveXObject;sinonXhr.supportsActiveX=typeof sinonXhr.GlobalActiveXObject!=="undefined";sinonXhr.supportsXHR=typeof sinonXhr.GlobalXMLHttpRequest!=="undefined";sinonXhr.workingXHR=getWorkingXHR(global);sinonXhr.supportsTimeout=sinonXhr.supportsXHR&&"timeout"in new sinonXhr.GlobalXMLHttpRequest;sinonXhr.supportsCORS=isReactNative||sinonXhr.supportsXHR&&"withCredentials"in new sinonXhr.GlobalXMLHttpRequest;var unsafeHeaders={"Accept-Charset":true,"Accept-Encoding":true,Connection:true,"Content-Length":true,Cookie:true,Cookie2:true,"Content-Transfer-Encoding":true,Date:true,Expect:true,Host:true,"Keep-Alive":true,Referer:true,TE:true,Trailer:true,"Transfer-Encoding":true,Upgrade:true,"User-Agent":true,Via:true};function EventTargetHandler(){var self=this;var events=["loadstart","progress","abort","error","load","timeout","loadend"];function addEventListener(eventName){self.addEventListener(eventName,function(event){var listener=self["on"+eventName];if(listener&&typeof listener==="function"){listener.call(this,event)}})}events.forEach(addEventListener)}EventTargetHandler.prototype=sinonEvent.EventTarget;function FakeXMLHttpRequest(config){EventTargetHandler.call(this);this.readyState=FakeXMLHttpRequest.UNSENT;this.requestHeaders={};this.requestBody=null;this.status=0;this.statusText="";this.upload=new EventTargetHandler;this.responseType="";this.response="";this.logError=configureLogError(config);if(sinonXhr.supportsTimeout){this.timeout=0}if(sinonXhr.supportsCORS){this.withCredentials=false}if(typeof FakeXMLHttpRequest.onCreate==="function"){FakeXMLHttpRequest.onCreate(this)}}function verifyState(xhr){if(xhr.readyState!==FakeXMLHttpRequest.OPENED){throw new Error("INVALID_STATE_ERR")}if(xhr.sendFlag){throw new Error("INVALID_STATE_ERR")}}function getHeader(headers,header){var foundHeader=Object.keys(headers).filter(function(h){return h.toLowerCase()===header.toLowerCase()});return foundHeader[0]||null}function excludeSetCookie2Header(header){return!/^Set-Cookie2?$/i.test(header)}var apply=function(obj,method,args){switch(args.length){case 0:return obj[method]();case 1:return obj[method](args[0]);case 2:return obj[method](args[0],args[1]);case 3:return obj[method](args[0],args[1],args[2]);case 4:return obj[method](args[0],args[1],args[2],args[3]);case 5:return obj[method](args[0],args[1],args[2],args[3],args[4]);default:throw new Error("Unhandled case")}};FakeXMLHttpRequest.filters=[];FakeXMLHttpRequest.addFilter=function addFilter(fn){this.filters.push(fn)};FakeXMLHttpRequest.defake=function defake(fakeXhr,xhrArgs){var xhr=new sinonXhr.workingXHR;["open","setRequestHeader","send","abort","getResponseHeader","getAllResponseHeaders","addEventListener","overrideMimeType","removeEventListener"].forEach(function(method){fakeXhr[method]=function(){return apply(xhr,method,arguments)}});var copyAttrs=function(args){args.forEach(function(attr){fakeXhr[attr]=xhr[attr]})};var stateChange=function stateChange(){fakeXhr.readyState=xhr.readyState;if(xhr.readyState>=FakeXMLHttpRequest.HEADERS_RECEIVED){copyAttrs(["status","statusText"])}if(xhr.readyState>=FakeXMLHttpRequest.LOADING){copyAttrs(["responseText","response"])}if(xhr.readyState===FakeXMLHttpRequest.DONE){copyAttrs(["responseXML"])}if(fakeXhr.onreadystatechange){fakeXhr.onreadystatechange.call(fakeXhr,{target:fakeXhr,currentTarget:fakeXhr})}};if(xhr.addEventListener){Object.keys(fakeXhr.eventListeners).forEach(function(event){fakeXhr.eventListeners[event].forEach(function(handler){xhr.addEventListener(event,handler)})});xhr.addEventListener("readystatechange",stateChange)}else{xhr.onreadystatechange=stateChange}apply(xhr,"open",xhrArgs)};FakeXMLHttpRequest.useFilters=false;function verifyRequestOpened(xhr){if(xhr.readyState!==FakeXMLHttpRequest.OPENED){throw new Error("INVALID_STATE_ERR - "+xhr.readyState)}}function verifyRequestSent(xhr){if(xhr.readyState===FakeXMLHttpRequest.DONE){throw new Error("Request done")}}function verifyHeadersReceived(xhr){if(xhr.async&&xhr.readyState!==FakeXMLHttpRequest.HEADERS_RECEIVED){throw new Error("No headers received")}}function verifyResponseBodyType(body,responseType){var error=null;var isString=typeof body==="string";if(responseType==="arraybuffer"){if(!isString&&!(body instanceof ArrayBuffer)){error=new Error("Attempted to respond to fake XMLHttpRequest with "+body+", which is not a string or ArrayBuffer.");error.name="InvalidBodyException"}}else if(!isString){error=new Error("Attempted to respond to fake XMLHttpRequest with "+body+", which is not a string.");error.name="InvalidBodyException"}if(error){throw error}}function convertToArrayBuffer(body,encoding){if(body instanceof ArrayBuffer){return body}return new TextEncoder(encoding||"utf-8").encode(body).buffer}function isXmlContentType(contentType){return!contentType||/(text\/xml)|(application\/xml)|(\+xml)/.test(contentType)}function convertResponseBody(responseType,contentType,body){if(responseType===""||responseType==="text"){return body}else if(supportsArrayBuffer&&responseType==="arraybuffer"){return convertToArrayBuffer(body)}else if(responseType==="json"){try{return JSON.parse(body)}catch(e){return null}}else if(supportsBlob&&responseType==="blob"){var blobOptions={};if(contentType){blobOptions.type=contentType}return new Blob([convertToArrayBuffer(body)],blobOptions)}else if(responseType==="document"){if(isXmlContentType(contentType)){return FakeXMLHttpRequest.parseXML(body)}return null}throw new Error("Invalid responseType "+responseType)}function clearResponse(xhr){if(xhr.responseType===""||xhr.responseType==="text"){xhr.response=xhr.responseText=""}else{xhr.response=xhr.responseText=null}xhr.responseXML=null}function requestErrorSteps(xhr){clearResponse(xhr);xhr.errorFlag=true;xhr.requestHeaders={};xhr.responseHeaders={};if(xhr.readyState!==FakeXMLHttpRequest.UNSENT&&xhr.sendFlag&&xhr.readyState!==FakeXMLHttpRequest.DONE){xhr.readyStateChange(FakeXMLHttpRequest.DONE);xhr.sendFlag=false}}FakeXMLHttpRequest.parseXML=function parseXML(text){if(text!==""){try{if(typeof DOMParser!=="undefined"){var parser=new DOMParser;return parser.parseFromString(text,"text/xml")}var xmlDoc=new window.ActiveXObject("Microsoft.XMLDOM");xmlDoc.async="false";xmlDoc.loadXML(text);return xmlDoc}catch(e){}}return null};FakeXMLHttpRequest.statusCodes={100:"Continue",101:"Switching Protocols",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",300:"Multiple Choice",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported"};extend(FakeXMLHttpRequest.prototype,sinonEvent.EventTarget,{async:true,open:function open(method,url,async,username,password){this.method=method;this.url=url;this.async=typeof async==="boolean"?async:true;this.username=username;this.password=password;clearResponse(this);this.requestHeaders={};this.sendFlag=false;if(FakeXMLHttpRequest.useFilters===true){var xhrArgs=arguments;var defake=FakeXMLHttpRequest.filters.some(function(filter){return filter.apply(this,xhrArgs)});if(defake){FakeXMLHttpRequest.defake(this,arguments);return}}this.readyStateChange(FakeXMLHttpRequest.OPENED)},readyStateChange:function readyStateChange(state){this.readyState=state;var readyStateChangeEvent=new sinonEvent.Event("readystatechange",false,false,this);var event,progress;if(typeof this.onreadystatechange==="function"){try{this.onreadystatechange(readyStateChangeEvent)}catch(e){this.logError("Fake XHR onreadystatechange handler",e)}}if(this.readyState===FakeXMLHttpRequest.DONE){if(this.timedOut||this.aborted||this.status===0){progress={loaded:0,total:0};event=this.timedOut&&"timeout"||this.aborted&&"abort"||"error"}else{progress={loaded:100,total:100};event="load"}if(supportsProgress){this.upload.dispatchEvent(new sinonEvent.ProgressEvent("progress",progress,this));this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event,progress,this));this.upload.dispatchEvent(new sinonEvent.ProgressEvent("loadend",progress,this))}this.dispatchEvent(new sinonEvent.ProgressEvent("progress",progress,this));this.dispatchEvent(new sinonEvent.ProgressEvent(event,progress,this));this.dispatchEvent(new sinonEvent.ProgressEvent("loadend",progress,this))}this.dispatchEvent(readyStateChangeEvent)},setRequestHeader:function setRequestHeader(header,value){verifyState(this);var checkUnsafeHeaders=true;if(typeof this.unsafeHeadersEnabled==="function"){checkUnsafeHeaders=this.unsafeHeadersEnabled()}if(checkUnsafeHeaders&&(getHeader(unsafeHeaders,header)!==null||/^(Sec-|Proxy-)/i.test(header))){throw new Error('Refused to set unsafe header "'+header+'"')}var existingHeader=getHeader(this.requestHeaders,header);if(existingHeader){this.requestHeaders[existingHeader]+=","+value}else{this.requestHeaders[header]=value}},setStatus:function setStatus(status){var sanitizedStatus=typeof status==="number"?status:200;verifyRequestOpened(this);this.status=sanitizedStatus;this.statusText=FakeXMLHttpRequest.statusCodes[sanitizedStatus]},setResponseHeaders:function setResponseHeaders(headers){verifyRequestOpened(this);var responseHeaders=this.responseHeaders={};Object.keys(headers).forEach(function(header){responseHeaders[header]=headers[header]});if(this.async){this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED)}else{this.readyState=FakeXMLHttpRequest.HEADERS_RECEIVED}},send:function send(data){verifyState(this);if(!/^(head)$/i.test(this.method)){var contentType=getHeader(this.requestHeaders,"Content-Type");if(this.requestHeaders[contentType]){var value=this.requestHeaders[contentType].split(";");this.requestHeaders[contentType]=value[0]+";charset=utf-8"}else if(supportsFormData&&!(data instanceof FormData)){this.requestHeaders["Content-Type"]="text/plain;charset=utf-8"}this.requestBody=data}this.errorFlag=false;this.sendFlag=this.async;clearResponse(this);this.readyStateChange(FakeXMLHttpRequest.OPENED);if(typeof this.onSend==="function"){this.onSend(this)}if(sinonXhr.supportsTimeout&&typeof setInterval.clock==="object"&&typeof Date.clock==="object"){var initiatedTime=Date.now();var self=this;var clearIntervalId=setInterval(function(){if(self.readyState===FakeXMLHttpRequest.UNSENT||self.readyState===FakeXMLHttpRequest.DONE){clearInterval(clearIntervalId)}else if(typeof self.timeout==="number"&&self.timeout>0){if(Date.now()>=initiatedTime+self.timeout){self.triggerTimeout();clearInterval(clearIntervalId)}}},1)}this.dispatchEvent(new sinonEvent.Event("loadstart",false,false,this))},abort:function abort(){this.aborted=true;requestErrorSteps(this);this.readyState=FakeXMLHttpRequest.UNSENT},error:function(){clearResponse(this);this.errorFlag=true;this.requestHeaders={};this.responseHeaders={};this.readyStateChange(FakeXMLHttpRequest.DONE)},triggerTimeout:function triggerTimeout(){if(sinonXhr.supportsTimeout){this.timedOut=true;requestErrorSteps(this)}},getResponseHeader:function getResponseHeader(header){if(this.readyState<FakeXMLHttpRequest.HEADERS_RECEIVED){return null}if(/^Set-Cookie2?$/i.test(header)){return null}header=getHeader(this.responseHeaders,header);return this.responseHeaders[header]||null},getAllResponseHeaders:function getAllResponseHeaders(){if(this.readyState<FakeXMLHttpRequest.HEADERS_RECEIVED){return""}var responseHeaders=this.responseHeaders;var headers=Object.keys(responseHeaders).filter(excludeSetCookie2Header).reduce(function(prev,header){var value=responseHeaders[header];return prev+(header+": "+value+"\r\n")},"");return headers},setResponseBody:function setResponseBody(body){verifyRequestSent(this);verifyHeadersReceived(this);verifyResponseBodyType(body,this.responseType);var contentType=this.overriddenMimeType||this.getResponseHeader("Content-Type");var isTextResponse=this.responseType===""||this.responseType==="text";clearResponse(this);if(this.async){var chunkSize=this.chunkSize||10;var index=0;do{this.readyStateChange(FakeXMLHttpRequest.LOADING);if(isTextResponse){this.responseText=this.response+=body.substring(index,index+chunkSize)}index+=chunkSize}while(index<body.length)}this.response=convertResponseBody(this.responseType,contentType,body);if(isTextResponse){this.responseText=this.response}if(this.responseType==="document"){this.responseXML=this.response}else if(this.responseType===""&&isXmlContentType(contentType)){this.responseXML=FakeXMLHttpRequest.parseXML(this.responseText)}this.readyStateChange(FakeXMLHttpRequest.DONE)},respond:function respond(status,headers,body){this.setStatus(status);this.setResponseHeaders(headers||{});this.setResponseBody(body||"")},uploadProgress:function uploadProgress(progressEventRaw){if(supportsProgress){this.upload.dispatchEvent(new sinonEvent.ProgressEvent("progress",progressEventRaw))}},downloadProgress:function downloadProgress(progressEventRaw){if(supportsProgress){this.dispatchEvent(new sinonEvent.ProgressEvent("progress",progressEventRaw))}},uploadError:function uploadError(error){if(supportsCustomEvent){this.upload.dispatchEvent(new sinonEvent.CustomEvent("error",{detail:error}))}},overrideMimeType:function overrideMimeType(type){if(this.readyState>=FakeXMLHttpRequest.LOADING){throw new Error("INVALID_STATE_ERR")}this.overriddenMimeType=type}});var states={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4};extend(FakeXMLHttpRequest,states);extend(FakeXMLHttpRequest.prototype,states);function useFakeXMLHttpRequest(){FakeXMLHttpRequest.restore=function restore(keepOnCreate){if(sinonXhr.supportsXHR){global.XMLHttpRequest=sinonXhr.GlobalXMLHttpRequest}if(sinonXhr.supportsActiveX){global.ActiveXObject=sinonXhr.GlobalActiveXObject}delete FakeXMLHttpRequest.restore;if(keepOnCreate!==true){delete FakeXMLHttpRequest.onCreate}};if(sinonXhr.supportsXHR){global.XMLHttpRequest=FakeXMLHttpRequest}if(sinonXhr.supportsActiveX){global.ActiveXObject=function ActiveXObject(objId){if(objId==="Microsoft.XMLHTTP"||/^Msxml2\.XMLHTTP/i.test(objId)){return new FakeXMLHttpRequest}return new sinonXhr.GlobalActiveXObject(objId)}}return FakeXMLHttpRequest}module.exports={xhr:sinonXhr,FakeXMLHttpRequest:FakeXMLHttpRequest,useFakeXMLHttpRequest:useFakeXMLHttpRequest}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"../configure-logger":366,"../event":370,"./blob":375,"just-extend":356,"text-encoding":482}],377:[function(require,module,exports){"use strict";module.exports={fakeServer:require("./fake-server"),fakeServerWithClock:require("./fake-server/fake-server-with-clock"),fakeXhr:require("./fake-xhr")}},{"./fake-server":374,"./fake-server/fake-server-with-clock":372,"./fake-xhr":376}],378:[function(require,module,exports){module.exports={"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}},{}],379:[function(require,module,exports){"use strict";var asn1=require("asn1.js");exports.certificate=require("./certificate");var RSAPrivateKey=asn1.define("RSAPrivateKey",function(){this.seq().obj(this.key("version").int(),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())});exports.RSAPrivateKey=RSAPrivateKey;var RSAPublicKey=asn1.define("RSAPublicKey",function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())});exports.RSAPublicKey=RSAPublicKey;var PublicKey=asn1.define("SubjectPublicKeyInfo",function(){this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier),this.key("subjectPublicKey").bitstr())});exports.PublicKey=PublicKey;var AlgorithmIdentifier=asn1.define("AlgorithmIdentifier",function(){this.seq().obj(this.key("algorithm").objid(),this.key("none").null_().optional(),this.key("curve").objid().optional(),this.key("params").seq().obj(this.key("p").int(),this.key("q").int(),this.key("g").int()).optional())});var PrivateKeyInfo=asn1.define("PrivateKeyInfo",function(){this.seq().obj(this.key("version").int(),this.key("algorithm").use(AlgorithmIdentifier),this.key("subjectPrivateKey").octstr())});exports.PrivateKey=PrivateKeyInfo;var EncryptedPrivateKeyInfo=asn1.define("EncryptedPrivateKeyInfo",function(){this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(),this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(),this.key("kdeparams").seq().obj(this.key("salt").octstr(),this.key("iters").int())),this.key("cipher").seq().obj(this.key("algo").objid(),this.key("iv").octstr()))),this.key("subjectPrivateKey").octstr())});exports.EncryptedPrivateKey=EncryptedPrivateKeyInfo;var DSAPrivateKey=asn1.define("DSAPrivateKey",function(){this.seq().obj(this.key("version").int(),this.key("p").int(),this.key("q").int(),this.key("g").int(),this.key("pub_key").int(),this.key("priv_key").int())});exports.DSAPrivateKey=DSAPrivateKey;exports.DSAparam=asn1.define("DSAparam",function(){this.int()});var ECPrivateKey=asn1.define("ECPrivateKey",function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").optional().explicit(0).use(ECParameters),this.key("publicKey").optional().explicit(1).bitstr())});exports.ECPrivateKey=ECPrivateKey;var ECParameters=asn1.define("ECParameters",function(){this.choice({namedCurve:this.objid()})});exports.signature=asn1.define("signature",function(){this.seq().obj(this.key("r").int(),this.key("s").int())})},{"./certificate":380,"asn1.js":71}],380:[function(require,module,exports){"use strict";var asn=require("asn1.js");var Time=asn.define("Time",function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})});var AttributeTypeValue=asn.define("AttributeTypeValue",function(){this.seq().obj(this.key("type").objid(),this.key("value").any())});var AlgorithmIdentifier=asn.define("AlgorithmIdentifier",function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional())});var SubjectPublicKeyInfo=asn.define("SubjectPublicKeyInfo",function(){this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier),this.key("subjectPublicKey").bitstr())});var RelativeDistinguishedName=asn.define("RelativeDistinguishedName",function(){this.setof(AttributeTypeValue)});var RDNSequence=asn.define("RDNSequence",function(){this.seqof(RelativeDistinguishedName)});var Name=asn.define("Name",function(){this.choice({rdnSequence:this.use(RDNSequence)})});var Validity=asn.define("Validity",function(){this.seq().obj(this.key("notBefore").use(Time),this.key("notAfter").use(Time))});var Extension=asn.define("Extension",function(){this.seq().obj(this.key("extnID").objid(),this.key("critical").bool().def(false),this.key("extnValue").octstr())});var TBSCertificate=asn.define("TBSCertificate",function(){this.seq().obj(this.key("version").explicit(0).int(),this.key("serialNumber").int(),this.key("signature").use(AlgorithmIdentifier),this.key("issuer").use(Name),this.key("validity").use(Validity),this.key("subject").use(Name),this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo),this.key("issuerUniqueID").implicit(1).bitstr().optional(),this.key("subjectUniqueID").implicit(2).bitstr().optional(),this.key("extensions").explicit(3).seqof(Extension).optional())});var X509Certificate=asn.define("X509Certificate",function(){this.seq().obj(this.key("tbsCertificate").use(TBSCertificate),this.key("signatureAlgorithm").use(AlgorithmIdentifier),this.key("signatureValue").bitstr())});module.exports=X509Certificate},{"asn1.js":71}],381:[function(require,module,exports){(function(Buffer){var findProc=/Proc-Type: 4,ENCRYPTED\n\r?DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\n\r?\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?/m;var startRegex=/^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n/m;var fullRegex=/^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?-----END \1-----$/m;var evp=require("evp_bytestokey");var ciphers=require("browserify-aes");module.exports=function(okey,password){var key=okey.toString();var match=key.match(findProc);var decrypted;if(!match){var match2=key.match(fullRegex);decrypted=new Buffer(match2[2].replace(/\r?\n/g,""),"base64")}else{var suite="aes"+match[1];var iv=new Buffer(match[2],"hex");var cipherText=new Buffer(match[3].replace(/\r?\n/g,""),"base64");var cipherKey=evp(password,iv.slice(0,8),parseInt(match[1],10)).key;var out=[];var cipher=ciphers.createDecipheriv(suite,cipherKey,iv);out.push(cipher.update(cipherText));out.push(cipher.final());decrypted=Buffer.concat(out)}var tag=key.match(startRegex)[1];return{tag:tag,data:decrypted}}}).call(this,require("buffer").Buffer)},{"browserify-aes":121,buffer:150,evp_bytestokey:333}],382:[function(require,module,exports){(function(Buffer){var asn1=require("./asn1");var aesid=require("./aesid.json");var fixProc=require("./fixProc");var ciphers=require("browserify-aes");var compat=require("pbkdf2");module.exports=parseKeys;function parseKeys(buffer){var password;if(typeof buffer==="object"&&!Buffer.isBuffer(buffer)){password=buffer.passphrase;buffer=buffer.key}if(typeof buffer==="string"){buffer=new Buffer(buffer)}var stripped=fixProc(buffer,password);var type=stripped.tag;var data=stripped.data;var subtype,ndata;switch(type){case"CERTIFICATE":ndata=asn1.certificate.decode(data,"der").tbsCertificate.subjectPublicKeyInfo;case"PUBLIC KEY":if(!ndata){ndata=asn1.PublicKey.decode(data,"der")}subtype=ndata.algorithm.algorithm.join(".");switch(subtype){case"1.2.840.113549.1.1.1":return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data,"der");case"1.2.840.10045.2.1":ndata.subjectPrivateKey=ndata.subjectPublicKey;return{type:"ec",data:ndata};case"1.2.840.10040.4.1":ndata.algorithm.params.pub_key=asn1.DSAparam.decode(ndata.subjectPublicKey.data,"der");return{type:"dsa",data:ndata.algorithm.params};default:throw new Error("unknown key id "+subtype)}throw new Error("unknown key type "+type);case"ENCRYPTED PRIVATE KEY":data=asn1.EncryptedPrivateKey.decode(data,"der");data=decrypt(data,password);case"PRIVATE KEY":ndata=asn1.PrivateKey.decode(data,"der");subtype=ndata.algorithm.algorithm.join(".");switch(subtype){case"1.2.840.113549.1.1.1":return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey,"der");case"1.2.840.10045.2.1":return{curve:ndata.algorithm.curve,privateKey:asn1.ECPrivateKey.decode(ndata.subjectPrivateKey,"der").privateKey};case"1.2.840.10040.4.1":ndata.algorithm.params.priv_key=asn1.DSAparam.decode(ndata.subjectPrivateKey,"der");return{type:"dsa",params:ndata.algorithm.params};default:throw new Error("unknown key id "+subtype)}throw new Error("unknown key type "+type);case"RSA PUBLIC KEY":return asn1.RSAPublicKey.decode(data,"der");case"RSA PRIVATE KEY":return asn1.RSAPrivateKey.decode(data,"der");case"DSA PRIVATE KEY":return{type:"dsa",params:asn1.DSAPrivateKey.decode(data,"der")};case"EC PRIVATE KEY":data=asn1.ECPrivateKey.decode(data,"der");return{curve:data.parameters.value,privateKey:data.privateKey};default:throw new Error("unknown key type "+type)}}parseKeys.signature=asn1.signature;function decrypt(data,password){var salt=data.algorithm.decrypt.kde.kdeparams.salt;var iters=parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(),10);var algo=aesid[data.algorithm.decrypt.cipher.algo.join(".")];var iv=data.algorithm.decrypt.cipher.iv;var cipherText=data.subjectPrivateKey;var keylen=parseInt(algo.split("-")[1],10)/8;var key=compat.pbkdf2Sync(password,salt,iters,keylen);var cipher=ciphers.createDecipheriv(algo,key,iv);var out=[];out.push(cipher.update(cipherText));out.push(cipher.final());return Buffer.concat(out)}}).call(this,require("buffer").Buffer)},{"./aesid.json":378,"./asn1":379,"./fixProc":381,"browserify-aes":121,buffer:150,pbkdf2:387}],383:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift("..")}}return parts}var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;var splitPath=function(filename){return splitPathRe.exec(filename).slice(1)};exports.resolve=function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){continue}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=normalizeArray(filter(resolvedPath.split("/"),function(p){return!!p}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)==="/";path=normalizeArray(filter(path.split("/"),function(p){return!!p}),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path};exports.isAbsolute=function(path){return path.charAt(0)==="/"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!=="string"){throw new TypeError("Arguments to path.join must be strings")}return p}).join("/"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")};exports.sep="/";exports.delimiter=":";exports.dirname=function(path){var result=splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir};exports.basename=function(path,ext){var f=splitPath(path)[2];if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length)}return f};exports.extname=function(path){return splitPath(path)[3]};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i])}return res}var substr="ab".substr(-1)==="b"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)}}).call(this,require("_process"))},{_process:407}],384:[function(require,module,exports){var isarray=require("isarray");module.exports=pathToRegexp;module.exports.parse=parse;module.exports.compile=compile;module.exports.tokensToFunction=tokensToFunction;module.exports.tokensToRegExp=tokensToRegExp;var PATH_REGEXP=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function parse(str,options){var tokens=[];var key=0;var index=0;var path="";var defaultDelimiter=options&&options.delimiter||"/";var res;while((res=PATH_REGEXP.exec(str))!=null){var m=res[0];var escaped=res[1];var offset=res.index;path+=str.slice(index,offset);index=offset+m.length;if(escaped){path+=escaped[1];continue}var next=str[index];var prefix=res[2];var name=res[3];var capture=res[4];var group=res[5];var modifier=res[6];var asterisk=res[7];if(path){tokens.push(path);path=""}var partial=prefix!=null&&next!=null&&next!==prefix;var repeat=modifier==="+"||modifier==="*";var optional=modifier==="?"||modifier==="*";var delimiter=res[2]||defaultDelimiter;var pattern=capture||group;tokens.push({name:name||key++,prefix:prefix||"",delimiter:delimiter,optional:optional,repeat:repeat,partial:partial,asterisk:!!asterisk,pattern:pattern?escapeGroup(pattern):asterisk?".*":"[^"+escapeString(delimiter)+"]+?"})}if(index<str.length){path+=str.substr(index)}if(path){tokens.push(path)}return tokens}function compile(str,options){return tokensToFunction(parse(str,options))}function encodeURIComponentPretty(str){return encodeURI(str).replace(/[\/?#]/g,function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()})}function encodeAsterisk(str){return encodeURI(str).replace(/[?#]/g,function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()})}function tokensToFunction(tokens){var matches=new Array(tokens.length);for(var i=0;i<tokens.length;i++){if(typeof tokens[i]==="object"){matches[i]=new RegExp("^(?:"+tokens[i].pattern+")$")}}return function(obj,opts){var path="";var data=obj||{};var options=opts||{};var encode=options.pretty?encodeURIComponentPretty:encodeURIComponent;for(var i=0;i<tokens.length;i++){var token=tokens[i];if(typeof token==="string"){path+=token;continue}var value=data[token.name];var segment;if(value==null){if(token.optional){if(token.partial){path+=token.prefix}continue}else{throw new TypeError('Expected "'+token.name+'" to be defined')}}if(isarray(value)){if(!token.repeat){throw new TypeError('Expected "'+token.name+'" to not repeat, but received `'+JSON.stringify(value)+"`")}if(value.length===0){if(token.optional){continue}else{throw new TypeError('Expected "'+token.name+'" to not be empty')}}for(var j=0;j<value.length;j++){segment=encode(value[j]);if(!matches[i].test(segment)){throw new TypeError('Expected all "'+token.name+'" to match "'+token.pattern+'", but received `'+JSON.stringify(segment)+"`")}path+=(j===0?token.prefix:token.delimiter)+segment}continue}segment=token.asterisk?encodeAsterisk(value):encode(value);if(!matches[i].test(segment)){throw new TypeError('Expected "'+token.name+'" to match "'+token.pattern+'", but received "'+segment+'"')}path+=token.prefix+segment}return path}}function escapeString(str){return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function escapeGroup(group){return group.replace(/([=!:$\/()])/g,"\\$1")}function attachKeys(re,keys){re.keys=keys;return re}function flags(options){return options.sensitive?"":"i"}function regexpToRegexp(path,keys){var groups=path.source.match(/\((?!\?)/g);if(groups){for(var i=0;i<groups.length;i++){keys.push({name:i,prefix:null,delimiter:null,optional:false,repeat:false,partial:false,asterisk:false,pattern:null})}}return attachKeys(path,keys)}function arrayToRegexp(path,keys,options){var parts=[];for(var i=0;i<path.length;i++){parts.push(pathToRegexp(path[i],keys,options).source)}var regexp=new RegExp("(?:"+parts.join("|")+")",flags(options));return attachKeys(regexp,keys)}function stringToRegexp(path,keys,options){return tokensToRegExp(parse(path,options),keys,options)}function tokensToRegExp(tokens,keys,options){if(!isarray(keys)){options=keys||options;keys=[]}options=options||{};var strict=options.strict;var end=options.end!==false;var route="";for(var i=0;i<tokens.length;i++){var token=tokens[i];if(typeof token==="string"){route+=escapeString(token)}else{var prefix=escapeString(token.prefix);var capture="(?:"+token.pattern+")";keys.push(token);if(token.repeat){capture+="(?:"+prefix+capture+")*"}if(token.optional){if(!token.partial){capture="(?:"+prefix+"("+capture+"))?"}else{capture=prefix+"("+capture+")?"}}else{capture=prefix+"("+capture+")"}route+=capture}}var delimiter=escapeString(options.delimiter||"/");var endsWithDelimiter=route.slice(-delimiter.length)===delimiter;if(!strict){route=(endsWithDelimiter?route.slice(0,-delimiter.length):route)+"(?:"+delimiter+"(?=$))?"}if(end){route+="$"}else{route+=strict&&endsWithDelimiter?"":"(?="+delimiter+"|$)"}return attachKeys(new RegExp("^"+route,flags(options)),keys)}function pathToRegexp(path,keys,options){if(!isarray(keys)){options=keys||options;keys=[]}options=options||{};if(path instanceof RegExp){return regexpToRegexp(path,keys)}if(isarray(path)){return arrayToRegexp(path,keys,options)}return stringToRegexp(path,keys,options)}},{isarray:385}],385:[function(require,module,exports){module.exports=Array.isArray||function(arr){return Object.prototype.toString.call(arr)=="[object Array]"}},{}],386:[function(require,module,exports){"use strict";function hasProperty(obj,name){if(typeof obj==="undefined"||obj===null){return false}return name in Object(obj)}function parsePath(path){var str=path.replace(/([^\\])\[/g,"$1.[");var parts=str.match(/(\\\.|[^.]+?)+/g);return parts.map(function mapMatches(value){var regexp=/^\[(\d+)\]$/;var mArr=regexp.exec(value);var parsed=null;if(mArr){parsed={i:parseFloat(mArr[1])}}else{parsed={p:value.replace(/\\([.\[\]])/g,"$1")}}return parsed})}function internalGetPathValue(obj,parsed,pathDepth){var temporaryValue=obj;var res=null;pathDepth=typeof pathDepth==="undefined"?parsed.length:pathDepth;for(var i=0;i<pathDepth;i++){var part=parsed[i];if(temporaryValue){if(typeof part.p==="undefined"){temporaryValue=temporaryValue[part.i]}else{temporaryValue=temporaryValue[part.p]}if(i===pathDepth-1){res=temporaryValue}}}return res}function internalSetPathValue(obj,val,parsed){var tempObj=obj;var pathDepth=parsed.length;var part=null;for(var i=0;i<pathDepth;i++){var propName=null;var propVal=null;part=parsed[i];if(i===pathDepth-1){propName=typeof part.p==="undefined"?part.i:part.p;tempObj[propName]=val}else if(typeof part.p!=="undefined"&&tempObj[part.p]){tempObj=tempObj[part.p]}else if(typeof part.i!=="undefined"&&tempObj[part.i]){tempObj=tempObj[part.i]}else{var next=parsed[i+1];propName=typeof part.p==="undefined"?part.i:part.p;propVal=typeof next.p==="undefined"?[]:{};tempObj[propName]=propVal;tempObj=tempObj[propName]}}}function getPathInfo(obj,path){var parsed=parsePath(path);var last=parsed[parsed.length-1];var info={parent:parsed.length>1?internalGetPathValue(obj,parsed,parsed.length-1):obj,name:last.p||last.i,value:internalGetPathValue(obj,parsed)};info.exists=hasProperty(info.parent,info.name);return info}function getPathValue(obj,path){var info=getPathInfo(obj,path);return info.value}function setPathValue(obj,path,val){var parsed=parsePath(path);internalSetPathValue(obj,val,parsed);return obj}module.exports={hasProperty:hasProperty,getPathInfo:getPathInfo,getPathValue:getPathValue,setPathValue:setPathValue}},{}],387:[function(require,module,exports){exports.pbkdf2=require("./lib/async");exports.pbkdf2Sync=require("./lib/sync")},{"./lib/async":388,"./lib/sync":391}],388:[function(require,module,exports){(function(process,global){var checkParameters=require("./precondition");var defaultEncoding=require("./default-encoding");var sync=require("./sync");var Buffer=require("safe-buffer").Buffer;var ZERO_BUF;var subtle=global.crypto&&global.crypto.subtle;var toBrowser={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"};var checks=[];function checkNative(algo){if(global.process&&!global.process.browser){return Promise.resolve(false)}if(!subtle||!subtle.importKey||!subtle.deriveBits){return Promise.resolve(false)}if(checks[algo]!==undefined){return checks[algo]}ZERO_BUF=ZERO_BUF||Buffer.alloc(8);var prom=browserPbkdf2(ZERO_BUF,ZERO_BUF,10,128,algo).then(function(){return true}).catch(function(){return false});checks[algo]=prom;return prom}function browserPbkdf2(password,salt,iterations,length,algo){return subtle.importKey("raw",password,{name:"PBKDF2"},false,["deriveBits"]).then(function(key){return subtle.deriveBits({name:"PBKDF2",salt:salt,iterations:iterations,hash:{name:algo}},key,length<<3)}).then(function(res){return Buffer.from(res)})}function resolvePromise(promise,callback){promise.then(function(out){process.nextTick(function(){callback(null,out)})},function(e){process.nextTick(function(){callback(e)})})}module.exports=function(password,salt,iterations,keylen,digest,callback){if(!Buffer.isBuffer(password))password=Buffer.from(password,defaultEncoding);if(!Buffer.isBuffer(salt))salt=Buffer.from(salt,defaultEncoding);checkParameters(iterations,keylen);if(typeof digest==="function"){callback=digest;digest=undefined}if(typeof callback!=="function")throw new Error("No callback provided to pbkdf2");digest=digest||"sha1";var algo=toBrowser[digest.toLowerCase()];if(!algo||typeof global.Promise!=="function"){return process.nextTick(function(){var out;try{out=sync(password,salt,iterations,keylen,digest)}catch(e){return callback(e)}callback(null,out)})}resolvePromise(checkNative(algo).then(function(resp){if(resp){return browserPbkdf2(password,salt,iterations,keylen,algo)}else{return sync(password,salt,iterations,keylen,digest)}}),callback)}}).call(this,require("_process"),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./default-encoding":389,"./precondition":390,"./sync":391,_process:407,"safe-buffer":434}],389:[function(require,module,exports){(function(process){var defaultEncoding;if(process.browser){defaultEncoding="utf-8"}else{var pVersionMajor=parseInt(process.version.split(".")[0].slice(1),10);defaultEncoding=pVersionMajor>=6?"utf-8":"binary"}module.exports=defaultEncoding}).call(this,require("_process"))},{_process:407}],390:[function(require,module,exports){var MAX_ALLOC=Math.pow(2,30)-1;module.exports=function(iterations,keylen){if(typeof iterations!=="number"){throw new TypeError("Iterations not a number")}if(iterations<0){throw new TypeError("Bad iterations")}if(typeof keylen!=="number"){throw new TypeError("Key length not a number")}if(keylen<0||keylen>MAX_ALLOC||keylen!==keylen){throw new TypeError("Bad key length")}}},{}],391:[function(require,module,exports){var md5=require("create-hash/md5");var rmd160=require("ripemd160");var sha=require("sha.js");var checkParameters=require("./precondition");var defaultEncoding=require("./default-encoding");var Buffer=require("safe-buffer").Buffer;var ZEROS=Buffer.alloc(128);var sizes={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function Hmac(alg,key,saltLen){var hash=getDigest(alg);var blocksize=alg==="sha512"||alg==="sha384"?128:64;if(key.length>blocksize){key=hash(key)}else if(key.length<blocksize){key=Buffer.concat([key,ZEROS],blocksize)}var ipad=Buffer.allocUnsafe(blocksize+sizes[alg]);var opad=Buffer.allocUnsafe(blocksize+sizes[alg]);for(var i=0;i<blocksize;i++){ipad[i]=key[i]^54;opad[i]=key[i]^92}var ipad1=Buffer.allocUnsafe(blocksize+saltLen+4);ipad.copy(ipad1,0,0,blocksize);this.ipad1=ipad1;this.ipad2=ipad;this.opad=opad;this.alg=alg;this.blocksize=blocksize;this.hash=hash;this.size=sizes[alg]}Hmac.prototype.run=function(data,ipad){data.copy(ipad,this.blocksize);var h=this.hash(ipad);h.copy(this.opad,this.blocksize);return this.hash(this.opad)};function getDigest(alg){function shaFunc(data){return sha(alg).update(data).digest()}if(alg==="rmd160"||alg==="ripemd160")return rmd160;if(alg==="md5")return md5;return shaFunc}function pbkdf2(password,salt,iterations,keylen,digest){if(!Buffer.isBuffer(password))password=Buffer.from(password,defaultEncoding);if(!Buffer.isBuffer(salt))salt=Buffer.from(salt,defaultEncoding);checkParameters(iterations,keylen);digest=digest||"sha1";var hmac=new Hmac(digest,password,salt.length);var DK=Buffer.allocUnsafe(keylen);var block1=Buffer.allocUnsafe(salt.length+4);salt.copy(block1,0,0,salt.length);var destPos=0;var hLen=sizes[digest];var l=Math.ceil(keylen/hLen);for(var i=1;i<=l;i++){block1.writeUInt32BE(i,salt.length);var T=hmac.run(block1,hmac.ipad1);var U=T;for(var j=1;j<iterations;j++){U=hmac.run(U,hmac.ipad2);for(var k=0;k<hLen;k++)T[k]^=U[k]}T.copy(DK,destPos);destPos+=hLen}return DK}module.exports=pbkdf2},{"./default-encoding":389,"./precondition":390,"create-hash/md5":300,ripemd160:433,"safe-buffer":434,"sha.js":437}],392:[function(require,module,exports){"use strict";var url_1=require("url");var querystring_1=require("querystring");var support_1=require("./support");function lowerHeader(key){var lower=key.toLowerCase();if(lower==="referrer"){return"referer"}return lower}function type(str){return str==null?null:str.split(/ *; */,1)[0]}function concat(a,b){if(a==null){return b}return Array.isArray(a)?a.concat(b):[a,b]}var Base=function(){function Base(_a){var url=_a.url,headers=_a.headers,rawHeaders=_a.rawHeaders,query=_a.query;this.Url={};this.rawHeaders=[];if(url!=null){this.url=url}if(query!=null){this.query=Object.assign(this.query,typeof query==="string"?querystring_1.parse(query):query)}if(rawHeaders){if(rawHeaders.length%2===1){throw new TypeError("Expected raw headers length to be even, was "+rawHeaders.length)}this.rawHeaders=rawHeaders.slice(0)}else{this.headers=headers}}Object.defineProperty(Base.prototype,"url",{get:function(){return url_1.format(this.Url)},set:function(url){this.Url=url_1.parse(url,true,true)},enumerable:true,configurable:true});Object.defineProperty(Base.prototype,"query",{get:function(){return this.Url.query},set:function(query){this.Url.query=typeof query==="string"?querystring_1.parse(query):query;this.Url.search=null},enumerable:true,configurable:true});Object.defineProperty(Base.prototype,"headers",{get:function(){var headers={};for(var i=0;i<this.rawHeaders.length;i+=2){var key=lowerHeader(this.rawHeaders[i]);var value=concat(headers[key],this.rawHeaders[i+1]);headers[key]=value}return headers},set:function(headers){this.rawHeaders=[];if(headers){for(var _i=0,_a=Object.keys(headers);_i<_a.length;_i++){var key=_a[_i];this.append(key,headers[key])}}},enumerable:true,configurable:true});Base.prototype.toHeaders=function(){var headers={};for(var i=0;i<this.rawHeaders.length;i+=2){var key=this.rawHeaders[i];var value=concat(headers[key],this.rawHeaders[i+1]);headers[key]=value}return headers};Base.prototype.set=function(name,value){this.remove(name);this.append(name,value);return this};Base.prototype.append=function(name,value){if(Array.isArray(value)){for(var _i=0,value_1=value;_i<value_1.length;_i++){var val=value_1[_i];if(val!=null){this.rawHeaders.push(name,val)}}}else{if(value!=null){this.rawHeaders.push(name,value)}}return this};Base.prototype.name=function(name){var lowered=lowerHeader(name);for(var i=0;i<this.rawHeaders.length;i+=2){if(lowerHeader(this.rawHeaders[i])===lowered){return this.rawHeaders[i]}}return undefined};Base.prototype.get=function(name){var lowered=lowerHeader(name);for(var i=0;i<this.rawHeaders.length;i+=2){if(lowerHeader(this.rawHeaders[i])===lowered){return this.rawHeaders[i+1]}}return undefined};Base.prototype.getAll=function(name){var lowered=lowerHeader(name);var result=[];for(var i=0;i<this.rawHeaders.length;i+=2){if(lowerHeader(this.rawHeaders[i])===lowered){result.push(this.rawHeaders[i+1])}}return result};Base.prototype.remove=function(name){var lowered=lowerHeader(name);for(var i=0;i<this.rawHeaders.length;i+=2){if(lowerHeader(this.rawHeaders[i])===lowered){support_1.splice(this.rawHeaders,i,2)}}return this};Base.prototype.type=function(value){if(arguments.length===0){return type(this.get("Content-Type"))}return this.set("Content-Type",value)};return Base}();exports.Base=Base},{"./support":405,querystring:417,url:488}],393:[function(require,module,exports){"use strict";var response_1=require("./response");var index_1=require("./plugins/index");function createTransport(options){return{use:use,abort:abort,open:function(request){return handle(request,options)}}}exports.createTransport=createTransport;var use=[index_1.stringify(),index_1.headers()];function handle(request,options){return new Promise(function(resolve,reject){var type=options.type||"text";var url=request.url,method=request.method;if(window.location.protocol==="https:"&&/^http\:/.test(url)){return reject(request.error('The request to "'+url+'" was blocked',"EBLOCKED"))}var xhr=request._raw=new XMLHttpRequest;function done(){return new Promise(function(resolve){return resolve(new response_1.Response({status:xhr.status===1223?204:xhr.status,statusText:xhr.statusText,rawHeaders:parseToRawHeaders(xhr.getAllResponseHeaders()),body:type==="text"?xhr.responseText:xhr.response,url:xhr.responseURL}))})}xhr.onload=function(){return resolve(done())};xhr.onabort=function(){return resolve(done())};xhr.onerror=function(){return reject(request.error('Unable to connect to "'+request.url+'"',"EUNAVAILABLE"))};xhr.onprogress=function(e){if(e.lengthComputable){request.downloadLength=e.total}request._setDownloadedBytes(e.loaded)};xhr.upload.onloadend=function(){return request.downloaded=1};if(method==="GET"||method==="HEAD"||!xhr.upload){request.uploadLength=0;request._setUploadedBytes(0,1)}else{xhr.upload.onprogress=function(e){if(e.lengthComputable){request.uploadLength=e.total}request._setUploadedBytes(e.loaded)};xhr.upload.onloadend=function(){return request.uploaded=1}}try{xhr.open(method,url)}catch(e){return reject(request.error('Refused to connect to "'+url+'"',"ECSP",e))}if(options.withCredentials){xhr.withCredentials=true}if(options.overrideMimeType){xhr.overrideMimeType(options.overrideMimeType)}if(type!=="text"){try{xhr.responseType=type}finally{if(xhr.responseType!==type){return reject(request.error("Unsupported type: "+type,"ETYPE"))}}}for(var i=0;i<request.rawHeaders.length;i+=2){xhr.setRequestHeader(request.rawHeaders[i],request.rawHeaders[i+1])}xhr.send(request.body)})}function abort(request){request._raw.abort()}function parseToRawHeaders(headers){var rawHeaders=[];var lines=headers.split(/\r?\n/);for(var _i=0,lines_1=lines;_i<lines_1.length;_i++){var line=lines_1[_i];if(line){var indexOf=line.indexOf(":");var name_1=line.substr(0,indexOf).trim();var value=line.substr(indexOf+1).trim();rawHeaders.push(name_1,value)}}return rawHeaders}},{"./plugins/index":400,"./response":404}],394:[function(require,module,exports){"use strict";module.exports=FormData},{}],395:[function(require,module,exports){"use strict";var CookieJar=function(){function CookieJar(){throw new TypeError("Cookie jars are not available in browsers")}return CookieJar}();exports.CookieJar=CookieJar},{}],396:[function(require,module,exports){"use strict";function __export(m){for(var p in m)if(!exports.hasOwnProperty(p))exports[p]=m[p]}var FormData=require("form-data");exports.FormData=FormData;var request_1=require("./request");var plugins=require("./plugins/index");exports.plugins=plugins;var form_1=require("./form");exports.form=form_1.default;var jar_1=require("./jar");exports.jar=jar_1.default;var error_1=require("./error");exports.PopsicleError=error_1.default;var index_1=require("./index");exports.createTransport=index_1.createTransport;function defaults(defaultsOptions){var transport=index_1.createTransport({type:"text"});var defaults=Object.assign({},{transport:transport},defaultsOptions);return function popsicle(options){var opts=Object.assign({},defaults,typeof options==="string"?{url:options}:options);if(typeof opts.url!=="string"){throw new TypeError("The URL must be a string")}return new request_1.Request(opts)}}exports.defaults=defaults;exports.request=defaults({});exports.get=defaults({method:"get"});exports.post=defaults({method:"post"});exports.put=defaults({method:"put"});exports.patch=defaults({method:"patch"});exports.del=defaults({method:"delete"});exports.head=defaults({method:"head"});__export(require("./base"));__export(require("./request"));__export(require("./response"));Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.request},{"./base":392,"./error":397,"./form":398,"./index":393,"./jar":399,"./plugins/index":400,"./request":403,"./response":404,"form-data":394}],397:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};var makeErrorCause=require("make-error-cause");var PopsicleError=function(_super){__extends(PopsicleError,_super);function PopsicleError(message,code,original,popsicle){var _this=_super.call(this,message,original)||this;_this.name="PopsicleError";_this.code=code;_this.popsicle=popsicle;return _this}return PopsicleError}(makeErrorCause.BaseError);Object.defineProperty(exports,"__esModule",{value:true});exports.default=PopsicleError},{"make-error-cause":359}],398:[function(require,module,exports){"use strict";var FormData=require("form-data");function form(obj){var form=new FormData;if(obj){Object.keys(obj).forEach(function(name){form.append(name,obj[name])})}return form}Object.defineProperty(exports,"__esModule",{value:true});exports.default=form},{"form-data":394}],399:[function(require,module,exports){"use strict";var tough_cookie_1=require("tough-cookie");function cookieJar(store){return new tough_cookie_1.CookieJar(store)}Object.defineProperty(exports,"__esModule",{value:true});exports.default=cookieJar},{"tough-cookie":395}],400:[function(require,module,exports){"use strict";function __export(m){for(var p in m)if(!exports.hasOwnProperty(p))exports[p]=m[p]}__export(require("./common"))},{"./common":401}],401:[function(require,module,exports){"use strict";var FormData=require("form-data");var querystring_1=require("querystring");var index_1=require("./is-host/index");var form_1=require("../form");var JSON_MIME_REGEXP=/^application\/(?:[\w!#\$%&\*`\-\.\^~]*\+)?json$/i;var URL_ENCODED_MIME_REGEXP=/^application\/x-www-form-urlencoded$/i;var FORM_MIME_REGEXP=/^multipart\/form-data$/i;var JSON_PROTECTION_PREFIX=/^\)\]\}',?\n/;function wrap(value){return function(){return value}}exports.wrap=wrap;exports.headers=wrap(function(request,next){if(!request.get("Accept")){request.set("Accept","*/*")}request.remove("Host");return next()});exports.stringify=wrap(function(request,next){var body=request.body;if(Object(body)!==body){request.body=body==null?null:String(body);return next()}if(index_1.default(body)){return next()}var type=request.type();if(!type){type="application/json";request.type(type)}try{if(JSON_MIME_REGEXP.test(type)){request.body=JSON.stringify(body)}else if(FORM_MIME_REGEXP.test(type)){request.body=form_1.default(body)}else if(URL_ENCODED_MIME_REGEXP.test(type)){request.body=querystring_1.stringify(body)}}catch(err){return Promise.reject(request.error("Unable to stringify request body: "+err.message,"ESTRINGIFY",err))}if(request.body instanceof FormData){request.remove("Content-Type")}return next()});function parse(type,strict){var types=Array.isArray(type)?type:[type];for(var _i=0,types_1=types;_i<types_1.length;_i++){var type_1=types_1[_i];if(type_1!=="json"&&type_1!=="urlencoded"){throw new TypeError("Unexpected parse type: "+type_1)}}return function(request,next){return next().then(function(response){var body=response.body;var responseType=response.type();if(body==null||body===""){response.body=null;return response}if(responseType==null){throw request.error("Unable to parse empty response content type","EPARSE")}if(typeof body!=="string"){throw request.error("Unable to parse non-string response body","EPARSE")}for(var _i=0,types_2=types;_i<types_2.length;_i++){var type_2=types_2[_i];if(type_2==="json"&&JSON_MIME_REGEXP.test(responseType)){try{response.body=JSON.parse(body.replace(JSON_PROTECTION_PREFIX,""))}catch(err){throw request.error("Unable to parse response body: "+err.message,"EPARSE",err)}return response}if(type_2==="urlencoded"&&URL_ENCODED_MIME_REGEXP.test(responseType)){response.body=querystring_1.parse(body);return response}}if(strict!==false){throw request.error("Unhandled response type: "+responseType,"EPARSE")}return response})}}exports.parse=parse},{"../form":398,"./is-host/index":402,"form-data":394,querystring:417}],402:[function(require,module,exports){"use strict";function isHostObject(object){var str=Object.prototype.toString.call(object);switch(str){case"[object File]":case"[object Blob]":case"[object FormData]":case"[object ArrayBuffer]":return true;default:return false}}Object.defineProperty(exports,"__esModule",{value:true});exports.default=isHostObject},{}],403:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};var base_1=require("./base");var support_1=require("./support");var error_1=require("./error");var Request=function(_super){__extends(Request,_super);function Request(options){var _this=_super.call(this,options)||this;_this.middleware=[];_this.opened=false;_this.aborted=false;_this.uploaded=0;_this.downloaded=0;_this.timeout=options.timeout|0;_this.method=(options.method||"GET").toUpperCase();_this.body=options.body;_this.events=options.events||Object.create(null);_this.transport=Object.assign({},options.transport);_this.use(options.use||_this.transport.use);_this._promise=Promise.resolve().then(function(){return exec(_this)});_this.once("abort",function(){if(_this.completed===1){return}_this.aborted=true});return _this}Request.prototype.error=function(message,code,original){return new error_1.default(message,code,original,this)};Request.prototype.then=function(onFulfilled,onRejected){return this._promise.then(onFulfilled,onRejected)};Request.prototype.catch=function(onRejected){return this._promise.then(null,onRejected)};Request.prototype.exec=function(cb){this.then(function(res){return cb(null,res)},cb)};Request.prototype.toOptions=function(){return{url:this.url,method:this.method,body:this.body,transport:this.transport,timeout:this.timeout,rawHeaders:this.rawHeaders,use:this.middleware,events:this.events}};Request.prototype.toJSON=function(){return{url:this.url,method:this.method,headers:this.headers,body:this.body,timeout:this.timeout}};Request.prototype.clone=function(){return new Request(this.toOptions())};Request.prototype.use=function(fn){if(Array.isArray(fn)){(_a=this.middleware).push.apply(_a,fn)}else{this.middleware.push(fn)}return this;var _a};Request.prototype.on=function(event,fn){if(Object.prototype.hasOwnProperty.call(this.events,event)){this.events[event].push(fn)}else{this.events[event]=[fn]}return this};Request.prototype.off=function(event,fn){if(Object.prototype.hasOwnProperty.call(this.events,event)){var list=this.events[event];var index=-1;for(var i=0;i<list.length;i++){if(list[i]===fn||list[i].listener===fn){index=i;break}}if(index>-1){if(list.length===1){delete this.events[event]}else{support_1.splice(this.events[event],index)}}}return this};Request.prototype.once=function(event,fn){return this.on(event,wrapOnce(this,event,fn))};Request.prototype.emit=function(event){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i]}if(!Object.prototype.hasOwnProperty.call(this.events,event)){return this}var listeners=this.events[event];if(listeners.length===1){args.length===0?listeners[0].call(this):listeners[0].apply(this,args)}else{for(var _a=0,_b=listeners.slice();_a<_b.length;_a++){var listener=_b[_a];args.length===0?listener.call(this):listener.apply(this,args)}}return this};Request.prototype.abort=function(){return this.emit("abort")};Request.prototype.handle=function(){var _this=this;this.opened=true;if(/^https?\:\/*(?:[~#\\\?;\:]|$)/.test(this.url)){return Promise.reject(this.error('Refused to connect to invalid URL "'+this.url+'"',"EINVALID"))}var timeout=this.timeout;var timer;var result=new Promise(function(resolve,reject){if(timeout>0){timer=setTimeout(function(){reject(_this.error("Timeout of "+timeout+"ms exceeded","ETIMEOUT"));_this.abort()},timeout)}_this.once("abort",function(){_this.emit("progress");reject(_this.error("Request aborted","EABORT"));if(_this.transport.abort){_this.transport.abort(_this)}});Promise.resolve(_this.transport.open(_this)).then(function(res){return resolve(res)},function(err){return reject(err)})});if(timeout>0){result.then(function(){return clearTimeout(timer)},function(){return clearTimeout(timer)})}return result};Object.defineProperty(Request.prototype,"completed",{get:function(){return(this.uploaded+this.downloaded)/2},enumerable:true,configurable:true});Object.defineProperty(Request.prototype,"completedBytes",{get:function(){return this.uploadedBytes+this.downloadedBytes},enumerable:true,configurable:true});Object.defineProperty(Request.prototype,"totalBytes",{get:function(){return this.uploadLength+this.downloadLength},enumerable:true,configurable:true});Request.prototype._setUploadedBytes=function(bytes,uploaded){if(bytes!==this.uploadedBytes){this.uploaded=uploaded||bytes/this.uploadLength;this.uploadedBytes=bytes;this.emit("progress")}};Request.prototype._setDownloadedBytes=function(bytes,downloaded){if(bytes!==this.downloadedBytes){this.downloaded=downloaded||bytes/this.downloadLength;this.downloadedBytes=bytes;this.emit("progress")}};return Request}(base_1.Base);exports.Request=Request;function wrapOnce(target,event,fn){var fired=false;var g=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i]}if(!fired){fired=true;target.off(event,fn);args.length===0?fn.call(target):fn.apply(target,args)}};g.listener=fn;return g}function exec(req){var index=-1;function dispatch(pos){if(pos<=index){throw new TypeError("`next()` called multiple times")}if(req.aborted){return Promise.reject(req.error("Request aborted","EABORT"))}index=pos;var fn=req.middleware[pos]||function(){return req.handle()};return new Promise(function(resolve){return resolve(fn(req,function next(){return dispatch(pos+1)}))})}return dispatch(0)}},{"./base":392,"./error":397,"./support":405}],404:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};var base_1=require("./base");var Response=function(_super){__extends(Response,_super);function Response(options){var _this=_super.call(this,options)||this;_this.body=options.body;_this.status=options.status;_this.statusText=options.statusText;return _this}Response.prototype.statusType=function(){return~~(this.status/100)};Response.prototype.toJSON=function(){return{url:this.url,headers:this.headers,body:this.body,status:this.status,statusText:this.statusText}};return Response}(base_1.Base);exports.Response=Response},{"./base":392}],405:[function(require,module,exports){"use strict";function splice(arr,start,count){if(count===void 0){count=1}for(var i=start;i<arr.length-count;i++){arr[i]=arr[i+count]}arr.length-=count}exports.splice=splice},{}],406:[function(require,module,exports){(function(process){"use strict";if(!process.version||process.version.indexOf("v0.")===0||process.version.indexOf("v1.")===0&&process.version.indexOf("v1.8.")!==0){module.exports={nextTick:nextTick}}else{module.exports=process}function nextTick(fn,arg1,arg2,arg3){if(typeof fn!=="function"){throw new TypeError('"callback" argument must be a function')}var len=arguments.length;var args,i;switch(len){case 0:case 1:return process.nextTick(fn);case 2:return process.nextTick(function afterTickOne(){fn.call(null,arg1)});case 3:return process.nextTick(function afterTickTwo(){fn.call(null,arg1,arg2)});case 4:return process.nextTick(function afterTickThree(){fn.call(null,arg1,arg2,arg3)});default:args=new Array(len-1);i=0;while(i<args.length){args[i++]=arguments[i]}return process.nextTick(function afterTick(){fn.apply(null,args)})}}}).call(this,require("_process"))},{_process:407}],407:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}(function(){try{if(typeof setTimeout==="function"){cachedSetTimeout=setTimeout}else{cachedSetTimeout=defaultSetTimout}}catch(e){cachedSetTimeout=defaultSetTimout}try{if(typeof clearTimeout==="function"){cachedClearTimeout=clearTimeout}else{cachedClearTimeout=defaultClearTimeout}}catch(e){cachedClearTimeout=defaultClearTimeout}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue)}else{queueIndex=-1}if(queue.length){drainQueue()}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run()}}queueIndex=-1;len=queue.length}currentQueue=null;draining=false;runClearTimeout(timeout)}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i]}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue)}};function Item(fun,array){this.fun=fun;this.array=array}Item.prototype.run=function(){this.fun.apply(null,this.array)};process.title="browser";process.browser=true;process.env={};process.argv=[];process.version="";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error("process.binding is not supported")};process.cwd=function(){return"/"};process.chdir=function(dir){throw new Error("process.chdir is not supported")};process.umask=function(){return 0}},{}],408:[function(require,module,exports){exports.publicEncrypt=require("./publicEncrypt");exports.privateDecrypt=require("./privateDecrypt");exports.privateEncrypt=function privateEncrypt(key,buf){return exports.publicEncrypt(key,buf,true)};exports.publicDecrypt=function publicDecrypt(key,buf){return exports.privateDecrypt(key,buf,true)}},{"./privateDecrypt":410,"./publicEncrypt":411}],409:[function(require,module,exports){(function(Buffer){var createHash=require("create-hash");module.exports=function(seed,len){var t=new Buffer("");var i=0,c;while(t.length<len){c=i2ops(i++);t=Buffer.concat([t,createHash("sha1").update(seed).update(c).digest()])}return t.slice(0,len)};function i2ops(c){var out=new Buffer(4);out.writeUInt32BE(c,0);return out}}).call(this,require("buffer").Buffer)},{buffer:150,"create-hash":298}],410:[function(require,module,exports){(function(Buffer){var parseKeys=require("parse-asn1");var mgf=require("./mgf");var xor=require("./xor");var bn=require("bn.js");var crt=require("browserify-rsa");var createHash=require("create-hash");var withPublic=require("./withPublic");module.exports=function privateDecrypt(private_key,enc,reverse){var padding;if(private_key.padding){padding=private_key.padding}else if(reverse){padding=1}else{padding=4}var key=parseKeys(private_key);var k=key.modulus.byteLength();if(enc.length>k||new bn(enc).cmp(key.modulus)>=0){throw new Error("decryption error")}var msg;if(reverse){msg=withPublic(new bn(enc),key)}else{msg=crt(enc,key)}var zBuffer=new Buffer(k-msg.length);zBuffer.fill(0);msg=Buffer.concat([zBuffer,msg],k);if(padding===4){return oaep(key,msg)}else if(padding===1){return pkcs1(key,msg,reverse)}else if(padding===3){return msg}else{throw new Error("unknown padding")}};function oaep(key,msg){var n=key.modulus;var k=key.modulus.byteLength();var mLen=msg.length;var iHash=createHash("sha1").update(new Buffer("")).digest();var hLen=iHash.length;var hLen2=2*hLen;if(msg[0]!==0){throw new Error("decryption error")}var maskedSeed=msg.slice(1,hLen+1);var maskedDb=msg.slice(hLen+1);var seed=xor(maskedSeed,mgf(maskedDb,hLen));var db=xor(maskedDb,mgf(seed,k-hLen-1));if(compare(iHash,db.slice(0,hLen))){throw new Error("decryption error")}var i=hLen;while(db[i]===0){i++}if(db[i++]!==1){throw new Error("decryption error")}return db.slice(i)}function pkcs1(key,msg,reverse){var p1=msg.slice(0,2);var i=2;var status=0;while(msg[i++]!==0){if(i>=msg.length){status++;break}}var ps=msg.slice(2,i-1);var p2=msg.slice(i-1,i);if(p1.toString("hex")!=="0002"&&!reverse||p1.toString("hex")!=="0001"&&reverse){status++}if(ps.length<8){status++}if(status){throw new Error("decryption error")}return msg.slice(i)}function compare(a,b){a=new Buffer(a);b=new Buffer(b);var dif=0;var len=a.length;if(a.length!==b.length){dif++;len=Math.min(a.length,b.length)}var i=-1;while(++i<len){dif+=a[i]^b[i]}return dif}}).call(this,require("buffer").Buffer)},{"./mgf":409,"./withPublic":412,"./xor":413,"bn.js":116,"browserify-rsa":140,buffer:150,"create-hash":298,"parse-asn1":382}],411:[function(require,module,exports){(function(Buffer){var parseKeys=require("parse-asn1");var randomBytes=require("randombytes");var createHash=require("create-hash");var mgf=require("./mgf");var xor=require("./xor");var bn=require("bn.js");var withPublic=require("./withPublic");var crt=require("browserify-rsa");var constants={RSA_PKCS1_OAEP_PADDING:4,RSA_PKCS1_PADDIN:1,RSA_NO_PADDING:3};module.exports=function publicEncrypt(public_key,msg,reverse){var padding;if(public_key.padding){padding=public_key.padding}else if(reverse){padding=1}else{padding=4}var key=parseKeys(public_key);var paddedMsg;if(padding===4){paddedMsg=oaep(key,msg)}else if(padding===1){paddedMsg=pkcs1(key,msg,reverse)}else if(padding===3){paddedMsg=new bn(msg);if(paddedMsg.cmp(key.modulus)>=0){throw new Error("data too long for modulus")}}else{throw new Error("unknown padding")}if(reverse){return crt(paddedMsg,key)}else{return withPublic(paddedMsg,key)}};function oaep(key,msg){var k=key.modulus.byteLength();var mLen=msg.length;var iHash=createHash("sha1").update(new Buffer("")).digest();var hLen=iHash.length;var hLen2=2*hLen;if(mLen>k-hLen2-2){throw new Error("message too long")}var ps=new Buffer(k-mLen-hLen2-2);ps.fill(0);var dblen=k-hLen-1;var seed=randomBytes(hLen);var maskedDb=xor(Buffer.concat([iHash,ps,new Buffer([1]),msg],dblen),mgf(seed,dblen));var maskedSeed=xor(seed,mgf(maskedDb,hLen));return new bn(Buffer.concat([new Buffer([0]),maskedSeed,maskedDb],k))}function pkcs1(key,msg,reverse){var mLen=msg.length;var k=key.modulus.byteLength();if(mLen>k-11){throw new Error("message too long")}var ps;if(reverse){ps=new Buffer(k-mLen-3);ps.fill(255)}else{ps=nonZero(k-mLen-3)}return new bn(Buffer.concat([new Buffer([0,reverse?1:2]),ps,new Buffer([0]),msg],k))}function nonZero(len,crypto){var out=new Buffer(len);var i=0;var cache=randomBytes(len*2);var cur=0;var num;while(i<len){if(cur===cache.length){cache=randomBytes(len*2);cur=0}num=cache[cur++];if(num){out[i++]=num}}return out}}).call(this,require("buffer").Buffer)},{"./mgf":409,"./withPublic":412,"./xor":413,"bn.js":116,"browserify-rsa":140,buffer:150,"create-hash":298,"parse-asn1":382,randombytes:418}],412:[function(require,module,exports){(function(Buffer){var bn=require("bn.js");function withPublic(paddedMsg,key){return new Buffer(paddedMsg.toRed(bn.mont(key.modulus)).redPow(new bn(key.publicExponent)).fromRed().toArray())}module.exports=withPublic}).call(this,require("buffer").Buffer)},{"bn.js":116,buffer:150}],413:[function(require,module,exports){module.exports=function xor(a,b){var len=a.length;var i=-1;while(++i<len){a[i]^=b[i]}return a}},{}],414:[function(require,module,exports){(function(global){(function(root){var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule=typeof module=="object"&&module&&!module.nodeType&&module;var freeGlobal=typeof global=="object"&&global;if(freeGlobal.global===freeGlobal||freeGlobal.window===freeGlobal||freeGlobal.self===freeGlobal){root=freeGlobal}var punycode,maxInt=2147483647,base=36,tMin=1,tMax=26,skew=38,damp=700,initialBias=72,initialN=128,delimiter="-",regexPunycode=/^xn--/,regexNonASCII=/[^\x20-\x7E]/,regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g,errors={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},baseMinusTMin=base-tMin,floor=Math.floor,stringFromCharCode=String.fromCharCode,key;function error(type){throw new RangeError(errors[type])}function map(array,fn){var length=array.length;var result=[];while(length--){result[length]=fn(array[length])}return result}function mapDomain(string,fn){var parts=string.split("@");var result="";if(parts.length>1){result=parts[0]+"@";string=parts[1]}string=string.replace(regexSeparators,".");var labels=string.split(".");var encoded=map(labels,fn).join(".");return result+encoded}function ucs2decode(string){var output=[],counter=0,length=string.length,value,extra;while(counter<length){value=string.charCodeAt(counter++);if(value>=55296&&value<=56319&&counter<length){extra=string.charCodeAt(counter++);if((extra&64512)==56320){output.push(((value&1023)<<10)+(extra&1023)+65536)}else{output.push(value);counter--}}else{output.push(value)}}return output}function ucs2encode(array){return map(array,function(value){var output="";if(value>65535){value-=65536;output+=stringFromCharCode(value>>>10&1023|55296);value=56320|value&1023}output+=stringFromCharCode(value);return output}).join("")}function basicToDigit(codePoint){if(codePoint-48<10){return codePoint-22}if(codePoint-65<26){return codePoint-65}if(codePoint-97<26){return codePoint-97}return base}function digitToBasic(digit,flag){return digit+22+75*(digit<26)-((flag!=0)<<5)}function adapt(delta,numPoints,firstTime){var k=0;delta=firstTime?floor(delta/damp):delta>>1;delta+=floor(delta/numPoints);for(;delta>baseMinusTMin*tMax>>1;k+=base){delta=floor(delta/baseMinusTMin)}return floor(k+(baseMinusTMin+1)*delta/(delta+skew))}function decode(input){var output=[],inputLength=input.length,out,i=0,n=initialN,bias=initialBias,basic,j,index,oldi,w,k,digit,t,baseMinusT;basic=input.lastIndexOf(delimiter);if(basic<0){basic=0}for(j=0;j<basic;++j){if(input.charCodeAt(j)>=128){error("not-basic")}output.push(input.charCodeAt(j))}for(index=basic>0?basic+1:0;index<inputLength;){for(oldi=i,w=1,k=base;;k+=base){if(index>=inputLength){error("invalid-input")}digit=basicToDigit(input.charCodeAt(index++));if(digit>=base||digit>floor((maxInt-i)/w)){error("overflow")}i+=digit*w;t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(digit<t){break}baseMinusT=base-t;if(w>floor(maxInt/baseMinusT)){error("overflow")}w*=baseMinusT}out=output.length+1;bias=adapt(i-oldi,out,oldi==0);if(floor(i/out)>maxInt-n){error("overflow")}n+=floor(i/out);i%=out;output.splice(i++,0,n)}return ucs2encode(output)}function encode(input){var n,delta,handledCPCount,basicLength,bias,j,m,q,k,t,currentValue,output=[],inputLength,handledCPCountPlusOne,baseMinusT,qMinusT;input=ucs2decode(input);inputLength=input.length;n=initialN;delta=0;bias=initialBias;for(j=0;j<inputLength;++j){currentValue=input[j];if(currentValue<128){output.push(stringFromCharCode(currentValue))}}handledCPCount=basicLength=output.length;if(basicLength){output.push(delimiter)}while(handledCPCount<inputLength){for(m=maxInt,j=0;j<inputLength;++j){currentValue=input[j];if(currentValue>=n&&currentValue<m){m=currentValue}}handledCPCountPlusOne=handledCPCount+1;if(m-n>floor((maxInt-delta)/handledCPCountPlusOne)){error("overflow")}delta+=(m-n)*handledCPCountPlusOne;n=m;for(j=0;j<inputLength;++j){currentValue=input[j];if(currentValue<n&&++delta>maxInt){error("overflow")}if(currentValue==n){for(q=delta,k=base;;k+=base){t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(q<t){break}qMinusT=q-t;baseMinusT=base-t;output.push(stringFromCharCode(digitToBasic(t+qMinusT%baseMinusT,0)));q=floor(qMinusT/baseMinusT)}output.push(stringFromCharCode(digitToBasic(q,0)));bias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength);delta=0;++handledCPCount}}++delta;++n}return output.join("")}function toUnicode(input){return mapDomain(input,function(string){return regexPunycode.test(string)?decode(string.slice(4).toLowerCase()):string})}function toASCII(input){return mapDomain(input,function(string){return regexNonASCII.test(string)?"xn--"+encode(string):string})}punycode={version:"1.4.1",ucs2:{decode:ucs2decode,encode:ucs2encode},decode:decode,encode:encode,toASCII:toASCII,toUnicode:toUnicode};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd){define("punycode",function(){return punycode})}else if(freeExports&&freeModule){if(module.exports==freeExports){freeModule.exports=punycode}else{for(key in punycode){punycode.hasOwnProperty(key)&&(freeExports[key]=punycode[key])}}}else{root.punycode=punycode}})(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],415:[function(require,module,exports){"use strict";function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=function(qs,sep,eq,options){sep=sep||"&";eq=eq||"=";var obj={};if(typeof qs!=="string"||qs.length===0){return obj}var regexp=/\+/g;qs=qs.split(sep);var maxKeys=1e3;if(options&&typeof options.maxKeys==="number"){maxKeys=options.maxKeys}var len=qs.length;if(maxKeys>0&&len>maxKeys){len=maxKeys}for(var i=0;i<len;++i){var x=qs[i].replace(regexp,"%20"),idx=x.indexOf(eq),kstr,vstr,k,v;if(idx>=0){kstr=x.substr(0,idx);vstr=x.substr(idx+1)}else{kstr=x;vstr=""}k=decodeURIComponent(kstr);v=decodeURIComponent(vstr);if(!hasOwnProperty(obj,k)){obj[k]=v}else if(isArray(obj[k])){obj[k].push(v)}else{obj[k]=[obj[k],v]}}return obj};var isArray=Array.isArray||function(xs){return Object.prototype.toString.call(xs)==="[object Array]"}},{}],416:[function(require,module,exports){"use strict";var stringifyPrimitive=function(v){switch(typeof v){case"string":return v;case"boolean":return v?"true":"false";case"number":return isFinite(v)?v:"";default:return""}};module.exports=function(obj,sep,eq,name){sep=sep||"&";eq=eq||"=";if(obj===null){obj=undefined}if(typeof obj==="object"){return map(objectKeys(obj),function(k){var ks=encodeURIComponent(stringifyPrimitive(k))+eq;if(isArray(obj[k])){return map(obj[k],function(v){return ks+encodeURIComponent(stringifyPrimitive(v))}).join(sep)}else{return ks+encodeURIComponent(stringifyPrimitive(obj[k]))}}).join(sep)}if(!name)return"";return encodeURIComponent(stringifyPrimitive(name))+eq+encodeURIComponent(stringifyPrimitive(obj))};var isArray=Array.isArray||function(xs){return Object.prototype.toString.call(xs)==="[object Array]"};function map(xs,f){if(xs.map)return xs.map(f);var res=[];for(var i=0;i<xs.length;i++){res.push(f(xs[i],i))}return res}var objectKeys=Object.keys||function(obj){var res=[];for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))res.push(key)}return res}},{}],417:[function(require,module,exports){"use strict";exports.decode=exports.parse=require("./decode");exports.encode=exports.stringify=require("./encode")},{"./decode":415,"./encode":416}],418:[function(require,module,exports){(function(process,global){"use strict";function oldBrowser(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}var Buffer=require("safe-buffer").Buffer;var crypto=global.crypto||global.msCrypto;if(crypto&&crypto.getRandomValues){module.exports=randomBytes}else{module.exports=oldBrowser}function randomBytes(size,cb){if(size>65536)throw new Error("requested too many random bytes");var rawBytes=new global.Uint8Array(size);if(size>0){crypto.getRandomValues(rawBytes)}var bytes=Buffer.from(rawBytes.buffer);if(typeof cb==="function"){return process.nextTick(function(){cb(null,bytes)})}return bytes}}).call(this,require("_process"),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{_process:407,"safe-buffer":434}],419:[function(require,module,exports){(function(process,global){"use strict";function oldBrowser(){throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}var safeBuffer=require("safe-buffer");var randombytes=require("randombytes");var Buffer=safeBuffer.Buffer;var kBufferMaxLength=safeBuffer.kMaxLength;var crypto=global.crypto||global.msCrypto;var kMaxUint32=Math.pow(2,32)-1;function assertOffset(offset,length){if(typeof offset!=="number"||offset!==offset){throw new TypeError("offset must be a number")}if(offset>kMaxUint32||offset<0){throw new TypeError("offset must be a uint32")}if(offset>kBufferMaxLength||offset>length){throw new RangeError("offset out of range")}}function assertSize(size,offset,length){if(typeof size!=="number"||size!==size){throw new TypeError("size must be a number")}if(size>kMaxUint32||size<0){throw new TypeError("size must be a uint32")}if(size+offset>length||size>kBufferMaxLength){throw new RangeError("buffer too small")}}if(crypto&&crypto.getRandomValues||!process.browser){exports.randomFill=randomFill;exports.randomFillSync=randomFillSync}else{exports.randomFill=oldBrowser;exports.randomFillSync=oldBrowser}function randomFill(buf,offset,size,cb){if(!Buffer.isBuffer(buf)&&!(buf instanceof global.Uint8Array)){throw new TypeError('"buf" argument must be a Buffer or Uint8Array')}if(typeof offset==="function"){cb=offset;offset=0;size=buf.length}else if(typeof size==="function"){cb=size;size=buf.length-offset}else if(typeof cb!=="function"){throw new TypeError('"cb" argument must be a function')}assertOffset(offset,buf.length);assertSize(size,offset,buf.length);return actualFill(buf,offset,size,cb)}function actualFill(buf,offset,size,cb){if(process.browser){var ourBuf=buf.buffer;var uint=new Uint8Array(ourBuf,offset,size);crypto.getRandomValues(uint);if(cb){process.nextTick(function(){cb(null,buf)});return}return buf}if(cb){randombytes(size,function(err,bytes){if(err){return cb(err)}bytes.copy(buf,offset);cb(null,buf)});return}var bytes=randombytes(size);bytes.copy(buf,offset);return buf}function randomFillSync(buf,offset,size){if(typeof offset==="undefined"){offset=0}if(!Buffer.isBuffer(buf)&&!(buf instanceof global.Uint8Array)){throw new TypeError('"buf" argument must be a Buffer or Uint8Array')}assertOffset(offset,buf.length);if(size===undefined)size=buf.length-offset;assertSize(size,offset,buf.length);return actualFill(buf,offset,size)}}).call(this,require("_process"),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{_process:407,randombytes:418,"safe-buffer":434}],420:[function(require,module,exports){module.exports=require("./lib/_stream_duplex.js")},{"./lib/_stream_duplex.js":421}],421:[function(require,module,exports){"use strict";var processNextTick=require("process-nextick-args").nextTick;var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj){keys.push(key)}return keys};module.exports=Duplex;var util=require("core-util-is");util.inherits=require("inherits");var Readable=require("./_stream_readable");var Writable=require("./_stream_writable");util.inherits(Duplex,Readable);var keys=objectKeys(Writable.prototype);for(var v=0;v<keys.length;v++){var method=keys[v];if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method]}function Duplex(options){if(!(this instanceof Duplex))return new Duplex(options);Readable.call(this,options);Writable.call(this,options);if(options&&options.readable===false)this.readable=false;if(options&&options.writable===false)this.writable=false;this.allowHalfOpen=true;if(options&&options.allowHalfOpen===false)this.allowHalfOpen=false;this.once("end",onend)}function onend(){if(this.allowHalfOpen||this._writableState.ended)return;processNextTick(onEndNT,this)}function onEndNT(self){self.end()}Object.defineProperty(Duplex.prototype,"destroyed",{get:function(){if(this._readableState===undefined||this._writableState===undefined){return false}return this._readableState.destroyed&&this._writableState.destroyed},set:function(value){if(this._readableState===undefined||this._writableState===undefined){return}this._readableState.destroyed=value;this._writableState.destroyed=value}});Duplex.prototype._destroy=function(err,cb){this.push(null);this.end();processNextTick(cb,err)};function forEach(xs,f){for(var i=0,l=xs.length;i<l;i++){f(xs[i],i)}}},{"./_stream_readable":423,"./_stream_writable":425,"core-util-is":296,inherits:352,"process-nextick-args":406}],422:[function(require,module,exports){"use strict";module.exports=PassThrough;var Transform=require("./_stream_transform");var util=require("core-util-is");util.inherits=require("inherits");util.inherits(PassThrough,Transform);function PassThrough(options){if(!(this instanceof PassThrough))return new PassThrough(options);Transform.call(this,options)}PassThrough.prototype._transform=function(chunk,encoding,cb){cb(null,chunk)}},{"./_stream_transform":424,"core-util-is":296,inherits:352}],423:[function(require,module,exports){(function(process,global){"use strict";var processNextTick=require("process-nextick-args").nextTick;module.exports=Readable;var isArray=require("isarray");var Duplex;Readable.ReadableState=ReadableState;var EE=require("events").EventEmitter;var EElistenerCount=function(emitter,type){return emitter.listeners(type).length};var Stream=require("./internal/streams/stream");var Buffer=require("safe-buffer").Buffer;var OurUint8Array=global.Uint8Array||function(){};function _uint8ArrayToBuffer(chunk){return Buffer.from(chunk)}function _isUint8Array(obj){return Buffer.isBuffer(obj)||obj instanceof OurUint8Array}var util=require("core-util-is");util.inherits=require("inherits");var debugUtil=require("util");var debug=void 0;if(debugUtil&&debugUtil.debuglog){debug=debugUtil.debuglog("stream")}else{debug=function(){}}var BufferList=require("./internal/streams/BufferList");var destroyImpl=require("./internal/streams/destroy");var StringDecoder;util.inherits(Readable,Stream);var kProxyEvents=["error","close","destroy","pause","resume"];function prependListener(emitter,event,fn){if(typeof emitter.prependListener==="function")return emitter.prependListener(event,fn);if(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]]}function ReadableState(options,stream){Duplex=Duplex||require("./_stream_duplex");options=options||{};var isDuplex=stream instanceof Duplex;this.objectMode=!!options.objectMode;if(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;var hwm=options.highWaterMark;var readableHwm=options.readableHighWaterMark;var defaultHwm=this.objectMode?16:16*1024;if(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(readableHwm||readableHwm===0))this.highWaterMark=readableHwm;else this.highWaterMark=defaultHwm;this.highWaterMark=Math.floor(this.highWaterMark);this.buffer=new BufferList;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.destroyed=false;this.defaultEncoding=options.defaultEncoding||"utf8";this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(options.encoding){if(!StringDecoder)StringDecoder=require("string_decoder/").StringDecoder;this.decoder=new StringDecoder(options.encoding);this.encoding=options.encoding}}function Readable(options){Duplex=Duplex||require("./_stream_duplex");if(!(this instanceof Readable))return new Readable(options);this._readableState=new ReadableState(options,this);this.readable=true;if(options){if(typeof options.read==="function")this._read=options.read;if(typeof options.destroy==="function")this._destroy=options.destroy}Stream.call(this)}Object.defineProperty(Readable.prototype,"destroyed",{get:function(){if(this._readableState===undefined){return false}return this._readableState.destroyed},set:function(value){if(!this._readableState){return}this._readableState.destroyed=value}});Readable.prototype.destroy=destroyImpl.destroy;Readable.prototype._undestroy=destroyImpl.undestroy;Readable.prototype._destroy=function(err,cb){this.push(null);cb(err)};Readable.prototype.push=function(chunk,encoding){var state=this._readableState;var skipChunkCheck;if(!state.objectMode){if(typeof chunk==="string"){encoding=encoding||state.defaultEncoding;if(encoding!==state.encoding){chunk=Buffer.from(chunk,encoding);encoding=""}skipChunkCheck=true}}else{skipChunkCheck=true}return readableAddChunk(this,chunk,encoding,false,skipChunkCheck)};Readable.prototype.unshift=function(chunk){return readableAddChunk(this,chunk,null,true,false)};function readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){var state=stream._readableState;if(chunk===null){state.reading=false;onEofChunk(stream,state)}else{var er;if(!skipChunkCheck)er=chunkInvalid(state,chunk);if(er){stream.emit("error",er)}else if(state.objectMode||chunk&&chunk.length>0){if(typeof chunk!=="string"&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){chunk=_uint8ArrayToBuffer(chunk)}if(addToFront){if(state.endEmitted)stream.emit("error",new Error("stream.unshift() after end event"));else addChunk(stream,state,chunk,true)}else if(state.ended){stream.emit("error",new Error("stream.push() after EOF"))}else{state.reading=false;if(state.decoder&&!encoding){chunk=state.decoder.write(chunk);if(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state)}else{addChunk(stream,state,chunk,false)}}}else if(!addToFront){state.reading=false}}return needMoreData(state)}function addChunk(stream,state,chunk,addToFront){if(state.flowing&&state.length===0&&!state.sync){stream.emit("data",chunk);stream.read(0)}else{state.length+=state.objectMode?1:chunk.length;if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);if(state.needReadable)emitReadable(stream)}maybeReadMore(stream,state)}function chunkInvalid(state,chunk){var er;if(!_isUint8Array(chunk)&&typeof chunk!=="string"&&chunk!==undefined&&!state.objectMode){er=new TypeError("Invalid non-string/buffer chunk")}return er}function needMoreData(state){return!state.ended&&(state.needReadable||state.length<state.highWaterMark||state.length===0)}Readable.prototype.isPaused=function(){return this._readableState.flowing===false};Readable.prototype.setEncoding=function(enc){if(!StringDecoder)StringDecoder=require("string_decoder/").StringDecoder;this._readableState.decoder=new StringDecoder(enc);this._readableState.encoding=enc;return this};var MAX_HWM=8388608;function computeNewHighWaterMark(n){if(n>=MAX_HWM){n=MAX_HWM}else{n--;n|=n>>>1;n|=n>>>2;n|=n>>>4;n|=n>>>8;n|=n>>>16;n++}return n}function howMuchToRead(n,state){if(n<=0||state.length===0&&state.ended)return 0;if(state.objectMode)return 1;if(n!==n){if(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length}if(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);if(n<=state.length)return n;if(!state.ended){state.needReadable=true;return 0}return state.length}Readable.prototype.read=function(n){debug("read",n);n=parseInt(n,10);var state=this._readableState;var nOrig=n;if(n!==0)state.emittedReadable=false;if(n===0&&state.needReadable&&(state.length>=state.highWaterMark||state.ended)){debug("read: emitReadable",state.length,state.ended);if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);return null}n=howMuchToRead(n,state);if(n===0&&state.ended){if(state.length===0)endReadable(this);return null}var doRead=state.needReadable;debug("need readable",doRead);if(state.length===0||state.length-n<state.highWaterMark){doRead=true;debug("length less than watermark",doRead)}if(state.ended||state.reading){doRead=false;debug("reading or ended",doRead)}else if(doRead){debug("do read");state.reading=true;state.sync=true;if(state.length===0)state.needReadable=true;this._read(state.highWaterMark);state.sync=false;if(!state.reading)n=howMuchToRead(nOrig,state)}var ret;if(n>0)ret=fromList(n,state);else ret=null;if(ret===null){state.needReadable=true;n=0}else{state.length-=n}if(state.length===0){if(!state.ended)state.needReadable=true;if(nOrig!==n&&state.ended)endReadable(this)}if(ret!==null)this.emit("data",ret);return ret};function onEofChunk(stream,state){if(state.ended)return;if(state.decoder){var chunk=state.decoder.end();if(chunk&&chunk.length){state.buffer.push(chunk);state.length+=state.objectMode?1:chunk.length}}state.ended=true;emitReadable(stream)}function emitReadable(stream){var state=stream._readableState;state.needReadable=false;if(!state.emittedReadable){debug("emitReadable",state.flowing);state.emittedReadable=true;if(state.sync)processNextTick(emitReadable_,stream);else emitReadable_(stream)}}function emitReadable_(stream){debug("emit readable");stream.emit("readable");flow(stream)}function maybeReadMore(stream,state){if(!state.readingMore){state.readingMore=true;processNextTick(maybeReadMore_,stream,state)}}function maybeReadMore_(stream,state){var len=state.length;while(!state.reading&&!state.flowing&&!state.ended&&state.length<state.highWaterMark){debug("maybeReadMore read 0");stream.read(0);if(len===state.length)break;else len=state.length}state.readingMore=false}Readable.prototype._read=function(n){this.emit("error",new Error("_read() is not implemented"))};Readable.prototype.pipe=function(dest,pipeOpts){var src=this;var state=this._readableState;switch(state.pipesCount){case 0:state.pipes=dest;break;case 1:state.pipes=[state.pipes,dest];break;default:state.pipes.push(dest);break}state.pipesCount+=1;debug("pipe count=%d opts=%j",state.pipesCount,pipeOpts);var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;var endFn=doEnd?onend:unpipe;if(state.endEmitted)processNextTick(endFn);else src.once("end",endFn);dest.on("unpipe",onunpipe);function onunpipe(readable,unpipeInfo){debug("onunpipe");if(readable===src){if(unpipeInfo&&unpipeInfo.hasUnpiped===false){unpipeInfo.hasUnpiped=true;cleanup()}}}function onend(){debug("onend");dest.end()}var ondrain=pipeOnDrain(src);dest.on("drain",ondrain);var cleanedUp=false;function cleanup(){debug("cleanup");dest.removeListener("close",onclose);dest.removeListener("finish",onfinish);dest.removeListener("drain",ondrain);dest.removeListener("error",onerror);dest.removeListener("unpipe",onunpipe);src.removeListener("end",onend);src.removeListener("end",unpipe);src.removeListener("data",ondata);cleanedUp=true;if(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain()}var increasedAwaitDrain=false;src.on("data",ondata);function ondata(chunk){debug("ondata");increasedAwaitDrain=false;var ret=dest.write(chunk);if(false===ret&&!increasedAwaitDrain){if((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){debug("false write response, pause",src._readableState.awaitDrain);src._readableState.awaitDrain++;increasedAwaitDrain=true}src.pause()}}function onerror(er){debug("onerror",er);unpipe();dest.removeListener("error",onerror);if(EElistenerCount(dest,"error")===0)dest.emit("error",er)}prependListener(dest,"error",onerror);function onclose(){dest.removeListener("finish",onfinish);unpipe()}dest.once("close",onclose);function onfinish(){debug("onfinish");dest.removeListener("close",onclose);unpipe()}dest.once("finish",onfinish);function unpipe(){debug("unpipe");src.unpipe(dest)}dest.emit("pipe",src);if(!state.flowing){debug("pipe resume");src.resume()}return dest};function pipeOnDrain(src){return function(){var state=src._readableState;debug("pipeOnDrain",state.awaitDrain);if(state.awaitDrain)state.awaitDrain--;if(state.awaitDrain===0&&EElistenerCount(src,"data")){state.flowing=true;flow(src)}}}Readable.prototype.unpipe=function(dest){var state=this._readableState;var unpipeInfo={hasUnpiped:false};if(state.pipesCount===0)return this;if(state.pipesCount===1){if(dest&&dest!==state.pipes)return this;if(!dest)dest=state.pipes;state.pipes=null;state.pipesCount=0;state.flowing=false;if(dest)dest.emit("unpipe",this,unpipeInfo);return this}if(!dest){var dests=state.pipes;var len=state.pipesCount;state.pipes=null;state.pipesCount=0;state.flowing=false;for(var i=0;i<len;i++){dests[i].emit("unpipe",this,unpipeInfo)}return this}var index=indexOf(state.pipes,dest);if(index===-1)return this;state.pipes.splice(index,1);state.pipesCount-=1;if(state.pipesCount===1)state.pipes=state.pipes[0];dest.emit("unpipe",this,unpipeInfo);return this};Readable.prototype.on=function(ev,fn){var res=Stream.prototype.on.call(this,ev,fn);if(ev==="data"){if(this._readableState.flowing!==false)this.resume()}else if(ev==="readable"){var state=this._readableState;if(!state.endEmitted&&!state.readableListening){state.readableListening=state.needReadable=true;state.emittedReadable=false;if(!state.reading){processNextTick(nReadingNextTick,this)}else if(state.length){emitReadable(this)}}}return res};Readable.prototype.addListener=Readable.prototype.on;function nReadingNextTick(self){debug("readable nexttick read 0");self.read(0)}Readable.prototype.resume=function(){var state=this._readableState;if(!state.flowing){debug("resume");state.flowing=true;resume(this,state)}return this};function resume(stream,state){if(!state.resumeScheduled){state.resumeScheduled=true;processNextTick(resume_,stream,state)}}function resume_(stream,state){if(!state.reading){debug("resume read 0");stream.read(0)}state.resumeScheduled=false;state.awaitDrain=0;stream.emit("resume");flow(stream);if(state.flowing&&!state.reading)stream.read(0)}Readable.prototype.pause=function(){debug("call pause flowing=%j",this._readableState.flowing);if(false!==this._readableState.flowing){debug("pause");this._readableState.flowing=false;this.emit("pause")}return this};function flow(stream){var state=stream._readableState;debug("flow",state.flowing);while(state.flowing&&stream.read()!==null){}}Readable.prototype.wrap=function(stream){var _this=this;var state=this._readableState;var paused=false;stream.on("end",function(){debug("wrapped end");if(state.decoder&&!state.ended){var chunk=state.decoder.end();if(chunk&&chunk.length)_this.push(chunk)}_this.push(null)});stream.on("data",function(chunk){debug("wrapped data");if(state.decoder)chunk=state.decoder.write(chunk);if(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;var ret=_this.push(chunk);if(!ret){paused=true;stream.pause()}});for(var i in stream){if(this[i]===undefined&&typeof stream[i]==="function"){this[i]=function(method){return function(){return stream[method].apply(stream,arguments)}}(i)}}for(var n=0;n<kProxyEvents.length;n++){stream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]))}this._read=function(n){debug("wrapped _read",n);if(paused){paused=false;stream.resume()}};return this};Readable._fromList=fromList;function fromList(n,state){if(state.length===0)return null;var ret;if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){if(state.decoder)ret=state.buffer.join("");else if(state.buffer.length===1)ret=state.buffer.head.data;else ret=state.buffer.concat(state.length);state.buffer.clear()}else{ret=fromListPartial(n,state.buffer,state.decoder)}return ret}function fromListPartial(n,list,hasStrings){var ret;if(n<list.head.data.length){ret=list.head.data.slice(0,n);list.head.data=list.head.data.slice(n)}else if(n===list.head.data.length){ret=list.shift()}else{ret=hasStrings?copyFromBufferString(n,list):copyFromBuffer(n,list)}return ret}function copyFromBufferString(n,list){var p=list.head;var c=1;var ret=p.data;n-=ret.length;while(p=p.next){var str=p.data;var nb=n>str.length?str.length:n;if(nb===str.length)ret+=str;else ret+=str.slice(0,n);n-=nb;if(n===0){if(nb===str.length){++c;if(p.next)list.head=p.next;else list.head=list.tail=null}else{list.head=p;p.data=str.slice(nb)}break}++c}list.length-=c;return ret}function copyFromBuffer(n,list){var ret=Buffer.allocUnsafe(n);var p=list.head;var c=1;p.data.copy(ret);n-=p.data.length;while(p=p.next){var buf=p.data;var nb=n>buf.length?buf.length:n;buf.copy(ret,ret.length-n,0,nb);n-=nb;if(n===0){if(nb===buf.length){++c;if(p.next)list.head=p.next;else list.head=list.tail=null}else{list.head=p;p.data=buf.slice(nb)}break}++c}list.length-=c;return ret}function endReadable(stream){var state=stream._readableState;if(state.length>0)throw new Error('"endReadable()" called on non-empty stream');if(!state.endEmitted){state.ended=true;processNextTick(endReadableNT,state,stream)}}function endReadableNT(state,stream){if(!state.endEmitted&&state.length===0){state.endEmitted=true;stream.readable=false;stream.emit("end")}}function forEach(xs,f){for(var i=0,l=xs.length;i<l;i++){f(xs[i],i)}}function indexOf(xs,x){for(var i=0,l=xs.length;i<l;i++){if(xs[i]===x)return i}return-1}}).call(this,require("_process"),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./_stream_duplex":421,"./internal/streams/BufferList":426,"./internal/streams/destroy":427,"./internal/streams/stream":428,_process:407,"core-util-is":296,events:148,inherits:352,isarray:354,"process-nextick-args":406,"safe-buffer":434,"string_decoder/":481,util:118}],424:[function(require,module,exports){"use strict";module.exports=Transform;var Duplex=require("./_stream_duplex");var util=require("core-util-is");util.inherits=require("inherits");util.inherits(Transform,Duplex);function afterTransform(er,data){var ts=this._transformState;ts.transforming=false;var cb=ts.writecb;if(!cb){return this.emit("error",new Error("write callback called multiple times"))}ts.writechunk=null;ts.writecb=null;if(data!=null)this.push(data);cb(er);var rs=this._readableState;rs.reading=false;if(rs.needReadable||rs.length<rs.highWaterMark){this._read(rs.highWaterMark)}}function Transform(options){if(!(this instanceof Transform))return new Transform(options);Duplex.call(this,options);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};this._readableState.needReadable=true;this._readableState.sync=false;if(options){if(typeof options.transform==="function")this._transform=options.transform;if(typeof options.flush==="function")this._flush=options.flush}this.on("prefinish",prefinish)}function prefinish(){var _this=this;if(typeof this._flush==="function"){this._flush(function(er,data){done(_this,er,data)})}else{done(this,null,null)}}Transform.prototype.push=function(chunk,encoding){this._transformState.needTransform=false;return Duplex.prototype.push.call(this,chunk,encoding)};Transform.prototype._transform=function(chunk,encoding,cb){throw new Error("_transform() is not implemented")};Transform.prototype._write=function(chunk,encoding,cb){var ts=this._transformState;ts.writecb=cb;ts.writechunk=chunk;ts.writeencoding=encoding;if(!ts.transforming){var rs=this._readableState;if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark)}};Transform.prototype._read=function(n){var ts=this._transformState;if(ts.writechunk!==null&&ts.writecb&&!ts.transforming){ts.transforming=true;this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform)}else{ts.needTransform=true}};Transform.prototype._destroy=function(err,cb){var _this2=this;Duplex.prototype._destroy.call(this,err,function(err2){cb(err2);_this2.emit("close")})};function done(stream,er,data){if(er)return stream.emit("error",er);if(data!=null)stream.push(data);if(stream._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(stream._transformState.transforming)throw new Error("Calling transform done when still transforming");return stream.push(null)}},{"./_stream_duplex":421,"core-util-is":296,inherits:352}],425:[function(require,module,exports){(function(process,global){"use strict";var processNextTick=require("process-nextick-args").nextTick;module.exports=Writable;function WriteReq(chunk,encoding,cb){this.chunk=chunk;this.encoding=encoding;this.callback=cb;this.next=null}function CorkedRequest(state){var _this=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(_this,state)}}var asyncWrite=!process.browser&&["v0.10","v0.9."].indexOf(process.version.slice(0,5))>-1?setImmediate:processNextTick;var Duplex;Writable.WritableState=WritableState;var util=require("core-util-is");util.inherits=require("inherits");var internalUtil={deprecate:require("util-deprecate")};var Stream=require("./internal/streams/stream");var Buffer=require("safe-buffer").Buffer;var OurUint8Array=global.Uint8Array||function(){};function _uint8ArrayToBuffer(chunk){return Buffer.from(chunk)}function _isUint8Array(obj){return Buffer.isBuffer(obj)||obj instanceof OurUint8Array}var destroyImpl=require("./internal/streams/destroy");util.inherits(Writable,Stream);function nop(){}function WritableState(options,stream){Duplex=Duplex||require("./_stream_duplex");options=options||{};var isDuplex=stream instanceof Duplex;this.objectMode=!!options.objectMode;if(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;var hwm=options.highWaterMark;var writableHwm=options.writableHighWaterMark;var defaultHwm=this.objectMode?16:16*1024;if(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(writableHwm||writableHwm===0))this.highWaterMark=writableHwm;else this.highWaterMark=defaultHwm;this.highWaterMark=Math.floor(this.highWaterMark);this.finalCalled=false;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;this.destroyed=false;var noDecode=options.decodeStrings===false;this.decodeStrings=!noDecode;this.defaultEncoding=options.defaultEncoding||"utf8";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(er){onwrite(stream,er)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var current=this.bufferedRequest;var out=[];while(current){out.push(current);current=current.next}return out};(function(){try{Object.defineProperty(WritableState.prototype,"buffer",{get:internalUtil.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer "+"instead.","DEP0003")})}catch(_){}})();var realHasInstance;if(typeof Symbol==="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==="function"){realHasInstance=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function(object){if(realHasInstance.call(this,object))return true;if(this!==Writable)return false;return object&&object._writableState instanceof WritableState}})}else{realHasInstance=function(object){return object instanceof this}}function Writable(options){Duplex=Duplex||require("./_stream_duplex");if(!realHasInstance.call(Writable,this)&&!(this instanceof Duplex)){return new Writable(options)}this._writableState=new WritableState(options,this);this.writable=true;if(options){if(typeof options.write==="function")this._write=options.write;if(typeof options.writev==="function")this._writev=options.writev;if(typeof options.destroy==="function")this._destroy=options.destroy;if(typeof options.final==="function")this._final=options.final}Stream.call(this)}Writable.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))};function writeAfterEnd(stream,cb){var er=new Error("write after end");stream.emit("error",er);processNextTick(cb,er)}function validChunk(stream,state,chunk,cb){var valid=true;var er=false;if(chunk===null){er=new TypeError("May not write null values to stream")}else if(typeof chunk!=="string"&&chunk!==undefined&&!state.objectMode){er=new TypeError("Invalid non-string/buffer chunk")}if(er){stream.emit("error",er);processNextTick(cb,er);valid=false}return valid}Writable.prototype.write=function(chunk,encoding,cb){var state=this._writableState;var ret=false;var isBuf=!state.objectMode&&_isUint8Array(chunk);if(isBuf&&!Buffer.isBuffer(chunk)){chunk=_uint8ArrayToBuffer(chunk)}if(typeof encoding==="function"){cb=encoding;encoding=null}if(isBuf)encoding="buffer";else if(!encoding)encoding=state.defaultEncoding;if(typeof cb!=="function")cb=nop;if(state.ended)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){state.pendingcb++;ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb)}return ret};Writable.prototype.cork=function(){var state=this._writableState;state.corked++};Writable.prototype.uncork=function(){var state=this._writableState;if(state.corked){state.corked--;if(!state.writing&&!state.corked&&!state.finished&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){if(typeof encoding==="string")encoding=encoding.toLowerCase();if(!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((encoding+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+encoding);this._writableState.defaultEncoding=encoding;return this};function decodeChunk(state,chunk,encoding){if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==="string"){chunk=Buffer.from(chunk,encoding)}return chunk}function writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){if(!isBuf){var newChunk=decodeChunk(state,chunk,encoding);if(chunk!==newChunk){isBuf=true;encoding="buffer";chunk=newChunk}}var len=state.objectMode?1:chunk.length;state.length+=len;var ret=state.length<state.highWaterMark;if(!ret)state.needDrain=true;if(state.writing||state.corked){var last=state.lastBufferedRequest;state.lastBufferedRequest={chunk:chunk,encoding:encoding,isBuf:isBuf,callback:cb,next:null};if(last){last.next=state.lastBufferedRequest}else{state.bufferedRequest=state.lastBufferedRequest}state.bufferedRequestCount+=1}else{doWrite(stream,state,false,len,chunk,encoding,cb)}return ret}function doWrite(stream,state,writev,len,chunk,encoding,cb){state.writelen=len;state.writecb=cb;state.writing=true;state.sync=true;if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);state.sync=false}function onwriteError(stream,state,sync,er,cb){--state.pendingcb;if(sync){processNextTick(cb,er);processNextTick(finishMaybe,stream,state);stream._writableState.errorEmitted=true;stream.emit("error",er)}else{cb(er);stream._writableState.errorEmitted=true;stream.emit("error",er);finishMaybe(stream,state)}}function onwriteStateUpdate(state){state.writing=false;state.writecb=null;state.length-=state.writelen;state.writelen=0}function onwrite(stream,er){var state=stream._writableState;var sync=state.sync;var cb=state.writecb;onwriteStateUpdate(state);if(er)onwriteError(stream,state,sync,er,cb);else{var finished=needFinish(state);if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){clearBuffer(stream,state)}if(sync){asyncWrite(afterWrite,stream,state,finished,cb)}else{afterWrite(stream,state,finished,cb)}}}function afterWrite(stream,state,finished,cb){if(!finished)onwriteDrain(stream,state);state.pendingcb--;cb();finishMaybe(stream,state)}function onwriteDrain(stream,state){if(state.length===0&&state.needDrain){state.needDrain=false;stream.emit("drain")}}function clearBuffer(stream,state){state.bufferProcessing=true;var entry=state.bufferedRequest;if(stream._writev&&entry&&entry.next){var l=state.bufferedRequestCount;var buffer=new Array(l);var holder=state.corkedRequestsFree;holder.entry=entry;var count=0;var allBuffers=true;while(entry){buffer[count]=entry;if(!entry.isBuf)allBuffers=false;entry=entry.next;count+=1}buffer.allBuffers=allBuffers;doWrite(stream,state,true,state.length,buffer,"",holder.finish);state.pendingcb++;state.lastBufferedRequest=null;if(holder.next){state.corkedRequestsFree=holder.next;holder.next=null}else{state.corkedRequestsFree=new CorkedRequest(state)}state.bufferedRequestCount=0}else{while(entry){var chunk=entry.chunk;var encoding=entry.encoding;var cb=entry.callback;var len=state.objectMode?1:chunk.length;doWrite(stream,state,false,len,chunk,encoding,cb);entry=entry.next;state.bufferedRequestCount--;if(state.writing){break}}if(entry===null)state.lastBufferedRequest=null}state.bufferedRequest=entry;state.bufferProcessing=false}Writable.prototype._write=function(chunk,encoding,cb){cb(new Error("_write() is not implemented"))};Writable.prototype._writev=null;Writable.prototype.end=function(chunk,encoding,cb){var state=this._writableState;if(typeof chunk==="function"){cb=chunk;chunk=null;encoding=null}else if(typeof encoding==="function"){cb=encoding;encoding=null}if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);if(state.corked){state.corked=1;this.uncork()}if(!state.ending&&!state.finished)endWritable(this,state,cb)};function needFinish(state){return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing}function callFinal(stream,state){stream._final(function(err){state.pendingcb--;if(err){stream.emit("error",err)}state.prefinished=true;stream.emit("prefinish");finishMaybe(stream,state)})}function prefinish(stream,state){if(!state.prefinished&&!state.finalCalled){if(typeof stream._final==="function"){state.pendingcb++;state.finalCalled=true;processNextTick(callFinal,stream,state)}else{state.prefinished=true;stream.emit("prefinish")}}}function finishMaybe(stream,state){var need=needFinish(state);if(need){prefinish(stream,state);if(state.pendingcb===0){state.finished=true;stream.emit("finish")}}return need}function endWritable(stream,state,cb){state.ending=true;finishMaybe(stream,state);if(cb){if(state.finished)processNextTick(cb);else stream.once("finish",cb)}state.ended=true;stream.writable=false}function onCorkedFinish(corkReq,state,err){var entry=corkReq.entry;corkReq.entry=null;while(entry){var cb=entry.callback;state.pendingcb--;cb(err);entry=entry.next}if(state.corkedRequestsFree){state.corkedRequestsFree.next=corkReq}else{state.corkedRequestsFree=corkReq}}Object.defineProperty(Writable.prototype,"destroyed",{get:function(){if(this._writableState===undefined){return false}return this._writableState.destroyed},set:function(value){if(!this._writableState){return}this._writableState.destroyed=value}});Writable.prototype.destroy=destroyImpl.destroy;Writable.prototype._undestroy=destroyImpl.undestroy;Writable.prototype._destroy=function(err,cb){this.end();cb(err)}}).call(this,require("_process"),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./_stream_duplex":421,"./internal/streams/destroy":427,"./internal/streams/stream":428,_process:407,"core-util-is":296,inherits:352,"process-nextick-args":406,"safe-buffer":434,"util-deprecate":490}],426:[function(require,module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var Buffer=require("safe-buffer").Buffer;var util=require("util");function copyBuffer(src,target,offset){src.copy(target,offset)}module.exports=function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0}BufferList.prototype.push=function push(v){var entry={data:v,next:null};if(this.length>0)this.tail.next=entry;else this.head=entry;this.tail=entry;++this.length};BufferList.prototype.unshift=function unshift(v){var entry={data:v,next:this.head};if(this.length===0)this.tail=entry;this.head=entry;++this.length};BufferList.prototype.shift=function shift(){if(this.length===0)return;var ret=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return ret};BufferList.prototype.clear=function clear(){this.head=this.tail=null;this.length=0};BufferList.prototype.join=function join(s){if(this.length===0)return"";var p=this.head;var ret=""+p.data;while(p=p.next){ret+=s+p.data}return ret};BufferList.prototype.concat=function concat(n){if(this.length===0)return Buffer.alloc(0);if(this.length===1)return this.head.data;var ret=Buffer.allocUnsafe(n>>>0);var p=this.head;var i=0;while(p){copyBuffer(p.data,ret,i);i+=p.data.length;p=p.next}return ret};return BufferList}();if(util&&util.inspect&&util.inspect.custom){module.exports.prototype[util.inspect.custom]=function(){var obj=util.inspect({length:this.length});return this.constructor.name+" "+obj}}},{"safe-buffer":434,util:118}],427:[function(require,module,exports){"use strict";var processNextTick=require("process-nextick-args").nextTick;function destroy(err,cb){var _this=this;var readableDestroyed=this._readableState&&this._readableState.destroyed;var writableDestroyed=this._writableState&&this._writableState.destroyed;if(readableDestroyed||writableDestroyed){if(cb){cb(err)}else if(err&&(!this._writableState||!this._writableState.errorEmitted)){processNextTick(emitErrorNT,this,err)}return this}if(this._readableState){this._readableState.destroyed=true}if(this._writableState){this._writableState.destroyed=true}this._destroy(err||null,function(err){if(!cb&&err){processNextTick(emitErrorNT,_this,err);if(_this._writableState){_this._writableState.errorEmitted=true}}else if(cb){cb(err)}});return this}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finished=false;this._writableState.errorEmitted=false}}function emitErrorNT(self,err){self.emit("error",err)}module.exports={destroy:destroy,undestroy:undestroy}},{"process-nextick-args":406}],428:[function(require,module,exports){module.exports=require("events").EventEmitter},{events:148}],429:[function(require,module,exports){module.exports=require("./readable").PassThrough},{"./readable":430}],430:[function(require,module,exports){exports=module.exports=require("./lib/_stream_readable.js");exports.Stream=exports;exports.Readable=exports;exports.Writable=require("./lib/_stream_writable.js");exports.Duplex=require("./lib/_stream_duplex.js");exports.Transform=require("./lib/_stream_transform.js");exports.PassThrough=require("./lib/_stream_passthrough.js")},{"./lib/_stream_duplex.js":421,"./lib/_stream_passthrough.js":422,"./lib/_stream_readable.js":423,"./lib/_stream_transform.js":424,"./lib/_stream_writable.js":425}],431:[function(require,module,exports){module.exports=require("./readable").Transform},{"./readable":430}],432:[function(require,module,exports){module.exports=require("./lib/_stream_writable.js")},{"./lib/_stream_writable.js":425}],433:[function(require,module,exports){(function(Buffer){"use strict";var inherits=require("inherits");var HashBase=require("hash-base");function RIPEMD160(){HashBase.call(this,64);this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520}inherits(RIPEMD160,HashBase);RIPEMD160.prototype._update=function(){var m=new Array(16);for(var i=0;i<16;++i)m[i]=this._block.readInt32LE(i*4);var al=this._a;var bl=this._b;var cl=this._c;var dl=this._d;var el=this._e;al=fn1(al,bl,cl,dl,el,m[0],0,11);cl=rotl(cl,10);el=fn1(el,al,bl,cl,dl,m[1],0,14);bl=rotl(bl,10);dl=fn1(dl,el,al,bl,cl,m[2],0,15);al=rotl(al,10);cl=fn1(cl,dl,el,al,bl,m[3],0,12);el=rotl(el,10);bl=fn1(bl,cl,dl,el,al,m[4],0,5);dl=rotl(dl,10);al=fn1(al,bl,cl,dl,el,m[5],0,8);cl=rotl(cl,10);el=fn1(el,al,bl,cl,dl,m[6],0,7);bl=rotl(bl,10);dl=fn1(dl,el,al,bl,cl,m[7],0,9);al=rotl(al,10);cl=fn1(cl,dl,el,al,bl,m[8],0,11);el=rotl(el,10);bl=fn1(bl,cl,dl,el,al,m[9],0,13);dl=rotl(dl,10);al=fn1(al,bl,cl,dl,el,m[10],0,14);cl=rotl(cl,10);el=fn1(el,al,bl,cl,dl,m[11],0,15);bl=rotl(bl,10);dl=fn1(dl,el,al,bl,cl,m[12],0,6);al=rotl(al,10);cl=fn1(cl,dl,el,al,bl,m[13],0,7);el=rotl(el,10);bl=fn1(bl,cl,dl,el,al,m[14],0,9);dl=rotl(dl,10);al=fn1(al,bl,cl,dl,el,m[15],0,8);cl=rotl(cl,10);el=fn2(el,al,bl,cl,dl,m[7],1518500249,7);bl=rotl(bl,10);dl=fn2(dl,el,al,bl,cl,m[4],1518500249,6);al=rotl(al,10);cl=fn2(cl,dl,el,al,bl,m[13],1518500249,8);el=rotl(el,10);bl=fn2(bl,cl,dl,el,al,m[1],1518500249,13);dl=rotl(dl,10);al=fn2(al,bl,cl,dl,el,m[10],1518500249,11);cl=rotl(cl,10);el=fn2(el,al,bl,cl,dl,m[6],1518500249,9);bl=rotl(bl,10);dl=fn2(dl,el,al,bl,cl,m[15],1518500249,7);al=rotl(al,10);cl=fn2(cl,dl,el,al,bl,m[3],1518500249,15);el=rotl(el,10);bl=fn2(bl,cl,dl,el,al,m[12],1518500249,7);dl=rotl(dl,10);al=fn2(al,bl,cl,dl,el,m[0],1518500249,12);cl=rotl(cl,10);el=fn2(el,al,bl,cl,dl,m[9],1518500249,15);bl=rotl(bl,10);dl=fn2(dl,el,al,bl,cl,m[5],1518500249,9);al=rotl(al,10);cl=fn2(cl,dl,el,al,bl,m[2],1518500249,11);el=rotl(el,10);bl=fn2(bl,cl,dl,el,al,m[14],1518500249,7);dl=rotl(dl,10);al=fn2(al,bl,cl,dl,el,m[11],1518500249,13);cl=rotl(cl,10);el=fn2(el,al,bl,cl,dl,m[8],1518500249,12);bl=rotl(bl,10);dl=fn3(dl,el,al,bl,cl,m[3],1859775393,11);al=rotl(al,10);cl=fn3(cl,dl,el,al,bl,m[10],1859775393,13);el=rotl(el,10);bl=fn3(bl,cl,dl,el,al,m[14],1859775393,6);dl=rotl(dl,10);al=fn3(al,bl,cl,dl,el,m[4],1859775393,7);cl=rotl(cl,10);el=fn3(el,al,bl,cl,dl,m[9],1859775393,14);bl=rotl(bl,10);dl=fn3(dl,el,al,bl,cl,m[15],1859775393,9);al=rotl(al,10);cl=fn3(cl,dl,el,al,bl,m[8],1859775393,13);el=rotl(el,10);bl=fn3(bl,cl,dl,el,al,m[1],1859775393,15);dl=rotl(dl,10);al=fn3(al,bl,cl,dl,el,m[2],1859775393,14);cl=rotl(cl,10);el=fn3(el,al,bl,cl,dl,m[7],1859775393,8);bl=rotl(bl,10);dl=fn3(dl,el,al,bl,cl,m[0],1859775393,13);al=rotl(al,10);cl=fn3(cl,dl,el,al,bl,m[6],1859775393,6);el=rotl(el,10);bl=fn3(bl,cl,dl,el,al,m[13],1859775393,5);dl=rotl(dl,10);al=fn3(al,bl,cl,dl,el,m[11],1859775393,12);cl=rotl(cl,10);el=fn3(el,al,bl,cl,dl,m[5],1859775393,7);bl=rotl(bl,10);dl=fn3(dl,el,al,bl,cl,m[12],1859775393,5);al=rotl(al,10);cl=fn4(cl,dl,el,al,bl,m[1],2400959708,11);el=rotl(el,10);bl=fn4(bl,cl,dl,el,al,m[9],2400959708,12);dl=rotl(dl,10);al=fn4(al,bl,cl,dl,el,m[11],2400959708,14);cl=rotl(cl,10);el=fn4(el,al,bl,cl,dl,m[10],2400959708,15);bl=rotl(bl,10);dl=fn4(dl,el,al,bl,cl,m[0],2400959708,14);al=rotl(al,10);cl=fn4(cl,dl,el,al,bl,m[8],2400959708,15);el=rotl(el,10);bl=fn4(bl,cl,dl,el,al,m[12],2400959708,9);dl=rotl(dl,10);al=fn4(al,bl,cl,dl,el,m[4],2400959708,8);cl=rotl(cl,10);el=fn4(el,al,bl,cl,dl,m[13],2400959708,9);bl=rotl(bl,10);dl=fn4(dl,el,al,bl,cl,m[3],2400959708,14);al=rotl(al,10);cl=fn4(cl,dl,el,al,bl,m[7],2400959708,5);el=rotl(el,10);bl=fn4(bl,cl,dl,el,al,m[15],2400959708,6);dl=rotl(dl,10);al=fn4(al,bl,cl,dl,el,m[14],2400959708,8);cl=rotl(cl,10);el=fn4(el,al,bl,cl,dl,m[5],2400959708,6);bl=rotl(bl,10);dl=fn4(dl,el,al,bl,cl,m[6],2400959708,5);al=rotl(al,10);cl=fn4(cl,dl,el,al,bl,m[2],2400959708,12);el=rotl(el,10);bl=fn5(bl,cl,dl,el,al,m[4],2840853838,9);dl=rotl(dl,10);al=fn5(al,bl,cl,dl,el,m[0],2840853838,15);cl=rotl(cl,10);el=fn5(el,al,bl,cl,dl,m[5],2840853838,5);bl=rotl(bl,10);dl=fn5(dl,el,al,bl,cl,m[9],2840853838,11);al=rotl(al,10);cl=fn5(cl,dl,el,al,bl,m[7],2840853838,6);el=rotl(el,10);bl=fn5(bl,cl,dl,el,al,m[12],2840853838,8);dl=rotl(dl,10);al=fn5(al,bl,cl,dl,el,m[2],2840853838,13);cl=rotl(cl,10);el=fn5(el,al,bl,cl,dl,m[10],2840853838,12);bl=rotl(bl,10);dl=fn5(dl,el,al,bl,cl,m[14],2840853838,5);al=rotl(al,10);cl=fn5(cl,dl,el,al,bl,m[1],2840853838,12);el=rotl(el,10);bl=fn5(bl,cl,dl,el,al,m[3],2840853838,13);dl=rotl(dl,10);al=fn5(al,bl,cl,dl,el,m[8],2840853838,14);cl=rotl(cl,10);el=fn5(el,al,bl,cl,dl,m[11],2840853838,11);bl=rotl(bl,10);dl=fn5(dl,el,al,bl,cl,m[6],2840853838,8);al=rotl(al,10);cl=fn5(cl,dl,el,al,bl,m[15],2840853838,5);el=rotl(el,10);bl=fn5(bl,cl,dl,el,al,m[13],2840853838,6);dl=rotl(dl,10);var ar=this._a;var br=this._b;var cr=this._c;var dr=this._d;var er=this._e;ar=fn5(ar,br,cr,dr,er,m[5],1352829926,8);cr=rotl(cr,10);er=fn5(er,ar,br,cr,dr,m[14],1352829926,9);br=rotl(br,10);dr=fn5(dr,er,ar,br,cr,m[7],1352829926,9);ar=rotl(ar,10);cr=fn5(cr,dr,er,ar,br,m[0],1352829926,11);er=rotl(er,10);br=fn5(br,cr,dr,er,ar,m[9],1352829926,13);dr=rotl(dr,10);ar=fn5(ar,br,cr,dr,er,m[2],1352829926,15);cr=rotl(cr,10);er=fn5(er,ar,br,cr,dr,m[11],1352829926,15);br=rotl(br,10);dr=fn5(dr,er,ar,br,cr,m[4],1352829926,5);ar=rotl(ar,10);cr=fn5(cr,dr,er,ar,br,m[13],1352829926,7);er=rotl(er,10);br=fn5(br,cr,dr,er,ar,m[6],1352829926,7);dr=rotl(dr,10);ar=fn5(ar,br,cr,dr,er,m[15],1352829926,8);cr=rotl(cr,10);er=fn5(er,ar,br,cr,dr,m[8],1352829926,11);br=rotl(br,10);dr=fn5(dr,er,ar,br,cr,m[1],1352829926,14);ar=rotl(ar,10);cr=fn5(cr,dr,er,ar,br,m[10],1352829926,14);er=rotl(er,10);br=fn5(br,cr,dr,er,ar,m[3],1352829926,12);dr=rotl(dr,10);ar=fn5(ar,br,cr,dr,er,m[12],1352829926,6);cr=rotl(cr,10);er=fn4(er,ar,br,cr,dr,m[6],1548603684,9);br=rotl(br,10);dr=fn4(dr,er,ar,br,cr,m[11],1548603684,13);ar=rotl(ar,10);cr=fn4(cr,dr,er,ar,br,m[3],1548603684,15);er=rotl(er,10);br=fn4(br,cr,dr,er,ar,m[7],1548603684,7);dr=rotl(dr,10);ar=fn4(ar,br,cr,dr,er,m[0],1548603684,12);cr=rotl(cr,10);er=fn4(er,ar,br,cr,dr,m[13],1548603684,8);br=rotl(br,10);dr=fn4(dr,er,ar,br,cr,m[5],1548603684,9);ar=rotl(ar,10);cr=fn4(cr,dr,er,ar,br,m[10],1548603684,11);er=rotl(er,10);br=fn4(br,cr,dr,er,ar,m[14],1548603684,7);dr=rotl(dr,10);ar=fn4(ar,br,cr,dr,er,m[15],1548603684,7);cr=rotl(cr,10);er=fn4(er,ar,br,cr,dr,m[8],1548603684,12);br=rotl(br,10);dr=fn4(dr,er,ar,br,cr,m[12],1548603684,7);ar=rotl(ar,10);cr=fn4(cr,dr,er,ar,br,m[4],1548603684,6);er=rotl(er,10);br=fn4(br,cr,dr,er,ar,m[9],1548603684,15);dr=rotl(dr,10);ar=fn4(ar,br,cr,dr,er,m[1],1548603684,13);cr=rotl(cr,10);er=fn4(er,ar,br,cr,dr,m[2],1548603684,11);br=rotl(br,10);dr=fn3(dr,er,ar,br,cr,m[15],1836072691,9);ar=rotl(ar,10);cr=fn3(cr,dr,er,ar,br,m[5],1836072691,7);er=rotl(er,10);br=fn3(br,cr,dr,er,ar,m[1],1836072691,15);dr=rotl(dr,10);ar=fn3(ar,br,cr,dr,er,m[3],1836072691,11);cr=rotl(cr,10);er=fn3(er,ar,br,cr,dr,m[7],1836072691,8);br=rotl(br,10);dr=fn3(dr,er,ar,br,cr,m[14],1836072691,6);ar=rotl(ar,10);cr=fn3(cr,dr,er,ar,br,m[6],1836072691,6);er=rotl(er,10);br=fn3(br,cr,dr,er,ar,m[9],1836072691,14);dr=rotl(dr,10);ar=fn3(ar,br,cr,dr,er,m[11],1836072691,12);cr=rotl(cr,10);er=fn3(er,ar,br,cr,dr,m[8],1836072691,13);br=rotl(br,10);dr=fn3(dr,er,ar,br,cr,m[12],1836072691,5);ar=rotl(ar,10);cr=fn3(cr,dr,er,ar,br,m[2],1836072691,14);er=rotl(er,10);br=fn3(br,cr,dr,er,ar,m[10],1836072691,13);dr=rotl(dr,10);ar=fn3(ar,br,cr,dr,er,m[0],1836072691,13);cr=rotl(cr,10);er=fn3(er,ar,br,cr,dr,m[4],1836072691,7);br=rotl(br,10);dr=fn3(dr,er,ar,br,cr,m[13],1836072691,5);ar=rotl(ar,10);cr=fn2(cr,dr,er,ar,br,m[8],2053994217,15);er=rotl(er,10);br=fn2(br,cr,dr,er,ar,m[6],2053994217,5);dr=rotl(dr,10);ar=fn2(ar,br,cr,dr,er,m[4],2053994217,8);cr=rotl(cr,10);er=fn2(er,ar,br,cr,dr,m[1],2053994217,11);br=rotl(br,10);dr=fn2(dr,er,ar,br,cr,m[3],2053994217,14);ar=rotl(ar,10);cr=fn2(cr,dr,er,ar,br,m[11],2053994217,14);er=rotl(er,10);br=fn2(br,cr,dr,er,ar,m[15],2053994217,6);dr=rotl(dr,10);ar=fn2(ar,br,cr,dr,er,m[0],2053994217,14);cr=rotl(cr,10);er=fn2(er,ar,br,cr,dr,m[5],2053994217,6);br=rotl(br,10);dr=fn2(dr,er,ar,br,cr,m[12],2053994217,9);ar=rotl(ar,10);cr=fn2(cr,dr,er,ar,br,m[2],2053994217,12);er=rotl(er,10);br=fn2(br,cr,dr,er,ar,m[13],2053994217,9);dr=rotl(dr,10);ar=fn2(ar,br,cr,dr,er,m[9],2053994217,12);cr=rotl(cr,10);er=fn2(er,ar,br,cr,dr,m[7],2053994217,5);br=rotl(br,10);dr=fn2(dr,er,ar,br,cr,m[10],2053994217,15);ar=rotl(ar,10);cr=fn2(cr,dr,er,ar,br,m[14],2053994217,8);er=rotl(er,10);br=fn1(br,cr,dr,er,ar,m[12],0,8);dr=rotl(dr,10);ar=fn1(ar,br,cr,dr,er,m[15],0,5);cr=rotl(cr,10);er=fn1(er,ar,br,cr,dr,m[10],0,12);br=rotl(br,10);dr=fn1(dr,er,ar,br,cr,m[4],0,9);ar=rotl(ar,10);cr=fn1(cr,dr,er,ar,br,m[1],0,12);er=rotl(er,10);br=fn1(br,cr,dr,er,ar,m[5],0,5);dr=rotl(dr,10);ar=fn1(ar,br,cr,dr,er,m[8],0,14);cr=rotl(cr,10);er=fn1(er,ar,br,cr,dr,m[7],0,6);br=rotl(br,10);dr=fn1(dr,er,ar,br,cr,m[6],0,8);ar=rotl(ar,10);cr=fn1(cr,dr,er,ar,br,m[2],0,13);er=rotl(er,10);br=fn1(br,cr,dr,er,ar,m[13],0,6);dr=rotl(dr,10);ar=fn1(ar,br,cr,dr,er,m[14],0,5);cr=rotl(cr,10);er=fn1(er,ar,br,cr,dr,m[0],0,15);br=rotl(br,10);dr=fn1(dr,er,ar,br,cr,m[3],0,13);ar=rotl(ar,10);cr=fn1(cr,dr,er,ar,br,m[9],0,11);er=rotl(er,10);br=fn1(br,cr,dr,er,ar,m[11],0,11);dr=rotl(dr,10);var t=this._b+cl+dr|0;this._b=this._c+dl+er|0;this._c=this._d+el+ar|0;this._d=this._e+al+br|0;this._e=this._a+bl+cr|0;this._a=t};RIPEMD160.prototype._digest=function(){this._block[this._blockOffset++]=128;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();var buffer=new Buffer(20);buffer.writeInt32LE(this._a,0);buffer.writeInt32LE(this._b,4);buffer.writeInt32LE(this._c,8);buffer.writeInt32LE(this._d,12);buffer.writeInt32LE(this._e,16);return buffer};function rotl(x,n){return x<<n|x>>>32-n}function fn1(a,b,c,d,e,m,k,s){return rotl(a+(b^c^d)+m+k|0,s)+e|0}function fn2(a,b,c,d,e,m,k,s){return rotl(a+(b&c|~b&d)+m+k|0,s)+e|0}function fn3(a,b,c,d,e,m,k,s){return rotl(a+((b|~c)^d)+m+k|0,s)+e|0}function fn4(a,b,c,d,e,m,k,s){return rotl(a+(b&d|c&~d)+m+k|0,s)+e|0}function fn5(a,b,c,d,e,m,k,s){return rotl(a+(b^(c|~d))+m+k|0,s)+e|0}module.exports=RIPEMD160}).call(this,require("buffer").Buffer)},{buffer:150,"hash-base":336,inherits:352}],434:[function(require,module,exports){var buffer=require("buffer");var Buffer=buffer.Buffer;function copyProps(src,dst){for(var key in src){dst[key]=src[key]}}if(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){module.exports=buffer}else{copyProps(buffer,exports);exports.Buffer=SafeBuffer}function SafeBuffer(arg,encodingOrOffset,length){return Buffer(arg,encodingOrOffset,length)}copyProps(Buffer,SafeBuffer);SafeBuffer.from=function(arg,encodingOrOffset,length){if(typeof arg==="number"){throw new TypeError("Argument must not be a number")}return Buffer(arg,encodingOrOffset,length)};SafeBuffer.alloc=function(size,fill,encoding){if(typeof size!=="number"){throw new TypeError("Argument must be a number")}var buf=Buffer(size);if(fill!==undefined){if(typeof encoding==="string"){buf.fill(fill,encoding)}else{buf.fill(fill)}}else{buf.fill(0)}return buf};SafeBuffer.allocUnsafe=function(size){if(typeof size!=="number"){throw new TypeError("Argument must be a number")}return Buffer(size)};SafeBuffer.allocUnsafeSlow=function(size){if(typeof size!=="number"){throw new TypeError("Argument must be a number")}return buffer.SlowBuffer(size)}},{buffer:150}],435:[function(require,module,exports){(typeof define==="function"&&define.amd&&function(m){define("samsam",m)}||typeof module==="object"&&function(m){module.exports=m()}||function(m){this.samsam=m()})(function(){var o=Object.prototype;var div=typeof document!=="undefined"&&document.createElement("div");function isNaN(value){var val=value;return typeof value==="number"&&value!==val}function getClass(value){return o.toString.call(value).split(/[ \]]/)[1]}function isArguments(object){if(getClass(object)==="Arguments"){return true}if(typeof object!=="object"||typeof object.length!=="number"||getClass(object)==="Array"){return false}if(typeof object.callee=="function"){return true}try{object[object.length]=6;delete object[object.length]}catch(e){return true}return false}function isElement(object){if(!object||object.nodeType!==1||!div){return false}try{object.appendChild(div);object.removeChild(div)}catch(e){return false}return true}function keys(object){var ks=[],prop;for(prop in object){if(o.hasOwnProperty.call(object,prop)){ks.push(prop)}}return ks}function isDate(value){return typeof value.getTime=="function"&&value.getTime()==value.valueOf()}function isNegZero(value){return value===0&&1/value===-Infinity}function identical(obj1,obj2){if(obj1===obj2||isNaN(obj1)&&isNaN(obj2)){return obj1!==0||isNegZero(obj1)===isNegZero(obj2)}}function isSet(val){if(typeof Set!=="undefined"&&val instanceof Set){return true}}function isSubset(s1,s2,compare){var values1=Array.from(s1);var values2=Array.from(s2);for(var i=0;i<values1.length;i++){var includes=false;for(var j=0;j<values2.length;j++){if(compare(values2[j],values1[i])){includes=true;break}}if(!includes){return false}}return true}function deepEqualCyclic(obj1,obj2){var objects1=[],objects2=[],paths1=[],paths2=[],compared={};function isObject(value){if(typeof value==="object"&&value!==null&&!(value instanceof Boolean)&&!(value instanceof Date)&&!(value instanceof Number)&&!(value instanceof RegExp)&&!(value instanceof String)){return true}return false}function getIndex(objects,obj){var i;for(i=0;i<objects.length;i++){if(objects[i]===obj){return i}}return-1}return function deepEqual(obj1,obj2,path1,path2){var type1=typeof obj1;var type2=typeof obj2;if(obj1===obj2||isNaN(obj1)||isNaN(obj2)||obj1==null||obj2==null||type1!=="object"||type2!=="object"){return identical(obj1,obj2)}if(isElement(obj1)||isElement(obj2)){return false}var isDate1=isDate(obj1),isDate2=isDate(obj2);if(isDate1||isDate2){if(!isDate1||!isDate2||obj1.getTime()!==obj2.getTime()){return false}}if(obj1 instanceof RegExp&&obj2 instanceof RegExp){if(obj1.toString()!==obj2.toString()){return false}}var class1=getClass(obj1);var class2=getClass(obj2);var keys1=keys(obj1);var keys2=keys(obj2);if(isArguments(obj1)||isArguments(obj2)){if(obj1.length!==obj2.length){return false}}else{if(type1!==type2||class1!==class2||keys1.length!==keys2.length){return false}}if(isSet(obj1)||isSet(obj2)){if(!isSet(obj1)||!isSet(obj2)||obj1.size!==obj2.size){return false}return isSubset(obj1,obj2,deepEqual)}var key,i,l,value1,value2,isObject1,isObject2,index1,index2,newPath1,newPath2;for(i=0,l=keys1.length;i<l;i++){key=keys1[i];if(!o.hasOwnProperty.call(obj2,key)){return false}value1=obj1[key];value2=obj2[key];isObject1=isObject(value1);isObject2=isObject(value2);index1=isObject1?getIndex(objects1,value1):-1;index2=isObject2?getIndex(objects2,value2):-1;newPath1=index1!==-1?paths1[index1]:path1+"["+JSON.stringify(key)+"]";newPath2=index2!==-1?paths2[index2]:path2+"["+JSON.stringify(key)+"]";if(compared[newPath1+newPath2]){return true}if(index1===-1&&isObject1){objects1.push(value1);paths1.push(newPath1)}if(index2===-1&&isObject2){objects2.push(value2);paths2.push(newPath2)}if(isObject1&&isObject2){compared[newPath1+newPath2]=true}if(!deepEqual(value1,value2,newPath1,newPath2)){return false}}return true}(obj1,obj2,"$1","$2")}function arrayContains(array,subset,compare){if(subset.length===0){return true}var i,l,j,k;for(i=0,l=array.length;i<l;++i){if(compare(array[i],subset[0])){for(j=0,k=subset.length;j<k;++j){if(i+j>=l){return false}if(!compare(array[i+j],subset[j])){return false}}return true}}return false}function match(object,matcher){if(matcher&&typeof matcher.test==="function"){return matcher.test(object)}if(typeof matcher==="function"){return matcher(object)===true}if(typeof matcher==="string"){matcher=matcher.toLowerCase();var notNull=typeof object==="string"||!!object;return notNull&&String(object).toLowerCase().indexOf(matcher)>=0}if(typeof matcher==="number"){return matcher===object}if(typeof matcher==="boolean"){return matcher===object}if(typeof matcher==="undefined"){return typeof object==="undefined"}if(matcher===null){return object===null}if(isSet(object)){return isSubset(matcher,object,match)}if(getClass(object)==="Array"&&getClass(matcher)==="Array"){return arrayContains(object,matcher,match)}if(isDate(matcher)){return isDate(object)&&object.getTime()===matcher.getTime()}if(matcher&&typeof matcher==="object"){if(matcher===object){return true}var prop;for(prop in matcher){var value=object[prop];if(typeof value==="undefined"&&typeof object.getAttribute==="function"){value=object.getAttribute(prop)}if(matcher[prop]===null||typeof matcher[prop]==="undefined"){if(value!==matcher[prop]){return false}}else if(typeof value==="undefined"||!match(value,matcher[prop])){return false}}return true}throw new Error("Matcher was not a string, a number, a "+"function, a boolean or an object")}return{isArguments:isArguments,isElement:isElement,isDate:isDate,isNegZero:isNegZero,identical:identical,deepEqual:deepEqualCyclic,match:match,keys:keys}})},{}],436:[function(require,module,exports){var Buffer=require("safe-buffer").Buffer;function Hash(blockSize,finalSize){this._block=Buffer.alloc(blockSize);this._finalSize=finalSize;this._blockSize=blockSize;this._len=0}Hash.prototype.update=function(data,enc){if(typeof data==="string"){enc=enc||"utf8";data=Buffer.from(data,enc)}var block=this._block;var blockSize=this._blockSize;var length=data.length;var accum=this._len;for(var offset=0;offset<length;){var assigned=accum%blockSize;var remainder=Math.min(length-offset,blockSize-assigned);for(var i=0;i<remainder;i++){block[assigned+i]=data[offset+i]}accum+=remainder;offset+=remainder;if(accum%blockSize===0){this._update(block)}}this._len+=length;return this};Hash.prototype.digest=function(enc){var rem=this._len%this._blockSize;this._block[rem]=128;this._block.fill(0,rem+1);if(rem>=this._finalSize){this._update(this._block);this._block.fill(0)}var bits=this._len*8;if(bits<=4294967295){this._block.writeUInt32BE(bits,this._blockSize-4)}else{var lowBits=(bits&4294967295)>>>0;var highBits=(bits-lowBits)/4294967296;this._block.writeUInt32BE(highBits,this._blockSize-8);this._block.writeUInt32BE(lowBits,this._blockSize-4)}this._update(this._block);var hash=this._hash();return enc?hash.toString(enc):hash};Hash.prototype._update=function(){throw new Error("_update must be implemented by subclass")};module.exports=Hash},{"safe-buffer":434}],437:[function(require,module,exports){var exports=module.exports=function SHA(algorithm){algorithm=algorithm.toLowerCase();var Algorithm=exports[algorithm];if(!Algorithm)throw new Error(algorithm+" is not supported (we accept pull requests)");return new Algorithm};exports.sha=require("./sha");exports.sha1=require("./sha1");exports.sha224=require("./sha224");exports.sha256=require("./sha256");exports.sha384=require("./sha384");exports.sha512=require("./sha512")},{"./sha":438,"./sha1":439,"./sha224":440,"./sha256":441,"./sha384":442,"./sha512":443}],438:[function(require,module,exports){var inherits=require("inherits");var Hash=require("./hash");var Buffer=require("safe-buffer").Buffer;var K=[1518500249,1859775393,2400959708|0,3395469782|0];var W=new Array(80);function Sha(){this.init();this._w=W;Hash.call(this,64,56)}inherits(Sha,Hash);Sha.prototype.init=function(){this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520;return this};function rotl5(num){return num<<5|num>>>27}function rotl30(num){return num<<30|num>>>2}function ft(s,b,c,d){if(s===0)return b&c|~b&d;if(s===2)return b&c|b&d|c&d;return b^c^d}Sha.prototype._update=function(M){var W=this._w;var a=this._a|0;var b=this._b|0;var c=this._c|0;var d=this._d|0;var e=this._e|0;for(var i=0;i<16;++i)W[i]=M.readInt32BE(i*4);for(;i<80;++i)W[i]=W[i-3]^W[i-8]^W[i-14]^W[i-16];for(var j=0;j<80;++j){var s=~~(j/20);var t=rotl5(a)+ft(s,b,c,d)+e+W[j]+K[s]|0;e=d;d=c;c=rotl30(b);b=a;a=t}this._a=a+this._a|0;this._b=b+this._b|0;this._c=c+this._c|0;this._d=d+this._d|0;this._e=e+this._e|0};Sha.prototype._hash=function(){var H=Buffer.allocUnsafe(20);H.writeInt32BE(this._a|0,0);H.writeInt32BE(this._b|0,4);H.writeInt32BE(this._c|0,8);H.writeInt32BE(this._d|0,12);H.writeInt32BE(this._e|0,16);return H};module.exports=Sha},{"./hash":436,inherits:352,"safe-buffer":434}],439:[function(require,module,exports){var inherits=require("inherits");var Hash=require("./hash");var Buffer=require("safe-buffer").Buffer;var K=[1518500249,1859775393,2400959708|0,3395469782|0];var W=new Array(80);function Sha1(){this.init();this._w=W;Hash.call(this,64,56)}inherits(Sha1,Hash);Sha1.prototype.init=function(){this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520;return this};function rotl1(num){return num<<1|num>>>31}function rotl5(num){return num<<5|num>>>27}function rotl30(num){return num<<30|num>>>2}function ft(s,b,c,d){if(s===0)return b&c|~b&d;if(s===2)return b&c|b&d|c&d;return b^c^d}Sha1.prototype._update=function(M){var W=this._w;var a=this._a|0;var b=this._b|0;var c=this._c|0;var d=this._d|0;var e=this._e|0;for(var i=0;i<16;++i)W[i]=M.readInt32BE(i*4);for(;i<80;++i)W[i]=rotl1(W[i-3]^W[i-8]^W[i-14]^W[i-16]);for(var j=0;j<80;++j){var s=~~(j/20);var t=rotl5(a)+ft(s,b,c,d)+e+W[j]+K[s]|0;e=d;d=c;c=rotl30(b);b=a;a=t}this._a=a+this._a|0;this._b=b+this._b|0;this._c=c+this._c|0;this._d=d+this._d|0;this._e=e+this._e|0};Sha1.prototype._hash=function(){var H=Buffer.allocUnsafe(20);H.writeInt32BE(this._a|0,0);H.writeInt32BE(this._b|0,4);H.writeInt32BE(this._c|0,8);H.writeInt32BE(this._d|0,12);H.writeInt32BE(this._e|0,16);return H};module.exports=Sha1},{"./hash":436,inherits:352,"safe-buffer":434}],440:[function(require,module,exports){var inherits=require("inherits");var Sha256=require("./sha256");var Hash=require("./hash");var Buffer=require("safe-buffer").Buffer;var W=new Array(64);function Sha224(){this.init();this._w=W;Hash.call(this,64,56)}inherits(Sha224,Sha256);Sha224.prototype.init=function(){this._a=3238371032;this._b=914150663;this._c=812702999;this._d=4144912697;this._e=4290775857;this._f=1750603025;this._g=1694076839;this._h=3204075428;return this};Sha224.prototype._hash=function(){var H=Buffer.allocUnsafe(28);H.writeInt32BE(this._a,0);H.writeInt32BE(this._b,4);H.writeInt32BE(this._c,8);H.writeInt32BE(this._d,12);H.writeInt32BE(this._e,16);H.writeInt32BE(this._f,20);H.writeInt32BE(this._g,24);return H};module.exports=Sha224},{"./hash":436,"./sha256":441,inherits:352,"safe-buffer":434}],441:[function(require,module,exports){var inherits=require("inherits");var Hash=require("./hash");var Buffer=require("safe-buffer").Buffer;var K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var W=new Array(64);function Sha256(){this.init();this._w=W;Hash.call(this,64,56)}inherits(Sha256,Hash);Sha256.prototype.init=function(){this._a=1779033703;this._b=3144134277;this._c=1013904242;this._d=2773480762;this._e=1359893119;this._f=2600822924;this._g=528734635;this._h=1541459225;return this};function ch(x,y,z){return z^x&(y^z)}function maj(x,y,z){return x&y|z&(x|y)}function sigma0(x){return(x>>>2|x<<30)^(x>>>13|x<<19)^(x>>>22|x<<10)}function sigma1(x){return(x>>>6|x<<26)^(x>>>11|x<<21)^(x>>>25|x<<7)}function gamma0(x){return(x>>>7|x<<25)^(x>>>18|x<<14)^x>>>3}function gamma1(x){return(x>>>17|x<<15)^(x>>>19|x<<13)^x>>>10}Sha256.prototype._update=function(M){var W=this._w;var a=this._a|0;var b=this._b|0;var c=this._c|0;var d=this._d|0;var e=this._e|0;var f=this._f|0;var g=this._g|0;var h=this._h|0;for(var i=0;i<16;++i)W[i]=M.readInt32BE(i*4);for(;i<64;++i)W[i]=gamma1(W[i-2])+W[i-7]+gamma0(W[i-15])+W[i-16]|0;for(var j=0;j<64;++j){var T1=h+sigma1(e)+ch(e,f,g)+K[j]+W[j]|0;var T2=sigma0(a)+maj(a,b,c)|0;h=g;g=f;f=e;e=d+T1|0;d=c;c=b;b=a;a=T1+T2|0}this._a=a+this._a|0;this._b=b+this._b|0;this._c=c+this._c|0;this._d=d+this._d|0;this._e=e+this._e|0;this._f=f+this._f|0;this._g=g+this._g|0;this._h=h+this._h|0};Sha256.prototype._hash=function(){var H=Buffer.allocUnsafe(32);H.writeInt32BE(this._a,0);H.writeInt32BE(this._b,4);H.writeInt32BE(this._c,8);H.writeInt32BE(this._d,12);H.writeInt32BE(this._e,16);H.writeInt32BE(this._f,20);H.writeInt32BE(this._g,24);H.writeInt32BE(this._h,28);return H};module.exports=Sha256},{"./hash":436,inherits:352,"safe-buffer":434}],442:[function(require,module,exports){var inherits=require("inherits");var SHA512=require("./sha512");var Hash=require("./hash");var Buffer=require("safe-buffer").Buffer;var W=new Array(160);function Sha384(){this.init();this._w=W;Hash.call(this,128,112)}inherits(Sha384,SHA512);Sha384.prototype.init=function(){this._ah=3418070365;this._bh=1654270250;this._ch=2438529370;this._dh=355462360;this._eh=1731405415;this._fh=2394180231;this._gh=3675008525;this._hh=1203062813;this._al=3238371032;this._bl=914150663;this._cl=812702999;this._dl=4144912697;this._el=4290775857;this._fl=1750603025;this._gl=1694076839;this._hl=3204075428;return this};Sha384.prototype._hash=function(){var H=Buffer.allocUnsafe(48);function writeInt64BE(h,l,offset){H.writeInt32BE(h,offset);H.writeInt32BE(l,offset+4)}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);return H};module.exports=Sha384},{"./hash":436,"./sha512":443,inherits:352,"safe-buffer":434}],443:[function(require,module,exports){var inherits=require("inherits");var Hash=require("./hash");var Buffer=require("safe-buffer").Buffer;var K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];var W=new Array(160);function Sha512(){this.init();this._w=W;Hash.call(this,128,112)}inherits(Sha512,Hash);Sha512.prototype.init=function(){this._ah=1779033703;this._bh=3144134277;this._ch=1013904242;this._dh=2773480762;this._eh=1359893119;this._fh=2600822924;this._gh=528734635;this._hh=1541459225;this._al=4089235720;this._bl=2227873595;this._cl=4271175723;this._dl=1595750129;this._el=2917565137;this._fl=725511199;this._gl=4215389547;this._hl=327033209;return this};function Ch(x,y,z){return z^x&(y^z)}function maj(x,y,z){return x&y|z&(x|y)}function sigma0(x,xl){return(x>>>28|xl<<4)^(xl>>>2|x<<30)^(xl>>>7|x<<25)}function sigma1(x,xl){return(x>>>14|xl<<18)^(x>>>18|xl<<14)^(xl>>>9|x<<23)}function Gamma0(x,xl){return(x>>>1|xl<<31)^(x>>>8|xl<<24)^x>>>7}function Gamma0l(x,xl){return(x>>>1|xl<<31)^(x>>>8|xl<<24)^(x>>>7|xl<<25)}function Gamma1(x,xl){return(x>>>19|xl<<13)^(xl>>>29|x<<3)^x>>>6}function Gamma1l(x,xl){return(x>>>19|xl<<13)^(xl>>>29|x<<3)^(x>>>6|xl<<26)}function getCarry(a,b){return a>>>0<b>>>0?1:0}Sha512.prototype._update=function(M){var W=this._w;var ah=this._ah|0;var bh=this._bh|0;var ch=this._ch|0;var dh=this._dh|0;var eh=this._eh|0;var fh=this._fh|0;var gh=this._gh|0;var hh=this._hh|0;var al=this._al|0;var bl=this._bl|0;var cl=this._cl|0;var dl=this._dl|0;var el=this._el|0;var fl=this._fl|0;var gl=this._gl|0;var hl=this._hl|0;for(var i=0;i<32;i+=2){W[i]=M.readInt32BE(i*4);W[i+1]=M.readInt32BE(i*4+4)}for(;i<160;i+=2){var xh=W[i-15*2];var xl=W[i-15*2+1];var gamma0=Gamma0(xh,xl);var gamma0l=Gamma0l(xl,xh);xh=W[i-2*2];xl=W[i-2*2+1];var gamma1=Gamma1(xh,xl);var gamma1l=Gamma1l(xl,xh);var Wi7h=W[i-7*2];var Wi7l=W[i-7*2+1];var Wi16h=W[i-16*2];var Wi16l=W[i-16*2+1];var Wil=gamma0l+Wi7l|0;var Wih=gamma0+Wi7h+getCarry(Wil,gamma0l)|0;Wil=Wil+gamma1l|0;Wih=Wih+gamma1+getCarry(Wil,gamma1l)|0;Wil=Wil+Wi16l|0;Wih=Wih+Wi16h+getCarry(Wil,Wi16l)|0;W[i]=Wih;W[i+1]=Wil}for(var j=0;j<160;j+=2){Wih=W[j];Wil=W[j+1];var majh=maj(ah,bh,ch);var majl=maj(al,bl,cl);var sigma0h=sigma0(ah,al);var sigma0l=sigma0(al,ah);var sigma1h=sigma1(eh,el);var sigma1l=sigma1(el,eh);var Kih=K[j];var Kil=K[j+1];var chh=Ch(eh,fh,gh);var chl=Ch(el,fl,gl);var t1l=hl+sigma1l|0;var t1h=hh+sigma1h+getCarry(t1l,hl)|0;t1l=t1l+chl|0;t1h=t1h+chh+getCarry(t1l,chl)|0;t1l=t1l+Kil|0;t1h=t1h+Kih+getCarry(t1l,Kil)|0;t1l=t1l+Wil|0;t1h=t1h+Wih+getCarry(t1l,Wil)|0;var t2l=sigma0l+majl|0;var t2h=sigma0h+majh+getCarry(t2l,sigma0l)|0;hh=gh;hl=gl;gh=fh;gl=fl;fh=eh;fl=el;el=dl+t1l|0;eh=dh+t1h+getCarry(el,dl)|0;dh=ch;dl=cl;ch=bh;cl=bl;bh=ah;bl=al;al=t1l+t2l|0;ah=t1h+t2h+getCarry(al,t1l)|0}this._al=this._al+al|0;this._bl=this._bl+bl|0;this._cl=this._cl+cl|0;this._dl=this._dl+dl|0;this._el=this._el+el|0;this._fl=this._fl+fl|0;this._gl=this._gl+gl|0;this._hl=this._hl+hl|0;this._ah=this._ah+ah+getCarry(this._al,al)|0;this._bh=this._bh+bh+getCarry(this._bl,bl)|0;this._ch=this._ch+ch+getCarry(this._cl,cl)|0;this._dh=this._dh+dh+getCarry(this._dl,dl)|0;this._eh=this._eh+eh+getCarry(this._el,el)|0;this._fh=this._fh+fh+getCarry(this._fl,fl)|0;this._gh=this._gh+gh+getCarry(this._gl,gl)|0;this._hh=this._hh+hh+getCarry(this._hl,hl)|0};Sha512.prototype._hash=function(){var H=Buffer.allocUnsafe(64);function writeInt64BE(h,l,offset){H.writeInt32BE(h,offset);H.writeInt32BE(l,offset+4)}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);writeInt64BE(this._gh,this._gl,48);writeInt64BE(this._hh,this._hl,56);return H};module.exports=Sha512},{"./hash":436,inherits:352,"safe-buffer":434}],444:[function(require,module,exports){"use strict";(function(sinonChai){if(typeof require==="function"&&typeof exports==="object"&&typeof module==="object"){module.exports=sinonChai}else if(typeof define==="function"&&define.amd){define(function(){return sinonChai})}else{chai.use(sinonChai)}})(function(chai,utils){var slice=Array.prototype.slice;function isSpy(putativeSpy){return typeof putativeSpy==="function"&&typeof putativeSpy.getCall==="function"&&typeof putativeSpy.calledWithExactly==="function"}function timesInWords(count){switch(count){case 1:{return"once"}case 2:{return"twice"}case 3:{return"thrice"}default:{return(count||0)+" times"}}}function isCall(putativeCall){return putativeCall&&isSpy(putativeCall.proxy)}function assertCanWorkWith(assertion){if(!isSpy(assertion._obj)&&!isCall(assertion._obj)){throw new TypeError(utils.inspect(assertion._obj)+" is not a spy or a call to a spy!")}}function getMessages(spy,action,nonNegatedSuffix,always,args){var verbPhrase=always?"always have ":"have ";nonNegatedSuffix=nonNegatedSuffix||"";if(isSpy(spy.proxy)){spy=spy.proxy}function printfArray(array){return spy.printf.apply(spy,array)}return{affirmative:function(){return printfArray(["expected %n to "+verbPhrase+action+nonNegatedSuffix].concat(args))},negative:function(){return printfArray(["expected %n to not "+verbPhrase+action].concat(args))}}}function sinonProperty(name,action,nonNegatedSuffix){utils.addProperty(chai.Assertion.prototype,name,function(){assertCanWorkWith(this);var messages=getMessages(this._obj,action,nonNegatedSuffix,false);this.assert(this._obj[name],messages.affirmative,messages.negative)})}function sinonPropertyAsBooleanMethod(name,action,nonNegatedSuffix){utils.addMethod(chai.Assertion.prototype,name,function(arg){assertCanWorkWith(this);var messages=getMessages(this._obj,action,nonNegatedSuffix,false,[timesInWords(arg)]);this.assert(this._obj[name]===arg,messages.affirmative,messages.negative)})}function createSinonMethodHandler(sinonName,action,nonNegatedSuffix){return function(){assertCanWorkWith(this);var alwaysSinonMethod="always"+sinonName[0].toUpperCase()+sinonName.substring(1);var shouldBeAlways=utils.flag(this,"always")&&typeof this._obj[alwaysSinonMethod]==="function";var sinonMethodName=shouldBeAlways?alwaysSinonMethod:sinonName;var messages=getMessages(this._obj,action,nonNegatedSuffix,shouldBeAlways,slice.call(arguments));this.assert(this._obj[sinonMethodName].apply(this._obj,arguments),messages.affirmative,messages.negative)}}function sinonMethodAsProperty(name,action,nonNegatedSuffix){var handler=createSinonMethodHandler(name,action,nonNegatedSuffix);utils.addProperty(chai.Assertion.prototype,name,handler)}function exceptionalSinonMethod(chaiName,sinonName,action,nonNegatedSuffix){var handler=createSinonMethodHandler(sinonName,action,nonNegatedSuffix);utils.addMethod(chai.Assertion.prototype,chaiName,handler)}function sinonMethod(name,action,nonNegatedSuffix){exceptionalSinonMethod(name,name,action,nonNegatedSuffix)}utils.addProperty(chai.Assertion.prototype,"always",function(){utils.flag(this,"always",true)});sinonProperty("called","been called"," at least once, but it was never called");sinonPropertyAsBooleanMethod("callCount","been called exactly %1",", but it was called %c%C");sinonProperty("calledOnce","been called exactly once",", but it was called %c%C");sinonProperty("calledTwice","been called exactly twice",", but it was called %c%C");sinonProperty("calledThrice","been called exactly thrice",", but it was called %c%C");sinonMethodAsProperty("calledWithNew","been called with new");sinonMethod("calledBefore","been called before %1");sinonMethod("calledAfter","been called after %1");sinonMethod("calledImmediatelyBefore","been called immediately before %1");sinonMethod("calledImmediatelyAfter","been called immediately after %1");sinonMethod("calledOn","been called with %1 as this",", but it was called with %t instead");sinonMethod("calledWith","been called with arguments %*","%D");sinonMethod("calledWithExactly","been called with exact arguments %*","%D");sinonMethod("calledWithMatch","been called with arguments matching %*","%D");sinonMethod("returned","returned %1");exceptionalSinonMethod("thrown","threw","thrown %1")})},{}],445:[function(require,module,exports){"use strict";exports.assert=require("./sinon/assert");exports.collection=require("./sinon/collection");exports.match=require("./sinon/match");exports.spy=require("./sinon/spy");exports.spyCall=require("./sinon/call");exports.stub=require("./sinon/stub");exports.mock=require("./sinon/mock");var sandbox=require("./sinon/sandbox");exports.sandbox=sandbox;exports.expectation=require("./sinon/mock-expectation");exports.createStubInstance=require("./sinon/stub").createStubInstance;exports.defaultConfig=require("./sinon/util/core/default-config");var fakeTimers=require("./sinon/util/fake_timers");exports.useFakeTimers=fakeTimers.useFakeTimers;exports.clock=fakeTimers.clock;exports.timers=fakeTimers.timers;var nise=require("nise");exports.xhr=nise.fakeXhr.xhr;exports.FakeXMLHttpRequest=nise.fakeXhr.FakeXMLHttpRequest;exports.useFakeXMLHttpRequest=nise.fakeXhr.useFakeXMLHttpRequest;exports.fakeServer=nise.fakeServer;exports.fakeServerWithClock=nise.fakeServerWithClock;exports.createSandbox=sandbox.create;exports.createFakeServer=nise.fakeServer.create.bind(nise.fakeServer);exports.createFakeServerWithClock=nise.fakeServerWithClock.create.bind(nise.fakeServerWithClock);var behavior=require("./sinon/behavior");exports.addBehavior=function(name,fn){behavior.addBehavior(exports.stub,name,fn)};var format=require("./sinon/util/core/format");exports.setFormatter=format.setFormatter},{"./sinon/assert":446,"./sinon/behavior":447,"./sinon/call":448,"./sinon/collection":450,"./sinon/match":453,"./sinon/mock":455,"./sinon/mock-expectation":454,"./sinon/sandbox":456,"./sinon/spy":458,"./sinon/stub":460,"./sinon/util/core/default-config":464,"./sinon/util/core/format":467,"./sinon/util/fake_timers":478,nise:377}],446:[function(require,module,exports){(function(global){"use strict";var calledInOrder=require("./util/core/called-in-order");var orderByFirstCall=require("./util/core/order-by-first-call");var timesInWords=require("./util/core/times-in-words");var format=require("./util/core/format");var sinonMatch=require("./match");var slice=Array.prototype.slice;var assert;function verifyIsStub(){var args=Array.prototype.slice.call(arguments);args.forEach(function(method){if(!method){assert.fail("fake is not a spy")}if(method.proxy&&method.proxy.isSinonProxy){verifyIsStub(method.proxy)}else{if(typeof method!=="function"){assert.fail(method+" is not a function")}if(typeof method.getCall!=="function"){assert.fail(method+" is not stubbed")}}})}function verifyIsValidAssertion(assertionMethod,assertionArgs){switch(assertionMethod){case"notCalled":case"called":case"calledOnce":case"calledTwice":case"calledThrice":if(assertionArgs.length!==0){assert.fail(assertionMethod+" takes 1 argument but was called with "+(assertionArgs.length+1)+" arguments")}break;default:break}}function failAssertion(object,msg){object=object||global;var failMethod=object.fail||assert.fail;failMethod.call(object,msg)}function mirrorPropAsAssertion(name,method,message){if(arguments.length===2){message=method;method=name}assert[name]=function(fake){verifyIsStub(fake);var args=slice.call(arguments,1);var failed=false;verifyIsValidAssertion(name,args);if(typeof method==="function"){failed=!method(fake)}else{failed=typeof fake[method]==="function"?!fake[method].apply(fake,args):!fake[method]}if(failed){failAssertion(this,(fake.printf||fake.proxy.printf).apply(fake,[message].concat(args)))}else{assert.pass(name)}}}function exposedName(prefix,prop){return!prefix||/^fail/.test(prop)?prop:prefix+prop.slice(0,1).toUpperCase()+prop.slice(1)}assert={failException:"AssertError",fail:function fail(message){var error=new Error(message);error.name=this.failException||assert.failException;throw error},pass:function pass(){},callOrder:function assertCallOrder(){verifyIsStub.apply(null,arguments);var expected="";var actual="";if(!calledInOrder(arguments)){try{expected=[].join.call(arguments,", ");var calls=slice.call(arguments);var i=calls.length;while(i){if(!calls[--i].called){calls.splice(i,1)}}actual=orderByFirstCall(calls).join(", ")}catch(e){}failAssertion(this,"expected "+expected+" to be "+"called in order but were called as "+actual)}else{assert.pass("callOrder")}},callCount:function assertCallCount(method,count){verifyIsStub(method);if(method.callCount!==count){var msg="expected %n to be called "+timesInWords(count)+" but was called %c%C";failAssertion(this,method.printf(msg))}else{assert.pass("callCount")}},expose:function expose(target,options){if(!target){throw new TypeError("target is null or undefined")}var o=options||{};var prefix=typeof o.prefix==="undefined"&&"assert"||o.prefix;var includeFail=typeof o.includeFail==="undefined"||!!o.includeFail;var instance=this;Object.keys(instance).forEach(function(method){if(method!=="expose"&&(includeFail||!/^(fail)/.test(method))){target[exposedName(prefix,method)]=instance[method]}});return target},match:function match(actual,expectation){var matcher=sinonMatch(expectation);if(matcher.test(actual)){assert.pass("match")}else{var formatted=["expected value to match","    expected = "+format(expectation),"    actual = "+format(actual)];failAssertion(this,formatted.join("\n"))}}};mirrorPropAsAssertion("called","expected %n to have been called at least once but was never called");mirrorPropAsAssertion("notCalled",function(spy){return!spy.called},"expected %n to not have been called but was called %c%C");mirrorPropAsAssertion("calledOnce","expected %n to be called once but was called %c%C");mirrorPropAsAssertion("calledTwice","expected %n to be called twice but was called %c%C");mirrorPropAsAssertion("calledThrice","expected %n to be called thrice but was called %c%C");mirrorPropAsAssertion("calledOn","expected %n to be called with %1 as this but was called with %t");mirrorPropAsAssertion("alwaysCalledOn","expected %n to always be called with %1 as this but was called with %t");mirrorPropAsAssertion("calledWithNew","expected %n to be called with new");mirrorPropAsAssertion("alwaysCalledWithNew","expected %n to always be called with new");mirrorPropAsAssertion("calledWith","expected %n to be called with arguments %D");mirrorPropAsAssertion("calledWithMatch","expected %n to be called with match %D");mirrorPropAsAssertion("alwaysCalledWith","expected %n to always be called with arguments %D");mirrorPropAsAssertion("alwaysCalledWithMatch","expected %n to always be called with match %D");mirrorPropAsAssertion("calledWithExactly","expected %n to be called with exact arguments %D");mirrorPropAsAssertion("alwaysCalledWithExactly","expected %n to always be called with exact arguments %D");mirrorPropAsAssertion("neverCalledWith","expected %n to never be called with arguments %*%C");mirrorPropAsAssertion("neverCalledWithMatch","expected %n to never be called with match %*%C");mirrorPropAsAssertion("threw","%n did not throw exception%C");mirrorPropAsAssertion("alwaysThrew","%n did not always throw exception%C");module.exports=assert}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./match":453,"./util/core/called-in-order":462,"./util/core/format":467,"./util/core/order-by-first-call":472,"./util/core/times-in-words":473}],447:[function(require,module,exports){(function(process){"use strict";var extend=require("./util/core/extend");var functionName=require("./util/core/function-name");var valueToString=require("./util/core/value-to-string");var slice=Array.prototype.slice;var join=Array.prototype.join;var useLeftMostCallback=-1;var useRightMostCallback=-2;var nextTick=function(){if(typeof process==="object"&&typeof process.nextTick==="function"){return process.nextTick}if(typeof setImmediate==="function"){return setImmediate}return function(callback){setTimeout(callback,0)}}();function getCallback(behavior,args){var callArgAt=behavior.callArgAt;if(callArgAt>=0){return args[callArgAt]}var argumentList;if(callArgAt===useLeftMostCallback){argumentList=args}if(callArgAt===useRightMostCallback){argumentList=slice.call(args).reverse()}var callArgProp=behavior.callArgProp;for(var i=0,l=argumentList.length;i<l;++i){if(!callArgProp&&typeof argumentList[i]==="function"){return argumentList[i]}if(callArgProp&&argumentList[i]&&typeof argumentList[i][callArgProp]==="function"){return argumentList[i][callArgProp]}}return null}function getCallbackError(behavior,func,args){if(behavior.callArgAt<0){var msg;if(behavior.callArgProp){msg=functionName(behavior.stub)+" expected to yield to '"+valueToString(behavior.callArgProp)+"', but no object with such a property was passed."}else{msg=functionName(behavior.stub)+" expected to yield, but no callback was passed."}if(args.length>0){msg+=" Received ["+join.call(args,", ")+"]"}return msg}return"argument at index "+behavior.callArgAt+" is not a function: "+func}function callCallback(behavior,args){if(typeof behavior.callArgAt==="number"){var func=getCallback(behavior,args);if(typeof func!=="function"){throw new TypeError(getCallbackError(behavior,func,args))}if(behavior.callbackAsync){nextTick(function(){func.apply(behavior.callbackContext,behavior.callbackArguments)})}else{func.apply(behavior.callbackContext,behavior.callbackArguments)}}}var proto={create:function create(stub){var behavior=extend({},proto);delete behavior.create;delete behavior.addBehavior;delete behavior.createBehavior;behavior.stub=stub;if(stub.defaultBehavior&&stub.defaultBehavior.promiseLibrary){behavior.promiseLibrary=stub.defaultBehavior.promiseLibrary}return behavior},isPresent:function isPresent(){return typeof this.callArgAt==="number"||this.exception||this.exceptionCreator||typeof this.returnArgAt==="number"||this.returnThis||this.resolveThis||typeof this.throwArgAt==="number"||this.fakeFn||this.returnValueDefined},invoke:function invoke(context,args){callCallback(this,args);if(this.exception){throw this.exception}else if(this.exceptionCreator){this.exception=this.exceptionCreator();this.exceptionCreator=undefined;throw this.exception}else if(typeof this.returnArgAt==="number"){return args[this.returnArgAt]}else if(this.returnThis){return context}else if(typeof this.throwArgAt==="number"){if(args.length<this.throwArgAt){throw new TypeError("throwArgs failed: "+this.throwArgAt+" arguments required but only "+args.length+" present")}throw args[this.throwArgAt]}else if(this.fakeFn){return this.fakeFn.apply(context,args)}else if(this.resolveThis){return(this.promiseLibrary||Promise).resolve(context)}else if(this.resolve){return(this.promiseLibrary||Promise).resolve(this.returnValue)}else if(this.reject){return(this.promiseLibrary||Promise).reject(this.returnValue)}else if(this.callsThrough){return this.stub.wrappedMethod.apply(context,args)}return this.returnValue},onCall:function onCall(index){return this.stub.onCall(index)},onFirstCall:function onFirstCall(){return this.stub.onFirstCall()},onSecondCall:function onSecondCall(){return this.stub.onSecondCall()},onThirdCall:function onThirdCall(){return this.stub.onThirdCall()},withArgs:function withArgs(){throw new Error('Defining a stub by invoking "stub.onCall(...).withArgs(...)" '+'is not supported. Use "stub.withArgs(...).onCall(...)" '+"to define sequential behavior for calls with certain arguments.")}};function createAsyncVersion(syncFnName){return function(){var result=this[syncFnName].apply(this,arguments);this.callbackAsync=true;return result}}Object.keys(proto).forEach(function(method){if(method.match(/^(callsArg|yields)/)&&!method.match(/Async/)){proto[method+"Async"]=createAsyncVersion(method)}});function createBehavior(behaviorMethod){return function(){this.defaultBehavior=this.defaultBehavior||proto.create(this);this.defaultBehavior[behaviorMethod].apply(this.defaultBehavior,arguments);return this}}function addBehavior(stub,name,fn){proto[name]=function(){fn.apply(this,[this].concat([].slice.call(arguments)));return this.stub||this};stub[name]=createBehavior(name)}proto.addBehavior=addBehavior;proto.createBehavior=createBehavior;module.exports=proto}).call(this,require("_process"))},{"./util/core/extend":466,"./util/core/function-name":468,"./util/core/value-to-string":475,_process:407}],448:[function(require,module,exports){"use strict";var sinonMatch=require("./match");var deepEqual=require("./util/core/deep-equal").use(sinonMatch);var functionName=require("./util/core/function-name");var sinonFormat=require("./util/core/format");var valueToString=require("./util/core/value-to-string");var slice=Array.prototype.slice;var filter=Array.prototype.filter;function throwYieldError(proxy,text,args){var msg=functionName(proxy)+text;if(args.length){msg+=" Received ["+slice.call(args).join(", ")+"]"}throw new Error(msg)}var callProto={calledOn:function calledOn(thisValue){if(sinonMatch&&sinonMatch.isMatcher(thisValue)){return thisValue.test(this.thisValue)}return this.thisValue===thisValue},calledWith:function calledWith(){var self=this;var calledWithArgs=slice.call(arguments);if(calledWithArgs.length>self.args.length){return false}return calledWithArgs.reduce(function(prev,arg,i){return prev&&deepEqual(arg,self.args[i])},true)},calledWithMatch:function calledWithMatch(){var self=this;var calledWithMatchArgs=slice.call(arguments);if(calledWithMatchArgs.length>self.args.length){return false}return calledWithMatchArgs.reduce(function(prev,expectation,i){var actual=self.args[i];return prev&&(sinonMatch&&sinonMatch(expectation).test(actual))},true)},calledWithExactly:function calledWithExactly(){return arguments.length===this.args.length&&this.calledWith.apply(this,arguments)},notCalledWith:function notCalledWith(){return!this.calledWith.apply(this,arguments)},notCalledWithMatch:function notCalledWithMatch(){return!this.calledWithMatch.apply(this,arguments)},returned:function returned(value){return deepEqual(value,this.returnValue)},threw:function threw(error){if(typeof error==="undefined"||!this.exception){return!!this.exception}return this.exception===error||this.exception.name===error},calledWithNew:function calledWithNew(){return this.proxy.prototype&&this.thisValue instanceof this.proxy},calledBefore:function(other){return this.callId<other.callId},calledAfter:function(other){return this.callId>other.callId},calledImmediatelyBefore:function(other){return this.callId===other.callId-1},calledImmediatelyAfter:function(other){return this.callId===other.callId+1},callArg:function(pos){this.args[pos]()},callArgOn:function(pos,thisValue){this.args[pos].apply(thisValue)},callArgWith:function(pos){this.callArgOnWith.apply(this,[pos,null].concat(slice.call(arguments,1)))},callArgOnWith:function(pos,thisValue){var args=slice.call(arguments,2);this.args[pos].apply(thisValue,args)},throwArg:function(pos){if(pos>this.args.length){throw new TypeError("Not enough arguments: "+pos+" required but only "+this.args.length+" present")}throw this.args[pos]},yield:function(){this.yieldOn.apply(this,[null].concat(slice.call(arguments,0)))},yieldOn:function(thisValue){var args=slice.call(this.args);var yieldFn=filter.call(args,function(arg){return typeof arg==="function"})[0];if(!yieldFn){throwYieldError(this.proxy," cannot yield since no callback was passed.",args)}yieldFn.apply(thisValue,slice.call(arguments,1))},yieldTo:function(prop){this.yieldToOn.apply(this,[prop,null].concat(slice.call(arguments,1)))},yieldToOn:function(prop,thisValue){var args=slice.call(this.args);var yieldArg=filter.call(args,function(arg){return arg&&typeof arg[prop]==="function"})[0];var yieldFn=yieldArg&&yieldArg[prop];if(!yieldFn){throwYieldError(this.proxy," cannot yield to '"+valueToString(prop)+"' since no callback was passed.",args)}yieldFn.apply(thisValue,slice.call(arguments,2))},toString:function(){var callStr=this.proxy?this.proxy.toString()+"(":"";var formattedArgs;if(!this.args){return":("}formattedArgs=slice.call(this.args).map(function(arg){return sinonFormat(arg)});callStr=callStr+formattedArgs.join(", ")+")";if(typeof this.returnValue!=="undefined"){callStr+=" => "+sinonFormat(this.returnValue)}if(this.exception){callStr+=" !"+this.exception.name;if(this.exception.message){callStr+="("+this.exception.message+")"}}if(this.stack){callStr+=(this.stack.split("\n")[3]||"unknown").replace(/^\s*(?:at\s+|@)?/," at ")}return callStr}};Object.defineProperty(callProto,"stack",{enumerable:true,configurable:true,get:function(){return this.errorWithCallStack&&this.errorWithCallStack.stack||""}});callProto.invokeCallback=callProto.yield;function createSpyCall(spy,thisValue,args,returnValue,exception,id,errorWithCallStack){if(typeof id!=="number"){throw new TypeError("Call id is not a number")}var proxyCall=Object.create(callProto);proxyCall.proxy=spy;proxyCall.thisValue=thisValue;proxyCall.args=args;proxyCall.returnValue=returnValue;proxyCall.exception=exception;proxyCall.callId=id;proxyCall.errorWithCallStack=errorWithCallStack;return proxyCall}createSpyCall.toString=callProto.toString;module.exports=createSpyCall},{"./match":453,"./util/core/deep-equal":463,"./util/core/format":467,"./util/core/function-name":468,"./util/core/value-to-string":475}],449:[function(require,module,exports){"use strict";var walk=require("./util/core/walk");var getPropertyDescriptor=require("./util/core/get-property-descriptor");function collectMethod(methods,object,prop,propOwner){if(typeof getPropertyDescriptor(propOwner,prop).value==="function"&&object.hasOwnProperty(prop)){methods.push(object[prop])}}function collectOwnMethods(object){var methods=[];walk(object,collectMethod.bind(null,methods,object));return methods}module.exports=collectOwnMethods},{"./util/core/get-property-descriptor":470,"./util/core/walk":476}],450:[function(require,module,exports){"use strict";var sinonSpy=require("./spy");var sinonStub=require("./stub");var sinonMock=require("./mock");var collectOwnMethods=require("./collect-own-methods");var valueToString=require("./util/core/value-to-string");var push=Array.prototype.push;var filter=Array.prototype.filter;function getFakes(fakeCollection){if(!fakeCollection.fakes){fakeCollection.fakes=[]}return fakeCollection.fakes}function each(fakeCollection,method){var fakes=getFakes(fakeCollection);var matchingFakes=filter.call(fakes,function(fake){return typeof fake[method]==="function"});matchingFakes.forEach(function(fake){fake[method]()})}var collection={verify:function verify(){each(this,"verify")},restore:function restore(){each(this,"restore");this.fakes=[]},reset:function reset(){each(this,"reset")},resetBehavior:function resetBehavior(){each(this,"resetBehavior")},resetHistory:function resetHistory(){getFakes(this).forEach(function(fake){var method=fake.resetHistory||fake.reset;if(method){method.call(fake)}})},verifyAndRestore:function verifyAndRestore(){var exception;try{this.verify()}catch(e){exception=e}this.restore();if(exception){throw exception}},add:function add(fake){push.call(getFakes(this),fake);return fake},addUsingPromise:function(fake){fake.usingPromise(this.promiseLibrary);return fake},spy:function spy(){return this.add(sinonSpy.apply(sinonSpy,arguments))},createStubInstance:function createStubInstance(constructor){if(typeof constructor!=="function"){throw new TypeError("The constructor should be a function.")}return this.stub.call(this,Object.create(constructor.prototype))},stub:function stub(object,property){if(object&&typeof property!=="undefined"&&!(property in object)){throw new TypeError("Cannot stub non-existent own property "+valueToString(property))}var stubbed=sinonStub.apply(null,arguments);var isStubbingEntireObject=typeof property==="undefined"&&typeof object==="object";if(isStubbingEntireObject){var ownMethods=collectOwnMethods(stubbed);ownMethods.forEach(this.add.bind(this));if(this.promiseLibrary){ownMethods.forEach(this.addUsingPromise.bind(this))}}else{this.add(stubbed);if(this.promiseLibrary){stubbed.usingPromise(this.promiseLibrary)}}return stubbed},mock:function mock(){return this.add(sinonMock.apply(null,arguments))},inject:function inject(obj){var col=this;obj.spy=function(){return col.spy.apply(col,arguments)};obj.stub=function(){return col.stub.apply(col,arguments)};obj.mock=function(){return col.mock.apply(col,arguments)};return obj}};module.exports=collection},{"./collect-own-methods":449,"./mock":455,"./spy":458,"./stub":460,"./util/core/value-to-string":475}],451:[function(require,module,exports){"use strict";var supportsColor=require("supports-color");function colorize(str,color){if(!supportsColor){return str}return"["+color+"m"+str+"[0m"}exports.red=function(str){return colorize(str,31)};exports.green=function(str){return colorize(str,32)}},{"supports-color":479}],452:[function(require,module,exports){"use strict";var getPropertyDescriptor=require("./util/core/get-property-descriptor");var slice=[].slice;var useLeftMostCallback=-1;var useRightMostCallback=-2;function throwsException(fake,error,message){if(typeof error==="function"){fake.exceptionCreator=error}else if(typeof error==="string"){fake.exceptionCreator=function(){var newException=new Error(message||"");newException.name=error;return newException}}else if(!error){fake.exceptionCreator=function(){return new Error("Error")}}else{fake.exception=error}}function isPropertyConfigurable(obj,propName){var propertyDescriptor=getPropertyDescriptor(obj,propName);return propertyDescriptor?propertyDescriptor.configurable:true}module.exports={callsFake:function callsFake(fake,fn){fake.fakeFn=fn},callsArg:function callsArg(fake,pos){if(typeof pos!=="number"){throw new TypeError("argument index is not number")}fake.callArgAt=pos;fake.callbackArguments=[];fake.callbackContext=undefined;fake.callArgProp=undefined;fake.callbackAsync=false},callsArgOn:function callsArgOn(fake,pos,context){if(typeof pos!=="number"){throw new TypeError("argument index is not number")}fake.callArgAt=pos;fake.callbackArguments=[];fake.callbackContext=context;fake.callArgProp=undefined;fake.callbackAsync=false},callsArgWith:function callsArgWith(fake,pos){if(typeof pos!=="number"){throw new TypeError("argument index is not number")}fake.callArgAt=pos;fake.callbackArguments=slice.call(arguments,2);fake.callbackContext=undefined;fake.callArgProp=undefined;fake.callbackAsync=false},callsArgOnWith:function callsArgWith(fake,pos,context){if(typeof pos!=="number"){throw new TypeError("argument index is not number")}fake.callArgAt=pos;fake.callbackArguments=slice.call(arguments,3);fake.callbackContext=context;fake.callArgProp=undefined;fake.callbackAsync=false},usingPromise:function usingPromise(fake,promiseLibrary){fake.promiseLibrary=promiseLibrary},yields:function(fake){fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice.call(arguments,1);fake.callbackContext=undefined;fake.callArgProp=undefined;fake.callbackAsync=false},yieldsRight:function(fake){fake.callArgAt=useRightMostCallback;fake.callbackArguments=slice.call(arguments,1);fake.callbackContext=undefined;fake.callArgProp=undefined;fake.callbackAsync=false},yieldsOn:function(fake,context){fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice.call(arguments,2);fake.callbackContext=context;fake.callArgProp=undefined;fake.callbackAsync=false},yieldsTo:function(fake,prop){fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice.call(arguments,2);fake.callbackContext=undefined;fake.callArgProp=prop;fake.callbackAsync=false},yieldsToOn:function(fake,prop,context){fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice.call(arguments,3);fake.callbackContext=context;fake.callArgProp=prop;fake.callbackAsync=false},throws:throwsException,throwsException:throwsException,returns:function returns(fake,value){fake.returnValue=value;fake.resolve=false;fake.reject=false;fake.returnValueDefined=true;fake.exception=undefined;fake.exceptionCreator=undefined;fake.fakeFn=undefined},returnsArg:function returnsArg(fake,pos){if(typeof pos!=="number"){throw new TypeError("argument index is not number")}fake.returnArgAt=pos},throwsArg:function throwsArg(fake,pos){if(typeof pos!=="number"){throw new TypeError("argument index is not number")}fake.throwArgAt=pos},returnsThis:function returnsThis(fake){fake.returnThis=true},resolves:function resolves(fake,value){fake.returnValue=value;fake.resolve=true;fake.resolveThis=false;fake.reject=false;fake.returnValueDefined=true;fake.exception=undefined;fake.exceptionCreator=undefined;fake.fakeFn=undefined},rejects:function rejects(fake,error,message){var reason;if(typeof error==="string"){reason=new Error(message||"");reason.name=error}else if(!error){reason=new Error("Error")}else{reason=error}fake.returnValue=reason;fake.resolve=false;fake.resolveThis=false;fake.reject=true;fake.returnValueDefined=true;fake.exception=undefined;fake.exceptionCreator=undefined;fake.fakeFn=undefined;return fake},resolvesThis:function resolvesThis(fake){fake.returnValue=undefined;fake.resolve=false;fake.resolveThis=true;fake.reject=false;fake.returnValueDefined=false;fake.exception=undefined;fake.exceptionCreator=undefined;fake.fakeFn=undefined},callThrough:function callThrough(fake){fake.callsThrough=true},get:function get(fake,getterFunction){var rootStub=fake.stub||fake;Object.defineProperty(rootStub.rootObj,rootStub.propName,{get:getterFunction,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)});return fake},set:function set(fake,setterFunction){var rootStub=fake.stub||fake;Object.defineProperty(rootStub.rootObj,rootStub.propName,{set:setterFunction,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)});return fake},value:function value(fake,newVal){var rootStub=fake.stub||fake;Object.defineProperty(rootStub.rootObj,rootStub.propName,{value:newVal,enumerable:true,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)});return fake}};function createAsyncVersion(syncFnName){return function(){var result=module.exports[syncFnName].apply(this,arguments);this.callbackAsync=true;return result}}Object.keys(module.exports).forEach(function(method){if(method.match(/^(callsArg|yields)/)&&!method.match(/Async/)){module.exports[method+"Async"]=createAsyncVersion(method)}})},{"./util/core/get-property-descriptor":470}],453:[function(require,module,exports){"use strict";var deepEqual=require("./util/core/deep-equal").use(match);var every=require("./util/core/every");var functionName=require("./util/core/function-name");var get=require("lodash.get");var iterableToString=require("./util/core/iterable-to-string");var typeOf=require("./util/core/typeOf");var valueToString=require("./util/core/value-to-string");var indexOf=Array.prototype.indexOf;function assertType(value,type,name){var actual=typeOf(value);if(actual!==type){throw new TypeError("Expected type of "+name+" to be "+type+", but was "+actual)}}function assertMethodExists(value,method,name,methodPath){if(value[method]==null){throw new TypeError("Expected "+name+" to have method "+methodPath)}}var matcher={toString:function(){return this.message}};function isMatcher(object){return matcher.isPrototypeOf(object)}function matchObject(expectation,actual){if(actual===null||actual===undefined){return false}return Object.keys(expectation).every(function(key){var exp=expectation[key];var act=actual[key];if(isMatcher(exp)){if(!exp.test(act)){return false}}else if(typeOf(exp)==="object"){if(!matchObject(exp,act)){return false}}else if(!deepEqual(exp,act)){return false}return true})}var TYPE_MAP={function:function(m,expectation,message){m.test=expectation;m.message=message||"match("+functionName(expectation)+")"},number:function(m,expectation){m.test=function(actual){return expectation==actual}},object:function(m,expectation){var array=[];if(typeof expectation.test==="function"){m.test=function(actual){return expectation.test(actual)===true};m.message="match("+functionName(expectation.test)+")";return m}array=Object.keys(expectation).map(function(key){return key+": "+valueToString(expectation[key])});m.test=function(actual){return matchObject(expectation,actual)};m.message="match("+array.join(", ")+")";return m},regexp:function(m,expectation){m.test=function(actual){return typeof actual==="string"&&expectation.test(actual)}},string:function(m,expectation){m.test=function(actual){return typeof actual==="string"&&actual.indexOf(expectation)!==-1};m.message='match("'+expectation+'")'}};function match(expectation,message){var m=Object.create(matcher);var type=typeOf(expectation);if(type in TYPE_MAP){TYPE_MAP[type](m,expectation,message)}else{m.test=function(actual){return deepEqual(expectation,actual)}}if(!m.message){m.message="match("+valueToString(expectation)+")"}return m}matcher.or=function(m2){if(!arguments.length){throw new TypeError("Matcher expected")}else if(!isMatcher(m2)){m2=match(m2)}var m1=this;var or=Object.create(matcher);or.test=function(actual){return m1.test(actual)||m2.test(actual)};or.message=m1.message+".or("+m2.message+")";return or};matcher.and=function(m2){if(!arguments.length){throw new TypeError("Matcher expected")}else if(!isMatcher(m2)){m2=match(m2)}var m1=this;var and=Object.create(matcher);and.test=function(actual){return m1.test(actual)&&m2.test(actual)};and.message=m1.message+".and("+m2.message+")";return and};match.isMatcher=isMatcher;match.any=match(function(){return true},"any");match.defined=match(function(actual){return actual!==null&&actual!==undefined},"defined");match.truthy=match(function(actual){return!!actual},"truthy");match.falsy=match(function(actual){return!actual},"falsy");match.same=function(expectation){return match(function(actual){return expectation===actual},"same("+valueToString(expectation)+")")};match.typeOf=function(type){assertType(type,"string","type");return match(function(actual){return typeOf(actual)===type},'typeOf("'+type+'")')};match.instanceOf=function(type){if(typeof Symbol==="undefined"||typeof Symbol.hasInstance==="undefined"){assertType(type,"function","type")}else{assertMethodExists(type,Symbol.hasInstance,"type","[Symbol.hasInstance]")}return match(function(actual){return actual instanceof type},"instanceOf("+(functionName(type)||Object.prototype.toString.call(type))+")")};function createPropertyMatcher(propertyTest,messagePrefix){return function(property,value){assertType(property,"string","property");var onlyProperty=arguments.length===1;var message=messagePrefix+'("'+property+'"';if(!onlyProperty){message+=", "+valueToString(value)}message+=")";return match(function(actual){if(actual===undefined||actual===null||!propertyTest(actual,property)){return false}return onlyProperty||deepEqual(value,actual[property])},message)}}match.has=createPropertyMatcher(function(actual,property){if(typeof actual==="object"){return property in actual}return actual[property]!==undefined},"has");match.hasOwn=createPropertyMatcher(function(actual,property){return actual.hasOwnProperty(property)},"hasOwn");match.hasNested=function(property,value){assertType(property,"string","property");var onlyProperty=arguments.length===1;var message='hasNested("'+property+'"';if(!onlyProperty){message+=", "+valueToString(value)}message+=")";return match(function(actual){if(actual===undefined||actual===null||get(actual,property)===undefined){return false}return onlyProperty||deepEqual(value,get(actual,property))},message)};match.array=match.typeOf("array");match.array.deepEquals=function(expectation){return match(function(actual){var sameLength=actual.length===expectation.length;return typeOf(actual)==="array"&&sameLength&&every(actual,function(element,index){return expectation[index]===element})},"deepEquals(["+iterableToString(expectation)+"])")};match.array.startsWith=function(expectation){return match(function(actual){return typeOf(actual)==="array"&&every(expectation,function(expectedElement,index){return actual[index]===expectedElement})},"startsWith(["+iterableToString(expectation)+"])")};match.array.endsWith=function(expectation){return match(function(actual){var offset=actual.length-expectation.length;return typeOf(actual)==="array"&&every(expectation,function(expectedElement,index){return actual[offset+index]===expectedElement})},"endsWith(["+iterableToString(expectation)+"])")};match.array.contains=function(expectation){return match(function(actual){return typeOf(actual)==="array"&&every(expectation,function(expectedElement){return indexOf.call(actual,expectedElement)!==-1})},"contains(["+iterableToString(expectation)+"])")};match.map=match.typeOf("map");match.map.deepEquals=function mapDeepEquals(expectation){return match(function(actual){var sameLength=actual.size===expectation.size;return typeOf(actual)==="map"&&sameLength&&every(actual,function(element,key){return expectation.has(key)&&expectation.get(key)===element})},"deepEquals(Map["+iterableToString(expectation)+"])")};match.map.contains=function mapContains(expectation){return match(function(actual){return typeOf(actual)==="map"&&every(expectation,function(element,key){return actual.has(key)&&actual.get(key)===element})},"contains(Map["+iterableToString(expectation)+"])")};match.set=match.typeOf("set");match.set.deepEquals=function setDeepEquals(expectation){return match(function(actual){var sameLength=actual.size===expectation.size;return typeOf(actual)==="set"&&sameLength&&every(actual,function(element){return expectation.has(element)})},"deepEquals(Set["+iterableToString(expectation)+"])")};match.set.contains=function setContains(expectation){return match(function(actual){return typeOf(actual)==="set"&&every(expectation,function(element){return actual.has(element)})},"contains(Set["+iterableToString(expectation)+"])")};match.bool=match.typeOf("boolean");match.number=match.typeOf("number");match.string=match.typeOf("string");match.object=match.typeOf("object");match.func=match.typeOf("function");match.regexp=match.typeOf("regexp");match.date=match.typeOf("date");match.symbol=match.typeOf("symbol");module.exports=match},{"./util/core/deep-equal":463,"./util/core/every":465,"./util/core/function-name":468,"./util/core/iterable-to-string":471,"./util/core/typeOf":474,"./util/core/value-to-string":475,"lodash.get":357}],454:[function(require,module,exports){"use strict";var spyInvoke=require("./spy").invoke;var spyCallToString=require("./call").toString;var timesInWords=require("./util/core/times-in-words");var extend=require("./util/core/extend");var match=require("./match");var stub=require("./stub");var assert=require("./assert");var deepEqual=require("./util/core/deep-equal").use(match);var format=require("./util/core/format");var valueToString=require("./util/core/value-to-string");var slice=Array.prototype.slice;var push=Array.prototype.push;function callCountInWords(callCount){if(callCount===0){return"never called"}return"called "+timesInWords(callCount)}function expectedCallCountInWords(expectation){var min=expectation.minCalls;var max=expectation.maxCalls;if(typeof min==="number"&&typeof max==="number"){var str=timesInWords(min);if(min!==max){str="at least "+str+" and at most "+timesInWords(max)}return str}if(typeof min==="number"){return"at least "+timesInWords(min)}return"at most "+timesInWords(max)}function receivedMinCalls(expectation){var hasMinLimit=typeof expectation.minCalls==="number";return!hasMinLimit||expectation.callCount>=expectation.minCalls}function receivedMaxCalls(expectation){if(typeof expectation.maxCalls!=="number"){return false}return expectation.callCount===expectation.maxCalls}function verifyMatcher(possibleMatcher,arg){var isMatcher=match&&match.isMatcher(possibleMatcher);return isMatcher&&possibleMatcher.test(arg)||true}var mockExpectation={minCalls:1,maxCalls:1,create:function create(methodName){var expectation=extend(stub.create(),mockExpectation);delete expectation.create;expectation.method=methodName;return expectation},invoke:function invoke(func,thisValue,args){this.verifyCallAllowed(thisValue,args);return spyInvoke.apply(this,arguments)},atLeast:function atLeast(num){if(typeof num!=="number"){throw new TypeError("'"+valueToString(num)+"' is not number")}if(!this.limitsSet){this.maxCalls=null;this.limitsSet=true}this.minCalls=num;return this},atMost:function atMost(num){if(typeof num!=="number"){throw new TypeError("'"+valueToString(num)+"' is not number")}if(!this.limitsSet){this.minCalls=null;this.limitsSet=true}this.maxCalls=num;return this},never:function never(){return this.exactly(0)},once:function once(){return this.exactly(1)},twice:function twice(){return this.exactly(2)},thrice:function thrice(){return this.exactly(3)},exactly:function exactly(num){if(typeof num!=="number"){throw new TypeError("'"+valueToString(num)+"' is not a number")}this.atLeast(num);return this.atMost(num)},met:function met(){return!this.failed&&receivedMinCalls(this)},verifyCallAllowed:function verifyCallAllowed(thisValue,args){var expectedArguments=this.expectedArguments;if(receivedMaxCalls(this)){this.failed=true;mockExpectation.fail(this.method+" already called "+timesInWords(this.maxCalls))}if("expectedThis"in this&&this.expectedThis!==thisValue){mockExpectation.fail(this.method+" called with "+valueToString(thisValue)+" as thisValue, expected "+valueToString(this.expectedThis))}if(!("expectedArguments"in this)){return}if(!args){mockExpectation.fail(this.method+" received no arguments, expected "+format(expectedArguments))}if(args.length<expectedArguments.length){mockExpectation.fail(this.method+" received too few arguments ("+format(args)+"), expected "+format(expectedArguments))}if(this.expectsExactArgCount&&args.length!==expectedArguments.length){mockExpectation.fail(this.method+" received too many arguments ("+format(args)+"), expected "+format(expectedArguments))}expectedArguments.forEach(function(expectedArgument,i){if(!verifyMatcher(expectedArgument,args[i])){mockExpectation.fail(this.method+" received wrong arguments "+format(args)+", didn't match "+expectedArguments.toString())}if(!deepEqual(expectedArgument,args[i])){mockExpectation.fail(this.method+" received wrong arguments "+format(args)+", expected "+format(expectedArguments))}},this)},allowsCall:function allowsCall(thisValue,args){var expectedArguments=this.expectedArguments;if(this.met()&&receivedMaxCalls(this)){return false}if("expectedThis"in this&&this.expectedThis!==thisValue){return false}if(!("expectedArguments"in this)){return true}args=args||[];if(args.length<expectedArguments.length){return false}if(this.expectsExactArgCount&&args.length!==expectedArguments.length){return false}return expectedArguments.every(function(expectedArgument,i){if(!verifyMatcher(expectedArgument,args[i])){return false}if(!deepEqual(expectedArgument,args[i])){return false}return true})},withArgs:function withArgs(){this.expectedArguments=slice.call(arguments);return this},withExactArgs:function withExactArgs(){this.withArgs.apply(this,arguments);this.expectsExactArgCount=true;return this},on:function on(thisValue){this.expectedThis=thisValue;return this},toString:function(){var args=(this.expectedArguments||[]).slice();if(!this.expectsExactArgCount){push.call(args,"[...]")}var callStr=spyCallToString.call({proxy:this.method||"anonymous mock expectation",args:args});var message=callStr.replace(", [...","[, ...")+" "+expectedCallCountInWords(this);if(this.met()){return"Expectation met: "+message}return"Expected "+message+" ("+callCountInWords(this.callCount)+")"},verify:function verify(){if(!this.met()){mockExpectation.fail(this.toString())}else{mockExpectation.pass(this.toString())}return true},pass:function pass(message){assert.pass(message)},fail:function fail(message){var exception=new Error(message);exception.name="ExpectationError";throw exception}};module.exports=mockExpectation},{"./assert":446,"./call":448,"./match":453,"./spy":458,"./stub":460,"./util/core/deep-equal":463,"./util/core/extend":466,"./util/core/format":467,"./util/core/times-in-words":473,"./util/core/value-to-string":475}],455:[function(require,module,exports){"use strict";var mockExpectation=require("./mock-expectation");var spyCallToString=require("./call").toString;var extend=require("./util/core/extend");var match=require("./match");var deepEqual=require("./util/core/deep-equal").use(match);var wrapMethod=require("./util/core/wrap-method");var push=Array.prototype.push;var filter=Array.prototype.filter;function mock(object){if(!object||typeof object==="string"){return mockExpectation.create(object?object:"Anonymous mock")}return mock.create(object)}function each(collection,callback){var col=collection||[];col.forEach(callback)}function arrayEquals(arr1,arr2,compareLength){if(compareLength&&arr1.length!==arr2.length){return false}return arr1.every(function(element,i){return deepEqual(element,arr2[i])})}extend(mock,{create:function create(object){if(!object){throw new TypeError("object is null")}var mockObject=extend({},mock);mockObject.object=object;delete mockObject.create;return mockObject},expects:function expects(method){if(!method){throw new TypeError("method is falsy")}if(!this.expectations){this.expectations={};this.proxies=[];this.failures=[]}if(!this.expectations[method]){this.expectations[method]=[];var mockObject=this;wrapMethod(this.object,method,function(){return mockObject.invokeMethod(method,this,arguments)});push.call(this.proxies,method)}var expectation=mockExpectation.create(method);extend(expectation,this.object[method]);push.call(this.expectations[method],expectation);return expectation},restore:function restore(){var object=this.object;each(this.proxies,function(proxy){if(typeof object[proxy].restore==="function"){object[proxy].restore()}})},verify:function verify(){var expectations=this.expectations||{};var messages=this.failures?this.failures.slice():[];var met=[];each(this.proxies,function(proxy){each(expectations[proxy],function(expectation){if(!expectation.met()){push.call(messages,expectation.toString())}else{push.call(met,expectation.toString())}})});this.restore();if(messages.length>0){mockExpectation.fail(messages.concat(met).join("\n"))}else if(met.length>0){mockExpectation.pass(messages.concat(met).join("\n"))}return true},invokeMethod:function invokeMethod(method,thisValue,args){var expectations=this.expectations&&this.expectations[method]?this.expectations[method]:[];var currentArgs=args||[];var available;var expectationsWithMatchingArgs=filter.call(expectations,function(expectation){var expectedArgs=expectation.expectedArguments||[];return arrayEquals(expectedArgs,currentArgs,expectation.expectsExactArgCount)});var expectationsToApply=filter.call(expectationsWithMatchingArgs,function(expectation){return!expectation.met()&&expectation.allowsCall(thisValue,args)});if(expectationsToApply.length>0){return expectationsToApply[0].apply(thisValue,args)}var messages=[];var exhausted=0;expectationsWithMatchingArgs.forEach(function(expectation){if(expectation.allowsCall(thisValue,args)){available=available||expectation}else{exhausted+=1}});if(available&&exhausted===0){return available.apply(thisValue,args)}expectations.forEach(function(expectation){push.call(messages,"    "+expectation.toString())});messages.unshift("Unexpected call: "+spyCallToString.call({proxy:method,args:args}));var err=new Error;if(!err.stack){try{throw err}catch(e){}}this.failures.push("Unexpected call: "+spyCallToString.call({proxy:method,args:args,stack:err.stack}));mockExpectation.fail(messages.join("\n"))}});module.exports=mock},{"./call":448,"./match":453,"./mock-expectation":454,"./util/core/deep-equal":463,"./util/core/extend":466,"./util/core/wrap-method":477}],456:[function(require,module,exports){"use strict";var extend=require("./util/core/extend");var sinonCollection=require("./collection");var sinonMatch=require("./match");var sinonAssert=require("./assert");var sinonClock=require("./util/fake_timers");var fakeServer=require("nise").fakeServer;var fakeXhr=require("nise").fakeXhr;var fakeServerWithClock=require("nise").fakeServerWithClock;var push=[].push;var sinonSandbox=Object.create(sinonCollection);function exposeValue(sandbox,config,key,value){if(!value){return}if(config.injectInto&&!(key in config.injectInto)){config.injectInto[key]=value;sandbox.injectedKeys.push(key)}else{push.call(sandbox.args,value)}}function prepareSandboxFromConfig(config){var sandbox=Object.create(sinonSandbox);if(config.useFakeServer){if(typeof config.useFakeServer==="object"){sandbox.serverPrototype=config.useFakeServer}sandbox.useFakeServer()}if(config.useFakeTimers){if(typeof config.useFakeTimers==="object"){sandbox.useFakeTimers.call(sandbox,config.useFakeTimers)}else{sandbox.useFakeTimers()}}return sandbox}extend(sinonSandbox,{useFakeTimers:function(args){this.clock=sinonClock.useFakeTimers.call(null,args);return this.add(this.clock)},serverPrototype:fakeServerWithClock,useFakeServer:function useFakeServer(){var proto=this.serverPrototype||fakeServer;if(!proto||!proto.create){return null}this.server=proto.create();return this.add(this.server)},useFakeXMLHttpRequest:function useFakeXMLHttpRequest(){var xhr=fakeXhr.useFakeXMLHttpRequest();return this.add(xhr)},inject:function(obj){sinonCollection.inject.call(this,obj);if(this.clock){obj.clock=this.clock}if(this.server){obj.server=this.server;obj.requests=this.server.requests}obj.match=sinonMatch;return obj},usingPromise:function(promiseLibrary){this.promiseLibrary=promiseLibrary;return this},restore:function(){if(arguments.length){throw new Error("sandbox.restore() does not take any parameters. Perhaps you meant stub.restore()")}sinonCollection.restore.apply(this,arguments);this.restoreContext()},restoreContext:function(){var injectedKeys=this.injectedKeys;var injectInto=this.injectInto;if(!injectedKeys){return}injectedKeys.forEach(function(injectedKey){delete injectInto[injectedKey]});injectedKeys=[]},create:function(config){if(!config){return Object.create(sinonSandbox)}var sandbox=prepareSandboxFromConfig(config);sandbox.args=sandbox.args||[];sandbox.injectedKeys=[];sandbox.injectInto=config.injectInto;var exposed=sandbox.inject({});if(config.properties){config.properties.forEach(function(prop){var value=exposed[prop]||prop==="sandbox"&&sandbox;exposeValue(sandbox,config,prop,value)})}else{exposeValue(sandbox,config,"sandbox")}return sandbox},match:sinonMatch,assert:sinonAssert});module.exports=sinonSandbox},{"./assert":446,"./collection":450,"./match":453,"./util/core/extend":466,"./util/fake_timers":478,nise:377}],457:[function(require,module,exports){"use strict";var color=require("./color");var timesInWords=require("./util/core/times-in-words");var sinonFormat=require("./util/core/format");var sinonMatch=require("./match");var jsDiff=require("diff");var push=Array.prototype.push;function colorSinonMatchText(matcher,calledArg,calledArgMessage){if(!matcher.test(calledArg)){matcher.message=color.red(matcher.message);if(calledArgMessage){calledArgMessage=color.green(calledArgMessage)}}return calledArgMessage+" "+matcher.message}function colorDiffText(diff){var objects=diff.map(function(part){var text=part.value;if(part.added){text=color.green(text)}else if(part.removed){text=color.red(text)}if(diff.length===2){text+=" "}return text});return objects.join("")}module.exports={c:function(spyInstance){return timesInWords(spyInstance.callCount)},n:function(spyInstance){return spyInstance.toString()},D:function(spyInstance,args){var message="";for(var i=0,l=spyInstance.callCount;i<l;++i){if(l>1){if(i>0){message+="\n"}message+="Call "+(i+1)+":"}var calledArgs=spyInstance.getCall(i).args;for(var j=0;j<calledArgs.length||j<args.length;++j){message+="\n";var calledArgMessage=j<calledArgs.length?sinonFormat(calledArgs[j]):"";if(sinonMatch.isMatcher(args[j])){message+=colorSinonMatchText(args[j],calledArgs[j],calledArgMessage)}else{var expectedArgMessage=j<args.length?sinonFormat(args[j]):"";var diff=jsDiff.diffJson(calledArgMessage,expectedArgMessage);message+=colorDiffText(diff)}}}return message},C:function(spyInstance){var calls=[];for(var i=0,l=spyInstance.callCount;i<l;++i){var stringifiedCall="    "+spyInstance.getCall(i).toString();if(/\n/.test(calls[i-1])){stringifiedCall="\n"+stringifiedCall}push.call(calls,stringifiedCall)}return calls.length>0?"\n"+calls.join("\n"):""},t:function(spyInstance){var objects=[];for(var i=0,l=spyInstance.callCount;i<l;++i){push.call(objects,sinonFormat(spyInstance.thisValues[i]))}return objects.join(", ")},"*":function(spyInstance,args){return args.map(function(arg){return sinonFormat(arg)}).join(", ")}}},{"./color":451,"./match":453,"./util/core/format":467,"./util/core/times-in-words":473,diff:311}],458:[function(require,module,exports){"use strict";var createBehavior=require("./behavior").create;var extend=require("./util/core/extend");var functionName=require("./util/core/function-name");var functionToString=require("./util/core/function-to-string");var getPropertyDescriptor=require("./util/core/get-property-descriptor");var sinonMatch=require("./match");var deepEqual=require("./util/core/deep-equal").use(sinonMatch);var spyCall=require("./call");var wrapMethod=require("./util/core/wrap-method");var sinonFormat=require("./util/core/format");var valueToString=require("./util/core/value-to-string");var push=Array.prototype.push;var slice=Array.prototype.slice;var filter=Array.prototype.filter;var ErrorConstructor=Error.prototype.constructor;var callId=0;function spy(object,property,types){var descriptor,methodDesc;if(!property&&typeof object==="function"){return spy.create(object)}if(!object&&!property){return spy.create(function(){})}if(!types){return wrapMethod(object,property,spy.create(object[property]))}descriptor={};methodDesc=getPropertyDescriptor(object,property);types.forEach(function(type){descriptor[type]=spy.create(methodDesc[type])});return wrapMethod(object,property,descriptor)}function incrementCallCount(){this.called=true;this.callCount+=1;this.notCalled=false;this.calledOnce=this.callCount===1;this.calledTwice=this.callCount===2;this.calledThrice=this.callCount===3}function createCallProperties(){this.firstCall=this.getCall(0);this.secondCall=this.getCall(1);this.thirdCall=this.getCall(2);this.lastCall=this.getCall(this.callCount-1)}function createProxy(func,proxyLength){var p;if(proxyLength){switch(proxyLength){case 1:p=function proxy(a){return p.invoke(func,this,slice.call(arguments))};break;case 2:p=function proxy(a,b){return p.invoke(func,this,slice.call(arguments))};break;case 3:p=function proxy(a,b,c){return p.invoke(func,this,slice.call(arguments))};break;case 4:p=function proxy(a,b,c,d){return p.invoke(func,this,slice.call(arguments))};break;case 5:p=function proxy(a,b,c,d,e){return p.invoke(func,this,slice.call(arguments))};break;case 6:p=function proxy(a,b,c,d,e,f){return p.invoke(func,this,slice.call(arguments))};break;case 7:p=function proxy(a,b,c,d,e,f,g){return p.invoke(func,this,slice.call(arguments))};break;case 8:p=function proxy(a,b,c,d,e,f,g,h){return p.invoke(func,this,slice.call(arguments))};break;case 9:p=function proxy(a,b,c,d,e,f,g,h,i){return p.invoke(func,this,slice.call(arguments))};break;case 10:p=function proxy(a,b,c,d,e,f,g,h,i,j){return p.invoke(func,this,slice.call(arguments))};break;case 11:p=function proxy(a,b,c,d,e,f,g,h,i,j,k){return p.invoke(func,this,slice.call(arguments))};break;case 12:p=function proxy(a,b,c,d,e,f,g,h,i,j,k,l){return p.invoke(func,this,slice.call(arguments))};break;default:p=function proxy(){return p.invoke(func,this,slice.call(arguments))};break}}else{p=function proxy(){return p.invoke(func,this,slice.call(arguments))}}p.isSinonProxy=true;return p}var uuid=0;var spyApi={formatters:require("./spy-formatters"),reset:function(){if(this.invoking){var err=new Error("Cannot reset Sinon function while invoking it. "+"Move the call to .reset outside of the callback.");err.name="InvalidResetException";throw err}this.called=false;this.notCalled=true;this.calledOnce=false;this.calledTwice=false;this.calledThrice=false;this.callCount=0;this.firstCall=null;this.secondCall=null;this.thirdCall=null;this.lastCall=null;this.args=[];this.returnValues=[];this.thisValues=[];this.exceptions=[];this.callIds=[];this.errorsWithCallStack=[];if(this.fakes){this.fakes.forEach(function(fake){if(fake.resetHistory){fake.resetHistory()}else{fake.reset()}})}return this},create:function create(func,spyLength){var name;if(typeof func!=="function"){func=function(){}}else{name=functionName(func)}if(!spyLength){spyLength=func.length}var proxy=createProxy(func,spyLength);extend(proxy,spy);delete proxy.create;extend(proxy,func);proxy.reset();proxy.prototype=func.prototype;proxy.displayName=name||"spy";proxy.toString=functionToString;proxy.instantiateFake=spy.create;proxy.id="spy#"+uuid++;return proxy},invoke:function invoke(func,thisValue,args){var matchings=this.matchingFakes(args);var currentCallId=callId++;var exception,returnValue;incrementCallCount.call(this);push.call(this.thisValues,thisValue);push.call(this.args,args);push.call(this.callIds,currentCallId);matchings.forEach(function(matching){incrementCallCount.call(matching);push.call(matching.thisValues,thisValue);push.call(matching.args,args);push.call(matching.callIds,currentCallId)});createCallProperties.call(this);matchings.forEach(function(matching){createCallProperties.call(matching)});try{this.invoking=true;returnValue=(this.func||func).apply(thisValue,args);var thisCall=this.getCall(this.callCount-1);if(thisCall.calledWithNew()&&typeof returnValue!=="object"){returnValue=thisValue}}catch(e){exception=e}finally{delete this.invoking}push.call(this.exceptions,exception);push.call(this.returnValues,returnValue);matchings.forEach(function(matching){push.call(matching.exceptions,exception);push.call(matching.returnValues,returnValue)});var err=new ErrorConstructor;try{throw err}catch(e){}push.call(this.errorsWithCallStack,err);matchings.forEach(function(matching){push.call(matching.errorsWithCallStack,err)});createCallProperties.call(this);matchings.forEach(function(matching){createCallProperties.call(matching)});if(exception!==undefined){throw exception}return returnValue},named:function named(name){this.displayName=name;return this},getCall:function getCall(i){if(i<0||i>=this.callCount){return null}return spyCall(this,this.thisValues[i],this.args[i],this.returnValues[i],this.exceptions[i],this.callIds[i],this.errorsWithCallStack[i])},getCalls:function(){var calls=[];var i;for(i=0;i<this.callCount;i++){calls.push(this.getCall(i))}return calls},calledBefore:function calledBefore(spyFn){if(!this.called){return false}if(!spyFn.called){return true}return this.callIds[0]<spyFn.callIds[spyFn.callIds.length-1]},calledAfter:function calledAfter(spyFn){if(!this.called||!spyFn.called){return false}return this.callIds[this.callCount-1]>spyFn.callIds[0]},calledImmediatelyBefore:function calledImmediatelyBefore(spyFn){if(!this.called||!spyFn.called){return false}return this.callIds[this.callCount-1]===spyFn.callIds[spyFn.callCount-1]-1},calledImmediatelyAfter:function calledImmediatelyAfter(spyFn){if(!this.called||!spyFn.called){return false}return this.callIds[this.callCount-1]===spyFn.callIds[spyFn.callCount-1]+1},withArgs:function(){var args=slice.call(arguments);if(this.fakes){var matching=this.matchingFakes(args,true).pop();if(matching){return matching}}else{this.fakes=[]}var original=this;var fake=this.instantiateFake();fake.matchingArguments=args;fake.parent=this;push.call(this.fakes,fake);if(original.defaultBehavior&&original.defaultBehavior.promiseLibrary){fake.defaultBehavior=fake.defaultBehavior||createBehavior(fake);fake.defaultBehavior.promiseLibrary=original.defaultBehavior.promiseLibrary}fake.withArgs=function(){return original.withArgs.apply(original,arguments)};original.args.forEach(function(arg,i){if(!fake.matches(arg)){return}incrementCallCount.call(fake);push.call(fake.thisValues,original.thisValues[i]);push.call(fake.args,arg);push.call(fake.returnValues,original.returnValues[i]);push.call(fake.exceptions,original.exceptions[i]);push.call(fake.callIds,original.callIds[i])});createCallProperties.call(fake);return fake},matchingFakes:function(args,strict){return filter.call(this.fakes||[],function(fake){return fake.matches(args,strict)})},matches:function(args,strict){var margs=this.matchingArguments;if(margs.length<=args.length&&deepEqual(margs,args.slice(0,margs.length))){return!strict||margs.length===args.length}return undefined},printf:function(format){var spyInstance=this;var args=slice.call(arguments,1);var formatter;return(format||"").replace(/%(.)/g,function(match,specifyer){formatter=spyApi.formatters[specifyer];if(typeof formatter==="function"){return formatter.call(null,spyInstance,args)}else if(!isNaN(parseInt(specifyer,10))){return sinonFormat(args[specifyer-1])}return"%"+specifyer})}};function delegateToCalls(method,matchAny,actual,notCalled){spyApi[method]=function(){if(!this.called){if(notCalled){return notCalled.apply(this,arguments)}return false}var currentCall;var matches=0;for(var i=0,l=this.callCount;i<l;i+=1){currentCall=this.getCall(i);if(currentCall[actual||method].apply(currentCall,arguments)){matches+=1;if(matchAny){return true}}}return matches===this.callCount}}delegateToCalls("calledOn",true);delegateToCalls("alwaysCalledOn",false,"calledOn");delegateToCalls("calledWith",true);delegateToCalls("calledWithMatch",true);delegateToCalls("alwaysCalledWith",false,"calledWith");delegateToCalls("alwaysCalledWithMatch",false,"calledWithMatch");delegateToCalls("calledWithExactly",true);delegateToCalls("alwaysCalledWithExactly",false,"calledWithExactly");delegateToCalls("neverCalledWith",false,"notCalledWith",function(){return true});delegateToCalls("neverCalledWithMatch",false,"notCalledWithMatch",function(){return true});delegateToCalls("threw",true);delegateToCalls("alwaysThrew",false,"threw");delegateToCalls("returned",true);delegateToCalls("alwaysReturned",false,"returned");delegateToCalls("calledWithNew",true);delegateToCalls("alwaysCalledWithNew",false,"calledWithNew");delegateToCalls("callArg",false,"callArgWith",function(){throw new Error(this.toString()+" cannot call arg since it was not yet invoked.")});spyApi.callArgWith=spyApi.callArg;delegateToCalls("callArgOn",false,"callArgOnWith",function(){throw new Error(this.toString()+" cannot call arg since it was not yet invoked.")});spyApi.callArgOnWith=spyApi.callArgOn;delegateToCalls("throwArg",false,"throwArg",function(){throw new Error(this.toString()+" cannot throw arg since it was not yet invoked.")});delegateToCalls("yield",false,"yield",function(){throw new Error(this.toString()+" cannot yield since it was not yet invoked.")});spyApi.invokeCallback=spyApi.yield;delegateToCalls("yieldOn",false,"yieldOn",function(){throw new Error(this.toString()+" cannot yield since it was not yet invoked.")});delegateToCalls("yieldTo",false,"yieldTo",function(property){throw new Error(this.toString()+" cannot yield to '"+valueToString(property)+"' since it was not yet invoked.")});delegateToCalls("yieldToOn",false,"yieldToOn",function(property){throw new Error(this.toString()+" cannot yield to '"+valueToString(property)+"' since it was not yet invoked.")});extend(spy,spyApi);spy.spyCall=spyCall;module.exports=spy},{"./behavior":447,"./call":448,"./match":453,"./spy-formatters":457,"./util/core/deep-equal":463,"./util/core/extend":466,"./util/core/format":467,"./util/core/function-name":468,"./util/core/function-to-string":469,"./util/core/get-property-descriptor":470,"./util/core/value-to-string":475,"./util/core/wrap-method":477}],459:[function(require,module,exports){"use strict";var getPropertyDescriptor=require("./util/core/get-property-descriptor");var walk=require("./util/core/walk");function stubEntireObject(stub,object){walk(object||{},function(prop,propOwner){if(propOwner!==Object.prototype&&prop!=="constructor"&&typeof getPropertyDescriptor(propOwner,prop).value==="function"){stub(object,prop)}});return object}module.exports=stubEntireObject},{"./util/core/get-property-descriptor":470,"./util/core/walk":476}],460:[function(require,module,exports){"use strict";var behavior=require("./behavior");var behaviors=require("./default-behaviors");var spy=require("./spy");var extend=require("./util/core/extend");var functionToString=require("./util/core/function-to-string");var getPropertyDescriptor=require("./util/core/get-property-descriptor");var wrapMethod=require("./util/core/wrap-method");var stubEntireObject=require("./stub-entire-object");var throwOnFalsyObject=require("./throw-on-falsy-object");var valueToString=require("./util/core/value-to-string");var slice=Array.prototype.slice;function stub(object,property){if(arguments.length>2){throw new TypeError("stub(obj, 'meth', fn) has been removed, see documentation")}throwOnFalsyObject.apply(null,arguments);if(object&&typeof property!=="undefined"&&!(property in object)){throw new TypeError("Cannot stub non-existent own property "+valueToString(property))}var actualDescriptor=getPropertyDescriptor(object,property);var isStubbingEntireObject=typeof property==="undefined"&&typeof object==="object";var isCreatingNewStub=!object&&typeof property==="undefined";var isStubbingNonFuncProperty=(typeof object==="object"||typeof object==="function")&&typeof property!=="undefined"&&(typeof actualDescriptor==="undefined"||typeof actualDescriptor.value!=="function")&&typeof descriptor==="undefined";var isStubbingExistingMethod=typeof object==="object"&&typeof actualDescriptor!=="undefined"&&typeof actualDescriptor.value==="function";var arity=isStubbingExistingMethod?object[property].length:0;if(isStubbingEntireObject){return stubEntireObject(stub,object)}if(isCreatingNewStub){return stub.create()}var s=stub.create(arity);s.rootObj=object;s.propName=property;s.restore=function restore(){if(actualDescriptor!==undefined){Object.defineProperty(object,property,actualDescriptor);return}delete object[property]};return isStubbingNonFuncProperty?s:wrapMethod(object,property,s)}stub.createStubInstance=function(constructor){if(typeof constructor!=="function"){throw new TypeError("The constructor should be a function.")}return stub(Object.create(constructor.prototype))};function getParentBehaviour(stubInstance){return stubInstance.parent&&getCurrentBehavior(stubInstance.parent)}function getDefaultBehavior(stubInstance){return stubInstance.defaultBehavior||getParentBehaviour(stubInstance)||behavior.create(stubInstance)}function getCurrentBehavior(stubInstance){var currentBehavior=stubInstance.behaviors[stubInstance.callCount-1];return currentBehavior&&currentBehavior.isPresent()?currentBehavior:getDefaultBehavior(stubInstance)}var uuid=0;var proto={create:function create(stubLength){var functionStub=function(){var args=slice.call(arguments);var matchings=functionStub.matchingFakes(args);var fnStub=matchings.sort(function(a,b){return a.matchingArguments.length-b.matchingArguments.length}).pop()||functionStub;return getCurrentBehavior(fnStub).invoke(this,arguments)};functionStub.id="stub#"+uuid++;var orig=functionStub;functionStub=spy.create(functionStub,stubLength);functionStub.func=orig;extend(functionStub,stub);functionStub.instantiateFake=stub.create;functionStub.displayName="stub";functionStub.toString=functionToString;functionStub.defaultBehavior=null;functionStub.behaviors=[];return functionStub},resetBehavior:function(){var fakes=this.fakes||[];this.defaultBehavior=null;this.behaviors=[];delete this.returnValue;delete this.returnArgAt;delete this.throwArgAt;delete this.fakeFn;this.returnThis=false;this.resolveThis=false;fakes.forEach(function(fake){fake.resetBehavior()})},resetHistory:spy.reset,reset:function(){this.resetHistory();this.resetBehavior()},onCall:function onCall(index){if(!this.behaviors[index]){this.behaviors[index]=behavior.create(this)}return this.behaviors[index]},onFirstCall:function onFirstCall(){return this.onCall(0)},onSecondCall:function onSecondCall(){return this.onCall(1)},onThirdCall:function onThirdCall(){return this.onCall(2)}};Object.keys(behavior).forEach(function(method){if(behavior.hasOwnProperty(method)&&!proto.hasOwnProperty(method)&&method!=="create"&&method!=="withArgs"&&method!=="invoke"){proto[method]=behavior.createBehavior(method)}});Object.keys(behaviors).forEach(function(method){if(behaviors.hasOwnProperty(method)&&!proto.hasOwnProperty(method)){behavior.addBehavior(stub,method,behaviors[method])}});extend(stub,proto);module.exports=stub},{"./behavior":447,"./default-behaviors":452,"./spy":458,"./stub-entire-object":459,"./throw-on-falsy-object":461,"./util/core/extend":466,"./util/core/function-to-string":469,"./util/core/get-property-descriptor":470,"./util/core/value-to-string":475,"./util/core/wrap-method":477}],461:[function(require,module,exports){"use strict";var valueToString=require("./util/core/value-to-string");function throwOnFalsyObject(object,property){if(property&&!object){var type=object===null?"null":"undefined";throw new Error("Trying to stub property '"+valueToString(property)+"' of "+type)}}module.exports=throwOnFalsyObject},{"./util/core/value-to-string":475}],462:[function(require,module,exports){"use strict";var every=Array.prototype.every;module.exports=function calledInOrder(spies){var callMap={};function hasCallsLeft(spy){if(callMap[spy.id]===undefined){callMap[spy.id]=0}return callMap[spy.id]<spy.callCount}if(arguments.length>1){spies=arguments}return every.call(spies,function checkAdjacentCalls(spy,i){var calledBeforeNext=true;if(i!==spies.length-1){calledBeforeNext=spy.calledBefore(spies[i+1])}if(hasCallsLeft(spy)&&calledBeforeNext){callMap[spy.id]+=1;return true}return false})}},{}],463:[function(require,module,exports){"use strict";var div=typeof document!=="undefined"&&document.createElement("div");function isReallyNaN(val){return val!==val}function isDOMNode(obj){var success=false;try{obj.appendChild(div);success=div.parentNode===obj}catch(e){return false}finally{try{obj.removeChild(div)}catch(e){}}return success}function isElement(obj){return div&&obj&&obj.nodeType===1&&isDOMNode(obj)}var deepEqual=module.exports=function deepEqual(a,b){if(typeof a!=="object"||typeof b!=="object"){return isReallyNaN(a)&&isReallyNaN(b)||a===b}if(isElement(a)||isElement(b)){return a===b}if(a===b){return true}if(a===null&&b!==null||a!==null&&b===null){return false}if(a instanceof RegExp&&b instanceof RegExp){return a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline}if(a instanceof Error&&b instanceof Error){return a===b}var aString=Object.prototype.toString.call(a);if(aString!==Object.prototype.toString.call(b)){return false}if(aString==="[object Date]"){return a.valueOf()===b.valueOf()}var prop;var aLength=0;var bLength=0;if(aString==="[object Array]"&&a.length!==b.length){return false}for(prop in a){if(Object.prototype.hasOwnProperty.call(a,prop)){aLength+=1;if(!(prop in b)){return false}if(!(arguments[2]||deepEqual)(a[prop],b[prop])){return false}}}for(prop in b){if(Object.prototype.hasOwnProperty.call(b,prop)){bLength+=1}}return aLength===bLength};deepEqual.use=function(match){return function deepEqual$matcher(a,b){if(match.isMatcher(a)){if(match.isMatcher(b)){return a===b}return a.test(b)}return deepEqual(a,b,deepEqual$matcher)}}},{}],464:[function(require,module,exports){"use strict";module.exports={injectIntoThis:true,injectInto:null,properties:["spy","stub","mock","clock","server","requests"],useFakeTimers:true,useFakeServer:true}},{}],465:[function(require,module,exports){"use strict";module.exports=function every(obj,fn){var pass=true;try{obj.forEach(function(){if(!fn.apply(this,arguments)){throw new Error}})}catch(e){pass=false}return pass}},{}],466:[function(require,module,exports){"use strict";var hasDontEnumBug=function(){var obj={constructor:function(){return"0"},toString:function(){return"1"},valueOf:function(){return"2"},toLocaleString:function(){return"3"},prototype:function(){return"4"},isPrototypeOf:function(){return"5"},propertyIsEnumerable:function(){return"6"},hasOwnProperty:function(){return"7"},length:function(){return"8"},unique:function(){return"9"}};var result=[];for(var prop in obj){if(obj.hasOwnProperty(prop)){result.push(obj[prop]())}}return result.join("")!=="0123456789"}();module.exports=function extend(target){var sources=Array.prototype.slice.call(arguments,1);var source,i,prop;for(i=0;i<sources.length;i++){source=sources[i];for(prop in source){if(source.hasOwnProperty(prop)){target[prop]=source[prop]}}if(hasDontEnumBug&&source.hasOwnProperty("toString")&&source.toString!==target.toString){target.toString=source.toString}}return target}},{}],467:[function(require,module,exports){"use strict";var formatio=require("formatio");var formatter=formatio.configure({quoteStrings:false,limitChildrenCount:250});var customFormatter;function format(){if(customFormatter){return customFormatter.apply(null,arguments)}return formatter.ascii.apply(formatter,arguments)}format.setFormatter=function(aCustomFormatter){if(typeof aCustomFormatter!=="function"){throw new Error("format.setFormatter must be called with a function")}customFormatter=aCustomFormatter};module.exports=format},{formatio:334}],468:[function(require,module,exports){"use strict";module.exports=function functionName(func){var name=func.displayName||func.name;var matches;if(!name&&(matches=func.toString().match(/function ([^\s\(]+)/))){name=matches[1]}return name}},{}],469:[function(require,module,exports){"use strict";module.exports=function toString(){var i,prop,thisValue;if(this.getCall&&this.callCount){i=this.callCount;while(i--){thisValue=this.getCall(i).thisValue;for(prop in thisValue){if(thisValue[prop]===this){return prop}}}}return this.displayName||"sinon fake"}},{}],470:[function(require,module,exports){"use strict";module.exports=function getPropertyDescriptor(object,property){var proto=object;var descriptor;while(proto&&!(descriptor=Object.getOwnPropertyDescriptor(proto,property))){proto=Object.getPrototypeOf(proto)}return descriptor}},{}],471:[function(require,module,exports){"use strict";var typeOf=require("./typeOf");module.exports=function iterableToString(obj){var representation="";function stringify(item){return typeof item==="string"?"'"+item+"'":String(item)}function mapToString(map){map.forEach(function(value,key){representation+="["+stringify(key)+","+stringify(value)+"],"});representation=representation.slice(0,-1);return representation}function genericIterableToString(iterable){iterable.forEach(function(value){representation+=stringify(value)+","});representation=representation.slice(0,-1);return representation}if(typeOf(obj)==="map"){return mapToString(obj)}return genericIterableToString(obj)}},{"./typeOf":474}],472:[function(require,module,exports){"use strict";module.exports=function orderByFirstCall(spies){return spies.sort(function(a,b){var aCall=a.getCall(0);var bCall=b.getCall(0);var aId=aCall&&aCall.callId||-1;var bId=bCall&&bCall.callId||-1;return aId<bId?-1:1})}},{}],473:[function(require,module,exports){"use strict";var array=[null,"once","twice","thrice"];module.exports=function timesInWords(count){return array[count]||(count||0)+" times"}},{}],474:[function(require,module,exports){"use strict";var type=require("type-detect");module.exports=function typeOf(value){return type(value).toLowerCase()}},{"type-detect":486}],475:[function(require,module,exports){"use strict";module.exports=function(value){if(value&&value.toString){return value.toString()}return String(value)}},{}],476:[function(require,module,exports){"use strict";function walkInternal(obj,iterator,context,originalObj,seen){var proto,prop;if(typeof Object.getOwnPropertyNames!=="function"){for(prop in obj){iterator.call(context,obj[prop],prop,obj)}return}Object.getOwnPropertyNames(obj).forEach(function(k){if(seen[k]!==true){seen[k]=true;var target=typeof Object.getOwnPropertyDescriptor(obj,k).get==="function"?originalObj:obj;iterator.call(context,k,target)}});proto=Object.getPrototypeOf(obj);if(proto){walkInternal(proto,iterator,context,originalObj,seen)}}module.exports=function walk(obj,iterator,context){return walkInternal(obj,iterator,context,obj,{})}},{}],477:[function(require,module,exports){"use strict";var getPropertyDescriptor=require("./get-property-descriptor");var valueToString=require("./value-to-string");var hasOwn=Object.prototype.hasOwnProperty;function isFunction(obj){return typeof obj==="function"||!!(obj&&obj.constructor&&obj.call&&obj.apply)}function mirrorProperties(target,source){for(var prop in source){if(!hasOwn.call(target,prop)){target[prop]=source[prop]}}}var hasES5Support="keys"in Object;module.exports=function wrapMethod(object,property,method){if(!object){throw new TypeError("Should wrap property of object")}if(typeof method!=="function"&&typeof method!=="object"){throw new TypeError("Method wrapper should be a function or a property descriptor")}function checkWrappedMethod(wrappedMethod){var error;if(!isFunction(wrappedMethod)){error=new TypeError("Attempted to wrap "+typeof wrappedMethod+" property "+valueToString(property)+" as function")}else if(wrappedMethod.restore&&wrappedMethod.restore.sinon){error=new TypeError("Attempted to wrap "+valueToString(property)+" which is already wrapped")}else if(wrappedMethod.calledBefore){var verb=wrappedMethod.returns?"stubbed":"spied on";error=new TypeError("Attempted to wrap "+valueToString(property)+" which is already "+verb)}if(error){if(wrappedMethod&&wrappedMethod.stackTrace){error.stack+="\n--------------\n"+wrappedMethod.stackTrace}throw error}}var error,wrappedMethod,i;function simplePropertyAssignment(){wrappedMethod=object[property];checkWrappedMethod(wrappedMethod);object[property]=method;method.displayName=property}var owned=object.hasOwnProperty?object.hasOwnProperty(property):hasOwn.call(object,property);if(hasES5Support){var methodDesc=typeof method==="function"?{value:method}:method;var wrappedMethodDesc=getPropertyDescriptor(object,property);if(!wrappedMethodDesc){error=new TypeError("Attempted to wrap "+typeof wrappedMethod+" property "+property+" as function")}else if(wrappedMethodDesc.restore&&wrappedMethodDesc.restore.sinon){error=new TypeError("Attempted to wrap "+property+" which is already wrapped")}if(error){if(wrappedMethodDesc&&wrappedMethodDesc.stackTrace){error.stack+="\n--------------\n"+wrappedMethodDesc.stackTrace}throw error}var types=Object.keys(methodDesc);for(i=0;i<types.length;i++){wrappedMethod=wrappedMethodDesc[types[i]];checkWrappedMethod(wrappedMethod)}mirrorProperties(methodDesc,wrappedMethodDesc);for(i=0;i<types.length;i++){mirrorProperties(methodDesc[types[i]],wrappedMethodDesc[types[i]])}Object.defineProperty(object,property,methodDesc);if(typeof method==="function"&&object[property]!==method){delete object[property];simplePropertyAssignment()}}else{simplePropertyAssignment()}method.displayName=property;method.stackTrace=new Error("Stack Trace for original").stack;method.restore=function(){if(!owned){try{delete object[property]}catch(e){}}else if(hasES5Support){Object.defineProperty(object,property,wrappedMethodDesc)}if(hasES5Support){var descriptor=getPropertyDescriptor(object,property);if(descriptor&&descriptor.value===method){object[property]=wrappedMethod}}else{if(object[property]===method){object[property]=wrappedMethod}}};method.wrappedMethod=wrappedMethod;method.restore.sinon=true;if(!hasES5Support){mirrorProperties(method,wrappedMethod)}return method}},{"./get-property-descriptor":470,"./value-to-string":475}],478:[function(require,module,exports){"use strict";var llx=require("lolex");exports.useFakeTimers=function(args){var config={};if(typeof args==="undefined"||args===null){config.now=0}else if((typeof args==="number"||args instanceof Date)&&arguments.length===1){config.now=args}else if(args!==null&&typeof args==="object"&&arguments.length===1){var keys=Object.keys(args);for(var i=0;i<keys.length;i++){if(args.hasOwnProperty(keys[i])){config[keys[i]]=args[keys[i]]}}}else{throw new TypeError("useFakeTimers expected epoch or config object. See https://github.com/sinonjs/sinon")}var clock=llx.install(config);clock.restore=clock.uninstall;return clock};exports.clock={create:function(now){return llx.createClock(now)}};exports.timers={setTimeout:setTimeout,clearTimeout:clearTimeout,setImmediate:typeof setImmediate!=="undefined"?setImmediate:undefined,clearImmediate:typeof clearImmediate!=="undefined"?clearImmediate:undefined,setInterval:setInterval,clearInterval:clearInterval,Date:Date}},{lolex:358}],479:[function(require,module,exports){"use strict";module.exports=false},{}],480:[function(require,module,exports){module.exports=Stream;var EE=require("events").EventEmitter;var inherits=require("inherits");inherits(Stream,EE);Stream.Readable=require("readable-stream/readable.js");Stream.Writable=require("readable-stream/writable.js");Stream.Duplex=require("readable-stream/duplex.js");Stream.Transform=require("readable-stream/transform.js");Stream.PassThrough=require("readable-stream/passthrough.js");Stream.Stream=Stream;function Stream(){EE.call(this)}Stream.prototype.pipe=function(dest,options){var source=this;function ondata(chunk){if(dest.writable){if(false===dest.write(chunk)&&source.pause){source.pause()}}}source.on("data",ondata);function ondrain(){if(source.readable&&source.resume){source.resume()}}dest.on("drain",ondrain);if(!dest._isStdio&&(!options||options.end!==false)){source.on("end",onend);source.on("close",onclose)}var didOnEnd=false;function onend(){if(didOnEnd)return;didOnEnd=true;dest.end()}function onclose(){if(didOnEnd)return;didOnEnd=true;if(typeof dest.destroy==="function")dest.destroy()}function onerror(er){cleanup();if(EE.listenerCount(this,"error")===0){throw er}}source.on("error",onerror);dest.on("error",onerror);function cleanup(){source.removeListener("data",ondata);dest.removeListener("drain",ondrain);source.removeListener("end",onend);source.removeListener("close",onclose);source.removeListener("error",onerror);dest.removeListener("error",onerror);source.removeListener("end",cleanup);source.removeListener("close",cleanup);dest.removeListener("close",cleanup)}source.on("end",cleanup);source.on("close",cleanup);dest.on("close",cleanup);dest.emit("pipe",source);return dest}},{events:148,inherits:352,"readable-stream/duplex.js":420,"readable-stream/passthrough.js":429,"readable-stream/readable.js":430,"readable-stream/transform.js":431,"readable-stream/writable.js":432}],481:[function(require,module,exports){"use strict";var Buffer=require("safe-buffer").Buffer;var isEncoding=Buffer.isEncoding||function(encoding){encoding=""+encoding;switch(encoding&&encoding.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return true;default:return false}};function _normalizeEncoding(enc){if(!enc)return"utf8";var retried;while(true){switch(enc){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return enc;default:if(retried)return;enc=(""+enc).toLowerCase();retried=true}}}function normalizeEncoding(enc){var nenc=_normalizeEncoding(enc);if(typeof nenc!=="string"&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error("Unknown encoding: "+enc);return nenc||enc}exports.StringDecoder=StringDecoder;function StringDecoder(encoding){this.encoding=normalizeEncoding(encoding);var nb;switch(this.encoding){case"utf16le":this.text=utf16Text;this.end=utf16End;nb=4;break;case"utf8":this.fillLast=utf8FillLast;nb=4;break;case"base64":this.text=base64Text;this.end=base64End;nb=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastNeed=0;this.lastTotal=0;this.lastChar=Buffer.allocUnsafe(nb)}StringDecoder.prototype.write=function(buf){if(buf.length===0)return"";var r;var i;if(this.lastNeed){r=this.fillLast(buf);if(r===undefined)return"";i=this.lastNeed;this.lastNeed=0}else{i=0}if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);return r||""};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length){buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length};function utf8CheckByte(byte){if(byte<=127)return 0;else if(byte>>5===6)return 2;else if(byte>>4===14)return 3;else if(byte>>3===30)return 4;return-1}function utf8CheckIncomplete(self,buf,i){var j=buf.length-1;if(j<i)return 0;var nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-1;return nb}if(--j<i)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-2;return nb}if(--j<i)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0){if(nb===2)nb=0;else self.lastNeed=nb-3}return nb}return 0}function utf8CheckExtraBytes(self,buf,p){if((buf[0]&192)!==128){self.lastNeed=0;return"�".repeat(p)}if(self.lastNeed>1&&buf.length>1){if((buf[1]&192)!==128){self.lastNeed=1;return"�".repeat(p+1)}if(self.lastNeed>2&&buf.length>2){if((buf[2]&192)!==128){self.lastNeed=2;return"�".repeat(p+2)}}}}function utf8FillLast(buf){var p=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,buf,p);if(r!==undefined)return r;if(this.lastNeed<=buf.length){buf.copy(this.lastChar,p,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length}function utf8Text(buf,i){var total=utf8CheckIncomplete(this,buf,i);if(!this.lastNeed)return buf.toString("utf8",i);this.lastTotal=total;var end=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,0,end);return buf.toString("utf8",i,end)}function utf8End(buf){var r=buf&&buf.length?this.write(buf):"";if(this.lastNeed)return r+"�".repeat(this.lastTotal-this.lastNeed);return r}function utf16Text(buf,i){if((buf.length-i)%2===0){var r=buf.toString("utf16le",i);if(r){var c=r.charCodeAt(r.length-1);if(c>=55296&&c<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];return r.slice(0,-1)}}return r}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString("utf16le",i,buf.length-1)}function utf16End(buf){var r=buf&&buf.length?this.write(buf):"";if(this.lastNeed){var end=this.lastTotal-this.lastNeed;return r+this.lastChar.toString("utf16le",0,end)}return r}function base64Text(buf,i){var n=(buf.length-i)%3;if(n===0)return buf.toString("base64",i);this.lastNeed=3-n;this.lastTotal=3;if(n===1){this.lastChar[0]=buf[buf.length-1]}else{this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1]}return buf.toString("base64",i,buf.length-n)}function base64End(buf){var r=buf&&buf.length?this.write(buf):"";if(this.lastNeed)return r+this.lastChar.toString("base64",0,3-this.lastNeed);return r}function simpleWrite(buf){return buf.toString(this.encoding)}function simpleEnd(buf){return buf&&buf.length?this.write(buf):""}},{"safe-buffer":434}],482:[function(require,module,exports){var encoding=require("./lib/encoding.js");module.exports={TextEncoder:encoding.TextEncoder,TextDecoder:encoding.TextDecoder}},{"./lib/encoding.js":484}],483:[function(require,module,exports){(function(global){"use strict";if(typeof module!=="undefined"&&module.exports){module.exports=global}global["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}})(this||{})},{}],484:[function(require,module,exports){(function(global){"use strict";if(typeof module!=="undefined"&&module.exports&&!global["encoding-indexes"]){global["encoding-indexes"]=require("./encoding-indexes.js")["encoding-indexes"]}function inRange(a,min,max){return min<=a&&a<=max}function includes(array,item){return array.indexOf(item)!==-1}var floor=Math.floor;function ToDictionary(o){if(o===undefined)return{};if(o===Object(o))return o;throw TypeError("Could not convert argument to dictionary")}function stringToCodePoints(string){var s=String(string);var n=s.length;var i=0;var u=[];while(i<n){var c=s.charCodeAt(i);if(c<55296||c>57343){u.push(c)}else if(56320<=c&&c<=57343){u.push(65533)}else if(55296<=c&&c<=56319){if(i===n-1){u.push(65533)}else{var d=s.charCodeAt(i+1);if(56320<=d&&d<=57343){var a=c&1023;var b=d&1023;u.push(65536+(a<<10)+b);i+=1}else{u.push(65533)}}}i+=1}return u}function codePointsToString(code_points){var s="";for(var i=0;i<code_points.length;++i){var cp=code_points[i];if(cp<=65535){s+=String.fromCharCode(cp)}else{cp-=65536;s+=String.fromCharCode((cp>>10)+55296,(cp&1023)+56320)}}return s}function isASCIIByte(a){return 0<=a&&a<=127}var isASCIICodePoint=isASCIIByte;var end_of_stream=-1;function Stream(tokens){this.tokens=[].slice.call(tokens);this.tokens.reverse()}Stream.prototype={endOfStream:function(){return!this.tokens.length},read:function(){if(!this.tokens.length)return end_of_stream;return this.tokens.pop()},prepend:function(token){if(Array.isArray(token)){var tokens=token;while(tokens.length)this.tokens.push(tokens.pop())}else{this.tokens.push(token)}},push:function(token){if(Array.isArray(token)){var tokens=token;while(tokens.length)this.tokens.unshift(tokens.shift())}else{this.tokens.unshift(token)}}};var finished=-1;function decoderError(fatal,opt_code_point){if(fatal)throw TypeError("Decoder error");return opt_code_point||65533}function encoderError(code_point){throw TypeError("The code point "+code_point+" could not be encoded.")}function Decoder(){}Decoder.prototype={handler:function(stream,bite){}};function Encoder(){}Encoder.prototype={handler:function(stream,code_point){}};function getEncoding(label){label=String(label).trim().toLowerCase();if(Object.prototype.hasOwnProperty.call(label_to_encoding,label)){return label_to_encoding[label]}return null}var encodings=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}];var label_to_encoding={};encodings.forEach(function(category){category.encodings.forEach(function(encoding){encoding.labels.forEach(function(label){label_to_encoding[label]=encoding})})});var encoders={};var decoders={};function indexCodePointFor(pointer,index){if(!index)return null;return index[pointer]||null}function indexPointerFor(code_point,index){var pointer=index.indexOf(code_point);return pointer===-1?null:pointer}function index(name){if(!("encoding-indexes"in global)){throw Error("Indexes missing."+" Did you forget to include encoding-indexes.js first?")}return global["encoding-indexes"][name]}function indexGB18030RangesCodePointFor(pointer){if(pointer>39419&&pointer<189e3||pointer>1237575)return null;if(pointer===7457)return 59335;var offset=0;var code_point_offset=0;var idx=index("gb18030-ranges");var i;for(i=0;i<idx.length;++i){var entry=idx[i];if(entry[0]<=pointer){offset=entry[0];code_point_offset=entry[1]}else{break}}return code_point_offset+pointer-offset}function indexGB18030RangesPointerFor(code_point){if(code_point===59335)return 7457;var offset=0;var pointer_offset=0;var idx=index("gb18030-ranges");var i;for(i=0;i<idx.length;++i){var entry=idx[i];if(entry[1]<=code_point){offset=entry[1];pointer_offset=entry[0]}else{break}}return pointer_offset+code_point-offset}function indexShiftJISPointerFor(code_point){shift_jis_index=shift_jis_index||index("jis0208").map(function(code_point,pointer){return inRange(pointer,8272,8835)?null:code_point});var index_=shift_jis_index;return index_.indexOf(code_point)}var shift_jis_index;function indexBig5PointerFor(code_point){big5_index_no_hkscs=big5_index_no_hkscs||index("big5").map(function(code_point,pointer){return pointer<(161-129)*157?null:code_point});var index_=big5_index_no_hkscs;if(code_point===9552||code_point===9566||code_point===9569||code_point===9578||code_point===21313||code_point===21317){return index_.lastIndexOf(code_point)}return indexPointerFor(code_point,index_)}var big5_index_no_hkscs;var DEFAULT_ENCODING="utf-8";function TextDecoder(label,options){if(!(this instanceof TextDecoder))throw TypeError("Called as a function. Did you forget 'new'?");label=label!==undefined?String(label):DEFAULT_ENCODING;options=ToDictionary(options);this._encoding=null;this._decoder=null;this._ignoreBOM=false;this._BOMseen=false;this._error_mode="replacement";this._do_not_flush=false;var encoding=getEncoding(label);if(encoding===null||encoding.name==="replacement")throw RangeError("Unknown encoding: "+label);if(!decoders[encoding.name]){throw Error("Decoder not present."+" Did you forget to include encoding-indexes.js first?")}var dec=this;dec._encoding=encoding;if(Boolean(options["fatal"]))dec._error_mode="fatal";if(Boolean(options["ignoreBOM"]))dec._ignoreBOM=true;if(!Object.defineProperty){this.encoding=dec._encoding.name.toLowerCase();this.fatal=dec._error_mode==="fatal";this.ignoreBOM=dec._ignoreBOM}return dec}if(Object.defineProperty){Object.defineProperty(TextDecoder.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}});Object.defineProperty(TextDecoder.prototype,"fatal",{get:function(){return this._error_mode==="fatal"}});Object.defineProperty(TextDecoder.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})}TextDecoder.prototype.decode=function decode(input,options){var bytes;if(typeof input==="object"&&input instanceof ArrayBuffer){bytes=new Uint8Array(input)}else if(typeof input==="object"&&"buffer"in input&&input.buffer instanceof ArrayBuffer){bytes=new Uint8Array(input.buffer,input.byteOffset,input.byteLength)}else{bytes=new Uint8Array(0)}options=ToDictionary(options);if(!this._do_not_flush){this._decoder=decoders[this._encoding.name]({fatal:this._error_mode==="fatal"});this._BOMseen=false}this._do_not_flush=Boolean(options["stream"]);var input_stream=new Stream(bytes);var output=[];var result;while(true){var token=input_stream.read();if(token===end_of_stream)break;result=this._decoder.handler(input_stream,token);if(result===finished)break;if(result!==null){if(Array.isArray(result))output.push.apply(output,result);else output.push(result)}}if(!this._do_not_flush){do{result=this._decoder.handler(input_stream,input_stream.read());if(result===finished)break;if(result===null)continue;if(Array.isArray(result))output.push.apply(output,result);else output.push(result)}while(!input_stream.endOfStream());this._decoder=null}function serializeStream(stream){if(includes(["UTF-8","UTF-16LE","UTF-16BE"],this._encoding.name)&&!this._ignoreBOM&&!this._BOMseen){if(stream.length>0&&stream[0]===65279){this._BOMseen=true;stream.shift()}else if(stream.length>0){this._BOMseen=true}else{}}return codePointsToString(stream)}return serializeStream.call(this,output)};function TextEncoder(label,options){if(!(this instanceof TextEncoder))throw TypeError("Called as a function. Did you forget 'new'?");options=ToDictionary(options);this._encoding=null;this._encoder=null;this._do_not_flush=false;this._fatal=Boolean(options["fatal"])?"fatal":"replacement";var enc=this;if(Boolean(options["NONSTANDARD_allowLegacyEncoding"])){label=label!==undefined?String(label):DEFAULT_ENCODING;var encoding=getEncoding(label);if(encoding===null||encoding.name==="replacement")throw RangeError("Unknown encoding: "+label);if(!encoders[encoding.name]){throw Error("Encoder not present."+" Did you forget to include encoding-indexes.js first?")}enc._encoding=encoding}else{enc._encoding=getEncoding("utf-8");if(label!==undefined&&"console"in global){console.warn("TextEncoder constructor called with encoding label, "+"which is ignored.")}}if(!Object.defineProperty)this.encoding=enc._encoding.name.toLowerCase();return enc}if(Object.defineProperty){Object.defineProperty(TextEncoder.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}})}TextEncoder.prototype.encode=function encode(opt_string,options){opt_string=opt_string===undefined?"":String(opt_string);options=ToDictionary(options);if(!this._do_not_flush)this._encoder=encoders[this._encoding.name]({fatal:this._fatal==="fatal"});this._do_not_flush=Boolean(options["stream"]);var input=new Stream(stringToCodePoints(opt_string));var output=[];var result;while(true){var token=input.read();if(token===end_of_stream)break;result=this._encoder.handler(input,token);if(result===finished)break;if(Array.isArray(result))output.push.apply(output,result);else output.push(result)}if(!this._do_not_flush){while(true){result=this._encoder.handler(input,input.read());if(result===finished)break;if(Array.isArray(result))output.push.apply(output,result);else output.push(result)}this._encoder=null}return new Uint8Array(output)};function UTF8Decoder(options){var fatal=options.fatal;var utf8_code_point=0,utf8_bytes_seen=0,utf8_bytes_needed=0,utf8_lower_boundary=128,utf8_upper_boundary=191;this.handler=function(stream,bite){if(bite===end_of_stream&&utf8_bytes_needed!==0){utf8_bytes_needed=0;return decoderError(fatal)}if(bite===end_of_stream)return finished;if(utf8_bytes_needed===0){if(inRange(bite,0,127)){return bite}else if(inRange(bite,194,223)){utf8_bytes_needed=1;utf8_code_point=bite&31}else if(inRange(bite,224,239)){if(bite===224)utf8_lower_boundary=160;if(bite===237)utf8_upper_boundary=159;utf8_bytes_needed=2;utf8_code_point=bite&15}else if(inRange(bite,240,244)){if(bite===240)utf8_lower_boundary=144;if(bite===244)utf8_upper_boundary=143;utf8_bytes_needed=3;utf8_code_point=bite&7}else{return decoderError(fatal)}return null}if(!inRange(bite,utf8_lower_boundary,utf8_upper_boundary)){utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0;utf8_lower_boundary=128;utf8_upper_boundary=191;stream.prepend(bite);return decoderError(fatal)}utf8_lower_boundary=128;utf8_upper_boundary=191;utf8_code_point=utf8_code_point<<6|bite&63;utf8_bytes_seen+=1;if(utf8_bytes_seen!==utf8_bytes_needed)return null;var code_point=utf8_code_point;utf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0;return code_point}}function UTF8Encoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;var count,offset;if(inRange(code_point,128,2047)){count=1;offset=192}else if(inRange(code_point,2048,65535)){count=2;offset=224}else if(inRange(code_point,65536,1114111)){count=3;offset=240}var bytes=[(code_point>>6*count)+offset];while(count>0){var temp=code_point>>6*(count-1);bytes.push(128|temp&63);count-=1}return bytes}}encoders["UTF-8"]=function(options){return new UTF8Encoder(options)};decoders["UTF-8"]=function(options){return new UTF8Decoder(options)};function SingleByteDecoder(index,options){var fatal=options.fatal;this.handler=function(stream,bite){if(bite===end_of_stream)return finished;if(isASCIIByte(bite))return bite;var code_point=index[bite-128];if(code_point===null)return decoderError(fatal);return code_point}}function SingleByteEncoder(index,options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;var pointer=indexPointerFor(code_point,index);if(pointer===null)encoderError(code_point);return pointer+128}}(function(){if(!("encoding-indexes"in global))return;encodings.forEach(function(category){if(category.heading!=="Legacy single-byte encodings")return;category.encodings.forEach(function(encoding){var name=encoding.name;var idx=index(name.toLowerCase());decoders[name]=function(options){return new SingleByteDecoder(idx,options)};encoders[name]=function(options){return new SingleByteEncoder(idx,options)}})})})();decoders["GBK"]=function(options){return new GB18030Decoder(options)};encoders["GBK"]=function(options){return new GB18030Encoder(options,true)};function GB18030Decoder(options){var fatal=options.fatal;var gb18030_first=0,gb18030_second=0,gb18030_third=0;this.handler=function(stream,bite){if(bite===end_of_stream&&gb18030_first===0&&gb18030_second===0&&gb18030_third===0){return finished}if(bite===end_of_stream&&(gb18030_first!==0||gb18030_second!==0||gb18030_third!==0)){gb18030_first=0;gb18030_second=0;gb18030_third=0;decoderError(fatal)}var code_point;if(gb18030_third!==0){code_point=null;if(inRange(bite,48,57)){code_point=indexGB18030RangesCodePointFor((((gb18030_first-129)*10+gb18030_second-48)*126+gb18030_third-129)*10+bite-48)}var buffer=[gb18030_second,gb18030_third,bite];gb18030_first=0;gb18030_second=0;gb18030_third=0;if(code_point===null){stream.prepend(buffer);return decoderError(fatal)}return code_point}if(gb18030_second!==0){if(inRange(bite,129,254)){gb18030_third=bite;return null}stream.prepend([gb18030_second,bite]);gb18030_first=0;gb18030_second=0;return decoderError(fatal)}if(gb18030_first!==0){if(inRange(bite,48,57)){gb18030_second=bite;return null}var lead=gb18030_first;var pointer=null;gb18030_first=0;var offset=bite<127?64:65;if(inRange(bite,64,126)||inRange(bite,128,254))pointer=(lead-129)*190+(bite-offset);code_point=pointer===null?null:indexCodePointFor(pointer,index("gb18030"));if(code_point===null&&isASCIIByte(bite))stream.prepend(bite);if(code_point===null)return decoderError(fatal);return code_point}if(isASCIIByte(bite))return bite;if(bite===128)return 8364;if(inRange(bite,129,254)){gb18030_first=bite;return null}return decoderError(fatal)}}function GB18030Encoder(options,gbk_flag){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;if(code_point===58853)return encoderError(code_point);if(gbk_flag&&code_point===8364)return 128;var pointer=indexPointerFor(code_point,index("gb18030"));if(pointer!==null){var lead=floor(pointer/190)+129;var trail=pointer%190;var offset=trail<63?64:65;return[lead,trail+offset]}if(gbk_flag)return encoderError(code_point);pointer=indexGB18030RangesPointerFor(code_point);var byte1=floor(pointer/10/126/10);pointer=pointer-byte1*10*126*10;var byte2=floor(pointer/10/126);pointer=pointer-byte2*10*126;var byte3=floor(pointer/10);var byte4=pointer-byte3*10;return[byte1+129,byte2+48,byte3+129,byte4+48]}}encoders["gb18030"]=function(options){return new GB18030Encoder(options)};decoders["gb18030"]=function(options){return new GB18030Decoder(options)};function Big5Decoder(options){var fatal=options.fatal;var Big5_lead=0;this.handler=function(stream,bite){if(bite===end_of_stream&&Big5_lead!==0){Big5_lead=0;return decoderError(fatal)}if(bite===end_of_stream&&Big5_lead===0)return finished;if(Big5_lead!==0){var lead=Big5_lead;var pointer=null;Big5_lead=0;var offset=bite<127?64:98;if(inRange(bite,64,126)||inRange(bite,161,254))pointer=(lead-129)*157+(bite-offset);switch(pointer){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var code_point=pointer===null?null:indexCodePointFor(pointer,index("big5"));if(code_point===null&&isASCIIByte(bite))stream.prepend(bite);if(code_point===null)return decoderError(fatal);return code_point}if(isASCIIByte(bite))return bite;if(inRange(bite,129,254)){Big5_lead=bite;return null}return decoderError(fatal)}}function Big5Encoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;var pointer=indexBig5PointerFor(code_point);if(pointer===null)return encoderError(code_point);var lead=floor(pointer/157)+129;if(lead<161)return encoderError(code_point);var trail=pointer%157;var offset=trail<63?64:98;return[lead,trail+offset]}}encoders["Big5"]=function(options){return new Big5Encoder(options)};decoders["Big5"]=function(options){return new Big5Decoder(options)};function EUCJPDecoder(options){var fatal=options.fatal;var eucjp_jis0212_flag=false,eucjp_lead=0;this.handler=function(stream,bite){if(bite===end_of_stream&&eucjp_lead!==0){eucjp_lead=0;return decoderError(fatal)}if(bite===end_of_stream&&eucjp_lead===0)return finished;if(eucjp_lead===142&&inRange(bite,161,223)){eucjp_lead=0;return 65377-161+bite}if(eucjp_lead===143&&inRange(bite,161,254)){eucjp_jis0212_flag=true;eucjp_lead=bite;return null}if(eucjp_lead!==0){var lead=eucjp_lead;eucjp_lead=0;var code_point=null;if(inRange(lead,161,254)&&inRange(bite,161,254)){code_point=indexCodePointFor((lead-161)*94+(bite-161),index(!eucjp_jis0212_flag?"jis0208":"jis0212"))}eucjp_jis0212_flag=false;if(!inRange(bite,161,254))stream.prepend(bite);if(code_point===null)return decoderError(fatal);return code_point}if(isASCIIByte(bite))return bite;if(bite===142||bite===143||inRange(bite,161,254)){eucjp_lead=bite;return null}return decoderError(fatal)}}function EUCJPEncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;if(code_point===165)return 92;if(code_point===8254)return 126;if(inRange(code_point,65377,65439))return[142,code_point-65377+161];if(code_point===8722)code_point=65293;var pointer=indexPointerFor(code_point,index("jis0208"));if(pointer===null)return encoderError(code_point);var lead=floor(pointer/94)+161;var trail=pointer%94+161;return[lead,trail]}}encoders["EUC-JP"]=function(options){return new EUCJPEncoder(options)};decoders["EUC-JP"]=function(options){return new EUCJPDecoder(options)};function ISO2022JPDecoder(options){var fatal=options.fatal;var states={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6};var iso2022jp_decoder_state=states.ASCII,iso2022jp_decoder_output_state=states.ASCII,iso2022jp_lead=0,iso2022jp_output_flag=false;this.handler=function(stream,bite){switch(iso2022jp_decoder_state){default:case states.ASCII:if(bite===27){iso2022jp_decoder_state=states.EscapeStart;return null}if(inRange(bite,0,127)&&bite!==14&&bite!==15&&bite!==27){iso2022jp_output_flag=false;return bite}if(bite===end_of_stream){return finished}iso2022jp_output_flag=false;return decoderError(fatal);case states.Roman:if(bite===27){iso2022jp_decoder_state=states.EscapeStart;return null}if(bite===92){iso2022jp_output_flag=false;return 165}if(bite===126){iso2022jp_output_flag=false;return 8254}if(inRange(bite,0,127)&&bite!==14&&bite!==15&&bite!==27&&bite!==92&&bite!==126){iso2022jp_output_flag=false;return bite}if(bite===end_of_stream){return finished}iso2022jp_output_flag=false;return decoderError(fatal);case states.Katakana:if(bite===27){iso2022jp_decoder_state=states.EscapeStart;return null}if(inRange(bite,33,95)){iso2022jp_output_flag=false;return 65377-33+bite}if(bite===end_of_stream){return finished}iso2022jp_output_flag=false;return decoderError(fatal);case states.LeadByte:if(bite===27){iso2022jp_decoder_state=states.EscapeStart;return null}if(inRange(bite,33,126)){iso2022jp_output_flag=false;iso2022jp_lead=bite;iso2022jp_decoder_state=states.TrailByte;return null}if(bite===end_of_stream){return finished}iso2022jp_output_flag=false;return decoderError(fatal);case states.TrailByte:if(bite===27){iso2022jp_decoder_state=states.EscapeStart;return decoderError(fatal)}if(inRange(bite,33,126)){iso2022jp_decoder_state=states.LeadByte;var pointer=(iso2022jp_lead-33)*94+bite-33;var code_point=indexCodePointFor(pointer,index("jis0208"));if(code_point===null)return decoderError(fatal);return code_point}if(bite===end_of_stream){iso2022jp_decoder_state=states.LeadByte;stream.prepend(bite);return decoderError(fatal)}iso2022jp_decoder_state=states.LeadByte;return decoderError(fatal);case states.EscapeStart:if(bite===36||bite===40){iso2022jp_lead=bite;iso2022jp_decoder_state=states.Escape;return null}stream.prepend(bite);iso2022jp_output_flag=false;iso2022jp_decoder_state=iso2022jp_decoder_output_state;return decoderError(fatal);case states.Escape:var lead=iso2022jp_lead;iso2022jp_lead=0;var state=null;if(lead===40&&bite===66)state=states.ASCII;if(lead===40&&bite===74)state=states.Roman;if(lead===40&&bite===73)state=states.Katakana;if(lead===36&&(bite===64||bite===66))state=states.LeadByte;if(state!==null){iso2022jp_decoder_state=iso2022jp_decoder_state=state;var output_flag=iso2022jp_output_flag;iso2022jp_output_flag=true;return!output_flag?null:decoderError(fatal)}stream.prepend([lead,bite]);iso2022jp_output_flag=false;iso2022jp_decoder_state=iso2022jp_decoder_output_state;return decoderError(fatal)}}}function ISO2022JPEncoder(options){var fatal=options.fatal;var states={ASCII:0,Roman:1,jis0208:2};var iso2022jp_state=states.ASCII;this.handler=function(stream,code_point){if(code_point===end_of_stream&&iso2022jp_state!==states.ASCII){stream.prepend(code_point);iso2022jp_state=states.ASCII;return[27,40,66]}if(code_point===end_of_stream&&iso2022jp_state===states.ASCII)return finished;if((iso2022jp_state===states.ASCII||iso2022jp_state===states.Roman)&&(code_point===14||code_point===15||code_point===27)){return encoderError(65533)}if(iso2022jp_state===states.ASCII&&isASCIICodePoint(code_point))return code_point;if(iso2022jp_state===states.Roman&&(isASCIICodePoint(code_point)&&code_point!==92&&code_point!==126||(code_point==165||code_point==8254))){if(isASCIICodePoint(code_point))return code_point;if(code_point===165)return 92;if(code_point===8254)return 126}if(isASCIICodePoint(code_point)&&iso2022jp_state!==states.ASCII){stream.prepend(code_point);iso2022jp_state=states.ASCII;return[27,40,66]}if((code_point===165||code_point===8254)&&iso2022jp_state!==states.Roman){stream.prepend(code_point);iso2022jp_state=states.Roman;return[27,40,74]}if(code_point===8722)code_point=65293;var pointer=indexPointerFor(code_point,index("jis0208"));if(pointer===null)return encoderError(code_point);if(iso2022jp_state!==states.jis0208){stream.prepend(code_point);iso2022jp_state=states.jis0208;return[27,36,66]}var lead=floor(pointer/94)+33;var trail=pointer%94+33;return[lead,trail]}}encoders["ISO-2022-JP"]=function(options){return new ISO2022JPEncoder(options)};decoders["ISO-2022-JP"]=function(options){return new ISO2022JPDecoder(options)};function ShiftJISDecoder(options){var fatal=options.fatal;var Shift_JIS_lead=0;this.handler=function(stream,bite){if(bite===end_of_stream&&Shift_JIS_lead!==0){Shift_JIS_lead=0;return decoderError(fatal)}if(bite===end_of_stream&&Shift_JIS_lead===0)return finished;if(Shift_JIS_lead!==0){var lead=Shift_JIS_lead;var pointer=null;Shift_JIS_lead=0;var offset=bite<127?64:65;var lead_offset=lead<160?129:193;if(inRange(bite,64,126)||inRange(bite,128,252))pointer=(lead-lead_offset)*188+bite-offset;if(inRange(pointer,8836,10715))return 57344-8836+pointer;var code_point=pointer===null?null:indexCodePointFor(pointer,index("jis0208"));if(code_point===null&&isASCIIByte(bite))stream.prepend(bite);if(code_point===null)return decoderError(fatal);return code_point}if(isASCIIByte(bite)||bite===128)return bite;if(inRange(bite,161,223))return 65377-161+bite;if(inRange(bite,129,159)||inRange(bite,224,252)){Shift_JIS_lead=bite;return null}return decoderError(fatal)}}function ShiftJISEncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point)||code_point===128)return code_point;if(code_point===165)return 92;if(code_point===8254)return 126;if(inRange(code_point,65377,65439))return code_point-65377+161;if(code_point===8722)code_point=65293;var pointer=indexShiftJISPointerFor(code_point);if(pointer===null)return encoderError(code_point);var lead=floor(pointer/188);var lead_offset=lead<31?129:193;var trail=pointer%188;var offset=trail<63?64:65;return[lead+lead_offset,trail+offset]}}encoders["Shift_JIS"]=function(options){return new ShiftJISEncoder(options)};decoders["Shift_JIS"]=function(options){return new ShiftJISDecoder(options)};function EUCKRDecoder(options){var fatal=options.fatal;var euckr_lead=0;this.handler=function(stream,bite){if(bite===end_of_stream&&euckr_lead!==0){euckr_lead=0;return decoderError(fatal)}if(bite===end_of_stream&&euckr_lead===0)return finished;if(euckr_lead!==0){var lead=euckr_lead;var pointer=null;euckr_lead=0;if(inRange(bite,65,254))pointer=(lead-129)*190+(bite-65);var code_point=pointer===null?null:indexCodePointFor(pointer,index("euc-kr"));if(pointer===null&&isASCIIByte(bite))stream.prepend(bite);if(code_point===null)return decoderError(fatal);return code_point}if(isASCIIByte(bite))return bite;if(inRange(bite,129,254)){euckr_lead=bite;return null}return decoderError(fatal)}}function EUCKREncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;var pointer=indexPointerFor(code_point,index("euc-kr"));if(pointer===null)return encoderError(code_point);var lead=floor(pointer/190)+129;var trail=pointer%190+65;return[lead,trail]}}encoders["EUC-KR"]=function(options){return new EUCKREncoder(options)};decoders["EUC-KR"]=function(options){return new EUCKRDecoder(options)};function convertCodeUnitToBytes(code_unit,utf16be){var byte1=code_unit>>8;var byte2=code_unit&255;if(utf16be)return[byte1,byte2];return[byte2,byte1]}function UTF16Decoder(utf16_be,options){var fatal=options.fatal;var utf16_lead_byte=null,utf16_lead_surrogate=null;this.handler=function(stream,bite){if(bite===end_of_stream&&(utf16_lead_byte!==null||utf16_lead_surrogate!==null)){return decoderError(fatal)}if(bite===end_of_stream&&utf16_lead_byte===null&&utf16_lead_surrogate===null){return finished}if(utf16_lead_byte===null){utf16_lead_byte=bite;return null}var code_unit;if(utf16_be){code_unit=(utf16_lead_byte<<8)+bite}else{code_unit=(bite<<8)+utf16_lead_byte}utf16_lead_byte=null;if(utf16_lead_surrogate!==null){var lead_surrogate=utf16_lead_surrogate;utf16_lead_surrogate=null;if(inRange(code_unit,56320,57343)){return 65536+(lead_surrogate-55296)*1024+(code_unit-56320)}stream.prepend(convertCodeUnitToBytes(code_unit,utf16_be));return decoderError(fatal)}if(inRange(code_unit,55296,56319)){utf16_lead_surrogate=code_unit;return null}if(inRange(code_unit,56320,57343))return decoderError(fatal);return code_unit}}function UTF16Encoder(utf16_be,options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(inRange(code_point,0,65535))return convertCodeUnitToBytes(code_point,utf16_be);var lead=convertCodeUnitToBytes((code_point-65536>>10)+55296,utf16_be);var trail=convertCodeUnitToBytes((code_point-65536&1023)+56320,utf16_be);return lead.concat(trail)}}encoders["UTF-16BE"]=function(options){return new UTF16Encoder(true,options)};decoders["UTF-16BE"]=function(options){return new UTF16Decoder(true,options)};encoders["UTF-16LE"]=function(options){return new UTF16Encoder(false,options)};decoders["UTF-16LE"]=function(options){return new UTF16Decoder(false,options)};function XUserDefinedDecoder(options){var fatal=options.fatal;this.handler=function(stream,bite){if(bite===end_of_stream)return finished;if(isASCIIByte(bite))return bite;return 63360+bite-128}}function XUserDefinedEncoder(options){var fatal=options.fatal;this.handler=function(stream,code_point){if(code_point===end_of_stream)return finished;if(isASCIICodePoint(code_point))return code_point;if(inRange(code_point,63360,63487))return code_point-63360+128;return encoderError(code_point)}}encoders["x-user-defined"]=function(options){return new XUserDefinedEncoder(options)};decoders["x-user-defined"]=function(options){return new XUserDefinedDecoder(options)};if(!global["TextEncoder"])global["TextEncoder"]=TextEncoder;if(!global["TextDecoder"])global["TextDecoder"]=TextDecoder;if(typeof module!=="undefined"&&module.exports){module.exports={TextEncoder:global["TextEncoder"],TextDecoder:global["TextDecoder"],EncodingIndexes:global["encoding-indexes"]}}})(this||{})},{"./encoding-indexes.js":483}],485:[function(require,module,exports){(function(nacl){"use strict";var gf=function(init){var i,r=new Float64Array(16);if(init)for(i=0;i<init.length;i++)r[i]=init[i];return r};var randombytes=function(){throw new Error("no PRNG")};var _0=new Uint8Array(16);var _9=new Uint8Array(32);_9[0]=9;var gf0=gf(),gf1=gf([1]),_121665=gf([56129,1]),D=gf([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),D2=gf([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),X=gf([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),Y=gf([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),I=gf([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function ts64(x,i,h,l){x[i]=h>>24&255;x[i+1]=h>>16&255;x[i+2]=h>>8&255;x[i+3]=h&255;x[i+4]=l>>24&255;x[i+5]=l>>16&255;x[i+6]=l>>8&255;x[i+7]=l&255}function vn(x,xi,y,yi,n){var i,d=0;for(i=0;i<n;i++)d|=x[xi+i]^y[yi+i];return(1&d-1>>>8)-1}function crypto_verify_16(x,xi,y,yi){return vn(x,xi,y,yi,16)}function crypto_verify_32(x,xi,y,yi){return vn(x,xi,y,yi,32)}function core_salsa20(o,p,k,c){var j0=c[0]&255|(c[1]&255)<<8|(c[2]&255)<<16|(c[3]&255)<<24,j1=k[0]&255|(k[1]&255)<<8|(k[2]&255)<<16|(k[3]&255)<<24,j2=k[4]&255|(k[5]&255)<<8|(k[6]&255)<<16|(k[7]&255)<<24,j3=k[8]&255|(k[9]&255)<<8|(k[10]&255)<<16|(k[11]&255)<<24,j4=k[12]&255|(k[13]&255)<<8|(k[14]&255)<<16|(k[15]&255)<<24,j5=c[4]&255|(c[5]&255)<<8|(c[6]&255)<<16|(c[7]&255)<<24,j6=p[0]&255|(p[1]&255)<<8|(p[2]&255)<<16|(p[3]&255)<<24,j7=p[4]&255|(p[5]&255)<<8|(p[6]&255)<<16|(p[7]&255)<<24,j8=p[8]&255|(p[9]&255)<<8|(p[10]&255)<<16|(p[11]&255)<<24,j9=p[12]&255|(p[13]&255)<<8|(p[14]&255)<<16|(p[15]&255)<<24,j10=c[8]&255|(c[9]&255)<<8|(c[10]&255)<<16|(c[11]&255)<<24,j11=k[16]&255|(k[17]&255)<<8|(k[18]&255)<<16|(k[19]&255)<<24,j12=k[20]&255|(k[21]&255)<<8|(k[22]&255)<<16|(k[23]&255)<<24,j13=k[24]&255|(k[25]&255)<<8|(k[26]&255)<<16|(k[27]&255)<<24,j14=k[28]&255|(k[29]&255)<<8|(k[30]&255)<<16|(k[31]&255)<<24,j15=c[12]&255|(c[13]&255)<<8|(c[14]&255)<<16|(c[15]&255)<<24;var x0=j0,x1=j1,x2=j2,x3=j3,x4=j4,x5=j5,x6=j6,x7=j7,x8=j8,x9=j9,x10=j10,x11=j11,x12=j12,x13=j13,x14=j14,x15=j15,u;for(var i=0;i<20;i+=2){u=x0+x12|0;x4^=u<<7|u>>>32-7;u=x4+x0|0;x8^=u<<9|u>>>32-9;u=x8+x4|0;x12^=u<<13|u>>>32-13;u=x12+x8|0;x0^=u<<18|u>>>32-18;u=x5+x1|0;x9^=u<<7|u>>>32-7;u=x9+x5|0;x13^=u<<9|u>>>32-9;u=x13+x9|0;x1^=u<<13|u>>>32-13;u=x1+x13|0;x5^=u<<18|u>>>32-18;u=x10+x6|0;x14^=u<<7|u>>>32-7;u=x14+x10|0;x2^=u<<9|u>>>32-9;u=x2+x14|0;x6^=u<<13|u>>>32-13;u=x6+x2|0;x10^=u<<18|u>>>32-18;u=x15+x11|0;x3^=u<<7|u>>>32-7;u=x3+x15|0;x7^=u<<9|u>>>32-9;u=x7+x3|0;x11^=u<<13|u>>>32-13;u=x11+x7|0;x15^=u<<18|u>>>32-18;u=x0+x3|0;x1^=u<<7|u>>>32-7;u=x1+x0|0;x2^=u<<9|u>>>32-9;u=x2+x1|0;x3^=u<<13|u>>>32-13;u=x3+x2|0;x0^=u<<18|u>>>32-18;u=x5+x4|0;x6^=u<<7|u>>>32-7;u=x6+x5|0;x7^=u<<9|u>>>32-9;u=x7+x6|0;x4^=u<<13|u>>>32-13;u=x4+x7|0;x5^=u<<18|u>>>32-18;u=x10+x9|0;x11^=u<<7|u>>>32-7;u=x11+x10|0;x8^=u<<9|u>>>32-9;u=x8+x11|0;x9^=u<<13|u>>>32-13;u=x9+x8|0;x10^=u<<18|u>>>32-18;u=x15+x14|0;x12^=u<<7|u>>>32-7;u=x12+x15|0;x13^=u<<9|u>>>32-9;u=x13+x12|0;x14^=u<<13|u>>>32-13;u=x14+x13|0;x15^=u<<18|u>>>32-18}x0=x0+j0|0;x1=x1+j1|0;x2=x2+j2|0;x3=x3+j3|0;x4=x4+j4|0;x5=x5+j5|0;x6=x6+j6|0;x7=x7+j7|0;x8=x8+j8|0;x9=x9+j9|0;x10=x10+j10|0;x11=x11+j11|0;x12=x12+j12|0;x13=x13+j13|0;x14=x14+j14|0;x15=x15+j15|0;o[0]=x0>>>0&255;o[1]=x0>>>8&255;o[2]=x0>>>16&255;o[3]=x0>>>24&255;o[4]=x1>>>0&255;o[5]=x1>>>8&255;o[6]=x1>>>16&255;o[7]=x1>>>24&255;o[8]=x2>>>0&255;o[9]=x2>>>8&255;o[10]=x2>>>16&255;o[11]=x2>>>24&255;o[12]=x3>>>0&255;o[13]=x3>>>8&255;o[14]=x3>>>16&255;o[15]=x3>>>24&255;o[16]=x4>>>0&255;o[17]=x4>>>8&255;o[18]=x4>>>16&255;o[19]=x4>>>24&255;o[20]=x5>>>0&255;o[21]=x5>>>8&255;o[22]=x5>>>16&255;o[23]=x5>>>24&255;o[24]=x6>>>0&255;o[25]=x6>>>8&255;o[26]=x6>>>16&255;o[27]=x6>>>24&255;o[28]=x7>>>0&255;o[29]=x7>>>8&255;o[30]=x7>>>16&255;o[31]=x7>>>24&255;o[32]=x8>>>0&255;o[33]=x8>>>8&255;o[34]=x8>>>16&255;o[35]=x8>>>24&255;o[36]=x9>>>0&255;o[37]=x9>>>8&255;o[38]=x9>>>16&255;o[39]=x9>>>24&255;o[40]=x10>>>0&255;o[41]=x10>>>8&255;o[42]=x10>>>16&255;o[43]=x10>>>24&255;o[44]=x11>>>0&255;o[45]=x11>>>8&255;o[46]=x11>>>16&255;o[47]=x11>>>24&255;o[48]=x12>>>0&255;o[49]=x12>>>8&255;o[50]=x12>>>16&255;o[51]=x12>>>24&255;o[52]=x13>>>0&255;o[53]=x13>>>8&255;o[54]=x13>>>16&255;o[55]=x13>>>24&255;o[56]=x14>>>0&255;o[57]=x14>>>8&255;o[58]=x14>>>16&255;o[59]=x14>>>24&255;o[60]=x15>>>0&255;o[61]=x15>>>8&255;o[62]=x15>>>16&255;o[63]=x15>>>24&255}function core_hsalsa20(o,p,k,c){var j0=c[0]&255|(c[1]&255)<<8|(c[2]&255)<<16|(c[3]&255)<<24,j1=k[0]&255|(k[1]&255)<<8|(k[2]&255)<<16|(k[3]&255)<<24,j2=k[4]&255|(k[5]&255)<<8|(k[6]&255)<<16|(k[7]&255)<<24,j3=k[8]&255|(k[9]&255)<<8|(k[10]&255)<<16|(k[11]&255)<<24,j4=k[12]&255|(k[13]&255)<<8|(k[14]&255)<<16|(k[15]&255)<<24,j5=c[4]&255|(c[5]&255)<<8|(c[6]&255)<<16|(c[7]&255)<<24,j6=p[0]&255|(p[1]&255)<<8|(p[2]&255)<<16|(p[3]&255)<<24,j7=p[4]&255|(p[5]&255)<<8|(p[6]&255)<<16|(p[7]&255)<<24,j8=p[8]&255|(p[9]&255)<<8|(p[10]&255)<<16|(p[11]&255)<<24,j9=p[12]&255|(p[13]&255)<<8|(p[14]&255)<<16|(p[15]&255)<<24,j10=c[8]&255|(c[9]&255)<<8|(c[10]&255)<<16|(c[11]&255)<<24,j11=k[16]&255|(k[17]&255)<<8|(k[18]&255)<<16|(k[19]&255)<<24,j12=k[20]&255|(k[21]&255)<<8|(k[22]&255)<<16|(k[23]&255)<<24,j13=k[24]&255|(k[25]&255)<<8|(k[26]&255)<<16|(k[27]&255)<<24,j14=k[28]&255|(k[29]&255)<<8|(k[30]&255)<<16|(k[31]&255)<<24,j15=c[12]&255|(c[13]&255)<<8|(c[14]&255)<<16|(c[15]&255)<<24;var x0=j0,x1=j1,x2=j2,x3=j3,x4=j4,x5=j5,x6=j6,x7=j7,x8=j8,x9=j9,x10=j10,x11=j11,x12=j12,x13=j13,x14=j14,x15=j15,u;for(var i=0;i<20;i+=2){u=x0+x12|0;x4^=u<<7|u>>>32-7;u=x4+x0|0;x8^=u<<9|u>>>32-9;u=x8+x4|0;x12^=u<<13|u>>>32-13;u=x12+x8|0;x0^=u<<18|u>>>32-18;u=x5+x1|0;x9^=u<<7|u>>>32-7;u=x9+x5|0;x13^=u<<9|u>>>32-9;u=x13+x9|0;x1^=u<<13|u>>>32-13;u=x1+x13|0;x5^=u<<18|u>>>32-18;u=x10+x6|0;x14^=u<<7|u>>>32-7;u=x14+x10|0;x2^=u<<9|u>>>32-9;u=x2+x14|0;x6^=u<<13|u>>>32-13;u=x6+x2|0;x10^=u<<18|u>>>32-18;u=x15+x11|0;x3^=u<<7|u>>>32-7;u=x3+x15|0;x7^=u<<9|u>>>32-9;u=x7+x3|0;x11^=u<<13|u>>>32-13;u=x11+x7|0;x15^=u<<18|u>>>32-18;u=x0+x3|0;x1^=u<<7|u>>>32-7;u=x1+x0|0;x2^=u<<9|u>>>32-9;u=x2+x1|0;x3^=u<<13|u>>>32-13;u=x3+x2|0;x0^=u<<18|u>>>32-18;u=x5+x4|0;x6^=u<<7|u>>>32-7;u=x6+x5|0;x7^=u<<9|u>>>32-9;u=x7+x6|0;x4^=u<<13|u>>>32-13;u=x4+x7|0;x5^=u<<18|u>>>32-18;u=x10+x9|0;x11^=u<<7|u>>>32-7;u=x11+x10|0;x8^=u<<9|u>>>32-9;u=x8+x11|0;x9^=u<<13|u>>>32-13;u=x9+x8|0;x10^=u<<18|u>>>32-18;u=x15+x14|0;x12^=u<<7|u>>>32-7;u=x12+x15|0;x13^=u<<9|u>>>32-9;u=x13+x12|0;x14^=u<<13|u>>>32-13;u=x14+x13|0;x15^=u<<18|u>>>32-18}o[0]=x0>>>0&255;o[1]=x0>>>8&255;o[2]=x0>>>16&255;o[3]=x0>>>24&255;o[4]=x5>>>0&255;o[5]=x5>>>8&255;o[6]=x5>>>16&255;o[7]=x5>>>24&255;o[8]=x10>>>0&255;o[9]=x10>>>8&255;o[10]=x10>>>16&255;o[11]=x10>>>24&255;o[12]=x15>>>0&255;o[13]=x15>>>8&255;o[14]=x15>>>16&255;o[15]=x15>>>24&255;o[16]=x6>>>0&255;o[17]=x6>>>8&255;o[18]=x6>>>16&255;o[19]=x6>>>24&255;o[20]=x7>>>0&255;o[21]=x7>>>8&255;o[22]=x7>>>16&255;o[23]=x7>>>24&255;o[24]=x8>>>0&255;o[25]=x8>>>8&255;o[26]=x8>>>16&255;o[27]=x8>>>24&255;o[28]=x9>>>0&255;o[29]=x9>>>8&255;o[30]=x9>>>16&255;o[31]=x9>>>24&255}function crypto_core_salsa20(out,inp,k,c){core_salsa20(out,inp,k,c)}function crypto_core_hsalsa20(out,inp,k,c){core_hsalsa20(out,inp,k,c)}var sigma=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k){var z=new Uint8Array(16),x=new Uint8Array(64);var u,i;for(i=0;i<16;i++)z[i]=0;for(i=0;i<8;i++)z[i]=n[i];while(b>=64){crypto_core_salsa20(x,z,k,sigma);for(i=0;i<64;i++)c[cpos+i]=m[mpos+i]^x[i];u=1;for(i=8;i<16;i++){u=u+(z[i]&255)|0;z[i]=u&255;u>>>=8}b-=64;cpos+=64;mpos+=64}if(b>0){crypto_core_salsa20(x,z,k,sigma);for(i=0;i<b;i++)c[cpos+i]=m[mpos+i]^x[i]}return 0}function crypto_stream_salsa20(c,cpos,b,n,k){var z=new Uint8Array(16),x=new Uint8Array(64);var u,i;for(i=0;i<16;i++)z[i]=0;for(i=0;i<8;i++)z[i]=n[i];while(b>=64){crypto_core_salsa20(x,z,k,sigma);for(i=0;i<64;i++)c[cpos+i]=x[i];u=1;for(i=8;i<16;i++){u=u+(z[i]&255)|0;z[i]=u&255;u>>>=8}b-=64;cpos+=64}if(b>0){crypto_core_salsa20(x,z,k,sigma);for(i=0;i<b;i++)c[cpos+i]=x[i]}return 0}function crypto_stream(c,cpos,d,n,k){var s=new Uint8Array(32);crypto_core_hsalsa20(s,n,k,sigma);var sn=new Uint8Array(8);for(var i=0;i<8;i++)sn[i]=n[i+16];return crypto_stream_salsa20(c,cpos,d,sn,s)}function crypto_stream_xor(c,cpos,m,mpos,d,n,k){var s=new Uint8Array(32);crypto_core_hsalsa20(s,n,k,sigma);var sn=new Uint8Array(8);for(var i=0;i<8;i++)sn[i]=n[i+16];return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s)}var poly1305=function(key){this.buffer=new Uint8Array(16);this.r=new Uint16Array(10);this.h=new Uint16Array(10);this.pad=new Uint16Array(8);this.leftover=0;this.fin=0;var t0,t1,t2,t3,t4,t5,t6,t7;t0=key[0]&255|(key[1]&255)<<8;this.r[0]=t0&8191;t1=key[2]&255|(key[3]&255)<<8;this.r[1]=(t0>>>13|t1<<3)&8191;t2=key[4]&255|(key[5]&255)<<8;this.r[2]=(t1>>>10|t2<<6)&7939;t3=key[6]&255|(key[7]&255)<<8;this.r[3]=(t2>>>7|t3<<9)&8191;t4=key[8]&255|(key[9]&255)<<8;this.r[4]=(t3>>>4|t4<<12)&255;this.r[5]=t4>>>1&8190;t5=key[10]&255|(key[11]&255)<<8;this.r[6]=(t4>>>14|t5<<2)&8191;t6=key[12]&255|(key[13]&255)<<8;this.r[7]=(t5>>>11|t6<<5)&8065;t7=key[14]&255|(key[15]&255)<<8;this.r[8]=(t6>>>8|t7<<8)&8191;this.r[9]=t7>>>5&127;this.pad[0]=key[16]&255|(key[17]&255)<<8;this.pad[1]=key[18]&255|(key[19]&255)<<8;this.pad[2]=key[20]&255|(key[21]&255)<<8;this.pad[3]=key[22]&255|(key[23]&255)<<8;this.pad[4]=key[24]&255|(key[25]&255)<<8;this.pad[5]=key[26]&255|(key[27]&255)<<8;this.pad[6]=key[28]&255|(key[29]&255)<<8;this.pad[7]=key[30]&255|(key[31]&255)<<8};poly1305.prototype.blocks=function(m,mpos,bytes){var hibit=this.fin?0:1<<11;var t0,t1,t2,t3,t4,t5,t6,t7,c;var d0,d1,d2,d3,d4,d5,d6,d7,d8,d9;var h0=this.h[0],h1=this.h[1],h2=this.h[2],h3=this.h[3],h4=this.h[4],h5=this.h[5],h6=this.h[6],h7=this.h[7],h8=this.h[8],h9=this.h[9];var r0=this.r[0],r1=this.r[1],r2=this.r[2],r3=this.r[3],r4=this.r[4],r5=this.r[5],r6=this.r[6],r7=this.r[7],r8=this.r[8],r9=this.r[9];while(bytes>=16){t0=m[mpos+0]&255|(m[mpos+1]&255)<<8;h0+=t0&8191;t1=m[mpos+2]&255|(m[mpos+3]&255)<<8;h1+=(t0>>>13|t1<<3)&8191;t2=m[mpos+4]&255|(m[mpos+5]&255)<<8;h2+=(t1>>>10|t2<<6)&8191;t3=m[mpos+6]&255|(m[mpos+7]&255)<<8;h3+=(t2>>>7|t3<<9)&8191;t4=m[mpos+8]&255|(m[mpos+9]&255)<<8;h4+=(t3>>>4|t4<<12)&8191;h5+=t4>>>1&8191;t5=m[mpos+10]&255|(m[mpos+11]&255)<<8;h6+=(t4>>>14|t5<<2)&8191;t6=m[mpos+12]&255|(m[mpos+13]&255)<<8;h7+=(t5>>>11|t6<<5)&8191;t7=m[mpos+14]&255|(m[mpos+15]&255)<<8;h8+=(t6>>>8|t7<<8)&8191;h9+=t7>>>5|hibit;c=0;d0=c;d0+=h0*r0;d0+=h1*(5*r9);d0+=h2*(5*r8);d0+=h3*(5*r7);d0+=h4*(5*r6);c=d0>>>13;d0&=8191;d0+=h5*(5*r5);d0+=h6*(5*r4);d0+=h7*(5*r3);d0+=h8*(5*r2);d0+=h9*(5*r1);c+=d0>>>13;d0&=8191;d1=c;d1+=h0*r1;d1+=h1*r0;d1+=h2*(5*r9);d1+=h3*(5*r8);d1+=h4*(5*r7);c=d1>>>13;d1&=8191;d1+=h5*(5*r6);d1+=h6*(5*r5);d1+=h7*(5*r4);d1+=h8*(5*r3);d1+=h9*(5*r2);c+=d1>>>13;d1&=8191;d2=c;d2+=h0*r2;d2+=h1*r1;d2+=h2*r0;d2+=h3*(5*r9);d2+=h4*(5*r8);c=d2>>>13;d2&=8191;d2+=h5*(5*r7);d2+=h6*(5*r6);d2+=h7*(5*r5);d2+=h8*(5*r4);d2+=h9*(5*r3);c+=d2>>>13;d2&=8191;d3=c;d3+=h0*r3;d3+=h1*r2;d3+=h2*r1;d3+=h3*r0;d3+=h4*(5*r9);c=d3>>>13;d3&=8191;d3+=h5*(5*r8);d3+=h6*(5*r7);d3+=h7*(5*r6);d3+=h8*(5*r5);d3+=h9*(5*r4);c+=d3>>>13;d3&=8191;d4=c;d4+=h0*r4;d4+=h1*r3;d4+=h2*r2;d4+=h3*r1;d4+=h4*r0;c=d4>>>13;d4&=8191;d4+=h5*(5*r9);d4+=h6*(5*r8);d4+=h7*(5*r7);d4+=h8*(5*r6);d4+=h9*(5*r5);c+=d4>>>13;d4&=8191;d5=c;d5+=h0*r5;d5+=h1*r4;d5+=h2*r3;d5+=h3*r2;d5+=h4*r1;c=d5>>>13;d5&=8191;d5+=h5*r0;d5+=h6*(5*r9);d5+=h7*(5*r8);d5+=h8*(5*r7);d5+=h9*(5*r6);c+=d5>>>13;d5&=8191;d6=c;d6+=h0*r6;d6+=h1*r5;d6+=h2*r4;d6+=h3*r3;d6+=h4*r2;c=d6>>>13;d6&=8191;d6+=h5*r1;d6+=h6*r0;d6+=h7*(5*r9);d6+=h8*(5*r8);d6+=h9*(5*r7);c+=d6>>>13;d6&=8191;d7=c;d7+=h0*r7;d7+=h1*r6;d7+=h2*r5;d7+=h3*r4;d7+=h4*r3;c=d7>>>13;d7&=8191;d7+=h5*r2;d7+=h6*r1;d7+=h7*r0;d7+=h8*(5*r9);d7+=h9*(5*r8);c+=d7>>>13;d7&=8191;d8=c;d8+=h0*r8;d8+=h1*r7;d8+=h2*r6;d8+=h3*r5;d8+=h4*r4;c=d8>>>13;d8&=8191;d8+=h5*r3;d8+=h6*r2;d8+=h7*r1;d8+=h8*r0;d8+=h9*(5*r9);c+=d8>>>13;d8&=8191;d9=c;d9+=h0*r9;d9+=h1*r8;d9+=h2*r7;d9+=h3*r6;d9+=h4*r5;c=d9>>>13;d9&=8191;d9+=h5*r4;d9+=h6*r3;d9+=h7*r2;d9+=h8*r1;d9+=h9*r0;c+=d9>>>13;d9&=8191;c=(c<<2)+c|0;c=c+d0|0;d0=c&8191;c=c>>>13;d1+=c;h0=d0;h1=d1;h2=d2;h3=d3;h4=d4;h5=d5;h6=d6;h7=d7;h8=d8;h9=d9;mpos+=16;bytes-=16}this.h[0]=h0;this.h[1]=h1;this.h[2]=h2;this.h[3]=h3;this.h[4]=h4;this.h[5]=h5;this.h[6]=h6;this.h[7]=h7;this.h[8]=h8;this.h[9]=h9};poly1305.prototype.finish=function(mac,macpos){var g=new Uint16Array(10);var c,mask,f,i;if(this.leftover){i=this.leftover;this.buffer[i++]=1;for(;i<16;i++)this.buffer[i]=0;this.fin=1;this.blocks(this.buffer,0,16)}c=this.h[1]>>>13;this.h[1]&=8191;for(i=2;i<10;i++){this.h[i]+=c;c=this.h[i]>>>13;this.h[i]&=8191}this.h[0]+=c*5;c=this.h[0]>>>13;this.h[0]&=8191;this.h[1]+=c;c=this.h[1]>>>13;this.h[1]&=8191;this.h[2]+=c;g[0]=this.h[0]+5;c=g[0]>>>13;g[0]&=8191;for(i=1;i<10;i++){g[i]=this.h[i]+c;c=g[i]>>>13;g[i]&=8191}g[9]-=1<<13;mask=(c^1)-1;for(i=0;i<10;i++)g[i]&=mask;mask=~mask;for(i=0;i<10;i++)this.h[i]=this.h[i]&mask|g[i];this.h[0]=(this.h[0]|this.h[1]<<13)&65535;this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535;this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535;this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535;this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535;this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535;this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535;this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535;f=this.h[0]+this.pad[0];this.h[0]=f&65535;for(i=1;i<8;i++){f=(this.h[i]+this.pad[i]|0)+(f>>>16)|0;this.h[i]=f&65535}mac[macpos+0]=this.h[0]>>>0&255;mac[macpos+1]=this.h[0]>>>8&255;mac[macpos+2]=this.h[1]>>>0&255;mac[macpos+3]=this.h[1]>>>8&255;mac[macpos+4]=this.h[2]>>>0&255;mac[macpos+5]=this.h[2]>>>8&255;mac[macpos+6]=this.h[3]>>>0&255;mac[macpos+7]=this.h[3]>>>8&255;mac[macpos+8]=this.h[4]>>>0&255;mac[macpos+9]=this.h[4]>>>8&255;mac[macpos+10]=this.h[5]>>>0&255;mac[macpos+11]=this.h[5]>>>8&255;mac[macpos+12]=this.h[6]>>>0&255;mac[macpos+13]=this.h[6]>>>8&255;mac[macpos+14]=this.h[7]>>>0&255;mac[macpos+15]=this.h[7]>>>8&255};poly1305.prototype.update=function(m,mpos,bytes){var i,want;if(this.leftover){want=16-this.leftover;if(want>bytes)want=bytes;for(i=0;i<want;i++)this.buffer[this.leftover+i]=m[mpos+i];bytes-=want;mpos+=want;this.leftover+=want;if(this.leftover<16)return;this.blocks(this.buffer,0,16);this.leftover=0}if(bytes>=16){want=bytes-bytes%16;this.blocks(m,mpos,want);mpos+=want;bytes-=want}if(bytes){for(i=0;i<bytes;i++)this.buffer[this.leftover+i]=m[mpos+i];this.leftover+=bytes}};function crypto_onetimeauth(out,outpos,m,mpos,n,k){var s=new poly1305(k);s.update(m,mpos,n);s.finish(out,outpos);return 0}function crypto_onetimeauth_verify(h,hpos,m,mpos,n,k){var x=new Uint8Array(16);crypto_onetimeauth(x,0,m,mpos,n,k);return crypto_verify_16(h,hpos,x,0)}function crypto_secretbox(c,m,d,n,k){var i;if(d<32)return-1;crypto_stream_xor(c,0,m,0,d,n,k);crypto_onetimeauth(c,16,c,32,d-32,c);for(i=0;i<16;i++)c[i]=0;return 0}function crypto_secretbox_open(m,c,d,n,k){var i;var x=new Uint8Array(32);if(d<32)return-1;crypto_stream(x,0,32,n,k);if(crypto_onetimeauth_verify(c,16,c,32,d-32,x)!==0)return-1;crypto_stream_xor(m,0,c,0,d,n,k);for(i=0;i<32;i++)m[i]=0;return 0}function set25519(r,a){var i;for(i=0;i<16;i++)r[i]=a[i]|0}function car25519(o){var i,v,c=1;for(i=0;i<16;i++){v=o[i]+c+65535;c=Math.floor(v/65536);o[i]=v-c*65536}o[0]+=c-1+37*(c-1)}function sel25519(p,q,b){var t,c=~(b-1);for(var i=0;i<16;i++){t=c&(p[i]^q[i]);p[i]^=t;q[i]^=t}}function pack25519(o,n){var i,j,b;var m=gf(),t=gf();for(i=0;i<16;i++)t[i]=n[i];car25519(t);car25519(t);car25519(t);for(j=0;j<2;j++){m[0]=t[0]-65517;for(i=1;i<15;i++){m[i]=t[i]-65535-(m[i-1]>>16&1);m[i-1]&=65535}m[15]=t[15]-32767-(m[14]>>16&1);b=m[15]>>16&1;m[14]&=65535;sel25519(t,m,1-b)}for(i=0;i<16;i++){o[2*i]=t[i]&255;o[2*i+1]=t[i]>>8}}function neq25519(a,b){var c=new Uint8Array(32),d=new Uint8Array(32);pack25519(c,a);pack25519(d,b);return crypto_verify_32(c,0,d,0)}function par25519(a){var d=new Uint8Array(32);pack25519(d,a);return d[0]&1}function unpack25519(o,n){var i;for(i=0;i<16;i++)o[i]=n[2*i]+(n[2*i+1]<<8);o[15]&=32767}function A(o,a,b){for(var i=0;i<16;i++)o[i]=a[i]+b[i]}function Z(o,a,b){for(var i=0;i<16;i++)o[i]=a[i]-b[i]}function M(o,a,b){var v,c,t0=0,t1=0,t2=0,t3=0,t4=0,t5=0,t6=0,t7=0,t8=0,t9=0,t10=0,t11=0,t12=0,t13=0,t14=0,t15=0,t16=0,t17=0,t18=0,t19=0,t20=0,t21=0,t22=0,t23=0,t24=0,t25=0,t26=0,t27=0,t28=0,t29=0,t30=0,b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5],b6=b[6],b7=b[7],b8=b[8],b9=b[9],b10=b[10],b11=b[11],b12=b[12],b13=b[13],b14=b[14],b15=b[15];v=a[0];t0+=v*b0;t1+=v*b1;t2+=v*b2;t3+=v*b3;t4+=v*b4;t5+=v*b5;t6+=v*b6;t7+=v*b7;t8+=v*b8;t9+=v*b9;t10+=v*b10;t11+=v*b11;t12+=v*b12;t13+=v*b13;t14+=v*b14;t15+=v*b15;v=a[1];t1+=v*b0;t2+=v*b1;t3+=v*b2;t4+=v*b3;t5+=v*b4;t6+=v*b5;t7+=v*b6;t8+=v*b7;t9+=v*b8;t10+=v*b9;t11+=v*b10;t12+=v*b11;t13+=v*b12;t14+=v*b13;t15+=v*b14;t16+=v*b15;v=a[2];t2+=v*b0;t3+=v*b1;t4+=v*b2;t5+=v*b3;t6+=v*b4;t7+=v*b5;t8+=v*b6;t9+=v*b7;t10+=v*b8;t11+=v*b9;t12+=v*b10;t13+=v*b11;t14+=v*b12;t15+=v*b13;t16+=v*b14;t17+=v*b15;v=a[3];t3+=v*b0;t4+=v*b1;t5+=v*b2;t6+=v*b3;t7+=v*b4;t8+=v*b5;t9+=v*b6;t10+=v*b7;t11+=v*b8;t12+=v*b9;t13+=v*b10;t14+=v*b11;t15+=v*b12;t16+=v*b13;t17+=v*b14;t18+=v*b15;v=a[4];t4+=v*b0;t5+=v*b1;t6+=v*b2;t7+=v*b3;t8+=v*b4;t9+=v*b5;t10+=v*b6;t11+=v*b7;t12+=v*b8;t13+=v*b9;t14+=v*b10;t15+=v*b11;t16+=v*b12;t17+=v*b13;t18+=v*b14;t19+=v*b15;v=a[5];t5+=v*b0;t6+=v*b1;t7+=v*b2;t8+=v*b3;t9+=v*b4;t10+=v*b5;t11+=v*b6;t12+=v*b7;t13+=v*b8;t14+=v*b9;t15+=v*b10;t16+=v*b11;t17+=v*b12;t18+=v*b13;t19+=v*b14;t20+=v*b15;v=a[6];t6+=v*b0;t7+=v*b1;t8+=v*b2;t9+=v*b3;t10+=v*b4;t11+=v*b5;t12+=v*b6;t13+=v*b7;t14+=v*b8;t15+=v*b9;t16+=v*b10;t17+=v*b11;t18+=v*b12;t19+=v*b13;t20+=v*b14;t21+=v*b15;v=a[7];t7+=v*b0;t8+=v*b1;t9+=v*b2;t10+=v*b3;t11+=v*b4;t12+=v*b5;t13+=v*b6;t14+=v*b7;t15+=v*b8;t16+=v*b9;t17+=v*b10;t18+=v*b11;t19+=v*b12;t20+=v*b13;t21+=v*b14;t22+=v*b15;v=a[8];t8+=v*b0;t9+=v*b1;t10+=v*b2;t11+=v*b3;t12+=v*b4;t13+=v*b5;t14+=v*b6;t15+=v*b7;t16+=v*b8;t17+=v*b9;t18+=v*b10;t19+=v*b11;t20+=v*b12;t21+=v*b13;t22+=v*b14;t23+=v*b15;v=a[9];t9+=v*b0;t10+=v*b1;t11+=v*b2;t12+=v*b3;t13+=v*b4;t14+=v*b5;t15+=v*b6;t16+=v*b7;t17+=v*b8;t18+=v*b9;t19+=v*b10;t20+=v*b11;t21+=v*b12;t22+=v*b13;t23+=v*b14;t24+=v*b15;v=a[10];t10+=v*b0;t11+=v*b1;t12+=v*b2;t13+=v*b3;t14+=v*b4;t15+=v*b5;t16+=v*b6;t17+=v*b7;t18+=v*b8;t19+=v*b9;t20+=v*b10;t21+=v*b11;t22+=v*b12;t23+=v*b13;t24+=v*b14;t25+=v*b15;v=a[11];t11+=v*b0;t12+=v*b1;t13+=v*b2;t14+=v*b3;t15+=v*b4;t16+=v*b5;t17+=v*b6;t18+=v*b7;t19+=v*b8;t20+=v*b9;t21+=v*b10;t22+=v*b11;t23+=v*b12;t24+=v*b13;t25+=v*b14;t26+=v*b15;v=a[12];t12+=v*b0;t13+=v*b1;t14+=v*b2;t15+=v*b3;t16+=v*b4;t17+=v*b5;t18+=v*b6;t19+=v*b7;t20+=v*b8;t21+=v*b9;t22+=v*b10;t23+=v*b11;t24+=v*b12;t25+=v*b13;t26+=v*b14;t27+=v*b15;v=a[13];t13+=v*b0;t14+=v*b1;t15+=v*b2;t16+=v*b3;t17+=v*b4;t18+=v*b5;t19+=v*b6;t20+=v*b7;t21+=v*b8;t22+=v*b9;t23+=v*b10;t24+=v*b11;t25+=v*b12;t26+=v*b13;t27+=v*b14;t28+=v*b15;v=a[14];t14+=v*b0;t15+=v*b1;t16+=v*b2;t17+=v*b3;t18+=v*b4;t19+=v*b5;t20+=v*b6;t21+=v*b7;t22+=v*b8;t23+=v*b9;t24+=v*b10;t25+=v*b11;t26+=v*b12;t27+=v*b13;t28+=v*b14;t29+=v*b15;v=a[15];t15+=v*b0;t16+=v*b1;t17+=v*b2;t18+=v*b3;t19+=v*b4;t20+=v*b5;t21+=v*b6;t22+=v*b7;t23+=v*b8;t24+=v*b9;t25+=v*b10;t26+=v*b11;t27+=v*b12;t28+=v*b13;t29+=v*b14;t30+=v*b15;t0+=38*t16;t1+=38*t17;t2+=38*t18;t3+=38*t19;t4+=38*t20;t5+=38*t21;t6+=38*t22;t7+=38*t23;t8+=38*t24;t9+=38*t25;t10+=38*t26;t11+=38*t27;t12+=38*t28;t13+=38*t29;t14+=38*t30;c=1;v=t0+c+65535;c=Math.floor(v/65536);t0=v-c*65536;v=t1+c+65535;c=Math.floor(v/65536);t1=v-c*65536;v=t2+c+65535;c=Math.floor(v/65536);t2=v-c*65536;v=t3+c+65535;c=Math.floor(v/65536);t3=v-c*65536;v=t4+c+65535;c=Math.floor(v/65536);t4=v-c*65536;v=t5+c+65535;c=Math.floor(v/65536);t5=v-c*65536;v=t6+c+65535;c=Math.floor(v/65536);t6=v-c*65536;v=t7+c+65535;c=Math.floor(v/65536);t7=v-c*65536;v=t8+c+65535;c=Math.floor(v/65536);t8=v-c*65536;v=t9+c+65535;c=Math.floor(v/65536);t9=v-c*65536;v=t10+c+65535;c=Math.floor(v/65536);t10=v-c*65536;v=t11+c+65535;c=Math.floor(v/65536);t11=v-c*65536;v=t12+c+65535;c=Math.floor(v/65536);t12=v-c*65536;v=t13+c+65535;c=Math.floor(v/65536);t13=v-c*65536;v=t14+c+65535;c=Math.floor(v/65536);t14=v-c*65536;v=t15+c+65535;c=Math.floor(v/65536);t15=v-c*65536;t0+=c-1+37*(c-1);c=1;v=t0+c+65535;c=Math.floor(v/65536);t0=v-c*65536;v=t1+c+65535;c=Math.floor(v/65536);t1=v-c*65536;v=t2+c+65535;c=Math.floor(v/65536);t2=v-c*65536;v=t3+c+65535;c=Math.floor(v/65536);t3=v-c*65536;v=t4+c+65535;c=Math.floor(v/65536);t4=v-c*65536;v=t5+c+65535;c=Math.floor(v/65536);t5=v-c*65536;v=t6+c+65535;c=Math.floor(v/65536);t6=v-c*65536;v=t7+c+65535;c=Math.floor(v/65536);t7=v-c*65536;v=t8+c+65535;c=Math.floor(v/65536);t8=v-c*65536;v=t9+c+65535;c=Math.floor(v/65536);t9=v-c*65536;v=t10+c+65535;c=Math.floor(v/65536);t10=v-c*65536;v=t11+c+65535;c=Math.floor(v/65536);t11=v-c*65536;v=t12+c+65535;c=Math.floor(v/65536);t12=v-c*65536;v=t13+c+65535;c=Math.floor(v/65536);t13=v-c*65536;v=t14+c+65535;c=Math.floor(v/65536);t14=v-c*65536;v=t15+c+65535;c=Math.floor(v/65536);t15=v-c*65536;t0+=c-1+37*(c-1);o[0]=t0;o[1]=t1;o[2]=t2;o[3]=t3;o[4]=t4;o[5]=t5;o[6]=t6;o[7]=t7;o[8]=t8;o[9]=t9;o[10]=t10;o[11]=t11;o[12]=t12;o[13]=t13;o[14]=t14;o[15]=t15}function S(o,a){M(o,a,a)}function inv25519(o,i){var c=gf();var a;for(a=0;a<16;a++)c[a]=i[a];for(a=253;a>=0;a--){S(c,c);if(a!==2&&a!==4)M(c,c,i)}for(a=0;a<16;a++)o[a]=c[a]}function pow2523(o,i){var c=gf();var a;for(a=0;a<16;a++)c[a]=i[a];for(a=250;a>=0;a--){S(c,c);if(a!==1)M(c,c,i)}for(a=0;a<16;a++)o[a]=c[a]}function crypto_scalarmult(q,n,p){var z=new Uint8Array(32);var x=new Float64Array(80),r,i;var a=gf(),b=gf(),c=gf(),d=gf(),e=gf(),f=gf();for(i=0;i<31;i++)z[i]=n[i];z[31]=n[31]&127|64;z[0]&=248;unpack25519(x,p);for(i=0;i<16;i++){b[i]=x[i];d[i]=a[i]=c[i]=0}a[0]=d[0]=1;for(i=254;i>=0;--i){r=z[i>>>3]>>>(i&7)&1;sel25519(a,b,r);sel25519(c,d,r);A(e,a,c);Z(a,a,c);A(c,b,d);Z(b,b,d);S(d,e);S(f,a);M(a,c,a);M(c,b,e);A(e,a,c);Z(a,a,c);S(b,a);Z(c,d,f);M(a,c,_121665);A(a,a,d);M(c,c,a);M(a,d,f);M(d,b,x);S(b,e);sel25519(a,b,r);sel25519(c,d,r)}for(i=0;i<16;i++){x[i+16]=a[i];x[i+32]=c[i];x[i+48]=b[i];x[i+64]=d[i]}var x32=x.subarray(32);var x16=x.subarray(16);inv25519(x32,x32);M(x16,x16,x32);pack25519(q,x16);return 0}function crypto_scalarmult_base(q,n){return crypto_scalarmult(q,n,_9)}function crypto_box_keypair(y,x){randombytes(x,32);return crypto_scalarmult_base(y,x)}function crypto_box_beforenm(k,y,x){var s=new Uint8Array(32);crypto_scalarmult(s,x,y);return crypto_core_hsalsa20(k,_0,s,sigma)}var crypto_box_afternm=crypto_secretbox;var crypto_box_open_afternm=crypto_secretbox_open;function crypto_box(c,m,d,n,y,x){var k=new Uint8Array(32);crypto_box_beforenm(k,y,x);return crypto_box_afternm(c,m,d,n,k)}function crypto_box_open(m,c,d,n,y,x){var k=new Uint8Array(32);crypto_box_beforenm(k,y,x);return crypto_box_open_afternm(m,c,d,n,k)}var K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function crypto_hashblocks_hl(hh,hl,m,n){var wh=new Int32Array(16),wl=new Int32Array(16),bh0,bh1,bh2,bh3,bh4,bh5,bh6,bh7,bl0,bl1,bl2,bl3,bl4,bl5,bl6,bl7,th,tl,i,j,h,l,a,b,c,d;var ah0=hh[0],ah1=hh[1],ah2=hh[2],ah3=hh[3],ah4=hh[4],ah5=hh[5],ah6=hh[6],ah7=hh[7],al0=hl[0],al1=hl[1],al2=hl[2],al3=hl[3],al4=hl[4],al5=hl[5],al6=hl[6],al7=hl[7];var pos=0;while(n>=128){for(i=0;i<16;i++){j=8*i+pos;wh[i]=m[j+0]<<24|m[j+1]<<16|m[j+2]<<8|m[j+3];wl[i]=m[j+4]<<24|m[j+5]<<16|m[j+6]<<8|m[j+7]}for(i=0;i<80;i++){bh0=ah0;bh1=ah1;bh2=ah2;bh3=ah3;bh4=ah4;bh5=ah5;bh6=ah6;bh7=ah7;bl0=al0;bl1=al1;bl2=al2;bl3=al3;bl4=al4;bl5=al5;bl6=al6;bl7=al7;h=ah7;l=al7;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=(ah4>>>14|al4<<32-14)^(ah4>>>18|al4<<32-18)^(al4>>>41-32|ah4<<32-(41-32));l=(al4>>>14|ah4<<32-14)^(al4>>>18|ah4<<32-18)^(ah4>>>41-32|al4<<32-(41-32));a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;h=ah4&ah5^~ah4&ah6;l=al4&al5^~al4&al6;a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;h=K[i*2];l=K[i*2+1];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;h=wh[i%16];l=wl[i%16];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;th=c&65535|d<<16;tl=a&65535|b<<16;h=th;l=tl;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=(ah0>>>28|al0<<32-28)^(al0>>>34-32|ah0<<32-(34-32))^(al0>>>39-32|ah0<<32-(39-32));l=(al0>>>28|ah0<<32-28)^(ah0>>>34-32|al0<<32-(34-32))^(ah0>>>39-32|al0<<32-(39-32));a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;h=ah0&ah1^ah0&ah2^ah1&ah2;l=al0&al1^al0&al2^al1&al2;a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;bh7=c&65535|d<<16;bl7=a&65535|b<<16;h=bh3;l=bl3;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=th;l=tl;a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;bh3=c&65535|d<<16;bl3=a&65535|b<<16;ah1=bh0;ah2=bh1;ah3=bh2;ah4=bh3;ah5=bh4;ah6=bh5;ah7=bh6;ah0=bh7;al1=bl0;al2=bl1;al3=bl2;al4=bl3;al5=bl4;al6=bl5;al7=bl6;al0=bl7;if(i%16===15){for(j=0;j<16;j++){h=wh[j];l=wl[j];a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=wh[(j+9)%16];l=wl[(j+9)%16];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;th=wh[(j+1)%16];tl=wl[(j+1)%16];h=(th>>>1|tl<<32-1)^(th>>>8|tl<<32-8)^th>>>7;l=(tl>>>1|th<<32-1)^(tl>>>8|th<<32-8)^(tl>>>7|th<<32-7);a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;th=wh[(j+14)%16];tl=wl[(j+14)%16];h=(th>>>19|tl<<32-19)^(tl>>>61-32|th<<32-(61-32))^th>>>6;l=(tl>>>19|th<<32-19)^(th>>>61-32|tl<<32-(61-32))^(tl>>>6|th<<32-6);a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;wh[j]=c&65535|d<<16;wl[j]=a&65535|b<<16}}}h=ah0;l=al0;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[0];l=hl[0];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[0]=ah0=c&65535|d<<16;hl[0]=al0=a&65535|b<<16;h=ah1;l=al1;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[1];l=hl[1];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[1]=ah1=c&65535|d<<16;hl[1]=al1=a&65535|b<<16;h=ah2;l=al2;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[2];l=hl[2];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[2]=ah2=c&65535|d<<16;hl[2]=al2=a&65535|b<<16;h=ah3;l=al3;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[3];l=hl[3];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[3]=ah3=c&65535|d<<16;hl[3]=al3=a&65535|b<<16;h=ah4;l=al4;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[4];l=hl[4];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[4]=ah4=c&65535|d<<16;hl[4]=al4=a&65535|b<<16;h=ah5;l=al5;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[5];l=hl[5];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[5]=ah5=c&65535|d<<16;hl[5]=al5=a&65535|b<<16;h=ah6;l=al6;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[6];l=hl[6];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[6]=ah6=c&65535|d<<16;hl[6]=al6=a&65535|b<<16;h=ah7;l=al7;a=l&65535;b=l>>>16;c=h&65535;d=h>>>16;h=hh[7];l=hl[7];a+=l&65535;b+=l>>>16;c+=h&65535;d+=h>>>16;b+=a>>>16;c+=b>>>16;d+=c>>>16;hh[7]=ah7=c&65535|d<<16;hl[7]=al7=a&65535|b<<16;pos+=128;n-=128}return n}function crypto_hash(out,m,n){var hh=new Int32Array(8),hl=new Int32Array(8),x=new Uint8Array(256),i,b=n;hh[0]=1779033703;hh[1]=3144134277;hh[2]=1013904242;hh[3]=2773480762;hh[4]=1359893119;hh[5]=2600822924;hh[6]=528734635;hh[7]=1541459225;hl[0]=4089235720;hl[1]=2227873595;hl[2]=4271175723;hl[3]=1595750129;hl[4]=2917565137;hl[5]=725511199;hl[6]=4215389547;hl[7]=327033209;crypto_hashblocks_hl(hh,hl,m,n);n%=128;for(i=0;i<n;i++)x[i]=m[b-n+i];x[n]=128;n=256-128*(n<112?1:0);x[n-9]=0;ts64(x,n-8,b/536870912|0,b<<3);crypto_hashblocks_hl(hh,hl,x,n);for(i=0;i<8;i++)ts64(out,8*i,hh[i],hl[i]);return 0}function add(p,q){var a=gf(),b=gf(),c=gf(),d=gf(),e=gf(),f=gf(),g=gf(),h=gf(),t=gf();Z(a,p[1],p[0]);Z(t,q[1],q[0]);M(a,a,t);A(b,p[0],p[1]);A(t,q[0],q[1]);M(b,b,t);M(c,p[3],q[3]);M(c,c,D2);M(d,p[2],q[2]);A(d,d,d);Z(e,b,a);Z(f,d,c);A(g,d,c);A(h,b,a);M(p[0],e,f);M(p[1],h,g);M(p[2],g,f);M(p[3],e,h)}function cswap(p,q,b){var i;for(i=0;i<4;i++){sel25519(p[i],q[i],b)}}function pack(r,p){var tx=gf(),ty=gf(),zi=gf();inv25519(zi,p[2]);M(tx,p[0],zi);M(ty,p[1],zi);pack25519(r,ty);r[31]^=par25519(tx)<<7}function scalarmult(p,q,s){var b,i;set25519(p[0],gf0);set25519(p[1],gf1);set25519(p[2],gf1);set25519(p[3],gf0);for(i=255;i>=0;--i){b=s[i/8|0]>>(i&7)&1;cswap(p,q,b);add(q,p);add(p,p);cswap(p,q,b)}}function scalarbase(p,s){var q=[gf(),gf(),gf(),gf()];set25519(q[0],X);set25519(q[1],Y);set25519(q[2],gf1);M(q[3],X,Y);scalarmult(p,q,s)}function crypto_sign_keypair(pk,sk,seeded){var d=new Uint8Array(64);var p=[gf(),gf(),gf(),gf()];var i;if(!seeded)randombytes(sk,32);crypto_hash(d,sk,32);d[0]&=248;d[31]&=127;d[31]|=64;scalarbase(p,d);pack(pk,p);for(i=0;i<32;i++)sk[i+32]=pk[i];return 0}var L=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function modL(r,x){var carry,i,j,k;for(i=63;i>=32;--i){carry=0;for(j=i-32,k=i-12;j<k;++j){x[j]+=carry-16*x[i]*L[j-(i-32)];carry=x[j]+128>>8;x[j]-=carry*256}x[j]+=carry;x[i]=0}carry=0;for(j=0;j<32;j++){x[j]+=carry-(x[31]>>4)*L[j];carry=x[j]>>8;x[j]&=255}for(j=0;j<32;j++)x[j]-=carry*L[j];for(i=0;i<32;i++){x[i+1]+=x[i]>>8;r[i]=x[i]&255}}function reduce(r){var x=new Float64Array(64),i;for(i=0;i<64;i++)x[i]=r[i];for(i=0;i<64;i++)r[i]=0;modL(r,x)}function crypto_sign(sm,m,n,sk){var d=new Uint8Array(64),h=new Uint8Array(64),r=new Uint8Array(64);var i,j,x=new Float64Array(64);var p=[gf(),gf(),gf(),gf()];crypto_hash(d,sk,32);d[0]&=248;d[31]&=127;d[31]|=64;var smlen=n+64;for(i=0;i<n;i++)sm[64+i]=m[i];for(i=0;i<32;i++)sm[32+i]=d[32+i];crypto_hash(r,sm.subarray(32),n+32);reduce(r);scalarbase(p,r);pack(sm,p);for(i=32;i<64;i++)sm[i]=sk[i];crypto_hash(h,sm,n+64);reduce(h);for(i=0;i<64;i++)x[i]=0;for(i=0;i<32;i++)x[i]=r[i];for(i=0;i<32;i++){for(j=0;j<32;j++){x[i+j]+=h[i]*d[j]}}modL(sm.subarray(32),x);return smlen}function unpackneg(r,p){var t=gf(),chk=gf(),num=gf(),den=gf(),den2=gf(),den4=gf(),den6=gf();set25519(r[2],gf1);unpack25519(r[1],p);S(num,r[1]);M(den,num,D);Z(num,num,r[2]);A(den,r[2],den);S(den2,den);S(den4,den2);M(den6,den4,den2);M(t,den6,num);M(t,t,den);pow2523(t,t);M(t,t,num);M(t,t,den);M(t,t,den);M(r[0],t,den);S(chk,r[0]);M(chk,chk,den);if(neq25519(chk,num))M(r[0],r[0],I);S(chk,r[0]);M(chk,chk,den);if(neq25519(chk,num))return-1;if(par25519(r[0])===p[31]>>7)Z(r[0],gf0,r[0]);M(r[3],r[0],r[1]);return 0}function crypto_sign_open(m,sm,n,pk){var i,mlen;var t=new Uint8Array(32),h=new Uint8Array(64);var p=[gf(),gf(),gf(),gf()],q=[gf(),gf(),gf(),gf()];mlen=-1;if(n<64)return-1;if(unpackneg(q,pk))return-1;for(i=0;i<n;i++)m[i]=sm[i];for(i=0;i<32;i++)m[i+32]=pk[i];crypto_hash(h,m,n);reduce(h);scalarmult(p,q,h);scalarbase(q,sm.subarray(32));add(p,q);pack(t,p);n-=64;if(crypto_verify_32(sm,0,t,0)){for(i=0;i<n;i++)m[i]=0;return-1}for(i=0;i<n;i++)m[i]=sm[i+64];mlen=n;return mlen}var crypto_secretbox_KEYBYTES=32,crypto_secretbox_NONCEBYTES=24,crypto_secretbox_ZEROBYTES=32,crypto_secretbox_BOXZEROBYTES=16,crypto_scalarmult_BYTES=32,crypto_scalarmult_SCALARBYTES=32,crypto_box_PUBLICKEYBYTES=32,crypto_box_SECRETKEYBYTES=32,crypto_box_BEFORENMBYTES=32,crypto_box_NONCEBYTES=crypto_secretbox_NONCEBYTES,crypto_box_ZEROBYTES=crypto_secretbox_ZEROBYTES,crypto_box_BOXZEROBYTES=crypto_secretbox_BOXZEROBYTES,crypto_sign_BYTES=64,crypto_sign_PUBLICKEYBYTES=32,crypto_sign_SECRETKEYBYTES=64,crypto_sign_SEEDBYTES=32,crypto_hash_BYTES=64;nacl.lowlevel={crypto_core_hsalsa20:crypto_core_hsalsa20,crypto_stream_xor:crypto_stream_xor,crypto_stream:crypto_stream,crypto_stream_salsa20_xor:crypto_stream_salsa20_xor,crypto_stream_salsa20:crypto_stream_salsa20,crypto_onetimeauth:crypto_onetimeauth,crypto_onetimeauth_verify:crypto_onetimeauth_verify,crypto_verify_16:crypto_verify_16,crypto_verify_32:crypto_verify_32,crypto_secretbox:crypto_secretbox,crypto_secretbox_open:crypto_secretbox_open,crypto_scalarmult:crypto_scalarmult,crypto_scalarmult_base:crypto_scalarmult_base,crypto_box_beforenm:crypto_box_beforenm,crypto_box_afternm:crypto_box_afternm,crypto_box:crypto_box,crypto_box_open:crypto_box_open,crypto_box_keypair:crypto_box_keypair,crypto_hash:crypto_hash,crypto_sign:crypto_sign,crypto_sign_keypair:crypto_sign_keypair,crypto_sign_open:crypto_sign_open,crypto_secretbox_KEYBYTES:crypto_secretbox_KEYBYTES,crypto_secretbox_NONCEBYTES:crypto_secretbox_NONCEBYTES,crypto_secretbox_ZEROBYTES:crypto_secretbox_ZEROBYTES,crypto_secretbox_BOXZEROBYTES:crypto_secretbox_BOXZEROBYTES,crypto_scalarmult_BYTES:crypto_scalarmult_BYTES,crypto_scalarmult_SCALARBYTES:crypto_scalarmult_SCALARBYTES,crypto_box_PUBLICKEYBYTES:crypto_box_PUBLICKEYBYTES,crypto_box_SECRETKEYBYTES:crypto_box_SECRETKEYBYTES,crypto_box_BEFORENMBYTES:crypto_box_BEFORENMBYTES,crypto_box_NONCEBYTES:crypto_box_NONCEBYTES,crypto_box_ZEROBYTES:crypto_box_ZEROBYTES,crypto_box_BOXZEROBYTES:crypto_box_BOXZEROBYTES,crypto_sign_BYTES:crypto_sign_BYTES,crypto_sign_PUBLICKEYBYTES:crypto_sign_PUBLICKEYBYTES,crypto_sign_SECRETKEYBYTES:crypto_sign_SECRETKEYBYTES,crypto_sign_SEEDBYTES:crypto_sign_SEEDBYTES,crypto_hash_BYTES:crypto_hash_BYTES};function checkLengths(k,n){if(k.length!==crypto_secretbox_KEYBYTES)throw new Error("bad key size");if(n.length!==crypto_secretbox_NONCEBYTES)throw new Error("bad nonce size")}function checkBoxLengths(pk,sk){if(pk.length!==crypto_box_PUBLICKEYBYTES)throw new Error("bad public key size");if(sk.length!==crypto_box_SECRETKEYBYTES)throw new Error("bad secret key size")}function checkArrayTypes(){var t,i;for(i=0;i<arguments.length;i++){if((t=Object.prototype.toString.call(arguments[i]))!=="[object Uint8Array]")throw new TypeError("unexpected type "+t+", use Uint8Array")}}function cleanup(arr){for(var i=0;i<arr.length;i++)arr[i]=0}if(!nacl.util){nacl.util={};nacl.util.decodeUTF8=nacl.util.encodeUTF8=nacl.util.encodeBase64=nacl.util.decodeBase64=function(){throw new Error("nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js")}}nacl.randomBytes=function(n){var b=new Uint8Array(n);randombytes(b,n);return b};nacl.secretbox=function(msg,nonce,key){checkArrayTypes(msg,nonce,key);checkLengths(key,nonce);var m=new Uint8Array(crypto_secretbox_ZEROBYTES+msg.length);var c=new Uint8Array(m.length);for(var i=0;i<msg.length;i++)m[i+crypto_secretbox_ZEROBYTES]=msg[i];crypto_secretbox(c,m,m.length,nonce,key);return c.subarray(crypto_secretbox_BOXZEROBYTES)};nacl.secretbox.open=function(box,nonce,key){checkArrayTypes(box,nonce,key);checkLengths(key,nonce);var c=new Uint8Array(crypto_secretbox_BOXZEROBYTES+box.length);var m=new Uint8Array(c.length);for(var i=0;i<box.length;i++)c[i+crypto_secretbox_BOXZEROBYTES]=box[i];if(c.length<32)return false;if(crypto_secretbox_open(m,c,c.length,nonce,key)!==0)return false;return m.subarray(crypto_secretbox_ZEROBYTES)};nacl.secretbox.keyLength=crypto_secretbox_KEYBYTES;nacl.secretbox.nonceLength=crypto_secretbox_NONCEBYTES;nacl.secretbox.overheadLength=crypto_secretbox_BOXZEROBYTES;nacl.scalarMult=function(n,p){checkArrayTypes(n,p);if(n.length!==crypto_scalarmult_SCALARBYTES)throw new Error("bad n size");if(p.length!==crypto_scalarmult_BYTES)throw new Error("bad p size");var q=new Uint8Array(crypto_scalarmult_BYTES);crypto_scalarmult(q,n,p);return q};nacl.scalarMult.base=function(n){checkArrayTypes(n);if(n.length!==crypto_scalarmult_SCALARBYTES)throw new Error("bad n size");var q=new Uint8Array(crypto_scalarmult_BYTES);crypto_scalarmult_base(q,n);return q};nacl.scalarMult.scalarLength=crypto_scalarmult_SCALARBYTES;nacl.scalarMult.groupElementLength=crypto_scalarmult_BYTES;nacl.box=function(msg,nonce,publicKey,secretKey){var k=nacl.box.before(publicKey,secretKey);return nacl.secretbox(msg,nonce,k)};nacl.box.before=function(publicKey,secretKey){checkArrayTypes(publicKey,secretKey);checkBoxLengths(publicKey,secretKey);var k=new Uint8Array(crypto_box_BEFORENMBYTES);crypto_box_beforenm(k,publicKey,secretKey);return k};nacl.box.after=nacl.secretbox;nacl.box.open=function(msg,nonce,publicKey,secretKey){var k=nacl.box.before(publicKey,secretKey);return nacl.secretbox.open(msg,nonce,k)};nacl.box.open.after=nacl.secretbox.open;nacl.box.keyPair=function(){var pk=new Uint8Array(crypto_box_PUBLICKEYBYTES);var sk=new Uint8Array(crypto_box_SECRETKEYBYTES);crypto_box_keypair(pk,sk);return{publicKey:pk,secretKey:sk}};nacl.box.keyPair.fromSecretKey=function(secretKey){checkArrayTypes(secretKey);if(secretKey.length!==crypto_box_SECRETKEYBYTES)throw new Error("bad secret key size");var pk=new Uint8Array(crypto_box_PUBLICKEYBYTES);crypto_scalarmult_base(pk,secretKey);return{publicKey:pk,secretKey:new Uint8Array(secretKey)}};nacl.box.publicKeyLength=crypto_box_PUBLICKEYBYTES;nacl.box.secretKeyLength=crypto_box_SECRETKEYBYTES;nacl.box.sharedKeyLength=crypto_box_BEFORENMBYTES;nacl.box.nonceLength=crypto_box_NONCEBYTES;nacl.box.overheadLength=nacl.secretbox.overheadLength;nacl.sign=function(msg,secretKey){checkArrayTypes(msg,secretKey);if(secretKey.length!==crypto_sign_SECRETKEYBYTES)throw new Error("bad secret key size");var signedMsg=new Uint8Array(crypto_sign_BYTES+msg.length);crypto_sign(signedMsg,msg,msg.length,secretKey);return signedMsg};nacl.sign.open=function(signedMsg,publicKey){if(arguments.length!==2)throw new Error("nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?");checkArrayTypes(signedMsg,publicKey);if(publicKey.length!==crypto_sign_PUBLICKEYBYTES)throw new Error("bad public key size");var tmp=new Uint8Array(signedMsg.length);var mlen=crypto_sign_open(tmp,signedMsg,signedMsg.length,publicKey);if(mlen<0)return null;var m=new Uint8Array(mlen);for(var i=0;i<m.length;i++)m[i]=tmp[i];return m};nacl.sign.detached=function(msg,secretKey){var signedMsg=nacl.sign(msg,secretKey);var sig=new Uint8Array(crypto_sign_BYTES);for(var i=0;i<sig.length;i++)sig[i]=signedMsg[i];return sig};nacl.sign.detached.verify=function(msg,sig,publicKey){checkArrayTypes(msg,sig,publicKey);if(sig.length!==crypto_sign_BYTES)throw new Error("bad signature size");if(publicKey.length!==crypto_sign_PUBLICKEYBYTES)throw new Error("bad public key size");var sm=new Uint8Array(crypto_sign_BYTES+msg.length);var m=new Uint8Array(crypto_sign_BYTES+msg.length);var i;for(i=0;i<crypto_sign_BYTES;i++)sm[i]=sig[i];for(i=0;i<msg.length;i++)sm[i+crypto_sign_BYTES]=msg[i];return crypto_sign_open(m,sm,sm.length,publicKey)>=0};nacl.sign.keyPair=function(){var pk=new Uint8Array(crypto_sign_PUBLICKEYBYTES);var sk=new Uint8Array(crypto_sign_SECRETKEYBYTES);crypto_sign_keypair(pk,sk);return{publicKey:pk,secretKey:sk}};nacl.sign.keyPair.fromSecretKey=function(secretKey){checkArrayTypes(secretKey);if(secretKey.length!==crypto_sign_SECRETKEYBYTES)throw new Error("bad secret key size");var pk=new Uint8Array(crypto_sign_PUBLICKEYBYTES);for(var i=0;i<pk.length;i++)pk[i]=secretKey[32+i];return{publicKey:pk,secretKey:new Uint8Array(secretKey)}};nacl.sign.keyPair.fromSeed=function(seed){checkArrayTypes(seed);if(seed.length!==crypto_sign_SEEDBYTES)throw new Error("bad seed size");var pk=new Uint8Array(crypto_sign_PUBLICKEYBYTES);var sk=new Uint8Array(crypto_sign_SECRETKEYBYTES);for(var i=0;i<32;i++)sk[i]=seed[i];crypto_sign_keypair(pk,sk,true);return{publicKey:pk,secretKey:sk}};nacl.sign.publicKeyLength=crypto_sign_PUBLICKEYBYTES;nacl.sign.secretKeyLength=crypto_sign_SECRETKEYBYTES;nacl.sign.seedLength=crypto_sign_SEEDBYTES;nacl.sign.signatureLength=crypto_sign_BYTES;nacl.hash=function(msg){checkArrayTypes(msg);var h=new Uint8Array(crypto_hash_BYTES);crypto_hash(h,msg,msg.length);return h};nacl.hash.hashLength=crypto_hash_BYTES;nacl.verify=function(x,y){checkArrayTypes(x,y);if(x.length===0||y.length===0)return false;if(x.length!==y.length)return false;return vn(x,0,y,0,x.length)===0?true:false};nacl.setPRNG=function(fn){randombytes=fn};(function(){var crypto=typeof self!=="undefined"?self.crypto||self.msCrypto:null;if(crypto&&crypto.getRandomValues){var QUOTA=65536;nacl.setPRNG(function(x,n){var i,v=new Uint8Array(n);for(i=0;i<n;i+=QUOTA){crypto.getRandomValues(v.subarray(i,i+Math.min(n-i,QUOTA)))}for(i=0;i<n;i++)x[i]=v[i];cleanup(v)})}else if(typeof require!=="undefined"){crypto=require("crypto");if(crypto&&crypto.randomBytes){nacl.setPRNG(function(x,n){var i,v=crypto.randomBytes(n);for(i=0;i<n;i++)x[i]=v[i];cleanup(v)})}}})()})(typeof module!=="undefined"&&module.exports?module.exports:self.nacl=self.nacl||{})},{crypto:118}],486:[function(require,module,exports){(function(global){(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.typeDetect=factory()})(this,function(){"use strict";var promiseExists=typeof Promise==="function";var globalObject=typeof self==="object"?self:global;var symbolExists=typeof Symbol!=="undefined";var mapExists=typeof Map!=="undefined";var setExists=typeof Set!=="undefined";var weakMapExists=typeof WeakMap!=="undefined";var weakSetExists=typeof WeakSet!=="undefined";var dataViewExists=typeof DataView!=="undefined";var symbolIteratorExists=symbolExists&&typeof Symbol.iterator!=="undefined";var symbolToStringTagExists=symbolExists&&typeof Symbol.toStringTag!=="undefined";var setEntriesExists=setExists&&typeof Set.prototype.entries==="function";var mapEntriesExists=mapExists&&typeof Map.prototype.entries==="function";var setIteratorPrototype=setEntriesExists&&Object.getPrototypeOf((new Set).entries());var mapIteratorPrototype=mapEntriesExists&&Object.getPrototypeOf((new Map).entries());var arrayIteratorExists=symbolIteratorExists&&typeof Array.prototype[Symbol.iterator]==="function";var arrayIteratorPrototype=arrayIteratorExists&&Object.getPrototypeOf([][Symbol.iterator]());var stringIteratorExists=symbolIteratorExists&&typeof String.prototype[Symbol.iterator]==="function";var stringIteratorPrototype=stringIteratorExists&&Object.getPrototypeOf(""[Symbol.iterator]());var toStringLeftSliceLength=8;var toStringRightSliceLength=-1;function typeDetect(obj){var typeofObj=typeof obj;if(typeofObj!=="object"){return typeofObj}if(obj===null){return"null"}if(obj===globalObject){return"global"}if(Array.isArray(obj)&&(symbolToStringTagExists===false||!(Symbol.toStringTag in obj))){return"Array"}if(typeof window==="object"&&window!==null){if(typeof window.location==="object"&&obj===window.location){return"Location"}if(typeof window.document==="object"&&obj===window.document){return"Document"}if(typeof window.navigator==="object"){if(typeof window.navigator.mimeTypes==="object"&&obj===window.navigator.mimeTypes){return"MimeTypeArray"}if(typeof window.navigator.plugins==="object"&&obj===window.navigator.plugins){return"PluginArray"}}if((typeof window.HTMLElement==="function"||typeof window.HTMLElement==="object")&&obj instanceof window.HTMLElement){if(obj.tagName==="BLOCKQUOTE"){return"HTMLQuoteElement"}if(obj.tagName==="TD"){return"HTMLTableDataCellElement"}if(obj.tagName==="TH"){return"HTMLTableHeaderCellElement"}}}var stringTag=symbolToStringTagExists&&obj[Symbol.toStringTag];if(typeof stringTag==="string"){return stringTag}var objPrototype=Object.getPrototypeOf(obj);if(objPrototype===RegExp.prototype){return"RegExp"}if(objPrototype===Date.prototype){return"Date"}if(promiseExists&&objPrototype===Promise.prototype){return"Promise"}if(setExists&&objPrototype===Set.prototype){return"Set"}if(mapExists&&objPrototype===Map.prototype){return"Map"}if(weakSetExists&&objPrototype===WeakSet.prototype){return"WeakSet"}if(weakMapExists&&objPrototype===WeakMap.prototype){return"WeakMap"}if(dataViewExists&&objPrototype===DataView.prototype){return"DataView"}if(mapExists&&objPrototype===mapIteratorPrototype){return"Map Iterator"}if(setExists&&objPrototype===setIteratorPrototype){return"Set Iterator"}if(arrayIteratorExists&&objPrototype===arrayIteratorPrototype){return"Array Iterator"}if(stringIteratorExists&&objPrototype===stringIteratorPrototype){return"String Iterator"}if(objPrototype===null){return"Object"}return Object.prototype.toString.call(obj).slice(toStringLeftSliceLength,toStringRightSliceLength)}return typeDetect})}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],487:[function(require,module,exports){(function(root){"use strict";var DEFAULT_FEATURE=[null,0,{}];var CACHE_THRESHOLD=10;var SBase=44032,LBase=4352,VBase=4449,TBase=4519,LCount=19,VCount=21,TCount=28;var NCount=VCount*TCount;var SCount=LCount*NCount;var UChar=function(cp,feature){this.codepoint=cp;this.feature=feature};var cache={};var cacheCounter=[];for(var i=0;i<=255;++i){cacheCounter[i]=0}function fromCache(next,cp,needFeature){var ret=cache[cp];if(!ret){ret=next(cp,needFeature);if(!!ret.feature&&++cacheCounter[cp>>8&255]>CACHE_THRESHOLD){cache[cp]=ret}}return ret}function fromData(next,cp,needFeature){var hash=cp&65280;var dunit=UChar.udata[hash]||{};var f=dunit[cp];return f?new UChar(cp,f):new UChar(cp,DEFAULT_FEATURE)}function fromCpOnly(next,cp,needFeature){return!!needFeature?next(cp,needFeature):new UChar(cp,null)}function fromRuleBasedJamo(next,cp,needFeature){var j;if(cp<LBase||LBase+LCount<=cp&&cp<SBase||SBase+SCount<cp){return next(cp,needFeature)}if(LBase<=cp&&cp<LBase+LCount){var c={};var base=(cp-LBase)*VCount;for(j=0;j<VCount;++j){c[VBase+j]=SBase+TCount*(j+base)}return new UChar(cp,[,,c])}var SIndex=cp-SBase;var TIndex=SIndex%TCount;var feature=[];if(TIndex!==0){feature[0]=[SBase+SIndex-TIndex,TBase+TIndex]}else{feature[0]=[LBase+Math.floor(SIndex/NCount),VBase+Math.floor(SIndex%NCount/TCount)];feature[2]={};for(j=1;j<TCount;++j){feature[2][TBase+j]=cp+j}}return new UChar(cp,feature)}function fromCpFilter(next,cp,needFeature){return cp<60||13311<cp&&cp<42607?new UChar(cp,DEFAULT_FEATURE):next(cp,needFeature)}var strategies=[fromCpFilter,fromCache,fromCpOnly,fromRuleBasedJamo,fromData];UChar.fromCharCode=strategies.reduceRight(function(next,strategy){return function(cp,needFeature){return strategy(next,cp,needFeature)}},null);UChar.isHighSurrogate=function(cp){return cp>=55296&&cp<=56319};UChar.isLowSurrogate=function(cp){return cp>=56320&&cp<=57343};UChar.prototype.prepFeature=function(){if(!this.feature){this.feature=UChar.fromCharCode(this.codepoint,true).feature}};UChar.prototype.toString=function(){if(this.codepoint<65536){return String.fromCharCode(this.codepoint)}else{var x=this.codepoint-65536;return String.fromCharCode(Math.floor(x/1024)+55296,x%1024+56320)}};UChar.prototype.getDecomp=function(){this.prepFeature();return this.feature[0]||null};UChar.prototype.isCompatibility=function(){this.prepFeature();return!!this.feature[1]&&this.feature[1]&1<<8};UChar.prototype.isExclude=function(){this.prepFeature();return!!this.feature[1]&&this.feature[1]&1<<9};UChar.prototype.getCanonicalClass=function(){this.prepFeature();return!!this.feature[1]?this.feature[1]&255:0};UChar.prototype.getComposite=function(following){this.prepFeature();if(!this.feature[2]){return null}var cp=this.feature[2][following.codepoint];return cp?UChar.fromCharCode(cp):null};var UCharIterator=function(str){this.str=str;this.cursor=0};UCharIterator.prototype.next=function(){if(!!this.str&&this.cursor<this.str.length){var cp=this.str.charCodeAt(this.cursor++);var d;if(UChar.isHighSurrogate(cp)&&this.cursor<this.str.length&&UChar.isLowSurrogate(d=this.str.charCodeAt(this.cursor))){cp=(cp-55296)*1024+(d-56320)+65536;++this.cursor}return UChar.fromCharCode(cp)}else{this.str=null;return null}};var RecursDecompIterator=function(it,cano){this.it=it;this.canonical=cano;this.resBuf=[]};RecursDecompIterator.prototype.next=function(){function recursiveDecomp(cano,uchar){var decomp=uchar.getDecomp();if(!!decomp&&!(cano&&uchar.isCompatibility())){var ret=[];for(var i=0;i<decomp.length;++i){var a=recursiveDecomp(cano,UChar.fromCharCode(decomp[i]));ret=ret.concat(a)}return ret}else{return[uchar]}}if(this.resBuf.length===0){var uchar=this.it.next();if(!uchar){return null}this.resBuf=recursiveDecomp(this.canonical,uchar)}return this.resBuf.shift()};var DecompIterator=function(it){this.it=it;this.resBuf=[]};DecompIterator.prototype.next=function(){var cc;if(this.resBuf.length===0){do{var uchar=this.it.next();if(!uchar){break}cc=uchar.getCanonicalClass();var inspt=this.resBuf.length;if(cc!==0){for(;inspt>0;--inspt){var uchar2=this.resBuf[inspt-1];var cc2=uchar2.getCanonicalClass();if(cc2<=cc){break}}}this.resBuf.splice(inspt,0,uchar)}while(cc!==0)}return this.resBuf.shift()};var CompIterator=function(it){this.it=it;this.procBuf=[];this.resBuf=[];this.lastClass=null};CompIterator.prototype.next=function(){while(this.resBuf.length===0){var uchar=this.it.next();if(!uchar){this.resBuf=this.procBuf;this.procBuf=[];break}if(this.procBuf.length===0){this.lastClass=uchar.getCanonicalClass();this.procBuf.push(uchar)}else{var starter=this.procBuf[0];var composite=starter.getComposite(uchar);var cc=uchar.getCanonicalClass();if(!!composite&&(this.lastClass<cc||this.lastClass===0)){this.procBuf[0]=composite}else{if(cc===0){this.resBuf=this.procBuf;this.procBuf=[]}this.lastClass=cc;this.procBuf.push(uchar)}}}return this.resBuf.shift()};var createIterator=function(mode,str){switch(mode){case"NFD":return new DecompIterator(new RecursDecompIterator(new UCharIterator(str),true));case"NFKD":return new DecompIterator(new RecursDecompIterator(new UCharIterator(str),false));case"NFC":return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str),true)));case"NFKC":return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str),false)))}throw mode+" is invalid"};var normalize=function(mode,str){var it=createIterator(mode,str);var ret="";var uchar;while(!!(uchar=it.next())){ret+=uchar.toString()}return ret};function nfd(str){return normalize("NFD",str)}function nfkd(str){return normalize("NFKD",str)}function nfc(str){return normalize("NFC",str)}function nfkc(str){return normalize("NFKC",str)}UChar.udata={0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8e3,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},5632:{71231:[,9],71350:[,9],71351:[,7]},5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},6144:{6313:[,228]},6400:{6457:[,222],6458:[,230],6459:[,220]},6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8e3,768]],8003:[[8001,768]],8004:[[8e3,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},8960:{9001:[[12296]],9002:[[12297]]},9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},11776:{11935:[[27597],256],12019:[[40863],256]},12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[3e4],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},48128:{113822:[,1]},53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},53760:{119362:[,230],119363:[,230],119364:[,230]},54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},61952:{},63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23e3]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149e3]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32e3]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[4e4]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}};var unorm={nfc:nfc,nfd:nfd,nfkc:nfkc,nfkd:nfkd};if(typeof module==="object"){module.exports=unorm}else if(typeof define==="function"&&define.amd){define("unorm",function(){return unorm})}else{root.unorm=unorm}unorm.shimApplied=false;if(!String.prototype.normalize){String.prototype.normalize=function(form){var str=""+this;form=form===undefined?"NFC":form;if(form==="NFC"){return unorm.nfc(str)}else if(form==="NFD"){return unorm.nfd(str)}else if(form==="NFKC"){return unorm.nfkc(str)}else if(form==="NFKD"){return unorm.nfkd(str)}else{throw new RangeError("Invalid normalization form: "+form)}};unorm.shimApplied=true}})(this)},{}],488:[function(require,module,exports){"use strict";var punycode=require("punycode");var util=require("./util");exports.parse=urlParse;exports.resolve=urlResolve;exports.resolveObject=urlResolveObject;exports.format=urlFormat;exports.Url=Url;function Url(){this.protocol=null;this.slashes=null;this.auth=null;this.host=null;this.port=null;this.hostname=null;this.hash=null;this.search=null;this.query=null;this.pathname=null;this.path=null;this.href=null}var protocolPattern=/^([a-z0-9.+-]+:)/i,portPattern=/:[0-9]*$/,simplePathPattern=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,delims=["<",">",'"',"`"," ","\r","\n","\t"],unwise=["{","}","|","\\","^","`"].concat(delims),autoEscape=["'"].concat(unwise),nonHostChars=["%","/","?",";","#"].concat(autoEscape),hostEndingChars=["/","?","#"],hostnameMaxLen=255,hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,unsafeProtocol={javascript:true,"javascript:":true},hostlessProtocol={javascript:true,"javascript:":true},slashedProtocol={http:true,https:true,ftp:true,gopher:true,file:true,"http:":true,"https:":true,"ftp:":true,"gopher:":true,"file:":true},querystring=require("querystring");function urlParse(url,parseQueryString,slashesDenoteHost){if(url&&util.isObject(url)&&url instanceof Url)return url;var u=new Url;u.parse(url,parseQueryString,slashesDenoteHost);return u}Url.prototype.parse=function(url,parseQueryString,slashesDenoteHost){if(!util.isString(url)){throw new TypeError("Parameter 'url' must be a string, not "+typeof url)}var queryIndex=url.indexOf("?"),splitter=queryIndex!==-1&&queryIndex<url.indexOf("#")?"?":"#",uSplit=url.split(splitter),slashRegex=/\\/g;uSplit[0]=uSplit[0].replace(slashRegex,"/");url=uSplit.join(splitter);var rest=url;rest=rest.trim();if(!slashesDenoteHost&&url.split("#").length===1){var simplePath=simplePathPattern.exec(rest);if(simplePath){this.path=rest;this.href=rest;this.pathname=simplePath[1];if(simplePath[2]){this.search=simplePath[2];if(parseQueryString){this.query=querystring.parse(this.search.substr(1))}else{this.query=this.search.substr(1)}}else if(parseQueryString){this.search="";this.query={}}return this}}var proto=protocolPattern.exec(rest);if(proto){proto=proto[0];var lowerProto=proto.toLowerCase();this.protocol=lowerProto;rest=rest.substr(proto.length)}if(slashesDenoteHost||proto||rest.match(/^\/\/[^@\/]+@[^@\/]+/)){var slashes=rest.substr(0,2)==="//";if(slashes&&!(proto&&hostlessProtocol[proto])){rest=rest.substr(2);this.slashes=true}}if(!hostlessProtocol[proto]&&(slashes||proto&&!slashedProtocol[proto])){var hostEnd=-1;for(var i=0;i<hostEndingChars.length;i++){var hec=rest.indexOf(hostEndingChars[i]);if(hec!==-1&&(hostEnd===-1||hec<hostEnd))hostEnd=hec}var auth,atSign;if(hostEnd===-1){atSign=rest.lastIndexOf("@")}else{atSign=rest.lastIndexOf("@",hostEnd)}if(atSign!==-1){auth=rest.slice(0,atSign);rest=rest.slice(atSign+1);this.auth=decodeURIComponent(auth)}hostEnd=-1;for(var i=0;i<nonHostChars.length;i++){var hec=rest.indexOf(nonHostChars[i]);if(hec!==-1&&(hostEnd===-1||hec<hostEnd))hostEnd=hec}if(hostEnd===-1)hostEnd=rest.length;this.host=rest.slice(0,hostEnd);rest=rest.slice(hostEnd);this.parseHost();this.hostname=this.hostname||"";var ipv6Hostname=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!ipv6Hostname){var hostparts=this.hostname.split(/\./);for(var i=0,l=hostparts.length;i<l;i++){var part=hostparts[i];if(!part)continue;if(!part.match(hostnamePartPattern)){var newpart="";for(var j=0,k=part.length;j<k;j++){if(part.charCodeAt(j)>127){newpart+="x"}else{newpart+=part[j]}}if(!newpart.match(hostnamePartPattern)){var validParts=hostparts.slice(0,i);var notHost=hostparts.slice(i+1);var bit=part.match(hostnamePartStart);if(bit){validParts.push(bit[1]);notHost.unshift(bit[2])}if(notHost.length){rest="/"+notHost.join(".")+rest}this.hostname=validParts.join(".");break}}}}if(this.hostname.length>hostnameMaxLen){this.hostname=""}else{this.hostname=this.hostname.toLowerCase()}if(!ipv6Hostname){this.hostname=punycode.toASCII(this.hostname)}var p=this.port?":"+this.port:"";var h=this.hostname||"";this.host=h+p;this.href+=this.host;if(ipv6Hostname){this.hostname=this.hostname.substr(1,this.hostname.length-2);if(rest[0]!=="/"){rest="/"+rest}}}if(!unsafeProtocol[lowerProto]){for(var i=0,l=autoEscape.length;i<l;i++){var ae=autoEscape[i];if(rest.indexOf(ae)===-1)continue;var esc=encodeURIComponent(ae);if(esc===ae){esc=escape(ae)}rest=rest.split(ae).join(esc)}}var hash=rest.indexOf("#");if(hash!==-1){this.hash=rest.substr(hash);rest=rest.slice(0,hash)}var qm=rest.indexOf("?");if(qm!==-1){this.search=rest.substr(qm);this.query=rest.substr(qm+1);if(parseQueryString){this.query=querystring.parse(this.query)}rest=rest.slice(0,qm)}else if(parseQueryString){this.search="";this.query={}}if(rest)this.pathname=rest;if(slashedProtocol[lowerProto]&&this.hostname&&!this.pathname){this.pathname="/"}if(this.pathname||this.search){var p=this.pathname||"";var s=this.search||"";this.path=p+s}this.href=this.format();return this};function urlFormat(obj){if(util.isString(obj))obj=urlParse(obj);if(!(obj instanceof Url))return Url.prototype.format.call(obj);return obj.format()}Url.prototype.format=function(){var auth=this.auth||"";if(auth){auth=encodeURIComponent(auth);auth=auth.replace(/%3A/i,":");auth+="@"}var protocol=this.protocol||"",pathname=this.pathname||"",hash=this.hash||"",host=false,query="";if(this.host){host=auth+this.host}else if(this.hostname){host=auth+(this.hostname.indexOf(":")===-1?this.hostname:"["+this.hostname+"]");if(this.port){host+=":"+this.port}}if(this.query&&util.isObject(this.query)&&Object.keys(this.query).length){query=querystring.stringify(this.query)}var search=this.search||query&&"?"+query||"";if(protocol&&protocol.substr(-1)!==":")protocol+=":";if(this.slashes||(!protocol||slashedProtocol[protocol])&&host!==false){host="//"+(host||"");if(pathname&&pathname.charAt(0)!=="/")pathname="/"+pathname}else if(!host){host=""}if(hash&&hash.charAt(0)!=="#")hash="#"+hash;if(search&&search.charAt(0)!=="?")search="?"+search;pathname=pathname.replace(/[?#]/g,function(match){return encodeURIComponent(match)});search=search.replace("#","%23");return protocol+host+pathname+search+hash};function urlResolve(source,relative){return urlParse(source,false,true).resolve(relative)}Url.prototype.resolve=function(relative){return this.resolveObject(urlParse(relative,false,true)).format()};function urlResolveObject(source,relative){if(!source)return relative;return urlParse(source,false,true).resolveObject(relative)}Url.prototype.resolveObject=function(relative){if(util.isString(relative)){var rel=new Url;rel.parse(relative,false,true);relative=rel}var result=new Url;var tkeys=Object.keys(this);for(var tk=0;tk<tkeys.length;tk++){var tkey=tkeys[tk];result[tkey]=this[tkey]}result.hash=relative.hash;if(relative.href===""){result.href=result.format();return result}if(relative.slashes&&!relative.protocol){var rkeys=Object.keys(relative);for(var rk=0;rk<rkeys.length;rk++){var rkey=rkeys[rk];if(rkey!=="protocol")result[rkey]=relative[rkey]}if(slashedProtocol[result.protocol]&&result.hostname&&!result.pathname){result.path=result.pathname="/"}result.href=result.format();return result}if(relative.protocol&&relative.protocol!==result.protocol){if(!slashedProtocol[relative.protocol]){var keys=Object.keys(relative);for(var v=0;v<keys.length;v++){var k=keys[v];result[k]=relative[k]}result.href=result.format();return result}result.protocol=relative.protocol;if(!relative.host&&!hostlessProtocol[relative.protocol]){var relPath=(relative.pathname||"").split("/");while(relPath.length&&!(relative.host=relPath.shift()));if(!relative.host)relative.host="";if(!relative.hostname)relative.hostname="";if(relPath[0]!=="")relPath.unshift("");if(relPath.length<2)relPath.unshift("");result.pathname=relPath.join("/")}else{result.pathname=relative.pathname}result.search=relative.search;result.query=relative.query;result.host=relative.host||"";result.auth=relative.auth;result.hostname=relative.hostname||relative.host;result.port=relative.port;if(result.pathname||result.search){var p=result.pathname||"";var s=result.search||"";result.path=p+s}result.slashes=result.slashes||relative.slashes;result.href=result.format();return result}var isSourceAbs=result.pathname&&result.pathname.charAt(0)==="/",isRelAbs=relative.host||relative.pathname&&relative.pathname.charAt(0)==="/",mustEndAbs=isRelAbs||isSourceAbs||result.host&&relative.pathname,removeAllDots=mustEndAbs,srcPath=result.pathname&&result.pathname.split("/")||[],relPath=relative.pathname&&relative.pathname.split("/")||[],psychotic=result.protocol&&!slashedProtocol[result.protocol];if(psychotic){result.hostname="";result.port=null;if(result.host){if(srcPath[0]==="")srcPath[0]=result.host;else srcPath.unshift(result.host)}result.host="";if(relative.protocol){relative.hostname=null;relative.port=null;if(relative.host){if(relPath[0]==="")relPath[0]=relative.host;else relPath.unshift(relative.host)}relative.host=null}mustEndAbs=mustEndAbs&&(relPath[0]===""||srcPath[0]==="")}if(isRelAbs){result.host=relative.host||relative.host===""?relative.host:result.host;result.hostname=relative.hostname||relative.hostname===""?relative.hostname:result.hostname;result.search=relative.search;result.query=relative.query;srcPath=relPath}else if(relPath.length){if(!srcPath)srcPath=[];srcPath.pop();srcPath=srcPath.concat(relPath);result.search=relative.search;result.query=relative.query}else if(!util.isNullOrUndefined(relative.search)){if(psychotic){result.hostname=result.host=srcPath.shift();var authInHost=result.host&&result.host.indexOf("@")>0?result.host.split("@"):false;if(authInHost){result.auth=authInHost.shift();result.host=result.hostname=authInHost.shift()}}result.search=relative.search;result.query=relative.query;if(!util.isNull(result.pathname)||!util.isNull(result.search)){result.path=(result.pathname?result.pathname:"")+(result.search?result.search:"")}result.href=result.format();return result}if(!srcPath.length){result.pathname=null;if(result.search){result.path="/"+result.search}else{result.path=null}result.href=result.format();return result}var last=srcPath.slice(-1)[0];var hasTrailingSlash=(result.host||relative.host||srcPath.length>1)&&(last==="."||last==="..")||last==="";var up=0;for(var i=srcPath.length;i>=0;i--){last=srcPath[i];if(last==="."){srcPath.splice(i,1)}else if(last===".."){srcPath.splice(i,1);up++}else if(up){srcPath.splice(i,1);up--}}if(!mustEndAbs&&!removeAllDots){for(;up--;up){srcPath.unshift("..")}}if(mustEndAbs&&srcPath[0]!==""&&(!srcPath[0]||srcPath[0].charAt(0)!=="/")){srcPath.unshift("")}if(hasTrailingSlash&&srcPath.join("/").substr(-1)!=="/"){srcPath.push("")}var isAbsolute=srcPath[0]===""||srcPath[0]&&srcPath[0].charAt(0)==="/";if(psychotic){result.hostname=result.host=isAbsolute?"":srcPath.length?srcPath.shift():"";var authInHost=result.host&&result.host.indexOf("@")>0?result.host.split("@"):false;if(authInHost){result.auth=authInHost.shift();result.host=result.hostname=authInHost.shift()}}mustEndAbs=mustEndAbs||result.host&&srcPath.length;if(mustEndAbs&&!isAbsolute){srcPath.unshift("")}if(!srcPath.length){result.pathname=null;result.path=null}else{result.pathname=srcPath.join("/")}if(!util.isNull(result.pathname)||!util.isNull(result.search)){result.path=(result.pathname?result.pathname:"")+(result.search?result.search:"")}result.auth=relative.auth||result.auth;result.slashes=result.slashes||relative.slashes;result.href=result.format();return result};Url.prototype.parseHost=function(){var host=this.host;var port=portPattern.exec(host);if(port){port=port[0];if(port!==":"){this.port=port.substr(1)}host=host.substr(0,host.length-port.length)}if(host)this.hostname=host}},{"./util":489,punycode:414,querystring:417}],489:[function(require,module,exports){"use strict";module.exports={isString:function(arg){return typeof arg==="string"},isObject:function(arg){return typeof arg==="object"&&arg!==null},isNull:function(arg){return arg===null},isNullOrUndefined:function(arg){return arg==null}}},{}],490:[function(require,module,exports){(function(global){module.exports=deprecate;function deprecate(fn,msg){if(config("noDeprecation")){return fn}var warned=false;function deprecated(){if(!warned){if(config("throwDeprecation")){throw new Error(msg)}else if(config("traceDeprecation")){console.trace(msg)}else{console.warn(msg)}warned=true}return fn.apply(this,arguments)}return deprecated}function config(name){try{if(!global.localStorage)return false}catch(_){return false}var val=global.localStorage[name];if(null==val)return false;return String(val).toLowerCase()==="true"}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],491:[function(require,module,exports){var indexOf=require("indexof");var Object_keys=function(obj){if(Object.keys)return Object.keys(obj);else{var res=[];for(var key in obj)res.push(key);return res}};var forEach=function(xs,fn){if(xs.forEach)return xs.forEach(fn);else for(var i=0;i<xs.length;i++){fn(xs[i],i,xs)}};var defineProp=function(){try{Object.defineProperty({},"_",{});return function(obj,name,value){Object.defineProperty(obj,name,{writable:true,enumerable:false,configurable:true,value:value})}}catch(e){return function(obj,name,value){obj[name]=value}}}();var globals=["Array","Boolean","Date","Error","EvalError","Function","Infinity","JSON","Math","NaN","Number","Object","RangeError","ReferenceError","RegExp","String","SyntaxError","TypeError","URIError","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","eval","isFinite","isNaN","parseFloat","parseInt","undefined","unescape"];function Context(){}Context.prototype={};var Script=exports.Script=function NodeScript(code){if(!(this instanceof Script))return new Script(code);this.code=code};Script.prototype.runInContext=function(context){if(!(context instanceof Context)){throw new TypeError("needs a 'context' argument.")}var iframe=document.createElement("iframe");if(!iframe.style)iframe.style={};iframe.style.display="none";document.body.appendChild(iframe);var win=iframe.contentWindow;var wEval=win.eval,wExecScript=win.execScript;if(!wEval&&wExecScript){wExecScript.call(win,"null");wEval=win.eval}forEach(Object_keys(context),function(key){win[key]=context[key]});forEach(globals,function(key){if(context[key]){win[key]=context[key]}});var winKeys=Object_keys(win);var res=wEval.call(win,this.code);forEach(Object_keys(win),function(key){if(key in context||indexOf(winKeys,key)===-1){context[key]=win[key]}});forEach(globals,function(key){if(!(key in context)){defineProp(context,key,win[key])}});document.body.removeChild(iframe);return res};Script.prototype.runInThisContext=function(){return eval(this.code)};Script.prototype.runInNewContext=function(context){var ctx=Script.createContext(context);var res=this.runInContext(ctx);forEach(Object_keys(ctx),function(key){context[key]=ctx[key]});return res};forEach(Object_keys(Script.prototype),function(name){exports[name]=Script[name]=function(code){var s=Script(code);return s[name].apply(s,[].slice.call(arguments,1))}});exports.createScript=function(code){return exports.Script(code)};exports.createContext=Script.createContext=function(context){var copy=new Context;if(typeof context==="object"){forEach(Object_keys(context),function(key){copy[key]=context[key]})}return copy}},{indexof:351}]},{},[46,60,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69])(69)});