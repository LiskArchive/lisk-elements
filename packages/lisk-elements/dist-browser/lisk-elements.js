(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.lisk = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

var _liskConstants = require('../lisk-constants');

var _constants = require('./constants');

var constants = _interopRequireWildcard(_constants);

var _resources = require('./resources');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var defaultOptions = {
	bannedNode: [],
	randomizeNode: true
};

var commonHeaders = {
	Accept: 'application/json',
	'Content-Type': 'application/json'
};

var getUserAgent = function getUserAgent() {
	var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	    _ref$name = _ref.name,
	    name = _ref$name === undefined ? '????' : _ref$name,
	    _ref$version = _ref.version,
	    version = _ref$version === undefined ? '????' : _ref$version,
	    _ref$engine = _ref.engine,
	    engine = _ref$engine === undefined ? '????' : _ref$engine;

	var liskElementsInformation = 'LiskElements/1.0 (+https://github.com/LiskHQ/lisk-elements)';
	var locale = process.env.LC_ALL || process.env.LC_MESSAGES || process.env.LANG || process.env.LANGUAGE;
	var systemInformation = _os2.default.platform() + ' ' + _os2.default.release() + '; ' + _os2.default.arch() + (locale ? '; ' + locale : '');
	return name + '/' + version + ' (' + engine + ') ' + liskElementsInformation + ' ' + systemInformation;
};

var APIClient = function () {
	function APIClient(nodes) {
		var providedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		(0, _classCallCheck3.default)(this, APIClient);

		this.initialize(nodes, providedOptions);

		this.accounts = new _resources.AccountsResource(this);
		this.blocks = new _resources.BlocksResource(this);
		this.dapps = new _resources.DappsResource(this);
		this.delegates = new _resources.DelegatesResource(this);
		this.node = new _resources.NodeResource(this);
		this.peers = new _resources.PeersResource(this);
		this.signatures = new _resources.SignaturesResource(this);
		this.transactions = new _resources.TransactionsResource(this);
		this.voters = new _resources.VotersResource(this);
		this.votes = new _resources.VotesResource(this);
	}

	(0, _createClass3.default)(APIClient, [{
		key: 'initialize',
		value: function initialize(nodes) {
			var providedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

			if (!Array.isArray(nodes) || nodes.length <= 0) {
				throw new Error('APIClient requires nodes for initialization.');
			}

			if ((typeof providedOptions === 'undefined' ? 'undefined' : (0, _typeof3.default)(providedOptions)) !== 'object' || Array.isArray(providedOptions)) {
				throw new Error('APIClient takes an optional object as the second parameter.');
			}

			var options = (0, _assign2.default)({}, defaultOptions, providedOptions);

			this.headers = (0, _assign2.default)({}, commonHeaders, options.nethash ? { nethash: options.nethash } : {}, {
				'User-Agent': getUserAgent(options.client)
			});

			this.nodes = nodes;
			this.bannedNodes = [].concat((0, _toConsumableArray3.default)(options.bannedNodes || []));
			this.currentNode = options.node || this.getNewNode();
			this.randomizeNodes = options.randomizeNodes !== false;
		}
	}, {
		key: 'getNewNode',
		value: function getNewNode() {
			var _this = this;

			var nodes = this.nodes.filter(function (node) {
				return !_this.isBanned(node);
			});

			if (nodes.length === 0) {
				throw new Error('Cannot get new node: all nodes have been banned.');
			}

			var randomIndex = Math.floor(Math.random() * nodes.length);
			return nodes[randomIndex];
		}
	}, {
		key: 'banNode',
		value: function banNode(node) {
			if (!this.isBanned(node)) {
				this.bannedNodes.push(node);
				return true;
			}
			return false;
		}
	}, {
		key: 'banActiveNode',
		value: function banActiveNode() {
			return this.banNode(this.currentNode);
		}
	}, {
		key: 'banActiveNodeAndSelect',
		value: function banActiveNodeAndSelect() {
			var banned = this.banActiveNode();
			if (banned) {
				this.currentNode = this.getNewNode();
			}
			return banned;
		}
	}, {
		key: 'hasAvailableNodes',
		value: function hasAvailableNodes() {
			var _this2 = this;

			return this.nodes.some(function (node) {
				return !_this2.isBanned(node);
			});
		}
	}, {
		key: 'isBanned',
		value: function isBanned(node) {
			return this.bannedNodes.includes(node);
		}
	}], [{
		key: 'createMainnetAPIClient',
		value: function createMainnetAPIClient(options) {
			return new APIClient(constants.MAINNET_NODES, (0, _assign2.default)({}, { nethash: _liskConstants.MAINNET_NETHASH }, options));
		}
	}, {
		key: 'createTestnetAPIClient',
		value: function createTestnetAPIClient(options) {
			return new APIClient(constants.TESTNET_NODES, (0, _assign2.default)({}, { nethash: _liskConstants.TESTNET_NETHASH }, options));
		}
	}, {
		key: 'createBetanetAPIClient',
		value: function createBetanetAPIClient(options) {
			return new APIClient(constants.BETANET_NODES, (0, _assign2.default)({}, { nethash: _liskConstants.BETANET_NETHASH }, options));
		}
	}, {
		key: 'constants',
		get: function get() {
			return constants;
		}
	}]);
	return APIClient;
}();

exports.default = APIClient;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,require('_process'))
},{"../lisk-constants":25,"./constants":4,"./resources":10,"_process":327,"babel-runtime/core-js/object/assign":66,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/createClass":77,"babel-runtime/helpers/toConsumableArray":82,"babel-runtime/helpers/typeof":83,"os":300}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _constants = require('./constants');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Bind to resource class
/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */

var apiMethod = function apiMethod() {
	var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	    _ref$method = _ref.method,
	    method = _ref$method === undefined ? _constants.GET : _ref$method,
	    _ref$path = _ref.path,
	    path = _ref$path === undefined ? '' : _ref$path,
	    _ref$urlParams = _ref.urlParams,
	    urlParams = _ref$urlParams === undefined ? [] : _ref$urlParams,
	    _ref$validator = _ref.validator,
	    validator = _ref$validator === undefined ? null : _ref$validator,
	    _ref$defaultData = _ref.defaultData,
	    defaultData = _ref$defaultData === undefined ? {} : _ref$defaultData,
	    _ref$retry = _ref.retry,
	    retry = _ref$retry === undefined ? false : _ref$retry;

	return function apiHandler() {
		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		if (urlParams.length > 0 && args.length < urlParams.length) {
			return _promise2.default.reject(new Error('This endpoint must be supplied with the following parameters: ' + urlParams.toString()));
		}

		var data = (0, _assign2.default)({}, defaultData, args.length > urlParams.length && (0, _typeof3.default)(args[urlParams.length]) === 'object' ? args[urlParams.length] : {});

		if (validator) {
			try {
				validator(data);
			} catch (err) {
				return _promise2.default.reject(err);
			}
		}

		var resolvedURLObject = urlParams.reduce(function (accumulator, param, i) {
			return (0, _assign2.default)({}, accumulator, (0, _defineProperty3.default)({}, param, args[i]));
		}, {});

		var requestData = {
			method: method,
			url: (0, _utils.solveURLParams)('' + this.resourcePath + path, resolvedURLObject),
			headers: this.headers
		};

		if ((0, _keys2.default)(data).length > 0) {
			if (method === _constants.GET) {
				requestData.url += '?' + (0, _utils.toQueryString)(data);
			} else {
				requestData.body = data;
			}
		}
		return this.request(requestData, retry);
	};
};

exports.default = apiMethod;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./constants":4,"./utils":17,"babel-runtime/core-js/object/assign":66,"babel-runtime/core-js/object/keys":71,"babel-runtime/core-js/promise":73,"babel-runtime/helpers/defineProperty":78,"babel-runtime/helpers/typeof":83}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _popsicle = require('popsicle');

var popsicle = _interopRequireWildcard(_popsicle);

var _constants = require('./constants');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */

var APIResource = function () {
	function APIResource(apiClient) {
		(0, _classCallCheck3.default)(this, APIResource);

		if (!apiClient) {
			throw new Error('APIResource requires APIClient instance for initialization.');
		}
		this.apiClient = apiClient;
		this.path = '';
	}

	(0, _createClass3.default)(APIResource, [{
		key: 'request',
		value: function request(req, retry) {
			var _this = this;

			var retryCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

			var request = popsicle.request(req).use(popsicle.plugins.parse(['json', 'urlencoded'])).then(function (res) {
				if (res.status >= 300) {
					if (res.body && res.body.message) {
						throw new Error('Status ' + res.status + ' : ' + res.body.message);
					}
					throw new Error('Status ' + res.status + ' : An unknown error has occurred.');
				}
				return res.body;
			});

			if (retry) {
				request.catch(function (err) {
					return _this.handleRetry(err, req, retryCount);
				});
			}
			return request;
		}
	}, {
		key: 'handleRetry',
		value: function handleRetry(error, req, retryCount) {
			var _this2 = this;

			if (this.apiClient.hasAvailableNodes()) {
				return new _promise2.default(function (resolve) {
					return setTimeout(resolve, 1000);
				}).then(function () {
					if (_this2.apiClient.randomizeNodes) {
						_this2.apiClient.banActiveNodeAndSelect();
					} else if (retryCount > _constants.API_RECONNECT_MAX_RETRY_COUNT) {
						throw error;
					}
					return _this2.request(req, true, retryCount + 1);
				});
			}
			return _promise2.default.reject(error);
		}
	}, {
		key: 'headers',
		get: function get() {
			return this.apiClient.headers;
		}
	}, {
		key: 'resourcePath',
		get: function get() {
			return this.apiClient.currentNode + '/api' + this.path;
		}
	}]);
	return APIResource;
}();

exports.default = APIResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./constants":4,"babel-runtime/core-js/promise":73,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/createClass":77,"popsicle":316}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var GET = exports.GET = 'GET';
var POST = exports.POST = 'POST';
var PUT = exports.PUT = 'PUT';
var API_RECONNECT_MAX_RETRY_COUNT = exports.API_RECONNECT_MAX_RETRY_COUNT = 3;

var BETANET_NODES = exports.BETANET_NODES = ['http://94.237.42.109:5000', 'http://83.136.252.99:5000'];
var TESTNET_NODES = exports.TESTNET_NODES = ['http://testnet.lisk.io:7000'];
var MAINNET_NODES = exports.MAINNET_NODES = ['https://node01.lisk.io:443', 'https://node02.lisk.io:443', 'https://node03.lisk.io:443', 'https://node04.lisk.io:443', 'https://node05.lisk.io:443', 'https://node06.lisk.io:443', 'https://node07.lisk.io:443', 'https://node08.lisk.io:443'];/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{}],5:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api_client = require('./api_client');

var _api_client2 = _interopRequireDefault(_api_client);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _api_client2.default; /*
                                         * Copyright Â© 2018 Lisk Foundation
                                         *
                                         * See the LICENSE file at the top-level directory of this distribution
                                         * for licensing information.
                                         *
                                         * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                                         * no part of this software, including this file, may be copied, modified,
                                         * propagated, or distributed except according to the terms contained in the
                                         * LICENSE file.
                                         *
                                         * Removal or modification of this copyright notice is prohibited.
                                         *
                                         *//* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./api_client":1}],6:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AccountsResource = function (_APIResource) {
	(0, _inherits3.default)(AccountsResource, _APIResource);

	function AccountsResource(apiClient) {
		(0, _classCallCheck3.default)(this, AccountsResource);

		var _this = (0, _possibleConstructorReturn3.default)(this, (AccountsResource.__proto__ || (0, _getPrototypeOf2.default)(AccountsResource)).call(this, apiClient));

		_this.path = '/accounts';

		_this.get = (0, _api_method2.default)({
			method: _constants.GET
		}).bind(_this);

		_this.getMultisignatureGroups = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/{address}/multisignature_groups',
			urlParams: ['address']
		}).bind(_this);

		_this.getMultisignatureMemberships = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/{address}/multisignature_memberships',
			urlParams: ['address']
		}).bind(_this);
		return _this;
	}

	return AccountsResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = AccountsResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BlocksResource = function (_APIResource) {
  (0, _inherits3.default)(BlocksResource, _APIResource);

  function BlocksResource(apiClient) {
    (0, _classCallCheck3.default)(this, BlocksResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (BlocksResource.__proto__ || (0, _getPrototypeOf2.default)(BlocksResource)).call(this, apiClient));

    _this.path = '/blocks';

    _this.get = (0, _api_method2.default)({
      method: _constants.GET
    }).bind(_this);
    return _this;
  }

  return BlocksResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = BlocksResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DappsResource = function (_APIResource) {
  (0, _inherits3.default)(DappsResource, _APIResource);

  function DappsResource(apiClient) {
    (0, _classCallCheck3.default)(this, DappsResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (DappsResource.__proto__ || (0, _getPrototypeOf2.default)(DappsResource)).call(this, apiClient));

    _this.path = '/dapps';

    _this.get = (0, _api_method2.default)({
      method: _constants.GET
    }).bind(_this);
    return _this;
  }

  return DappsResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = DappsResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DelegatesResource = function (_APIResource) {
	(0, _inherits3.default)(DelegatesResource, _APIResource);

	function DelegatesResource(apiClient) {
		(0, _classCallCheck3.default)(this, DelegatesResource);

		var _this = (0, _possibleConstructorReturn3.default)(this, (DelegatesResource.__proto__ || (0, _getPrototypeOf2.default)(DelegatesResource)).call(this, apiClient));

		_this.path = '/delegates';

		_this.get = (0, _api_method2.default)({
			method: _constants.GET
		}).bind(_this);

		_this.getStandby = (0, _api_method2.default)({
			method: _constants.GET,
			defaultData: {
				sort: 'rate:asc',
				offset: 101
			}
		}).bind(_this);

		_this.getForgers = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/forgers'
		}).bind(_this);

		_this.getForgingStatistics = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/{address}/forging_statistics',
			urlParams: ['address']
		}).bind(_this);
		return _this;
	}

	return DelegatesResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = DelegatesResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],10:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _accounts = require('./accounts');

Object.defineProperty(exports, 'AccountsResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_accounts).default;
  }
});

var _blocks = require('./blocks');

Object.defineProperty(exports, 'BlocksResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_blocks).default;
  }
});

var _dapps = require('./dapps');

Object.defineProperty(exports, 'DappsResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_dapps).default;
  }
});

var _delegates = require('./delegates');

Object.defineProperty(exports, 'DelegatesResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_delegates).default;
  }
});

var _node = require('./node');

Object.defineProperty(exports, 'NodeResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_node).default;
  }
});

var _peers = require('./peers');

Object.defineProperty(exports, 'PeersResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_peers).default;
  }
});

var _signatures = require('./signatures');

Object.defineProperty(exports, 'SignaturesResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_signatures).default;
  }
});

var _transactions = require('./transactions');

Object.defineProperty(exports, 'TransactionsResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_transactions).default;
  }
});

var _voters = require('./voters');

Object.defineProperty(exports, 'VotersResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_voters).default;
  }
});

var _votes = require('./votes');

Object.defineProperty(exports, 'VotesResource', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_votes).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./accounts":6,"./blocks":7,"./dapps":8,"./delegates":9,"./node":11,"./peers":12,"./signatures":13,"./transactions":14,"./voters":15,"./votes":16}],11:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NodeResource = function (_APIResource) {
	(0, _inherits3.default)(NodeResource, _APIResource);

	function NodeResource(apiClient) {
		(0, _classCallCheck3.default)(this, NodeResource);

		var _this = (0, _possibleConstructorReturn3.default)(this, (NodeResource.__proto__ || (0, _getPrototypeOf2.default)(NodeResource)).call(this, apiClient));

		_this.path = '/node';

		_this.getConstants = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/constants'
		}).bind(_this);

		_this.getStatus = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/status'
		}).bind(_this);

		_this.getForgingStatus = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/status/forging'
		}).bind(_this);

		_this.updateForgingStatus = (0, _api_method2.default)({
			method: _constants.PUT,
			path: '/status/forging'
		}).bind(_this);

		_this.getTransactions = (0, _api_method2.default)({
			method: _constants.GET,
			path: '/transactions/{state}',
			urlParams: ['state']
		}).bind(_this);
		return _this;
	}

	return NodeResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = NodeResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],12:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PeersResource = function (_APIResource) {
  (0, _inherits3.default)(PeersResource, _APIResource);

  function PeersResource(apiClient) {
    (0, _classCallCheck3.default)(this, PeersResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (PeersResource.__proto__ || (0, _getPrototypeOf2.default)(PeersResource)).call(this, apiClient));

    _this.path = '/peers';

    _this.get = (0, _api_method2.default)({
      method: _constants.GET
    }).bind(_this);
    return _this;
  }

  return PeersResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = PeersResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],13:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SignaturesResource = function (_APIResource) {
  (0, _inherits3.default)(SignaturesResource, _APIResource);

  function SignaturesResource(apiClient) {
    (0, _classCallCheck3.default)(this, SignaturesResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (SignaturesResource.__proto__ || (0, _getPrototypeOf2.default)(SignaturesResource)).call(this, apiClient));

    _this.path = '/signatures';

    _this.broadcast = (0, _api_method2.default)({
      method: _constants.POST
    }).bind(_this);
    return _this;
  }

  return SignaturesResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = SignaturesResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],14:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TransactionsResource = function (_APIResource) {
  (0, _inherits3.default)(TransactionsResource, _APIResource);

  function TransactionsResource(apiClient) {
    (0, _classCallCheck3.default)(this, TransactionsResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (TransactionsResource.__proto__ || (0, _getPrototypeOf2.default)(TransactionsResource)).call(this, apiClient));

    _this.path = '/transactions';

    _this.get = (0, _api_method2.default)({
      method: _constants.GET
    }).bind(_this);

    _this.broadcast = (0, _api_method2.default)({
      method: _constants.POST
    }).bind(_this);
    return _this;
  }

  return TransactionsResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = TransactionsResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],15:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VotersResource = function (_APIResource) {
  (0, _inherits3.default)(VotersResource, _APIResource);

  function VotersResource(apiClient) {
    (0, _classCallCheck3.default)(this, VotersResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (VotersResource.__proto__ || (0, _getPrototypeOf2.default)(VotersResource)).call(this, apiClient));

    _this.path = '/voters';

    _this.get = (0, _api_method2.default)({
      method: _constants.GET
    }).bind(_this);
    return _this;
  }

  return VotersResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = VotersResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],16:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _api_method = require('../api_method');

var _api_method2 = _interopRequireDefault(_api_method);

var _api_resource = require('../api_resource');

var _api_resource2 = _interopRequireDefault(_api_resource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VotesResource = function (_APIResource) {
  (0, _inherits3.default)(VotesResource, _APIResource);

  function VotesResource(apiClient) {
    (0, _classCallCheck3.default)(this, VotesResource);

    var _this = (0, _possibleConstructorReturn3.default)(this, (VotesResource.__proto__ || (0, _getPrototypeOf2.default)(VotesResource)).call(this, apiClient));

    _this.path = '/votes';

    _this.get = (0, _api_method2.default)({
      method: _constants.GET
    }).bind(_this);
    return _this;
  }

  return VotesResource;
}(_api_resource2.default); /*
                            * Copyright Â© 2018 Lisk Foundation
                            *
                            * See the LICENSE file at the top-level directory of this distribution
                            * for licensing information.
                            *
                            * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                            * no part of this software, including this file, may be copied, modified,
                            * propagated, or distributed except according to the terms contained in the
                            * LICENSE file.
                            *
                            * Removal or modification of this copyright notice is prohibited.
                            *
                            */

exports.default = VotesResource;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../api_method":2,"../api_resource":3,"../constants":4,"babel-runtime/core-js/object/get-prototype-of":70,"babel-runtime/helpers/classCallCheck":76,"babel-runtime/helpers/inherits":79,"babel-runtime/helpers/possibleConstructorReturn":80}],17:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.solveURLParams = exports.toQueryString = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = require('babel-runtime/core-js/object/entries');

var _entries2 = _interopRequireDefault(_entries);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var toQueryString = exports.toQueryString = function toQueryString(obj) {
	var parts = (0, _entries2.default)(obj).reduce(function (accumulator, _ref) {
		var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
		    key = _ref2[0],
		    value = _ref2[1];

		return [].concat((0, _toConsumableArray3.default)(accumulator), [encodeURIComponent(key) + '=' + encodeURIComponent(value)]);
	}, []);

	return parts.join('&');
};

var urlParamRegex = /{[^}]+}/;
var solveURLParams = exports.solveURLParams = function solveURLParams(url) {
	var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	if ((0, _keys2.default)(params).length === 0) {
		if (url.match(urlParamRegex)) {
			throw new Error('URL is not completely solved');
		}
		return url;
	}
	var solvedURL = (0, _entries2.default)(params).reduce(function (accumulator, _ref3) {
		var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
		    key = _ref4[0],
		    value = _ref4[1];

		return accumulator.replace('{' + key + '}', value);
	}, url);

	if (solvedURL.match(urlParamRegex)) {
		throw new Error('URL is not completely solved');
	}

	return encodeURI(solvedURL);
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"babel-runtime/core-js/object/entries":69,"babel-runtime/core-js/object/keys":71,"babel-runtime/helpers/slicedToArray":81,"babel-runtime/helpers/toConsumableArray":82}],18:[function(require,module,exports){
(function (Buffer){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.parseEncryptedPassphrase = exports.stringifyEncryptedPassphrase = exports.convertPrivateKeyEd2Curve = exports.convertPublicKeyEd2Curve = exports.getAddressFromPublicKey = exports.toAddress = exports.getFirstEightBytesReversed = exports.hexToBuffer = exports.bufferToHex = exports.bufferToBigNumberString = exports.bigNumberToBuffer = undefined;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

var _browserifyBignum = require('browserify-bignum');

var _browserifyBignum2 = _interopRequireDefault(_browserifyBignum);

var _ed2curve = require('ed2curve');

var _ed2curve2 = _interopRequireDefault(_ed2curve);

var _hash = require('./hash');

var _hash2 = _interopRequireDefault(_hash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var bigNumberToBuffer = exports.bigNumberToBuffer = function bigNumberToBuffer(bignumber, size) {
	return (0, _browserifyBignum2.default)(bignumber).toBuffer({ size: size });
};

var bufferToBigNumberString = exports.bufferToBigNumberString = function bufferToBigNumberString(bigNumberBuffer) {
	return _browserifyBignum2.default.fromBuffer(bigNumberBuffer).toString();
};

var bufferToHex = exports.bufferToHex = function bufferToHex(buffer) {
	return naclInstance.to_hex(buffer);
};

var hexRegex = /^[0-9a-f]+/i;
var hexToBuffer = exports.hexToBuffer = function hexToBuffer(hex) {
	if (typeof hex !== 'string') {
		throw new TypeError('Argument must be a string.');
	}
	var matchedHex = (hex.match(hexRegex) || [])[0];
	if (!matchedHex || matchedHex.length !== hex.length) {
		throw new TypeError('Argument must be a valid hex string.');
	}
	if (matchedHex.length % 2 !== 0) {
		throw new TypeError('Argument must have a valid length of hex string.');
	}
	return Buffer.from(matchedHex, 'hex');
};

var getFirstEightBytesReversed = exports.getFirstEightBytesReversed = function getFirstEightBytesReversed(publicKeyBytes) {
	return Buffer.from(publicKeyBytes).slice(0, 8).reverse();
};

var toAddress = exports.toAddress = function toAddress(buffer) {
	if (!Buffer.from(buffer).slice(0, 8).equals(buffer)) throw new Error('The buffer for Lisk addresses must not have more than 8 bytes');
	return bufferToBigNumberString(buffer) + 'L';
};

var getAddressFromPublicKey = exports.getAddressFromPublicKey = function getAddressFromPublicKey(publicKey) {
	var publicKeyHash = (0, _hash2.default)(publicKey, 'hex');

	var publicKeyTransform = getFirstEightBytesReversed(publicKeyHash);
	var address = toAddress(publicKeyTransform);

	return address;
};

var convertPublicKeyEd2Curve = exports.convertPublicKeyEd2Curve = _ed2curve2.default.convertPublicKey;

var convertPrivateKeyEd2Curve = exports.convertPrivateKeyEd2Curve = _ed2curve2.default.convertSecretKey;

var stringifyEncryptedPassphrase = exports.stringifyEncryptedPassphrase = function stringifyEncryptedPassphrase(encryptedPassphrase) {
	if ((typeof encryptedPassphrase === 'undefined' ? 'undefined' : (0, _typeof3.default)(encryptedPassphrase)) !== 'object' || encryptedPassphrase === null) {
		throw new Error('Encrypted passphrase to stringify must be an object.');
	}
	var objectToStringify = encryptedPassphrase.iterations ? encryptedPassphrase : {
		salt: encryptedPassphrase.salt,
		cipherText: encryptedPassphrase.cipherText,
		iv: encryptedPassphrase.iv,
		tag: encryptedPassphrase.tag,
		version: encryptedPassphrase.version
	};
	return _querystring2.default.stringify(objectToStringify);
};

var parseEncryptedPassphrase = exports.parseEncryptedPassphrase = function parseEncryptedPassphrase(encryptedPassphrase) {
	if (typeof encryptedPassphrase !== 'string') {
		throw new Error('Encrypted passphrase to parse must be a string.');
	}
	var keyValuePairs = _querystring2.default.parse(encryptedPassphrase);
	var salt = keyValuePairs.salt,
	    cipherText = keyValuePairs.cipherText,
	    iv = keyValuePairs.iv,
	    tag = keyValuePairs.tag,
	    version = keyValuePairs.version;

	var iterations = keyValuePairs.iterations !== undefined ? parseInt(keyValuePairs.iterations, 10) : null;

	return {
		iterations: iterations,
		salt: salt,
		cipherText: cipherText,
		iv: iv,
		tag: tag,
		version: version
	};
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,require("buffer").Buffer)
},{"./hash":20,"babel-runtime/helpers/typeof":83,"browserify-bignum":113,"buffer":127,"ed2curve":255,"querystring":337}],19:[function(require,module,exports){
(function (Buffer){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.decryptPassphraseWithPassword = exports.encryptPassphraseWithPassword = exports.decryptMessageWithPassphrase = exports.encryptMessageWithPassphrase = undefined;

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _convert = require('./convert');

var _keys = require('./keys');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PBKDF2_ITERATIONS = 1e6; /*
                              * Copyright Â© 2018 Lisk Foundation
                              *
                              * See the LICENSE file at the top-level directory of this distribution
                              * for licensing information.
                              *
                              * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                              * no part of this software, including this file, may be copied, modified,
                              * propagated, or distributed except according to the terms contained in the
                              * LICENSE file.
                              *
                              * Removal or modification of this copyright notice is prohibited.
                              *
                              */

var PBKDF2_KEYLEN = 32;
var PBKDF2_HASH_FUNCTION = 'sha256';
var ENCRYPTION_VERSION = '1';

var encryptMessageWithPassphrase = exports.encryptMessageWithPassphrase = function encryptMessageWithPassphrase(message, passphrase, recipientPublicKey) {
	var _getPrivateAndPublicK = (0, _keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),
	    senderPrivateKeyBytes = _getPrivateAndPublicK.privateKey;

	var convertedPrivateKey = (0, _convert.convertPrivateKeyEd2Curve)(senderPrivateKeyBytes);
	var recipientPublicKeyBytes = (0, _convert.hexToBuffer)(recipientPublicKey);
	var convertedPublicKey = (0, _convert.convertPublicKeyEd2Curve)(recipientPublicKeyBytes);
	var messageInBytes = naclInstance.encode_utf8(message);

	var nonce = naclInstance.crypto_box_random_nonce();
	var cipherBytes = naclInstance.crypto_box(messageInBytes, nonce, convertedPublicKey, convertedPrivateKey);

	var nonceHex = (0, _convert.bufferToHex)(nonce);
	var encryptedMessage = (0, _convert.bufferToHex)(cipherBytes);

	return {
		nonce: nonceHex,
		encryptedMessage: encryptedMessage
	};
};

var decryptMessageWithPassphrase = exports.decryptMessageWithPassphrase = function decryptMessageWithPassphrase(cipherHex, nonce, passphrase, senderPublicKey) {
	var _getPrivateAndPublicK2 = (0, _keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),
	    recipientPrivateKeyBytes = _getPrivateAndPublicK2.privateKey;

	var convertedPrivateKey = (0, _convert.convertPrivateKeyEd2Curve)(recipientPrivateKeyBytes);
	var senderPublicKeyBytes = (0, _convert.hexToBuffer)(senderPublicKey);
	var convertedPublicKey = (0, _convert.convertPublicKeyEd2Curve)(senderPublicKeyBytes);
	var cipherBytes = (0, _convert.hexToBuffer)(cipherHex);
	var nonceBytes = (0, _convert.hexToBuffer)(nonce);

	try {
		var decoded = naclInstance.crypto_box_open(cipherBytes, nonceBytes, convertedPublicKey, convertedPrivateKey);
		return naclInstance.decode_utf8(decoded);
	} catch (error) {
		if (error.message.match(/nacl\.crypto_box_open expected 24-byte nonce but got length 1/)) {
			throw new Error('Expected 24-byte nonce but got length 1.');
		}
		throw new Error('Something went wrong during decryption. Is this the full encrypted message?');
	}
};

var getKeyFromPassword = function getKeyFromPassword(password, salt, iterations) {
	return _crypto2.default.pbkdf2Sync(password, salt, iterations || PBKDF2_ITERATIONS, PBKDF2_KEYLEN, PBKDF2_HASH_FUNCTION);
};

var encryptAES256GCMWithPassword = function encryptAES256GCMWithPassword(plainText, password, iterations) {
	var iv = _crypto2.default.randomBytes(12);
	var salt = _crypto2.default.randomBytes(16);
	var key = getKeyFromPassword(password, salt, iterations);

	var cipher = _crypto2.default.createCipheriv('aes-256-gcm', key, iv);
	var firstBlock = cipher.update(plainText, 'utf8');
	var encrypted = Buffer.concat([firstBlock, cipher.final()]);
	var tag = cipher.getAuthTag();

	return {
		iterations: iterations || null,
		cipherText: encrypted.toString('hex'),
		iv: iv.toString('hex'),
		salt: salt.toString('hex'),
		tag: tag.toString('hex'),
		version: ENCRYPTION_VERSION
	};
};

var getTagBuffer = function getTagBuffer(tag) {
	var tagBuffer = (0, _convert.hexToBuffer)(tag);
	if (tagBuffer.length !== 16) {
		throw new Error('Tag must be 16 bytes.');
	}
	return tagBuffer;
};

var decryptAES256GCMWithPassword = function decryptAES256GCMWithPassword(_ref, password) {
	var iterations = _ref.iterations,
	    cipherText = _ref.cipherText,
	    iv = _ref.iv,
	    salt = _ref.salt,
	    tag = _ref.tag;

	var tagBuffer = getTagBuffer(tag);
	var key = getKeyFromPassword(password, (0, _convert.hexToBuffer)(salt), iterations);

	var decipher = _crypto2.default.createDecipheriv('aes-256-gcm', key, (0, _convert.hexToBuffer)(iv));
	decipher.setAuthTag(tagBuffer);
	var firstBlock = decipher.update((0, _convert.hexToBuffer)(cipherText));
	var decrypted = Buffer.concat([firstBlock, decipher.final()]);

	return decrypted.toString();
};

var encryptPassphraseWithPassword = exports.encryptPassphraseWithPassword = encryptAES256GCMWithPassword;

var decryptPassphraseWithPassword = exports.decryptPassphraseWithPassword = decryptAES256GCMWithPassword;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,require("buffer").Buffer)
},{"./convert":18,"./keys":22,"buffer":127,"crypto":244}],20:[function(require,module,exports){
(function (Buffer){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var hash = function hash(data, format) {
	if (Buffer.isBuffer(data)) {
		return Buffer.from(naclInstance.crypto_hash_sha256(data));
	}

	if (typeof data === 'string') {
		if (!['utf8', 'hex'].includes(format)) {
			throw new Error('Unsupported string format. Currently only `hex` and `utf8` are supported.');
		}
		var encoded = format === 'utf8' ? naclInstance.encode_utf8(data) : naclInstance.from_hex(data);
		return Buffer.from(naclInstance.crypto_hash_sha256(encoded));
	}

	throw new Error('Unsupported data format. Currently only Buffers or `hex` and `utf8` strings are supported.');
};

exports.default = hash;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,require("buffer").Buffer)
},{"buffer":127}],21:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _convert = require('./convert');

var convert = _interopRequireWildcard(_convert);

var _encrypt = require('./encrypt');

var encrypt = _interopRequireWildcard(_encrypt);

var _hash = require('./hash');

var _hash2 = _interopRequireDefault(_hash);

var _keys = require('./keys');

var keys = _interopRequireWildcard(_keys);

var _sign = require('./sign');

var sign = _interopRequireWildcard(_sign);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _assign2.default)({}, convert, encrypt, { hash: _hash2.default }, keys, sign); /*
                                                                                                      * Copyright Â© 2018 Lisk Foundation
                                                                                                      *
                                                                                                      * See the LICENSE file at the top-level directory of this distribution
                                                                                                      * for licensing information.
                                                                                                      *
                                                                                                      * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                                                                                                      * no part of this software, including this file, may be copied, modified,
                                                                                                      * propagated, or distributed except according to the terms contained in the
                                                                                                      * LICENSE file.
                                                                                                      *
                                                                                                      * Removal or modification of this copyright notice is prohibited.
                                                                                                      *
                                                                                                      *//* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./convert":18,"./encrypt":19,"./hash":20,"./keys":22,"./sign":23,"babel-runtime/core-js/object/assign":66}],22:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getAddressFromPassphrase = exports.getAddressAndPublicKeyFromPassphrase = exports.getKeys = exports.getPrivateAndPublicKeyFromPassphrase = exports.getPrivateAndPublicKeyBytesFromPassphrase = undefined;

var _convert = require('./convert');

var _hash = require('./hash');

var _hash2 = _interopRequireDefault(_hash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var getPrivateAndPublicKeyBytesFromPassphrase = exports.getPrivateAndPublicKeyBytesFromPassphrase = function getPrivateAndPublicKeyBytesFromPassphrase(passphrase) {
	var hashed = (0, _hash2.default)(passphrase, 'utf8');

	var _naclInstance$crypto_ = naclInstance.crypto_sign_seed_keypair(hashed),
	    signSk = _naclInstance$crypto_.signSk,
	    signPk = _naclInstance$crypto_.signPk;

	return {
		privateKey: signSk,
		publicKey: signPk
	};
};

var getPrivateAndPublicKeyFromPassphrase = exports.getPrivateAndPublicKeyFromPassphrase = function getPrivateAndPublicKeyFromPassphrase(passphrase) {
	var _getPrivateAndPublicK = getPrivateAndPublicKeyBytesFromPassphrase(passphrase),
	    privateKey = _getPrivateAndPublicK.privateKey,
	    publicKey = _getPrivateAndPublicK.publicKey;

	return {
		privateKey: (0, _convert.bufferToHex)(privateKey),
		publicKey: (0, _convert.bufferToHex)(publicKey)
	};
};

var getKeys = exports.getKeys = getPrivateAndPublicKeyFromPassphrase;

var getAddressAndPublicKeyFromPassphrase = exports.getAddressAndPublicKeyFromPassphrase = function getAddressAndPublicKeyFromPassphrase(passphrase) {
	var _getKeys = getKeys(passphrase),
	    publicKey = _getKeys.publicKey;

	var address = (0, _convert.getAddressFromPublicKey)(publicKey);

	return {
		address: address,
		publicKey: publicKey
	};
};

var getAddressFromPassphrase = exports.getAddressFromPassphrase = function getAddressFromPassphrase(passphrase) {
	var _getKeys2 = getKeys(passphrase),
	    publicKey = _getKeys2.publicKey;

	return (0, _convert.getAddressFromPublicKey)(publicKey);
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./convert":18,"./hash":20}],23:[function(require,module,exports){
(function (Buffer){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.verifyData = exports.signData = exports.signDataWithPassphrase = exports.signDataWithPrivateKey = exports.signAndPrintMessage = exports.printSignedMessage = exports.verifyMessageWithTwoPublicKeys = exports.signMessageWithTwoPassphrases = exports.verifyMessageWithPublicKey = exports.signMessageWithPassphrase = undefined;

var _convert = require('./convert');

var _keys = require('./keys');

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var createHeader = function createHeader(text) {
	return '-----' + text + '-----';
};
var signedMessageHeader = createHeader('BEGIN LISK SIGNED MESSAGE');
var messageHeader = createHeader('MESSAGE');
var publicKeyHeader = createHeader('PUBLIC KEY');
var secondPublicKeyHeader = createHeader('SECOND PUBLIC KEY');
var signatureHeader = createHeader('SIGNATURE');
var secondSignatureHeader = createHeader('SECOND SIGNATURE');
var signatureFooter = createHeader('END LISK SIGNED MESSAGE');

var signMessageWithPassphrase = exports.signMessageWithPassphrase = function signMessageWithPassphrase(message, passphrase) {
	var msgBytes = Buffer.from(message, 'utf8');

	var _getPrivateAndPublicK = (0, _keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),
	    privateKey = _getPrivateAndPublicK.privateKey,
	    publicKey = _getPrivateAndPublicK.publicKey;

	var signature = naclInstance.crypto_sign_detached(msgBytes, privateKey);

	return {
		message: message,
		publicKey: (0, _convert.bufferToHex)(publicKey),
		signature: (0, _convert.bufferToHex)(signature)
	};
};

var verifyMessageWithPublicKey = exports.verifyMessageWithPublicKey = function verifyMessageWithPublicKey(_ref) {
	var message = _ref.message,
	    signature = _ref.signature,
	    publicKey = _ref.publicKey;

	var msgBytes = Buffer.from(message, 'utf8');
	var signatureBytes = (0, _convert.hexToBuffer)(signature);
	var publicKeyBytes = (0, _convert.hexToBuffer)(publicKey);

	if (publicKeyBytes.length !== 32) {
		throw new Error('Invalid publicKey, expected 32-byte publicKey');
	}

	if (signatureBytes.length !== naclInstance.crypto_sign_BYTES) {
		throw new Error('Invalid signature length, expected 64-byte signature');
	}

	return naclInstance.crypto_sign_verify_detached(signatureBytes, msgBytes, publicKeyBytes);
};

var signMessageWithTwoPassphrases = exports.signMessageWithTwoPassphrases = function signMessageWithTwoPassphrases(message, passphrase, secondPassphrase) {
	var msgBytes = Buffer.from(message, 'utf8');
	var keypairBytes = (0, _keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase);
	var secondKeypairBytes = (0, _keys.getPrivateAndPublicKeyBytesFromPassphrase)(secondPassphrase);

	var signature = naclInstance.crypto_sign_detached(msgBytes, keypairBytes.privateKey);
	var secondSignature = naclInstance.crypto_sign_detached(msgBytes, secondKeypairBytes.privateKey);

	return {
		message: message,
		publicKey: (0, _convert.bufferToHex)(keypairBytes.publicKey),
		secondPublicKey: (0, _convert.bufferToHex)(secondKeypairBytes.publicKey),
		signature: (0, _convert.bufferToHex)(signature),
		secondSignature: (0, _convert.bufferToHex)(secondSignature)
	};
};

var verifyMessageWithTwoPublicKeys = exports.verifyMessageWithTwoPublicKeys = function verifyMessageWithTwoPublicKeys(_ref2) {
	var message = _ref2.message,
	    signature = _ref2.signature,
	    secondSignature = _ref2.secondSignature,
	    publicKey = _ref2.publicKey,
	    secondPublicKey = _ref2.secondPublicKey;

	var messageBytes = Buffer.from(message, 'utf8');
	var signatureBytes = (0, _convert.hexToBuffer)(signature);
	var secondSignatureBytes = (0, _convert.hexToBuffer)(secondSignature);
	var publicKeyBytes = (0, _convert.hexToBuffer)(publicKey);
	var secondPublicKeyBytes = (0, _convert.hexToBuffer)(secondPublicKey);

	if (signatureBytes.length !== naclInstance.crypto_sign_BYTES) {
		throw new Error('Invalid first signature length, expected 64-byte signature');
	}

	if (secondSignatureBytes.length !== naclInstance.crypto_sign_BYTES) {
		throw new Error('Invalid second signature length, expected 64-byte signature');
	}

	if (publicKeyBytes.length !== 32) {
		throw new Error('Invalid first publicKey, expected 32-byte publicKey');
	}

	if (secondPublicKeyBytes.length !== 32) {
		throw new Error('Invalid second publicKey, expected 32-byte publicKey');
	}

	var verifyFirstSignature = function verifyFirstSignature() {
		return naclInstance.crypto_sign_verify_detached(signatureBytes, messageBytes, publicKeyBytes);
	};
	var verifySecondSignature = function verifySecondSignature() {
		return naclInstance.crypto_sign_verify_detached(secondSignatureBytes, messageBytes, secondPublicKeyBytes);
	};

	return verifyFirstSignature() && verifySecondSignature();
};

var printSignedMessage = exports.printSignedMessage = function printSignedMessage(_ref3) {
	var message = _ref3.message,
	    signature = _ref3.signature,
	    publicKey = _ref3.publicKey,
	    secondSignature = _ref3.secondSignature,
	    secondPublicKey = _ref3.secondPublicKey;
	return [signedMessageHeader, messageHeader, message, publicKeyHeader, publicKey, secondPublicKey ? secondPublicKeyHeader : null, secondPublicKey, signatureHeader, signature, secondSignature ? secondSignatureHeader : null, secondSignature, signatureFooter].filter(Boolean).join('\n');
};

var signAndPrintMessage = exports.signAndPrintMessage = function signAndPrintMessage(message, passphrase, secondPassphrase) {
	var signedMessage = secondPassphrase ? signMessageWithTwoPassphrases(message, passphrase, secondPassphrase) : signMessageWithPassphrase(message, passphrase);

	return printSignedMessage(signedMessage);
};

var signDataWithPrivateKey = exports.signDataWithPrivateKey = function signDataWithPrivateKey(data, privateKey) {
	var signature = naclInstance.crypto_sign_detached(data, privateKey);
	return (0, _convert.bufferToHex)(signature);
};

var signDataWithPassphrase = exports.signDataWithPassphrase = function signDataWithPassphrase(data, passphrase) {
	var _getPrivateAndPublicK2 = (0, _keys.getPrivateAndPublicKeyBytesFromPassphrase)(passphrase),
	    privateKey = _getPrivateAndPublicK2.privateKey;

	return signDataWithPrivateKey(data, privateKey);
};

var signData = exports.signData = signDataWithPassphrase;

var verifyData = exports.verifyData = function verifyData(data, signature, publicKey) {
	return naclInstance.crypto_sign_verify_detached((0, _convert.hexToBuffer)(signature), data, (0, _convert.hexToBuffer)(publicKey));
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,require("buffer").Buffer)
},{"./convert":18,"./keys":22,"buffer":127}],24:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsNacl = require('js-nacl');

var _jsNacl2 = _interopRequireDefault(_jsNacl);

var _api_client = require('./api_client');

var _api_client2 = _interopRequireDefault(_api_client);

var _cryptography = require('./cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _liskConstants = require('./lisk-constants');

var constants = _interopRequireWildcard(_liskConstants);

var _passphrase = require('./passphrase');

var _passphrase2 = _interopRequireDefault(_passphrase);

var _transactions = require('./transactions');

var _transactions2 = _interopRequireDefault(_transactions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
global.naclFactory = _jsNacl2.default;

global.naclInstance = null;
_jsNacl2.default.instantiate(function (nacl) {
  naclInstance = nacl;
});

exports.default = {
  APIClient: _api_client2.default,
  cryptography: _cryptography2.default,
  passphrase: _passphrase2.default,
  transaction: _transactions2.default,
  constants: constants
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./api_client":5,"./cryptography":21,"./lisk-constants":25,"./passphrase":26,"./transactions":36,"js-nacl":293}],25:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var EPOCH_TIME = exports.EPOCH_TIME = new Date(Date.UTC(2016, 4, 24, 17, 0, 0, 0));
var EPOCH_TIME_MILLISECONDS = exports.EPOCH_TIME_MILLISECONDS = EPOCH_TIME.getTime();
var EPOCH_TIME_SECONDS = exports.EPOCH_TIME_SECONDS = Math.floor(EPOCH_TIME.getTime() / 1000);

// Largest possible address. Derived from bignum.fromBuffer(Buffer.from(new Array(8).fill(255))).
var MAX_ADDRESS_NUMBER = exports.MAX_ADDRESS_NUMBER = '18446744073709551615';
// Largest possible amount. Derived from bignum.fromBuffer(Buffer.from(new Array(8).fill(255))).
var MAX_TRANSACTION_AMOUNT = exports.MAX_TRANSACTION_AMOUNT = '18446744073709551615';

var BETANET_NETHASH = exports.BETANET_NETHASH = 'ef3844327d1fd0fc5785291806150c937797bdb34a748c9cd932b7e859e9ca0c';
var TESTNET_NETHASH = exports.TESTNET_NETHASH = 'da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba';
var MAINNET_NETHASH = exports.MAINNET_NETHASH = 'ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511';/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{}],26:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bip = require('bip39');

var _bip2 = _interopRequireDefault(_bip);

var _validation = require('./validation');

var validation = _interopRequireWildcard(_validation);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
exports.default = {
  Mnemonic: _bip2.default,
  validation: validation
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./validation":27,"bip39":85}],27:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getPassphraseValidationErrors = exports.locateConsecutiveWhitespaces = exports.locateUppercaseCharacters = exports.countUppercaseCharacters = exports.countPassphraseWords = exports.countPassphraseWhitespaces = undefined;

var _bip = require('bip39');

var _bip2 = _interopRequireDefault(_bip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var whitespaceRegExp = /\s/g; /*
                               * Copyright Â© 2018 Lisk Foundation
                               *
                               * See the LICENSE file at the top-level directory of this distribution
                               * for licensing information.
                               *
                               * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
                               * no part of this software, including this file, may be copied, modified,
                               * propagated, or distributed except according to the terms contained in the
                               * LICENSE file.
                               *
                               * Removal or modification of this copyright notice is prohibited.
                               *
                               */

var uppercaseRegExp = /[A-Z]/g;

var countPassphraseWhitespaces = exports.countPassphraseWhitespaces = function countPassphraseWhitespaces(passphrase) {
	var whitespaceMatches = passphrase.match(whitespaceRegExp);
	return whitespaceMatches ? whitespaceMatches.length : 0;
};

var countPassphraseWords = exports.countPassphraseWords = function countPassphraseWords(passphrase) {
	return passphrase.split(' ').filter(Boolean).length;
};

var countUppercaseCharacters = exports.countUppercaseCharacters = function countUppercaseCharacters(passphrase) {
	var uppercaseCharacterMatches = passphrase.match(uppercaseRegExp) || [];
	return uppercaseCharacterMatches.length;
};

var locateUppercaseCharacters = exports.locateUppercaseCharacters = function locateUppercaseCharacters(passphrase) {
	var positions = [];
	for (var i = 0; i < passphrase.length; i += 1) {
		if (passphrase[i].match(uppercaseRegExp) !== null) {
			positions.push(i);
		}
	}
	return positions;
};

var locateConsecutiveWhitespaces = exports.locateConsecutiveWhitespaces = function locateConsecutiveWhitespaces(passphrase) {
	var positions = [];
	var passphraseLength = passphrase.length;
	var lastIndex = passphraseLength - 1;
	if (passphrase[0].match(whitespaceRegExp) !== null) {
		positions.push(0);
	}

	for (var i = 1; i < lastIndex; i += 1) {
		if (passphrase[i].match(whitespaceRegExp) && passphrase[i - 1].match(whitespaceRegExp)) {
			positions.push(i);
		}
	}

	if (passphrase[lastIndex].match(whitespaceRegExp) !== null) {
		positions.push(lastIndex);
	}

	return positions;
};

var getPassphraseValidationErrors = exports.getPassphraseValidationErrors = function getPassphraseValidationErrors(passphrase, wordlist) {
	var expectedWords = 12;
	var expectedWhitespaces = 11;
	var expectedUppercaseCharacterCount = 0;
	var wordsInPassphrase = countPassphraseWords(passphrase);
	var whiteSpacesInPassphrase = countPassphraseWhitespaces(passphrase);
	var uppercaseCharacterInPassphrase = countUppercaseCharacters(passphrase);
	var errors = [];

	if (wordsInPassphrase !== expectedWords) {
		var passphraseWordError = {
			code: 'INVALID_AMOUNT_OF_WORDS',
			message: 'Passphrase contains ' + wordsInPassphrase + ' words instead of expected ' + expectedWords + '. Please check the passphrase.',
			expected: expectedWords,
			actual: wordsInPassphrase
		};
		errors.push(passphraseWordError);
	}

	if (whiteSpacesInPassphrase > expectedWhitespaces) {
		var whiteSpaceError = {
			code: 'INVALID_AMOUNT_OF_WHITESPACES',
			message: 'Passphrase contains ' + whiteSpacesInPassphrase + ' whitespaces instead of expected ' + expectedWhitespaces + '. Please check the passphrase.',
			expected: expectedWhitespaces,
			actual: whiteSpacesInPassphrase,
			location: locateConsecutiveWhitespaces(passphrase)
		};
		errors.push(whiteSpaceError);
	}

	if (uppercaseCharacterInPassphrase !== expectedUppercaseCharacterCount) {
		var uppercaseCharacterError = {
			code: 'INVALID_AMOUNT_OF_UPPERCASE_CHARACTER',
			message: 'Passphrase contains ' + uppercaseCharacterInPassphrase + ' uppercase character instead of expected ' + expectedUppercaseCharacterCount + '. Please check the passphrase.',
			expected: expectedUppercaseCharacterCount,
			actual: uppercaseCharacterInPassphrase,
			location: locateUppercaseCharacters(passphrase)
		};
		errors.push(uppercaseCharacterError);
	}

	if (!_bip2.default.validateMnemonic(passphrase, wordlist || _bip2.default.wordlists.english)) {
		var validationError = {
			code: 'INVALID_MNEMONIC',
			message: 'Passphrase is not a valid mnemonic passphrase. Please check the passphrase.',
			expected: true,
			actual: false
		};
		errors.push(validationError);
	}

	return errors;
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"bip39":85}],28:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _constants = require('./constants');

var _utils = require('./utils');

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var createAsset = function createAsset(data) {
	if (data && data.length > 0) {
		if (data !== data.toString('utf8')) throw new Error('Invalid encoding in transaction data. Data must be utf-8 encoded.');
		return { data: data };
	}
	return {};
};

var transfer = function transfer(_ref) {
	var amount = _ref.amount,
	    recipientId = _ref.recipientId,
	    recipientPublicKey = _ref.recipientPublicKey,
	    data = _ref.data;

	var _getAddressAndPublicK = (0, _utils.getAddressAndPublicKeyFromRecipientData)({
		recipientId: recipientId,
		recipientPublicKey: recipientPublicKey
	}),
	    address = _getAddressAndPublicK.address,
	    publicKey = _getAddressAndPublicK.publicKey;

	var fee = data ? _constants.TRANSFER_FEE + _constants.DATA_FEE : _constants.TRANSFER_FEE;

	var transaction = {
		type: 0,
		amount: amount.toString(),
		fee: fee.toString(),
		recipientId: address,
		recipientPublicKey: publicKey,
		asset: createAsset(data)
	};

	return transaction;
};

exports.default = (0, _utils.wrapTransactionCreator)(transfer);/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./constants":34,"./utils":42}],29:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cryptography = require('../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _constants = require('./constants');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var registerSecondPassphrase = function registerSecondPassphrase(_ref) {
  var secondPassphrase = _ref.secondPassphrase;

  var _cryptography$getKeys = _cryptography2.default.getKeys(secondPassphrase),
      publicKey = _cryptography$getKeys.publicKey;

  return {
    type: 1,
    fee: _constants.SIGNATURE_FEE.toString(),
    asset: {
      signature: {
        publicKey: publicKey
      }
    }
  };
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */
exports.default = (0, _utils.wrapTransactionCreator)(registerSecondPassphrase);/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../cryptography":21,"./constants":34,"./utils":42}],30:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _constants = require('./constants');

var _utils = require('./utils');

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var registerDelegate = function registerDelegate(_ref) {
  var username = _ref.username;
  return {
    type: 2,
    fee: _constants.DELEGATE_FEE.toString(),
    asset: {
      delegate: {
        username: username
      }
    }
  };
};

exports.default = (0, _utils.wrapTransactionCreator)(registerDelegate);/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./constants":34,"./utils":42}],31:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _cryptography = require('../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _constants = require('./constants');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var castVotes = function castVotes(_ref) {
	var passphrase = _ref.passphrase,
	    _ref$votes = _ref.votes,
	    votes = _ref$votes === undefined ? [] : _ref$votes,
	    _ref$unvotes = _ref.unvotes,
	    unvotes = _ref$unvotes === undefined ? [] : _ref$unvotes;

	(0, _utils.validatePublicKeys)([].concat((0, _toConsumableArray3.default)(votes), (0, _toConsumableArray3.default)(unvotes)));

	var recipientId = passphrase ? _cryptography2.default.getAddressAndPublicKeyFromPassphrase(passphrase).address : null;

	var plusPrependedVotes = (0, _utils.prependPlusToPublicKeys)(votes);
	var minusPrependedUnvotes = (0, _utils.prependMinusToPublicKeys)(unvotes);
	var allVotes = [].concat((0, _toConsumableArray3.default)(plusPrependedVotes), (0, _toConsumableArray3.default)(minusPrependedUnvotes));

	return {
		type: 3,
		fee: _constants.VOTE_FEE.toString(),
		recipientId: recipientId,
		asset: {
			votes: allVotes
		}
	};
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */
exports.default = (0, _utils.wrapTransactionCreator)(castVotes);/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../cryptography":21,"./constants":34,"./utils":42,"babel-runtime/helpers/toConsumableArray":82}],32:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _constants = require('./constants');

var _utils = require('./utils');

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var registerMultisignatureAccount = function registerMultisignatureAccount(_ref) {
	var keysgroup = _ref.keysgroup,
	    lifetime = _ref.lifetime,
	    minimum = _ref.minimum;

	(0, _utils.validateKeysgroup)(keysgroup);

	var plusPrependedKeysgroup = (0, _utils.prependPlusToPublicKeys)(keysgroup);
	var keygroupFees = plusPrependedKeysgroup.length + 1;

	return {
		type: 4,
		fee: (_constants.MULTISIGNATURE_FEE * keygroupFees).toString(),
		asset: {
			multisignature: {
				min: minimum,
				lifetime: lifetime,
				keysgroup: plusPrependedKeysgroup
			}
		}
	};
};

exports.default = (0, _utils.wrapTransactionCreator)(registerMultisignatureAccount);/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./constants":34,"./utils":42}],33:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _constants = require('./constants');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var isInt = function isInt(n) {
	return parseInt(n, 10) === n;
};

var validateOptions = function validateOptions(options) {
	if ((typeof options === 'undefined' ? 'undefined' : (0, _typeof3.default)(options)) !== 'object') {
		throw new Error('Options must be an object.');
	}
	var category = options.category,
	    name = options.name,
	    type = options.type,
	    link = options.link;


	if (!isInt(category)) {
		throw new Error('Dapp category must be an integer.');
	}
	if (typeof name !== 'string') {
		throw new Error('Dapp name must be a string.');
	}
	if (!isInt(type)) {
		throw new Error('Dapp type must be an integer.');
	}
	if (typeof link !== 'string') {
		throw new Error('Dapp link must be a string.');
	}
};

var createDapp = function createDapp(_ref) {
	var options = _ref.options;

	validateOptions(options);

	return {
		type: 5,
		fee: _constants.DAPP_FEE.toString(),
		asset: {
			dapp: {
				category: options.category,
				name: options.name,
				description: options.description,
				tags: options.tags,
				type: options.type,
				link: options.link,
				icon: options.icon
			}
		}
	};
};

exports.default = (0, _utils.wrapTransactionCreator)(createDapp);/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./constants":34,"./utils":42,"babel-runtime/helpers/typeof":83}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */

var FIXED_POINT = exports.FIXED_POINT = Math.pow(10, 8);

var TRANSFER_FEE = exports.TRANSFER_FEE = 0.1 * FIXED_POINT;
var DATA_FEE = exports.DATA_FEE = 0.1 * FIXED_POINT;
var IN_TRANSFER_FEE = exports.IN_TRANSFER_FEE = 0.1 * FIXED_POINT;
var OUT_TRANSFER_FEE = exports.OUT_TRANSFER_FEE = 0.1 * FIXED_POINT;
var SIGNATURE_FEE = exports.SIGNATURE_FEE = 5 * FIXED_POINT;
var DELEGATE_FEE = exports.DELEGATE_FEE = 25 * FIXED_POINT;
var VOTE_FEE = exports.VOTE_FEE = 1 * FIXED_POINT;
var MULTISIGNATURE_FEE = exports.MULTISIGNATURE_FEE = 5 * FIXED_POINT;
var DAPP_FEE = exports.DAPP_FEE = 25 * FIXED_POINT;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{}],35:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cryptography = require('../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var createSignatureObject = function createSignatureObject(transaction, passphrase) {
  if (!(0, _utils.verifyTransaction)(transaction)) {
    throw new Error('Invalid transaction.');
  }

  var _cryptography$getPriv = _cryptography2.default.getPrivateAndPublicKeyFromPassphrase(passphrase),
      publicKey = _cryptography$getPriv.publicKey;

  return {
    transactionId: transaction.id,
    publicKey: publicKey,
    signature: (0, _utils.multiSignTransaction)(transaction, passphrase)
  };
};

exports.default = createSignatureObject;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../cryptography":21,"./utils":42}],36:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _transfer = require('./0_transfer');

var _transfer2 = _interopRequireDefault(_transfer);

var _register_second_passphrase = require('./1_register_second_passphrase');

var _register_second_passphrase2 = _interopRequireDefault(_register_second_passphrase);

var _register_delegate = require('./2_register_delegate');

var _register_delegate2 = _interopRequireDefault(_register_delegate);

var _cast_votes = require('./3_cast_votes');

var _cast_votes2 = _interopRequireDefault(_cast_votes);

var _register_multisignature_account = require('./4_register_multisignature_account');

var _register_multisignature_account2 = _interopRequireDefault(_register_multisignature_account);

var _create_dapp = require('./5_create_dapp');

var _create_dapp2 = _interopRequireDefault(_create_dapp);

var _create_signature_object = require('./create_signature_object');

var _create_signature_object2 = _interopRequireDefault(_create_signature_object);

var _utils = require('./utils');

var utils = _interopRequireWildcard(_utils);

var _constants = require('./constants');

var constants = _interopRequireWildcard(_constants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  transfer: _transfer2.default,
  registerSecondPassphrase: _register_second_passphrase2.default,
  registerDelegate: _register_delegate2.default,
  castVotes: _cast_votes2.default,
  registerMultisignature: _register_multisignature_account2.default,
  createSignatureObject: _create_signature_object2.default,
  createDapp: _create_dapp2.default,
  utils: utils,
  constants: constants
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    *//* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./0_transfer":28,"./1_register_second_passphrase":29,"./2_register_delegate":30,"./3_cast_votes":31,"./4_register_multisignature_account":32,"./5_create_dapp":33,"./constants":34,"./create_signature_object":35,"./utils":42}],37:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */

var prependPlusToPublicKeys = exports.prependPlusToPublicKeys = function prependPlusToPublicKeys(publicKeys) {
  return publicKeys.map(function (publicKey) {
    return "+" + publicKey;
  });
};

var prependMinusToPublicKeys = exports.prependMinusToPublicKeys = function prependMinusToPublicKeys(publicKeys) {
  return publicKeys.map(function (publicKey) {
    return "-" + publicKey;
  });
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{}],38:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getAddressAndPublicKeyFromRecipientData = function getAddressAndPublicKeyFromRecipientData(_ref) {
	var recipientId = _ref.recipientId,
	    recipientPublicKey = _ref.recipientPublicKey;

	if (recipientId && recipientPublicKey) {
		var addressFromPublicKey = _cryptography2.default.getAddressFromPublicKey(recipientPublicKey);
		if (recipientId === addressFromPublicKey) {
			return { address: recipientId, publicKey: recipientPublicKey };
		}
		throw new Error('Could not create transaction: recipientId does not match recipientPublicKey.');
	}

	if (!recipientId && recipientPublicKey) {
		var _addressFromPublicKey = _cryptography2.default.getAddressFromPublicKey(recipientPublicKey);
		return { address: _addressFromPublicKey, publicKey: recipientPublicKey };
	}

	return { address: recipientId, publicKey: null };
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */
exports.default = getAddressAndPublicKeyFromRecipientData;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography":21}],39:[function(require,module,exports){
(function (Buffer){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.checkTransaction = exports.getAssetBytes = exports.getAssetDataForTransferOutOfDappTransaction = exports.getAssetDataForTransferIntoDappTransaction = exports.getAssetDataForCreateDappTransaction = exports.getAssetDataForRegisterMultisignatureAccountTransaction = exports.getAssetDataForCastVotesTransaction = exports.getAssetDataForRegisterDelegateTransaction = exports.getAssetDataForRegisterSecondSignatureTransaction = exports.getAssetDataForTransferTransaction = exports.checkRequiredFields = exports.BYTESIZES = exports.isValidValue = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _browserifyBignum = require('browserify-bignum');

var _browserifyBignum2 = _interopRequireDefault(_browserifyBignum);

var _liskConstants = require('../../lisk-constants');

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isValidValue = exports.isValidValue = function isValidValue(value) {
	return ![undefined, false, NaN].includes(value);
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */
var BYTESIZES = exports.BYTESIZES = {
	TYPE: 1,
	TIMESTAMP: 4,
	MULTISIGNATURE_PUBLICKEY: 32,
	RECIPIENT_ID: 8,
	AMOUNT: 8,
	SIGNATURE_TRANSACTION: 64,
	SECOND_SIGNATURE_TRANSACTION: 64,
	DATA: 64
};

var checkRequiredFields = exports.checkRequiredFields = function checkRequiredFields(requiredFields, data) {
	var dataFields = (0, _keys2.default)(data);
	requiredFields.forEach(function (parameter) {
		if (!dataFields.includes(parameter.toString()) || !isValidValue(data[parameter])) {
			throw new Error(parameter + ' is a required parameter.');
		}
	});
	return true;
};

var getAssetDataForTransferTransaction = exports.getAssetDataForTransferTransaction = function getAssetDataForTransferTransaction(_ref) {
	var data = _ref.data;
	return data ? Buffer.from(data, 'utf8') : Buffer.alloc(0);
};

var getAssetDataForRegisterSecondSignatureTransaction = exports.getAssetDataForRegisterSecondSignatureTransaction = function getAssetDataForRegisterSecondSignatureTransaction(_ref2) {
	var signature = _ref2.signature;

	checkRequiredFields(['publicKey'], signature);
	var publicKey = signature.publicKey;

	return _cryptography2.default.hexToBuffer(publicKey);
};

var getAssetDataForRegisterDelegateTransaction = exports.getAssetDataForRegisterDelegateTransaction = function getAssetDataForRegisterDelegateTransaction(_ref3) {
	var delegate = _ref3.delegate;

	checkRequiredFields(['username'], delegate);
	var username = delegate.username;

	return Buffer.from(username, 'utf8');
};

var getAssetDataForCastVotesTransaction = exports.getAssetDataForCastVotesTransaction = function getAssetDataForCastVotesTransaction(_ref4) {
	var votes = _ref4.votes;

	if (!Array.isArray(votes)) {
		throw new Error('votes parameter must be an Array.');
	}
	return Buffer.from(votes.join(''), 'utf8');
};

var getAssetDataForRegisterMultisignatureAccountTransaction = exports.getAssetDataForRegisterMultisignatureAccountTransaction = function getAssetDataForRegisterMultisignatureAccountTransaction(_ref5) {
	var multisignature = _ref5.multisignature;

	checkRequiredFields(['min', 'lifetime', 'keysgroup'], multisignature);
	var min = multisignature.min,
	    lifetime = multisignature.lifetime,
	    keysgroup = multisignature.keysgroup;

	var minBuffer = Buffer.alloc(1, min);
	var lifetimeBuffer = Buffer.alloc(1, lifetime);
	var keysgroupBuffer = Buffer.from(keysgroup.join(''), 'utf8');

	return Buffer.concat([minBuffer, lifetimeBuffer, keysgroupBuffer]);
};

var getAssetDataForCreateDappTransaction = exports.getAssetDataForCreateDappTransaction = function getAssetDataForCreateDappTransaction(_ref6) {
	var dapp = _ref6.dapp;

	checkRequiredFields(['name', 'link', 'type', 'category'], dapp);
	var name = dapp.name,
	    description = dapp.description,
	    tags = dapp.tags,
	    link = dapp.link,
	    icon = dapp.icon,
	    type = dapp.type,
	    category = dapp.category;

	var nameBuffer = Buffer.from(name, 'utf8');
	var linkBuffer = Buffer.from(link, 'utf8');
	var typeBuffer = Buffer.alloc(4);
	typeBuffer.writeIntLE(type, 0);
	var categoryBuffer = Buffer.alloc(4);
	categoryBuffer.writeIntLE(category, 0);

	var descriptionBuffer = description ? Buffer.from(description, 'utf8') : Buffer.alloc(0);
	var tagsBuffer = tags ? Buffer.from(tags, 'utf8') : Buffer.alloc(0);
	var iconBuffer = icon ? Buffer.from(icon, 'utf8') : Buffer.alloc(0);

	return Buffer.concat([nameBuffer, descriptionBuffer, tagsBuffer, linkBuffer, iconBuffer, typeBuffer, categoryBuffer]);
};

var getAssetDataForTransferIntoDappTransaction = exports.getAssetDataForTransferIntoDappTransaction = function getAssetDataForTransferIntoDappTransaction(_ref7) {
	var inTransfer = _ref7.inTransfer;

	checkRequiredFields(['dappId'], inTransfer);
	var dappId = inTransfer.dappId;

	return Buffer.from(dappId, 'utf8');
};

var getAssetDataForTransferOutOfDappTransaction = exports.getAssetDataForTransferOutOfDappTransaction = function getAssetDataForTransferOutOfDappTransaction(_ref8) {
	var outTransfer = _ref8.outTransfer;

	checkRequiredFields(['dappId', 'transactionId'], outTransfer);
	var dappId = outTransfer.dappId,
	    transactionId = outTransfer.transactionId;

	var outAppIdBuffer = Buffer.from(dappId, 'utf8');
	var outTransactionIdBuffer = Buffer.from(transactionId, 'utf8');

	return Buffer.concat([outAppIdBuffer, outTransactionIdBuffer]);
};

var getAssetBytes = exports.getAssetBytes = function getAssetBytes(transaction) {
	return {
		0: getAssetDataForTransferTransaction,
		1: getAssetDataForRegisterSecondSignatureTransaction,
		2: getAssetDataForRegisterDelegateTransaction,
		3: getAssetDataForCastVotesTransaction,
		4: getAssetDataForRegisterMultisignatureAccountTransaction,
		5: getAssetDataForCreateDappTransaction,
		6: getAssetDataForTransferIntoDappTransaction,
		7: getAssetDataForTransferOutOfDappTransaction
	}[transaction.type](transaction.asset);
};

var REQUIRED_TRANSACTION_PARAMETERS = ['type', 'timestamp', 'senderPublicKey', 'amount'];

var checkTransaction = exports.checkTransaction = function checkTransaction(transaction) {
	checkRequiredFields(REQUIRED_TRANSACTION_PARAMETERS, transaction);
	var data = transaction.asset.data;

	if (data && data.length > BYTESIZES.DATA) {
		throw new Error('Transaction asset data exceeds size of ' + BYTESIZES.DATA + '.');
	}
	return true;
};

var getTransactionBytes = function getTransactionBytes(transaction) {
	checkTransaction(transaction);

	var type = transaction.type,
	    timestamp = transaction.timestamp,
	    requesterPublicKey = transaction.requesterPublicKey,
	    senderPublicKey = transaction.senderPublicKey,
	    recipientId = transaction.recipientId,
	    amount = transaction.amount,
	    signature = transaction.signature,
	    signSignature = transaction.signSignature;


	var transactionType = Buffer.alloc(BYTESIZES.TYPE, type);
	var transactionTimestamp = Buffer.alloc(BYTESIZES.TIMESTAMP);
	transactionTimestamp.writeIntLE(timestamp, 0, BYTESIZES.TIMESTAMP);

	var transactionSenderPublicKey = _cryptography2.default.hexToBuffer(senderPublicKey);
	var transactionRequesterPublicKey = requesterPublicKey ? _cryptography2.default.hexToBuffer(requesterPublicKey) : Buffer.alloc(0);

	var transactionRecipientID = recipientId ? _cryptography2.default.bigNumberToBuffer(recipientId.slice(0, -1), BYTESIZES.RECIPIENT_ID) : Buffer.alloc(BYTESIZES.RECIPIENT_ID);

	var amountBigNum = (0, _browserifyBignum2.default)(amount);
	if (amountBigNum.lt(0)) {
		throw new Error('Transaction amount must not be negative.');
	}
	// BUG in browserify-bignum prevents us using `.gt` directly.
	// See https://github.com/bored-engineer/browserify-bignum/pull/2
	if (amountBigNum.gte((0, _browserifyBignum2.default)(_liskConstants.MAX_TRANSACTION_AMOUNT).plus(1))) {
		throw new Error('Transaction amount is too large.');
	}
	var transactionAmount = amountBigNum.toBuffer({
		endian: 'little',
		size: BYTESIZES.AMOUNT
	});

	var transactionAssetData = getAssetBytes(transaction);

	var transactionSignature = signature ? _cryptography2.default.hexToBuffer(signature) : Buffer.alloc(0);

	var transactionSecondSignature = signSignature ? _cryptography2.default.hexToBuffer(signSignature) : Buffer.alloc(0);

	return Buffer.concat([transactionType, transactionTimestamp, transactionSenderPublicKey, transactionRequesterPublicKey, transactionRecipientID, transactionAmount, transactionAssetData, transactionSignature, transactionSecondSignature]);
};

exports.default = getTransactionBytes;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

}).call(this,require("buffer").Buffer)
},{"../../cryptography":21,"../../lisk-constants":25,"babel-runtime/core-js/object/keys":71,"browserify-bignum":113,"buffer":127}],40:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _get_transaction_bytes = require('./get_transaction_bytes');

var _get_transaction_bytes2 = _interopRequireDefault(_get_transaction_bytes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var getTransactionHash = function getTransactionHash(transaction) {
  var bytes = (0, _get_transaction_bytes2.default)(transaction);
  return _cryptography2.default.hash(bytes);
};

exports.default = getTransactionHash;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography":21,"./get_transaction_bytes":39}],41:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _get_transaction_bytes = require('./get_transaction_bytes');

var _get_transaction_bytes2 = _interopRequireDefault(_get_transaction_bytes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var getTransactionId = function getTransactionId(transaction) {
  var transactionBytes = (0, _get_transaction_bytes2.default)(transaction);
  var transactionHash = _cryptography2.default.hash(transactionBytes);
  var bufferFromFirstEntriesReversed = _cryptography2.default.getFirstEightBytesReversed(transactionHash);
  var firstEntriesToNumber = _cryptography2.default.bufferToBigNumberString(bufferFromFirstEntriesReversed);

  return firstEntriesToNumber;
};

exports.default = getTransactionId;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography":21,"./get_transaction_bytes":39}],42:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get_address_and_public_key_from_recipient_data = require('./get_address_and_public_key_from_recipient_data');

Object.defineProperty(exports, 'getAddressAndPublicKeyFromRecipientData', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_get_address_and_public_key_from_recipient_data).default;
  }
});

var _get_transaction_bytes = require('./get_transaction_bytes');

Object.defineProperty(exports, 'getTransactionBytes', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_get_transaction_bytes).default;
  }
});

var _get_transaction_hash = require('./get_transaction_hash');

Object.defineProperty(exports, 'getTransactionHash', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_get_transaction_hash).default;
  }
});

var _get_transaction_id = require('./get_transaction_id');

Object.defineProperty(exports, 'getTransactionId', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_get_transaction_id).default;
  }
});

var _format = require('./format');

Object.defineProperty(exports, 'prependPlusToPublicKeys', {
  enumerable: true,
  get: function get() {
    return _format.prependPlusToPublicKeys;
  }
});
Object.defineProperty(exports, 'prependMinusToPublicKeys', {
  enumerable: true,
  get: function get() {
    return _format.prependMinusToPublicKeys;
  }
});

var _prepare_transaction = require('./prepare_transaction');

Object.defineProperty(exports, 'prepareTransaction', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_prepare_transaction).default;
  }
});

var _sign_and_verify = require('./sign_and_verify');

Object.defineProperty(exports, 'signTransaction', {
  enumerable: true,
  get: function get() {
    return _sign_and_verify.signTransaction;
  }
});
Object.defineProperty(exports, 'multiSignTransaction', {
  enumerable: true,
  get: function get() {
    return _sign_and_verify.multiSignTransaction;
  }
});
Object.defineProperty(exports, 'verifyTransaction', {
  enumerable: true,
  get: function get() {
    return _sign_and_verify.verifyTransaction;
  }
});

var _sign_raw_transaction = require('./sign_raw_transaction');

Object.defineProperty(exports, 'signRawTransaction', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_sign_raw_transaction).default;
  }
});

var _time = require('./time');

Object.defineProperty(exports, 'getTimeFromBlockchainEpoch', {
  enumerable: true,
  get: function get() {
    return _time.getTimeFromBlockchainEpoch;
  }
});
Object.defineProperty(exports, 'getTimeWithOffset', {
  enumerable: true,
  get: function get() {
    return _time.getTimeWithOffset;
  }
});

var _validation = require('./validation');

Object.defineProperty(exports, 'checkPublicKeysForDuplicates', {
  enumerable: true,
  get: function get() {
    return _validation.checkPublicKeysForDuplicates;
  }
});
Object.defineProperty(exports, 'validatePublicKey', {
  enumerable: true,
  get: function get() {
    return _validation.validatePublicKey;
  }
});
Object.defineProperty(exports, 'validatePublicKeys', {
  enumerable: true,
  get: function get() {
    return _validation.validatePublicKeys;
  }
});
Object.defineProperty(exports, 'validateKeysgroup', {
  enumerable: true,
  get: function get() {
    return _validation.validateKeysgroup;
  }
});
Object.defineProperty(exports, 'validateAddress', {
  enumerable: true,
  get: function get() {
    return _validation.validateAddress;
  }
});

var _wrap_transaction_creator = require('./wrap_transaction_creator');

Object.defineProperty(exports, 'wrapTransactionCreator', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_wrap_transaction_creator).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./format":37,"./get_address_and_public_key_from_recipient_data":38,"./get_transaction_bytes":39,"./get_transaction_hash":40,"./get_transaction_id":41,"./prepare_transaction":43,"./sign_and_verify":44,"./sign_raw_transaction":45,"./time":46,"./validation":47,"./wrap_transaction_creator":48}],43:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _sign_and_verify = require('./sign_and_verify');

var _get_transaction_id = require('./get_transaction_id');

var _get_transaction_id2 = _interopRequireDefault(_get_transaction_id);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var secondSignTransaction = function secondSignTransaction(transactionObject, secondPassphrase) {
	return (0, _assign2.default)({}, transactionObject, {
		signSignature: (0, _sign_and_verify.signTransaction)(transactionObject, secondPassphrase)
	});
};

var prepareTransaction = function prepareTransaction(transaction, passphrase, secondPassphrase) {
	var singleSignedTransaction = (0, _assign2.default)({}, transaction, {
		signature: (0, _sign_and_verify.signTransaction)(transaction, passphrase)
	});

	var signedTransaction = typeof secondPassphrase === 'string' && transaction.type !== 1 ? secondSignTransaction(singleSignedTransaction, secondPassphrase) : singleSignedTransaction;

	var transactionWithId = (0, _assign2.default)({}, signedTransaction, {
		id: (0, _get_transaction_id2.default)(signedTransaction)
	});

	return transactionWithId;
};

exports.default = prepareTransaction;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"./get_transaction_id":41,"./sign_and_verify":44,"babel-runtime/core-js/object/assign":66}],44:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.verifyTransaction = exports.multiSignTransaction = exports.signTransaction = undefined;

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _get_transaction_hash = require('./get_transaction_hash');

var _get_transaction_hash2 = _interopRequireDefault(_get_transaction_hash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 *
 */
var signTransaction = exports.signTransaction = function signTransaction(transaction, passphrase) {
	var transactionHash = (0, _get_transaction_hash2.default)(transaction);
	return _cryptography2.default.signData(transactionHash, passphrase);
};

var multiSignTransaction = exports.multiSignTransaction = function multiSignTransaction(transaction, passphrase) {
	var transactionToSign = (0, _assign2.default)({}, transaction);
	delete transactionToSign.signature;
	delete transactionToSign.signSignature;

	var transactionHash = (0, _get_transaction_hash2.default)(transactionToSign);

	return _cryptography2.default.signData(transactionHash, passphrase);
};

var verifyTransaction = exports.verifyTransaction = function verifyTransaction(transaction, secondPublicKey) {
	var secondSignaturePresent = !!transaction.signSignature;
	if (secondSignaturePresent && !secondPublicKey) {
		throw new Error('Cannot verify signSignature without secondPublicKey.');
	}

	var transactionWithoutSignature = (0, _assign2.default)({}, transaction);

	if (secondSignaturePresent) {
		delete transactionWithoutSignature.signSignature;
	} else {
		delete transactionWithoutSignature.signature;
	}

	var transactionHash = (0, _get_transaction_hash2.default)(transactionWithoutSignature);

	var publicKey = secondSignaturePresent ? secondPublicKey : transaction.senderPublicKey;
	var signature = secondSignaturePresent ? transaction.signSignature : transaction.signature;

	var verified = _cryptography2.default.verifyData(transactionHash, signature, publicKey);

	return secondSignaturePresent ? verified && verifyTransaction(transactionWithoutSignature) : verified;
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography":21,"./get_transaction_hash":40,"babel-runtime/core-js/object/assign":66}],45:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

exports.default = signRawTransaction;

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _time = require('./time');

var _prepare_transaction = require('./prepare_transaction');

var _prepare_transaction2 = _interopRequireDefault(_prepare_transaction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function signRawTransaction(_ref) {
	var transaction = _ref.transaction,
	    passphrase = _ref.passphrase,
	    secondPassphrase = _ref.secondPassphrase,
	    timeOffset = _ref.timeOffset;

	var _cryptography$getAddr = _cryptography2.default.getAddressAndPublicKeyFromPassphrase(passphrase),
	    publicKey = _cryptography$getAddr.publicKey,
	    address = _cryptography$getAddr.address;

	var senderSecondPublicKey = secondPassphrase ? _cryptography2.default.getPrivateAndPublicKeyFromPassphrase(secondPassphrase).publicKey : null;

	var propertiesToAdd = {
		senderPublicKey: publicKey,
		senderSecondPublicKey: senderSecondPublicKey,
		senderId: address,
		timestamp: (0, _time.getTimeWithOffset)(timeOffset)
	};

	var transactionWithProperties = (0, _assign2.default)({}, transaction, propertiesToAdd);

	return (0, _prepare_transaction2.default)(transactionWithProperties, passphrase, secondPassphrase);
} /*
   * Copyright Â© 2018 Lisk Foundation
   *
   * See the LICENSE file at the top-level directory of this distribution
   * for licensing information.
   *
   * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
   * no part of this software, including this file, may be copied, modified,
   * propagated, or distributed except according to the terms contained in the
   * LICENSE file.
   *
   * Removal or modification of this copyright notice is prohibited.
   *
   *//* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography":21,"./prepare_transaction":43,"./time":46,"babel-runtime/core-js/object/assign":66}],46:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTimeWithOffset = exports.getTimeFromBlockchainEpoch = undefined;

var _liskConstants = require('../../lisk-constants');

var getTimeFromBlockchainEpoch = exports.getTimeFromBlockchainEpoch = function getTimeFromBlockchainEpoch(givenTimestamp) {
  var startingPoint = givenTimestamp || new Date().getTime();
  var blockchainInitialTime = _liskConstants.EPOCH_TIME_MILLISECONDS;
  return Math.floor((startingPoint - blockchainInitialTime) / 1000);
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */

var getTimeWithOffset = exports.getTimeWithOffset = function getTimeWithOffset(offset) {
  var now = new Date().getTime();
  var timeWithOffset = offset ? now + offset * 1000 : now;
  return getTimeFromBlockchainEpoch(timeWithOffset);
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../lisk-constants":25}],47:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.validateAddress = exports.validateKeysgroup = exports.validatePublicKeys = exports.checkPublicKeysForDuplicates = exports.validatePublicKey = undefined;

var _browserifyBignum = require('browserify-bignum');

var _browserifyBignum2 = _interopRequireDefault(_browserifyBignum);

var _liskConstants = require('../../lisk-constants');

var _convert = require('../../cryptography/convert');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var validatePublicKey = exports.validatePublicKey = function validatePublicKey(publicKey) {
	var publicKeyBuffer = (0, _convert.hexToBuffer)(publicKey);
	if (publicKeyBuffer.length !== 32) {
		throw new Error('Public key ' + publicKey + ' length differs from the expected 32 bytes for a public key.');
	}
	return true;
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */
var checkPublicKeysForDuplicates = exports.checkPublicKeysForDuplicates = function checkPublicKeysForDuplicates(publicKeys) {
	return publicKeys.every(function (element, index) {
		var elementFound = publicKeys.slice(index + 1).indexOf(element);
		if (elementFound > -1) {
			throw new Error('Duplicated public key: ' + publicKeys[index] + '.');
		}
		return true;
	});
};

var validatePublicKeys = exports.validatePublicKeys = function validatePublicKeys(publicKeys) {
	return publicKeys.every(validatePublicKey) && checkPublicKeysForDuplicates(publicKeys);
};

var validateKeysgroup = exports.validateKeysgroup = function validateKeysgroup(keysgroup) {
	if (keysgroup.length === 0 || keysgroup.length > 16) {
		throw new Error('Expected between 1 and 16 public keys in the keysgroup.');
	}
	return validatePublicKeys(keysgroup);
};

var validateAddress = exports.validateAddress = function validateAddress(address) {
	if (address.length < 2 || address.length > 22) {
		throw new Error('Address length does not match requirements. Expected between 2 and 22 characters.');
	}

	if (address[address.length - 1] !== 'L') {
		throw new Error('Address format does not match requirements. Expected "L" at the end.');
	}

	var addressAsBignum = (0, _browserifyBignum2.default)(address.slice(0, -1));

	if (addressAsBignum.cmp((0, _browserifyBignum2.default)(_liskConstants.MAX_ADDRESS_NUMBER)) > 0) {
		throw new Error('Address format does not match requirements. Address out of maximum range.');
	}

	return true;
};/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography/convert":18,"../../lisk-constants":25,"browserify-bignum":113}],48:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _cryptography = require('../../cryptography');

var _cryptography2 = _interopRequireDefault(_cryptography);

var _prepare_transaction = require('./prepare_transaction');

var _prepare_transaction2 = _interopRequireDefault(_prepare_transaction);

var _time = require('./time');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var wrapTransactionCreator = function wrapTransactionCreator(transactionCreator) {
	return function (transactionParameters) {
		var passphrase = transactionParameters.passphrase,
		    secondPassphrase = transactionParameters.secondPassphrase,
		    timeOffset = transactionParameters.timeOffset;


		var senderPublicKey = passphrase ? _cryptography2.default.getKeys(passphrase).publicKey : null;
		var timestamp = (0, _time.getTimeWithOffset)(timeOffset);

		var transaction = (0, _assign2.default)({
			amount: '0',
			recipientId: '',
			senderPublicKey: senderPublicKey,
			timestamp: timestamp
		}, transactionCreator(transactionParameters));

		return passphrase ? (0, _prepare_transaction2.default)(transaction, passphrase, secondPassphrase) : transaction;
	};
}; /*
    * Copyright Â© 2018 Lisk Foundation
    *
    * See the LICENSE file at the top-level directory of this distribution
    * for licensing information.
    *
    * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
    * no part of this software, including this file, may be copied, modified,
    * propagated, or distributed except according to the terms contained in the
    * LICENSE file.
    *
    * Removal or modification of this copyright notice is prohibited.
    *
    */
exports.default = wrapTransactionCreator;/* This code was injected by Rewireify */
if ((typeof module.exports).match(/object|function/) && 
Object.isExtensible(module.exports)) {
Object.defineProperty(module.exports, '__get__', { value: function __get__() {
    arguments.varName = arguments[0];
    if (arguments.varName && typeof arguments.varName === "string") {
        return eval(arguments.varName);
    } else {
        throw new TypeError("__get__ expects a non-empty string");
    }
}, writable: true });
Object.defineProperty(module.exports, '__set__', { value: function __set__() {
    arguments.varName = arguments[0];
    arguments.varValue = arguments[1];
    // Saving references to global objects and functions. Thus a test may even change these variables
    // without interfering with rewire().
    // @see https://github.com/jhnns/rewire/issues/40
    arguments.refs = arguments[2] || {
        isArray: Array.isArray,
        TypeError: TypeError,
        stringify: JSON.stringify
        // We can't save eval() because eval() is a *special* global function
        // That's why it can't be re-assigned in strict mode
        //eval: eval
    };
    arguments.src = "";
    arguments.revertArgs = [];

    if (typeof arguments[0] === "object") {
        arguments.env = arguments.varName;
        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
            throw new arguments.refs.TypeError("__set__ expects an object as env");
        }
        arguments.revertArgs[0] = {};
        for (arguments.varName in arguments.env) {
            if (arguments.env.hasOwnProperty(arguments.varName)) {
                arguments.varValue = arguments.env[arguments.varName];
                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
                try {
                    // Allow tests to mock implicit globals
                    // @see https://github.com/jhnns/rewire/issues/35
                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
                } catch (err) {
                    arguments.revertArgs[0][arguments.varName] = undefined;
                }
            }
        }
    } else if (typeof arguments.varName === "string") {
        if (!arguments.varName) {
            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
        }
        arguments.src = arguments.varName + " = arguments.varValue;";
        try {
            // Allow tests to mock implicit globals
            // @see https://github.com/jhnns/rewire/issues/35
            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
        } catch (err) {
            arguments.revertArgs = [arguments.varName, undefined];
        }
    } else {
        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
    }

    // Passing our saved references on to the revert function
    arguments.revertArgs[2] = arguments.refs;

    eval(arguments.src);

    return function (revertArgs) {
        __set__.apply(null, revertArgs);
    }.bind(null, arguments.revertArgs);
}, writable: true });
}

},{"../../cryptography":21,"./prepare_transaction":43,"./time":46,"babel-runtime/core-js/object/assign":66}],49:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":50,"./asn1/base":52,"./asn1/constants":56,"./asn1/decoders":58,"./asn1/encoders":61,"bn.js":93}],50:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":49,"inherits":290,"vm":370}],51:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":52,"buffer":127,"inherits":290}],52:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":51,"./node":53,"./reporter":54}],53:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":52,"minimalistic-assert":298}],54:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":290}],55:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":56}],56:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":55}],57:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":49,"inherits":290}],58:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":57,"./pem":59}],59:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":57,"buffer":127,"inherits":290}],60:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":49,"buffer":127,"inherits":290}],61:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":60,"./pem":62}],62:[function(require,module,exports){
var inherits = require('inherits');

var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":60,"inherits":290}],63:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/array/from"), __esModule: true };
},{"core-js/library/fn/array/from":129}],64:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/get-iterator"), __esModule: true };
},{"core-js/library/fn/get-iterator":130}],65:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/is-iterable"), __esModule: true };
},{"core-js/library/fn/is-iterable":131}],66:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/assign"), __esModule: true };
},{"core-js/library/fn/object/assign":132}],67:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/create"), __esModule: true };
},{"core-js/library/fn/object/create":133}],68:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
},{"core-js/library/fn/object/define-property":134}],69:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/entries"), __esModule: true };
},{"core-js/library/fn/object/entries":135}],70:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/get-prototype-of"), __esModule: true };
},{"core-js/library/fn/object/get-prototype-of":136}],71:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/keys"), __esModule: true };
},{"core-js/library/fn/object/keys":137}],72:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/set-prototype-of"), __esModule: true };
},{"core-js/library/fn/object/set-prototype-of":138}],73:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/promise"), __esModule: true };
},{"core-js/library/fn/promise":139}],74:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
},{"core-js/library/fn/symbol":140}],75:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
},{"core-js/library/fn/symbol/iterator":141}],76:[function(require,module,exports){
"use strict";

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
},{}],77:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _defineProperty = require("../core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
},{"../core-js/object/define-property":68}],78:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _defineProperty = require("../core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};
},{"../core-js/object/define-property":68}],79:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _setPrototypeOf = require("../core-js/object/set-prototype-of");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = require("../core-js/object/create");

var _create2 = _interopRequireDefault(_create);

var _typeof2 = require("../helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};
},{"../core-js/object/create":67,"../core-js/object/set-prototype-of":72,"../helpers/typeof":83}],80:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _typeof2 = require("../helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};
},{"../helpers/typeof":83}],81:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _isIterable2 = require("../core-js/is-iterable");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = require("../core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
},{"../core-js/get-iterator":64,"../core-js/is-iterable":65}],82:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _from = require("../core-js/array/from");

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};
},{"../core-js/array/from":63}],83:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _iterator = require("../core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("../core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
},{"../core-js/symbol":74,"../core-js/symbol/iterator":75}],84:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],85:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var createHash = require('create-hash')
var pbkdf2 = require('pbkdf2').pbkdf2Sync
var randomBytes = require('randombytes')

// use unorm until String.prototype.normalize gets better browser support
var unorm = require('unorm')

var CHINESE_SIMPLIFIED_WORDLIST = require('./wordlists/chinese_simplified.json')
var CHINESE_TRADITIONAL_WORDLIST = require('./wordlists/chinese_traditional.json')
var ENGLISH_WORDLIST = require('./wordlists/english.json')
var FRENCH_WORDLIST = require('./wordlists/french.json')
var ITALIAN_WORDLIST = require('./wordlists/italian.json')
var JAPANESE_WORDLIST = require('./wordlists/japanese.json')
var SPANISH_WORDLIST = require('./wordlists/spanish.json')
var DEFAULT_WORDLIST = ENGLISH_WORDLIST

var INVALID_MNEMONIC = 'Invalid mnemonic'
var INVALID_ENTROPY = 'Invalid entropy'
var INVALID_CHECKSUM = 'Invalid mnemonic checksum'

function lpad (str, padString, length) {
  while (str.length < length) str = padString + str
  return str
}

function binaryToByte (bin) {
  return parseInt(bin, 2)
}

function bytesToBinary (bytes) {
  return bytes.map(function (x) {
    return lpad(x.toString(2), '0', 8)
  }).join('')
}

function deriveChecksumBits (entropyBuffer) {
  var ENT = entropyBuffer.length * 8
  var CS = ENT / 32
  var hash = createHash('sha256').update(entropyBuffer).digest()

  return bytesToBinary([].slice.call(hash)).slice(0, CS)
}

function salt (password) {
  return 'mnemonic' + (password || '')
}

function mnemonicToSeed (mnemonic, password) {
  var mnemonicBuffer = Buffer.from(unorm.nfkd(mnemonic), 'utf8')
  var saltBuffer = Buffer.from(salt(unorm.nfkd(password)), 'utf8')

  return pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512')
}

function mnemonicToSeedHex (mnemonic, password) {
  return mnemonicToSeed(mnemonic, password).toString('hex')
}

function mnemonicToEntropy (mnemonic, wordlist) {
  wordlist = wordlist || DEFAULT_WORDLIST

  var words = unorm.nfkd(mnemonic).split(' ')
  if (words.length % 3 !== 0) throw new Error(INVALID_MNEMONIC)

  // convert word indices to 11 bit binary strings
  var bits = words.map(function (word) {
    var index = wordlist.indexOf(word)
    if (index === -1) throw new Error(INVALID_MNEMONIC)

    return lpad(index.toString(2), '0', 11)
  }).join('')

  // split the binary string into ENT/CS
  var dividerIndex = Math.floor(bits.length / 33) * 32
  var entropyBits = bits.slice(0, dividerIndex)
  var checksumBits = bits.slice(dividerIndex)

  // calculate the checksum and compare
  var entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte)
  if (entropyBytes.length < 16) throw new Error(INVALID_ENTROPY)
  if (entropyBytes.length > 32) throw new Error(INVALID_ENTROPY)
  if (entropyBytes.length % 4 !== 0) throw new Error(INVALID_ENTROPY)

  var entropy = Buffer.from(entropyBytes)
  var newChecksum = deriveChecksumBits(entropy)
  if (newChecksum !== checksumBits) throw new Error(INVALID_CHECKSUM)

  return entropy.toString('hex')
}

function entropyToMnemonic (entropyHex, wordlist) {
  wordlist = wordlist || DEFAULT_WORDLIST

  // 128 <= ENT <= 256
  if (entropyHex.length < 32) throw new TypeError(INVALID_ENTROPY)
  if (entropyHex.length > 64) throw new TypeError(INVALID_ENTROPY)

  // multiple of 4
  if (entropyHex.length % 8 !== 0) throw new TypeError(INVALID_ENTROPY)

  var entropy = Buffer.from(entropyHex, 'hex')
  var entropyBits = bytesToBinary([].slice.call(entropy))
  var checksumBits = deriveChecksumBits(entropy)

  var bits = entropyBits + checksumBits
  var chunks = bits.match(/(.{1,11})/g)
  var words = chunks.map(function (binary) {
    var index = binaryToByte(binary)
    return wordlist[index]
  })

  return wordlist === JAPANESE_WORDLIST ? words.join('\u3000') : words.join(' ')
}

function generateMnemonic (strength, rng, wordlist) {
  strength = strength || 128
  if (strength % 32 !== 0) throw new TypeError(INVALID_ENTROPY)
  rng = rng || randomBytes

  var hex = rng(strength / 8).toString('hex')
  return entropyToMnemonic(hex, wordlist)
}

function validateMnemonic (mnemonic, wordlist) {
  try {
    mnemonicToEntropy(mnemonic, wordlist)
  } catch (e) {
    return false
  }

  return true
}

module.exports = {
  mnemonicToSeed: mnemonicToSeed,
  mnemonicToSeedHex: mnemonicToSeedHex,
  mnemonicToEntropy: mnemonicToEntropy,
  entropyToMnemonic: entropyToMnemonic,
  generateMnemonic: generateMnemonic,
  validateMnemonic: validateMnemonic,
  wordlists: {
    EN: ENGLISH_WORDLIST,
    JA: JAPANESE_WORDLIST,

    chinese_simplified: CHINESE_SIMPLIFIED_WORDLIST,
    chinese_traditional: CHINESE_TRADITIONAL_WORDLIST,
    english: ENGLISH_WORDLIST,
    french: FRENCH_WORDLIST,
    italian: ITALIAN_WORDLIST,
    japanese: JAPANESE_WORDLIST,
    spanish: SPANISH_WORDLIST
  }
}

},{"./wordlists/chinese_simplified.json":86,"./wordlists/chinese_traditional.json":87,"./wordlists/english.json":88,"./wordlists/french.json":89,"./wordlists/italian.json":90,"./wordlists/japanese.json":91,"./wordlists/spanish.json":92,"create-hash":240,"pbkdf2":307,"randombytes":338,"safe-buffer":354,"unorm":366}],86:[function(require,module,exports){
module.exports=[
  "ç",
  "ä¸",
  "æ¯",
  "å¨",
  "ä¸",
  "äº",
  "æ",
  "å",
  "äºº",
  "è¿",
  "ä¸­",
  "å¤§",
  "ä¸º",
  "ä¸",
  "ä¸ª",
  "å½",
  "æ",
  "ä»¥",
  "è¦",
  "ä»",
  "æ¶",
  "æ¥",
  "ç¨",
  "ä»¬",
  "ç",
  "å°",
  "ä½",
  "å°",
  "äº",
  "åº",
  "å°±",
  "å",
  "å¯¹",
  "æ",
  "ä¼",
  "å¯",
  "ä¸»",
  "å",
  "å¹´",
  "å¨",
  "å",
  "å·¥",
  "ä¹",
  "è½",
  "ä¸",
  "è¿",
  "å­",
  "è¯´",
  "äº§",
  "ç§",
  "é¢",
  "è",
  "æ¹",
  "å",
  "å¤",
  "å®",
  "è¡",
  "å­¦",
  "æ³",
  "æ",
  "æ°",
  "å¾",
  "ç»",
  "å",
  "ä¸",
  "ä¹",
  "è¿",
  "ç",
  "ç­",
  "é¨",
  "åº¦",
  "å®¶",
  "çµ",
  "å",
  "é",
  "å¦",
  "æ°´",
  "å",
  "é«",
  "èª",
  "äº",
  "ç",
  "èµ·",
  "å°",
  "ç©",
  "ç°",
  "å®",
  "å ",
  "é",
  "é½",
  "ä¸¤",
  "ä½",
  "å¶",
  "æº",
  "å½",
  "ä½¿",
  "ç¹",
  "ä»",
  "ä¸",
  "æ¬",
  "å»",
  "æ",
  "æ§",
  "å¥½",
  "åº",
  "å¼",
  "å®",
  "å",
  "è¿",
  "å ",
  "ç±",
  "å¶",
  "äº",
  "ç¶",
  "å",
  "å¤",
  "å¤©",
  "æ¿",
  "å",
  "æ¥",
  "é£",
  "ç¤¾",
  "ä¹",
  "äº",
  "å¹³",
  "å½¢",
  "ç¸",
  "å¨",
  "è¡¨",
  "é´",
  "æ ·",
  "ä¸",
  "å³",
  "å",
  "é",
  "æ°",
  "çº¿",
  "å",
  "æ°",
  "æ­£",
  "å¿",
  "å",
  "ä½ ",
  "æ",
  "ç",
  "å",
  "å",
  "ä¹",
  "å©",
  "æ¯",
  "æ",
  "ä½",
  "è´¨",
  "æ°",
  "ç¬¬",
  "å",
  "é",
  "å½",
  "æ­¤",
  "å",
  "æ¡",
  "åª",
  "æ²¡",
  "ç»",
  "è§£",
  "é®",
  "æ",
  "å»º",
  "æ",
  "å¬",
  "æ ",
  "ç³»",
  "å",
  "å¾",
  "æ",
  "è",
  "æ",
  "ç«",
  "ä»£",
  "æ³",
  "å·²",
  "é",
  "å¹¶",
  "æ",
  "ç´",
  "é¢",
  "å",
  "ç¨",
  "å±",
  "äº",
  "æ",
  "æ",
  "è±¡",
  "å",
  "é©",
  "ä½",
  "å¥",
  "å¸¸",
  "æ",
  "æ»",
  "æ¬¡",
  "å",
  "å¼",
  "æ´»",
  "è®¾",
  "å",
  "ç®¡",
  "ç¹",
  "ä»¶",
  "é¿",
  "æ±",
  "è",
  "å¤´",
  "åº",
  "èµ",
  "è¾¹",
  "æµ",
  "è·¯",
  "çº§",
  "å°",
  "å¾",
  "å±±",
  "ç»",
  "æ¥",
  "ç¥",
  "è¾",
  "å°",
  "ç»",
  "è§",
  "è®¡",
  "å«",
  "å¥¹",
  "æ",
  "è§",
  "æ",
  "æ ¹",
  "è®º",
  "è¿",
  "å",
  "æ",
  "å ",
  "ä¹",
  "åº",
  "å¼º",
  "æ¾",
  "å³",
  "è¥¿",
  "è¢«",
  "å¹²",
  "å",
  "å¿",
  "æ",
  "å",
  "å",
  "å",
  "ä»»",
  "å",
  "æ®",
  "å¤",
  "é",
  "å",
  "ç»",
  "è²",
  "å",
  "é¨",
  "å³",
  "ä¿",
  "æ²»",
  "å",
  "é ",
  "ç¾",
  "è§",
  "ç­",
  "é¢",
  "ä¸",
  "æµ·",
  "å£",
  "ä¸",
  "å¯¼",
  "å¨",
  "å",
  "å¿",
  "ä¸",
  "é",
  "å¢",
  "äº",
  "æµ",
  "é¶",
  "æ²¹",
  "æ",
  "æ¯",
  "æ",
  "äº¤",
  "å",
  "è",
  "ä»",
  "è®¤",
  "å­",
  "å±",
  "æ",
  "æ¶",
  "è¯",
  "æ¹",
  "æ¸",
  "ç¾",
  "å",
  "é",
  "è½¬",
  "æ´",
  "å",
  "é£",
  "å",
  "æ",
  "ç½",
  "æ",
  "é",
  "è±",
  "å¸¦",
  "å®",
  "åº",
  "èº«",
  "è½¦",
  "ä¾",
  "ç",
  "å¡",
  "å·",
  "ä¸",
  "æ¯",
  "ç®",
  "è³",
  "è¾¾",
  "èµ°",
  "ç§¯",
  "ç¤º",
  "è®®",
  "å£°",
  "æ¥",
  "æ",
  "å®",
  "ç±»",
  "å«",
  "ç¦»",
  "å",
  "å",
  "ç¡®",
  "æ",
  "ç§",
  "å¼ ",
  "ä¿¡",
  "é©¬",
  "è",
  "è¯",
  "ç±³",
  "æ´",
  "ç©º",
  "å",
  "åµ",
  "ä»",
  "é",
  "æ¸©",
  "ä¼ ",
  "å",
  "è®¸",
  "æ­¥",
  "ç¾¤",
  "å¹¿",
  "ç³",
  "è®°",
  "é",
  "æ®µ",
  "ç ",
  "ç",
  "æ",
  "æ",
  "å¾",
  "å«",
  "ä¸",
  "ç©¶",
  "è§",
  "è¶",
  "ç»",
  "è£",
  "å½±",
  "ç®",
  "ä½",
  "æ",
  "é³",
  "ä¼",
  "ä¹¦",
  "å¸",
  "å¤",
  "å®¹",
  "å¿",
  "é¡»",
  "é",
  "å",
  "é",
  "éª",
  "è¿",
  "æ­",
  "æ·±",
  "é¾",
  "è¿",
  "ç¿",
  "å",
  "å¨",
  "å§",
  "ç´ ",
  "æ",
  "å¤",
  "å",
  "å",
  "é",
  "ç",
  "å",
  "ä¹ ",
  "å",
  "çº¦",
  "æ¯",
  "è¬",
  "å²",
  "æ",
  "å³",
  "ä¾¿",
  "å¢",
  "å¾",
  "é¸",
  "å",
  "å¸",
  "å",
  "ä½",
  "é¤",
  "æ¶",
  "æ",
  "åº",
  "ç§°",
  "å¤ª",
  "å",
  "ç²¾",
  "å¼",
  "å·",
  "ç",
  "æ",
  "ç»´",
  "å",
  "é",
  "æ ",
  "å",
  "å­",
  "å",
  "æ¯",
  "äº²",
  "å¿«",
  "æ",
  "æ¯",
  "é¢",
  "æ¥",
  "æ±",
  "å",
  "ç¼",
  "ç",
  "æ",
  "æ ¼",
  "å»",
  "æ",
  "ç½®",
  "æ´¾",
  "å±",
  "ç",
  "å§",
  "å´",
  "ä¸",
  "ç¶",
  "è²",
  "å",
  "äº¬",
  "è¯",
  "é",
  "å±",
  "å",
  "å",
  "ç«",
  "ä½",
  "è°",
  "æ»¡",
  "å¿",
  "å±",
  "ç§",
  "å",
  "çº¢",
  "ç»",
  "å¼",
  "å¬",
  "è¯¥",
  "é",
  "ä»·",
  "ä¸¥",
  "é¦",
  "åº",
  "æ¶²",
  "å®",
  "å¾·",
  "é",
  "ç",
  "è",
  "å¤±",
  "å°",
  "æ­»",
  "è®²",
  "é",
  "å¥³",
  "é»",
  "æ¨",
  "æ¾",
  "è°",
  "ç½ª",
  "ç¥",
  "èº",
  "å¢",
  "å¸­",
  "å«",
  "ä¼",
  "æ",
  "å¯",
  "æ¹",
  "è¥",
  "é¡¹",
  "é²",
  "ä¸¾",
  "ç",
  "è±",
  "æ°§",
  "å¿",
  "å",
  "æ",
  "å°",
  "è½",
  "æ¨",
  "å¸®",
  "è½®",
  "ç ´",
  "äº",
  "å¸",
  "å´",
  "æ³¨",
  "è¿",
  "å­",
  "æ",
  "æ",
  "ä¾",
  "æ²³",
  "æ",
  "å°",
  "å¦",
  "æ½",
  "å",
  "æ ",
  "æº¶",
  "æ",
  "æ­¢",
  "æ¡",
  "è¨",
  "å£«",
  "å",
  "æ­¦",
  "åº",
  "å¶",
  "é±¼",
  "æ³¢",
  "è§",
  "ä»",
  "è´¹",
  "ç´§",
  "ç±",
  "å·¦",
  "ç« ",
  "æ©",
  "æ",
  "å®³",
  "ç»­",
  "è½»",
  "æ",
  "è¯",
  "é£",
  "å",
  "åµ",
  "æº",
  "å¤",
  "æ¤",
  "å¸",
  "è¶³",
  "æ",
  "ç»",
  "å·®",
  "è´",
  "æ¿",
  "ç°",
  "é",
  "é»",
  "ç¯",
  "è´",
  "å»",
  "è",
  "ç»§",
  "å´",
  "ä¼¼",
  "ä½",
  "å",
  "æ²",
  "è¾",
  "ä¿®",
  "æ",
  "å",
  "å¤«",
  "å¤",
  "é",
  "ç¬",
  "è¹",
  "å ",
  "å³",
  "è´¢",
  "å",
  "å¯",
  "æ¥",
  "è",
  "è§",
  "æ±",
  "ç»",
  "å",
  "å·´",
  "è·",
  "è½",
  "æ",
  "é£",
  "æ£",
  "å¸",
  "å©",
  "å",
  "é³",
  "äº",
  "å",
  "å",
  "æ",
  "è",
  "æ",
  "å",
  "ç­",
  "å¤",
  "å¾",
  "æ¢",
  "æª",
  "è·",
  "ç",
  "é¢",
  "æ¾",
  "ç«¯",
  "è´£",
  "ç«",
  "ç®",
  "è¿°",
  "é±",
  "å¯",
  "å°½",
  "å¸",
  "å°",
  "è",
  "å²",
  "æ¿",
  "ç¬",
  "ä»¤",
  "é",
  "é¿",
  "å®£",
  "ç¯",
  "å",
  "è¯·",
  "è¶",
  "å¾®",
  "è®©",
  "æ§",
  "å·",
  "è¯",
  "è½´",
  "æ¾",
  "å¦",
  "çºª",
  "ç",
  "ä¾",
  "ä¼",
  "é¡¶",
  "ç¡",
  "è½½",
  "å",
  "æ¿",
  "çª",
  "å",
  "ç²",
  "æ",
  "ç¥",
  "å®¢",
  "è¢",
  "å·",
  "è",
  "ç»",
  "æ",
  "å",
  "å",
  "æµ",
  "ä¸",
  "å",
  "è¯",
  "å¿µ",
  "é",
  "ä»",
  "ç½",
  "ç",
  "å",
  "æ´",
  "é",
  "è¦",
  "å¤",
  "å",
  "ç§»",
  "é¢",
  "é",
  "é ",
  "æ··",
  "æ¯",
  "ç­",
  "ç®",
  "ç»",
  "è",
  "æ±½",
  "æ",
  "äº",
  "åª",
  "æ¢",
  "è·",
  "å«",
  "å",
  "ç",
  "å¤®",
  "å¯",
  "ç§",
  "è¿",
  "å¢",
  "è¥",
  "å°",
  "æ´²",
  "å»",
  "æ¬",
  "æ¿",
  "å­",
  "æ",
  "ç",
  "å®¤",
  "å¾",
  "æ ¸",
  "æ ¡",
  "æ£",
  "ä¾µ",
  "å§",
  "ç²",
  "æ¸¸",
  "ä¹",
  "è",
  "å³",
  "æ§",
  "æ¨¡",
  "æ¹",
  "è´§",
  "æ",
  "é¢",
  "é»",
  "æ¯«",
  "æ®",
  "ç¨³",
  "ä¹",
  "å¦",
  "æ¤",
  "æ¯",
  "æ©",
  "é¶",
  "è¯­",
  "æ¥",
  "é",
  "å®",
  "æ¿",
  "åº",
  "çº¸",
  "å»",
  "ç¼º",
  "é¨",
  "å",
  "é",
  "å",
  "å",
  "æ¥",
  "å±",
  "è¯¯",
  "è®­",
  "æ¿",
  "å®¡",
  "é",
  "è·",
  "è¶",
  "é²",
  "ç²®",
  "æ¤",
  "å­©",
  "è±",
  "ç¡«",
  "è¥",
  "å",
  "é¾",
  "æ¼",
  "ç¶",
  "æ¸",
  "è¡",
  "æ¬¢",
  "æ¢°",
  "æ",
  "æ­",
  "æ²",
  "å",
  "æ»",
  "è°",
  "ç¾",
  "è®¨",
  "æ",
  "ç²",
  "ä¹±",
  "ç",
  "ç",
  "ä¹",
  "æ",
  "è¯",
  "å®",
  "é²",
  "è´µ",
  "é",
  "ç¤",
  "è¯»",
  "ç­",
  "ä¼¯",
  "é¦",
  "ä»",
  "è¿«",
  "å¥",
  "ä¸°",
  "å¹",
  "æ¡",
  "å°",
  "æ",
  "å¼¦",
  "è",
  "æ²",
  "å",
  "ç©¿",
  "æ§",
  "ç­",
  "ä¹",
  "è°",
  "é¡º",
  "ç",
  "ç¼©",
  "å¾",
  "è¸",
  "å",
  "æ¾",
  "è",
  "å°",
  "å¼",
  "å",
  "è",
  "æ",
  "ç¦",
  "ä¹°",
  "æ",
  "äº",
  "æ¦",
  "æ¢",
  "æ",
  "ç£",
  "å",
  "ç¥",
  "ç",
  "ä¿",
  "é",
  "è¡¥",
  "è¯",
  "ç¿»",
  "è",
  "è·µ",
  "å°¼",
  "è¡£",
  "å®½",
  "æ¬",
  "æ£",
  "å¸",
  "ä¼¤",
  "æ",
  "å",
  "ç§",
  "å®",
  "æ°¢",
  "å¥",
  "ç£",
  "æ¯",
  "æ¶",
  "äº®",
  "æ«",
  "å®ª",
  "åº",
  "ç¼",
  "ç",
  "è§¦",
  "æ ",
  "é·",
  "é",
  "è¯",
  "åº§",
  "å±",
  "æ",
  "è£",
  "è",
  "å¼",
  "å¨",
  "æ¯",
  "å¨",
  "ç»¿",
  "æ¶",
  "å",
  "ç",
  "è¡¡",
  "é¸¡",
  "å­",
  "å»¶",
  "å±",
  "è¶",
  "å±",
  "ä¹¡",
  "ä¸´",
  "é",
  "é¡¾",
  "æ",
  "å",
  "ç¯",
  "å²",
  "æª",
  "æ",
  "è",
  "å§",
  "ç",
  "èµµ",
  "è·³",
  "å¥",
  "å­£",
  "è¯¾",
  "å¯",
  "è¡",
  "é¢",
  "æ¬¾",
  "ç»",
  "å·",
  "é½",
  "ä¼",
  "è¸",
  "æ®",
  "æ°¸",
  "å®",
  "è",
  "å·",
  "ç",
  "å²©",
  "å¼±",
  "é¶",
  "æ¨",
  "å¥",
  "æ²¿",
  "é²",
  "æ",
  "æ¢",
  "æ»",
  "é",
  "é¥­",
  "æµ",
  "èª",
  "æ",
  "èµ¶",
  "åº",
  "å¤º",
  "ä¼",
  "çµ",
  "ç¨",
  "é",
  "ç­",
  "èµ",
  "å½",
  "å¬",
  "é¼",
  "æ­",
  "ç",
  "è£",
  "é©",
  "åº·",
  "å¯",
  "å½",
  "è",
  "çº¯",
  "å",
  "ç³",
  "ç",
  "æ¨ª",
  "ç¬¦",
  "ç§",
  "åª",
  "å ",
  "å",
  "æª",
  "æ¶¦",
  "å¹",
  "å",
  "ç«",
  "ç",
  "è«",
  "æ³½",
  "è",
  "å£¤",
  "ç¢³",
  "æ¬§",
  "é",
  "ä¾§",
  "å¯¨",
  "æ¢",
  "å½»",
  "è",
  "æ",
  "è",
  "åº­",
  "çº³",
  "å¼¹",
  "é¥²",
  "ä¼¸",
  "æ",
  "éº¦",
  "æ¹¿",
  "æ",
  "è·",
  "ç¦",
  "å¡",
  "åº",
  "ç­",
  "æ¶",
  "æ·",
  "è®¿",
  "å¡",
  "å¥",
  "é",
  "æ¢",
  "å",
  "æ",
  "è¿¹",
  "å¡",
  "æ°¯",
  "é",
  "ä»½",
  "æ¯",
  "æ³¥",
  "é",
  "æ´",
  "æ",
  "ç°",
  "å½©",
  "å",
  "è",
  "å¤",
  "æ©",
  "å¿",
  "é",
  "ç®",
  "ç¡¬",
  "äº",
  "ç¹",
  "å",
  "éª",
  "å½",
  "äº¦",
  "æ½",
  "ç¯",
  "éµ",
  "é´",
  "ä¸",
  "å°º",
  "è¿½",
  "å ",
  "é",
  "è¿",
  "æ³",
  "ç¸",
  "æ¥¼",
  "é¿",
  "è°",
  "å¨",
  "é",
  "çª",
  "æ",
  "ç´¯",
  "å",
  "å¸",
  "é¦",
  "ç´¢",
  "ç§¦",
  "è",
  "æ½®",
  "ç·",
  "è±",
  "å¿½",
  "æ",
  "æ",
  "å¡",
  "é",
  "æ",
  "æ±",
  "æ¿",
  "çº¤",
  "ç²",
  "å¾",
  "å°",
  "ç",
  "æ¥",
  "è°¢",
  "å¥",
  "è´­",
  "ç£¨",
  "å",
  "æ± ",
  "æ",
  "ç¢",
  "éª¨",
  "ç",
  "æ",
  "å¼",
  "æ´",
  "å²",
  "è´¯",
  "æ®",
  "é",
  "è¯",
  "äº¡",
  "å£",
  "é¡¿",
  "å®",
  "å",
  "å°",
  "é»",
  "æ­",
  "ç®",
  "æ®",
  "å¬",
  "æ¡¥",
  "å¦",
  "è­¦",
  "ç»¼",
  "æ",
  "å´",
  "ä»",
  "æµ®",
  "é­",
  "å¾",
  "æ¨",
  "æ",
  "è°·",
  "èµ",
  "ç®±",
  "é",
  "è®¢",
  "ç·",
  "å¹",
  "å­",
  "çº·",
  "å",
  "è´¥",
  "å®",
  "ç»",
  "å·¨",
  "è",
  "å¦",
  "è£",
  "é­",
  "æ¹¾",
  "é®",
  "å¡",
  "é©»",
  "é",
  "æ",
  "æ©",
  "å¥",
  "å",
  "ç¢±",
  "é½¿",
  "æª",
  "ç¼",
  "éº»",
  "çºº",
  "ç¦",
  "åº",
  "ç",
  "ç",
  "ç¼",
  "å",
  "ç",
  "æ",
  "å©",
  "æ¶",
  "ç­",
  "å´",
  "æ",
  "å²¸",
  "æ",
  "åº",
  "è¡",
  "è",
  "å§",
  "è´¸",
  "è",
  "å¥´",
  "å¦",
  "æ¯",
  "ä¹",
  "ä¼",
  "æ¢",
  "å",
  "çº±",
  "æ",
  "è¾©",
  "è³",
  "å½ª",
  "è£",
  "äº¿",
  "ç",
  "æµ",
  "è",
  "ç§",
  "è¨",
  "ä¿",
  "ç½",
  "è",
  "åº",
  "å·",
  "çºµ",
  "å¯¸",
  "æ±",
  "æ",
  "æ´ª",
  "è´º",
  "éª",
  "æ¬",
  "ç",
  "ç¯",
  "æ´¥",
  "ç¨»",
  "å¢",
  "è½¯",
  "å",
  "å",
  "æ»",
  "å",
  "è",
  "è³",
  "è¯",
  "å¡",
  "æ±",
  "è¡",
  "è¿",
  "ä»ª",
  "æ",
  "å°¾",
  "è½§",
  "å°",
  "è´¡",
  "ç»",
  "é»",
  "å",
  "é»",
  "å",
  "é",
  "é",
  "æ°¨",
  "é­",
  "å³°",
  "å¸",
  "æ¸¯",
  "ä¼",
  "è½¨",
  "äº©",
  "æ¯",
  "æ¦",
  "è«",
  "åº",
  "æµª",
  "ç§",
  "æ´",
  "æ ª",
  "å¥",
  "å®",
  "è¡",
  "å²",
  "ç",
  "æ³¡",
  "ç¡",
  "ç«¥",
  "é¸",
  "æ±¤",
  "é",
  "ä¼",
  "æ±",
  "è",
  "ç§",
  "ç»",
  "ç¸",
  "å²",
  "ç£·",
  "ç»©",
  "æ",
  "æ·¡",
  "å°",
  "å¯",
  "é·",
  "æ´",
  "å",
  "å¾",
  "é¢",
  "æ³ª",
  "ç¨",
  "å¿",
  "æ³µ",
  "è",
  "æ",
  "æ´",
  "æ",
  "é",
  "è¾",
  "å£®",
  "é",
  "è´«",
  "è",
  "å¼¯",
  "æ©",
  "æ³°",
  "å¹¼",
  "å»·",
  "å°",
  "çª",
  "çº²",
  "å¼",
  "é¶",
  "ç",
  "æ°",
  "å®«",
  "å§",
  "é",
  "ç",
  "æª",
  "å°¤",
  "ç´",
  "å¾ª",
  "æ",
  "è",
  "è¿",
  "å¤¹",
  "è°",
  "ç¼",
  "ç ",
  "ç©·",
  "æ£®",
  "æ",
  "ç«¹",
  "æ²",
  "å¬",
  "ç»³",
  "å¿",
  "é¦",
  "å©",
  "å¹¸",
  "æµ",
  "æ ",
  "æ¥",
  "ç",
  "è´®",
  "ç¤¼",
  "æ»¤",
  "é ",
  "çº¹",
  "ç½¢",
  "æ",
  "å±",
  "å",
  "è¢",
  "å",
  "å¤",
  "ç½",
  "ç¦",
  "æ½",
  "ä¼",
  "å¢¨",
  "æ¬²",
  "ç¼",
  "å§",
  "å",
  "é¥±",
  "ä»¿",
  "å¥",
  "é",
  "é¬¼",
  "ä¸½",
  "è·¨",
  "é»",
  "æ",
  "é¾",
  "æ«",
  "å",
  "è¢",
  "ç­",
  "æ±¡",
  "å¹",
  "è¯¸",
  "å¼§",
  "å±",
  "æ¢",
  "å¥¶",
  "æ´",
  "ç¾",
  "è",
  "é´",
  "è¯",
  "è®¼",
  "æ±",
  "æ¯",
  "æ",
  "å¯",
  "æº",
  "å",
  "å¯",
  "å±",
  "è·",
  "æ¸¡",
  "æ",
  "ä¸¹",
  "è°",
  "è´",
  "ç¢°",
  "æ",
  "ç¹",
  "æ´",
  "ç ",
  "æ¢¦",
  "è½",
  "ç",
  "èµ¤",
  "æ¸",
  "å­",
  "æ¬",
  "é¢",
  "å¥",
  "é",
  "ä»²",
  "è",
  "ç¨",
  "å¦¹",
  "ä¹",
  "ç",
  "ç³",
  "æ¡",
  "éµ",
  "å",
  "é",
  "èº",
  "ä»",
  "é­",
  "é",
  "æ",
  "æ°®",
  "å¼",
  "é",
  "ç¢",
  "èµ«",
  "æ¨",
  "å¿ ",
  "è",
  "ç¼¸",
  "çµ",
  "æ¢",
  "å",
  "å·§",
  "å£³",
  "å",
  "æ",
  "è®¯",
  "è¯",
  "ç¢§",
  "ç¥¥",
  "æ¯",
  "é¡µ",
  "å·¡",
  "ç©",
  "æ²",
  "ç",
  "é¾",
  "ä¼¦",
  "ç¥¨",
  "å¯»",
  "æ¡",
  "éº",
  "å£",
  "æ",
  "æ°",
  "é",
  "è¶£",
  "æ¬",
  "è",
  "è¾",
  "è´´",
  "æ",
  "æ»´",
  "ç",
  "é",
  "è¾",
  "å¦»",
  "å¡«",
  "æ¤",
  "å¨",
  "ç­¾",
  "é¹",
  "æ°",
  "ç´«",
  "ç ",
  "é",
  "æ",
  "å",
  "é¶",
  "ä¼",
  "å",
  "ç",
  "ç¶",
  "å©",
  "æ",
  "è",
  "æ¸",
  "å¿",
  "è¾",
  "è¡",
  "é»",
  "è¸",
  "å·©",
  "æ¤",
  "å¶",
  "å¼",
  "æ§½",
  "å²",
  "ä¹³",
  "é",
  "å",
  "ä»",
  "ç",
  "ç ",
  "ç§",
  "ä¹",
  "è°",
  "ä¼´",
  "ç",
  "æµ",
  "ä¸",
  "æ",
  "ç¥",
  "æ©¡",
  "æ³",
  "è¿·",
  "æ",
  "ç",
  "ç§§",
  "è",
  "è¯¦",
  "ç°§",
  "è¸",
  "ç·",
  "è°±",
  "å",
  "å®¾",
  "ç³",
  "æ´",
  "è¾",
  "æ¤",
  "ç«",
  "é",
  "æ",
  "ç²",
  "ä¹",
  "ç»ª",
  "è©",
  "ç±",
  "æ",
  "æ¶",
  "ç",
  "ç",
  "ä¾¦",
  "æ¬",
  "æ",
  "äº«",
  "çº ",
  "é",
  "ç",
  "é",
  "æ·",
  "æ¨",
  "ç²",
  "é¸",
  "ç¬",
  "èµ",
  "é",
  "ç©",
  "éµ",
  "ç¥",
  "ç§",
  "æµ",
  "è²",
  "å½¹",
  "å½¼",
  "æ",
  "é¸­",
  "è¶",
  "å¤",
  "æ¨",
  "ç",
  "è¾",
  "ç§©",
  "åµ",
  "ç½²",
  "æ¢¯",
  "ç",
  "æ»©",
  "æ£",
  "é©±",
  "ç­",
  "å³¡",
  "å",
  "å¥",
  "å¯¿",
  "è¯",
  "æµ¸",
  "æ³",
  "å¸½",
  "è¿",
  "ç¡",
  "ç",
  "è´·",
  "æ¼",
  "ç¨¿",
  "å ",
  "å«©",
  "è",
  "è¯",
  "ç¢",
  "å",
  "è",
  "å¥¥",
  "é¸£",
  "å²­",
  "ç¾",
  "å­",
  "ä¸²",
  "å¡",
  "ç»",
  "éµ",
  "è",
  "ç",
  "é¡",
  "åº",
  "ç­¹",
  "å»",
  "è¾",
  "æ",
  "è¢­",
  "ç­",
  "æ",
  "å",
  "æ±",
  "é¾",
  "é¸",
  "æ¼",
  "æ²",
  "ç",
  "ç",
  "æ·»",
  "æ£",
  "ç©",
  "ç¡",
  "é©",
  "é¼",
  "æ­",
  "ä¾¨",
  "å",
  "æº",
  "ç¢",
  "æ ½",
  "ç",
  "æ¯",
  "æ£",
  "é¦",
  "å",
  "è±ª",
  "è¾½",
  "å",
  "é¸¿",
  "æ¦",
  "å",
  "æ",
  "ç",
  "å",
  "è¾",
  "æ©",
  "é¥®",
  "æ¬",
  "éª",
  "è¾",
  "å¾",
  "æ£",
  "ä¼°",
  "è",
  "ç»",
  "é¾",
  "ä¸",
  "æµ",
  "å§",
  "æ",
  "å®",
  "è¾",
  "é",
  "é",
  "å¿",
  "è",
  "å´",
  "åª",
  "å¡",
  "å",
  "å¬",
  "é©¶",
  "è¯",
  "å·",
  "æ¥",
  "çª",
  "èµ",
  "å¥",
  "ä½",
  "æµ",
  "æ¼«",
  "æ¼",
  "æ",
  "é",
  "æ¡",
  "æ¶",
  "ä»",
  "è¿",
  "ä¿",
  "äº",
  "è",
  "é",
  "æ£±",
  "è¦",
  "æ¡",
  "æ",
  "å",
  "æ",
  "éª",
  "å",
  "æº",
  "æ²¸",
  "å­¤",
  "å",
  "å­",
  "æ¸ ",
  "å±",
  "ç¾",
  "å¦",
  "æ",
  "ä»°",
  "ç ",
  "è",
  "è°",
  "æ",
  "é",
  "æ¡",
  "å²",
  "å",
  "è¡°",
  "ç",
  "æ¸",
  "è",
  "èµ",
  "æ¶",
  "ç",
  "æ¹",
  "é",
  "è",
  "å©",
  "å",
  "ç",
  "çº¬",
  "æ¯",
  "æ¨",
  "ä¼ª",
  "ç",
  "ç®",
  "å¹",
  "é",
  "æ­",
  "è",
  "ç¬¼",
  "é·",
  "å·",
  "å¼",
  "é¥",
  "æ",
  "æ°",
  "å",
  "é¼»",
  "ç¿¼",
  "çº¶",
  "å",
  "ç±",
  "é®",
  "ç½",
  "ç»",
  "æ£",
  "æ",
  "è¨",
  "è¬",
  "å¯º",
  "éª¤",
  "ç©",
  "å¶",
  "æ¯",
  "å",
  "å°¸",
  "å¸",
  "ç»",
  "å¯",
  "çº",
  "ç°",
  "è½°",
  "æ¬£",
  "æ",
  "ç¦",
  "å¾¡",
  "é­",
  "é¦",
  "ä¸§",
  "æ¬",
  "é»",
  "å",
  "æ",
  "æ",
  "é",
  "äº­",
  "é¯",
  "è¿",
  "è",
  "è",
  "é¶",
  "é²",
  "å¿§",
  "é",
  "é¡½",
  "ç¾½",
  "æ¶¨",
  "å¸",
  "ä»",
  "éª",
  "è¾",
  "æ©",
  "æ­",
  "å§",
  "è",
  "æ",
  "é£",
  "æ¼",
  "æ",
  "æ¬º",
  "å¾",
  "é",
  "ç·",
  "æ±",
  "åµ",
  "é¥°",
  "è§",
  "é",
  "é®",
  "è¿",
  "ç",
  "æ",
  "å§»",
  "èµ´",
  "å®´",
  "ç¦",
  "åº",
  "å¸",
  "æ",
  "é",
  "æ¨",
  "é",
  "è£",
  "é¥¼",
  "é",
  "å§¿",
  "æ",
  "å",
  "è¹",
  "å¦¥",
  "æ",
  "è´¤",
  "æ",
  "æ­ª",
  "è¡",
  "èº",
  "ä¸¢",
  "æµ©",
  "å¾½",
  "æ",
  "å«",
  "æ¡",
  "è§",
  "è´ª",
  "æ°",
  "ç¼´",
  "æ±ª",
  "æ",
  "å¯",
  "è¯º",
  "å§",
  "è°",
  "å¶",
  "å£",
  "è¯¬",
  "è",
  "æ",
  "èºº",
  "ç",
  "éª",
  "ä¹",
  "æºª",
  "ä¸",
  "å¢",
  "æ¹",
  "é·",
  "å¨",
  "å®",
  "é©¾",
  "ç¼",
  "æ",
  "æ",
  "é",
  "æ·",
  "é¢",
  "å¹»",
  "æ",
  "æ ",
  "æ¨",
  "ä½³",
  "ä»",
  "è",
  "çª",
  "æ¶¤",
  "å",
  "ç§",
  "å ¡",
  "æ³¼",
  "è±",
  "ç½©",
  "é",
  "æ",
  "è",
  "è",
  "æ»¨",
  "ä¿©",
  "æ",
  "æ¹",
  "ç ",
  "é",
  "éµ",
  "è",
  "ç¯",
  "æ·®",
  "é",
  "ç",
  "ç²ª",
  "ç",
  "å®¿",
  "æ¡£",
  "æ",
  "é©³",
  "å«",
  "è£",
  "å¾",
  "ç®­",
  "æ",
  "è ",
  "æ",
  "æ",
  "è¾¨",
  "æ®¿",
  "è²",
  "æ",
  "æ",
  "é±",
  "å±",
  "ç«",
  "å",
  "è¡",
  "å µ",
  "æ²«",
  "ç±",
  "ç",
  "å ",
  "é",
  "è±",
  "æ²",
  "è¾",
  "é©",
  "ç",
  "å",
  "å··",
  "é¥¿",
  "ç¥¸",
  "ä¸",
  "ç",
  "æº",
  "æ°",
  "é»",
  "å½­",
  "å°",
  "å¿",
  "å¦¨",
  "è",
  "å",
  "é¦",
  "æ¨",
  "ç®",
  "æ­"
]

},{}],87:[function(require,module,exports){
module.exports=[
  "ç",
  "ä¸",
  "æ¯",
  "å¨",
  "ä¸",
  "äº",
  "æ",
  "å",
  "äºº",
  "é",
  "ä¸­",
  "å¤§",
  "çº",
  "ä¸",
  "å",
  "å",
  "æ",
  "ä»¥",
  "è¦",
  "ä»",
  "æ",
  "ä¾",
  "ç¨",
  "å",
  "ç",
  "å°",
  "ä½",
  "å°",
  "æ¼",
  "åº",
  "å°±",
  "å",
  "å°",
  "æ",
  "æ",
  "å¯",
  "ä¸»",
  "ç¼",
  "å¹´",
  "å",
  "å",
  "å·¥",
  "ä¹",
  "è½",
  "ä¸",
  "é",
  "å­",
  "èªª",
  "ç¢",
  "ç¨®",
  "é¢",
  "è",
  "æ¹",
  "å¾",
  "å¤",
  "å®",
  "è¡",
  "å­¸",
  "æ³",
  "æ",
  "æ°",
  "å¾",
  "ç¶",
  "å",
  "ä¸",
  "ä¹",
  "é²",
  "è",
  "ç­",
  "é¨",
  "åº¦",
  "å®¶",
  "é»",
  "å",
  "è£¡",
  "å¦",
  "æ°´",
  "å",
  "é«",
  "èª",
  "äº",
  "ç",
  "èµ·",
  "å°",
  "ç©",
  "ç¾",
  "å¯¦",
  "å ",
  "é",
  "é½",
  "å©",
  "é«",
  "å¶",
  "æ©",
  "ç¶",
  "ä½¿",
  "é»",
  "å¾",
  "æ¥­",
  "æ¬",
  "å»",
  "æ",
  "æ§",
  "å¥½",
  "æ",
  "é",
  "å®",
  "å",
  "é",
  "å ",
  "ç±",
  "å¶",
  "äº",
  "ç¶",
  "å",
  "å¤",
  "å¤©",
  "æ¿",
  "å",
  "æ¥",
  "é£",
  "ç¤¾",
  "ç¾©",
  "äº",
  "å¹³",
  "å½¢",
  "ç¸",
  "å¨",
  "è¡¨",
  "é",
  "æ¨£",
  "è",
  "é",
  "å",
  "é",
  "æ°",
  "ç·",
  "å§",
  "æ¸",
  "æ­£",
  "å¿",
  "å",
  "ä½ ",
  "æ",
  "ç",
  "å",
  "å",
  "éº¼",
  "å©",
  "æ¯",
  "æ",
  "ä½",
  "è³ª",
  "æ°£",
  "ç¬¬",
  "å",
  "é",
  "å½",
  "æ­¤",
  "è®",
  "æ¢",
  "åª",
  "æ²",
  "çµ",
  "è§£",
  "å",
  "æ",
  "å»º",
  "æ",
  "å¬",
  "ç¡",
  "ç³»",
  "è»",
  "å¾",
  "æ",
  "è",
  "æ",
  "ç«",
  "ä»£",
  "æ³",
  "å·²",
  "é",
  "ä¸¦",
  "æ",
  "ç´",
  "é¡",
  "é»¨",
  "ç¨",
  "å±",
  "äº",
  "æ",
  "æ",
  "è±¡",
  "å¡",
  "é©",
  "ä½",
  "å¥",
  "å¸¸",
  "æ",
  "ç¸½",
  "æ¬¡",
  "å",
  "å¼",
  "æ´»",
  "è¨­",
  "å",
  "ç®¡",
  "ç¹",
  "ä»¶",
  "é·",
  "æ±",
  "è",
  "é ­",
  "åº",
  "è³",
  "é",
  "æµ",
  "è·¯",
  "ç´",
  "å°",
  "å",
  "å±±",
  "çµ±",
  "æ¥",
  "ç¥",
  "è¼",
  "å°",
  "çµ",
  "è¦",
  "è¨",
  "å¥",
  "å¥¹",
  "æ",
  "è§",
  "æ",
  "æ ¹",
  "è«",
  "é",
  "è¾²",
  "æ",
  "å¹¾",
  "ä¹",
  "å",
  "å¼·",
  "æ¾",
  "æ±º",
  "è¥¿",
  "è¢«",
  "å¹¹",
  "å",
  "å¿",
  "æ°",
  "å",
  "å",
  "å",
  "ä»»",
  "å",
  "æ",
  "è",
  "é",
  "å",
  "çµ¦",
  "è²",
  "å",
  "é",
  "å³",
  "ä¿",
  "æ²»",
  "å",
  "é ",
  "ç¾",
  "è¦",
  "ç±",
  "é ",
  "ä¸",
  "æµ·",
  "å£",
  "æ±",
  "å°",
  "å¨",
  "å£",
  "å¿",
  "ä¸",
  "é",
  "å¢",
  "ç­",
  "æ¿",
  "é",
  "æ²¹",
  "æ",
  "è¡",
  "æ¥µ",
  "äº¤",
  "å",
  "è¯",
  "ä»",
  "èª",
  "å­",
  "å±",
  "æ¬",
  "æ¶",
  "è­",
  "æ¹",
  "æ¸",
  "ç¾",
  "å",
  "æ¡",
  "è½",
  "æ´",
  "å®",
  "é¢¨",
  "å",
  "æ",
  "ç½",
  "æ",
  "é",
  "è±",
  "å¸¶",
  "å®",
  "å ´",
  "èº«",
  "è»",
  "ä¾",
  "ç",
  "å",
  "å·",
  "è¬",
  "æ¯",
  "ç®",
  "è³",
  "é",
  "èµ°",
  "ç©",
  "ç¤º",
  "è­°",
  "è²",
  "å ±",
  "é¬¥",
  "å®",
  "é¡",
  "å«",
  "é¢",
  "è¯",
  "å",
  "ç¢º",
  "æ",
  "ç§",
  "å¼µ",
  "ä¿¡",
  "é¦¬",
  "ç¯",
  "è©±",
  "ç±³",
  "æ´",
  "ç©º",
  "å",
  "æ³",
  "ä»",
  "é",
  "æº«",
  "å³",
  "å",
  "è¨±",
  "æ­¥",
  "ç¾¤",
  "å»£",
  "ç³",
  "è¨",
  "é",
  "æ®µ",
  "ç ",
  "ç",
  "æ",
  "æ",
  "å¾",
  "å«",
  "ä¸",
  "ç©¶",
  "è§",
  "è¶",
  "ç¹",
  "è£",
  "å½±",
  "ç®",
  "ä½",
  "æ",
  "é³",
  "ç¾",
  "æ¸",
  "å¸",
  "å¤",
  "å®¹",
  "å",
  "é ",
  "é",
  "å",
  "é",
  "é©",
  "é£",
  "æ·",
  "æ·±",
  "é£",
  "è¿",
  "ç¤¦",
  "å",
  "é±",
  "å§",
  "ç´ ",
  "æ",
  "å",
  "å",
  "è¾¦",
  "é",
  "ç",
  "å",
  "ç¿",
  "é¿",
  "ç´",
  "æ¯",
  "è¬",
  "å²",
  "æ",
  "å",
  "ä¾¿",
  "å",
  "å¾",
  "é¸",
  "æ­·",
  "å¸",
  "å",
  "ä½",
  "é¤",
  "æ¶",
  "æ§",
  "åº",
  "ç¨±",
  "å¤ª",
  "æº",
  "ç²¾",
  "å¼",
  "è",
  "ç",
  "æ",
  "ç¶­",
  "å",
  "é¸",
  "æ¨",
  "å¯«",
  "å­",
  "å",
  "æ¯",
  "è¦ª",
  "å¿«",
  "æ",
  "æ¯",
  "é¢",
  "æ¥",
  "æ±",
  "å",
  "ç¼",
  "ç",
  "æ",
  "æ ¼",
  "é¤",
  "æ",
  "ç½®",
  "æ´¾",
  "å±¤",
  "ç",
  "å§",
  "å»",
  "å°",
  "ç",
  "è²",
  "å» ",
  "äº¬",
  "è­",
  "é©",
  "å±¬",
  "å",
  "å",
  "ç«",
  "ä½",
  "èª¿",
  "æ»¿",
  "ç¸£",
  "å±",
  "ç§",
  "å",
  "ç´",
  "ç´°",
  "å¼",
  "è½",
  "è©²",
  "éµ",
  "å¹",
  "å´",
  "é¦",
  "åº",
  "æ¶²",
  "å®",
  "å¾·",
  "é¨",
  "ç",
  "è",
  "å¤±",
  "ç¾",
  "æ­»",
  "è¬",
  "é",
  "å¥³",
  "é»",
  "æ¨",
  "é¡¯",
  "è«",
  "ç½ª",
  "ç¥",
  "è",
  "å¢",
  "å¸­",
  "å«",
  "ä¼",
  "æ",
  "å¯",
  "æ¹",
  "ç",
  "é ",
  "é²",
  "è",
  "ç",
  "è±",
  "æ°§",
  "å¢",
  "å",
  "æ",
  "å°",
  "è½",
  "æ¨",
  "å¹«",
  "è¼ª",
  "ç ´",
  "äº",
  "å¸«",
  "å",
  "æ³¨",
  "é ",
  "å­",
  "æ",
  "æ",
  "ä¾",
  "æ²³",
  "æ",
  "å°",
  "å¦",
  "æ½",
  "æ¸",
  "æ¨¹",
  "æº¶",
  "æ",
  "æ­¢",
  "æ¡",
  "è¨",
  "å£«",
  "å",
  "æ­¦",
  "åº",
  "è",
  "é­",
  "æ³¢",
  "è¦",
  "å",
  "è²»",
  "ç·",
  "æ",
  "å·¦",
  "ç« ",
  "æ©",
  "æ",
  "å®³",
  "çº",
  "è¼",
  "æ",
  "è©¦",
  "é£",
  "å",
  "åµ",
  "æº",
  "å¤",
  "è­·",
  "å¸",
  "è¶³",
  "æ",
  "ç·´",
  "å·®",
  "è´",
  "æ¿",
  "ç°",
  "é",
  "é»",
  "ç¯",
  "è² ",
  "æ",
  "è",
  "ç¹¼",
  "è",
  "ä¼¼",
  "é¤",
  "å ",
  "æ²",
  "è¼¸",
  "ä¿®",
  "æ",
  "å",
  "å¤«",
  "å¤ ",
  "é",
  "ç­",
  "è¹",
  "ä½",
  "å³",
  "è²¡",
  "å",
  "å¯",
  "æ¥",
  "è·",
  "è¦º",
  "æ¼¢",
  "ç«",
  "å",
  "å·´",
  "è·",
  "é",
  "é",
  "é£",
  "æª¢",
  "å¸",
  "å©",
  "æ",
  "é½",
  "äº",
  "å",
  "åµ",
  "æ",
  "è",
  "æ",
  "å£",
  "ç­",
  "å¤",
  "å¾",
  "æ",
  "æª",
  "è·",
  "ç",
  "é¼",
  "æ¾",
  "ç«¯",
  "è²¬",
  "ç«",
  "ç°¡",
  "è¿°",
  "é¢",
  "å¯",
  "ç¡",
  "å¸",
  "å°",
  "è",
  "è¡",
  "æ¿",
  "ç¨",
  "ä»¤",
  "é",
  "é¿",
  "å®£",
  "ç°",
  "é",
  "è«",
  "è¶",
  "å¾®",
  "è®",
  "æ§",
  "å·",
  "è¯",
  "è»¸",
  "æ¾",
  "å¦",
  "ç´",
  "ç",
  "ä¾",
  "åª",
  "é ",
  "ç¤",
  "è¼",
  "å",
  "æ¿",
  "çª",
  "å",
  "ç²",
  "æµ",
  "ç¥",
  "å®¢",
  "è¢",
  "å·",
  "å",
  "çµ",
  "æ",
  "å¡",
  "å",
  "æ¸¬",
  "çµ²",
  "å",
  "è¨´",
  "å¿µ",
  "é³",
  "ä»",
  "ç¾",
  "é¹½",
  "å",
  "æ´",
  "é¯",
  "è¦",
  "å¤",
  "å",
  "ç§»",
  "é »",
  "é",
  "é ",
  "æ··",
  "æ¯",
  "ç­",
  "ç®",
  "çµ",
  "è",
  "æ±½",
  "æ",
  "é²",
  "åª",
  "æ¢",
  "è·",
  "è¡",
  "å",
  "ç",
  "å¤®",
  "å¯",
  "ç",
  "è¿",
  "å¢",
  "è¥",
  "å°",
  "æ´²",
  "å»",
  "æ¬",
  "æ¿",
  "å­",
  "æ",
  "ç",
  "å®¤",
  "å¾",
  "æ ¸",
  "æ ¡",
  "æ£",
  "ä¾µ",
  "å§",
  "ç²",
  "é",
  "ä¹",
  "è",
  "å³",
  "è",
  "æ¨¡",
  "æ¹",
  "è²¨",
  "æ",
  "é ",
  "é»",
  "æ¯«",
  "æ®",
  "ç©©",
  "ä¹",
  "åª½",
  "æ¤",
  "æ¯",
  "æ´",
  "é",
  "èª",
  "æ®",
  "é",
  "å®",
  "æ¿",
  "åº",
  "ç´",
  "é«",
  "ç¼º",
  "é¨",
  "å",
  "é",
  "å",
  "å",
  "æ¥",
  "å±",
  "èª¤",
  "è¨",
  "é¡",
  "å¯©",
  "é",
  "ç²",
  "è¶",
  "é®®",
  "ç³§",
  "æ¤",
  "å­©",
  "è«",
  "ç¡«",
  "è¥",
  "å",
  "é¾",
  "æ¼",
  "ç¶",
  "æ¼¸",
  "è¡",
  "æ­¡",
  "æ¢°",
  "æ",
  "æ­",
  "æ²",
  "å",
  "æ»",
  "è¬",
  "ç¾",
  "è¨",
  "æ",
  "ç²",
  "äº",
  "ç",
  "ç",
  "ä¹",
  "æ®º",
  "è¥",
  "å¯§",
  "é­¯",
  "è²´",
  "é",
  "ç¤",
  "è®",
  "ç­",
  "ä¼¯",
  "é¦",
  "ä»",
  "è¿«",
  "å¥",
  "è±",
  "å¹",
  "æ¡",
  "è­",
  "æ",
  "å¼¦",
  "è",
  "æ²",
  "å",
  "ç©¿",
  "å·",
  "ç­",
  "æ¨",
  "èª°",
  "é ",
  "ç",
  "ç¸®",
  "å¾µ",
  "è",
  "å",
  "æ¾",
  "è³",
  "å°",
  "ç°",
  "å",
  "è",
  "æ",
  "ç¦",
  "è²·",
  "æ",
  "äº",
  "æ¦",
  "æ¢",
  "æ",
  "ç£",
  "å",
  "ç¥",
  "ç",
  "ä¿",
  "é",
  "è£",
  "è©",
  "ç¿»",
  "è",
  "è¸",
  "å°¼",
  "è¡£",
  "å¯¬",
  "æ",
  "æ£",
  "å¸",
  "å·",
  "æ",
  "å",
  "ç§",
  "å®",
  "æ°«",
  "å¥",
  "ç£",
  "æ¯",
  "æ¶",
  "äº®",
  "æ«",
  "æ²",
  "æ¶",
  "ç·¨",
  "ç",
  "è§¸",
  "æ ",
  "é·",
  "é·",
  "è©©",
  "åº§",
  "å±",
  "æ",
  "è£",
  "è",
  "å¼",
  "å¨",
  "æ¯",
  "å¨",
  "ç¶ ",
  "æ¶",
  "å",
  "ç",
  "è¡¡",
  "é",
  "å­«",
  "å»¶",
  "å±",
  "è ",
  "å±",
  "é",
  "è¨",
  "é¸",
  "é¡§",
  "æ",
  "å",
  "ç",
  "æ­²",
  "æª",
  "æ",
  "è",
  "å",
  "ç",
  "è¶",
  "è·³",
  "å¥",
  "å­£",
  "èª²",
  "å±",
  "è¡",
  "é¡",
  "æ¬¾",
  "ç´¹",
  "å·",
  "é½",
  "å",
  "è¸",
  "æ®",
  "æ°¸",
  "å®",
  "è",
  "å·",
  "ç",
  "å²©",
  "å¼±",
  "é¶",
  "æ¥",
  "å¥",
  "æ²¿",
  "é²",
  "æ¡¿",
  "æ¢",
  "æ»",
  "é®",
  "é£¯",
  "æ¿",
  "èª",
  "æ·",
  "è¶",
  "åº«",
  "å¥ª",
  "ä¼",
  "é",
  "ç¨",
  "é",
  "æ»",
  "è³½",
  "æ­¸",
  "å¬",
  "é¼",
  "æ­",
  "ç¤",
  "è£",
  "éª",
  "åº·",
  "å¯",
  "é",
  "è",
  "ç´",
  "å",
  "ç³",
  "è",
  "æ©«",
  "ç¬¦",
  "ç§",
  "åª",
  "å ",
  "å",
  "æ§",
  "æ½¤",
  "å¹",
  "å",
  "ç«",
  "ç",
  "è²",
  "æ¾¤",
  "è¦",
  "å£¤",
  "ç¢³",
  "æ­",
  "é",
  "å´",
  "å¯¨",
  "æ¢",
  "å¾¹",
  "æ®",
  "æ",
  "è",
  "åº­",
  "ç´",
  "å½",
  "é£¼",
  "ä¼¸",
  "æ",
  "éº¥",
  "æ¿",
  "æ",
  "è·",
  "ç¦",
  "å¡",
  "åº",
  "ç¯",
  "æ¡",
  "æ¶",
  "è¨ª",
  "å¡",
  "å¥",
  "é",
  "æ¢",
  "å",
  "æ",
  "è·¡",
  "å¡",
  "æ°¯",
  "é",
  "ä»½",
  "æ¯",
  "æ³¥",
  "é",
  "æ´",
  "æº",
  "ç°",
  "å½©",
  "è³£",
  "è",
  "å¤",
  "æ",
  "å¿",
  "é",
  "ç»",
  "ç¡¬",
  "äº",
  "ç¹",
  "å",
  "éª",
  "å½",
  "äº¦",
  "æ½",
  "ç¯",
  "é£",
  "é°",
  "ä¸",
  "å°º",
  "è¿½",
  "å ",
  "é",
  "è¿",
  "æ³",
  "ç¸",
  "æ¨",
  "é¿",
  "è¬",
  "å¸",
  "é",
  "è±¬",
  "æ",
  "ç´¯",
  "å",
  "å¸",
  "é¤¨",
  "ç´¢",
  "ç§¦",
  "è",
  "æ½®",
  "çº",
  "è±",
  "å¿½",
  "æ",
  "é©",
  "å¡",
  "éº",
  "æ",
  "æ±",
  "æ¿",
  "çº",
  "ç²",
  "å¾",
  "å°",
  "ç",
  "æ¥",
  "è¬",
  "å¥®",
  "è³¼",
  "ç£¨",
  "å",
  "æ± ",
  "æ",
  "ç¢",
  "éª¨",
  "ç£",
  "æ",
  "å¼",
  "æ´",
  "å²",
  "è²«",
  "æ®",
  "é",
  "è©",
  "äº¡",
  "å£",
  "é ",
  "å¯¶",
  "å",
  "å¡µ",
  "è",
  "æ­",
  "ç®",
  "æ®",
  "å¬",
  "æ©",
  "å©¦",
  "è­¦",
  "ç¶",
  "æ",
  "å³",
  "ä»",
  "æµ®",
  "é­",
  "å¾",
  "æ¨",
  "æ",
  "è°·",
  "è´",
  "ç®±",
  "é",
  "è¨",
  "ç·",
  "å¹",
  "å",
  "ç´",
  "å",
  "æ",
  "å®",
  "ç»",
  "å·¨",
  "è",
  "å¦",
  "æ¦®",
  "é",
  "ç£",
  "éµ",
  "å¡",
  "é§",
  "é",
  "æ",
  "æ©",
  "å",
  "å",
  "é¹¼",
  "é½",
  "æª",
  "ç",
  "éº»",
  "ç´¡",
  "ç¦",
  "å»¢",
  "ç",
  "ç",
  "ç·©",
  "æ·¨",
  "ç",
  "æ",
  "å©",
  "æ¶",
  "ç­",
  "å´",
  "æ",
  "å²¸",
  "æ",
  "è",
  "è¡",
  "è",
  "å§",
  "è²¿",
  "è",
  "å¥´",
  "å¦",
  "æ£",
  "ä¹",
  "å¤¥",
  "æ¢",
  "å»",
  "ç´",
  "æ",
  "è¾¯",
  "è³",
  "å½ª",
  "è£",
  "å",
  "ç",
  "æµ",
  "è",
  "ç§",
  "è©",
  "ä¿",
  "ç¶²",
  "è",
  "åº",
  "å´",
  "ç¸±",
  "å¯¸",
  "æ±",
  "æ",
  "æ´ª",
  "è³",
  "é",
  "æ¬",
  "ç",
  "ç¯",
  "æ´¥",
  "ç¨»",
  "ç",
  "è»",
  "å",
  "å",
  "æ»¾",
  "å",
  "è",
  "è³",
  "è¯",
  "å¡",
  "æ±",
  "çª",
  "è¿",
  "å",
  "æ",
  "å°¾",
  "è»",
  "å°",
  "è²¢",
  "ç»",
  "é»",
  "å",
  "é½",
  "å",
  "é",
  "é",
  "æ°¨",
  "é­",
  "å³°",
  "å¹£",
  "æ¸¯",
  "ä¼",
  "è»",
  "ç",
  "ç¢",
  "æ¦",
  "è«",
  "åº",
  "æµª",
  "ç§",
  "æ´",
  "æ ª",
  "å¥",
  "å®",
  "è¡",
  "å³¶",
  "ç",
  "æ³¡",
  "ç¡",
  "ç«¥",
  "é",
  "æ¹¯",
  "é¥",
  "ä¼",
  "å¯",
  "è",
  "ç§",
  "ç¹",
  "ç¸",
  "å²",
  "ç£·",
  "ç¸¾",
  "æ",
  "æ·¡",
  "å°",
  "å",
  "é·",
  "æ´",
  "å",
  "å¾",
  "é¡",
  "æ·",
  "ç¨",
  "å¿",
  "æ³µ",
  "è",
  "æ",
  "æ´",
  "æ",
  "é¡",
  "è¾",
  "å£¯",
  "é",
  "è²§",
  "è",
  "å½",
  "æ©",
  "æ³°",
  "å¹¼",
  "å»·",
  "å°",
  "çª",
  "ç¶±",
  "å¼",
  "é¸",
  "ç",
  "æ°",
  "å®®",
  "å§",
  "é",
  "ç",
  "æª",
  "å°¤",
  "ç´",
  "å¾ª",
  "æ",
  "è",
  "é",
  "å¤¾",
  "è°",
  "ç·£",
  "ç ",
  "çª®",
  "æ£®",
  "æ",
  "ç«¹",
  "æº",
  "å¬",
  "ç¹©",
  "æ¶",
  "é¦",
  "å©",
  "å¹¸",
  "æ¼¿",
  "æ¬",
  "æ",
  "ç",
  "è²¯",
  "ç¦®",
  "æ¿¾",
  "é",
  "ç´",
  "ç½·",
  "æ",
  "å±",
  "å",
  "è¢",
  "å",
  "å¤",
  "ç½°",
  "ç¦",
  "æ½",
  "ä¼",
  "å¢¨",
  "æ¬²",
  "ç¸«",
  "å§",
  "å",
  "é£½",
  "ä»¿",
  "ç",
  "é",
  "é¬¼",
  "éº",
  "è·¨",
  "é»",
  "æ",
  "é",
  "æ",
  "å",
  "è¢",
  "ç­",
  "æ±¡",
  "å¹",
  "è«¸",
  "å¼§",
  "åµ",
  "æ¢",
  "å¥¶",
  "æ½",
  "ç½",
  "è",
  "é",
  "è¯",
  "è¨",
  "æ±",
  "æ¯",
  "æ",
  "å¯",
  "æº",
  "å",
  "å¯",
  "å±",
  "èº",
  "æ¸¡",
  "æ",
  "ä¸¹",
  "è±",
  "è²",
  "ç¢°",
  "æ",
  "ç¹",
  "æ´",
  "ç¢¼",
  "å¤¢",
  "è½",
  "ç",
  "èµ¤",
  "æ¼",
  "å­",
  "æ¬",
  "é¡",
  "å¥",
  "é",
  "ä»²",
  "è",
  "ç¨",
  "å¦¹",
  "ä¹",
  "ç",
  "ç³",
  "æ¡",
  "éµ",
  "å",
  "é",
  "èº",
  "å",
  "é­",
  "é³",
  "æ",
  "æ°®",
  "å¼",
  "é±",
  "ç¤",
  "èµ«",
  "æ¥",
  "å¿ ",
  "è",
  "ç¼¸",
  "ç½",
  "æ¶",
  "å",
  "å·§",
  "æ®¼",
  "å",
  "æ",
  "è¨",
  "èª ",
  "ç¢§",
  "ç¥¥",
  "æ¯",
  "é ",
  "å·¡",
  "ç©",
  "æ²",
  "ç",
  "é½¡",
  "å«",
  "ç¥¨",
  "å°",
  "æ¡",
  "éª",
  "è",
  "æ",
  "æ°",
  "é­",
  "è¶£",
  "æ¬",
  "è",
  "é¨°",
  "è²¼",
  "æ",
  "æ»´",
  "ç",
  "é",
  "è¼",
  "å¦»",
  "å¡«",
  "æ¤",
  "å²",
  "ç°½",
  "é¬§",
  "æ¾",
  "ç´«",
  "ç ",
  "é",
  "æ²",
  "å",
  "é¶",
  "ä¼",
  "é¤µ",
  "ç",
  "ç¶",
  "å©",
  "æ«",
  "è",
  "æ¸",
  "å¿",
  "è¦",
  "è ",
  "é°",
  "è¸",
  "é",
  "æ ",
  "å¶",
  "æ£",
  "æ§½",
  "å",
  "ä¹³",
  "é§",
  "å",
  "ä»",
  "ç",
  "ç£",
  "ç§",
  "ç",
  "è¦",
  "ä¼´",
  "ç",
  "æ·º",
  "ä¸",
  "æ«",
  "ç¥",
  "æ©¡",
  "æ³",
  "è¿·",
  "æ",
  "ç",
  "ç§§",
  "è½",
  "è©³",
  "ç°§",
  "è¸",
  "ç·",
  "è­",
  "å",
  "è³",
  "ç³",
  "æ´",
  "è¼",
  "æ¤",
  "ç«¶",
  "é",
  "æ",
  "ç²",
  "ä¹",
  "ç·",
  "è©",
  "ç±",
  "æ",
  "å¡",
  "ç",
  "ç",
  "åµ",
  "æ¸",
  "æ",
  "äº«",
  "ç³¾",
  "é",
  "ç",
  "é",
  "æ·",
  "æ¨",
  "ç²",
  "é¸",
  "ç¬",
  "è³",
  "é",
  "ç©",
  "éµ",
  "ç¥",
  "ç§",
  "æµ",
  "è²",
  "å½¹",
  "å½¼",
  "æ",
  "é´¨",
  "è¶¨",
  "é³³",
  "æ¨",
  "ç",
  "è¼©",
  "ç§©",
  "åµ",
  "ç½²",
  "æ¢¯",
  "ç",
  "ç",
  "æ£",
  "é©",
  "ç¯©",
  "å³½",
  "å",
  "å¥",
  "å£½",
  "è­¯",
  "æµ¸",
  "æ³",
  "å¸½",
  "é²",
  "ç½",
  "ç",
  "è²¸",
  "æ¼",
  "ç¨¿",
  "å ",
  "å«©",
  "è",
  "è¯",
  "ç¢",
  "å",
  "è",
  "å¥§",
  "é³´",
  "å¶º",
  "ç¾",
  "æ",
  "ä¸²",
  "å¡",
  "ç¹ª",
  "éµ",
  "è",
  "ç",
  "é«",
  "å»",
  "ç±",
  "å",
  "è¼",
  "æ",
  "è¥²",
  "ç­",
  "æ",
  "å",
  "æ±",
  "é",
  "é³¥",
  "æ¼",
  "æ²",
  "ç",
  "ç",
  "æ·»",
  "æ£",
  "ç©",
  "ç¡",
  "é",
  "é¼",
  "æ­",
  "å",
  "æ¶¼",
  "æº",
  "ç¢",
  "æ ½",
  "ç",
  "æ¯",
  "æ£",
  "é¤¾",
  "å¸",
  "è±ª",
  "é¼",
  "å",
  "é´»",
  "æ¦",
  "å",
  "æ",
  "ç",
  "å",
  "è¼¥",
  "æ©",
  "é£²",
  "æ¬",
  "ç½µ",
  "è¾­",
  "å¾",
  "æ£",
  "ä¼°",
  "è£",
  "çµ¨",
  "é§",
  "ä¸",
  "æµ",
  "å§",
  "æ¬",
  "å®",
  "è¼¯",
  "é",
  "é",
  "å",
  "è",
  "å´",
  "åª",
  "å¡",
  "å»³",
  "å¬",
  "é§",
  "è¯",
  "å·",
  "æ¥",
  "çª",
  "è³¦",
  "å¥",
  "ä½",
  "æ¾",
  "æ¼«",
  "æ¼",
  "æ",
  "é£",
  "æ¡",
  "æ¶",
  "ä»",
  "è¿",
  "ä¿",
  "è§",
  "è",
  "é",
  "æ£±",
  "è¦",
  "æ¡",
  "æ",
  "å",
  "æ",
  "é¨",
  "å",
  "æº",
  "æ²¸",
  "å­¤",
  "å",
  "å­",
  "æ¸ ",
  "å±",
  "ç¾",
  "å¦",
  "æ",
  "ä»°",
  "ç ",
  "è¹",
  "è«§",
  "æ",
  "é»´",
  "æ¡",
  "å´",
  "å",
  "è¡°",
  "ç",
  "æ»²",
  "è",
  "è³´",
  "æ¹§",
  "ç",
  "æ¹",
  "é±",
  "è",
  "å©",
  "å²",
  "ç´",
  "ç·¯",
  "æ¯",
  "æ¨",
  "å½",
  "ç",
  "ç®",
  "å",
  "é",
  "æ­",
  "è",
  "ç± ",
  "é·",
  "å·",
  "å¼",
  "é",
  "æ",
  "å",
  "å",
  "é¼»",
  "ç¿¼",
  "ç¶¸",
  "æ",
  "ç",
  "é®",
  "ç½",
  "çµ¡",
  "æ£",
  "æ",
  "è¨",
  "è¬",
  "å¯º",
  "é©",
  "ç©",
  "å¶",
  "æ¯",
  "å",
  "å±",
  "å¸",
  "ç´³",
  "å¯",
  "ç§",
  "ç°",
  "è½",
  "æ¬£",
  "æ",
  "ç¦",
  "ç¦¦",
  "é ",
  "é¦",
  "åª",
  "æ¬",
  "é",
  "å£",
  "æ",
  "æ²",
  "é",
  "äº­",
  "é¯",
  "é",
  "è",
  "è",
  "é¶",
  "é",
  "æ",
  "é",
  "é ",
  "ç¾½",
  "æ¼²",
  "å¸",
  "ä»",
  "éª",
  "é¢",
  "æ²",
  "æ­",
  "å§",
  "è",
  "æ",
  "é£",
  "æ¼",
  "æ",
  "æ¬º",
  "å¾",
  "é",
  "ç·",
  "æ±",
  "åµ",
  "é£¾",
  "è­",
  "é",
  "éµ",
  "é·",
  "ç",
  "æ",
  "å§»",
  "èµ´",
  "å®´",
  "ç©",
  "åµ",
  "å¸³",
  "æ",
  "é´",
  "æ¨",
  "é",
  "è£",
  "é¤",
  "é",
  "å§¿",
  "æ",
  "å",
  "è¹",
  "å¦¥",
  "æ",
  "è³¢",
  "æ",
  "æ­ª",
  "è¡",
  "èº",
  "ä¸",
  "æµ©",
  "å¾½",
  "æ",
  "å¢",
  "æ",
  "è¦½",
  "è²ª",
  "æ°",
  "ç¹³",
  "æ±ª",
  "æ",
  "é¦®",
  "è«¾",
  "å§",
  "èª¼",
  "å",
  "å£",
  "èª£",
  "è",
  "æ",
  "èºº",
  "ç",
  "é¨",
  "å¬",
  "æºª",
  "å¢",
  "ç§",
  "æ¹",
  "æ¶",
  "è«®",
  "å®",
  "é§",
  "çº",
  "æ",
  "æ",
  "éº",
  "æ²",
  "é ",
  "å¹»",
  "æ",
  "æ ",
  "æ",
  "ä½³",
  "ä»",
  "è",
  "çª©",
  "æ»",
  "å",
  "ç§",
  "å ¡",
  "æ½",
  "è¥",
  "ç½©",
  "é",
  "æ",
  "è",
  "è¼",
  "æ¿±",
  "å",
  "æ",
  "æ¹",
  "ç ",
  "é",
  "éµ",
  "è",
  "ç",
  "æ·®",
  "é",
  "ç",
  "ç³",
  "ç",
  "å®¿",
  "æª",
  "æ",
  "é§",
  "å«",
  "è£",
  "å¾",
  "ç®­",
  "æ",
  "è¸",
  "æ",
  "æ¬",
  "è¾¨",
  "æ®¿",
  "è®",
  "æ¤",
  "æª",
  "é¬",
  "å±",
  "ç«",
  "å",
  "è¡",
  "å µ",
  "æ²«",
  "çº",
  "æ¢",
  "ç",
  "é£",
  "è",
  "æ²",
  "è½",
  "é¤",
  "ç",
  "å£©",
  "å··",
  "é¤",
  "ç¦",
  "ä¸",
  "ç",
  "æº",
  "æ°",
  "é",
  "å½­",
  "å",
  "å¿",
  "å¦¨",
  "è",
  "å",
  "é",
  "æ¨",
  "ç®",
  "æ­"
]

},{}],88:[function(require,module,exports){
module.exports=[
  "abandon",
  "ability",
  "able",
  "about",
  "above",
  "absent",
  "absorb",
  "abstract",
  "absurd",
  "abuse",
  "access",
  "accident",
  "account",
  "accuse",
  "achieve",
  "acid",
  "acoustic",
  "acquire",
  "across",
  "act",
  "action",
  "actor",
  "actress",
  "actual",
  "adapt",
  "add",
  "addict",
  "address",
  "adjust",
  "admit",
  "adult",
  "advance",
  "advice",
  "aerobic",
  "affair",
  "afford",
  "afraid",
  "again",
  "age",
  "agent",
  "agree",
  "ahead",
  "aim",
  "air",
  "airport",
  "aisle",
  "alarm",
  "album",
  "alcohol",
  "alert",
  "alien",
  "all",
  "alley",
  "allow",
  "almost",
  "alone",
  "alpha",
  "already",
  "also",
  "alter",
  "always",
  "amateur",
  "amazing",
  "among",
  "amount",
  "amused",
  "analyst",
  "anchor",
  "ancient",
  "anger",
  "angle",
  "angry",
  "animal",
  "ankle",
  "announce",
  "annual",
  "another",
  "answer",
  "antenna",
  "antique",
  "anxiety",
  "any",
  "apart",
  "apology",
  "appear",
  "apple",
  "approve",
  "april",
  "arch",
  "arctic",
  "area",
  "arena",
  "argue",
  "arm",
  "armed",
  "armor",
  "army",
  "around",
  "arrange",
  "arrest",
  "arrive",
  "arrow",
  "art",
  "artefact",
  "artist",
  "artwork",
  "ask",
  "aspect",
  "assault",
  "asset",
  "assist",
  "assume",
  "asthma",
  "athlete",
  "atom",
  "attack",
  "attend",
  "attitude",
  "attract",
  "auction",
  "audit",
  "august",
  "aunt",
  "author",
  "auto",
  "autumn",
  "average",
  "avocado",
  "avoid",
  "awake",
  "aware",
  "away",
  "awesome",
  "awful",
  "awkward",
  "axis",
  "baby",
  "bachelor",
  "bacon",
  "badge",
  "bag",
  "balance",
  "balcony",
  "ball",
  "bamboo",
  "banana",
  "banner",
  "bar",
  "barely",
  "bargain",
  "barrel",
  "base",
  "basic",
  "basket",
  "battle",
  "beach",
  "bean",
  "beauty",
  "because",
  "become",
  "beef",
  "before",
  "begin",
  "behave",
  "behind",
  "believe",
  "below",
  "belt",
  "bench",
  "benefit",
  "best",
  "betray",
  "better",
  "between",
  "beyond",
  "bicycle",
  "bid",
  "bike",
  "bind",
  "biology",
  "bird",
  "birth",
  "bitter",
  "black",
  "blade",
  "blame",
  "blanket",
  "blast",
  "bleak",
  "bless",
  "blind",
  "blood",
  "blossom",
  "blouse",
  "blue",
  "blur",
  "blush",
  "board",
  "boat",
  "body",
  "boil",
  "bomb",
  "bone",
  "bonus",
  "book",
  "boost",
  "border",
  "boring",
  "borrow",
  "boss",
  "bottom",
  "bounce",
  "box",
  "boy",
  "bracket",
  "brain",
  "brand",
  "brass",
  "brave",
  "bread",
  "breeze",
  "brick",
  "bridge",
  "brief",
  "bright",
  "bring",
  "brisk",
  "broccoli",
  "broken",
  "bronze",
  "broom",
  "brother",
  "brown",
  "brush",
  "bubble",
  "buddy",
  "budget",
  "buffalo",
  "build",
  "bulb",
  "bulk",
  "bullet",
  "bundle",
  "bunker",
  "burden",
  "burger",
  "burst",
  "bus",
  "business",
  "busy",
  "butter",
  "buyer",
  "buzz",
  "cabbage",
  "cabin",
  "cable",
  "cactus",
  "cage",
  "cake",
  "call",
  "calm",
  "camera",
  "camp",
  "can",
  "canal",
  "cancel",
  "candy",
  "cannon",
  "canoe",
  "canvas",
  "canyon",
  "capable",
  "capital",
  "captain",
  "car",
  "carbon",
  "card",
  "cargo",
  "carpet",
  "carry",
  "cart",
  "case",
  "cash",
  "casino",
  "castle",
  "casual",
  "cat",
  "catalog",
  "catch",
  "category",
  "cattle",
  "caught",
  "cause",
  "caution",
  "cave",
  "ceiling",
  "celery",
  "cement",
  "census",
  "century",
  "cereal",
  "certain",
  "chair",
  "chalk",
  "champion",
  "change",
  "chaos",
  "chapter",
  "charge",
  "chase",
  "chat",
  "cheap",
  "check",
  "cheese",
  "chef",
  "cherry",
  "chest",
  "chicken",
  "chief",
  "child",
  "chimney",
  "choice",
  "choose",
  "chronic",
  "chuckle",
  "chunk",
  "churn",
  "cigar",
  "cinnamon",
  "circle",
  "citizen",
  "city",
  "civil",
  "claim",
  "clap",
  "clarify",
  "claw",
  "clay",
  "clean",
  "clerk",
  "clever",
  "click",
  "client",
  "cliff",
  "climb",
  "clinic",
  "clip",
  "clock",
  "clog",
  "close",
  "cloth",
  "cloud",
  "clown",
  "club",
  "clump",
  "cluster",
  "clutch",
  "coach",
  "coast",
  "coconut",
  "code",
  "coffee",
  "coil",
  "coin",
  "collect",
  "color",
  "column",
  "combine",
  "come",
  "comfort",
  "comic",
  "common",
  "company",
  "concert",
  "conduct",
  "confirm",
  "congress",
  "connect",
  "consider",
  "control",
  "convince",
  "cook",
  "cool",
  "copper",
  "copy",
  "coral",
  "core",
  "corn",
  "correct",
  "cost",
  "cotton",
  "couch",
  "country",
  "couple",
  "course",
  "cousin",
  "cover",
  "coyote",
  "crack",
  "cradle",
  "craft",
  "cram",
  "crane",
  "crash",
  "crater",
  "crawl",
  "crazy",
  "cream",
  "credit",
  "creek",
  "crew",
  "cricket",
  "crime",
  "crisp",
  "critic",
  "crop",
  "cross",
  "crouch",
  "crowd",
  "crucial",
  "cruel",
  "cruise",
  "crumble",
  "crunch",
  "crush",
  "cry",
  "crystal",
  "cube",
  "culture",
  "cup",
  "cupboard",
  "curious",
  "current",
  "curtain",
  "curve",
  "cushion",
  "custom",
  "cute",
  "cycle",
  "dad",
  "damage",
  "damp",
  "dance",
  "danger",
  "daring",
  "dash",
  "daughter",
  "dawn",
  "day",
  "deal",
  "debate",
  "debris",
  "decade",
  "december",
  "decide",
  "decline",
  "decorate",
  "decrease",
  "deer",
  "defense",
  "define",
  "defy",
  "degree",
  "delay",
  "deliver",
  "demand",
  "demise",
  "denial",
  "dentist",
  "deny",
  "depart",
  "depend",
  "deposit",
  "depth",
  "deputy",
  "derive",
  "describe",
  "desert",
  "design",
  "desk",
  "despair",
  "destroy",
  "detail",
  "detect",
  "develop",
  "device",
  "devote",
  "diagram",
  "dial",
  "diamond",
  "diary",
  "dice",
  "diesel",
  "diet",
  "differ",
  "digital",
  "dignity",
  "dilemma",
  "dinner",
  "dinosaur",
  "direct",
  "dirt",
  "disagree",
  "discover",
  "disease",
  "dish",
  "dismiss",
  "disorder",
  "display",
  "distance",
  "divert",
  "divide",
  "divorce",
  "dizzy",
  "doctor",
  "document",
  "dog",
  "doll",
  "dolphin",
  "domain",
  "donate",
  "donkey",
  "donor",
  "door",
  "dose",
  "double",
  "dove",
  "draft",
  "dragon",
  "drama",
  "drastic",
  "draw",
  "dream",
  "dress",
  "drift",
  "drill",
  "drink",
  "drip",
  "drive",
  "drop",
  "drum",
  "dry",
  "duck",
  "dumb",
  "dune",
  "during",
  "dust",
  "dutch",
  "duty",
  "dwarf",
  "dynamic",
  "eager",
  "eagle",
  "early",
  "earn",
  "earth",
  "easily",
  "east",
  "easy",
  "echo",
  "ecology",
  "economy",
  "edge",
  "edit",
  "educate",
  "effort",
  "egg",
  "eight",
  "either",
  "elbow",
  "elder",
  "electric",
  "elegant",
  "element",
  "elephant",
  "elevator",
  "elite",
  "else",
  "embark",
  "embody",
  "embrace",
  "emerge",
  "emotion",
  "employ",
  "empower",
  "empty",
  "enable",
  "enact",
  "end",
  "endless",
  "endorse",
  "enemy",
  "energy",
  "enforce",
  "engage",
  "engine",
  "enhance",
  "enjoy",
  "enlist",
  "enough",
  "enrich",
  "enroll",
  "ensure",
  "enter",
  "entire",
  "entry",
  "envelope",
  "episode",
  "equal",
  "equip",
  "era",
  "erase",
  "erode",
  "erosion",
  "error",
  "erupt",
  "escape",
  "essay",
  "essence",
  "estate",
  "eternal",
  "ethics",
  "evidence",
  "evil",
  "evoke",
  "evolve",
  "exact",
  "example",
  "excess",
  "exchange",
  "excite",
  "exclude",
  "excuse",
  "execute",
  "exercise",
  "exhaust",
  "exhibit",
  "exile",
  "exist",
  "exit",
  "exotic",
  "expand",
  "expect",
  "expire",
  "explain",
  "expose",
  "express",
  "extend",
  "extra",
  "eye",
  "eyebrow",
  "fabric",
  "face",
  "faculty",
  "fade",
  "faint",
  "faith",
  "fall",
  "false",
  "fame",
  "family",
  "famous",
  "fan",
  "fancy",
  "fantasy",
  "farm",
  "fashion",
  "fat",
  "fatal",
  "father",
  "fatigue",
  "fault",
  "favorite",
  "feature",
  "february",
  "federal",
  "fee",
  "feed",
  "feel",
  "female",
  "fence",
  "festival",
  "fetch",
  "fever",
  "few",
  "fiber",
  "fiction",
  "field",
  "figure",
  "file",
  "film",
  "filter",
  "final",
  "find",
  "fine",
  "finger",
  "finish",
  "fire",
  "firm",
  "first",
  "fiscal",
  "fish",
  "fit",
  "fitness",
  "fix",
  "flag",
  "flame",
  "flash",
  "flat",
  "flavor",
  "flee",
  "flight",
  "flip",
  "float",
  "flock",
  "floor",
  "flower",
  "fluid",
  "flush",
  "fly",
  "foam",
  "focus",
  "fog",
  "foil",
  "fold",
  "follow",
  "food",
  "foot",
  "force",
  "forest",
  "forget",
  "fork",
  "fortune",
  "forum",
  "forward",
  "fossil",
  "foster",
  "found",
  "fox",
  "fragile",
  "frame",
  "frequent",
  "fresh",
  "friend",
  "fringe",
  "frog",
  "front",
  "frost",
  "frown",
  "frozen",
  "fruit",
  "fuel",
  "fun",
  "funny",
  "furnace",
  "fury",
  "future",
  "gadget",
  "gain",
  "galaxy",
  "gallery",
  "game",
  "gap",
  "garage",
  "garbage",
  "garden",
  "garlic",
  "garment",
  "gas",
  "gasp",
  "gate",
  "gather",
  "gauge",
  "gaze",
  "general",
  "genius",
  "genre",
  "gentle",
  "genuine",
  "gesture",
  "ghost",
  "giant",
  "gift",
  "giggle",
  "ginger",
  "giraffe",
  "girl",
  "give",
  "glad",
  "glance",
  "glare",
  "glass",
  "glide",
  "glimpse",
  "globe",
  "gloom",
  "glory",
  "glove",
  "glow",
  "glue",
  "goat",
  "goddess",
  "gold",
  "good",
  "goose",
  "gorilla",
  "gospel",
  "gossip",
  "govern",
  "gown",
  "grab",
  "grace",
  "grain",
  "grant",
  "grape",
  "grass",
  "gravity",
  "great",
  "green",
  "grid",
  "grief",
  "grit",
  "grocery",
  "group",
  "grow",
  "grunt",
  "guard",
  "guess",
  "guide",
  "guilt",
  "guitar",
  "gun",
  "gym",
  "habit",
  "hair",
  "half",
  "hammer",
  "hamster",
  "hand",
  "happy",
  "harbor",
  "hard",
  "harsh",
  "harvest",
  "hat",
  "have",
  "hawk",
  "hazard",
  "head",
  "health",
  "heart",
  "heavy",
  "hedgehog",
  "height",
  "hello",
  "helmet",
  "help",
  "hen",
  "hero",
  "hidden",
  "high",
  "hill",
  "hint",
  "hip",
  "hire",
  "history",
  "hobby",
  "hockey",
  "hold",
  "hole",
  "holiday",
  "hollow",
  "home",
  "honey",
  "hood",
  "hope",
  "horn",
  "horror",
  "horse",
  "hospital",
  "host",
  "hotel",
  "hour",
  "hover",
  "hub",
  "huge",
  "human",
  "humble",
  "humor",
  "hundred",
  "hungry",
  "hunt",
  "hurdle",
  "hurry",
  "hurt",
  "husband",
  "hybrid",
  "ice",
  "icon",
  "idea",
  "identify",
  "idle",
  "ignore",
  "ill",
  "illegal",
  "illness",
  "image",
  "imitate",
  "immense",
  "immune",
  "impact",
  "impose",
  "improve",
  "impulse",
  "inch",
  "include",
  "income",
  "increase",
  "index",
  "indicate",
  "indoor",
  "industry",
  "infant",
  "inflict",
  "inform",
  "inhale",
  "inherit",
  "initial",
  "inject",
  "injury",
  "inmate",
  "inner",
  "innocent",
  "input",
  "inquiry",
  "insane",
  "insect",
  "inside",
  "inspire",
  "install",
  "intact",
  "interest",
  "into",
  "invest",
  "invite",
  "involve",
  "iron",
  "island",
  "isolate",
  "issue",
  "item",
  "ivory",
  "jacket",
  "jaguar",
  "jar",
  "jazz",
  "jealous",
  "jeans",
  "jelly",
  "jewel",
  "job",
  "join",
  "joke",
  "journey",
  "joy",
  "judge",
  "juice",
  "jump",
  "jungle",
  "junior",
  "junk",
  "just",
  "kangaroo",
  "keen",
  "keep",
  "ketchup",
  "key",
  "kick",
  "kid",
  "kidney",
  "kind",
  "kingdom",
  "kiss",
  "kit",
  "kitchen",
  "kite",
  "kitten",
  "kiwi",
  "knee",
  "knife",
  "knock",
  "know",
  "lab",
  "label",
  "labor",
  "ladder",
  "lady",
  "lake",
  "lamp",
  "language",
  "laptop",
  "large",
  "later",
  "latin",
  "laugh",
  "laundry",
  "lava",
  "law",
  "lawn",
  "lawsuit",
  "layer",
  "lazy",
  "leader",
  "leaf",
  "learn",
  "leave",
  "lecture",
  "left",
  "leg",
  "legal",
  "legend",
  "leisure",
  "lemon",
  "lend",
  "length",
  "lens",
  "leopard",
  "lesson",
  "letter",
  "level",
  "liar",
  "liberty",
  "library",
  "license",
  "life",
  "lift",
  "light",
  "like",
  "limb",
  "limit",
  "link",
  "lion",
  "liquid",
  "list",
  "little",
  "live",
  "lizard",
  "load",
  "loan",
  "lobster",
  "local",
  "lock",
  "logic",
  "lonely",
  "long",
  "loop",
  "lottery",
  "loud",
  "lounge",
  "love",
  "loyal",
  "lucky",
  "luggage",
  "lumber",
  "lunar",
  "lunch",
  "luxury",
  "lyrics",
  "machine",
  "mad",
  "magic",
  "magnet",
  "maid",
  "mail",
  "main",
  "major",
  "make",
  "mammal",
  "man",
  "manage",
  "mandate",
  "mango",
  "mansion",
  "manual",
  "maple",
  "marble",
  "march",
  "margin",
  "marine",
  "market",
  "marriage",
  "mask",
  "mass",
  "master",
  "match",
  "material",
  "math",
  "matrix",
  "matter",
  "maximum",
  "maze",
  "meadow",
  "mean",
  "measure",
  "meat",
  "mechanic",
  "medal",
  "media",
  "melody",
  "melt",
  "member",
  "memory",
  "mention",
  "menu",
  "mercy",
  "merge",
  "merit",
  "merry",
  "mesh",
  "message",
  "metal",
  "method",
  "middle",
  "midnight",
  "milk",
  "million",
  "mimic",
  "mind",
  "minimum",
  "minor",
  "minute",
  "miracle",
  "mirror",
  "misery",
  "miss",
  "mistake",
  "mix",
  "mixed",
  "mixture",
  "mobile",
  "model",
  "modify",
  "mom",
  "moment",
  "monitor",
  "monkey",
  "monster",
  "month",
  "moon",
  "moral",
  "more",
  "morning",
  "mosquito",
  "mother",
  "motion",
  "motor",
  "mountain",
  "mouse",
  "move",
  "movie",
  "much",
  "muffin",
  "mule",
  "multiply",
  "muscle",
  "museum",
  "mushroom",
  "music",
  "must",
  "mutual",
  "myself",
  "mystery",
  "myth",
  "naive",
  "name",
  "napkin",
  "narrow",
  "nasty",
  "nation",
  "nature",
  "near",
  "neck",
  "need",
  "negative",
  "neglect",
  "neither",
  "nephew",
  "nerve",
  "nest",
  "net",
  "network",
  "neutral",
  "never",
  "news",
  "next",
  "nice",
  "night",
  "noble",
  "noise",
  "nominee",
  "noodle",
  "normal",
  "north",
  "nose",
  "notable",
  "note",
  "nothing",
  "notice",
  "novel",
  "now",
  "nuclear",
  "number",
  "nurse",
  "nut",
  "oak",
  "obey",
  "object",
  "oblige",
  "obscure",
  "observe",
  "obtain",
  "obvious",
  "occur",
  "ocean",
  "october",
  "odor",
  "off",
  "offer",
  "office",
  "often",
  "oil",
  "okay",
  "old",
  "olive",
  "olympic",
  "omit",
  "once",
  "one",
  "onion",
  "online",
  "only",
  "open",
  "opera",
  "opinion",
  "oppose",
  "option",
  "orange",
  "orbit",
  "orchard",
  "order",
  "ordinary",
  "organ",
  "orient",
  "original",
  "orphan",
  "ostrich",
  "other",
  "outdoor",
  "outer",
  "output",
  "outside",
  "oval",
  "oven",
  "over",
  "own",
  "owner",
  "oxygen",
  "oyster",
  "ozone",
  "pact",
  "paddle",
  "page",
  "pair",
  "palace",
  "palm",
  "panda",
  "panel",
  "panic",
  "panther",
  "paper",
  "parade",
  "parent",
  "park",
  "parrot",
  "party",
  "pass",
  "patch",
  "path",
  "patient",
  "patrol",
  "pattern",
  "pause",
  "pave",
  "payment",
  "peace",
  "peanut",
  "pear",
  "peasant",
  "pelican",
  "pen",
  "penalty",
  "pencil",
  "people",
  "pepper",
  "perfect",
  "permit",
  "person",
  "pet",
  "phone",
  "photo",
  "phrase",
  "physical",
  "piano",
  "picnic",
  "picture",
  "piece",
  "pig",
  "pigeon",
  "pill",
  "pilot",
  "pink",
  "pioneer",
  "pipe",
  "pistol",
  "pitch",
  "pizza",
  "place",
  "planet",
  "plastic",
  "plate",
  "play",
  "please",
  "pledge",
  "pluck",
  "plug",
  "plunge",
  "poem",
  "poet",
  "point",
  "polar",
  "pole",
  "police",
  "pond",
  "pony",
  "pool",
  "popular",
  "portion",
  "position",
  "possible",
  "post",
  "potato",
  "pottery",
  "poverty",
  "powder",
  "power",
  "practice",
  "praise",
  "predict",
  "prefer",
  "prepare",
  "present",
  "pretty",
  "prevent",
  "price",
  "pride",
  "primary",
  "print",
  "priority",
  "prison",
  "private",
  "prize",
  "problem",
  "process",
  "produce",
  "profit",
  "program",
  "project",
  "promote",
  "proof",
  "property",
  "prosper",
  "protect",
  "proud",
  "provide",
  "public",
  "pudding",
  "pull",
  "pulp",
  "pulse",
  "pumpkin",
  "punch",
  "pupil",
  "puppy",
  "purchase",
  "purity",
  "purpose",
  "purse",
  "push",
  "put",
  "puzzle",
  "pyramid",
  "quality",
  "quantum",
  "quarter",
  "question",
  "quick",
  "quit",
  "quiz",
  "quote",
  "rabbit",
  "raccoon",
  "race",
  "rack",
  "radar",
  "radio",
  "rail",
  "rain",
  "raise",
  "rally",
  "ramp",
  "ranch",
  "random",
  "range",
  "rapid",
  "rare",
  "rate",
  "rather",
  "raven",
  "raw",
  "razor",
  "ready",
  "real",
  "reason",
  "rebel",
  "rebuild",
  "recall",
  "receive",
  "recipe",
  "record",
  "recycle",
  "reduce",
  "reflect",
  "reform",
  "refuse",
  "region",
  "regret",
  "regular",
  "reject",
  "relax",
  "release",
  "relief",
  "rely",
  "remain",
  "remember",
  "remind",
  "remove",
  "render",
  "renew",
  "rent",
  "reopen",
  "repair",
  "repeat",
  "replace",
  "report",
  "require",
  "rescue",
  "resemble",
  "resist",
  "resource",
  "response",
  "result",
  "retire",
  "retreat",
  "return",
  "reunion",
  "reveal",
  "review",
  "reward",
  "rhythm",
  "rib",
  "ribbon",
  "rice",
  "rich",
  "ride",
  "ridge",
  "rifle",
  "right",
  "rigid",
  "ring",
  "riot",
  "ripple",
  "risk",
  "ritual",
  "rival",
  "river",
  "road",
  "roast",
  "robot",
  "robust",
  "rocket",
  "romance",
  "roof",
  "rookie",
  "room",
  "rose",
  "rotate",
  "rough",
  "round",
  "route",
  "royal",
  "rubber",
  "rude",
  "rug",
  "rule",
  "run",
  "runway",
  "rural",
  "sad",
  "saddle",
  "sadness",
  "safe",
  "sail",
  "salad",
  "salmon",
  "salon",
  "salt",
  "salute",
  "same",
  "sample",
  "sand",
  "satisfy",
  "satoshi",
  "sauce",
  "sausage",
  "save",
  "say",
  "scale",
  "scan",
  "scare",
  "scatter",
  "scene",
  "scheme",
  "school",
  "science",
  "scissors",
  "scorpion",
  "scout",
  "scrap",
  "screen",
  "script",
  "scrub",
  "sea",
  "search",
  "season",
  "seat",
  "second",
  "secret",
  "section",
  "security",
  "seed",
  "seek",
  "segment",
  "select",
  "sell",
  "seminar",
  "senior",
  "sense",
  "sentence",
  "series",
  "service",
  "session",
  "settle",
  "setup",
  "seven",
  "shadow",
  "shaft",
  "shallow",
  "share",
  "shed",
  "shell",
  "sheriff",
  "shield",
  "shift",
  "shine",
  "ship",
  "shiver",
  "shock",
  "shoe",
  "shoot",
  "shop",
  "short",
  "shoulder",
  "shove",
  "shrimp",
  "shrug",
  "shuffle",
  "shy",
  "sibling",
  "sick",
  "side",
  "siege",
  "sight",
  "sign",
  "silent",
  "silk",
  "silly",
  "silver",
  "similar",
  "simple",
  "since",
  "sing",
  "siren",
  "sister",
  "situate",
  "six",
  "size",
  "skate",
  "sketch",
  "ski",
  "skill",
  "skin",
  "skirt",
  "skull",
  "slab",
  "slam",
  "sleep",
  "slender",
  "slice",
  "slide",
  "slight",
  "slim",
  "slogan",
  "slot",
  "slow",
  "slush",
  "small",
  "smart",
  "smile",
  "smoke",
  "smooth",
  "snack",
  "snake",
  "snap",
  "sniff",
  "snow",
  "soap",
  "soccer",
  "social",
  "sock",
  "soda",
  "soft",
  "solar",
  "soldier",
  "solid",
  "solution",
  "solve",
  "someone",
  "song",
  "soon",
  "sorry",
  "sort",
  "soul",
  "sound",
  "soup",
  "source",
  "south",
  "space",
  "spare",
  "spatial",
  "spawn",
  "speak",
  "special",
  "speed",
  "spell",
  "spend",
  "sphere",
  "spice",
  "spider",
  "spike",
  "spin",
  "spirit",
  "split",
  "spoil",
  "sponsor",
  "spoon",
  "sport",
  "spot",
  "spray",
  "spread",
  "spring",
  "spy",
  "square",
  "squeeze",
  "squirrel",
  "stable",
  "stadium",
  "staff",
  "stage",
  "stairs",
  "stamp",
  "stand",
  "start",
  "state",
  "stay",
  "steak",
  "steel",
  "stem",
  "step",
  "stereo",
  "stick",
  "still",
  "sting",
  "stock",
  "stomach",
  "stone",
  "stool",
  "story",
  "stove",
  "strategy",
  "street",
  "strike",
  "strong",
  "struggle",
  "student",
  "stuff",
  "stumble",
  "style",
  "subject",
  "submit",
  "subway",
  "success",
  "such",
  "sudden",
  "suffer",
  "sugar",
  "suggest",
  "suit",
  "summer",
  "sun",
  "sunny",
  "sunset",
  "super",
  "supply",
  "supreme",
  "sure",
  "surface",
  "surge",
  "surprise",
  "surround",
  "survey",
  "suspect",
  "sustain",
  "swallow",
  "swamp",
  "swap",
  "swarm",
  "swear",
  "sweet",
  "swift",
  "swim",
  "swing",
  "switch",
  "sword",
  "symbol",
  "symptom",
  "syrup",
  "system",
  "table",
  "tackle",
  "tag",
  "tail",
  "talent",
  "talk",
  "tank",
  "tape",
  "target",
  "task",
  "taste",
  "tattoo",
  "taxi",
  "teach",
  "team",
  "tell",
  "ten",
  "tenant",
  "tennis",
  "tent",
  "term",
  "test",
  "text",
  "thank",
  "that",
  "theme",
  "then",
  "theory",
  "there",
  "they",
  "thing",
  "this",
  "thought",
  "three",
  "thrive",
  "throw",
  "thumb",
  "thunder",
  "ticket",
  "tide",
  "tiger",
  "tilt",
  "timber",
  "time",
  "tiny",
  "tip",
  "tired",
  "tissue",
  "title",
  "toast",
  "tobacco",
  "today",
  "toddler",
  "toe",
  "together",
  "toilet",
  "token",
  "tomato",
  "tomorrow",
  "tone",
  "tongue",
  "tonight",
  "tool",
  "tooth",
  "top",
  "topic",
  "topple",
  "torch",
  "tornado",
  "tortoise",
  "toss",
  "total",
  "tourist",
  "toward",
  "tower",
  "town",
  "toy",
  "track",
  "trade",
  "traffic",
  "tragic",
  "train",
  "transfer",
  "trap",
  "trash",
  "travel",
  "tray",
  "treat",
  "tree",
  "trend",
  "trial",
  "tribe",
  "trick",
  "trigger",
  "trim",
  "trip",
  "trophy",
  "trouble",
  "truck",
  "true",
  "truly",
  "trumpet",
  "trust",
  "truth",
  "try",
  "tube",
  "tuition",
  "tumble",
  "tuna",
  "tunnel",
  "turkey",
  "turn",
  "turtle",
  "twelve",
  "twenty",
  "twice",
  "twin",
  "twist",
  "two",
  "type",
  "typical",
  "ugly",
  "umbrella",
  "unable",
  "unaware",
  "uncle",
  "uncover",
  "under",
  "undo",
  "unfair",
  "unfold",
  "unhappy",
  "uniform",
  "unique",
  "unit",
  "universe",
  "unknown",
  "unlock",
  "until",
  "unusual",
  "unveil",
  "update",
  "upgrade",
  "uphold",
  "upon",
  "upper",
  "upset",
  "urban",
  "urge",
  "usage",
  "use",
  "used",
  "useful",
  "useless",
  "usual",
  "utility",
  "vacant",
  "vacuum",
  "vague",
  "valid",
  "valley",
  "valve",
  "van",
  "vanish",
  "vapor",
  "various",
  "vast",
  "vault",
  "vehicle",
  "velvet",
  "vendor",
  "venture",
  "venue",
  "verb",
  "verify",
  "version",
  "very",
  "vessel",
  "veteran",
  "viable",
  "vibrant",
  "vicious",
  "victory",
  "video",
  "view",
  "village",
  "vintage",
  "violin",
  "virtual",
  "virus",
  "visa",
  "visit",
  "visual",
  "vital",
  "vivid",
  "vocal",
  "voice",
  "void",
  "volcano",
  "volume",
  "vote",
  "voyage",
  "wage",
  "wagon",
  "wait",
  "walk",
  "wall",
  "walnut",
  "want",
  "warfare",
  "warm",
  "warrior",
  "wash",
  "wasp",
  "waste",
  "water",
  "wave",
  "way",
  "wealth",
  "weapon",
  "wear",
  "weasel",
  "weather",
  "web",
  "wedding",
  "weekend",
  "weird",
  "welcome",
  "west",
  "wet",
  "whale",
  "what",
  "wheat",
  "wheel",
  "when",
  "where",
  "whip",
  "whisper",
  "wide",
  "width",
  "wife",
  "wild",
  "will",
  "win",
  "window",
  "wine",
  "wing",
  "wink",
  "winner",
  "winter",
  "wire",
  "wisdom",
  "wise",
  "wish",
  "witness",
  "wolf",
  "woman",
  "wonder",
  "wood",
  "wool",
  "word",
  "work",
  "world",
  "worry",
  "worth",
  "wrap",
  "wreck",
  "wrestle",
  "wrist",
  "write",
  "wrong",
  "yard",
  "year",
  "yellow",
  "you",
  "young",
  "youth",
  "zebra",
  "zero",
  "zone",
  "zoo"
]

},{}],89:[function(require,module,exports){
module.exports=[
  "abaisser",
  "abandon",
  "abdiquer",
  "abeille",
  "abolir",
  "aborder",
  "aboutir",
  "aboyer",
  "abrasif",
  "abreuver",
  "abriter",
  "abroger",
  "abrupt",
  "absence",
  "absolu",
  "absurde",
  "abusif",
  "abyssal",
  "acadeÌmie",
  "acajou",
  "acarien",
  "accabler",
  "accepter",
  "acclamer",
  "accolade",
  "accroche",
  "accuser",
  "acerbe",
  "achat",
  "acheter",
  "aciduler",
  "acier",
  "acompte",
  "acqueÌrir",
  "acronyme",
  "acteur",
  "actif",
  "actuel",
  "adepte",
  "adeÌquat",
  "adheÌsif",
  "adjectif",
  "adjuger",
  "admettre",
  "admirer",
  "adopter",
  "adorer",
  "adoucir",
  "adresse",
  "adroit",
  "adulte",
  "adverbe",
  "aeÌrer",
  "aeÌronef",
  "affaire",
  "affecter",
  "affiche",
  "affreux",
  "affubler",
  "agacer",
  "agencer",
  "agile",
  "agiter",
  "agrafer",
  "agreÌable",
  "agrume",
  "aider",
  "aiguille",
  "ailier",
  "aimable",
  "aisance",
  "ajouter",
  "ajuster",
  "alarmer",
  "alchimie",
  "alerte",
  "algeÌbre",
  "algue",
  "alieÌner",
  "aliment",
  "alleÌger",
  "alliage",
  "allouer",
  "allumer",
  "alourdir",
  "alpaga",
  "altesse",
  "alveÌole",
  "amateur",
  "ambigu",
  "ambre",
  "ameÌnager",
  "amertume",
  "amidon",
  "amiral",
  "amorcer",
  "amour",
  "amovible",
  "amphibie",
  "ampleur",
  "amusant",
  "analyse",
  "anaphore",
  "anarchie",
  "anatomie",
  "ancien",
  "aneÌantir",
  "angle",
  "angoisse",
  "anguleux",
  "animal",
  "annexer",
  "annonce",
  "annuel",
  "anodin",
  "anomalie",
  "anonyme",
  "anormal",
  "antenne",
  "antidote",
  "anxieux",
  "apaiser",
  "apeÌritif",
  "aplanir",
  "apologie",
  "appareil",
  "appeler",
  "apporter",
  "appuyer",
  "aquarium",
  "aqueduc",
  "arbitre",
  "arbuste",
  "ardeur",
  "ardoise",
  "argent",
  "arlequin",
  "armature",
  "armement",
  "armoire",
  "armure",
  "arpenter",
  "arracher",
  "arriver",
  "arroser",
  "arsenic",
  "arteÌriel",
  "article",
  "aspect",
  "asphalte",
  "aspirer",
  "assaut",
  "asservir",
  "assiette",
  "associer",
  "assurer",
  "asticot",
  "astre",
  "astuce",
  "atelier",
  "atome",
  "atrium",
  "atroce",
  "attaque",
  "attentif",
  "attirer",
  "attraper",
  "aubaine",
  "auberge",
  "audace",
  "audible",
  "augurer",
  "aurore",
  "automne",
  "autruche",
  "avaler",
  "avancer",
  "avarice",
  "avenir",
  "averse",
  "aveugle",
  "aviateur",
  "avide",
  "avion",
  "aviser",
  "avoine",
  "avouer",
  "avril",
  "axial",
  "axiome",
  "badge",
  "bafouer",
  "bagage",
  "baguette",
  "baignade",
  "balancer",
  "balcon",
  "baleine",
  "balisage",
  "bambin",
  "bancaire",
  "bandage",
  "banlieue",
  "bannieÌre",
  "banquier",
  "barbier",
  "baril",
  "baron",
  "barque",
  "barrage",
  "bassin",
  "bastion",
  "bataille",
  "bateau",
  "batterie",
  "baudrier",
  "bavarder",
  "belette",
  "beÌlier",
  "belote",
  "beÌneÌfice",
  "berceau",
  "berger",
  "berline",
  "bermuda",
  "besace",
  "besogne",
  "beÌtail",
  "beurre",
  "biberon",
  "bicycle",
  "bidule",
  "bijou",
  "bilan",
  "bilingue",
  "billard",
  "binaire",
  "biologie",
  "biopsie",
  "biotype",
  "biscuit",
  "bison",
  "bistouri",
  "bitume",
  "bizarre",
  "blafard",
  "blague",
  "blanchir",
  "blessant",
  "blinder",
  "blond",
  "bloquer",
  "blouson",
  "bobard",
  "bobine",
  "boire",
  "boiser",
  "bolide",
  "bonbon",
  "bondir",
  "bonheur",
  "bonifier",
  "bonus",
  "bordure",
  "borne",
  "botte",
  "boucle",
  "boueux",
  "bougie",
  "boulon",
  "bouquin",
  "bourse",
  "boussole",
  "boutique",
  "boxeur",
  "branche",
  "brasier",
  "brave",
  "brebis",
  "breÌche",
  "breuvage",
  "bricoler",
  "brigade",
  "brillant",
  "brioche",
  "brique",
  "brochure",
  "broder",
  "bronzer",
  "brousse",
  "broyeur",
  "brume",
  "brusque",
  "brutal",
  "bruyant",
  "buffle",
  "buisson",
  "bulletin",
  "bureau",
  "burin",
  "bustier",
  "butiner",
  "butoir",
  "buvable",
  "buvette",
  "cabanon",
  "cabine",
  "cachette",
  "cadeau",
  "cadre",
  "cafeÌine",
  "caillou",
  "caisson",
  "calculer",
  "calepin",
  "calibre",
  "calmer",
  "calomnie",
  "calvaire",
  "camarade",
  "cameÌra",
  "camion",
  "campagne",
  "canal",
  "caneton",
  "canon",
  "cantine",
  "canular",
  "capable",
  "caporal",
  "caprice",
  "capsule",
  "capter",
  "capuche",
  "carabine",
  "carbone",
  "caresser",
  "caribou",
  "carnage",
  "carotte",
  "carreau",
  "carton",
  "cascade",
  "casier",
  "casque",
  "cassure",
  "causer",
  "caution",
  "cavalier",
  "caverne",
  "caviar",
  "ceÌdille",
  "ceinture",
  "ceÌleste",
  "cellule",
  "cendrier",
  "censurer",
  "central",
  "cercle",
  "ceÌreÌbral",
  "cerise",
  "cerner",
  "cerveau",
  "cesser",
  "chagrin",
  "chaise",
  "chaleur",
  "chambre",
  "chance",
  "chapitre",
  "charbon",
  "chasseur",
  "chaton",
  "chausson",
  "chavirer",
  "chemise",
  "chenille",
  "cheÌquier",
  "chercher",
  "cheval",
  "chien",
  "chiffre",
  "chignon",
  "chimeÌre",
  "chiot",
  "chlorure",
  "chocolat",
  "choisir",
  "chose",
  "chouette",
  "chrome",
  "chute",
  "cigare",
  "cigogne",
  "cimenter",
  "cineÌma",
  "cintrer",
  "circuler",
  "cirer",
  "cirque",
  "citerne",
  "citoyen",
  "citron",
  "civil",
  "clairon",
  "clameur",
  "claquer",
  "classe",
  "clavier",
  "client",
  "cligner",
  "climat",
  "clivage",
  "cloche",
  "clonage",
  "cloporte",
  "cobalt",
  "cobra",
  "cocasse",
  "cocotier",
  "coder",
  "codifier",
  "coffre",
  "cogner",
  "coheÌsion",
  "coiffer",
  "coincer",
  "coleÌre",
  "colibri",
  "colline",
  "colmater",
  "colonel",
  "combat",
  "comeÌdie",
  "commande",
  "compact",
  "concert",
  "conduire",
  "confier",
  "congeler",
  "connoter",
  "consonne",
  "contact",
  "convexe",
  "copain",
  "copie",
  "corail",
  "corbeau",
  "cordage",
  "corniche",
  "corpus",
  "correct",
  "corteÌge",
  "cosmique",
  "costume",
  "coton",
  "coude",
  "coupure",
  "courage",
  "couteau",
  "couvrir",
  "coyote",
  "crabe",
  "crainte",
  "cravate",
  "crayon",
  "creÌature",
  "creÌditer",
  "creÌmeux",
  "creuser",
  "crevette",
  "cribler",
  "crier",
  "cristal",
  "criteÌre",
  "croire",
  "croquer",
  "crotale",
  "crucial",
  "cruel",
  "crypter",
  "cubique",
  "cueillir",
  "cuilleÌre",
  "cuisine",
  "cuivre",
  "culminer",
  "cultiver",
  "cumuler",
  "cupide",
  "curatif",
  "curseur",
  "cyanure",
  "cycle",
  "cylindre",
  "cynique",
  "daigner",
  "damier",
  "danger",
  "danseur",
  "dauphin",
  "deÌbattre",
  "deÌbiter",
  "deÌborder",
  "deÌbrider",
  "deÌbutant",
  "deÌcaler",
  "deÌcembre",
  "deÌchirer",
  "deÌcider",
  "deÌclarer",
  "deÌcorer",
  "deÌcrire",
  "deÌcupler",
  "deÌdale",
  "deÌductif",
  "deÌesse",
  "deÌfensif",
  "deÌfiler",
  "deÌfrayer",
  "deÌgager",
  "deÌgivrer",
  "deÌglutir",
  "deÌgrafer",
  "deÌjeuner",
  "deÌlice",
  "deÌloger",
  "demander",
  "demeurer",
  "deÌmolir",
  "deÌnicher",
  "deÌnouer",
  "dentelle",
  "deÌnuder",
  "deÌpart",
  "deÌpenser",
  "deÌphaser",
  "deÌplacer",
  "deÌposer",
  "deÌranger",
  "deÌrober",
  "deÌsastre",
  "descente",
  "deÌsert",
  "deÌsigner",
  "deÌsobeÌir",
  "dessiner",
  "destrier",
  "deÌtacher",
  "deÌtester",
  "deÌtourer",
  "deÌtresse",
  "devancer",
  "devenir",
  "deviner",
  "devoir",
  "diable",
  "dialogue",
  "diamant",
  "dicter",
  "diffeÌrer",
  "digeÌrer",
  "digital",
  "digne",
  "diluer",
  "dimanche",
  "diminuer",
  "dioxyde",
  "directif",
  "diriger",
  "discuter",
  "disposer",
  "dissiper",
  "distance",
  "divertir",
  "diviser",
  "docile",
  "docteur",
  "dogme",
  "doigt",
  "domaine",
  "domicile",
  "dompter",
  "donateur",
  "donjon",
  "donner",
  "dopamine",
  "dortoir",
  "dorure",
  "dosage",
  "doseur",
  "dossier",
  "dotation",
  "douanier",
  "double",
  "douceur",
  "douter",
  "doyen",
  "dragon",
  "draper",
  "dresser",
  "dribbler",
  "droiture",
  "duperie",
  "duplexe",
  "durable",
  "durcir",
  "dynastie",
  "eÌblouir",
  "eÌcarter",
  "eÌcharpe",
  "eÌchelle",
  "eÌclairer",
  "eÌclipse",
  "eÌclore",
  "eÌcluse",
  "eÌcole",
  "eÌconomie",
  "eÌcorce",
  "eÌcouter",
  "eÌcraser",
  "eÌcreÌmer",
  "eÌcrivain",
  "eÌcrou",
  "eÌcume",
  "eÌcureuil",
  "eÌdifier",
  "eÌduquer",
  "effacer",
  "effectif",
  "effigie",
  "effort",
  "effrayer",
  "effusion",
  "eÌgaliser",
  "eÌgarer",
  "eÌjecter",
  "eÌlaborer",
  "eÌlargir",
  "eÌlectron",
  "eÌleÌgant",
  "eÌleÌphant",
  "eÌleÌve",
  "eÌligible",
  "eÌlitisme",
  "eÌloge",
  "eÌlucider",
  "eÌluder",
  "emballer",
  "embellir",
  "embryon",
  "eÌmeraude",
  "eÌmission",
  "emmener",
  "eÌmotion",
  "eÌmouvoir",
  "empereur",
  "employer",
  "emporter",
  "emprise",
  "eÌmulsion",
  "encadrer",
  "encheÌre",
  "enclave",
  "encoche",
  "endiguer",
  "endosser",
  "endroit",
  "enduire",
  "eÌnergie",
  "enfance",
  "enfermer",
  "enfouir",
  "engager",
  "engin",
  "englober",
  "eÌnigme",
  "enjamber",
  "enjeu",
  "enlever",
  "ennemi",
  "ennuyeux",
  "enrichir",
  "enrobage",
  "enseigne",
  "entasser",
  "entendre",
  "entier",
  "entourer",
  "entraver",
  "eÌnumeÌrer",
  "envahir",
  "enviable",
  "envoyer",
  "enzyme",
  "eÌolien",
  "eÌpaissir",
  "eÌpargne",
  "eÌpatant",
  "eÌpaule",
  "eÌpicerie",
  "eÌpideÌmie",
  "eÌpier",
  "eÌpilogue",
  "eÌpine",
  "eÌpisode",
  "eÌpitaphe",
  "eÌpoque",
  "eÌpreuve",
  "eÌprouver",
  "eÌpuisant",
  "eÌquerre",
  "eÌquipe",
  "eÌriger",
  "eÌrosion",
  "erreur",
  "eÌruption",
  "escalier",
  "espadon",
  "espeÌce",
  "espieÌgle",
  "espoir",
  "esprit",
  "esquiver",
  "essayer",
  "essence",
  "essieu",
  "essorer",
  "estime",
  "estomac",
  "estrade",
  "eÌtageÌre",
  "eÌtaler",
  "eÌtanche",
  "eÌtatique",
  "eÌteindre",
  "eÌtendoir",
  "eÌternel",
  "eÌthanol",
  "eÌthique",
  "ethnie",
  "eÌtirer",
  "eÌtoffer",
  "eÌtoile",
  "eÌtonnant",
  "eÌtourdir",
  "eÌtrange",
  "eÌtroit",
  "eÌtude",
  "euphorie",
  "eÌvaluer",
  "eÌvasion",
  "eÌventail",
  "eÌvidence",
  "eÌviter",
  "eÌvolutif",
  "eÌvoquer",
  "exact",
  "exageÌrer",
  "exaucer",
  "exceller",
  "excitant",
  "exclusif",
  "excuse",
  "exeÌcuter",
  "exemple",
  "exercer",
  "exhaler",
  "exhorter",
  "exigence",
  "exiler",
  "exister",
  "exotique",
  "expeÌdier",
  "explorer",
  "exposer",
  "exprimer",
  "exquis",
  "extensif",
  "extraire",
  "exulter",
  "fable",
  "fabuleux",
  "facette",
  "facile",
  "facture",
  "faiblir",
  "falaise",
  "fameux",
  "famille",
  "farceur",
  "farfelu",
  "farine",
  "farouche",
  "fasciner",
  "fatal",
  "fatigue",
  "faucon",
  "fautif",
  "faveur",
  "favori",
  "feÌbrile",
  "feÌconder",
  "feÌdeÌrer",
  "feÌlin",
  "femme",
  "feÌmur",
  "fendoir",
  "feÌodal",
  "fermer",
  "feÌroce",
  "ferveur",
  "festival",
  "feuille",
  "feutre",
  "feÌvrier",
  "fiasco",
  "ficeler",
  "fictif",
  "fideÌle",
  "figure",
  "filature",
  "filetage",
  "filieÌre",
  "filleul",
  "filmer",
  "filou",
  "filtrer",
  "financer",
  "finir",
  "fiole",
  "firme",
  "fissure",
  "fixer",
  "flairer",
  "flamme",
  "flasque",
  "flatteur",
  "fleÌau",
  "fleÌche",
  "fleur",
  "flexion",
  "flocon",
  "flore",
  "fluctuer",
  "fluide",
  "fluvial",
  "folie",
  "fonderie",
  "fongible",
  "fontaine",
  "forcer",
  "forgeron",
  "formuler",
  "fortune",
  "fossile",
  "foudre",
  "fougeÌre",
  "fouiller",
  "foulure",
  "fourmi",
  "fragile",
  "fraise",
  "franchir",
  "frapper",
  "frayeur",
  "freÌgate",
  "freiner",
  "frelon",
  "freÌmir",
  "freÌneÌsie",
  "freÌre",
  "friable",
  "friction",
  "frisson",
  "frivole",
  "froid",
  "fromage",
  "frontal",
  "frotter",
  "fruit",
  "fugitif",
  "fuite",
  "fureur",
  "furieux",
  "furtif",
  "fusion",
  "futur",
  "gagner",
  "galaxie",
  "galerie",
  "gambader",
  "garantir",
  "gardien",
  "garnir",
  "garrigue",
  "gazelle",
  "gazon",
  "geÌant",
  "geÌlatine",
  "geÌlule",
  "gendarme",
  "geÌneÌral",
  "geÌnie",
  "genou",
  "gentil",
  "geÌologie",
  "geÌomeÌtre",
  "geÌranium",
  "germe",
  "gestuel",
  "geyser",
  "gibier",
  "gicler",
  "girafe",
  "givre",
  "glace",
  "glaive",
  "glisser",
  "globe",
  "gloire",
  "glorieux",
  "golfeur",
  "gomme",
  "gonfler",
  "gorge",
  "gorille",
  "goudron",
  "gouffre",
  "goulot",
  "goupille",
  "gourmand",
  "goutte",
  "graduel",
  "graffiti",
  "graine",
  "grand",
  "grappin",
  "gratuit",
  "gravir",
  "grenat",
  "griffure",
  "griller",
  "grimper",
  "grogner",
  "gronder",
  "grotte",
  "groupe",
  "gruger",
  "grutier",
  "gruyeÌre",
  "gueÌpard",
  "guerrier",
  "guide",
  "guimauve",
  "guitare",
  "gustatif",
  "gymnaste",
  "gyrostat",
  "habitude",
  "hachoir",
  "halte",
  "hameau",
  "hangar",
  "hanneton",
  "haricot",
  "harmonie",
  "harpon",
  "hasard",
  "heÌlium",
  "heÌmatome",
  "herbe",
  "heÌrisson",
  "hermine",
  "heÌron",
  "heÌsiter",
  "heureux",
  "hiberner",
  "hibou",
  "hilarant",
  "histoire",
  "hiver",
  "homard",
  "hommage",
  "homogeÌne",
  "honneur",
  "honorer",
  "honteux",
  "horde",
  "horizon",
  "horloge",
  "hormone",
  "horrible",
  "houleux",
  "housse",
  "hublot",
  "huileux",
  "humain",
  "humble",
  "humide",
  "humour",
  "hurler",
  "hydromel",
  "hygieÌne",
  "hymne",
  "hypnose",
  "idylle",
  "ignorer",
  "iguane",
  "illicite",
  "illusion",
  "image",
  "imbiber",
  "imiter",
  "immense",
  "immobile",
  "immuable",
  "impact",
  "impeÌrial",
  "implorer",
  "imposer",
  "imprimer",
  "imputer",
  "incarner",
  "incendie",
  "incident",
  "incliner",
  "incolore",
  "indexer",
  "indice",
  "inductif",
  "ineÌdit",
  "ineptie",
  "inexact",
  "infini",
  "infliger",
  "informer",
  "infusion",
  "ingeÌrer",
  "inhaler",
  "inhiber",
  "injecter",
  "injure",
  "innocent",
  "inoculer",
  "inonder",
  "inscrire",
  "insecte",
  "insigne",
  "insolite",
  "inspirer",
  "instinct",
  "insulter",
  "intact",
  "intense",
  "intime",
  "intrigue",
  "intuitif",
  "inutile",
  "invasion",
  "inventer",
  "inviter",
  "invoquer",
  "ironique",
  "irradier",
  "irreÌel",
  "irriter",
  "isoler",
  "ivoire",
  "ivresse",
  "jaguar",
  "jaillir",
  "jambe",
  "janvier",
  "jardin",
  "jauger",
  "jaune",
  "javelot",
  "jetable",
  "jeton",
  "jeudi",
  "jeunesse",
  "joindre",
  "joncher",
  "jongler",
  "joueur",
  "jouissif",
  "journal",
  "jovial",
  "joyau",
  "joyeux",
  "jubiler",
  "jugement",
  "junior",
  "jupon",
  "juriste",
  "justice",
  "juteux",
  "juveÌnile",
  "kayak",
  "kimono",
  "kiosque",
  "label",
  "labial",
  "labourer",
  "laceÌrer",
  "lactose",
  "lagune",
  "laine",
  "laisser",
  "laitier",
  "lambeau",
  "lamelle",
  "lampe",
  "lanceur",
  "langage",
  "lanterne",
  "lapin",
  "largeur",
  "larme",
  "laurier",
  "lavabo",
  "lavoir",
  "lecture",
  "leÌgal",
  "leÌger",
  "leÌgume",
  "lessive",
  "lettre",
  "levier",
  "lexique",
  "leÌzard",
  "liasse",
  "libeÌrer",
  "libre",
  "licence",
  "licorne",
  "lieÌge",
  "lieÌvre",
  "ligature",
  "ligoter",
  "ligue",
  "limer",
  "limite",
  "limonade",
  "limpide",
  "lineÌaire",
  "lingot",
  "lionceau",
  "liquide",
  "lisieÌre",
  "lister",
  "lithium",
  "litige",
  "littoral",
  "livreur",
  "logique",
  "lointain",
  "loisir",
  "lombric",
  "loterie",
  "louer",
  "lourd",
  "loutre",
  "louve",
  "loyal",
  "lubie",
  "lucide",
  "lucratif",
  "lueur",
  "lugubre",
  "luisant",
  "lumieÌre",
  "lunaire",
  "lundi",
  "luron",
  "lutter",
  "luxueux",
  "machine",
  "magasin",
  "magenta",
  "magique",
  "maigre",
  "maillon",
  "maintien",
  "mairie",
  "maison",
  "majorer",
  "malaxer",
  "maleÌfice",
  "malheur",
  "malice",
  "mallette",
  "mammouth",
  "mandater",
  "maniable",
  "manquant",
  "manteau",
  "manuel",
  "marathon",
  "marbre",
  "marchand",
  "mardi",
  "maritime",
  "marqueur",
  "marron",
  "marteler",
  "mascotte",
  "massif",
  "mateÌriel",
  "matieÌre",
  "matraque",
  "maudire",
  "maussade",
  "mauve",
  "maximal",
  "meÌchant",
  "meÌconnu",
  "meÌdaille",
  "meÌdecin",
  "meÌditer",
  "meÌduse",
  "meilleur",
  "meÌlange",
  "meÌlodie",
  "membre",
  "meÌmoire",
  "menacer",
  "mener",
  "menhir",
  "mensonge",
  "mentor",
  "mercredi",
  "meÌrite",
  "merle",
  "messager",
  "mesure",
  "meÌtal",
  "meÌteÌore",
  "meÌthode",
  "meÌtier",
  "meuble",
  "miauler",
  "microbe",
  "miette",
  "mignon",
  "migrer",
  "milieu",
  "million",
  "mimique",
  "mince",
  "mineÌral",
  "minimal",
  "minorer",
  "minute",
  "miracle",
  "miroiter",
  "missile",
  "mixte",
  "mobile",
  "moderne",
  "moelleux",
  "mondial",
  "moniteur",
  "monnaie",
  "monotone",
  "monstre",
  "montagne",
  "monument",
  "moqueur",
  "morceau",
  "morsure",
  "mortier",
  "moteur",
  "motif",
  "mouche",
  "moufle",
  "moulin",
  "mousson",
  "mouton",
  "mouvant",
  "multiple",
  "munition",
  "muraille",
  "mureÌne",
  "murmure",
  "muscle",
  "museÌum",
  "musicien",
  "mutation",
  "muter",
  "mutuel",
  "myriade",
  "myrtille",
  "mysteÌre",
  "mythique",
  "nageur",
  "nappe",
  "narquois",
  "narrer",
  "natation",
  "nation",
  "nature",
  "naufrage",
  "nautique",
  "navire",
  "neÌbuleux",
  "nectar",
  "neÌfaste",
  "neÌgation",
  "neÌgliger",
  "neÌgocier",
  "neige",
  "nerveux",
  "nettoyer",
  "neurone",
  "neutron",
  "neveu",
  "niche",
  "nickel",
  "nitrate",
  "niveau",
  "noble",
  "nocif",
  "nocturne",
  "noirceur",
  "noisette",
  "nomade",
  "nombreux",
  "nommer",
  "normatif",
  "notable",
  "notifier",
  "notoire",
  "nourrir",
  "nouveau",
  "novateur",
  "novembre",
  "novice",
  "nuage",
  "nuancer",
  "nuire",
  "nuisible",
  "numeÌro",
  "nuptial",
  "nuque",
  "nutritif",
  "obeÌir",
  "objectif",
  "obliger",
  "obscur",
  "observer",
  "obstacle",
  "obtenir",
  "obturer",
  "occasion",
  "occuper",
  "oceÌan",
  "octobre",
  "octroyer",
  "octupler",
  "oculaire",
  "odeur",
  "odorant",
  "offenser",
  "officier",
  "offrir",
  "ogive",
  "oiseau",
  "oisillon",
  "olfactif",
  "olivier",
  "ombrage",
  "omettre",
  "onctueux",
  "onduler",
  "oneÌreux",
  "onirique",
  "opale",
  "opaque",
  "opeÌrer",
  "opinion",
  "opportun",
  "opprimer",
  "opter",
  "optique",
  "orageux",
  "orange",
  "orbite",
  "ordonner",
  "oreille",
  "organe",
  "orgueil",
  "orifice",
  "ornement",
  "orque",
  "ortie",
  "osciller",
  "osmose",
  "ossature",
  "otarie",
  "ouragan",
  "ourson",
  "outil",
  "outrager",
  "ouvrage",
  "ovation",
  "oxyde",
  "oxygeÌne",
  "ozone",
  "paisible",
  "palace",
  "palmareÌs",
  "palourde",
  "palper",
  "panache",
  "panda",
  "pangolin",
  "paniquer",
  "panneau",
  "panorama",
  "pantalon",
  "papaye",
  "papier",
  "papoter",
  "papyrus",
  "paradoxe",
  "parcelle",
  "paresse",
  "parfumer",
  "parler",
  "parole",
  "parrain",
  "parsemer",
  "partager",
  "parure",
  "parvenir",
  "passion",
  "pasteÌque",
  "paternel",
  "patience",
  "patron",
  "pavillon",
  "pavoiser",
  "payer",
  "paysage",
  "peigne",
  "peintre",
  "pelage",
  "peÌlican",
  "pelle",
  "pelouse",
  "peluche",
  "pendule",
  "peÌneÌtrer",
  "peÌnible",
  "pensif",
  "peÌnurie",
  "peÌpite",
  "peÌplum",
  "perdrix",
  "perforer",
  "peÌriode",
  "permuter",
  "perplexe",
  "persil",
  "perte",
  "peser",
  "peÌtale",
  "petit",
  "peÌtrir",
  "peuple",
  "pharaon",
  "phobie",
  "phoque",
  "photon",
  "phrase",
  "physique",
  "piano",
  "pictural",
  "pieÌce",
  "pierre",
  "pieuvre",
  "pilote",
  "pinceau",
  "pipette",
  "piquer",
  "pirogue",
  "piscine",
  "piston",
  "pivoter",
  "pixel",
  "pizza",
  "placard",
  "plafond",
  "plaisir",
  "planer",
  "plaque",
  "plastron",
  "plateau",
  "pleurer",
  "plexus",
  "pliage",
  "plomb",
  "plonger",
  "pluie",
  "plumage",
  "pochette",
  "poeÌsie",
  "poeÌte",
  "pointe",
  "poirier",
  "poisson",
  "poivre",
  "polaire",
  "policier",
  "pollen",
  "polygone",
  "pommade",
  "pompier",
  "ponctuel",
  "pondeÌrer",
  "poney",
  "portique",
  "position",
  "posseÌder",
  "posture",
  "potager",
  "poteau",
  "potion",
  "pouce",
  "poulain",
  "poumon",
  "pourpre",
  "poussin",
  "pouvoir",
  "prairie",
  "pratique",
  "preÌcieux",
  "preÌdire",
  "preÌfixe",
  "preÌlude",
  "preÌnom",
  "preÌsence",
  "preÌtexte",
  "preÌvoir",
  "primitif",
  "prince",
  "prison",
  "priver",
  "probleÌme",
  "proceÌder",
  "prodige",
  "profond",
  "progreÌs",
  "proie",
  "projeter",
  "prologue",
  "promener",
  "propre",
  "prospeÌre",
  "proteÌger",
  "prouesse",
  "proverbe",
  "prudence",
  "pruneau",
  "psychose",
  "public",
  "puceron",
  "puiser",
  "pulpe",
  "pulsar",
  "punaise",
  "punitif",
  "pupitre",
  "purifier",
  "puzzle",
  "pyramide",
  "quasar",
  "querelle",
  "question",
  "quieÌtude",
  "quitter",
  "quotient",
  "racine",
  "raconter",
  "radieux",
  "ragondin",
  "raideur",
  "raisin",
  "ralentir",
  "rallonge",
  "ramasser",
  "rapide",
  "rasage",
  "ratisser",
  "ravager",
  "ravin",
  "rayonner",
  "reÌactif",
  "reÌagir",
  "reÌaliser",
  "reÌanimer",
  "recevoir",
  "reÌciter",
  "reÌclamer",
  "reÌcolter",
  "recruter",
  "reculer",
  "recycler",
  "reÌdiger",
  "redouter",
  "refaire",
  "reÌflexe",
  "reÌformer",
  "refrain",
  "refuge",
  "reÌgalien",
  "reÌgion",
  "reÌglage",
  "reÌgulier",
  "reÌiteÌrer",
  "rejeter",
  "rejouer",
  "relatif",
  "relever",
  "relief",
  "remarque",
  "remeÌde",
  "remise",
  "remonter",
  "remplir",
  "remuer",
  "renard",
  "renfort",
  "renifler",
  "renoncer",
  "rentrer",
  "renvoi",
  "replier",
  "reporter",
  "reprise",
  "reptile",
  "requin",
  "reÌserve",
  "reÌsineux",
  "reÌsoudre",
  "respect",
  "rester",
  "reÌsultat",
  "reÌtablir",
  "retenir",
  "reÌticule",
  "retomber",
  "retracer",
  "reÌunion",
  "reÌussir",
  "revanche",
  "revivre",
  "reÌvolte",
  "reÌvulsif",
  "richesse",
  "rideau",
  "rieur",
  "rigide",
  "rigoler",
  "rincer",
  "riposter",
  "risible",
  "risque",
  "rituel",
  "rival",
  "rivieÌre",
  "rocheux",
  "romance",
  "rompre",
  "ronce",
  "rondin",
  "roseau",
  "rosier",
  "rotatif",
  "rotor",
  "rotule",
  "rouge",
  "rouille",
  "rouleau",
  "routine",
  "royaume",
  "ruban",
  "rubis",
  "ruche",
  "ruelle",
  "rugueux",
  "ruiner",
  "ruisseau",
  "ruser",
  "rustique",
  "rythme",
  "sabler",
  "saboter",
  "sabre",
  "sacoche",
  "safari",
  "sagesse",
  "saisir",
  "salade",
  "salive",
  "salon",
  "saluer",
  "samedi",
  "sanction",
  "sanglier",
  "sarcasme",
  "sardine",
  "saturer",
  "saugrenu",
  "saumon",
  "sauter",
  "sauvage",
  "savant",
  "savonner",
  "scalpel",
  "scandale",
  "sceÌleÌrat",
  "sceÌnario",
  "sceptre",
  "scheÌma",
  "science",
  "scinder",
  "score",
  "scrutin",
  "sculpter",
  "seÌance",
  "seÌcable",
  "seÌcher",
  "secouer",
  "seÌcreÌter",
  "seÌdatif",
  "seÌduire",
  "seigneur",
  "seÌjour",
  "seÌlectif",
  "semaine",
  "sembler",
  "semence",
  "seÌminal",
  "seÌnateur",
  "sensible",
  "sentence",
  "seÌparer",
  "seÌquence",
  "serein",
  "sergent",
  "seÌrieux",
  "serrure",
  "seÌrum",
  "service",
  "seÌsame",
  "seÌvir",
  "sevrage",
  "sextuple",
  "sideÌral",
  "sieÌcle",
  "sieÌger",
  "siffler",
  "sigle",
  "signal",
  "silence",
  "silicium",
  "simple",
  "sinceÌre",
  "sinistre",
  "siphon",
  "sirop",
  "sismique",
  "situer",
  "skier",
  "social",
  "socle",
  "sodium",
  "soigneux",
  "soldat",
  "soleil",
  "solitude",
  "soluble",
  "sombre",
  "sommeil",
  "somnoler",
  "sonde",
  "songeur",
  "sonnette",
  "sonore",
  "sorcier",
  "sortir",
  "sosie",
  "sottise",
  "soucieux",
  "soudure",
  "souffle",
  "soulever",
  "soupape",
  "source",
  "soutirer",
  "souvenir",
  "spacieux",
  "spatial",
  "speÌcial",
  "spheÌre",
  "spiral",
  "stable",
  "station",
  "sternum",
  "stimulus",
  "stipuler",
  "strict",
  "studieux",
  "stupeur",
  "styliste",
  "sublime",
  "substrat",
  "subtil",
  "subvenir",
  "succeÌs",
  "sucre",
  "suffixe",
  "suggeÌrer",
  "suiveur",
  "sulfate",
  "superbe",
  "supplier",
  "surface",
  "suricate",
  "surmener",
  "surprise",
  "sursaut",
  "survie",
  "suspect",
  "syllabe",
  "symbole",
  "symeÌtrie",
  "synapse",
  "syntaxe",
  "systeÌme",
  "tabac",
  "tablier",
  "tactile",
  "tailler",
  "talent",
  "talisman",
  "talonner",
  "tambour",
  "tamiser",
  "tangible",
  "tapis",
  "taquiner",
  "tarder",
  "tarif",
  "tartine",
  "tasse",
  "tatami",
  "tatouage",
  "taupe",
  "taureau",
  "taxer",
  "teÌmoin",
  "temporel",
  "tenaille",
  "tendre",
  "teneur",
  "tenir",
  "tension",
  "terminer",
  "terne",
  "terrible",
  "teÌtine",
  "texte",
  "theÌme",
  "theÌorie",
  "theÌrapie",
  "thorax",
  "tibia",
  "tieÌde",
  "timide",
  "tirelire",
  "tiroir",
  "tissu",
  "titane",
  "titre",
  "tituber",
  "toboggan",
  "toleÌrant",
  "tomate",
  "tonique",
  "tonneau",
  "toponyme",
  "torche",
  "tordre",
  "tornade",
  "torpille",
  "torrent",
  "torse",
  "tortue",
  "totem",
  "toucher",
  "tournage",
  "tousser",
  "toxine",
  "traction",
  "trafic",
  "tragique",
  "trahir",
  "train",
  "trancher",
  "travail",
  "treÌfle",
  "tremper",
  "treÌsor",
  "treuil",
  "triage",
  "tribunal",
  "tricoter",
  "trilogie",
  "triomphe",
  "tripler",
  "triturer",
  "trivial",
  "trombone",
  "tronc",
  "tropical",
  "troupeau",
  "tuile",
  "tulipe",
  "tumulte",
  "tunnel",
  "turbine",
  "tuteur",
  "tutoyer",
  "tuyau",
  "tympan",
  "typhon",
  "typique",
  "tyran",
  "ubuesque",
  "ultime",
  "ultrason",
  "unanime",
  "unifier",
  "union",
  "unique",
  "unitaire",
  "univers",
  "uranium",
  "urbain",
  "urticant",
  "usage",
  "usine",
  "usuel",
  "usure",
  "utile",
  "utopie",
  "vacarme",
  "vaccin",
  "vagabond",
  "vague",
  "vaillant",
  "vaincre",
  "vaisseau",
  "valable",
  "valise",
  "vallon",
  "valve",
  "vampire",
  "vanille",
  "vapeur",
  "varier",
  "vaseux",
  "vassal",
  "vaste",
  "vecteur",
  "vedette",
  "veÌgeÌtal",
  "veÌhicule",
  "veinard",
  "veÌloce",
  "vendredi",
  "veÌneÌrer",
  "venger",
  "venimeux",
  "ventouse",
  "verdure",
  "veÌrin",
  "vernir",
  "verrou",
  "verser",
  "vertu",
  "veston",
  "veÌteÌran",
  "veÌtuste",
  "vexant",
  "vexer",
  "viaduc",
  "viande",
  "victoire",
  "vidange",
  "videÌo",
  "vignette",
  "vigueur",
  "vilain",
  "village",
  "vinaigre",
  "violon",
  "vipeÌre",
  "virement",
  "virtuose",
  "virus",
  "visage",
  "viseur",
  "vision",
  "visqueux",
  "visuel",
  "vital",
  "vitesse",
  "viticole",
  "vitrine",
  "vivace",
  "vivipare",
  "vocation",
  "voguer",
  "voile",
  "voisin",
  "voiture",
  "volaille",
  "volcan",
  "voltiger",
  "volume",
  "vorace",
  "vortex",
  "voter",
  "vouloir",
  "voyage",
  "voyelle",
  "wagon",
  "xeÌnon",
  "yacht",
  "zeÌbre",
  "zeÌnith",
  "zeste",
  "zoologie"
]

},{}],90:[function(require,module,exports){
module.exports=[
  "abaco",
  "abbaglio",
  "abbinato",
  "abete",
  "abisso",
  "abolire",
  "abrasivo",
  "abrogato",
  "accadere",
  "accenno",
  "accusato",
  "acetone",
  "achille",
  "acido",
  "acqua",
  "acre",
  "acrilico",
  "acrobata",
  "acuto",
  "adagio",
  "addebito",
  "addome",
  "adeguato",
  "aderire",
  "adipe",
  "adottare",
  "adulare",
  "affabile",
  "affetto",
  "affisso",
  "affranto",
  "aforisma",
  "afoso",
  "africano",
  "agave",
  "agente",
  "agevole",
  "aggancio",
  "agire",
  "agitare",
  "agonismo",
  "agricolo",
  "agrumeto",
  "aguzzo",
  "alabarda",
  "alato",
  "albatro",
  "alberato",
  "albo",
  "albume",
  "alce",
  "alcolico",
  "alettone",
  "alfa",
  "algebra",
  "aliante",
  "alibi",
  "alimento",
  "allagato",
  "allegro",
  "allievo",
  "allodola",
  "allusivo",
  "almeno",
  "alogeno",
  "alpaca",
  "alpestre",
  "altalena",
  "alterno",
  "alticcio",
  "altrove",
  "alunno",
  "alveolo",
  "alzare",
  "amalgama",
  "amanita",
  "amarena",
  "ambito",
  "ambrato",
  "ameba",
  "america",
  "ametista",
  "amico",
  "ammasso",
  "ammenda",
  "ammirare",
  "ammonito",
  "amore",
  "ampio",
  "ampliare",
  "amuleto",
  "anacardo",
  "anagrafe",
  "analista",
  "anarchia",
  "anatra",
  "anca",
  "ancella",
  "ancora",
  "andare",
  "andrea",
  "anello",
  "angelo",
  "angolare",
  "angusto",
  "anima",
  "annegare",
  "annidato",
  "anno",
  "annuncio",
  "anonimo",
  "anticipo",
  "anzi",
  "apatico",
  "apertura",
  "apode",
  "apparire",
  "appetito",
  "appoggio",
  "approdo",
  "appunto",
  "aprile",
  "arabica",
  "arachide",
  "aragosta",
  "araldica",
  "arancio",
  "aratura",
  "arazzo",
  "arbitro",
  "archivio",
  "ardito",
  "arenile",
  "argento",
  "argine",
  "arguto",
  "aria",
  "armonia",
  "arnese",
  "arredato",
  "arringa",
  "arrosto",
  "arsenico",
  "arso",
  "artefice",
  "arzillo",
  "asciutto",
  "ascolto",
  "asepsi",
  "asettico",
  "asfalto",
  "asino",
  "asola",
  "aspirato",
  "aspro",
  "assaggio",
  "asse",
  "assoluto",
  "assurdo",
  "asta",
  "astenuto",
  "astice",
  "astratto",
  "atavico",
  "ateismo",
  "atomico",
  "atono",
  "attesa",
  "attivare",
  "attorno",
  "attrito",
  "attuale",
  "ausilio",
  "austria",
  "autista",
  "autonomo",
  "autunno",
  "avanzato",
  "avere",
  "avvenire",
  "avviso",
  "avvolgere",
  "azione",
  "azoto",
  "azzimo",
  "azzurro",
  "babele",
  "baccano",
  "bacino",
  "baco",
  "badessa",
  "badilata",
  "bagnato",
  "baita",
  "balcone",
  "baldo",
  "balena",
  "ballata",
  "balzano",
  "bambino",
  "bandire",
  "baraonda",
  "barbaro",
  "barca",
  "baritono",
  "barlume",
  "barocco",
  "basilico",
  "basso",
  "batosta",
  "battuto",
  "baule",
  "bava",
  "bavosa",
  "becco",
  "beffa",
  "belgio",
  "belva",
  "benda",
  "benevole",
  "benigno",
  "benzina",
  "bere",
  "berlina",
  "beta",
  "bibita",
  "bici",
  "bidone",
  "bifido",
  "biga",
  "bilancia",
  "bimbo",
  "binocolo",
  "biologo",
  "bipede",
  "bipolare",
  "birbante",
  "birra",
  "biscotto",
  "bisesto",
  "bisnonno",
  "bisonte",
  "bisturi",
  "bizzarro",
  "blando",
  "blatta",
  "bollito",
  "bonifico",
  "bordo",
  "bosco",
  "botanico",
  "bottino",
  "bozzolo",
  "braccio",
  "bradipo",
  "brama",
  "branca",
  "bravura",
  "bretella",
  "brevetto",
  "brezza",
  "briglia",
  "brillante",
  "brindare",
  "broccolo",
  "brodo",
  "bronzina",
  "brullo",
  "bruno",
  "bubbone",
  "buca",
  "budino",
  "buffone",
  "buio",
  "bulbo",
  "buono",
  "burlone",
  "burrasca",
  "bussola",
  "busta",
  "cadetto",
  "caduco",
  "calamaro",
  "calcolo",
  "calesse",
  "calibro",
  "calmo",
  "caloria",
  "cambusa",
  "camerata",
  "camicia",
  "cammino",
  "camola",
  "campale",
  "canapa",
  "candela",
  "cane",
  "canino",
  "canotto",
  "cantina",
  "capace",
  "capello",
  "capitolo",
  "capogiro",
  "cappero",
  "capra",
  "capsula",
  "carapace",
  "carcassa",
  "cardo",
  "carisma",
  "carovana",
  "carretto",
  "cartolina",
  "casaccio",
  "cascata",
  "caserma",
  "caso",
  "cassone",
  "castello",
  "casuale",
  "catasta",
  "catena",
  "catrame",
  "cauto",
  "cavillo",
  "cedibile",
  "cedrata",
  "cefalo",
  "celebre",
  "cellulare",
  "cena",
  "cenone",
  "centesimo",
  "ceramica",
  "cercare",
  "certo",
  "cerume",
  "cervello",
  "cesoia",
  "cespo",
  "ceto",
  "chela",
  "chiaro",
  "chicca",
  "chiedere",
  "chimera",
  "china",
  "chirurgo",
  "chitarra",
  "ciao",
  "ciclismo",
  "cifrare",
  "cigno",
  "cilindro",
  "ciottolo",
  "circa",
  "cirrosi",
  "citrico",
  "cittadino",
  "ciuffo",
  "civetta",
  "civile",
  "classico",
  "clinica",
  "cloro",
  "cocco",
  "codardo",
  "codice",
  "coerente",
  "cognome",
  "collare",
  "colmato",
  "colore",
  "colposo",
  "coltivato",
  "colza",
  "coma",
  "cometa",
  "commando",
  "comodo",
  "computer",
  "comune",
  "conciso",
  "condurre",
  "conferma",
  "congelare",
  "coniuge",
  "connesso",
  "conoscere",
  "consumo",
  "continuo",
  "convegno",
  "coperto",
  "copione",
  "coppia",
  "copricapo",
  "corazza",
  "cordata",
  "coricato",
  "cornice",
  "corolla",
  "corpo",
  "corredo",
  "corsia",
  "cortese",
  "cosmico",
  "costante",
  "cottura",
  "covato",
  "cratere",
  "cravatta",
  "creato",
  "credere",
  "cremoso",
  "crescita",
  "creta",
  "criceto",
  "crinale",
  "crisi",
  "critico",
  "croce",
  "cronaca",
  "crostata",
  "cruciale",
  "crusca",
  "cucire",
  "cuculo",
  "cugino",
  "cullato",
  "cupola",
  "curatore",
  "cursore",
  "curvo",
  "cuscino",
  "custode",
  "dado",
  "daino",
  "dalmata",
  "damerino",
  "daniela",
  "dannoso",
  "danzare",
  "datato",
  "davanti",
  "davvero",
  "debutto",
  "decennio",
  "deciso",
  "declino",
  "decollo",
  "decreto",
  "dedicato",
  "definito",
  "deforme",
  "degno",
  "delegare",
  "delfino",
  "delirio",
  "delta",
  "demenza",
  "denotato",
  "dentro",
  "deposito",
  "derapata",
  "derivare",
  "deroga",
  "descritto",
  "deserto",
  "desiderio",
  "desumere",
  "detersivo",
  "devoto",
  "diametro",
  "dicembre",
  "diedro",
  "difeso",
  "diffuso",
  "digerire",
  "digitale",
  "diluvio",
  "dinamico",
  "dinnanzi",
  "dipinto",
  "diploma",
  "dipolo",
  "diradare",
  "dire",
  "dirotto",
  "dirupo",
  "disagio",
  "discreto",
  "disfare",
  "disgelo",
  "disposto",
  "distanza",
  "disumano",
  "dito",
  "divano",
  "divelto",
  "dividere",
  "divorato",
  "doblone",
  "docente",
  "doganale",
  "dogma",
  "dolce",
  "domato",
  "domenica",
  "dominare",
  "dondolo",
  "dono",
  "dormire",
  "dote",
  "dottore",
  "dovuto",
  "dozzina",
  "drago",
  "druido",
  "dubbio",
  "dubitare",
  "ducale",
  "duna",
  "duomo",
  "duplice",
  "duraturo",
  "ebano",
  "eccesso",
  "ecco",
  "eclissi",
  "economia",
  "edera",
  "edicola",
  "edile",
  "editoria",
  "educare",
  "egemonia",
  "egli",
  "egoismo",
  "egregio",
  "elaborato",
  "elargire",
  "elegante",
  "elencato",
  "eletto",
  "elevare",
  "elfico",
  "elica",
  "elmo",
  "elsa",
  "eluso",
  "emanato",
  "emblema",
  "emesso",
  "emiro",
  "emotivo",
  "emozione",
  "empirico",
  "emulo",
  "endemico",
  "enduro",
  "energia",
  "enfasi",
  "enoteca",
  "entrare",
  "enzima",
  "epatite",
  "epilogo",
  "episodio",
  "epocale",
  "eppure",
  "equatore",
  "erario",
  "erba",
  "erboso",
  "erede",
  "eremita",
  "erigere",
  "ermetico",
  "eroe",
  "erosivo",
  "errante",
  "esagono",
  "esame",
  "esanime",
  "esaudire",
  "esca",
  "esempio",
  "esercito",
  "esibito",
  "esigente",
  "esistere",
  "esito",
  "esofago",
  "esortato",
  "esoso",
  "espanso",
  "espresso",
  "essenza",
  "esso",
  "esteso",
  "estimare",
  "estonia",
  "estroso",
  "esultare",
  "etilico",
  "etnico",
  "etrusco",
  "etto",
  "euclideo",
  "europa",
  "evaso",
  "evidenza",
  "evitato",
  "evoluto",
  "evviva",
  "fabbrica",
  "faccenda",
  "fachiro",
  "falco",
  "famiglia",
  "fanale",
  "fanfara",
  "fango",
  "fantasma",
  "fare",
  "farfalla",
  "farinoso",
  "farmaco",
  "fascia",
  "fastoso",
  "fasullo",
  "faticare",
  "fato",
  "favoloso",
  "febbre",
  "fecola",
  "fede",
  "fegato",
  "felpa",
  "feltro",
  "femmina",
  "fendere",
  "fenomeno",
  "fermento",
  "ferro",
  "fertile",
  "fessura",
  "festivo",
  "fetta",
  "feudo",
  "fiaba",
  "fiducia",
  "fifa",
  "figurato",
  "filo",
  "finanza",
  "finestra",
  "finire",
  "fiore",
  "fiscale",
  "fisico",
  "fiume",
  "flacone",
  "flamenco",
  "flebo",
  "flemma",
  "florido",
  "fluente",
  "fluoro",
  "fobico",
  "focaccia",
  "focoso",
  "foderato",
  "foglio",
  "folata",
  "folclore",
  "folgore",
  "fondente",
  "fonetico",
  "fonia",
  "fontana",
  "forbito",
  "forchetta",
  "foresta",
  "formica",
  "fornaio",
  "foro",
  "fortezza",
  "forzare",
  "fosfato",
  "fosso",
  "fracasso",
  "frana",
  "frassino",
  "fratello",
  "freccetta",
  "frenata",
  "fresco",
  "frigo",
  "frollino",
  "fronde",
  "frugale",
  "frutta",
  "fucilata",
  "fucsia",
  "fuggente",
  "fulmine",
  "fulvo",
  "fumante",
  "fumetto",
  "fumoso",
  "fune",
  "funzione",
  "fuoco",
  "furbo",
  "furgone",
  "furore",
  "fuso",
  "futile",
  "gabbiano",
  "gaffe",
  "galateo",
  "gallina",
  "galoppo",
  "gambero",
  "gamma",
  "garanzia",
  "garbo",
  "garofano",
  "garzone",
  "gasdotto",
  "gasolio",
  "gastrico",
  "gatto",
  "gaudio",
  "gazebo",
  "gazzella",
  "geco",
  "gelatina",
  "gelso",
  "gemello",
  "gemmato",
  "gene",
  "genitore",
  "gennaio",
  "genotipo",
  "gergo",
  "ghepardo",
  "ghiaccio",
  "ghisa",
  "giallo",
  "gilda",
  "ginepro",
  "giocare",
  "gioiello",
  "giorno",
  "giove",
  "girato",
  "girone",
  "gittata",
  "giudizio",
  "giurato",
  "giusto",
  "globulo",
  "glutine",
  "gnomo",
  "gobba",
  "golf",
  "gomito",
  "gommone",
  "gonfio",
  "gonna",
  "governo",
  "gracile",
  "grado",
  "grafico",
  "grammo",
  "grande",
  "grattare",
  "gravoso",
  "grazia",
  "greca",
  "gregge",
  "grifone",
  "grigio",
  "grinza",
  "grotta",
  "gruppo",
  "guadagno",
  "guaio",
  "guanto",
  "guardare",
  "gufo",
  "guidare",
  "ibernato",
  "icona",
  "identico",
  "idillio",
  "idolo",
  "idra",
  "idrico",
  "idrogeno",
  "igiene",
  "ignaro",
  "ignorato",
  "ilare",
  "illeso",
  "illogico",
  "illudere",
  "imballo",
  "imbevuto",
  "imbocco",
  "imbuto",
  "immane",
  "immerso",
  "immolato",
  "impacco",
  "impeto",
  "impiego",
  "importo",
  "impronta",
  "inalare",
  "inarcare",
  "inattivo",
  "incanto",
  "incendio",
  "inchino",
  "incisivo",
  "incluso",
  "incontro",
  "incrocio",
  "incubo",
  "indagine",
  "india",
  "indole",
  "inedito",
  "infatti",
  "infilare",
  "inflitto",
  "ingaggio",
  "ingegno",
  "inglese",
  "ingordo",
  "ingrosso",
  "innesco",
  "inodore",
  "inoltrare",
  "inondato",
  "insano",
  "insetto",
  "insieme",
  "insonnia",
  "insulina",
  "intasato",
  "intero",
  "intonaco",
  "intuito",
  "inumidire",
  "invalido",
  "invece",
  "invito",
  "iperbole",
  "ipnotico",
  "ipotesi",
  "ippica",
  "iride",
  "irlanda",
  "ironico",
  "irrigato",
  "irrorare",
  "isolato",
  "isotopo",
  "isterico",
  "istituto",
  "istrice",
  "italia",
  "iterare",
  "labbro",
  "labirinto",
  "lacca",
  "lacerato",
  "lacrima",
  "lacuna",
  "laddove",
  "lago",
  "lampo",
  "lancetta",
  "lanterna",
  "lardoso",
  "larga",
  "laringe",
  "lastra",
  "latenza",
  "latino",
  "lattuga",
  "lavagna",
  "lavoro",
  "legale",
  "leggero",
  "lembo",
  "lentezza",
  "lenza",
  "leone",
  "lepre",
  "lesivo",
  "lessato",
  "lesto",
  "letterale",
  "leva",
  "levigato",
  "libero",
  "lido",
  "lievito",
  "lilla",
  "limatura",
  "limitare",
  "limpido",
  "lineare",
  "lingua",
  "liquido",
  "lira",
  "lirica",
  "lisca",
  "lite",
  "litigio",
  "livrea",
  "locanda",
  "lode",
  "logica",
  "lombare",
  "londra",
  "longevo",
  "loquace",
  "lorenzo",
  "loto",
  "lotteria",
  "luce",
  "lucidato",
  "lumaca",
  "luminoso",
  "lungo",
  "lupo",
  "luppolo",
  "lusinga",
  "lusso",
  "lutto",
  "macabro",
  "macchina",
  "macero",
  "macinato",
  "madama",
  "magico",
  "maglia",
  "magnete",
  "magro",
  "maiolica",
  "malafede",
  "malgrado",
  "malinteso",
  "malsano",
  "malto",
  "malumore",
  "mana",
  "mancia",
  "mandorla",
  "mangiare",
  "manifesto",
  "mannaro",
  "manovra",
  "mansarda",
  "mantide",
  "manubrio",
  "mappa",
  "maratona",
  "marcire",
  "maretta",
  "marmo",
  "marsupio",
  "maschera",
  "massaia",
  "mastino",
  "materasso",
  "matricola",
  "mattone",
  "maturo",
  "mazurca",
  "meandro",
  "meccanico",
  "mecenate",
  "medesimo",
  "meditare",
  "mega",
  "melassa",
  "melis",
  "melodia",
  "meninge",
  "meno",
  "mensola",
  "mercurio",
  "merenda",
  "merlo",
  "meschino",
  "mese",
  "messere",
  "mestolo",
  "metallo",
  "metodo",
  "mettere",
  "miagolare",
  "mica",
  "micelio",
  "michele",
  "microbo",
  "midollo",
  "miele",
  "migliore",
  "milano",
  "milite",
  "mimosa",
  "minerale",
  "mini",
  "minore",
  "mirino",
  "mirtillo",
  "miscela",
  "missiva",
  "misto",
  "misurare",
  "mitezza",
  "mitigare",
  "mitra",
  "mittente",
  "mnemonico",
  "modello",
  "modifica",
  "modulo",
  "mogano",
  "mogio",
  "mole",
  "molosso",
  "monastero",
  "monco",
  "mondina",
  "monetario",
  "monile",
  "monotono",
  "monsone",
  "montato",
  "monviso",
  "mora",
  "mordere",
  "morsicato",
  "mostro",
  "motivato",
  "motosega",
  "motto",
  "movenza",
  "movimento",
  "mozzo",
  "mucca",
  "mucosa",
  "muffa",
  "mughetto",
  "mugnaio",
  "mulatto",
  "mulinello",
  "multiplo",
  "mummia",
  "munto",
  "muovere",
  "murale",
  "musa",
  "muscolo",
  "musica",
  "mutevole",
  "muto",
  "nababbo",
  "nafta",
  "nanometro",
  "narciso",
  "narice",
  "narrato",
  "nascere",
  "nastrare",
  "naturale",
  "nautica",
  "naviglio",
  "nebulosa",
  "necrosi",
  "negativo",
  "negozio",
  "nemmeno",
  "neofita",
  "neretto",
  "nervo",
  "nessuno",
  "nettuno",
  "neutrale",
  "neve",
  "nevrotico",
  "nicchia",
  "ninfa",
  "nitido",
  "nobile",
  "nocivo",
  "nodo",
  "nome",
  "nomina",
  "nordico",
  "normale",
  "norvegese",
  "nostrano",
  "notare",
  "notizia",
  "notturno",
  "novella",
  "nucleo",
  "nulla",
  "numero",
  "nuovo",
  "nutrire",
  "nuvola",
  "nuziale",
  "oasi",
  "obbedire",
  "obbligo",
  "obelisco",
  "oblio",
  "obolo",
  "obsoleto",
  "occasione",
  "occhio",
  "occidente",
  "occorrere",
  "occultare",
  "ocra",
  "oculato",
  "odierno",
  "odorare",
  "offerta",
  "offrire",
  "offuscato",
  "oggetto",
  "oggi",
  "ognuno",
  "olandese",
  "olfatto",
  "oliato",
  "oliva",
  "ologramma",
  "oltre",
  "omaggio",
  "ombelico",
  "ombra",
  "omega",
  "omissione",
  "ondoso",
  "onere",
  "onice",
  "onnivoro",
  "onorevole",
  "onta",
  "operato",
  "opinione",
  "opposto",
  "oracolo",
  "orafo",
  "ordine",
  "orecchino",
  "orefice",
  "orfano",
  "organico",
  "origine",
  "orizzonte",
  "orma",
  "ormeggio",
  "ornativo",
  "orologio",
  "orrendo",
  "orribile",
  "ortensia",
  "ortica",
  "orzata",
  "orzo",
  "osare",
  "oscurare",
  "osmosi",
  "ospedale",
  "ospite",
  "ossa",
  "ossidare",
  "ostacolo",
  "oste",
  "otite",
  "otre",
  "ottagono",
  "ottimo",
  "ottobre",
  "ovale",
  "ovest",
  "ovino",
  "oviparo",
  "ovocito",
  "ovunque",
  "ovviare",
  "ozio",
  "pacchetto",
  "pace",
  "pacifico",
  "padella",
  "padrone",
  "paese",
  "paga",
  "pagina",
  "palazzina",
  "palesare",
  "pallido",
  "palo",
  "palude",
  "pandoro",
  "pannello",
  "paolo",
  "paonazzo",
  "paprica",
  "parabola",
  "parcella",
  "parere",
  "pargolo",
  "pari",
  "parlato",
  "parola",
  "partire",
  "parvenza",
  "parziale",
  "passivo",
  "pasticca",
  "patacca",
  "patologia",
  "pattume",
  "pavone",
  "peccato",
  "pedalare",
  "pedonale",
  "peggio",
  "peloso",
  "penare",
  "pendice",
  "penisola",
  "pennuto",
  "penombra",
  "pensare",
  "pentola",
  "pepe",
  "pepita",
  "perbene",
  "percorso",
  "perdonato",
  "perforare",
  "pergamena",
  "periodo",
  "permesso",
  "perno",
  "perplesso",
  "persuaso",
  "pertugio",
  "pervaso",
  "pesatore",
  "pesista",
  "peso",
  "pestifero",
  "petalo",
  "pettine",
  "petulante",
  "pezzo",
  "piacere",
  "pianta",
  "piattino",
  "piccino",
  "picozza",
  "piega",
  "pietra",
  "piffero",
  "pigiama",
  "pigolio",
  "pigro",
  "pila",
  "pilifero",
  "pillola",
  "pilota",
  "pimpante",
  "pineta",
  "pinna",
  "pinolo",
  "pioggia",
  "piombo",
  "piramide",
  "piretico",
  "pirite",
  "pirolisi",
  "pitone",
  "pizzico",
  "placebo",
  "planare",
  "plasma",
  "platano",
  "plenario",
  "pochezza",
  "poderoso",
  "podismo",
  "poesia",
  "poggiare",
  "polenta",
  "poligono",
  "pollice",
  "polmonite",
  "polpetta",
  "polso",
  "poltrona",
  "polvere",
  "pomice",
  "pomodoro",
  "ponte",
  "popoloso",
  "porfido",
  "poroso",
  "porpora",
  "porre",
  "portata",
  "posa",
  "positivo",
  "possesso",
  "postulato",
  "potassio",
  "potere",
  "pranzo",
  "prassi",
  "pratica",
  "precluso",
  "predica",
  "prefisso",
  "pregiato",
  "prelievo",
  "premere",
  "prenotare",
  "preparato",
  "presenza",
  "pretesto",
  "prevalso",
  "prima",
  "principe",
  "privato",
  "problema",
  "procura",
  "produrre",
  "profumo",
  "progetto",
  "prolunga",
  "promessa",
  "pronome",
  "proposta",
  "proroga",
  "proteso",
  "prova",
  "prudente",
  "prugna",
  "prurito",
  "psiche",
  "pubblico",
  "pudica",
  "pugilato",
  "pugno",
  "pulce",
  "pulito",
  "pulsante",
  "puntare",
  "pupazzo",
  "pupilla",
  "puro",
  "quadro",
  "qualcosa",
  "quasi",
  "querela",
  "quota",
  "raccolto",
  "raddoppio",
  "radicale",
  "radunato",
  "raffica",
  "ragazzo",
  "ragione",
  "ragno",
  "ramarro",
  "ramingo",
  "ramo",
  "randagio",
  "rantolare",
  "rapato",
  "rapina",
  "rappreso",
  "rasatura",
  "raschiato",
  "rasente",
  "rassegna",
  "rastrello",
  "rata",
  "ravveduto",
  "reale",
  "recepire",
  "recinto",
  "recluta",
  "recondito",
  "recupero",
  "reddito",
  "redimere",
  "regalato",
  "registro",
  "regola",
  "regresso",
  "relazione",
  "remare",
  "remoto",
  "renna",
  "replica",
  "reprimere",
  "reputare",
  "resa",
  "residente",
  "responso",
  "restauro",
  "rete",
  "retina",
  "retorica",
  "rettifica",
  "revocato",
  "riassunto",
  "ribadire",
  "ribelle",
  "ribrezzo",
  "ricarica",
  "ricco",
  "ricevere",
  "riciclato",
  "ricordo",
  "ricreduto",
  "ridicolo",
  "ridurre",
  "rifasare",
  "riflesso",
  "riforma",
  "rifugio",
  "rigare",
  "rigettato",
  "righello",
  "rilassato",
  "rilevato",
  "rimanere",
  "rimbalzo",
  "rimedio",
  "rimorchio",
  "rinascita",
  "rincaro",
  "rinforzo",
  "rinnovo",
  "rinomato",
  "rinsavito",
  "rintocco",
  "rinuncia",
  "rinvenire",
  "riparato",
  "ripetuto",
  "ripieno",
  "riportare",
  "ripresa",
  "ripulire",
  "risata",
  "rischio",
  "riserva",
  "risibile",
  "riso",
  "rispetto",
  "ristoro",
  "risultato",
  "risvolto",
  "ritardo",
  "ritegno",
  "ritmico",
  "ritrovo",
  "riunione",
  "riva",
  "riverso",
  "rivincita",
  "rivolto",
  "rizoma",
  "roba",
  "robotico",
  "robusto",
  "roccia",
  "roco",
  "rodaggio",
  "rodere",
  "roditore",
  "rogito",
  "rollio",
  "romantico",
  "rompere",
  "ronzio",
  "rosolare",
  "rospo",
  "rotante",
  "rotondo",
  "rotula",
  "rovescio",
  "rubizzo",
  "rubrica",
  "ruga",
  "rullino",
  "rumine",
  "rumoroso",
  "ruolo",
  "rupe",
  "russare",
  "rustico",
  "sabato",
  "sabbiare",
  "sabotato",
  "sagoma",
  "salasso",
  "saldatura",
  "salgemma",
  "salivare",
  "salmone",
  "salone",
  "saltare",
  "saluto",
  "salvo",
  "sapere",
  "sapido",
  "saporito",
  "saraceno",
  "sarcasmo",
  "sarto",
  "sassoso",
  "satellite",
  "satira",
  "satollo",
  "saturno",
  "savana",
  "savio",
  "saziato",
  "sbadiglio",
  "sbalzo",
  "sbancato",
  "sbarra",
  "sbattere",
  "sbavare",
  "sbendare",
  "sbirciare",
  "sbloccato",
  "sbocciato",
  "sbrinare",
  "sbruffone",
  "sbuffare",
  "scabroso",
  "scadenza",
  "scala",
  "scambiare",
  "scandalo",
  "scapola",
  "scarso",
  "scatenare",
  "scavato",
  "scelto",
  "scenico",
  "scettro",
  "scheda",
  "schiena",
  "sciarpa",
  "scienza",
  "scindere",
  "scippo",
  "sciroppo",
  "scivolo",
  "sclerare",
  "scodella",
  "scolpito",
  "scomparto",
  "sconforto",
  "scoprire",
  "scorta",
  "scossone",
  "scozzese",
  "scriba",
  "scrollare",
  "scrutinio",
  "scuderia",
  "scultore",
  "scuola",
  "scuro",
  "scusare",
  "sdebitare",
  "sdoganare",
  "seccatura",
  "secondo",
  "sedano",
  "seggiola",
  "segnalato",
  "segregato",
  "seguito",
  "selciato",
  "selettivo",
  "sella",
  "selvaggio",
  "semaforo",
  "sembrare",
  "seme",
  "seminato",
  "sempre",
  "senso",
  "sentire",
  "sepolto",
  "sequenza",
  "serata",
  "serbato",
  "sereno",
  "serio",
  "serpente",
  "serraglio",
  "servire",
  "sestina",
  "setola",
  "settimana",
  "sfacelo",
  "sfaldare",
  "sfamato",
  "sfarzoso",
  "sfaticato",
  "sfera",
  "sfida",
  "sfilato",
  "sfinge",
  "sfocato",
  "sfoderare",
  "sfogo",
  "sfoltire",
  "sforzato",
  "sfratto",
  "sfruttato",
  "sfuggito",
  "sfumare",
  "sfuso",
  "sgabello",
  "sgarbato",
  "sgonfiare",
  "sgorbio",
  "sgrassato",
  "sguardo",
  "sibilo",
  "siccome",
  "sierra",
  "sigla",
  "signore",
  "silenzio",
  "sillaba",
  "simbolo",
  "simpatico",
  "simulato",
  "sinfonia",
  "singolo",
  "sinistro",
  "sino",
  "sintesi",
  "sinusoide",
  "sipario",
  "sisma",
  "sistole",
  "situato",
  "slitta",
  "slogatura",
  "sloveno",
  "smarrito",
  "smemorato",
  "smentito",
  "smeraldo",
  "smilzo",
  "smontare",
  "smottato",
  "smussato",
  "snellire",
  "snervato",
  "snodo",
  "sobbalzo",
  "sobrio",
  "soccorso",
  "sociale",
  "sodale",
  "soffitto",
  "sogno",
  "soldato",
  "solenne",
  "solido",
  "sollazzo",
  "solo",
  "solubile",
  "solvente",
  "somatico",
  "somma",
  "sonda",
  "sonetto",
  "sonnifero",
  "sopire",
  "soppeso",
  "sopra",
  "sorgere",
  "sorpasso",
  "sorriso",
  "sorso",
  "sorteggio",
  "sorvolato",
  "sospiro",
  "sosta",
  "sottile",
  "spada",
  "spalla",
  "spargere",
  "spatola",
  "spavento",
  "spazzola",
  "specie",
  "spedire",
  "spegnere",
  "spelatura",
  "speranza",
  "spessore",
  "spettrale",
  "spezzato",
  "spia",
  "spigoloso",
  "spillato",
  "spinoso",
  "spirale",
  "splendido",
  "sportivo",
  "sposo",
  "spranga",
  "sprecare",
  "spronato",
  "spruzzo",
  "spuntino",
  "squillo",
  "sradicare",
  "srotolato",
  "stabile",
  "stacco",
  "staffa",
  "stagnare",
  "stampato",
  "stantio",
  "starnuto",
  "stasera",
  "statuto",
  "stelo",
  "steppa",
  "sterzo",
  "stiletto",
  "stima",
  "stirpe",
  "stivale",
  "stizzoso",
  "stonato",
  "storico",
  "strappo",
  "stregato",
  "stridulo",
  "strozzare",
  "strutto",
  "stuccare",
  "stufo",
  "stupendo",
  "subentro",
  "succoso",
  "sudore",
  "suggerito",
  "sugo",
  "sultano",
  "suonare",
  "superbo",
  "supporto",
  "surgelato",
  "surrogato",
  "sussurro",
  "sutura",
  "svagare",
  "svedese",
  "sveglio",
  "svelare",
  "svenuto",
  "svezia",
  "sviluppo",
  "svista",
  "svizzera",
  "svolta",
  "svuotare",
  "tabacco",
  "tabulato",
  "tacciare",
  "taciturno",
  "tale",
  "talismano",
  "tampone",
  "tannino",
  "tara",
  "tardivo",
  "targato",
  "tariffa",
  "tarpare",
  "tartaruga",
  "tasto",
  "tattico",
  "taverna",
  "tavolata",
  "tazza",
  "teca",
  "tecnico",
  "telefono",
  "temerario",
  "tempo",
  "temuto",
  "tendone",
  "tenero",
  "tensione",
  "tentacolo",
  "teorema",
  "terme",
  "terrazzo",
  "terzetto",
  "tesi",
  "tesserato",
  "testato",
  "tetro",
  "tettoia",
  "tifare",
  "tigella",
  "timbro",
  "tinto",
  "tipico",
  "tipografo",
  "tiraggio",
  "tiro",
  "titanio",
  "titolo",
  "titubante",
  "tizio",
  "tizzone",
  "toccare",
  "tollerare",
  "tolto",
  "tombola",
  "tomo",
  "tonfo",
  "tonsilla",
  "topazio",
  "topologia",
  "toppa",
  "torba",
  "tornare",
  "torrone",
  "tortora",
  "toscano",
  "tossire",
  "tostatura",
  "totano",
  "trabocco",
  "trachea",
  "trafila",
  "tragedia",
  "tralcio",
  "tramonto",
  "transito",
  "trapano",
  "trarre",
  "trasloco",
  "trattato",
  "trave",
  "treccia",
  "tremolio",
  "trespolo",
  "tributo",
  "tricheco",
  "trifoglio",
  "trillo",
  "trincea",
  "trio",
  "tristezza",
  "triturato",
  "trivella",
  "tromba",
  "trono",
  "troppo",
  "trottola",
  "trovare",
  "truccato",
  "tubatura",
  "tuffato",
  "tulipano",
  "tumulto",
  "tunisia",
  "turbare",
  "turchino",
  "tuta",
  "tutela",
  "ubicato",
  "uccello",
  "uccisore",
  "udire",
  "uditivo",
  "uffa",
  "ufficio",
  "uguale",
  "ulisse",
  "ultimato",
  "umano",
  "umile",
  "umorismo",
  "uncinetto",
  "ungere",
  "ungherese",
  "unicorno",
  "unificato",
  "unisono",
  "unitario",
  "unte",
  "uovo",
  "upupa",
  "uragano",
  "urgenza",
  "urlo",
  "usanza",
  "usato",
  "uscito",
  "usignolo",
  "usuraio",
  "utensile",
  "utilizzo",
  "utopia",
  "vacante",
  "vaccinato",
  "vagabondo",
  "vagliato",
  "valanga",
  "valgo",
  "valico",
  "valletta",
  "valoroso",
  "valutare",
  "valvola",
  "vampata",
  "vangare",
  "vanitoso",
  "vano",
  "vantaggio",
  "vanvera",
  "vapore",
  "varano",
  "varcato",
  "variante",
  "vasca",
  "vedetta",
  "vedova",
  "veduto",
  "vegetale",
  "veicolo",
  "velcro",
  "velina",
  "velluto",
  "veloce",
  "venato",
  "vendemmia",
  "vento",
  "verace",
  "verbale",
  "vergogna",
  "verifica",
  "vero",
  "verruca",
  "verticale",
  "vescica",
  "vessillo",
  "vestale",
  "veterano",
  "vetrina",
  "vetusto",
  "viandante",
  "vibrante",
  "vicenda",
  "vichingo",
  "vicinanza",
  "vidimare",
  "vigilia",
  "vigneto",
  "vigore",
  "vile",
  "villano",
  "vimini",
  "vincitore",
  "viola",
  "vipera",
  "virgola",
  "virologo",
  "virulento",
  "viscoso",
  "visione",
  "vispo",
  "vissuto",
  "visura",
  "vita",
  "vitello",
  "vittima",
  "vivanda",
  "vivido",
  "viziare",
  "voce",
  "voga",
  "volatile",
  "volere",
  "volpe",
  "voragine",
  "vulcano",
  "zampogna",
  "zanna",
  "zappato",
  "zattera",
  "zavorra",
  "zefiro",
  "zelante",
  "zelo",
  "zenzero",
  "zerbino",
  "zibetto",
  "zinco",
  "zircone",
  "zitto",
  "zolla",
  "zotico",
  "zucchero",
  "zufolo",
  "zulu",
  "zuppa"
]

},{}],91:[function(require,module,exports){
module.exports=[
  "ãããããã",
  "ãããã¤",
  "ãããã",
  "ããããã",
  "ããã¡ãã",
  "ããã",
  "ããããã",
  "ããã",
  "ãããããã",
  "ããã",
  "ããã²",
  "ãããã¨",
  "ããããã",
  "ããããã",
  "ãããã",
  "ãããµã",
  "ãããã",
  "ããããã",
  "ãããã¾ã",
  "ããã",
  "ãã¤ã",
  "ãã¤ãã",
  "ãã£ããã",
  "ãã¤ã¾ã",
  "ãã¤ãã",
  "ãã¦ãª",
  "ãã¦ã¯ã¾ã",
  "ãã²ã",
  "ããµãã",
  "ããµãã",
  "ããµãã",
  "ãã¾ã",
  "ãã¾ã¨ã",
  "ãã¾ããã",
  "ãã¾ã",
  "ãã¿ãã®",
  "ãããã",
  "ããã¾ã",
  "ããã",
  "ãããããã¾",
  "ããã",
  "ããããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããããã¨ã",
  "ãããã",
  "ããã¦ã",
  "ããã",
  "ããããã",
  "ããã",
  "ããããã",
  "ããã¦ã",
  "ãããªã",
  "ããã¾ã",
  "ããããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããªã",
  "ãããã®",
  "ããã",
  "ãããã",
  "ãããµãã",
  "ããã¯ããª",
  "ããã",
  "ããã",
  "ããã",
  "ããã¤",
  "ããã¾ãã",
  "ããã",
  "ããã",
  "ããããã",
  "ããããã",
  "ããããã",
  "ãããã¿",
  "ãããã",
  "ããã",
  "ãããã²ã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããããã",
  "ãããããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããã¿",
  "ãããã",
  "ãã¡ãã",
  "ãã¡ãã",
  "ãã¡ã¨ã",
  "ãã¡ã¯ã",
  "ãã¡ãµã",
  "ãã¡ããã",
  "ãã¤ã",
  "ãã£ããã",
  "ãã£ãã",
  "ãã£ãã",
  "ãã£ãã",
  "ãã£ã¡",
  "ãã£ã¦ã",
  "ãã£ã»ãã",
  "ãã¦ãã",
  "ãã¦ã",
  "ãã¨ãã",
  "ãã¨ã",
  "ããªã",
  "ããªã",
  "ãã­ãã",
  "ãã®ã¡",
  "ãã®ã",
  "ãã¯ã¤",
  "ãã¯ãã",
  "ãã¯ã",
  "ãã²ãã",
  "ãã²ã",
  "ããµã",
  "ãã¸ã",
  "ãã»ã",
  "ãã¿ã",
  "ãããã¨",
  "ãããã",
  "ããã",
  "ããããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ãããã¨",
  "ããããã¡",
  "ãããã",
  "ããã",
  "ãããã®",
  "ããã",
  "ããããã²ãã¤",
  "ããã",
  "ããã",
  "ãããã",
  "ããã¯ã",
  "ãããã",
  "ãããããã¾ã",
  "ãããã¤",
  "ããããã",
  "ãããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããµã",
  "ããã¸ãã",
  "ããã",
  "ãããããª",
  "ãããã",
  "ãããã¾ãã",
  "ããã¤ã",
  "ããã¨ã",
  "ãããã¤",
  "ããã",
  "ããããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ãããªã",
  "ãããããã¿",
  "ããã",
  "ãããã",
  "ãããããã",
  "ãããã",
  "ããã¤",
  "ãã¡ããã",
  "ãã¡ããã",
  "ãã¡ã",
  "ãã¡ãã",
  "ãã£ãã",
  "ãã¤ããã",
  "ãã£ããã",
  "ãã¤ã",
  "ãã¨ãã",
  "ããªãã",
  "ããªãã",
  "ããªããã",
  "ããªã",
  "ãã­ã",
  "ãã®ã",
  "ããµããã",
  "ããµãããã",
  "ãã¾ãã",
  "ããã",
  "ããã",
  "ããã¾ã",
  "ããã",
  "ãããããã",
  "ããããã¡",
  "ãããªã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããã¡ã",
  "ããã¦ã",
  "ããã¨ãã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããµãã",
  "ãããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã¦",
  "ãã¤ãã",
  "ãã®ãã",
  "ãã»ãã¾ã",
  "ãã»ã",
  "ãã¾ã",
  "ãããã",
  "ããã®",
  "ããã",
  "ãããµã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããããã",
  "ããããã¤",
  "ãããã",
  "ããã¡ãã",
  "ããã¨ã¤",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããã¤ã",
  "ãããã",
  "ãããã¾",
  "ãããã",
  "ãããã¤",
  "ãããã",
  "ãããµã",
  "ããã¸ãã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã¨ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããªã",
  "ããã",
  "ãããã¾",
  "ãããããã",
  "ããããããª",
  "ããã",
  "ãããã",
  "ããã",
  "ãããªã",
  "ããã",
  "ãããã",
  "ãããªã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããã",
  "ããããã",
  "ãã¡ã¤ã",
  "ãã£ã¨",
  "ãã¤ã",
  "ãã¦ããã",
  "ãã¨ããã®",
  "ãã¨ãªãã",
  "ãã¨ãã",
  "ãã¨ãããã",
  "ãã¯ããã",
  "ãã¾ãã",
  "ããã¦ãã¨ã",
  "ãããã¦ã",
  "ããã",
  "ãããã",
  "ããã¡ã",
  "ããã¤",
  "ãããã²ã",
  "ããã»ãã",
  "ããããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããã¡ãã",
  "ããã¨ããã",
  "ããã¤",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããããã",
  "ãããã¤",
  "ãããã",
  "ãããããã",
  "ããããã",
  "ãããããã¨ã",
  "ããã¤ã",
  "ããã¦ã",
  "ããã¨ã",
  "ãããµã",
  "ãããã¸ã",
  "ããã»ã",
  "ãããã",
  "ããããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã¿",
  "ãããã",
  "ããã¨ã",
  "ãããã",
  "ããããã",
  "ããã",
  "ããã¡",
  "ããã¡ãã",
  "ããã£ããã",
  "ããã£ãã",
  "ããã£ãã",
  "ããã£ããã",
  "ããªãããã",
  "ãã®ã",
  "ããã¯ã",
  "ããµãã",
  "ãã»ã",
  "ãã»ãã",
  "ãã¾ã",
  "ãã¾ã»ãã",
  "ããããã",
  "ããã",
  "ãããã²ã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã¡",
  "ãããã¯ãã",
  "ããã",
  "ããã¤",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã¡",
  "ããã",
  "ããã",
  "ããã",
  "ããããã",
  "ããã¦",
  "ããã¯ãã",
  "ããããã",
  "ããããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã¾",
  "ããããã",
  "ãããããããã",
  "ãããã",
  "ãããããããã",
  "ããããã«ã£ã¦ã",
  "ãããããã¤ãã",
  "ããã",
  "ããã",
  "ããã",
  "ããã¤",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãã¡ãã",
  "ãã¤ãã",
  "ããã£ã¡ã",
  "ãã¤ã¤ã",
  "ãã¤ã­",
  "ãã¦ã",
  "ãã¨ãã",
  "ãã¨ãã",
  "ããªã",
  "ããªãã",
  "ããªã",
  "ãã¬ããã",
  "ãã­ã",
  "ãã®ã",
  "ãã®ãã",
  "ãã¯ã",
  "ãã²ããã",
  "ãã²ã",
  "ããµã",
  "ããµãã",
  "ãã»ãã",
  "ãã»ã",
  "ãã¾ã",
  "ãã¿ã¤",
  "ããããããã",
  "ããã",
  "ãããããã",
  "ããã¡",
  "ããã®",
  "ããã",
  "ããã",
  "ããããã«ã",
  "ããã",
  "ãããããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã¤",
  "ããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããããã",
  "ããããã",
  "ããããã²ã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ããããã",
  "ãããµã",
  "ããã»ã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã¯ããª",
  "ããã",
  "ãããã¿",
  "ãããã",
  "ããã®ã",
  "ããããã²ã",
  "ãããã",
  "ããã",
  "ããããã¦ã",
  "ããããã",
  "ããã²ããã",
  "ãã¡ãã¿",
  "ãã¡ãã",
  "ãã¤ãã",
  "ããã£ãã",
  "ãã¤ããã",
  "ãã¨ãã¦ã",
  "ãã¨ãã",
  "ããªã",
  "ãã­ãã­",
  "ãã®ã",
  "ããµã",
  "ãã¿ããã",
  "ãã¿ãã¦ã",
  "ããã",
  "ããããã",
  "ããã",
  "ããã¸ãã",
  "ããã¾",
  "ããã",
  "ããã",
  "ãããã",
  "ããããã",
  "ãããããã",
  "ããããã",
  "ãããã¦",
  "ãããª",
  "ãããã",
  "ãããã",
  "ããã",
  "ãããã¤",
  "ããããããã¤",
  "ãããã",
  "ãããã®ãããã",
  "ãããã",
  "ããã",
  "ããã¨ã",
  "ããããã®",
  "ãããã",
  "ãããããã",
  "ãããããã",
  "ãããã¡ã",
  "ãããã¨ã¤",
  "ãããã¯",
  "ããããã",
  "ãããã",
  "ãããããããã",
  "ããããã",
  "ããã",
  "ããããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã¨",
  "ããã¯ã",
  "ãã¡ãã£ãµã",
  "ãã¡ãã",
  "ãã¤ãã¤",
  "ãã¤ã",
  "ãã¤ãã",
  "ãã£ãã",
  "ãã¤ããã",
  "ãã£ãã",
  "ãã£ã¦ã",
  "ãã¤ã¾ã¤",
  "ããã¤ããã²ã",
  "ããã¤ãã",
  "ãã¤ãã",
  "ããã¨ãã",
  "ãã¨ã¯ãã",
  "ãã¨ã",
  "ããªãã",
  "ããªã",
  "ããªã¿",
  "ãã¬ã",
  "ããã­ã¤",
  "ãã­ã",
  "ãã¯ã",
  "ããã²ã",
  "ããµããã",
  "ããã»ãã",
  "ãã¾ã",
  "ãã¿ãã",
  "ããã",
  "ããã",
  "ããã®",
  "ããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ãããã¤",
  "ããã",
  "ããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ããããã",
  "ããã¡ã",
  "ããã¦ã",
  "ããã¨ã",
  "ãããªã",
  "ããã«ã",
  "ããããµãã¤",
  "ããã¾",
  "ããã¿ã",
  "ãããã",
  "ãããã",
  "ããã",
  "ãããã¾",
  "ããã¬",
  "ããã²ãã¨",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããã¡ã",
  "ããã¤ã",
  "ããã¦ã",
  "ããã¨ãã",
  "ãããªã",
  "ããã¯ã",
  "ãããã»ã",
  "ãããã¾ã",
  "ãããã",
  "ãããã¤",
  "ããã",
  "ããã",
  "ãããã",
  "ããããã¤",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã¨ã",
  "ãããªã",
  "ããã¯ã",
  "ãããã¾",
  "ããã",
  "ããã",
  "ããã®ã",
  "ããã",
  "ããã",
  "ããã¤",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããããã¦",
  "ããã",
  "ãããã",
  "ããã¤",
  "ãã¡ãã",
  "ãã£ã",
  "ãã¤ãã¤",
  "ãã¤ã¯ãã",
  "ãã¤ãµã",
  "ãã¦ã",
  "ãã¦ã",
  "ãã¨ããã",
  "ãã¨ã",
  "ãã¨ã¯ã",
  "ãã¨ã",
  "ããªãããª",
  "ãã­ãã­",
  "ãã®ã¾ã¾",
  "ãã®ã¿",
  "ãã®ã",
  "ããã¯ã",
  "ãã²ã¤ãã",
  "ããµã",
  "ããµã",
  "ãã»ããã",
  "ããã¾ããµãã",
  "ãã¾ãã",
  "ããã¾ãã",
  "ãã¾ã¤ãª",
  "ãã¾ã",
  "ããããã",
  "ãããã",
  "ããã¡",
  "ããã®",
  "ããã",
  "ããã",
  "ããã¾",
  "ããã",
  "ããã²ã",
  "ããã",
  "ããã",
  "ããã",
  "ãããããã",
  "ããã£ã",
  "ãããã¦",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ããããã¦",
  "ããã¨ã",
  "ãããªã",
  "ããã²ãã«",
  "ããã»ãã",
  "ããã¾ã",
  "ããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã¡ãã",
  "ããã¦ã",
  "ãããããã",
  "ãããª",
  "ãããã",
  "ãããã",
  "ãããª",
  "ããã¿ã¡",
  "ãããã",
  "ããããã",
  "ããã",
  "ããã²ã",
  "ããã",
  "ããã",
  "ããã¤",
  "ããããã",
  "ãããã",
  "ããã",
  "ãã¤ãã",
  "ããã¤ãã",
  "ããã£ã",
  "ããã¤ããã",
  "ãã£ããã",
  "ããã£ã",
  "ãã¤ããã",
  "ããã£ãã",
  "ãã¤ãã¯ã",
  "ãã¤ã¾ãã",
  "ãã¦ã",
  "ãã¨ãã",
  "ãã¨ã",
  "ãã¨ãã",
  "ãã¨ã",
  "ãã¨ã",
  "ãã®ã",
  "ãã¯ãã",
  "ãã²ããã",
  "ãã¸ãã¤",
  "ãã»ã",
  "ãã»ã¨ã",
  "ãã¾ã",
  "ãã¿ãã",
  "ãã¿ããã",
  "ããã",
  "ããã",
  "ããããã¨ãã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããããã¯ã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããã¡",
  "ããã¾",
  "ããã¿",
  "ãããã",
  "ããã",
  "ãããã",
  "ãããã£ã¦",
  "ãããã",
  "ããã",
  "ããã",
  "ããã¡",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã¨",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããã¦",
  "ããã¿",
  "ãã¡ãã",
  "ãã¡ãã",
  "ãã£ãã",
  "ãã¤ãã",
  "ãã¤ãã",
  "ãã¦ã",
  "ãã¦ã",
  "ãã¦ã¤",
  "ããã¦ã",
  "ããã¨ãã",
  "ããªããã",
  "ããªãã®",
  "ããªã",
  "ãã­ã¾",
  "ãã­ã",
  "ãã®ãã",
  "ãã®ãµã",
  "ãã¯ã",
  "ãã¯ããã",
  "ãã¯ã¤",
  "ãã¯ãã",
  "ãã¯ã",
  "ãã²ãã",
  "ããµã",
  "ãããµãã",
  "ãã¸ã",
  "ãã»ã",
  "ãã»ã",
  "ãã¾ã",
  "ãã¾ã",
  "ãã¿ã",
  "ãããã",
  "ããããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããããã",
  "ããããã",
  "ãããã»ã",
  "ãããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã¡ãã",
  "ããã£ãã",
  "ãããã¾",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããããã",
  "ãããã¯ã",
  "ããããã",
  "ããã£ãã",
  "ããã¿",
  "ãããã¯ã",
  "ããããã¯ãã",
  "ããããã",
  "ããããã",
  "ããã£ãã",
  "ããã¨ãã",
  "ãããã¤",
  "ãããã",
  "ããã¸ãã",
  "ããã",
  "ãããã",
  "ãããããã",
  "ãããããã",
  "ããã¡ã",
  "ãããã",
  "ãããã",
  "ããã",
  "ãããª",
  "ãããã",
  "ãããã",
  "ããã",
  "ããã¨ã",
  "ããããµãã",
  "ããããã²ã",
  "ããããã",
  "ããããã¤",
  "ãããã",
  "ããã¨ãã",
  "ããã¾",
  "ããã",
  "ãããªã",
  "ããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããããã",
  "ããã",
  "ãããã",
  "ãã£ãã",
  "ããã£ãã",
  "ããã£ã¨",
  "ãã¦ã",
  "ãã¦ã",
  "ãã­ã",
  "ãã®ã",
  "ãã¯ãã",
  "ãã¯ãããã",
  "ããã²ãã",
  "ãããµãã¬ã",
  "ããµãã",
  "ããµã",
  "ãã¸ãã¦",
  "ãã¸ãã",
  "ããã»ã",
  "ãã»ãã",
  "ãã¾ã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã¡ããã",
  "ããã£ã¨",
  "ããã",
  "ããããã",
  "ããã»ãã",
  "ãããµãã",
  "ãããã¤",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ããã«ã",
  "ããã",
  "ããã",
  "ãããããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ãã£ãã",
  "ãã£ããã",
  "ããã£ã",
  "ãã£ãã",
  "ãã£ãã¤",
  "ãã£ãããã¾",
  "ãã¤ããã",
  "ãã¤ããã",
  "ãã¤ã¦ãã",
  "ãã£ã¯ãã",
  "ãã¤ã²ã",
  "ãã¤ãµãã",
  "ãã¤ãã",
  "ãã¤ãã¤",
  "ããªã",
  "ãã®ã²ã",
  "ãã¯ã¯ã",
  "ãã²ãã",
  "ãã»ãã­",
  "ãã¾ã",
  "ãã¾ã",
  "ããã",
  "ãããã",
  "ãããµ",
  "ããããã",
  "ããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã¡ãã",
  "ããã¦ã",
  "ããã¨ã",
  "ããã¬ã",
  "ããã­ã",
  "ããã¯ãã",
  "ããããµã",
  "ãããã»ãã",
  "ããã",
  "ããããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã¨ããã",
  "ããã­",
  "ãããããããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããªã",
  "ããã²ã",
  "ãããã",
  "ããã",
  "ãããã®",
  "ããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããª",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã¦ã",
  "ãã¤ã",
  "ãã¤ãã",
  "ãã£ãã",
  "ãã¤ãããã",
  "ãã£ãã¤",
  "ãã£ãã",
  "ãã£ãã",
  "ãã£ã¨",
  "ãã¨ããã",
  "ãã¨ã¤ãã",
  "ããªãã",
  "ããªã",
  "ããµã»ã",
  "ãã»ãã",
  "ãã»ãã",
  "ãã¾ã¤",
  "ãã¾ã",
  "ããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããããã",
  "ããã¾ã",
  "ããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã¤",
  "ããããã",
  "ããã¡ãã",
  "ãããã²ã",
  "ããããµãã",
  "ããã¿ã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ããããããããµã",
  "ããããã",
  "ãããã¤",
  "ãããã",
  "ããããã",
  "ããã¡ãã",
  "ããã¦ã",
  "ãããã¨ããã",
  "ãããªã",
  "ããã­ã¤",
  "ããã®ã",
  "ããã¯ã",
  "ãããã²ãã",
  "ãããµã",
  "ããã¸ã",
  "ããã»",
  "ããã¾ã¤ã¯ããª",
  "ããã¿ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã­",
  "ããã²ã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ãããããã",
  "ãããã",
  "ãããããã",
  "ããããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ããã¿",
  "ãã¡ã¯ããª",
  "ããã£ãã",
  "ããã£ããã",
  "ããã£ã",
  "ããã£ããã¤",
  "ããã£ãã",
  "ãã¦ã",
  "ãã¨ãã",
  "ããªã¯ãã",
  "ãã«ã",
  "ãã¬ã",
  "ãã®ãã¿",
  "ãã¯ã¤",
  "ããµãã",
  "ãã¸ãã",
  "ãã»ãã",
  "ãã¾ãã",
  "ãã¾ã",
  "ãããã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã¤",
  "ãããã",
  "ããã",
  "ããã",
  "ãããã»ãããã",
  "ãããã",
  "ããã",
  "ããã¨",
  "ããã",
  "ãããã¨",
  "ããã£ã¨",
  "ããããã",
  "ããããã¤",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããããã²ã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã¡",
  "ããã¦ã",
  "ããã¨ã",
  "ããããª",
  "ããã«ã",
  "ãããã­ã¤",
  "ããã®ã",
  "ããã²ãã",
  "ãããã»ãã",
  "ããã¾ã¤",
  "ãããã",
  "ããããã¤",
  "ãããã",
  "ãããã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ããã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ããã",
  "ã¡ãã",
  "ã¡ãããã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãããã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ãã",
  "ã¡ã¡ãã",
  "ã¡ã¤ããã",
  "ã¡ã¦ã",
  "ã¡ã¦ã",
  "ã¡ã¬ã",
  "ã¡ã¬ã",
  "ã¡ã®ã",
  "ã¡ã²ãã",
  "ã¡ã¸ããã",
  "ã¡ã»ã",
  "ã¡ã¾ã",
  "ã¡ã¿ã¤",
  "ã¡ã¿ã¨ãã",
  "ã¡ããã¨ã",
  "ã¡ããããªã¸ã",
  "ã¡ããã",
  "ã¡ãããã",
  "ã¡ããã",
  "ã¡ããããã",
  "ã¡ãã",
  "ã¡ãã¿",
  "ã¡ãããã¿",
  "ã¡ããã",
  "ã¡ãã¨ã",
  "ã¡ãã",
  "ã¡ããã",
  "ã¡ããã",
  "ã¤ãã",
  "ã¤ããã¡",
  "ã¤ãã",
  "ã¤ããããã",
  "ã¤ãã¯ã",
  "ã¤ãã",
  "ã¤ãã",
  "ã¤ããã",
  "ã¤ãã­",
  "ã¤ãã",
  "ã¤ãã­",
  "ã¤ãã",
  "ã¤ããã",
  "ã¤ããã",
  "ã¤ã¤ãã",
  "ã¤ã¤ãã",
  "ã¤ã¤ã",
  "ã¤ã¨ãã",
  "ã¤ãªããã",
  "ã¤ãªã¿",
  "ã¤ã­ã¤ãã­",
  "ã¤ã®ã",
  "ã¤ãµãã",
  "ã¤ã¾ããªã",
  "ã¤ã¾ã",
  "ã¤ã¿ã",
  "ã¤ããã",
  "ã¤ãã",
  "ã¤ãã",
  "ã¤ãã",
  "ã¤ãã»ã",
  "ã¤ãã¿ã",
  "ã¤ããã®",
  "ã¤ãã",
  "ã¦ãã",
  "ã¦ãã¦",
  "ã¦ãã¿",
  "ã¦ããã",
  "ã¦ãã",
  "ã¦ãã",
  "ã¦ããã",
  "ã¦ããã",
  "ã¦ããã¤",
  "ã¦ãã",
  "ã¦ããã",
  "ã¦ããã",
  "ã¦ãã¨ã",
  "ã¦ãã­ã",
  "ã¦ãã²ãã",
  "ã¦ãã¸ã",
  "ã¦ãã»ãã",
  "ã¦ãã¡",
  "ã¦ããã",
  "ã¦ãã¨ã",
  "ã¦ãã²ã",
  "ã¦ããã»ãã",
  "ã¦ããããã",
  "ã¦ããã",
  "ã¦ãã",
  "ã¦ãã",
  "ã¦ã¡ããã",
  "ã¦ã¡ãã",
  "ã¦ã¤ããã",
  "ã¦ã¤ã¤ãã",
  "ã¦ãã£ã¯ã",
  "ã¦ã¤ã»ãã",
  "ã¦ã¤ã",
  "ã¦ãã¬ãã",
  "ã¦ã¬ã",
  "ã¦ã¬ããã",
  "ã¦ã®ã²ã",
  "ã¦ã¯ã",
  "ã¦ãµããã",
  "ã¦ãµãã",
  "ã¦ã»ã¨ãã",
  "ã¦ã»ã",
  "ã¦ã¾ã",
  "ã¦ã¾ãããã",
  "ã¦ã¿ããã",
  "ã¦ã¿ããã",
  "ã¦ãã",
  "ã¦ãã²ã",
  "ã¦ãã",
  "ã¦ããã",
  "ã¦ãããã¤",
  "ã¦ããã",
  "ã¦ããã",
  "ã¦ãã",
  "ã¦ããã",
  "ã¦ããã",
  "ã¦ãããã",
  "ã¦ããã",
  "ã¦ãã",
  "ã¦ããã",
  "ã¦ããã¡",
  "ã¦ãã¦ã",
  "ã¦ãã¨ã",
  "ã¦ããªã",
  "ã¦ããµãã",
  "ã¦ãã»ããããã",
  "ã¦ããã¤",
  "ã¦ããããã",
  "ã¦ããããã",
  "ã¦ããã",
  "ã¨ããã",
  "ã¨ãã",
  "ã¨ãããã",
  "ã¨ãããã",
  "ã¨ãããã",
  "ã¨ãã",
  "ã¨ãããã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ããã",
  "ã¨ãã¨ãã",
  "ã¨ãã",
  "ã¨ãããã",
  "ã¨ãã¦ã",
  "ã¨ãã«",
  "ã¨ãã¸ãã¤",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ãããã",
  "ã¨ãã",
  "ã¨ãã",
  "ã¨ã¡ãã",
  "ã¨ã£ããã",
  "ã¨ã£ãã",
  "ã¨ã¤ããã",
  "ã¨ã¤ã«ãã",
  "ã¨ã¨ããã",
  "ã¨ã¨ã®ãã",
  "ã¨ãªã",
  "ã¨ãªãã",
  "ã¨ãªã",
  "ã¨ã®ãã¾",
  "ã¨ã¯ãã",
  "ã¨ããµãããã",
  "ã¨ã»ã",
  "ã¨ã¾ã",
  "ã¨ãã",
  "ã¨ãããã¡",
  "ã¨ãã",
  "ã¨ãããã²ã",
  "ã¨ããã",
  "ã¨ããã¤",
  "ã¨ãããµãã",
  "ãªããã",
  "ãªããã",
  "ãªããã",
  "ãªãã",
  "ãªããã",
  "ãªããã",
  "ãªãã",
  "ãªããã",
  "ãªãã",
  "ãªããã",
  "ãªããã¨ã",
  "ãªãã",
  "ãªãã¦ããã",
  "ãªã£ã¨ã",
  "ãªã¤ããã¿",
  "ãªãªãã",
  "ãªã«ããã¨",
  "ãªã«ãã®",
  "ãªã«ã",
  "ãªã®ã",
  "ãªãµãã",
  "ãªã¾ãã",
  "ãªã¾ã",
  "ãªã¾ã¿",
  "ãªã¿ãã",
  "ãªããã",
  "ãªãã",
  "ãªãã",
  "ãªãã",
  "ãªãã²ã",
  "ãªããµã",
  "ãªãã",
  "ãªãã¨ã²ã",
  "ãªãã¯ãã",
  "ã«ãã",
  "ã«ãããã",
  "ã«ãã",
  "ã«ãã",
  "ã«ãã",
  "ã«ããã¦",
  "ã«ãã²ã",
  "ã«ããã¿",
  "ã«ãã¾ã",
  "ã«ããã",
  "ã«ãããããã",
  "ã«ãã",
  "ã«ããã®",
  "ã«ã¡ãããã",
  "ã«ã¡ããã²ã",
  "ã«ã£ã",
  "ã«ã£ã",
  "ã«ã£ãã",
  "ã«ã£ãã",
  "ã«ã£ãã",
  "ã«ã£ããã",
  "ã«ã£ãã",
  "ã«ã£ãã",
  "ã«ã£ã¦ã",
  "ã«ãªã",
  "ã«ã»ã",
  "ã«ã¾ã",
  "ã«ãã¤",
  "ã«ãã",
  "ã«ãããã",
  "ã«ãããã",
  "ã«ãã¨ã",
  "ã«ãã",
  "ã«ãã",
  "ã«ãã",
  "ã«ãããã",
  "ã«ããã",
  "ã«ãããã",
  "ã«ããã",
  "ã«ããã",
  "ã«ãã¡",
  "ã«ãã¦ã",
  "ã«ãã«ã",
  "ã«ããµã",
  "ã«ãã¾ã",
  "ã«ãã",
  "ã«ããã",
  "ã«ããã",
  "ã¬ãããã",
  "ã¬ãã",
  "ã¬ãããã¨ã",
  "ã¬ããã",
  "ã¬ããã",
  "ã¬ãã",
  "ã¬ã¾ãã²ã",
  "ã¬ãã",
  "ã¬ãã",
  "ã¬ãã¡ãã",
  "ã­ããã",
  "ã­ãã",
  "ã­ãã",
  "ã­ãã",
  "ã­ããã",
  "ã­ããã",
  "ã­ãã",
  "ã­ããã",
  "ã­ãã",
  "ã­ããã",
  "ã­ãããã",
  "ã­ãã¸ãã",
  "ã­ããã",
  "ã­ã¤ã",
  "ã­ã£ãã",
  "ã­ã¤ããã",
  "ã­ã£ããããã",
  "ã­ãµããã",
  "ã­ãµãã",
  "ã­ã»ãã",
  "ã­ã»ãã¯ã»ã",
  "ã­ã¾ã",
  "ã­ã¾ãã",
  "ã­ã¿ã¿",
  "ã­ãã",
  "ã­ããã",
  "ã­ãã¨",
  "ã­ãã",
  "ã­ããã",
  "ã­ããã",
  "ã­ããã",
  "ã­ããã",
  "ã­ããã",
  "ã­ããã",
  "ã­ããã",
  "ã­ãã",
  "ã­ãã¡ãã",
  "ã­ãã¨ã",
  "ã­ãã²ã",
  "ã­ããµãã¤",
  "ã­ãã¾ã¤",
  "ã­ãããã",
  "ã­ããã",
  "ã®ããã",
  "ã®ãã¤ãã¾",
  "ã®ããã",
  "ã®ããªã¿",
  "ã®ãããã",
  "ã®ãã",
  "ã®ãã",
  "ã®ãã",
  "ã®ããã",
  "ã®ããã",
  "ã®ãã¾ã",
  "ã®ã¡ã»ã¨ã",
  "ã®ã£ã",
  "ã®ã¯ãã",
  "ã®ã¯ã",
  "ã®ã¸ãã",
  "ã®ã»ãã",
  "ã®ã¿ãã®",
  "ã®ãã¾",
  "ã®ããã¬",
  "ã®ãã­ã",
  "ã®ããã®",
  "ã®ããã",
  "ã®ãã",
  "ã®ãã",
  "ã¯ããã",
  "ã¯ãã",
  "ã¯ãããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ãã¡",
  "ã¯ããã¯ãã",
  "ã¯ããã¤",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ããã",
  "ã¯ãã",
  "ã¯ããã",
  "ã¯ãã",
  "ã¯ããµã",
  "ã¯ãã¿",
  "ã¯ãã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ãããã",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ã¡ã¿ã¤",
  "ã¯ã¤ãã",
  "ã¯ã£ãã",
  "ã¯ã¤ãã",
  "ã¯ã£ãã",
  "ã¯ã£ãã¤",
  "ã¯ã£ãã",
  "ã¯ã£ãã",
  "ã¯ã£ãã",
  "ã¯ã£ãã",
  "ã¯ã£ãã¤",
  "ã¯ã£ã¡ãã",
  "ã¯ã£ã¦ã",
  "ã¯ã£ã²ããã",
  "ã¯ã£ã»ãã",
  "ã¯ãªã",
  "ã¯ãªã²ã",
  "ã¯ã«ãã",
  "ã¯ãµããã",
  "ã¯ã¿ããã",
  "ã¯ããã",
  "ã¯ãã¤",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ãããã",
  "ã¯ãã",
  "ã¯ãã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ãããã",
  "ã¯ããããã¿",
  "ã¯ãã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ãããã",
  "ã¯ããã¡",
  "ã¯ããã¤",
  "ã¯ãã¦ã",
  "ã¯ãã¨ã",
  "ã¯ãã®ã",
  "ã¯ãã¯ã",
  "ã¯ããµãã",
  "ã¯ãã¸ãã",
  "ã¯ãã»ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã¯ããã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã¤",
  "ã²ããã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãããµãã",
  "ã²ãã",
  "ã²ããããã¤ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ããã",
  "ã²ããã",
  "ã²ãã",
  "ã²ã¤ãã",
  "ã²ã£ãã",
  "ã²ã£ã",
  "ã²ã¤ãããã²ã",
  "ã²ã£ã",
  "ã²ã¤ããã",
  "ã²ãã£ãã",
  "ã²ãã£ã¡ã",
  "ã²ã¤ãã",
  "ã²ã¦ã",
  "ã²ã¨ããã¿",
  "ã²ãªã¾ã¤ã",
  "ã²ãªã",
  "ã²ã­ã",
  "ã²ã¯ã",
  "ã²ã²ãã",
  "ã²ã²ãã",
  "ã²ã»ã",
  "ã²ã¾ãã",
  "ã²ã¾ã",
  "ã²ã¿ã¤",
  "ã²ãã",
  "ã²ãããã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãããã",
  "ã²ããããª",
  "ã²ãã",
  "ã²ãã¤",
  "ã²ããã",
  "ã²ãã¾",
  "ã²ãããã¿",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ãã",
  "ã²ããã",
  "ã²ããã",
  "ã²ããã¤",
  "ã²ããã",
  "ã²ããã",
  "ã²ããã",
  "ã²ããã¡",
  "ã²ãã¯ãã",
  "ã²ããã»ãã",
  "ãµãã",
  "ãµããã¡",
  "ãµããã",
  "ãµããã",
  "ãµããããã",
  "ãµãã¨ã",
  "ãµããµ",
  "ãµãã",
  "ãµãã",
  "ãµãã",
  "ãµãã",
  "ãµãããã¤",
  "ãµããµããã",
  "ãµãã",
  "ãµãã",
  "ãµããã",
  "ãµããã¿",
  "ãµãã¾",
  "ãµãã",
  "ãµããã",
  "ãµãã",
  "ãµããã«ã",
  "ãµãã",
  "ãµã¡ãã",
  "ãµã¤ã",
  "ãµã¤ã",
  "ãµã£ãã¤",
  "ãµã£ã",
  "ãµã£ãã",
  "ãµãã¨ãã",
  "ãµã¨ã",
  "ãµã¨ã",
  "ãµã®ã",
  "ãµã¯ã",
  "ãµã²ãã",
  "ãµã¸ã",
  "ãµã¾ã",
  "ãµã¿ã",
  "ãµãã¤",
  "ãµãã",
  "ãµãã",
  "ãµãã",
  "ãµãã",
  "ãµãã",
  "ãµããã",
  "ãµããããã",
  "ãµãããã",
  "ãµããã¤",
  "ãµãããã",
  "ãµããã",
  "ãµããã»ãã",
  "ã¸ããã",
  "ã¸ããã",
  "ã¸ãããã",
  "ã¸ãã",
  "ã¸ãããã",
  "ã¸ããã",
  "ã¸ãã",
  "ã¸ããã",
  "ã¸ããã¤",
  "ã¸ãã",
  "ã¸ããã",
  "ã¸ãã¦ã",
  "ã¸ãã­ã¤",
  "ã¸ãã",
  "ã¸ããã",
  "ã¸ãã",
  "ã¸ãã«ãã",
  "ã¸ãã«ããããã",
  "ã¸ãã",
  "ã¸ããã",
  "ã¸ããããã",
  "ã¸ããããã",
  "ã¸ããã",
  "ã¸ããã",
  "ã¸ããã",
  "ã»ãã",
  "ã»ãã",
  "ã»ããããã",
  "ã»ããã",
  "ã»ããã",
  "ã»ãã»ã",
  "ã»ããã",
  "ã»ããã¤",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã",
  "ã»ããã",
  "ã»ããã",
  "ã»ãã",
  "ã»ãã¤",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã¤",
  "ã»ãã",
  "ã»ããã",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã¦",
  "ã»ãã",
  "ã»ãã¡ãµããã",
  "ã»ã£ããã",
  "ã»ã£ã",
  "ã»ã£ãã",
  "ã»ã¨ãã¨ã",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã",
  "ã»ãã",
  "ã»ããã¤",
  "ã»ããã",
  "ã¾ãã«ã¡",
  "ã¾ãã",
  "ã¾ããã",
  "ã¾ããã",
  "ã¾ãã",
  "ã¾ãã¨",
  "ã¾ãã¤",
  "ã¾ããã",
  "ã¾ãã",
  "ã¾ããã",
  "ã¾ã¤ã",
  "ã¾ã¨ã",
  "ã¾ãªãµã",
  "ã¾ã¬ã",
  "ã¾ã­ã",
  "ã¾ã»ã",
  "ã¾ãã",
  "ã¾ããã",
  "ã¾ãã",
  "ã¾ããã",
  "ã¾ãã",
  "ã¾ãã",
  "ã¾ãã",
  "ã¾ããã",
  "ã¾ããã¤",
  "ã¾ãããã",
  "ã¾ããªã",
  "ã¿ãã",
  "ã¿ãã¡",
  "ã¿ãã",
  "ã¿ããã",
  "ã¿ãã",
  "ã¿ãã",
  "ã¿ãã",
  "ã¿ãã",
  "ã¿ãããã",
  "ã¿ãã",
  "ã¿ããã",
  "ã¿ãã",
  "ã¿ã£ã",
  "ã¿ã¤ãã",
  "ã¿ã¤ãã",
  "ã¿ã¦ã",
  "ã¿ã¨ãã",
  "ã¿ãªã¨",
  "ã¿ãªã¿ããã",
  "ã¿ã­ãã",
  "ã¿ã®ã",
  "ã¿ã®ããã",
  "ã¿ã»ã",
  "ã¿ãã¨",
  "ã¿ããã",
  "ã¿ãã",
  "ã¿ããã",
  "ã¿ãã",
  "ã¿ãã",
  "ã¿ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã¡ã",
  "ããã",
  "ãããã",
  "ããã»ãã",
  "ãããã¤ã",
  "ããã¯ã",
  "ããããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããµã",
  "ããã",
  "ããã",
  "ããã",
  "ãã¡ãã",
  "ããªãã",
  "ãã®ã",
  "ããã¿",
  "ããã",
  "ãããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ãããµãã¤",
  "ãããã",
  "ãããã",
  "ãããã¾ãã",
  "ãããã",
  "ããã",
  "ãããããã",
  "ãããã¤",
  "ãã¾ã",
  "ããã",
  "ãããã",
  "ãããã",
  "ããã¨ãã",
  "ããããããã",
  "ããã¨ãããã",
  "ããã",
  "ããã",
  "ããã¦ã",
  "ããããã²ã",
  "ãã¡ãã",
  "ãã¨ãã",
  "ããã",
  "ããã",
  "ããããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããããã",
  "ããã¿",
  "ããã",
  "ããã",
  "ããã",
  "ãã¡ã",
  "ãã£ã¨",
  "ãã£ã¯ãã",
  "ããµãã",
  "ããã",
  "ããããã",
  "ããã",
  "ããããã",
  "ããã",
  "ããã²ããããã",
  "ããã¸ã",
  "ãããã",
  "ããã¤",
  "ãããã¤",
  "ããã",
  "ããã",
  "ããã",
  "ãã¡ãã",
  "ãã¦ãã",
  "ãã«ãã",
  "ãã²ãã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ããã",
  "ããã¡ãã",
  "ãããã",
  "ããã",
  "ããã",
  "ãããã",
  "ããã»ãã",
  "ããã",
  "ããããã",
  "ããã",
  "ãããã",
  "ããã",
  "ããã",
  "ãã£ã",
  "ãã¦ã",
  "ãã¨ããããã",
  "ãã­ã¤",
  "ããã",
  "ããã",
  "ããããµã",
  "ãããã",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã¤",
  "ãããã",
  "ãããã¯ãã",
  "ããã",
  "ãããã",
  "ããã",
  "ãã£ã",
  "ããã¤",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã¤",
  "ããããã",
  "ããã¤",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ããã",
  "ãã¦ã",
  "ãã­ã",
  "ããã",
  "ãããããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã¡ã",
  "ãããã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããã¯ãã",
  "ãããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããããã",
  "ããã¨ã",
  "ããã»ãã",
  "ããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ãããã",
  "ããããã",
  "ããããã",
  "ãããã",
  "ããã",
  "ãããã",
  "ããããã",
  "ãããã",
  "ãããã",
  "ããã¤",
  "ããããã",
  "ãããã¤",
  "ããã",
  "ãã¦ã",
  "ããã",
  "ããã¤",
  "ãããã",
  "ããã¯ã",
  "ãããµãã",
  "ããã",
  "ããã",
  "ããã",
  "ãããã¾",
  "ãããã",
  "ããã¤",
  "ãããã¾ã",
  "ããããã®",
  "ããã",
  "ããã"
]

},{}],92:[function(require,module,exports){
module.exports=[
  "aÌbaco",
  "abdomen",
  "abeja",
  "abierto",
  "abogado",
  "abono",
  "aborto",
  "abrazo",
  "abrir",
  "abuelo",
  "abuso",
  "acabar",
  "academia",
  "acceso",
  "accioÌn",
  "aceite",
  "acelga",
  "acento",
  "aceptar",
  "aÌcido",
  "aclarar",
  "acneÌ",
  "acoger",
  "acoso",
  "activo",
  "acto",
  "actriz",
  "actuar",
  "acudir",
  "acuerdo",
  "acusar",
  "adicto",
  "admitir",
  "adoptar",
  "adorno",
  "aduana",
  "adulto",
  "aeÌreo",
  "afectar",
  "aficioÌn",
  "afinar",
  "afirmar",
  "aÌgil",
  "agitar",
  "agoniÌa",
  "agosto",
  "agotar",
  "agregar",
  "agrio",
  "agua",
  "agudo",
  "aÌguila",
  "aguja",
  "ahogo",
  "ahorro",
  "aire",
  "aislar",
  "ajedrez",
  "ajeno",
  "ajuste",
  "alacraÌn",
  "alambre",
  "alarma",
  "alba",
  "aÌlbum",
  "alcalde",
  "aldea",
  "alegre",
  "alejar",
  "alerta",
  "aleta",
  "alfiler",
  "alga",
  "algodoÌn",
  "aliado",
  "aliento",
  "alivio",
  "alma",
  "almeja",
  "almiÌbar",
  "altar",
  "alteza",
  "altivo",
  "alto",
  "altura",
  "alumno",
  "alzar",
  "amable",
  "amante",
  "amapola",
  "amargo",
  "amasar",
  "aÌmbar",
  "aÌmbito",
  "ameno",
  "amigo",
  "amistad",
  "amor",
  "amparo",
  "amplio",
  "ancho",
  "anciano",
  "ancla",
  "andar",
  "andeÌn",
  "anemia",
  "aÌngulo",
  "anillo",
  "aÌnimo",
  "aniÌs",
  "anotar",
  "antena",
  "antiguo",
  "antojo",
  "anual",
  "anular",
  "anuncio",
  "anÌadir",
  "anÌejo",
  "anÌo",
  "apagar",
  "aparato",
  "apetito",
  "apio",
  "aplicar",
  "apodo",
  "aporte",
  "apoyo",
  "aprender",
  "aprobar",
  "apuesta",
  "apuro",
  "arado",
  "aranÌa",
  "arar",
  "aÌrbitro",
  "aÌrbol",
  "arbusto",
  "archivo",
  "arco",
  "arder",
  "ardilla",
  "arduo",
  "aÌrea",
  "aÌrido",
  "aries",
  "armoniÌa",
  "arneÌs",
  "aroma",
  "arpa",
  "arpoÌn",
  "arreglo",
  "arroz",
  "arruga",
  "arte",
  "artista",
  "asa",
  "asado",
  "asalto",
  "ascenso",
  "asegurar",
  "aseo",
  "asesor",
  "asiento",
  "asilo",
  "asistir",
  "asno",
  "asombro",
  "aÌspero",
  "astilla",
  "astro",
  "astuto",
  "asumir",
  "asunto",
  "atajo",
  "ataque",
  "atar",
  "atento",
  "ateo",
  "aÌtico",
  "atleta",
  "aÌtomo",
  "atraer",
  "atroz",
  "atuÌn",
  "audaz",
  "audio",
  "auge",
  "aula",
  "aumento",
  "ausente",
  "autor",
  "aval",
  "avance",
  "avaro",
  "ave",
  "avellana",
  "avena",
  "avestruz",
  "avioÌn",
  "aviso",
  "ayer",
  "ayuda",
  "ayuno",
  "azafraÌn",
  "azar",
  "azote",
  "azuÌcar",
  "azufre",
  "azul",
  "baba",
  "babor",
  "bache",
  "bahiÌa",
  "baile",
  "bajar",
  "balanza",
  "balcoÌn",
  "balde",
  "bambuÌ",
  "banco",
  "banda",
  "banÌo",
  "barba",
  "barco",
  "barniz",
  "barro",
  "baÌscula",
  "bastoÌn",
  "basura",
  "batalla",
  "bateriÌa",
  "batir",
  "batuta",
  "bauÌl",
  "bazar",
  "bebeÌ",
  "bebida",
  "bello",
  "besar",
  "beso",
  "bestia",
  "bicho",
  "bien",
  "bingo",
  "blanco",
  "bloque",
  "blusa",
  "boa",
  "bobina",
  "bobo",
  "boca",
  "bocina",
  "boda",
  "bodega",
  "boina",
  "bola",
  "bolero",
  "bolsa",
  "bomba",
  "bondad",
  "bonito",
  "bono",
  "bonsaÌi",
  "borde",
  "borrar",
  "bosque",
  "bote",
  "botiÌn",
  "boÌveda",
  "bozal",
  "bravo",
  "brazo",
  "brecha",
  "breve",
  "brillo",
  "brinco",
  "brisa",
  "broca",
  "broma",
  "bronce",
  "brote",
  "bruja",
  "brusco",
  "bruto",
  "buceo",
  "bucle",
  "bueno",
  "buey",
  "bufanda",
  "bufoÌn",
  "buÌho",
  "buitre",
  "bulto",
  "burbuja",
  "burla",
  "burro",
  "buscar",
  "butaca",
  "buzoÌn",
  "caballo",
  "cabeza",
  "cabina",
  "cabra",
  "cacao",
  "cadaÌver",
  "cadena",
  "caer",
  "cafeÌ",
  "caiÌda",
  "caimaÌn",
  "caja",
  "cajoÌn",
  "cal",
  "calamar",
  "calcio",
  "caldo",
  "calidad",
  "calle",
  "calma",
  "calor",
  "calvo",
  "cama",
  "cambio",
  "camello",
  "camino",
  "campo",
  "caÌncer",
  "candil",
  "canela",
  "canguro",
  "canica",
  "canto",
  "canÌa",
  "canÌoÌn",
  "caoba",
  "caos",
  "capaz",
  "capitaÌn",
  "capote",
  "captar",
  "capucha",
  "cara",
  "carboÌn",
  "caÌrcel",
  "careta",
  "carga",
  "carinÌo",
  "carne",
  "carpeta",
  "carro",
  "carta",
  "casa",
  "casco",
  "casero",
  "caspa",
  "castor",
  "catorce",
  "catre",
  "caudal",
  "causa",
  "cazo",
  "cebolla",
  "ceder",
  "cedro",
  "celda",
  "ceÌlebre",
  "celoso",
  "ceÌlula",
  "cemento",
  "ceniza",
  "centro",
  "cerca",
  "cerdo",
  "cereza",
  "cero",
  "cerrar",
  "certeza",
  "ceÌsped",
  "cetro",
  "chacal",
  "chaleco",
  "champuÌ",
  "chancla",
  "chapa",
  "charla",
  "chico",
  "chiste",
  "chivo",
  "choque",
  "choza",
  "chuleta",
  "chupar",
  "cicloÌn",
  "ciego",
  "cielo",
  "cien",
  "cierto",
  "cifra",
  "cigarro",
  "cima",
  "cinco",
  "cine",
  "cinta",
  "cipreÌs",
  "circo",
  "ciruela",
  "cisne",
  "cita",
  "ciudad",
  "clamor",
  "clan",
  "claro",
  "clase",
  "clave",
  "cliente",
  "clima",
  "cliÌnica",
  "cobre",
  "coccioÌn",
  "cochino",
  "cocina",
  "coco",
  "coÌdigo",
  "codo",
  "cofre",
  "coger",
  "cohete",
  "cojiÌn",
  "cojo",
  "cola",
  "colcha",
  "colegio",
  "colgar",
  "colina",
  "collar",
  "colmo",
  "columna",
  "combate",
  "comer",
  "comida",
  "coÌmodo",
  "compra",
  "conde",
  "conejo",
  "conga",
  "conocer",
  "consejo",
  "contar",
  "copa",
  "copia",
  "corazoÌn",
  "corbata",
  "corcho",
  "cordoÌn",
  "corona",
  "correr",
  "coser",
  "cosmos",
  "costa",
  "craÌneo",
  "craÌter",
  "crear",
  "crecer",
  "creiÌdo",
  "crema",
  "criÌa",
  "crimen",
  "cripta",
  "crisis",
  "cromo",
  "croÌnica",
  "croqueta",
  "crudo",
  "cruz",
  "cuadro",
  "cuarto",
  "cuatro",
  "cubo",
  "cubrir",
  "cuchara",
  "cuello",
  "cuento",
  "cuerda",
  "cuesta",
  "cueva",
  "cuidar",
  "culebra",
  "culpa",
  "culto",
  "cumbre",
  "cumplir",
  "cuna",
  "cuneta",
  "cuota",
  "cupoÌn",
  "cuÌpula",
  "curar",
  "curioso",
  "curso",
  "curva",
  "cutis",
  "dama",
  "danza",
  "dar",
  "dardo",
  "daÌtil",
  "deber",
  "deÌbil",
  "deÌcada",
  "decir",
  "dedo",
  "defensa",
  "definir",
  "dejar",
  "delfiÌn",
  "delgado",
  "delito",
  "demora",
  "denso",
  "dental",
  "deporte",
  "derecho",
  "derrota",
  "desayuno",
  "deseo",
  "desfile",
  "desnudo",
  "destino",
  "desviÌo",
  "detalle",
  "detener",
  "deuda",
  "diÌa",
  "diablo",
  "diadema",
  "diamante",
  "diana",
  "diario",
  "dibujo",
  "dictar",
  "diente",
  "dieta",
  "diez",
  "difiÌcil",
  "digno",
  "dilema",
  "diluir",
  "dinero",
  "directo",
  "dirigir",
  "disco",
  "disenÌo",
  "disfraz",
  "diva",
  "divino",
  "doble",
  "doce",
  "dolor",
  "domingo",
  "don",
  "donar",
  "dorado",
  "dormir",
  "dorso",
  "dos",
  "dosis",
  "dragoÌn",
  "droga",
  "ducha",
  "duda",
  "duelo",
  "duenÌo",
  "dulce",
  "duÌo",
  "duque",
  "durar",
  "dureza",
  "duro",
  "eÌbano",
  "ebrio",
  "echar",
  "eco",
  "ecuador",
  "edad",
  "edicioÌn",
  "edificio",
  "editor",
  "educar",
  "efecto",
  "eficaz",
  "eje",
  "ejemplo",
  "elefante",
  "elegir",
  "elemento",
  "elevar",
  "elipse",
  "eÌlite",
  "elixir",
  "elogio",
  "eludir",
  "embudo",
  "emitir",
  "emocioÌn",
  "empate",
  "empenÌo",
  "empleo",
  "empresa",
  "enano",
  "encargo",
  "enchufe",
  "enciÌa",
  "enemigo",
  "enero",
  "enfado",
  "enfermo",
  "enganÌo",
  "enigma",
  "enlace",
  "enorme",
  "enredo",
  "ensayo",
  "ensenÌar",
  "entero",
  "entrar",
  "envase",
  "enviÌo",
  "eÌpoca",
  "equipo",
  "erizo",
  "escala",
  "escena",
  "escolar",
  "escribir",
  "escudo",
  "esencia",
  "esfera",
  "esfuerzo",
  "espada",
  "espejo",
  "espiÌa",
  "esposa",
  "espuma",
  "esquiÌ",
  "estar",
  "este",
  "estilo",
  "estufa",
  "etapa",
  "eterno",
  "eÌtica",
  "etnia",
  "evadir",
  "evaluar",
  "evento",
  "evitar",
  "exacto",
  "examen",
  "exceso",
  "excusa",
  "exento",
  "exigir",
  "exilio",
  "existir",
  "eÌxito",
  "experto",
  "explicar",
  "exponer",
  "extremo",
  "faÌbrica",
  "faÌbula",
  "fachada",
  "faÌcil",
  "factor",
  "faena",
  "faja",
  "falda",
  "fallo",
  "falso",
  "faltar",
  "fama",
  "familia",
  "famoso",
  "faraoÌn",
  "farmacia",
  "farol",
  "farsa",
  "fase",
  "fatiga",
  "fauna",
  "favor",
  "fax",
  "febrero",
  "fecha",
  "feliz",
  "feo",
  "feria",
  "feroz",
  "feÌrtil",
  "fervor",
  "festiÌn",
  "fiable",
  "fianza",
  "fiar",
  "fibra",
  "ficcioÌn",
  "ficha",
  "fideo",
  "fiebre",
  "fiel",
  "fiera",
  "fiesta",
  "figura",
  "fijar",
  "fijo",
  "fila",
  "filete",
  "filial",
  "filtro",
  "fin",
  "finca",
  "fingir",
  "finito",
  "firma",
  "flaco",
  "flauta",
  "flecha",
  "flor",
  "flota",
  "fluir",
  "flujo",
  "fluÌor",
  "fobia",
  "foca",
  "fogata",
  "fogoÌn",
  "folio",
  "folleto",
  "fondo",
  "forma",
  "forro",
  "fortuna",
  "forzar",
  "fosa",
  "foto",
  "fracaso",
  "fraÌgil",
  "franja",
  "frase",
  "fraude",
  "freiÌr",
  "freno",
  "fresa",
  "friÌo",
  "frito",
  "fruta",
  "fuego",
  "fuente",
  "fuerza",
  "fuga",
  "fumar",
  "funcioÌn",
  "funda",
  "furgoÌn",
  "furia",
  "fusil",
  "fuÌtbol",
  "futuro",
  "gacela",
  "gafas",
  "gaita",
  "gajo",
  "gala",
  "galeriÌa",
  "gallo",
  "gamba",
  "ganar",
  "gancho",
  "ganga",
  "ganso",
  "garaje",
  "garza",
  "gasolina",
  "gastar",
  "gato",
  "gavilaÌn",
  "gemelo",
  "gemir",
  "gen",
  "geÌnero",
  "genio",
  "gente",
  "geranio",
  "gerente",
  "germen",
  "gesto",
  "gigante",
  "gimnasio",
  "girar",
  "giro",
  "glaciar",
  "globo",
  "gloria",
  "gol",
  "golfo",
  "goloso",
  "golpe",
  "goma",
  "gordo",
  "gorila",
  "gorra",
  "gota",
  "goteo",
  "gozar",
  "grada",
  "graÌfico",
  "grano",
  "grasa",
  "gratis",
  "grave",
  "grieta",
  "grillo",
  "gripe",
  "gris",
  "grito",
  "grosor",
  "gruÌa",
  "grueso",
  "grumo",
  "grupo",
  "guante",
  "guapo",
  "guardia",
  "guerra",
  "guiÌa",
  "guinÌo",
  "guion",
  "guiso",
  "guitarra",
  "gusano",
  "gustar",
  "haber",
  "haÌbil",
  "hablar",
  "hacer",
  "hacha",
  "hada",
  "hallar",
  "hamaca",
  "harina",
  "haz",
  "hazanÌa",
  "hebilla",
  "hebra",
  "hecho",
  "helado",
  "helio",
  "hembra",
  "herir",
  "hermano",
  "heÌroe",
  "hervir",
  "hielo",
  "hierro",
  "hiÌgado",
  "higiene",
  "hijo",
  "himno",
  "historia",
  "hocico",
  "hogar",
  "hoguera",
  "hoja",
  "hombre",
  "hongo",
  "honor",
  "honra",
  "hora",
  "hormiga",
  "horno",
  "hostil",
  "hoyo",
  "hueco",
  "huelga",
  "huerta",
  "hueso",
  "huevo",
  "huida",
  "huir",
  "humano",
  "huÌmedo",
  "humilde",
  "humo",
  "hundir",
  "huracaÌn",
  "hurto",
  "icono",
  "ideal",
  "idioma",
  "iÌdolo",
  "iglesia",
  "igluÌ",
  "igual",
  "ilegal",
  "ilusioÌn",
  "imagen",
  "imaÌn",
  "imitar",
  "impar",
  "imperio",
  "imponer",
  "impulso",
  "incapaz",
  "iÌndice",
  "inerte",
  "infiel",
  "informe",
  "ingenio",
  "inicio",
  "inmenso",
  "inmune",
  "innato",
  "insecto",
  "instante",
  "intereÌs",
  "iÌntimo",
  "intuir",
  "inuÌtil",
  "invierno",
  "ira",
  "iris",
  "ironiÌa",
  "isla",
  "islote",
  "jabaliÌ",
  "jaboÌn",
  "jamoÌn",
  "jarabe",
  "jardiÌn",
  "jarra",
  "jaula",
  "jazmiÌn",
  "jefe",
  "jeringa",
  "jinete",
  "jornada",
  "joroba",
  "joven",
  "joya",
  "juerga",
  "jueves",
  "juez",
  "jugador",
  "jugo",
  "juguete",
  "juicio",
  "junco",
  "jungla",
  "junio",
  "juntar",
  "juÌpiter",
  "jurar",
  "justo",
  "juvenil",
  "juzgar",
  "kilo",
  "koala",
  "labio",
  "lacio",
  "lacra",
  "lado",
  "ladroÌn",
  "lagarto",
  "laÌgrima",
  "laguna",
  "laico",
  "lamer",
  "laÌmina",
  "laÌmpara",
  "lana",
  "lancha",
  "langosta",
  "lanza",
  "laÌpiz",
  "largo",
  "larva",
  "laÌstima",
  "lata",
  "laÌtex",
  "latir",
  "laurel",
  "lavar",
  "lazo",
  "leal",
  "leccioÌn",
  "leche",
  "lector",
  "leer",
  "legioÌn",
  "legumbre",
  "lejano",
  "lengua",
  "lento",
  "lenÌa",
  "leoÌn",
  "leopardo",
  "lesioÌn",
  "letal",
  "letra",
  "leve",
  "leyenda",
  "libertad",
  "libro",
  "licor",
  "liÌder",
  "lidiar",
  "lienzo",
  "liga",
  "ligero",
  "lima",
  "liÌmite",
  "limoÌn",
  "limpio",
  "lince",
  "lindo",
  "liÌnea",
  "lingote",
  "lino",
  "linterna",
  "liÌquido",
  "liso",
  "lista",
  "litera",
  "litio",
  "litro",
  "llaga",
  "llama",
  "llanto",
  "llave",
  "llegar",
  "llenar",
  "llevar",
  "llorar",
  "llover",
  "lluvia",
  "lobo",
  "locioÌn",
  "loco",
  "locura",
  "loÌgica",
  "logro",
  "lombriz",
  "lomo",
  "lonja",
  "lote",
  "lucha",
  "lucir",
  "lugar",
  "lujo",
  "luna",
  "lunes",
  "lupa",
  "lustro",
  "luto",
  "luz",
  "maceta",
  "macho",
  "madera",
  "madre",
  "maduro",
  "maestro",
  "mafia",
  "magia",
  "mago",
  "maiÌz",
  "maldad",
  "maleta",
  "malla",
  "malo",
  "mamaÌ",
  "mambo",
  "mamut",
  "manco",
  "mando",
  "manejar",
  "manga",
  "maniquiÌ",
  "manjar",
  "mano",
  "manso",
  "manta",
  "manÌana",
  "mapa",
  "maÌquina",
  "mar",
  "marco",
  "marea",
  "marfil",
  "margen",
  "marido",
  "maÌrmol",
  "marroÌn",
  "martes",
  "marzo",
  "masa",
  "maÌscara",
  "masivo",
  "matar",
  "materia",
  "matiz",
  "matriz",
  "maÌximo",
  "mayor",
  "mazorca",
  "mecha",
  "medalla",
  "medio",
  "meÌdula",
  "mejilla",
  "mejor",
  "melena",
  "meloÌn",
  "memoria",
  "menor",
  "mensaje",
  "mente",
  "menuÌ",
  "mercado",
  "merengue",
  "meÌrito",
  "mes",
  "mesoÌn",
  "meta",
  "meter",
  "meÌtodo",
  "metro",
  "mezcla",
  "miedo",
  "miel",
  "miembro",
  "miga",
  "mil",
  "milagro",
  "militar",
  "milloÌn",
  "mimo",
  "mina",
  "minero",
  "miÌnimo",
  "minuto",
  "miope",
  "mirar",
  "misa",
  "miseria",
  "misil",
  "mismo",
  "mitad",
  "mito",
  "mochila",
  "mocioÌn",
  "moda",
  "modelo",
  "moho",
  "mojar",
  "molde",
  "moler",
  "molino",
  "momento",
  "momia",
  "monarca",
  "moneda",
  "monja",
  "monto",
  "monÌo",
  "morada",
  "morder",
  "moreno",
  "morir",
  "morro",
  "morsa",
  "mortal",
  "mosca",
  "mostrar",
  "motivo",
  "mover",
  "moÌvil",
  "mozo",
  "mucho",
  "mudar",
  "mueble",
  "muela",
  "muerte",
  "muestra",
  "mugre",
  "mujer",
  "mula",
  "muleta",
  "multa",
  "mundo",
  "munÌeca",
  "mural",
  "muro",
  "muÌsculo",
  "museo",
  "musgo",
  "muÌsica",
  "muslo",
  "naÌcar",
  "nacioÌn",
  "nadar",
  "naipe",
  "naranja",
  "nariz",
  "narrar",
  "nasal",
  "natal",
  "nativo",
  "natural",
  "naÌusea",
  "naval",
  "nave",
  "navidad",
  "necio",
  "neÌctar",
  "negar",
  "negocio",
  "negro",
  "neoÌn",
  "nervio",
  "neto",
  "neutro",
  "nevar",
  "nevera",
  "nicho",
  "nido",
  "niebla",
  "nieto",
  "ninÌez",
  "ninÌo",
  "niÌtido",
  "nivel",
  "nobleza",
  "noche",
  "noÌmina",
  "noria",
  "norma",
  "norte",
  "nota",
  "noticia",
  "novato",
  "novela",
  "novio",
  "nube",
  "nuca",
  "nuÌcleo",
  "nudillo",
  "nudo",
  "nuera",
  "nueve",
  "nuez",
  "nulo",
  "nuÌmero",
  "nutria",
  "oasis",
  "obeso",
  "obispo",
  "objeto",
  "obra",
  "obrero",
  "observar",
  "obtener",
  "obvio",
  "oca",
  "ocaso",
  "oceÌano",
  "ochenta",
  "ocho",
  "ocio",
  "ocre",
  "octavo",
  "octubre",
  "oculto",
  "ocupar",
  "ocurrir",
  "odiar",
  "odio",
  "odisea",
  "oeste",
  "ofensa",
  "oferta",
  "oficio",
  "ofrecer",
  "ogro",
  "oiÌdo",
  "oiÌr",
  "ojo",
  "ola",
  "oleada",
  "olfato",
  "olivo",
  "olla",
  "olmo",
  "olor",
  "olvido",
  "ombligo",
  "onda",
  "onza",
  "opaco",
  "opcioÌn",
  "oÌpera",
  "opinar",
  "oponer",
  "optar",
  "oÌptica",
  "opuesto",
  "oracioÌn",
  "orador",
  "oral",
  "oÌrbita",
  "orca",
  "orden",
  "oreja",
  "oÌrgano",
  "orgiÌa",
  "orgullo",
  "oriente",
  "origen",
  "orilla",
  "oro",
  "orquesta",
  "oruga",
  "osadiÌa",
  "oscuro",
  "osezno",
  "oso",
  "ostra",
  "otonÌo",
  "otro",
  "oveja",
  "oÌvulo",
  "oÌxido",
  "oxiÌgeno",
  "oyente",
  "ozono",
  "pacto",
  "padre",
  "paella",
  "paÌgina",
  "pago",
  "paiÌs",
  "paÌjaro",
  "palabra",
  "palco",
  "paleta",
  "paÌlido",
  "palma",
  "paloma",
  "palpar",
  "pan",
  "panal",
  "paÌnico",
  "pantera",
  "panÌuelo",
  "papaÌ",
  "papel",
  "papilla",
  "paquete",
  "parar",
  "parcela",
  "pared",
  "parir",
  "paro",
  "paÌrpado",
  "parque",
  "paÌrrafo",
  "parte",
  "pasar",
  "paseo",
  "pasioÌn",
  "paso",
  "pasta",
  "pata",
  "patio",
  "patria",
  "pausa",
  "pauta",
  "pavo",
  "payaso",
  "peatoÌn",
  "pecado",
  "pecera",
  "pecho",
  "pedal",
  "pedir",
  "pegar",
  "peine",
  "pelar",
  "peldanÌo",
  "pelea",
  "peligro",
  "pellejo",
  "pelo",
  "peluca",
  "pena",
  "pensar",
  "penÌoÌn",
  "peoÌn",
  "peor",
  "pepino",
  "pequenÌo",
  "pera",
  "percha",
  "perder",
  "pereza",
  "perfil",
  "perico",
  "perla",
  "permiso",
  "perro",
  "persona",
  "pesa",
  "pesca",
  "peÌsimo",
  "pestanÌa",
  "peÌtalo",
  "petroÌleo",
  "pez",
  "pezunÌa",
  "picar",
  "pichoÌn",
  "pie",
  "piedra",
  "pierna",
  "pieza",
  "pijama",
  "pilar",
  "piloto",
  "pimienta",
  "pino",
  "pintor",
  "pinza",
  "pinÌa",
  "piojo",
  "pipa",
  "pirata",
  "pisar",
  "piscina",
  "piso",
  "pista",
  "pitoÌn",
  "pizca",
  "placa",
  "plan",
  "plata",
  "playa",
  "plaza",
  "pleito",
  "pleno",
  "plomo",
  "pluma",
  "plural",
  "pobre",
  "poco",
  "poder",
  "podio",
  "poema",
  "poesiÌa",
  "poeta",
  "polen",
  "policiÌa",
  "pollo",
  "polvo",
  "pomada",
  "pomelo",
  "pomo",
  "pompa",
  "poner",
  "porcioÌn",
  "portal",
  "posada",
  "poseer",
  "posible",
  "poste",
  "potencia",
  "potro",
  "pozo",
  "prado",
  "precoz",
  "pregunta",
  "premio",
  "prensa",
  "preso",
  "previo",
  "primo",
  "priÌncipe",
  "prisioÌn",
  "privar",
  "proa",
  "probar",
  "proceso",
  "producto",
  "proeza",
  "profesor",
  "programa",
  "prole",
  "promesa",
  "pronto",
  "propio",
  "proÌximo",
  "prueba",
  "puÌblico",
  "puchero",
  "pudor",
  "pueblo",
  "puerta",
  "puesto",
  "pulga",
  "pulir",
  "pulmoÌn",
  "pulpo",
  "pulso",
  "puma",
  "punto",
  "punÌal",
  "punÌo",
  "pupa",
  "pupila",
  "pureÌ",
  "quedar",
  "queja",
  "quemar",
  "querer",
  "queso",
  "quieto",
  "quiÌmica",
  "quince",
  "quitar",
  "raÌbano",
  "rabia",
  "rabo",
  "racioÌn",
  "radical",
  "raiÌz",
  "rama",
  "rampa",
  "rancho",
  "rango",
  "rapaz",
  "raÌpido",
  "rapto",
  "rasgo",
  "raspa",
  "rato",
  "rayo",
  "raza",
  "razoÌn",
  "reaccioÌn",
  "realidad",
  "rebanÌo",
  "rebote",
  "recaer",
  "receta",
  "rechazo",
  "recoger",
  "recreo",
  "recto",
  "recurso",
  "red",
  "redondo",
  "reducir",
  "reflejo",
  "reforma",
  "refraÌn",
  "refugio",
  "regalo",
  "regir",
  "regla",
  "regreso",
  "reheÌn",
  "reino",
  "reiÌr",
  "reja",
  "relato",
  "relevo",
  "relieve",
  "relleno",
  "reloj",
  "remar",
  "remedio",
  "remo",
  "rencor",
  "rendir",
  "renta",
  "reparto",
  "repetir",
  "reposo",
  "reptil",
  "res",
  "rescate",
  "resina",
  "respeto",
  "resto",
  "resumen",
  "retiro",
  "retorno",
  "retrato",
  "reunir",
  "reveÌs",
  "revista",
  "rey",
  "rezar",
  "rico",
  "riego",
  "rienda",
  "riesgo",
  "rifa",
  "riÌgido",
  "rigor",
  "rincoÌn",
  "rinÌoÌn",
  "riÌo",
  "riqueza",
  "risa",
  "ritmo",
  "rito",
  "rizo",
  "roble",
  "roce",
  "rociar",
  "rodar",
  "rodeo",
  "rodilla",
  "roer",
  "rojizo",
  "rojo",
  "romero",
  "romper",
  "ron",
  "ronco",
  "ronda",
  "ropa",
  "ropero",
  "rosa",
  "rosca",
  "rostro",
  "rotar",
  "rubiÌ",
  "rubor",
  "rudo",
  "rueda",
  "rugir",
  "ruido",
  "ruina",
  "ruleta",
  "rulo",
  "rumbo",
  "rumor",
  "ruptura",
  "ruta",
  "rutina",
  "saÌbado",
  "saber",
  "sabio",
  "sable",
  "sacar",
  "sagaz",
  "sagrado",
  "sala",
  "saldo",
  "salero",
  "salir",
  "salmoÌn",
  "saloÌn",
  "salsa",
  "salto",
  "salud",
  "salvar",
  "samba",
  "sancioÌn",
  "sandiÌa",
  "sanear",
  "sangre",
  "sanidad",
  "sano",
  "santo",
  "sapo",
  "saque",
  "sardina",
  "sarteÌn",
  "sastre",
  "sataÌn",
  "sauna",
  "saxofoÌn",
  "seccioÌn",
  "seco",
  "secreto",
  "secta",
  "sed",
  "seguir",
  "seis",
  "sello",
  "selva",
  "semana",
  "semilla",
  "senda",
  "sensor",
  "senÌal",
  "senÌor",
  "separar",
  "sepia",
  "sequiÌa",
  "ser",
  "serie",
  "sermoÌn",
  "servir",
  "sesenta",
  "sesioÌn",
  "seta",
  "setenta",
  "severo",
  "sexo",
  "sexto",
  "sidra",
  "siesta",
  "siete",
  "siglo",
  "signo",
  "siÌlaba",
  "silbar",
  "silencio",
  "silla",
  "siÌmbolo",
  "simio",
  "sirena",
  "sistema",
  "sitio",
  "situar",
  "sobre",
  "socio",
  "sodio",
  "sol",
  "solapa",
  "soldado",
  "soledad",
  "soÌlido",
  "soltar",
  "solucioÌn",
  "sombra",
  "sondeo",
  "sonido",
  "sonoro",
  "sonrisa",
  "sopa",
  "soplar",
  "soporte",
  "sordo",
  "sorpresa",
  "sorteo",
  "sosteÌn",
  "soÌtano",
  "suave",
  "subir",
  "suceso",
  "sudor",
  "suegra",
  "suelo",
  "suenÌo",
  "suerte",
  "sufrir",
  "sujeto",
  "sultaÌn",
  "sumar",
  "superar",
  "suplir",
  "suponer",
  "supremo",
  "sur",
  "surco",
  "surenÌo",
  "surgir",
  "susto",
  "sutil",
  "tabaco",
  "tabique",
  "tabla",
  "tabuÌ",
  "taco",
  "tacto",
  "tajo",
  "talar",
  "talco",
  "talento",
  "talla",
  "taloÌn",
  "tamanÌo",
  "tambor",
  "tango",
  "tanque",
  "tapa",
  "tapete",
  "tapia",
  "tapoÌn",
  "taquilla",
  "tarde",
  "tarea",
  "tarifa",
  "tarjeta",
  "tarot",
  "tarro",
  "tarta",
  "tatuaje",
  "tauro",
  "taza",
  "tazoÌn",
  "teatro",
  "techo",
  "tecla",
  "teÌcnica",
  "tejado",
  "tejer",
  "tejido",
  "tela",
  "teleÌfono",
  "tema",
  "temor",
  "templo",
  "tenaz",
  "tender",
  "tener",
  "tenis",
  "tenso",
  "teoriÌa",
  "terapia",
  "terco",
  "teÌrmino",
  "ternura",
  "terror",
  "tesis",
  "tesoro",
  "testigo",
  "tetera",
  "texto",
  "tez",
  "tibio",
  "tiburoÌn",
  "tiempo",
  "tienda",
  "tierra",
  "tieso",
  "tigre",
  "tijera",
  "tilde",
  "timbre",
  "tiÌmido",
  "timo",
  "tinta",
  "tiÌo",
  "tiÌpico",
  "tipo",
  "tira",
  "tiroÌn",
  "titaÌn",
  "tiÌtere",
  "tiÌtulo",
  "tiza",
  "toalla",
  "tobillo",
  "tocar",
  "tocino",
  "todo",
  "toga",
  "toldo",
  "tomar",
  "tono",
  "tonto",
  "topar",
  "tope",
  "toque",
  "toÌrax",
  "torero",
  "tormenta",
  "torneo",
  "toro",
  "torpedo",
  "torre",
  "torso",
  "tortuga",
  "tos",
  "tosco",
  "toser",
  "toÌxico",
  "trabajo",
  "tractor",
  "traer",
  "traÌfico",
  "trago",
  "traje",
  "tramo",
  "trance",
  "trato",
  "trauma",
  "trazar",
  "treÌbol",
  "tregua",
  "treinta",
  "tren",
  "trepar",
  "tres",
  "tribu",
  "trigo",
  "tripa",
  "triste",
  "triunfo",
  "trofeo",
  "trompa",
  "tronco",
  "tropa",
  "trote",
  "trozo",
  "truco",
  "trueno",
  "trufa",
  "tuberiÌa",
  "tubo",
  "tuerto",
  "tumba",
  "tumor",
  "tuÌnel",
  "tuÌnica",
  "turbina",
  "turismo",
  "turno",
  "tutor",
  "ubicar",
  "uÌlcera",
  "umbral",
  "unidad",
  "unir",
  "universo",
  "uno",
  "untar",
  "unÌa",
  "urbano",
  "urbe",
  "urgente",
  "urna",
  "usar",
  "usuario",
  "uÌtil",
  "utopiÌa",
  "uva",
  "vaca",
  "vaciÌo",
  "vacuna",
  "vagar",
  "vago",
  "vaina",
  "vajilla",
  "vale",
  "vaÌlido",
  "valle",
  "valor",
  "vaÌlvula",
  "vampiro",
  "vara",
  "variar",
  "varoÌn",
  "vaso",
  "vecino",
  "vector",
  "vehiÌculo",
  "veinte",
  "vejez",
  "vela",
  "velero",
  "veloz",
  "vena",
  "vencer",
  "venda",
  "veneno",
  "vengar",
  "venir",
  "venta",
  "venus",
  "ver",
  "verano",
  "verbo",
  "verde",
  "vereda",
  "verja",
  "verso",
  "verter",
  "viÌa",
  "viaje",
  "vibrar",
  "vicio",
  "viÌctima",
  "vida",
  "viÌdeo",
  "vidrio",
  "viejo",
  "viernes",
  "vigor",
  "vil",
  "villa",
  "vinagre",
  "vino",
  "vinÌedo",
  "violiÌn",
  "viral",
  "virgo",
  "virtud",
  "visor",
  "viÌspera",
  "vista",
  "vitamina",
  "viudo",
  "vivaz",
  "vivero",
  "vivir",
  "vivo",
  "volcaÌn",
  "volumen",
  "volver",
  "voraz",
  "votar",
  "voto",
  "voz",
  "vuelo",
  "vulgar",
  "yacer",
  "yate",
  "yegua",
  "yema",
  "yerno",
  "yeso",
  "yodo",
  "yoga",
  "yogur",
  "zafiro",
  "zanja",
  "zapato",
  "zarza",
  "zona",
  "zorro",
  "zumo",
  "zurdo"
]

},{}],93:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":95}],94:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":95}],95:[function(require,module,exports){

},{}],96:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":354}],97:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":96,"./ghash":101,"./incr32":102,"buffer-xor":126,"cipher-base":128,"inherits":290,"safe-buffer":354}],98:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":99,"./encrypter":100,"./modes/list.json":110}],99:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":96,"./authCipher":97,"./modes":109,"./streamCipher":112,"cipher-base":128,"evp_bytestokey":273,"inherits":290,"safe-buffer":354}],100:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":96,"./authCipher":97,"./modes":109,"./streamCipher":112,"cipher-base":128,"evp_bytestokey":273,"inherits":290,"safe-buffer":354}],101:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho VÃ¤hÃ¤-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":354}],102:[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],103:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":126}],104:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":126,"safe-buffer":354}],105:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":354}],106:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":354}],107:[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":102,"buffer-xor":126,"safe-buffer":354}],108:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],109:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":103,"./cfb":104,"./cfb1":105,"./cfb8":106,"./ctr":107,"./ecb":108,"./list.json":110,"./ofb":111}],110:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],111:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":127,"buffer-xor":126}],112:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":96,"cipher-base":128,"inherits":290,"safe-buffer":354}],113:[function(require,module,exports){
(function (Buffer){
/* bignumber.js v1.3.0 https://github.com/MikeMcl/bignumber.js/LICENCE */

/*jslint bitwise: true, eqeq: true, plusplus: true, sub: true, white: true, maxerr: 500 */
/*global module */

/*
  bignumber.js v1.3.0
  A JavaScript library for arbitrary-precision arithmetic.
  https://github.com/MikeMcl/bignumber.js
  Copyright (c) 2012 Michael Mclaughlin <M8ch88l@gmail.com>
  MIT Expat Licence
*/

/*********************************** DEFAULTS ************************************/

/*
 * The default values below must be integers within the stated ranges (inclusive).
 * Most of these values can be changed during run-time using BigNumber.config().
 */

/*
 * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP,
 * MAX_EXP, and the argument to toFixed, toPrecision and toExponential, beyond
 * which an exception is thrown (if ERRORS is true).
 */
var MAX = 1E9,                                   // 0 to 1e+9

    // Limit of magnitude of exponent argument to toPower.
    MAX_POWER = 1E6,                             // 1 to 1e+6

    // The maximum number of decimal places for operations involving division.
    DECIMAL_PLACES = 20,                         // 0 to MAX

    /*
     * The rounding mode used when rounding to the above decimal places, and when
     * using toFixed, toPrecision and toExponential, and round (default value).
     * UP         0 Away from zero.
     * DOWN       1 Towards zero.
     * CEIL       2 Towards +Infinity.
     * FLOOR      3 Towards -Infinity.
     * HALF_UP    4 Towards nearest neighbour. If equidistant, up.
     * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
     * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
     * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
     * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
     */
    ROUNDING_MODE = 4,                           // 0 to 8

    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

    // The exponent value at and beneath which toString returns exponential notation.
    // Number type: -7
    TO_EXP_NEG = -7,                             // 0 to -MAX

    // The exponent value at and above which toString returns exponential notation.
    // Number type: 21
    TO_EXP_POS = 21,                             // 0 to MAX

    // RANGE : [MIN_EXP, MAX_EXP]

    // The minimum exponent value, beneath which underflow to zero occurs.
    // Number type: -324  (5e-324)
    MIN_EXP = -MAX,                              // -1 to -MAX

    // The maximum exponent value, above which overflow to Infinity occurs.
    // Number type:  308  (1.7976931348623157e+308)
    MAX_EXP = MAX,                               // 1 to MAX

    // Whether BigNumber Errors are ever thrown.
    // CHANGE parseInt to parseFloat if changing ERRORS to false.
    ERRORS = true,                               // true or false
    parse = parseInt,                            // parseInt or parseFloat

/***********************************************************************************/

    P = BigNumber.prototype,
    DIGITS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',
    outOfRange,
    id = 0,
    isValid = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
    trim = String.prototype.trim || function () {return this.replace(/^\s+|\s+$/g, '')},
    ONE = BigNumber(1);


// CONSTRUCTOR


/*
 * The exported function.
 * Create and return a new instance of a BigNumber object.
 *
 * n {number|string|BigNumber} A numeric value.
 * [b] {number} The base of n. Integer, 2 to 64 inclusive.
 */
function BigNumber( n, b ) {
    var e, i, isNum, digits, valid, orig,
        x = this;

    // Enable constructor usage without new.
    if ( !(x instanceof BigNumber) ) {
        return new BigNumber( n, b )
    }

    // Duplicate.
    if ( n instanceof BigNumber ) {
        id = 0;

        // e is undefined.
        if ( b !== e ) {
            n += ''
        } else {
            x['s'] = n['s'];
            x['e'] = n['e'];
            x['c'] = ( n = n['c'] ) ? n.slice() : n;
            return;
        }
    }

    // If number, check if minus zero.
    if ( typeof n != 'string' ) {
        n = ( isNum = typeof n == 'number' ||
            Object.prototype.toString.call(n) == '[object Number]' ) &&
                n === 0 && 1 / n < 0 ? '-0' : n + '';
    }

    orig = n;

    if ( b === e && isValid.test(n) ) {

        // Determine sign.
        x['s'] = n.charAt(0) == '-' ? ( n = n.slice(1), -1 ) : 1;

    // Either n is not a valid BigNumber or a base has been specified.
    } else {

        // Enable exponential notation to be used with base 10 argument.
        // Ensure return value is rounded to DECIMAL_PLACES as with other bases.
        if ( b == 10 ) {

            return setMode( n, DECIMAL_PLACES, ROUNDING_MODE );
        }

        n = trim.call(n).replace( /^\+(?!-)/, '' );

        x['s'] = n.charAt(0) == '-' ? ( n = n.replace( /^-(?!-)/, '' ), -1 ) : 1;

        if ( b != null ) {

            if ( ( b == (b | 0) || !ERRORS ) &&
              !( outOfRange = !( b >= 2 && b < 65 ) ) ) {

                digits = '[' + DIGITS.slice( 0, b = b | 0 ) + ']+';

                // Before non-decimal number validity test and base conversion
                // remove the `.` from e.g. '1.', and replace e.g. '.1' with '0.1'.
                n = n.replace( /\.$/, '' ).replace( /^\./, '0.' );

                // Any number in exponential form will fail due to the e+/-.
                if ( valid = new RegExp(
                  '^' + digits + '(?:\\.' + digits + ')?$', b < 37 ? 'i' : '' ).test(n) ) {

                    if ( isNum ) {

                        if ( n.replace( /^0\.0*|\./, '' ).length > 15 ) {

                            // 'new BigNumber() number type has more than 15 significant digits: {n}'
                            ifExceptionsThrow( orig, 0 );
                        }

                        // Prevent later check for length on converted number.
                        isNum = !isNum;
                    }
                    n = convert( n, 10, b, x['s'] );

                } else if ( n != 'Infinity' && n != 'NaN' ) {

                    // 'new BigNumber() not a base {b} number: {n}'
                    ifExceptionsThrow( orig, 1, b );
                    n = 'NaN';
                }
            } else {

                // 'new BigNumber() base not an integer: {b}'
                // 'new BigNumber() base out of range: {b}'
                ifExceptionsThrow( b, 2 );

                // Ignore base.
                valid = isValid.test(n);
            }
        } else {
            valid = isValid.test(n);
        }

        if ( !valid ) {

            // Infinity/NaN
            x['c'] = x['e'] = null;

            // NaN
            if ( n != 'Infinity' ) {

                // No exception on NaN.
                if ( n != 'NaN' ) {

                    // 'new BigNumber() not a number: {n}'
                    ifExceptionsThrow( orig, 3 );
                }
                x['s'] = null;
            }
            id = 0;

            return;
        }
    }

    // Decimal point?
    if ( ( e = n.indexOf('.') ) > -1 ) {
        n = n.replace( '.', '' );
    }

    // Exponential form?
    if ( ( i = n.search( /e/i ) ) > 0 ) {

        // Determine exponent.
        if ( e < 0 ) {
            e = i;
        }
        e += +n.slice( i + 1 );
        n = n.substring( 0, i );

    } else if ( e < 0 ) {

        // Integer.
        e = n.length;
    }

    // Determine leading zeros.
    for ( i = 0; n.charAt(i) == '0'; i++ ) {
    }

    b = n.length;

    // Disallow numbers with over 15 significant digits if number type.
    if ( isNum && b > 15 && n.slice(i).length > 15 ) {

        // 'new BigNumber() number type has more than 15 significant digits: {n}'
        ifExceptionsThrow( orig, 0 );
    }
    id = 0;

    // Overflow?
    if ( ( e -= i + 1 ) > MAX_EXP ) {

        // Infinity.
        x['c'] = x['e'] = null;

    // Zero or underflow?
    } else if ( i == b || e < MIN_EXP ) {

        // Zero.
        x['c'] = [ x['e'] = 0 ];
    } else {

        // Determine trailing zeros.
        for ( ; n.charAt(--b) == '0'; ) {
        }

        x['e'] = e;
        x['c'] = [];

        // Convert string to array of digits (without leading and trailing zeros).
        for ( e = 0; i <= b; x['c'][e++] = +n.charAt(i++) ) {
        }
    }
}


// CONSTRUCTOR PROPERTIES/METHODS


BigNumber['ROUND_UP'] = 0;
BigNumber['ROUND_DOWN'] = 1;
BigNumber['ROUND_CEIL'] = 2;
BigNumber['ROUND_FLOOR'] = 3;
BigNumber['ROUND_HALF_UP'] = 4;
BigNumber['ROUND_HALF_DOWN'] = 5;
BigNumber['ROUND_HALF_EVEN'] = 6;
BigNumber['ROUND_HALF_CEIL'] = 7;
BigNumber['ROUND_HALF_FLOOR'] = 8;

/*
 * Create an instance from a Buffer
 */
BigNumber['fromBuffer'] = function (buf, opts) {

    if (!opts) opts = {};

    var endian = { 1 : 'big', '-1' : 'little' }[opts.endian]
        || opts.endian || 'big'
    ;

    var size = opts.size === 'auto' ? Math.ceil(buf.length) : (opts.size || 1);

    if (buf.length % size !== 0) {
        throw new RangeError('Buffer length (' + buf.length + ')'
            + ' must be a multiple of size (' + size + ')'
        );
    }

    var hex = [];
    for (var i = 0; i < buf.length; i += size) {
        var chunk = [];
        for (var j = 0; j < size; j++) {
            chunk.push(buf[
                i + (endian === 'big' ? j : (size - j - 1))
            ]);
        }

        hex.push(chunk
            .map(function (c) {
                return (c < 16 ? '0' : '') + c.toString(16);
            })
            .join('')
        );
    }

    return BigNumber(hex.join(''), 16);

};

/*
 * Configure infrequently-changing library-wide settings.
 *
 * Accept an object or an argument list, with one or many of the following
 * properties or parameters respectively:
 * [ DECIMAL_PLACES [, ROUNDING_MODE [, EXPONENTIAL_AT [, RANGE [, ERRORS ]]]]]
 *
 * E.g.
 * BigNumber.config(20, 4) is equivalent to
 * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
 * Ignore properties/parameters set to null or undefined.
 *
 * Return an object with the properties current values.
 */
BigNumber['config'] = function () {
    var v, p,
        i = 0,
        r = {},
        a = arguments,
        o = a[0],
        c = 'config',
        inRange = function ( n, lo, hi ) {
          return !( ( outOfRange = n < lo || n > hi ) ||
            parse(n) != n && n !== 0 );
        },
        has = o && typeof o == 'object'
          ? function () {if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null}
          : function () {if ( a.length > i ) return ( v = a[i++] ) != null};

    // [DECIMAL_PLACES] {number} Integer, 0 to MAX inclusive.
    if ( has( p = 'DECIMAL_PLACES' ) ) {

        if ( inRange( v, 0, MAX ) ) {
            DECIMAL_PLACES = v | 0;
        } else {

            // 'config() DECIMAL_PLACES not an integer: {v}'
            // 'config() DECIMAL_PLACES out of range: {v}'
            ifExceptionsThrow( v, p, c );
        }
    }
    r[p] = DECIMAL_PLACES;

    // [ROUNDING_MODE] {number} Integer, 0 to 8 inclusive.
    if ( has( p = 'ROUNDING_MODE' ) ) {

        if ( inRange( v, 0, 8 ) ) {
            ROUNDING_MODE = v | 0;
        } else {

            // 'config() ROUNDING_MODE not an integer: {v}'
            // 'config() ROUNDING_MODE out of range: {v}'
            ifExceptionsThrow( v, p, c );
        }
    }
    r[p] = ROUNDING_MODE;

    /*
     * [EXPONENTIAL_AT] {number|number[]} Integer, -MAX to MAX inclusive or
     * [ integer -MAX to 0 inclusive, 0 to MAX inclusive ].
     */
    if ( has( p = 'EXPONENTIAL_AT' ) ) {

        if ( inRange( v, -MAX, MAX ) ) {
            TO_EXP_NEG = -( TO_EXP_POS = ~~( v < 0 ? -v : +v ) );
        } else if ( !outOfRange && v && inRange( v[0], -MAX, 0 ) &&
          inRange( v[1], 0, MAX ) ) {
            TO_EXP_NEG = ~~v[0];
            TO_EXP_POS = ~~v[1];
        } else {

            // 'config() EXPONENTIAL_AT not an integer or not [integer, integer]: {v}'
            // 'config() EXPONENTIAL_AT out of range or not [negative, positive: {v}'
            ifExceptionsThrow( v, p, c, 1 );
        }
    }
    r[p] = [ TO_EXP_NEG, TO_EXP_POS ];

    /*
     * [RANGE][ {number|number[]} Non-zero integer, -MAX to MAX inclusive or
     * [ integer -MAX to -1 inclusive, integer 1 to MAX inclusive ].
     */
    if ( has( p = 'RANGE' ) ) {

        if ( inRange( v, -MAX, MAX ) && ~~v ) {
            MIN_EXP = -( MAX_EXP = ~~( v < 0 ? -v : +v ) );
        } else if ( !outOfRange && v && inRange( v[0], -MAX, -1 ) &&
          inRange( v[1], 1, MAX ) ) {
            MIN_EXP = ~~v[0], MAX_EXP = ~~v[1];
        } else {

            // 'config() RANGE not a non-zero integer or not [integer, integer]: {v}'
            // 'config() RANGE out of range or not [negative, positive: {v}'
            ifExceptionsThrow( v, p, c, 1, 1 );
        }
    }
    r[p] = [ MIN_EXP, MAX_EXP ];

    // [ERRORS] {boolean|number} true, false, 1 or 0.
    if ( has( p = 'ERRORS' ) ) {

        if ( v === !!v || v === 1 || v === 0 ) {
            parse = ( outOfRange = id = 0, ERRORS = !!v )
              ? parseInt
              : parseFloat;
        } else {

            // 'config() ERRORS not a boolean or binary digit: {v}'
            ifExceptionsThrow( v, p, c, 0, 0, 1 );
        }
    }
    r[p] = ERRORS;

    return r;
};


// PRIVATE FUNCTIONS


// Assemble error messages. Throw BigNumber Errors.
function ifExceptionsThrow( arg, i, j, isArray, isRange, isErrors) {

    if ( ERRORS ) {
        var error,
            method = ['new BigNumber', 'cmp', 'div', 'eq', 'gt', 'gte', 'lt',
                 'lte', 'minus', 'mod', 'plus', 'times', 'toFr'
                ][ id ? id < 0 ? -id : id : 1 / id < 0 ? 1 : 0 ] + '()',
            message = outOfRange ? ' out of range' : ' not a' +
              ( isRange ? ' non-zero' : 'n' ) + ' integer';

        message = ( [
            method + ' number type has more than 15 significant digits',
            method + ' not a base ' + j + ' number',
            method + ' base' + message,
            method + ' not a number' ][i] ||
              j + '() ' + i + ( isErrors
                ? ' not a boolean or binary digit'
                : message + ( isArray
                  ? ' or not [' + ( outOfRange
                    ? ' negative, positive'
                    : ' integer, integer' ) + ' ]'
                  : '' ) ) ) + ': ' + arg;

        outOfRange = id = 0;
        error = new Error(message);
        error['name'] = 'BigNumber Error';

        throw error;
    }
}


/*
 * Convert a numeric string of baseIn to a numeric string of baseOut.
 */
function convert( nStr, baseOut, baseIn, sign ) {
    var e, dvs, dvd, nArr, fracArr, fracBN;

    // Convert string of base bIn to an array of numbers of baseOut.
    // Eg. strToArr('255', 10) where baseOut is 16, returns [15, 15].
    // Eg. strToArr('ff', 16)  where baseOut is 10, returns [2, 5, 5].
    function strToArr( str, bIn ) {
        var j,
            i = 0,
            strL = str.length,
            arrL,
            arr = [0];

        for ( bIn = bIn || baseIn; i < strL; i++ ) {

            for ( arrL = arr.length, j = 0; j < arrL; arr[j] *= bIn, j++ ) {
            }

            for ( arr[0] += DIGITS.indexOf( str.charAt(i) ), j = 0;
                  j < arr.length;
                  j++ ) {

                if ( arr[j] > baseOut - 1 ) {

                    if ( arr[j + 1] == null ) {
                        arr[j + 1] = 0;
                    }
                    arr[j + 1] += arr[j] / baseOut ^ 0;
                    arr[j] %= baseOut;
                }
            }
        }

        return arr.reverse();
    }

    // Convert array to string.
    // E.g. arrToStr( [9, 10, 11] ) becomes '9ab' (in bases above 11).
    function arrToStr( arr ) {
        var i = 0,
            arrL = arr.length,
            str = '';

        for ( ; i < arrL; str += DIGITS.charAt( arr[i++] ) ) {
        }

        return str;
    }

    if ( baseIn < 37 ) {
        nStr = nStr.toLowerCase();
    }

    /*
     * If non-integer convert integer part and fraction part separately.
     * Convert the fraction part as if it is an integer than use division to
     * reduce it down again to a value less than one.
     */
    if ( ( e = nStr.indexOf( '.' ) ) > -1 ) {

        /*
         * Calculate the power to which to raise the base to get the number
         * to divide the fraction part by after it has been converted as an
         * integer to the required base.
         */
        e = nStr.length - e - 1;

        // Use toFixed to avoid possible exponential notation.
        dvs = strToArr( new BigNumber(baseIn)['pow'](e)['toF'](), 10 );

        nArr = nStr.split('.');

        // Convert the base of the fraction part (as integer).
        dvd = strToArr( nArr[1] );

        // Convert the base of the integer part.
        nArr = strToArr( nArr[0] );

        // Result will be a BigNumber with a value less than 1.
        fracBN = divide( dvd, dvs, dvd.length - dvs.length, sign, baseOut,
          // Is least significant digit of integer part an odd number?
          nArr[nArr.length - 1] & 1 );

        fracArr = fracBN['c'];

        // e can be <= 0  ( if e == 0, fracArr is [0] or [1] ).
        if ( e = fracBN['e'] ) {

            // Append zeros according to the exponent of the result.
            for ( ; ++e; fracArr.unshift(0) ) {
            }

            // Append the fraction part to the converted integer part.
            nStr = arrToStr(nArr) + '.' + arrToStr(fracArr);

        // fracArr is [1].
        // Fraction digits rounded up, so increment last digit of integer part.
        } else if ( fracArr[0] ) {

            if ( nArr[ e = nArr.length - 1 ] < baseOut - 1 ) {
                ++nArr[e];
                nStr = arrToStr(nArr);
            } else {
                nStr = new BigNumber( arrToStr(nArr),
                  baseOut )['plus'](ONE)['toS'](baseOut);
            }

        // fracArr is [0]. No fraction digits.
        } else {
            nStr = arrToStr(nArr);
        }
    } else {

        // Simple integer. Convert base.
        nStr = arrToStr( strToArr(nStr) );
    }

    return nStr;
}


// Perform division in the specified base. Called by div and convert.
function divide( dvd, dvs, exp, s, base, isOdd ) {
    var dvsL, dvsT, next, cmp, remI,
        dvsZ = dvs.slice(),
        dvdI = dvsL = dvs.length,
        dvdL = dvd.length,
        rem = dvd.slice( 0, dvsL ),
        remL = rem.length,
        quo = new BigNumber(ONE),
        qc = quo['c'] = [],
        qi = 0,
        dig = DECIMAL_PLACES + ( quo['e'] = exp ) + 1;

    quo['s'] = s;
    s = dig < 0 ? 0 : dig;

    // Add zeros to make remainder as long as divisor.
    for ( ; remL++ < dvsL; rem.push(0) ) {
    }

    // Create version of divisor with leading zero.
    dvsZ.unshift(0);

    do {

        // 'next' is how many times the divisor goes into the current remainder.
        for ( next = 0; next < base; next++ ) {

            // Compare divisor and remainder.
            if ( dvsL != ( remL = rem.length ) ) {
                cmp = dvsL > remL ? 1 : -1;
            } else {
                for ( remI = -1, cmp = 0; ++remI < dvsL; ) {

                    if ( dvs[remI] != rem[remI] ) {
                        cmp = dvs[remI] > rem[remI] ? 1 : -1;
                        break;
                    }
                }
            }

            // Subtract divisor from remainder (if divisor < remainder).
            if ( cmp < 0 ) {

                // Remainder cannot be more than one digit longer than divisor.
                // Equalise lengths using divisor with extra leading zero?
                for ( dvsT = remL == dvsL ? dvs : dvsZ; remL; ) {

                    if ( rem[--remL] < dvsT[remL] ) {

                        for ( remI = remL;
                          remI && !rem[--remI];
                            rem[remI] = base - 1 ) {
                        }
                        --rem[remI];
                        rem[remL] += base;
                    }
                    rem[remL] -= dvsT[remL];
                }
                for ( ; !rem[0]; rem.shift() ) {
                }
            } else {
                break;
            }
        }

        // Add the 'next' digit to the result array.
        qc[qi++] = cmp ? next : ++next;

        // Update the remainder.
        rem[0] && cmp
          ? ( rem[remL] = dvd[dvdI] || 0 )
          : ( rem = [ dvd[dvdI] ] );

    } while ( ( dvdI++ < dvdL || rem[0] != null ) && s-- );

    // Leading zero? Do not remove if result is simply zero (qi == 1).
    if ( !qc[0] && qi != 1 ) {

        // There can't be more than one zero.
        --quo['e'];
        qc.shift();
    }

    // Round?
    if ( qi > dig ) {
        rnd( quo, DECIMAL_PLACES, base, isOdd, rem[0] != null );
    }

    // Overflow?
    if ( quo['e'] > MAX_EXP ) {

        // Infinity.
        quo['c'] = quo['e'] = null;

    // Underflow?
    } else if ( quo['e'] < MIN_EXP ) {

        // Zero.
        quo['c'] = [quo['e'] = 0];
    }

    return quo;
}


/*
 * Return a string representing the value of BigNumber n in normal or
 * exponential notation rounded to the specified decimal places or
 * significant digits.
 * Called by toString, toExponential (exp 1), toFixed, and toPrecision (exp 2).
 * d is the index (with the value in normal notation) of the digit that may be
 * rounded up.
 */
function format( n, d, exp ) {

    // Initially, i is the number of decimal places required.
    var i = d - (n = new BigNumber(n))['e'],
        c = n['c'];

    // +-Infinity or NaN?
    if ( !c ) {
        return n['toS']();
    }

    // Round?
    if ( c.length > ++d ) {
        rnd( n, i, 10 );
    }

    // Recalculate d if toFixed as n['e'] may have changed if value rounded up.
    i = c[0] == 0 ? i + 1 : exp ? d : n['e'] + i + 1;

    // Append zeros?
    for ( ; c.length < i; c.push(0) ) {
    }
    i = n['e'];

    /*
     * toPrecision returns exponential notation if the number of significant
     * digits specified is less than the number of digits necessary to
     * represent the integer part of the value in normal notation.
     */
    return exp == 1 || exp == 2 && ( --d < i || i <= TO_EXP_NEG )

      // Exponential notation.
      ? ( n['s'] < 0 && c[0] ? '-' : '' ) + ( c.length > 1
        ? ( c.splice( 1, 0, '.' ), c.join('') )
        : c[0] ) + ( i < 0 ? 'e' : 'e+' ) + i

      // Normal notation.
      : n['toS']();
}


// Round if necessary.
// Called by divide, format, setMode and sqrt.
function rnd( x, dp, base, isOdd, r ) {
    var xc = x['c'],
        isNeg = x['s'] < 0,
        half = base / 2,
        i = x['e'] + dp + 1,

        // 'next' is the digit after the digit that may be rounded up.
        next = xc[i],

        /*
         * 'more' is whether there are digits after 'next'.
         * E.g.
         * 0.005 (e = -3) to be rounded to 0 decimal places (dp = 0) gives i = -2
         * The 'next' digit is zero, and there ARE 'more' digits after it.
         * 0.5 (e = -1) dp = 0 gives i = 0
         * The 'next' digit is 5 and there are no 'more' digits after it.
         */
        more = r || i < 0 || xc[i + 1] != null;

    r = ROUNDING_MODE < 4
      ? ( next != null || more ) &&
        ( ROUNDING_MODE == 0 ||
           ROUNDING_MODE == 2 && !isNeg ||
             ROUNDING_MODE == 3 && isNeg )
      : next > half || next == half &&
        ( ROUNDING_MODE == 4 || more ||

          /*
           * isOdd is used in base conversion and refers to the least significant
           * digit of the integer part of the value to be converted. The fraction
           * part is rounded by this method separately from the integer part.
           */
          ROUNDING_MODE == 6 && ( xc[i - 1] & 1 || !dp && isOdd ) ||
            ROUNDING_MODE == 7 && !isNeg ||
              ROUNDING_MODE == 8 && isNeg );

    if ( i < 1 || !xc[0] ) {
        xc.length = 0;
        xc.push(0);

        if ( r ) {

            // 1, 0.1, 0.01, 0.001, 0.0001 etc.
            xc[0] = 1;
            x['e'] = -dp;
        } else {

            // Zero.
            x['e'] = 0;
        }

        return x;
    }

    // Remove any digits after the required decimal places.
    xc.length = i--;

    // Round up?
    if ( r ) {

        // Rounding up may mean the previous digit has to be rounded up and so on.
        for ( --base; ++xc[i] > base; ) {
            xc[i] = 0;

            if ( !i-- ) {
                ++x['e'];
                xc.unshift(1);
            }
        }
    }

    // Remove trailing zeros.
    for ( i = xc.length; !xc[--i]; xc.pop() ) {
    }

    return x;
}


// Round after setting the appropriate rounding mode.
// Handles ceil, floor and round.
function setMode( x, dp, rm ) {
    var r = ROUNDING_MODE;

    ROUNDING_MODE = rm;
    x = new BigNumber(x);
    x['c'] && rnd( x, dp, 10 );
    ROUNDING_MODE = r;

    return x;
}


// PROTOTYPE/INSTANCE METHODS


/*
 * Return a new BigNumber whose value is the absolute value of this BigNumber.
 */
P['abs'] = P['absoluteValue'] = function () {
    var x = new BigNumber(this);

    if ( x['s'] < 0 ) {
        x['s'] = 1;
    }

    return x;
};

/*
 * Return the bit length of the number.
 */
P['bitLength'] = function () {
    return this.toString(2).length;
};


/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * rounded to a whole number in the direction of Infinity.
 */
P['ceil'] = function () {
    return setMode( this, 0, 2 );
};


/*
 * Return
 * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
 * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
 * 0 if they have the same value,
 * or null if the value of either is NaN.
 */
P['comparedTo'] = P['cmp'] = function ( y, b ) {
    var a,
        x = this,
        xc = x['c'],
        yc = ( id = -id, y = new BigNumber( y, b ) )['c'],
        i = x['s'],
        j = y['s'],
        k = x['e'],
        l = y['e'];

    // Either NaN?
    if ( !i || !j ) {
        return null;
    }

    a = xc && !xc[0], b = yc && !yc[0];

    // Either zero?
    if ( a || b ) {
        return a ? b ? 0 : -j : i;
    }

    // Signs differ?
    if ( i != j ) {
        return i;
    }

    // Either Infinity?
    if ( a = i < 0, b = k == l, !xc || !yc ) {
        return b ? 0 : !xc ^ a ? 1 : -1;
    }

    // Compare exponents.
    if ( !b ) {
        return k > l ^ a ? 1 : -1;
    }

    // Compare digit by digit.
    for ( i = -1,
          j = ( k = xc.length ) < ( l = yc.length ) ? k : l;
          ++i < j; ) {

        if ( xc[i] != yc[i] ) {
            return xc[i] > yc[i] ^ a ? 1 : -1;
        }
    }
    // Compare lengths.
    return k == l ? 0 : k > l ^ a ? 1 : -1;
};


/*
 *  n / 0 = I
 *  n / N = N
 *  n / I = 0
 *  0 / n = 0
 *  0 / 0 = N
 *  0 / N = N
 *  0 / I = 0
 *  N / n = N
 *  N / 0 = N
 *  N / N = N
 *  N / I = N
 *  I / n = I
 *  I / 0 = I
 *  I / N = N
 *  I / I = N
 *
 * Return a new BigNumber whose value is the value of this BigNumber
 * divided by the value of BigNumber(y, b), rounded according to
 * DECIMAL_PLACES and ROUNDING_MODE.
 */
P['dividedBy'] = P['div'] = function ( y, b ) {
    var xc = this['c'],
        xe = this['e'],
        xs = this['s'],
        yc = ( id = 2, y = new BigNumber( y, b ) )['c'],
        ye = y['e'],
        ys = y['s'],
        s = xs == ys ? 1 : -1;

    // Either NaN/Infinity/0?
    return !xe && ( !xc || !xc[0] ) || !ye && ( !yc || !yc[0] )

      // Either NaN?
      ? new BigNumber( !xs || !ys ||

        // Both 0 or both Infinity?
        ( xc ? yc && xc[0] == yc[0] : !yc )

          // Return NaN.
          ? NaN

          // x is 0 or y is Infinity?
          : xc && xc[0] == 0 || !yc

            // Return +-0.
            ? s * 0

            // y is 0. Return +-Infinity.
            : s / 0 )

      : divide( xc, yc, xe - ye, s, 10 );
};


/*
 * Return true if the value of this BigNumber is equal to the value of
 * BigNumber(n, b), otherwise returns false.
 */
P['equals'] = P['eq'] = function ( n, b ) {
    id = 3;
    return this['cmp']( n, b ) === 0;
};


/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * rounded to a whole number in the direction of -Infinity.
 */
P['floor'] = function () {
    return setMode( this, 0, 3 );
};


/*
 * Return true if the value of this BigNumber is greater than the value of
 * BigNumber(n, b), otherwise returns false.
 */
P['greaterThan'] = P['gt'] = function ( n, b ) {
    id = 4;
    return this['cmp']( n, b ) > 0;
};


/*
 * Return true if the value of this BigNumber is greater than or equal to
 * the value of BigNumber(n, b), otherwise returns false.
 */
P['greaterThanOrEqualTo'] = P['gte'] = P['gt'] = function ( n, b ) {
    id = 5;
    return ( b = this['cmp']( n, b ) ) == 1 || b === 0;
};


/*
 * Return true if the value of this BigNumber is a finite number, otherwise
 * returns false.
 */
P['isFinite'] = P['isF'] = function () {
    return !!this['c'];
};


/*
 * Return true if the value of this BigNumber is NaN, otherwise returns
 * false.
 */
P['isNaN'] = function () {
    return !this['s'];
};


/*
 * Return true if the value of this BigNumber is negative, otherwise
 * returns false.
 */
P['isNegative'] = P['isNeg'] = function () {
    return this['s'] < 0;
};


/*
 * Return true if the value of this BigNumber is 0 or -0, otherwise returns
 * false.
 */
P['isZero'] = P['isZ'] = function () {
    return !!this['c'] && this['c'][0] == 0;
};


/*
 * Return true if the value of this BigNumber is less than the value of
 * BigNumber(n, b), otherwise returns false.
 */
P['lessThan'] = P['lt'] = function ( n, b ) {
    id = 6;
    return this['cmp']( n, b ) < 0;
};


/*
 * Return true if the value of this BigNumber is less than or equal to the
 * value of BigNumber(n, b), otherwise returns false.
 */
P['lessThanOrEqualTo'] = P['lte'] = P['le'] = function ( n, b ) {
    id = 7;
    return ( b = this['cmp']( n, b ) ) == -1 || b === 0;
};


/*
 *  n - 0 = n
 *  n - N = N
 *  n - I = -I
 *  0 - n = -n
 *  0 - 0 = 0
 *  0 - N = N
 *  0 - I = -I
 *  N - n = N
 *  N - 0 = N
 *  N - N = N
 *  N - I = N
 *  I - n = I
 *  I - 0 = I
 *  I - N = N
 *  I - I = N
 *
 * Return a new BigNumber whose value is the value of this BigNumber minus
 * the value of BigNumber(y, b).
 */
P['minus'] = P['sub'] = function ( y, b ) {
    var d, i, j, xLTy,
        x = this,
        a = x['s'];

    b = ( id = 8, y = new BigNumber( y, b ) )['s'];

    // Either NaN?
    if ( !a || !b ) {
        return new BigNumber(NaN);
    }

    // Signs differ?
    if ( a != b ) {
        return y['s'] = -b, x['plus'](y);
    }

    var xc = x['c'],
        xe = x['e'],
        yc = y['c'],
        ye = y['e'];

    if ( !xe || !ye ) {

        // Either Infinity?
        if ( !xc || !yc ) {
            return xc ? ( y['s'] = -b, y ) : new BigNumber( yc ? x : NaN );
        }

        // Either zero?
        if ( !xc[0] || !yc[0] ) {

            // y is non-zero?
            return yc[0]
              ? ( y['s'] = -b, y )

              // x is non-zero?
              : new BigNumber( xc[0]
                ? x

                // Both are zero.
                // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
                : ROUNDING_MODE == 3 ? -0 : 0 );
        }
    }

    // Determine which is the bigger number.
    // Prepend zeros to equalise exponents.
    if ( xc = xc.slice(), a = xe - ye ) {
        d = ( xLTy = a < 0 ) ? ( a = -a, xc ) : ( ye = xe, yc );

        for ( d.reverse(), b = a; b--; d.push(0) ) {
        }
        d.reverse();
    } else {

        // Exponents equal. Check digit by digit.
        j = ( ( xLTy = xc.length < yc.length ) ? xc : yc ).length;

        for ( a = b = 0; b < j; b++ ) {

            if ( xc[b] != yc[b] ) {
                xLTy = xc[b] < yc[b];
                break;
            }
        }
    }

    // x < y? Point xc to the array of the bigger number.
    if ( xLTy ) {
        d = xc, xc = yc, yc = d;
        y['s'] = -y['s'];
    }

    /*
     * Append zeros to xc if shorter. No need to add zeros to yc if shorter
     * as subtraction only needs to start at yc.length.
     */
    if ( ( b = -( ( j = xc.length ) - yc.length ) ) > 0 ) {

        for ( ; b--; xc[j++] = 0 ) {
        }
    }

    // Subtract yc from xc.
    for ( b = yc.length; b > a; ){

        if ( xc[--b] < yc[b] ) {

            for ( i = b; i && !xc[--i]; xc[i] = 9 ) {
            }
            --xc[i];
            xc[b] += 10;
        }
        xc[b] -= yc[b];
    }

    // Remove trailing zeros.
    for ( ; xc[--j] == 0; xc.pop() ) {
    }

    // Remove leading zeros and adjust exponent accordingly.
    for ( ; xc[0] == 0; xc.shift(), --ye ) {
    }

    /*
     * No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
     * when neither x or y are Infinity.
     */

    // Underflow?
    if ( ye < MIN_EXP || !xc[0] ) {

        /*
         * Following IEEE 754 (2008) 6.3,
         * n - n = +0  but  n - n = -0 when rounding towards -Infinity.
         */
        if ( !xc[0] ) {
            y['s'] = ROUNDING_MODE == 3 ? -1 : 1;
        }

        // Result is zero.
        xc = [ye = 0];
    }

    return y['c'] = xc, y['e'] = ye, y;
};


/*
 *   n % 0 =  N
 *   n % N =  N
 *   0 % n =  0
 *  -0 % n = -0
 *   0 % 0 =  N
 *   0 % N =  N
 *   N % n =  N
 *   N % 0 =  N
 *   N % N =  N
 *
 * Return a new BigNumber whose value is the value of this BigNumber modulo
 * the value of BigNumber(y, b).
 */
P['modulo'] = P['mod'] = function ( y, b ) {
    var x = this,
        xc = x['c'],
        yc = ( id = 9, y = new BigNumber( y, b ) )['c'],
        i = x['s'],
        j = y['s'];

    // Is x or y NaN, or y zero?
    b = !i || !j || yc && !yc[0];

    if ( b || xc && !xc[0] ) {
        return new BigNumber( b ? NaN : x );
    }

    x['s'] = y['s'] = 1;
    b = y['cmp'](x) == 1;
    x['s'] = i, y['s'] = j;

    return b
      ? new BigNumber(x)
      : ( i = DECIMAL_PLACES, j = ROUNDING_MODE,
        DECIMAL_PLACES = 0, ROUNDING_MODE = 1,
          x = x['div'](y),
            DECIMAL_PLACES = i, ROUNDING_MODE = j,
              this['minus']( x['times'](y) ) );
};


/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * negated, i.e. multiplied by -1.
 */
P['negated'] = P['neg'] = function () {
    var x = new BigNumber(this);

    return x['s'] = -x['s'] || null, x;
};


/*
 *  n + 0 = n
 *  n + N = N
 *  n + I = I
 *  0 + n = n
 *  0 + 0 = 0
 *  0 + N = N
 *  0 + I = I
 *  N + n = N
 *  N + 0 = N
 *  N + N = N
 *  N + I = N
 *  I + n = I
 *  I + 0 = I
 *  I + N = N
 *  I + I = I
 *
 * Return a new BigNumber whose value is the value of this BigNumber plus
 * the value of BigNumber(y, b).
 */
P['plus'] = P['add'] = function ( y, b ) {
    var d,
        x = this,
        a = x['s'];

    b = ( id = 10, y = new BigNumber( y, b ) )['s'];

    // Either NaN?
    if ( !a || !b ) {
        return new BigNumber(NaN);
    }

    // Signs differ?
    if ( a != b ) {
        return y['s'] = -b, x['minus'](y);
    }

    var xe = x['e'],
        xc = x['c'],
        ye = y['e'],
        yc = y['c'];

    if ( !xe || !ye ) {

        // Either Infinity?
        if ( !xc || !yc ) {

            // Return +-Infinity.
            return new BigNumber( a / 0 );
        }

        // Either zero?
        if ( !xc[0] || !yc[0] ) {

            // y is non-zero?
            return yc[0]
              ? y

              // x is non-zero?
              : new BigNumber( xc[0]
                ? x

                // Both are zero. Return zero.
                : a * 0 );
        }
    }

    // Prepend zeros to equalise exponents.
    // Note: Faster to use reverse then do unshifts.
    if ( xc = xc.slice(), a = xe - ye ) {
        d = a > 0 ? ( ye = xe, yc ) : ( a = -a, xc );

        for ( d.reverse(); a--; d.push(0) ) {
        }
        d.reverse();
    }

    // Point xc to the longer array.
    if ( xc.length - yc.length < 0 ) {
        d = yc, yc = xc, xc = d;
    }

    /*
     * Only start adding at yc.length - 1 as the
     * further digits of xc can be left as they are.
     */
    for ( a = yc.length, b = 0; a;
         b = ( xc[--a] = xc[a] + yc[a] + b ) / 10 ^ 0, xc[a] %= 10 ) {
    }

    // No need to check for zero, as +x + +y != 0 && -x + -y != 0

    if ( b ) {
        xc.unshift(b);

        // Overflow? (MAX_EXP + 1 possible)
        if ( ++ye > MAX_EXP ) {

            // Infinity.
            xc = ye = null;
        }
    }

     // Remove trailing zeros.
    for ( a = xc.length; xc[--a] == 0; xc.pop() ) {
    }

    return y['c'] = xc, y['e'] = ye, y;
};


/*
 * Return a BigNumber whose value is the value of this BigNumber raised to
 * the power e. If e is negative round according to DECIMAL_PLACES and
 * ROUNDING_MODE.
 *
 * e {number} Integer, -MAX_POWER to MAX_POWER inclusive.
 */
P['toPower'] = P['pow'] = function ( e ) {

    // e to integer, avoiding NaN or Infinity becoming 0.
    var i = e * 0 == 0 ? e | 0 : e,
        x = new BigNumber(this),
        y = new BigNumber(ONE);

    // Use Math.pow?
    // Pass +-Infinity for out of range exponents.
    if ( ( ( ( outOfRange = e < -MAX_POWER || e > MAX_POWER ) &&
      (i = e * 1 / 0) ) ||

         /*
          * Any exponent that fails the parse becomes NaN.
          *
          * Include 'e !== 0' because on Opera -0 == parseFloat(-0) is false,
          * despite -0 === parseFloat(-0) && -0 == parseFloat('-0') is true.
          */
         parse(e) != e && e !== 0 && !(i = NaN) ) &&

          // 'pow() exponent not an integer: {e}'
          // 'pow() exponent out of range: {e}'
          !ifExceptionsThrow( e, 'exponent', 'pow' ) ||

            // Pass zero to Math.pow, as any value to the power zero is 1.
            !i ) {

        // i is +-Infinity, NaN or 0.
        return new BigNumber( Math.pow( x['toS'](), i ) );
    }

    for ( i = i < 0 ? -i : i; ; ) {

        if ( i & 1 ) {
            y = y['times'](x);
        }
        i >>= 1;

        if ( !i ) {
            break;
        }
        x = x['times'](x);
    }

    return e < 0 ? ONE['div'](y) : y;
};


/*
 * Return a BigNumber whose value is the value of this BigNumber raised to
 * the power m modulo n.
 *
 * m {BigNumber} the value to take the power of
 * n {BigNumber} the value to modulo by
 */
P['powm'] = function ( m, n ) {
    return this.pow(m).mod(n);
};


/*
 * Return a new BigNumber whose value is the value of this BigNumber
 * rounded to a maximum of dp decimal places using rounding mode rm, or to
 * 0 and ROUNDING_MODE respectively if omitted.
 *
 * [dp] {number} Integer, 0 to MAX inclusive.
 * [rm] {number} Integer, 0 to 8 inclusive.
 */
P['round'] = function ( dp, rm ) {

    dp = dp == null || ( ( ( outOfRange = dp < 0 || dp > MAX ) ||
      parse(dp) != dp ) &&

        // 'round() decimal places out of range: {dp}'
        // 'round() decimal places not an integer: {dp}'
        !ifExceptionsThrow( dp, 'decimal places', 'round' ) )
          ? 0
          : dp | 0;

    rm = rm == null || ( ( ( outOfRange = rm < 0 || rm > 8 ) ||

      // Include '&& rm !== 0' because with Opera -0 == parseFloat(-0) is false.
      parse(rm) != rm && rm !== 0 ) &&

        // 'round() mode not an integer: {rm}'
        // 'round() mode out of range: {rm}'
        !ifExceptionsThrow( rm, 'mode', 'round' ) )
          ? ROUNDING_MODE
          : rm | 0;

    return setMode( this, dp, rm );
};


/*
 *  sqrt(-n) =  N
 *  sqrt( N) =  N
 *  sqrt(-I) =  N
 *  sqrt( I) =  I
 *  sqrt( 0) =  0
 *  sqrt(-0) = -0
 *
 * Return a new BigNumber whose value is the square root of the value of
 * this BigNumber, rounded according to DECIMAL_PLACES and ROUNDING_MODE.
 */
P['squareRoot'] = P['sqrt'] = function () {
    var n, r, re, t,
        x = this,
        c = x['c'],
        s = x['s'],
        e = x['e'],
        dp = DECIMAL_PLACES,
        rm = ROUNDING_MODE,
        half = new BigNumber('0.5');

    // Negative/NaN/Infinity/zero?
    if ( s !== 1 || !c || !c[0] ) {

        return new BigNumber( !s || s < 0 && ( !c || c[0] )
          ? NaN
          : c ? x : 1 / 0 );
    }

    // Initial estimate.
    s = Math.sqrt( x['toS']() );
    ROUNDING_MODE = 1;

    /*
      Math.sqrt underflow/overflow?
      Pass x to Math.sqrt as integer, then adjust the exponent of the result.
     */
    if ( s == 0 || s == 1 / 0 ) {
        n = c.join('');

        if ( !( n.length + e & 1 ) ) {
            n += '0';
        }
        r = new BigNumber( Math.sqrt(n) + '' );

        // r may still not be finite.
        if ( !r['c'] ) {
            r['c'] = [1];
        }
        r['e'] = ( ( ( e + 1 ) / 2 ) | 0 ) - ( e < 0 || e & 1 );
    } else {
        r = new BigNumber( n = s.toString() );
    }
    re = r['e'];
    s = re + ( DECIMAL_PLACES += 4 );

    if ( s < 3 ) {
        s = 0;
    }
    e = s;

    // Newton-Raphson iteration.
    for ( ; ; ) {
        t = r;
        r = half['times']( t['plus']( x['div'](t) ) );

        if ( t['c'].slice( 0, s ).join('') === r['c'].slice( 0, s ).join('') ) {
            c = r['c'];

            /*
              The exponent of r may here be one less than the final result
              exponent (re), e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust
              s so the rounding digits are indexed correctly.
             */
            s = s - ( n && r['e'] < re );

            /*
              The 4th rounding digit may be in error by -1 so if the 4 rounding
              digits are 9999 or 4999 (i.e. approaching a rounding boundary)
              continue the iteration.
             */
            if ( c[s] == 9 && c[s - 1] == 9 && c[s - 2] == 9 &&
                    ( c[s - 3] == 9 || n && c[s - 3] == 4 ) ) {

                /*
                  If 9999 on first run through, check to see if rounding up
                  gives the exact result as the nines may infinitely repeat.
                 */
                if ( n && c[s - 3] == 9 ) {
                    t = r['round']( dp, 0 );

                    if ( t['times'](t)['eq'](x) ) {
                        ROUNDING_MODE = rm;
                        DECIMAL_PLACES = dp;

                        return t;
                    }
                }
                DECIMAL_PLACES += 4;
                s += 4;
                n = '';
            } else {

                /*
                  If the rounding digits are null, 0000 or 5000, check for an
                  exact result. If not, then there are further digits so
                  increment the 1st rounding digit to ensure correct rounding.
                 */
                if ( !c[e] && !c[e - 1] && !c[e - 2] &&
                        ( !c[e - 3] || c[e - 3] == 5 ) ) {

                    // Truncate to the first rounding digit.
                    if ( c.length > e - 2 ) {
                        c.length = e - 2;
                    }

                    if ( !r['times'](r)['eq'](x) ) {

                        while ( c.length < e - 3 ) {
                            c.push(0);
                        }
                        c[e - 3]++;
                    }
                }
                ROUNDING_MODE = rm;
                rnd( r, DECIMAL_PLACES = dp, 10 );

                return r;
            }
        }
    }
};


/*
 *  n * 0 = 0
 *  n * N = N
 *  n * I = I
 *  0 * n = 0
 *  0 * 0 = 0
 *  0 * N = N
 *  0 * I = N
 *  N * n = N
 *  N * 0 = N
 *  N * N = N
 *  N * I = N
 *  I * n = I
 *  I * 0 = N
 *  I * N = N
 *  I * I = I
 *
 * Return a new BigNumber whose value is the value of this BigNumber times
 * the value of BigNumber(y, b).
 */
P['times'] = P['mul'] = function ( y, b ) {
    var c,
        x = this,
        xc = x['c'],
        yc = ( id = 11, y = new BigNumber( y, b ) )['c'],
        i = x['e'],
        j = y['e'],
        a = x['s'];

    y['s'] = a == ( b = y['s'] ) ? 1 : -1;

    // Either NaN/Infinity/0?
    if ( !i && ( !xc || !xc[0] ) || !j && ( !yc || !yc[0] ) ) {

        // Either NaN?
        return new BigNumber( !a || !b ||

          // x is 0 and y is Infinity  or  y is 0 and x is Infinity?
          xc && !xc[0] && !yc || yc && !yc[0] && !xc

            // Return NaN.
            ? NaN

            // Either Infinity?
            : !xc || !yc

              // Return +-Infinity.
              ? y['s'] / 0

              // x or y is 0. Return +-0.
              : y['s'] * 0 );
    }
    y['e'] = i + j;

    if ( ( a = xc.length ) < ( b = yc.length ) ) {
        c = xc, xc = yc, yc = c, j = a, a = b, b = j;
    }

    for ( j = a + b, c = []; j--; c.push(0) ) {
    }

    // Multiply!
    for ( i = b - 1; i > -1; i-- ) {

        for ( b = 0, j = a + i;
              j > i;
              b = c[j] + yc[i] * xc[j - i - 1] + b,
              c[j--] = b % 10 | 0,
              b = b / 10 | 0 ) {
        }

        if ( b ) {
            c[j] = ( c[j] + b ) % 10;
        }
    }

    b && ++y['e'];

    // Remove any leading zero.
    !c[0] && c.shift();

    // Remove trailing zeros.
    for ( j = c.length; !c[--j]; c.pop() ) {
    }

    // No zero check needed as only x * 0 == 0 etc.

    // Overflow?
    y['c'] = y['e'] > MAX_EXP

      // Infinity.
      ? ( y['e'] = null )

      // Underflow?
      : y['e'] < MIN_EXP

        // Zero.
        ? [ y['e'] = 0 ]

        // Neither.
        : c;

    return y;
};

/*
 * Return a buffer containing the 
 */
P['toBuffer'] = function ( opts ) {

    if (typeof opts === 'string') {
        if (opts !== 'mpint') return 'Unsupported Buffer representation';

        var abs = this.abs();
        var buf = abs.toBuffer({ size : 1, endian : 'big' });
        var len = buf.length === 1 && buf[0] === 0 ? 0 : buf.length;
        if (buf[0] & 0x80) len ++;

        var ret = new Buffer(4 + len);
        if (len > 0) buf.copy(ret, 4 + (buf[0] & 0x80 ? 1 : 0));
        if (buf[0] & 0x80) ret[4] = 0;

        ret[0] = len & (0xff << 24);
        ret[1] = len & (0xff << 16);
        ret[2] = len & (0xff << 8);
        ret[3] = len & (0xff << 0);

        // two's compliment for negative integers:
        var isNeg = this.lt(0);
        if (isNeg) {
            for (var i = 4; i < ret.length; i++) {
                ret[i] = 0xff - ret[i];
            }
        }
        ret[4] = (ret[4] & 0x7f) | (isNeg ? 0x80 : 0);
        if (isNeg) ret[ret.length - 1] ++;

        return ret;
    }

    if (!opts) opts = {};

    var endian = { 1 : 'big', '-1' : 'little' }[opts.endian]
        || opts.endian || 'big'
    ;

    var hex = this.toString(16);
    if (hex.charAt(0) === '-') throw new Error(
        'converting negative numbers to Buffers not supported yet'
    );

    var size = opts.size === 'auto' ? Math.ceil(hex.length / 2) : (opts.size || 1);

    var len = Math.ceil(hex.length / (2 * size)) * size;
    var buf = new Buffer(len);

    // zero-pad the hex string so the chunks are all `size` long
    while (hex.length < 2 * len) hex = '0' + hex;

    var hx = hex
        .split(new RegExp('(.{' + (2 * size) + '})'))
        .filter(function (s) { return s.length > 0 })
    ;

    hx.forEach(function (chunk, i) {
        for (var j = 0; j < size; j++) {
            var ix = i * size + (endian === 'big' ? j : size - j - 1);
            buf[ix] = parseInt(chunk.slice(j*2,j*2+2), 16);
        }
    });

    return buf;
};

/*
 * Return a string representing the value of this BigNumber in exponential
 * notation to dp fixed decimal places and rounded using ROUNDING_MODE if
 * necessary.
 *
 * [dp] {number} Integer, 0 to MAX inclusive.
 */
P['toExponential'] = P['toE'] = function ( dp ) {

    return format( this,
      ( dp == null || ( ( outOfRange = dp < 0 || dp > MAX ) ||

        /*
         * Include '&& dp !== 0' because with Opera -0 == parseFloat(-0) is
         * false, despite -0 == parseFloat('-0') && 0 == -0 being true.
         */
        parse(dp) != dp && dp !== 0 ) &&

          // 'toE() decimal places not an integer: {dp}'
          // 'toE() decimal places out of range: {dp}'
          !ifExceptionsThrow( dp, 'decimal places', 'toE' ) ) && this['c']
            ? this['c'].length - 1
            : dp | 0, 1 );
};


/*
 * Return a string representing the value of this BigNumber in normal
 * notation to dp fixed decimal places and rounded using ROUNDING_MODE if
 * necessary.
 *
 * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
 * but e.g. (-0.00001).toFixed(0) is '-0'.
 *
 * [dp] {number} Integer, 0 to MAX inclusive.
 */
P['toFixed'] = P['toF'] = function ( dp ) {
    var n, str, d,
        x = this;

    if ( !( dp == null || ( ( outOfRange = dp < 0 || dp > MAX ) ||
        parse(dp) != dp && dp !== 0 ) &&

        // 'toF() decimal places not an integer: {dp}'
        // 'toF() decimal places out of range: {dp}'
        !ifExceptionsThrow( dp, 'decimal places', 'toF' ) ) ) {
          d = x['e'] + ( dp | 0 );
    }

    n = TO_EXP_NEG, dp = TO_EXP_POS;
    TO_EXP_NEG = -( TO_EXP_POS = 1 / 0 );

    // Note: str is initially undefined.
    if ( d == str ) {
        str = x['toS']();
    } else {
        str = format( x, d );

        // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.
        // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
        if ( x['s'] < 0 && x['c'] ) {

            // As e.g. -0 toFixed(3), will wrongly be returned as -0.000 from toString.
            if ( !x['c'][0] ) {
                str = str.replace(/^-/, '');

            // As e.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.
            } else if ( str.indexOf('-') < 0 ) {
                str = '-' + str;
            }
        }
    }
    TO_EXP_NEG = n, TO_EXP_POS = dp;

    return str;
};


/*
 * Return a string array representing the value of this BigNumber as a
 * simple fraction with an integer numerator and an integer denominator.
 * The denominator will be a positive non-zero value less than or equal to
 * the specified maximum denominator. If a maximum denominator is not
 * specified, the denominator will be the lowest value necessary to
 * represent the number exactly.
 *
 * [maxD] {number|string|BigNumber} Integer >= 1 and < Infinity.
 */
P['toFraction'] = P['toFr'] = function ( maxD ) {
    var q, frac, n0, d0, d2, n, e,
        n1 = d0 = new BigNumber(ONE),
        d1 = n0 = new BigNumber('0'),
        x = this,
        xc = x['c'],
        exp = MAX_EXP,
        dp = DECIMAL_PLACES,
        rm = ROUNDING_MODE,
        d = new BigNumber(ONE);

    // NaN, Infinity.
    if ( !xc ) {
        return x['toS']();
    }

    e = d['e'] = xc.length - x['e'] - 1;

    // If max denominator is undefined or null...
    if ( maxD == null ||

         // or NaN...
         ( !( id = 12, n = new BigNumber(maxD) )['s'] ||

           // or less than 1, or Infinity...
           ( outOfRange = n['cmp'](n1) < 0 || !n['c'] ) ||

             // or not an integer...
             ( ERRORS && n['e'] < n['c'].length - 1 ) ) &&

               // 'toFr() max denominator not an integer: {maxD}'
               // 'toFr() max denominator out of range: {maxD}'
               !ifExceptionsThrow( maxD, 'max denominator', 'toFr' ) ||

                 // or greater than the maxD needed to specify the value exactly...
                 ( maxD = n )['cmp'](d) > 0 ) {

        // d is e.g. 10, 100, 1000, 10000... , n1 is 1.
        maxD = e > 0 ? d : n1;
    }

    MAX_EXP = 1 / 0;
    n = new BigNumber( xc.join('') );

    for ( DECIMAL_PLACES = 0, ROUNDING_MODE = 1; ; )  {
        q = n['div'](d);
        d2 = d0['plus']( q['times'](d1) );

        if ( d2['cmp'](maxD) == 1 ) {
            break;
        }

        d0 = d1, d1 = d2;

        n1 = n0['plus']( q['times']( d2 = n1 ) );
        n0 = d2;

        d = n['minus']( q['times']( d2 = d ) );
        n = d2;
    }

    d2 = maxD['minus'](d0)['div'](d1);
    n0 = n0['plus']( d2['times'](n1) );
    d0 = d0['plus']( d2['times'](d1) );

    n0['s'] = n1['s'] = x['s'];

    DECIMAL_PLACES = e * 2;
    ROUNDING_MODE = rm;

    // Determine which fraction is closer to x, n0 / d0 or n1 / d1?
    frac = n1['div'](d1)['minus'](x)['abs']()['cmp'](
      n0['div'](d0)['minus'](x)['abs']() ) < 1
      ? [ n1['toS'](), d1['toS']() ]
      : [ n0['toS'](), d0['toS']() ];

    return MAX_EXP = exp, DECIMAL_PLACES = dp, frac;
};


/*
 * Return a string representing the value of this BigNumber to sd significant
 * digits and rounded using ROUNDING_MODE if necessary.
 * If sd is less than the number of digits necessary to represent the integer
 * part of the value in normal notation, then use exponential notation.
 *
 * sd {number} Integer, 1 to MAX inclusive.
 */
P['toPrecision'] = P['toP'] = function ( sd ) {

    /*
     * ERRORS true: Throw if sd not undefined, null or an integer in range.
     * ERRORS false: Ignore sd if not a number or not in range.
     * Truncate non-integers.
     */
    return sd == null || ( ( ( outOfRange = sd < 1 || sd > MAX ) ||
      parse(sd) != sd ) &&

        // 'toP() precision not an integer: {sd}'
        // 'toP() precision out of range: {sd}'
        !ifExceptionsThrow( sd, 'precision', 'toP' ) )
          ? this['toS']()
          : format( this, --sd | 0, 2 );
};


/*
 * Return a string representing the value of this BigNumber in base b, or
 * base 10 if b is omitted. If a base is specified, including base 10,
 * round according to DECIMAL_PLACES and ROUNDING_MODE.
 * If a base is not specified, and this BigNumber has a positive exponent
 * that is equal to or greater than TO_EXP_POS, or a negative exponent equal
 * to or less than TO_EXP_NEG, return exponential notation.
 *
 * [b] {number} Integer, 2 to 64 inclusive.
 */
P['toString'] = P['toS'] = function ( b ) {
    var u, str, strL,
        x = this,
        xe = x['e'];

    // Infinity or NaN?
    if ( xe === null ) {
        str = x['s'] ? 'Infinity' : 'NaN';

    // Exponential format?
    } else if ( b === u && ( xe <= TO_EXP_NEG || xe >= TO_EXP_POS ) ) {
        return format( x, x['c'].length - 1, 1 );
    } else {
        str = x['c'].join('');

        // Negative exponent?
        if ( xe < 0 ) {

            // Prepend zeros.
            for ( ; ++xe; str = '0' + str ) {
            }
            str = '0.' + str;

        // Positive exponent?
        } else if ( strL = str.length, xe > 0 ) {

            if ( ++xe > strL ) {

                // Append zeros.
                for ( xe -= strL; xe-- ; str += '0' ) {
                }
            } else if ( xe < strL ) {
                str = str.slice( 0, xe ) + '.' + str.slice(xe);
            }

        // Exponent zero.
        } else {
            if ( u = str.charAt(0), strL > 1 ) {
                str = u + '.' + str.slice(1);

            // Avoid '-0'
            } else if ( u == '0' ) {
                return u;
            }
        }

        if ( b != null ) {

            if ( !( outOfRange = !( b >= 2 && b < 65 ) ) &&
              ( b == (b | 0) || !ERRORS ) ) {
                str = convert( str, b | 0, 10, x['s'] );

                // Avoid '-0'
                if ( str == '0' ) {
                    return str;
                }
            } else {

                // 'toS() base not an integer: {b}'
                // 'toS() base out of range: {b}'
                ifExceptionsThrow( b, 'base', 'toS' );
            }
        }

    }

    return x['s'] < 0 ? '-' + str : str;
};


/*
 * Return as toString, but do not accept a base argument.
 */
P['valueOf'] = function () {
    return this['toS']();
};


// Add aliases for BigDecimal methods.
//P['add'] = P['plus'];
//P['subtract'] = P['minus'];
//P['multiply'] = P['times'];
//P['divide'] = P['div'];
//P['remainder'] = P['mod'];
//P['compareTo'] = P['cmp'];
//P['negate'] = P['neg'];


// EXPORT
module.exports = BigNumber;

}).call(this,require("buffer").Buffer)
},{"buffer":127}],114:[function(require,module,exports){
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":98,"browserify-aes/modes":109,"browserify-des":115,"browserify-des/modes":116,"evp_bytestokey":273}],115:[function(require,module,exports){
(function (Buffer){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

}).call(this,require("buffer").Buffer)
},{"buffer":127,"cipher-base":128,"des.js":245,"inherits":290}],116:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],117:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)
},{"bn.js":93,"buffer":127,"randombytes":338}],118:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":119}],119:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],120:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],121:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash')
var stream = require('stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)
},{"./algorithms.json":119,"./sign":122,"./verify":123,"buffer":127,"create-hash":240,"inherits":290,"stream":363}],122:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)
},{"./curves.json":120,"bn.js":93,"browserify-rsa":117,"buffer":127,"create-hmac":242,"elliptic":256,"parse-asn1":305}],123:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

}).call(this,require("buffer").Buffer)
},{"./curves.json":120,"bn.js":93,"buffer":127,"elliptic":256,"parse-asn1":305}],124:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"dup":95}],125:[function(require,module,exports){
'use strict';

var Buffer = require('safe-buffer').Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":354}],126:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)
},{"buffer":127}],127:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  get: function () {
    if (!(this instanceof Buffer)) {
      return undefined
    }
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  get: function () {
    if (!(this instanceof Buffer)) {
      return undefined
    }
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (ArrayBuffer.isView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (ArrayBuffer.isView(buf)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":84,"ieee754":288}],128:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":290,"safe-buffer":354,"stream":363,"string_decoder":125}],129:[function(require,module,exports){
require('../../modules/es6.string.iterator');
require('../../modules/es6.array.from');
module.exports = require('../../modules/_core').Array.from;

},{"../../modules/_core":149,"../../modules/es6.array.from":220,"../../modules/es6.string.iterator":230}],130:[function(require,module,exports){
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.get-iterator');

},{"../modules/core.get-iterator":218,"../modules/es6.string.iterator":230,"../modules/web.dom.iterable":237}],131:[function(require,module,exports){
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.is-iterable');

},{"../modules/core.is-iterable":219,"../modules/es6.string.iterator":230,"../modules/web.dom.iterable":237}],132:[function(require,module,exports){
require('../../modules/es6.object.assign');
module.exports = require('../../modules/_core').Object.assign;

},{"../../modules/_core":149,"../../modules/es6.object.assign":222}],133:[function(require,module,exports){
require('../../modules/es6.object.create');
var $Object = require('../../modules/_core').Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};

},{"../../modules/_core":149,"../../modules/es6.object.create":223}],134:[function(require,module,exports){
require('../../modules/es6.object.define-property');
var $Object = require('../../modules/_core').Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};

},{"../../modules/_core":149,"../../modules/es6.object.define-property":224}],135:[function(require,module,exports){
require('../../modules/es7.object.entries');
module.exports = require('../../modules/_core').Object.entries;

},{"../../modules/_core":149,"../../modules/es7.object.entries":232}],136:[function(require,module,exports){
require('../../modules/es6.object.get-prototype-of');
module.exports = require('../../modules/_core').Object.getPrototypeOf;

},{"../../modules/_core":149,"../../modules/es6.object.get-prototype-of":225}],137:[function(require,module,exports){
require('../../modules/es6.object.keys');
module.exports = require('../../modules/_core').Object.keys;

},{"../../modules/_core":149,"../../modules/es6.object.keys":226}],138:[function(require,module,exports){
require('../../modules/es6.object.set-prototype-of');
module.exports = require('../../modules/_core').Object.setPrototypeOf;

},{"../../modules/_core":149,"../../modules/es6.object.set-prototype-of":227}],139:[function(require,module,exports){
require('../modules/es6.object.to-string');
require('../modules/es6.string.iterator');
require('../modules/web.dom.iterable');
require('../modules/es6.promise');
require('../modules/es7.promise.finally');
require('../modules/es7.promise.try');
module.exports = require('../modules/_core').Promise;

},{"../modules/_core":149,"../modules/es6.object.to-string":228,"../modules/es6.promise":229,"../modules/es6.string.iterator":230,"../modules/es7.promise.finally":233,"../modules/es7.promise.try":234,"../modules/web.dom.iterable":237}],140:[function(require,module,exports){
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
require('../../modules/es7.symbol.async-iterator');
require('../../modules/es7.symbol.observable');
module.exports = require('../../modules/_core').Symbol;

},{"../../modules/_core":149,"../../modules/es6.object.to-string":228,"../../modules/es6.symbol":231,"../../modules/es7.symbol.async-iterator":235,"../../modules/es7.symbol.observable":236}],141:[function(require,module,exports){
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks-ext').f('iterator');

},{"../../modules/_wks-ext":215,"../../modules/es6.string.iterator":230,"../../modules/web.dom.iterable":237}],142:[function(require,module,exports){
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],143:[function(require,module,exports){
module.exports = function () { /* empty */ };

},{}],144:[function(require,module,exports){
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],145:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":169}],146:[function(require,module,exports){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-absolute-index":207,"./_to-iobject":209,"./_to-length":210}],147:[function(require,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":148,"./_wks":216}],148:[function(require,module,exports){
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],149:[function(require,module,exports){
var core = module.exports = { version: '2.5.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],150:[function(require,module,exports){
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

},{"./_object-dp":182,"./_property-desc":196}],151:[function(require,module,exports){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":142}],152:[function(require,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],153:[function(require,module,exports){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":158}],154:[function(require,module,exports){
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_global":160,"./_is-object":169}],155:[function(require,module,exports){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],156:[function(require,module,exports){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-gops":187,"./_object-keys":190,"./_object-pie":191}],157:[function(require,module,exports){
var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var has = require('./_has');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_core":149,"./_ctx":151,"./_global":160,"./_has":161,"./_hide":162}],158:[function(require,module,exports){
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],159:[function(require,module,exports){
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_an-object":145,"./_ctx":151,"./_is-array-iter":167,"./_iter-call":170,"./_to-length":210,"./core.get-iterator-method":217}],160:[function(require,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],161:[function(require,module,exports){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],162:[function(require,module,exports){
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_descriptors":153,"./_object-dp":182,"./_property-desc":196}],163:[function(require,module,exports){
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":160}],164:[function(require,module,exports){
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":153,"./_dom-create":154,"./_fails":158}],165:[function(require,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],166:[function(require,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":148}],167:[function(require,module,exports){
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":175,"./_wks":216}],168:[function(require,module,exports){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":148}],169:[function(require,module,exports){
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],170:[function(require,module,exports){
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":145}],171:[function(require,module,exports){
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_hide":162,"./_object-create":181,"./_property-desc":196,"./_set-to-string-tag":201,"./_wks":216}],172:[function(require,module,exports){
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_export":157,"./_hide":162,"./_iter-create":171,"./_iterators":175,"./_library":176,"./_object-gpo":188,"./_redefine":198,"./_set-to-string-tag":201,"./_wks":216}],173:[function(require,module,exports){
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":216}],174:[function(require,module,exports){
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],175:[function(require,module,exports){
module.exports = {};

},{}],176:[function(require,module,exports){
module.exports = true;

},{}],177:[function(require,module,exports){
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_fails":158,"./_has":161,"./_is-object":169,"./_object-dp":182,"./_uid":213}],178:[function(require,module,exports){
var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    var promise = Promise.resolve();
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_cof":148,"./_global":160,"./_task":206}],179:[function(require,module,exports){
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":142}],180:[function(require,module,exports){
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;

},{"./_fails":158,"./_iobject":166,"./_object-gops":187,"./_object-keys":190,"./_object-pie":191,"./_to-object":211}],181:[function(require,module,exports){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":145,"./_dom-create":154,"./_enum-bug-keys":155,"./_html":163,"./_object-dps":183,"./_shared-key":202}],182:[function(require,module,exports){
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":145,"./_descriptors":153,"./_ie8-dom-define":164,"./_to-primitive":212}],183:[function(require,module,exports){
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_an-object":145,"./_descriptors":153,"./_object-dp":182,"./_object-keys":190}],184:[function(require,module,exports){
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_descriptors":153,"./_has":161,"./_ie8-dom-define":164,"./_object-pie":191,"./_property-desc":196,"./_to-iobject":209,"./_to-primitive":212}],185:[function(require,module,exports){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_object-gopn":186,"./_to-iobject":209}],186:[function(require,module,exports){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_enum-bug-keys":155,"./_object-keys-internal":189}],187:[function(require,module,exports){
exports.f = Object.getOwnPropertySymbols;

},{}],188:[function(require,module,exports){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":161,"./_shared-key":202,"./_to-object":211}],189:[function(require,module,exports){
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_array-includes":146,"./_has":161,"./_shared-key":202,"./_to-iobject":209}],190:[function(require,module,exports){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_enum-bug-keys":155,"./_object-keys-internal":189}],191:[function(require,module,exports){
exports.f = {}.propertyIsEnumerable;

},{}],192:[function(require,module,exports){
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_core":149,"./_export":157,"./_fails":158}],193:[function(require,module,exports){
var getKeys = require('./_object-keys');
var toIObject = require('./_to-iobject');
var isEnum = require('./_object-pie').f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

},{"./_object-keys":190,"./_object-pie":191,"./_to-iobject":209}],194:[function(require,module,exports){
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],195:[function(require,module,exports){
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":145,"./_is-object":169,"./_new-promise-capability":179}],196:[function(require,module,exports){
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],197:[function(require,module,exports){
var hide = require('./_hide');
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};

},{"./_hide":162}],198:[function(require,module,exports){
module.exports = require('./_hide');

},{"./_hide":162}],199:[function(require,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_an-object":145,"./_ctx":151,"./_is-object":169,"./_object-gopd":184}],200:[function(require,module,exports){
'use strict';
var global = require('./_global');
var core = require('./_core');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_core":149,"./_descriptors":153,"./_global":160,"./_object-dp":182,"./_wks":216}],201:[function(require,module,exports){
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_has":161,"./_object-dp":182,"./_wks":216}],202:[function(require,module,exports){
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":203,"./_uid":213}],203:[function(require,module,exports){
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
module.exports = function (key) {
  return store[key] || (store[key] = {});
};

},{"./_global":160}],204:[function(require,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_a-function":142,"./_an-object":145,"./_wks":216}],205:[function(require,module,exports){
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_defined":152,"./_to-integer":208}],206:[function(require,module,exports){
var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_cof":148,"./_ctx":151,"./_dom-create":154,"./_global":160,"./_html":163,"./_invoke":165}],207:[function(require,module,exports){
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":208}],208:[function(require,module,exports){
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],209:[function(require,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_defined":152,"./_iobject":166}],210:[function(require,module,exports){
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":208}],211:[function(require,module,exports){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":152}],212:[function(require,module,exports){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":169}],213:[function(require,module,exports){
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],214:[function(require,module,exports){
var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_core":149,"./_global":160,"./_library":176,"./_object-dp":182,"./_wks-ext":215}],215:[function(require,module,exports){
exports.f = require('./_wks');

},{"./_wks":216}],216:[function(require,module,exports){
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_global":160,"./_shared":203,"./_uid":213}],217:[function(require,module,exports){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":147,"./_core":149,"./_iterators":175,"./_wks":216}],218:[function(require,module,exports){
var anObject = require('./_an-object');
var get = require('./core.get-iterator-method');
module.exports = require('./_core').getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

},{"./_an-object":145,"./_core":149,"./core.get-iterator-method":217}],219:[function(require,module,exports){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};

},{"./_classof":147,"./_core":149,"./_iterators":175,"./_wks":216}],220:[function(require,module,exports){
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_create-property":150,"./_ctx":151,"./_export":157,"./_is-array-iter":167,"./_iter-call":170,"./_iter-detect":173,"./_to-length":210,"./_to-object":211,"./core.get-iterator-method":217}],221:[function(require,module,exports){
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":143,"./_iter-define":172,"./_iter-step":174,"./_iterators":175,"./_to-iobject":209}],222:[function(require,module,exports){
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":157,"./_object-assign":180}],223:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":157,"./_object-create":181}],224:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

},{"./_descriptors":153,"./_export":157,"./_object-dp":182}],225:[function(require,module,exports){
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = require('./_to-object');
var $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

},{"./_object-gpo":188,"./_object-sap":192,"./_to-object":211}],226:[function(require,module,exports){
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

},{"./_object-keys":190,"./_object-sap":192,"./_to-object":211}],227:[function(require,module,exports){
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":157,"./_set-proto":199}],228:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"dup":95}],229:[function(require,module,exports){
'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_a-function":142,"./_an-instance":144,"./_classof":147,"./_core":149,"./_ctx":151,"./_export":157,"./_for-of":159,"./_global":160,"./_is-object":169,"./_iter-detect":173,"./_library":176,"./_microtask":178,"./_new-promise-capability":179,"./_perform":194,"./_promise-resolve":195,"./_redefine-all":197,"./_set-species":200,"./_set-to-string-tag":201,"./_species-constructor":204,"./_task":206,"./_wks":216}],230:[function(require,module,exports){
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_iter-define":172,"./_string-at":205}],231:[function(require,module,exports){
'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_an-object":145,"./_descriptors":153,"./_enum-keys":156,"./_export":157,"./_fails":158,"./_global":160,"./_has":161,"./_hide":162,"./_is-array":168,"./_is-object":169,"./_library":176,"./_meta":177,"./_object-create":181,"./_object-dp":182,"./_object-gopd":184,"./_object-gopn":186,"./_object-gopn-ext":185,"./_object-gops":187,"./_object-keys":190,"./_object-pie":191,"./_property-desc":196,"./_redefine":198,"./_set-to-string-tag":201,"./_shared":203,"./_to-iobject":209,"./_to-primitive":212,"./_uid":213,"./_wks":216,"./_wks-define":214,"./_wks-ext":215}],232:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

},{"./_export":157,"./_object-to-array":193}],233:[function(require,module,exports){
// https://github.com/tc39/proposal-promise-finally
'use strict';
var $export = require('./_export');
var core = require('./_core');
var global = require('./_global');
var speciesConstructor = require('./_species-constructor');
var promiseResolve = require('./_promise-resolve');

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

},{"./_core":149,"./_export":157,"./_global":160,"./_promise-resolve":195,"./_species-constructor":204}],234:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-promise-try
var $export = require('./_export');
var newPromiseCapability = require('./_new-promise-capability');
var perform = require('./_perform');

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

},{"./_export":157,"./_new-promise-capability":179,"./_perform":194}],235:[function(require,module,exports){
require('./_wks-define')('asyncIterator');

},{"./_wks-define":214}],236:[function(require,module,exports){
require('./_wks-define')('observable');

},{"./_wks-define":214}],237:[function(require,module,exports){
require('./es6.array.iterator');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var TO_STRING_TAG = require('./_wks')('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

},{"./_global":160,"./_hide":162,"./_iterators":175,"./_wks":216,"./es6.array.iterator":221}],238:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":291}],239:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic');
var BN = require('bn.js');

module.exports = function createECDH(curve) {
	return new ECDH(curve);
};

var aliases = {
	secp256k1: {
		name: 'secp256k1',
		byteLength: 32
	},
	secp224r1: {
		name: 'p224',
		byteLength: 28
	},
	prime256v1: {
		name: 'p256',
		byteLength: 32
	},
	prime192v1: {
		name: 'p192',
		byteLength: 24
	},
	ed25519: {
		name: 'ed25519',
		byteLength: 32
	},
	secp384r1: {
		name: 'p384',
		byteLength: 48
	},
	secp521r1: {
		name: 'p521',
		byteLength: 66
	}
};

aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;

function ECDH(curve) {
	this.curveType = aliases[curve];
	if (!this.curveType ) {
		this.curveType = {
			name: curve
		};
	}
	this.curve = new elliptic.ec(this.curveType.name);
	this.keys = void 0;
}

ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	var otherPub = this.curve.keyFromPublic(other).getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return formatReturnValue(out, enc, this.curveType.byteLength);
};

ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return formatReturnValue(key, enc);
};

ECDH.prototype.getPrivateKey = function (enc) {
	return formatReturnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this.keys._importPublic(pub);
	return this;
};

ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
	return this;
};

function formatReturnValue(bn, enc, len) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (len && buf.length < len) {
		var zeros = new Buffer(len - buf.length);
		zeros.fill(0);
		buf = Buffer.concat([zeros, buf]);
	}
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}

}).call(this,require("buffer").Buffer)
},{"bn.js":93,"buffer":127,"elliptic":256}],240:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"cipher-base":128,"inherits":290,"md5.js":296,"ripemd160":353,"sha.js":356}],241:[function(require,module,exports){
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":296}],242:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":243,"cipher-base":128,"create-hash/md5":241,"inherits":290,"ripemd160":353,"safe-buffer":354,"sha.js":356}],243:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":128,"inherits":290,"safe-buffer":354}],244:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":114,"browserify-sign":121,"browserify-sign/algos":118,"create-ecdh":239,"create-hash":240,"create-hmac":242,"diffie-hellman":251,"pbkdf2":307,"public-encrypt":328,"randombytes":338,"randomfill":339}],245:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":246,"./des/cipher":247,"./des/des":248,"./des/ede":249,"./des/utils":250}],246:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":290,"minimalistic-assert":298}],247:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":298}],248:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":245,"inherits":290,"minimalistic-assert":298}],249:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":245,"inherits":290,"minimalistic-assert":298}],250:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],251:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)
},{"./lib/dh":252,"./lib/generatePrime":253,"./lib/primes.json":254,"buffer":127}],252:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":253,"bn.js":93,"buffer":127,"miller-rabin":297,"randombytes":338}],253:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":93,"miller-rabin":297,"randombytes":338}],254:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],255:[function(require,module,exports){
/*
 * ed2curve: convert Ed25519 signing key pair into Curve25519
 * key pair suitable for Diffie-Hellman key exchange.
 *
 * Written by Dmitry Chestnykh in 2014. Public domain.
 */
/* jshint newcap: false */
(function(root, f) {
  'use strict';
  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl/nacl-fast'));
  else root.ed2curve = f(root.nacl);
}(this, function(nacl) {
  'use strict';
  if (!nacl) throw new Error('tweetnacl not loaded');

  // -- Operations copied from TweetNaCl.js. --

  var gf = function(init) {
    var i, r = new Float64Array(16);
    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
    return r;
  };

  var gf0 = gf(),
      gf1 = gf([1]),
      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);



  function car25519(o) {
    var c;
    var i;
    for (i = 0; i < 16; i++) {
      o[i] += 65536;
      c = Math.floor(o[i] / 65536);
      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);
      o[i] -= (c * 65536);
    }
  }

  function sel25519(p, q, b) {
    var t, c = ~(b-1);
    for (var i = 0; i < 16; i++) {
      t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }

  function unpack25519(o, n) {
    var i;
    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
    o[15] &= 0x7fff;
  }

  // addition
  function A(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;
  }

  // subtraction
  function Z(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;
  }

  // multiplication
  function M(o, a, b) {
    var i, j, t = new Float64Array(31);
    for (i = 0; i < 31; i++) t[i] = 0;
    for (i = 0; i < 16; i++) {
      for (j = 0; j < 16; j++) {
        t[i+j] += a[i] * b[j];
      }
    }
    for (i = 0; i < 15; i++) {
      t[i] += 38 * t[i+16];
    }
    for (i = 0; i < 16; i++) o[i] = t[i];
    car25519(o);
    car25519(o);
  }

  // squaring
  function S(o, a) {
    M(o, a, a);
  }

  // inversion
  function inv25519(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 253; a >= 0; a--) {
      S(c, c);
      if(a !== 2 && a !== 4) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function pack25519(o, n) {
    var i, j, b;
    var m = gf(), t = gf();
    for (i = 0; i < 16; i++) t[i] = n[i];
    car25519(t);
    car25519(t);
    car25519(t);
    for (j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (i = 1; i < 15; i++) {
        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
        m[i-1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
      b = (m[15]>>16) & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1-b);
    }
    for (i = 0; i < 16; i++) {
      o[2*i] = t[i] & 0xff;
      o[2*i+1] = t[i] >> 8;
    }
  }


  function par25519(a) {
    var d = new Uint8Array(32);
    pack25519(d, a);
    return d[0] & 1;
  }



  function vn(x, xi, y, yi, n) {
    var i, d = 0;
    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];
    return (1 & ((d - 1) >>> 8)) - 1;
  }


  function crypto_verify_32(x, xi, y, yi) {
    return vn(x, xi, y, yi, 32);
  }

  function neq25519(a, b) {
    var c = new Uint8Array(32), d = new Uint8Array(32);
    pack25519(c, a);
    pack25519(d, b);
    return crypto_verify_32(c, 0, d, 0);
  }


  function pow2523(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 250; a >= 0; a--) {
      S(c, c);
      if (a !== 1) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function set25519(r, a) {
    var i;
    for (i = 0; i < 16; i++) r[i] = a[i] | 0;
  }

  function unpackneg(r, p) {
    var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

    set25519(r[2], gf1);
    unpack25519(r[1], p);
    S(num, r[1]);
    M(den, num, D);
    Z(num, num, r[2]);
    A(den, r[2], den);

    S(den2, den);
    S(den4, den2);
    M(den6, den4, den2);
    M(t, den6, num);
    M(t, t, den);

    pow2523(t, t);
    M(t, t, num);
    M(t, t, den);
    M(t, t, den);
    M(r[0], t, den);

    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) M(r[0], r[0], I);

    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) return -1;

    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);

    M(r[3], r[0], r[1]);
    return 0;
  }

  // ----

  // Converts Ed25519 public key to Curve25519 public key.
  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p
  function convertPublicKey(pk) {
    var z = new Uint8Array(32),
      q = [gf(), gf(), gf(), gf()],
      a = gf(), b = gf();

    if (unpackneg(q, pk)) return null; // reject invalid key

    var y = q[1];

    A(a, gf1, y);
    Z(b, gf1, y);
    inv25519(b, b);
    M(a, a, b);

    pack25519(z, a);
    return z;
  }

  // Converts Ed25519 secret key to Curve25519 secret key.
  function convertSecretKey(sk) {
    var d = new Uint8Array(64), o = new Uint8Array(32), i;
    nacl.lowlevel.crypto_hash(d, sk, 32);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    for (i = 0; i < 32; i++) o[i] = d[i];
    for (i = 0; i < 64; i++) d[i] = 0;
    return o;
  }

  function convertKeyPair(edKeyPair) {
    var publicKey = convertPublicKey(edKeyPair.publicKey);
    if (!publicKey) return null;
    return {
      publicKey: publicKey,
      secretKey: convertSecretKey(edKeyPair.secretKey)
    };
  }

  return {
    convertPublicKey: convertPublicKey,
    convertSecretKey: convertSecretKey,
    convertKeyPair: convertKeyPair,
  };

}));

},{"tweetnacl/nacl-fast":365}],256:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":271,"./elliptic/curve":259,"./elliptic/curves":262,"./elliptic/ec":263,"./elliptic/eddsa":266,"./elliptic/utils":270,"brorand":94}],257:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":256,"bn.js":93}],258:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":256,"../curve":259,"bn.js":93,"inherits":290}],259:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":257,"./edwards":258,"./mont":260,"./short":261}],260:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":256,"../curve":259,"bn.js":93,"inherits":290}],261:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":256,"../curve":259,"bn.js":93,"inherits":290}],262:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":256,"./precomputed/secp256k1":269,"hash.js":275}],263:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":256,"./key":264,"./signature":265,"bn.js":93,"hmac-drbg":287}],264:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../../elliptic":256,"bn.js":93}],265:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":256,"bn.js":93}],266:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":256,"./key":267,"./signature":268,"hash.js":275}],267:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":256}],268:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":256,"bn.js":93}],269:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],270:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":93,"minimalistic-assert":298,"minimalistic-crypto-utils":299}],271:[function(require,module,exports){
module.exports={
  "_args": [
    [
      {
        "raw": "elliptic@^6.0.0",
        "scope": null,
        "escapedName": "elliptic",
        "name": "elliptic",
        "rawSpec": "^6.0.0",
        "spec": ">=6.0.0 <7.0.0",
        "type": "range"
      },
      "/Users/will/Code/lisk/elements/node_modules/browserify-sign"
    ]
  ],
  "_from": "elliptic@>=6.0.0 <7.0.0",
  "_id": "elliptic@6.4.0",
  "_inCache": true,
  "_location": "/elliptic",
  "_nodeVersion": "7.0.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/elliptic-6.4.0.tgz_1487798866428_0.30510620190761983"
  },
  "_npmUser": {
    "name": "indutny",
    "email": "fedor@indutny.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "elliptic@^6.0.0",
    "scope": null,
    "escapedName": "elliptic",
    "name": "elliptic",
    "rawSpec": "^6.0.0",
    "spec": ">=6.0.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/browserify-sign",
    "/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",
  "_shasum": "cac9af8762c85836187003c8dfe193e5e2eae5df",
  "_shrinkwrap": null,
  "_spec": "elliptic@^6.0.0",
  "_where": "/Users/will/Code/lisk/elements/node_modules/browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.0",
    "inherits": "^2.0.1",
    "minimalistic-assert": "^1.0.0",
    "minimalistic-crypto-utils": "^1.0.0"
  },
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "cac9af8762c85836187003c8dfe193e5e2eae5df",
    "tarball": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "6b0d2b76caae91471649c8e21f0b1d3ba0f96090",
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "name": "elliptic",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.4.0"
}

},{}],272:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

EventEmitter.prototype.listeners = function listeners(type) {
  var evlistener;
  var ret;
  var events = this._events;

  if (!events)
    ret = [];
  else {
    evlistener = events[type];
    if (!evlistener)
      ret = [];
    else if (typeof evlistener === 'function')
      ret = [evlistener.listener || evlistener];
    else
      ret = unwrapListeners(evlistener);
  }

  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],273:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":296,"safe-buffer":354}],274:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":290,"safe-buffer":354,"stream":363}],275:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":276,"./hash/hmac":277,"./hash/ripemd":278,"./hash/sha":279,"./hash/utils":286}],276:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":286,"minimalistic-assert":298}],277:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":286,"minimalistic-assert":298}],278:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":276,"./utils":286}],279:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":280,"./sha/224":281,"./sha/256":282,"./sha/384":283,"./sha/512":284}],280:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":276,"../utils":286,"./common":285}],281:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":286,"./256":282}],282:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":276,"../utils":286,"./common":285,"minimalistic-assert":298}],283:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":286,"./512":284}],284:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":276,"../utils":286,"minimalistic-assert":298}],285:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":286}],286:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":290,"minimalistic-assert":298}],287:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":275,"minimalistic-assert":298,"minimalistic-crypto-utils":299}],288:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],289:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],290:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],291:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],292:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],293:[function(require,module,exports){
(function (process,__dirname){
var nacl_factory = {
  instantiate: function (on_ready, optionsOpt) {
    var options = optionsOpt || {};
    var requested_total_memory = options.requested_total_memory || 33554432;
    var undefined_reference_value = (function (v) { return v; })();

    if (typeof on_ready !== 'function') {
      throw new Error("nacl_factory: Expects on_ready callback as first argument. New in v1.1.0.");
    }

    return (function (window, document) {
      var on_ready_call_needed = false;
      var Module = {
        TOTAL_MEMORY: requested_total_memory,
        onRuntimeInitialized: function () {
          if (nacl) {
            on_ready(nacl);
          } else {
            on_ready_call_needed = true;
          }
        }
      };
      if (options.memoryInitializerPrefixURL) {
        Module.memoryInitializerPrefixURL = options.memoryInitializerPrefixURL;
      }
      var nacl_raw = Module;
var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[null,null,null,null,null,null,null,null],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};cwrap=function cwrap(ident,returnType,argTypes){return(function(){return ccall(ident,returnType,argTypes,arguments)})}}))();Module["ccall"]=ccall;Module["cwrap"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(typeof _sbrk!=="undefined"&&!_sbrk.called||!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module["getMemory"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){return func}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||5e7;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){TOTAL_MEMORY=totalMemory}if(Module["buffer"]){buffer=Module["buffer"]}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[0]=255;if(HEAPU8[0]!==255||HEAPU8[3]!==0)throw"Typed arrays 2 must be run on a little-endian system";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var ASM_CONSTS=[(function(){{return Module.getRandomValue()}}),(function(){{if(Module.getRandomValue===undefined){try{var window_="object"===typeof window?window:self,crypto_=typeof window_.crypto!=="undefined"?window_.crypto:window_.msCrypto,randomValuesStandard=(function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0});randomValuesStandard();Module.getRandomValue=randomValuesStandard}catch(e){try{var crypto=require("crypto"),randomValueNodeJS=(function(){var buf=crypto.randomBytes(4);return(buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0});randomValueNodeJS();Module.getRandomValue=randomValueNodeJS}catch(e){throw"No secure random number generator found"}}}}})];function _emscripten_asm_const_i(code){return ASM_CONSTS[code]()}function _emscripten_asm_const_v(code){return ASM_CONSTS[code]()}STATIC_BASE=8;STATICTOP=STATIC_BASE+35728;__ATINIT__.push();allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,5,199,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,122,19,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,133,180,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,250,236,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,237,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,238,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,217,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,218,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,219,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,8,201,188,243,103,230,9,106,59,167,202,132,133,174,103,187,43,248,148,254,114,243,110,60,241,54,29,95,58,245,79,165,209,130,230,173,127,82,14,81,31,108,62,43,140,104,5,155,107,189,65,251,171,217,131,31,121,33,126,19,25,205,224,91,182,120,89,255,133,114,211,0,189,110,21,255,15,10,106,0,41,192,1,0,152,232,121,255,188,60,160,255,153,113,206,255,0,183,226,254,180,13,72,255,176,160,14,254,211,201,134,255,158,24,143,0,127,105,53,0,96,12,189,0,167,215,251,255,159,76,128,254,106,101,225,255,30,252,4,0,146,12,174,0,89,241,178,254,10,229,166,255,123,221,42,254,30,20,212,0,82,128,3,0,48,209,243,0,119,121,64,255,50,227,156,255,0,110,197,1,103,27,144,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,47,99,168,254,170,226,153,255,102,179,216,0,226,141,122,255,122,66,153,254,182,245,134,0,227,228,25,1,214,57,235,255,216,173,56,255,181,231,210,0,119,128,157,255,129,95,136,255,110,126,51,0,2,169,183,255,7,130,98,254,69,176,94,255,116,4,227,1,217,242,145,255,202,173,31,1,105,1,39,255,46,175,69,0,228,47,58,255,215,224,69,254,207,56,69,255,16,254,139,255,23,207,212,255,202,20,126,255,95,213,96,255,9,176,33,0,200,5,207,255,241,42,128,254,35,33,192,255,248,229,196,1,129,17,120,0,251,103,151,255,7,52,112,255,140,56,66,255,40,226,245,255,217,70,37,254,172,214,9,255,72,67,134,1,146,192,214,255,44,38,112,0,68,184,75,255,206,90,251,0,149,235,141,0,181,170,58,0,116,244,239,0,92,157,2,0,102,173,98,0,233,137,96,1,127,49,203,0,5,155,148,0,23,148,9,255,211,122,12,0,34,134,26,255,219,204,136,0,134,8,41,255,224,83,43,254,85,25,247,0,109,127,0,254,169,136,48,0,238,119,219,255,231,173,213,0,206,18,254,254,8,186,7,255,126,9,7,1,111,42,72,0,111,52,236,254,96,63,141,0,147,191,127,254,205,78,192,255,14,106,237,1,187,219,76,0,175,243,187,254,105,89,173,0,85,25,89,1,162,243,148,0,2,118,209,254,33,158,9,0,139,163,46,255,93,70,40,0,108,42,142,254,111,252,142,255,155,223,144,0,51,229,167,255,73,252,155,255,94,116,12,255,152,160,218,255,156,238,37,255,179,234,207,255,197,0,179,255,154,164,141,0,225,196,104,0,10,35,25,254,209,212,242,255,97,253,222,254,184,101,229,0,222,18,127,1,164,136,135,255,30,207,140,254,146,97,243,0,129,192,26,254,201,84,33,255,111,10,78,255,147,81,178,255,4,4,24,0,161,238,215,255,6,141,33,0,53,215,14,255,41,181,208,255,231,139,157,0,179,203,221,255,255,185,113,0,189,226,172,255,113,66,214,255,202,62,45,255,102,64,8,255,78,174,16,254,133,117,68,255,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,234,113,60,255,37,255,57,255,69,178,182,254,128,208,179,0,118,26,125,254,3,7,214,255,241,50,77,255,85,203,197,255,211,135,250,255,25,48,100,255,187,213,180,254,17,88,105,0,83,209,158,1,5,115,98,0,4,174,60,254,171,55,110,255,217,181,17,255,20,188,170,0,146,156,102,254,87,214,174,255,114,122,155,1,233,44,170,0,127,8,239,1,214,236,234,0,175,5,219,0,49,106,61,255,6,66,208,255,2,106,110,255,81,234,19,255,215,107,192,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,178,9,252,254,100,110,212,0,14,5,167,0,233,239,163,255,28,151,157,1,101,146,10,255,254,158,70,254,71,249,228,0,88,30,50,0,68,58,160,255,191,24,104,1,129,66,129,255,192,50,85,255,8,179,138,255,38,250,201,0,115,80,160,0,131,230,113,0,125,88,147,0,90,68,199,0,253,76,158,0,28,255,118,0,113,250,254,0,66,75,46,0,230,218,43,0,229,120,186,1,148,68,43,0,136,124,238,1,187,107,197,255,84,53,246,255,51,116,254,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,68,113,21,255,222,186,59,255,66,7,241,1,69,6,72,0,86,156,108,254,55,167,89,0,109,52,219,254,13,176,23,255,196,44,106,255,239,149,71,255,164,140,125,255,159,173,1,0,51,41,231,0,145,62,33,0,138,111,93,1,185,83,69,0,144,115,46,0,97,151,16,255,24,228,26,0,49,217,226,0,113,75,234,254,193,153,12,255,182,48,96,255,14,13,26,0,128,195,249,254,69,193,59,0,132,37,81,254,125,106,60,0,214,240,169,1,164,227,66,0,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,143,62,221,0,129,89,214,255,55,139,5,254,68,20,191,255,14,204,178,1,35,195,217,0,47,51,206,1,38,246,165,0,206,27,6,254,158,87,36,0,217,52,146,255,125,123,215,255,85,60,31,255,171,13,7,0,218,245,88,254,252,35,60,0,55,214,160,255,133,101,56,0,224,32,19,254,147,64,234,0,26,145,162,1,114,118,125,0,248,252,250,0,101,94,196,255,198,141,226,254,51,42,182,0,135,12,9,254,109,172,210,255,197,236,194,1,241,65,154,0,48,156,47,255,153,67,55,255,218,165,34,254,74,180,179,0,218,66,71,1,88,122,99,0,212,181,219,255,92,42,231,255,239,0,154,0,245,77,183,255,94,81,170,1,18,213,216,0,171,93,71,0,52,94,248,0,18,151,161,254,197,209,66,255,174,244,15,254,162,48,183,0,49,61,240,254,182,93,195,0,199,228,6,1,200,5,17,255,137,45,237,255,108,148,4,0,90,79,237,255,39,63,77,255,53,82,207,1,142,22,118,255,101,232,18,1,92,26,67,0,5,200,88,255,33,168,138,255,149,225,72,0,2,209,27,255,44,245,168,1,220,237,17,255,30,211,105,254,141,238,221,0,128,80,245,254,111,254,14,0,222,95,190,1,223,9,241,0,146,76,212,255,108,205,104,255,63,117,153,0,144,69,48,0,35,228,111,0,192,33,193,255,112,214,190,254,115,152,151,0,23,102,88,0,51,74,248,0,226,199,143,254,204,162,101,255,208,97,189,1,245,104,18,0,230,246,30,255,23,148,69,0,110,88,52,254,226,181,89,255,208,47,90,254,114,161,80,255,33,116,248,0,179,152,87,255,69,144,177,1,88,238,26,255,58,32,113,1,1,77,69,0,59,121,52,255,152,238,83,0,52,8,193,0,231,39,233,255,199,34,138,0,222,68,173,0,91,57,242,254,220,210,127,255,192,7,246,254,151,35,187,0,195,236,165,0,111,93,206,0,212,247,133,1,154,133,209,255,155,231,10,0,64,78,38,0,122,249,100,1,30,19,97,255,62,91,249,1,248,133,77,0,197,63,168,254,116,10,82,0,184,236,113,254,212,203,194,255,61,100,252,254,36,5,202,255,119,91,153,255,129,79,29,0,103,103,171,254,237,215,111,255,216,53,69,0,239,240,23,0,194,149,221,255,38,225,222,0,232,255,180,254,118,82,133,255,57,209,177,1,139,232,133,0,158,176,46,254,194,115,46,0,88,247,229,1,28,103,191,0,221,222,175,254,149,235,44,0,151,228,25,254,218,105,103,0,142,85,210,0,149,129,190,255,213,65,94,254,117,134,224,255,82,198,117,0,157,221,220,0,163,101,36,0,197,114,37,0,104,172,166,254,11,182,0,0,81,72,188,255,97,188,16,255,69,6,10,0,199,147,145,255,8,9,115,1,65,214,175,255,217,173,209,0,80,127,166,0,247,229,4,254,167,183,124,255,90,28,204,254,175,59,240,255,11,41,248,1,108,40,51,255,144,177,195,254,150,250,126,0,138,91,65,1,120,60,222,255,245,193,239,0,29,214,189,255,128,2,25,0,80,154,162,0,77,220,107,1,234,205,74,255,54,166,103,255,116,72,9,0,228,94,47,255,30,200,25,255,35,214,89,255,61,176,140,255,83,226,163,255,75,130,172,0,128,38,17,0,95,137,152,255,215,124,159,1,79,93,0,0,148,82,157,254,195,130,251,255,40,202,76,255,251,126,224,0,157,99,62,254,207,7,225,255,96,68,195,0,140,186,157,255,131,19,231,255,42,128,254,0,52,219,61,254,102,203,72,0,141,7,11,255,186,164,213,0,31,122,119,0,133,242,145,0,208,252,232,255,91,213,182,255,143,4,250,254,249,215,74,0,165,30,111,1,171,9,223,0,229,123,34,1,92,130,26,255,77,155,45,1,195,139,28,255,59,224,78,0,136,17,247,0,108,121,32,0,79,250,189,255,96,227,252,254,38,241,62,0,62,174,125,255,155,111,93,255,10,230,206,1,97,197,40,255,0,49,57,254,65,250,13,0,18,251,150,255,220,109,210,255,5,174,166,254,44,129,189,0,235,35,147,255,37,247,141,255,72,141,4,255,103,107,255,0,247,90,4,0,53,44,42,0,2,30,240,0,4,59,63,0,88,78,36,0,113,167,180,0,190,71,193,255,199,158,164,255,58,8,172,0,77,33,12,0,65,63,3,0,153,77,33,255,172,254,102,1,228,221,4,255,87,30,254,1,146,41,86,255,138,204,239,254,108,141,17,255,187,242,135,0,210,208,127,0,68,45,14,254,73,96,62,0,81,60,24,255,170,6,36,255,3,249,26,0,35,213,109,0,22,129,54,255,21,35,225,255,234,61,56,255,58,217,6,0,143,124,88,0,236,126,66,0,209,38,183,255,34,238,6,255,174,145,102,0,95,22,211,0,196,15,153,254,46,84,232,255,117,34,146,1,231,250,74,255,27,134,100,1,92,187,195,255,170,198,112,0,120,28,42,0,209,70,67,0,29,81,31,0,29,168,100,1,169,173,160,0,107,35,117,0,62,96,59,255,81,12,69,1,135,239,190,255,220,252,18,0,163,220,58,255,137,137,188,255,83,102,109,0,96,6,76,0,234,222,210,255,185,174,205,1,60,158,213,255,13,241,214,0,172,129,140,0,93,104,242,0,192,156,251,0,43,117,30,0,225,81,158,0,127,232,218,0,226,28,203,0,233,27,151,255,117,43,5,255,242,14,47,255,33,20,6,0,137,251,44,254,27,31,245,255,183,214,125,254,40,121,149,0,186,158,213,255,89,8,227,0,69,88,0,254,203,135,225,0,201,174,203,0,147,71,184,0,18,121,41,254,94,5,78,0,224,214,240,254,36,5,180,0,251,135,231,1,163,138,212,0,210,249,116,254,88,129,187,0,19,8,49,254,62,14,144,255,159,76,211,0,214,51,82,0,109,117,228,254,103,223,203,255,75,252,15,1,154,71,220,255,23,13,91,1,141,168,96,255,181,182,133,0,250,51,55,0,234,234,212,254,175,63,158,0,39,240,52,1,158,189,36,255,213,40,85,1,32,180,247,255,19,102,26,1,84,24,97,255,69,21,222,0,148,139,122,255,220,213,235,1,232,203,255,0,121,57,147,0,227,7,154,0,53,22,147,1,72,1,225,0,82,134,48,254,83,60,157,255,145,72,169,0,34,103,239,0,198,233,47,0,116,19,4,255,184,106,9,255,183,129,83,0,36,176,230,1,34,103,72,0,219,162,134,0,245,42,158,0,32,149,96,254,165,44,144,0,202,239,72,254,215,150,5,0,42,66,36,1,132,215,175,0,86,174,86,255,26,197,156,255,49,232,135,254,103,182,82,0,253,128,176,1,153,178,122,0,245,250,10,0,236,24,178,0,137,106,132,0,40,29,41,0,50,30,152,255,124,105,38,0,230,191,75,0,143,43,170,0,44,131,20,255,44,13,23,255,237,255,155,1,159,109,100,255,112,181,24,255,104,220,108,0,55,211,131,0,99,12,213,255,152,151,145,255,238,5,159,0,97,155,8,0,33,108,81,0,1,3,103,0,62,109,34,255,250,155,180,0,32,71,195,255,38,70,145,1,159,95,245,0,69,229,101,1,136,28,240,0,79,224,25,0,78,110,121,255,248,168,124,0,187,128,247,0,2,147,235,254,79,11,132,0,70,58,12,1,181,8,163,255,79,137,133,255,37,170,11,255,141,243,85,255,176,231,215,255,204,150,164,255,239,215,39,255,46,87,156,254,8,163,88,255,172,34,232,0,66,44,102,255,27,54,41,254,236,99,87,255,41,123,169,1,52,114,43,0,117,134,40,0,155,134,26,0,231,207,91,254,35,132,38,255,19,102,125,254,36,227,133,255,118,3,113,255,29,13,124,0,152,96,74,1,88,146,206,255,167,191,220,254,162,18,88,255,182,100,23,0,31,117,52,0,81,46,106,1,12,2,7,0,69,80,201,1,209,246,172,0,12,48,141,1,224,211,88,0,116,226,159,0,122,98,130,0,65,236,234,1,225,226,9,255,207,226,123,1,89,214,59,0,112,135,88,1,90,244,203,255,49,11,38,1,129,108,186,0,89,112,15,1,101,46,204,255,127,204,45,254,79,255,221,255,51,73,18,255,127,42,101,255,241,21,202,0,160,227,7,0,105,50,236,0,79,52,197,255,104,202,208,1,180,15,16,0,101,197,78,255,98,77,203,0,41,185,241,1,35,193,124,0,35,155,23,255,207,53,192,0,11,125,163,1,249,158,185,255,4,131,48,0,21,93,111,255,61,121,231,1,69,200,36,255,185,48,185,255,111,238,21,255,39,50,25,255,99,215,163,255,87,212,30,255,164,147,5,255,128,6,35,1,108,223,110,255,194,76,178,0,74,101,180,0,243,47,48,0,174,25,43,255,82,173,253,1,54,114,192,255,40,55,91,0,215,108,176,255,11,56,7,0,224,233,76,0,209,98,202,254,242,25,125,0,44,193,93,254,203,8,177,0,135,176,19,0,112,71,213,255,206,59,176,1,4,67,26,0,14,143,213,254,42,55,208,255,60,67,120,0,193,21,163,0,99,164,115,0,10,20,118,0,156,212,222,254,160,7,217,255,114,245,76,1,117,59,123,0,176,194,86,254,213,15,176,0,78,206,207,254,213,129,59,0,233,251,22,1,96,55,152,255,236,255,15,255,197,89,84,255,93,149,133,0,174,160,113,0,234,99,169,255,152,116,88,0,144,164,83,255,95,29,198,255,34,47,15,255,99,120,134,255,5,236,193,0,249,247,126,255,147,187,30,0,50,230,117,255,108,217,219,255,163,81,166,255,72,25,169,254,155,121,79,255,28,155,89,254,7,126,17,0,147,65,33,1,47,234,253,0,26,51,18,0,105,83,199,255,163,196,230,0,113,248,164,0,226,254,218,0,189,209,203,255,164,247,222,254,255,35,165,0,4,188,243,1,127,179,71,0,37,237,254,255,100,186,240,0,5,57,71,254,103,72,73,255,244,18,81,254,229,210,132,255,238,6,180,255,11,229,174,255,227,221,192,1,17,49,28,0,163,215,196,254,9,118,4,255,51,240,71,0,113,129,109,255,76,240,231,0,188,177,127,0,125,71,44,1,26,175,243,0,94,169,25,254,27,230,29,0,15,139,119,1,168,170,186,255,172,197,76,255,252,75,188,0,137,124,196,0,72,22,96,255,45,151,249,1,220,145,100,0,64,192,159,255,120,239,226,0,129,178,146,0,0,192,125,0,235,138,234,0,183,157,146,0,83,199,192,255,184,172,72,255,73,225,128,0,77,6,250,255,186,65,67,0,104,246,207,0,188,32,138,255,218,24,242,0,67,138,81,254,237,129,121,255,20,207,150,1,41,199,16,255,6,20,128,0,159,118,5,0,181,16,143,255,220,38,15,0,23,64,147,254,73,26,13,0,87,228,57,1,204,124,128,0,43,24,223,0,219,99,199,0,22,75,20,255,19,27,126,0,157,62,215,0,110,29,230,0,179,167,255,1,54,252,190,0,221,204,182,254,179,158,65,255,81,157,3,0,194,218,159,0,170,223,0,0,224,11,32,255,38,197,98,0,168,164,37,0,23,88,7,1,164,186,110,0,96,36,134,0,234,242,229,0,250,121,19,0,242,254,112,255,3,47,94,1,9,239,6,255,81,134,153,254,214,253,168,255,67,124,224,0,245,95,74,0,28,30,44,254,1,109,220,255,178,89,89,0,252,36,76,0,24,198,46,255,76,77,111,0,134,234,136,255,39,94,29,0,185,72,234,255,70,68,135,255,231,102,7,254,77,231,140,0,167,47,58,1,148,97,118,255,16,27,225,1,166,206,143,255,110,178,214,255,180,131,162,0,143,141,225,1,13,218,78,255,114,153,33,1,98,104,204,0,175,114,117,1,167,206,75,0,202,196,83,1,58,64,67,0,138,47,111,1,196,247,128,255,137,224,224,254,158,112,207,0,154,100,255,1,134,37,107,0,198,128,79,255,127,209,155,255,163,254,185,254,60,14,243,0,31,219,112,254,29,217,65,0,200,13,116,254,123,60,196,255,224,59,184,254,242,89,196,0,123,16,75,254,149,16,206,0,69,254,48,1,231,116,223,255,209,160,65,1,200,80,98,0,37,194,184,254,148,63,34,0,139,240,65,255,217,144,132,255,56,38,45,254,199,120,210,0,108,177,166,255,160,222,4,0,220,126,119,254,165,107,160,255,82,220,248,1,241,175,136,0,144,141,23,255,169,138,84,0,160,137,78,255,226,118,80,255,52,27,132,255,63,96,139,255,152,250,39,0,188,155,15,0,232,51,150,254,40,15,232,255,240,229,9,255,137,175,27,255,75,73,97,1,218,212,11,0,135,5,162,1,107,185,213,0,2,249,107,255,40,242,70,0,219,200,25,0,25,157,13,0,67,82,80,255,196,249,23,255,145,20,149,0,50,72,146,0,94,76,148,1,24,251,65,0,31,192,23,0,184,212,201,255,123,233,162,1,247,173,72,0,162,87,219,254,126,134,89,0,159,11,12,254,166,105,29,0,73,27,228,1,113,120,183,255,66,163,109,1,212,143,11,255,159,231,168,1,255,128,90,0,57,14,58,254,89,52,10,255,253,8,163,1,0,145,210,255,10,129,85,1,46,181,27,0,103,136,160,254,126,188,209,255,34,35,111,0,215,219,24,255,212,11,214,254,101,5,118,0,232,197,133,255,223,167,109,255,237,80,86,255,70,139,94,0,158,193,191,1,155,15,51,255,15,190,115,0,78,135,207,255,249,10,27,1,181,125,233,0,95,172,13,254,170,213,161,255,39,236,138,255,95,93,87,255,190,128,95,0,125,15,206,0,166,150,159,0,227,15,158,255,206,158,120,255,42,141,128,0,101,178,120,1,156,109,131,0,218,14,44,254,247,168,206,255,212,112,28,0,112,17,228,255,90,16,37,1,197,222,108,0,254,207,83,255,9,90,243,255,243,244,172,0,26,88,115,255,205,116,122,0,191,230,193,0,180,100,11,1,217,37,96,255,154,78,156,0,235,234,31,255,206,178,178,255,149,192,251,0,182,250,135,0,246,22,105,0,124,193,109,255,2,210,149,255,169,17,170,0,0,96,110,255,117,9,8,1,50,123,40,255,193,189,99,0,34,227,160,0,48,80,70,254,211,51,236,0,45,122,245,254,44,174,8,0,173,37,233,255,158,65,171,0,122,69,215,255,90,80,2,255,131,106,96,254,227,114,135,0,205,49,119,254,176,62,64,255,82,51,17,255,241,20,243,255,130,13,8,254,128,217,243,255,162,27,1,254,90,118,241,0,246,198,246,255,55,16,118,255,200,159,157,0,163,17,1,0,140,107,121,0,85,161,118,255,38,0,149,0,156,47,238,0,9,166,166,1,75,98,181,255,50,74,25,0,66,15,47,0,139,225,159,0,76,3,142,255,14,238,184,0,11,207,53,255,183,192,186,1,171,32,174,255,191,76,221,1,247,170,219,0,25,172,50,254,217,9,233,0,203,126,68,255,183,92,48,0,127,167,183,1,65,49,254,0,16,63,127,1,254,21,170,255,59,224,127,254,22,48,63,255,27,78,130,254,40,195,29,0,250,132,112,254,35,203,144,0,104,169,168,0,207,253,30,255,104,40,38,254,94,228,88,0,206,16,128,255,212,55,122,255,223,22,234,0,223,197,127,0,253,181,181,1,145,102,118,0,236,153,36,255,212,217,72,255,20,38,24,254,138,62,62,0,152,140,4,0,230,220,99,255,1,21,212,255,148,201,231,0,244,123,9,254,0,171,210,0,51,58,37,255,1,255,14,255,244,183,145,254,0,242,166,0,22,74,132,0,121,216,41,0,95,195,114,254,133,24,151,255,156,226,231,255,247,5,77,255,246,148,115,254,225,92,81,255,222,80,246,254,170,123,89,255,74,199,141,0,29,20,8,255,138,136,70,255,93,75,92,0,221,147,49,254,52,126,226,0,229,124,23,0,46,9,181,0,205,64,52,1,131,254,28,0,151,158,212,0,131,64,78,0,206,25,171,0,0,230,139,0,191,253,110,254,103,247,167,0,64,40,40,1,42,165,241,255,59,75,228,254,124,243,189,255,196,92,178,255,130,140,86,255,141,89,56,1,147,198,5,255,203,248,158,254,144,162,141,0,11,172,226,0,130,42,21,255,1,167,143,255,144,36,36,255,48,88,164,254,168,170,220,0,98,71,214,0,91,208,79,0,159,76,201,1,166,42,214,255,69,255,0,255,6,128,125,255,190,1,140,0,146,83,218,255,215,238,72,1,122,127,53,0,189,116,165,255,84,8,66,255,214,3,208,255,213,110,133,0,195,168,44,1,158,231,69,0,162,64,200,254,91,58,104,0,182,58,187,254,249,228,136,0,203,134,76,254,99,221,233,0,75,254,214,254,80,69,154,0,64,152,248,254,236,136,202,255,157,105,153,254,149,175,20,0,22,35,19,255,124,121,233,0,186,250,198,254,132,229,139,0,137,80,174,255,165,125,68,0,144,202,148,254,235,239,248,0,135,184,118,0,101,94,17,255,122,72,70,254,69,130,146,0,127,222,248,1,69,127,118,255,30,82,215,254,188,74,19,255,229,167,194,254,117,25,66,255,65,234,56,254,213,22,156,0,151,59,93,254,45,28,27,255,186,126,164,255,32,6,239,0,127,114,99,1,219,52,2,255,99,96,166,254,62,190,126,255,108,222,168,1,75,226,174,0,230,226,199,0,60,117,218,255,252,248,20,1,214,188,204,0,31,194,134,254,123,69,192,255,169,173,36,254,55,98,91,0,223,42,102,254,137,1,102,0,157,90,25,0,239,122,64,255,252,6,233,0,7,54,20,255,82,116,174,0,135,37,54,255,15,186,125,0,227,112,175,255,100,180,225,255,42,237,244,255,244,173,226,254,248,18,33,0,171,99,150,255,74,235,50,255,117,82,32,254,106,168,237,0,207,109,208,1,228,9,186,0,135,60,169,254,179,92,143,0,244,170,104,255,235,45,124,255,70,99,186,0,117,137,183,0,224,31,215,0,40,9,100,0,26,16,95,1,68,217,87,0,8,151,20,255,26,100,58,255,176,165,203,1,52,118,70,0,7,32,254,254,244,254,245,255,167,144,194,255,125,113,23,255,176,121,181,0,136,84,209,0,138,6,30,255,89,48,28,0,33,155,14,255,25,240,154,0,141,205,109,1,70,115,62,255,20,40,107,254,138,154,199,255,94,223,226,255,157,171,38,0,163,177,25,254,45,118,3,255,14,222,23,1,209,190,81,255,118,123,232,1,13,213,101,255,123,55,123,254,27,246,165,0,50,99,76,255,140,214,32,255,97,65,67,255,24,12,28,0,174,86,78,1,64,247,96,0,160,135,67,0,66,55,243,255,147,204,96,255,26,6,33,255,98,51,83,1,153,213,208,255,2,184,54,255,25,218,11,0,49,67,246,254,18,149,72,255,13,25,72,0,42,79,214,0,42,4,38,1,27,139,144,255,149,187,23,0,18,164,132,0,245,84,184,254,120,198,104,255,126,218,96,0,56,117,234,255,13,29,214,254,68,47,10,255,167,154,132,254,152,38,198,0,66,178,89,255,200,46,171,255,13,99,83,255,210,187,253,255,170,45,42,1,138,209,124,0,214,162,141,0,12,230,156,0,102,36,112,254,3,147,67,0,52,215,123,255,233,171,54,255,98,137,62,0,247,218,39,255,231,218,236,0,247,191,127,0,195,146,84,0,165,176,92,255,19,212,94,255,17,74,227,0,88,40,153,1,198,147,1,255,206,67,245,254,240,3,218,255,61,141,213,255,97,183,106,0,195,232,235,254,95,86,154,0,209,48,205,254,118,209,241,255,240,120,223,1,213,29,159,0,163,127,147,255,13,218,93,0,85,24,68,254,70,20,80,255,189,5,140,1,82,97,254,255,99,99,191,255,132,84,133,255,107,218,116,255,112,122,46,0,105,17,32,0,194,160,63,255,68,222,39,1,216,253,92,0,177,105,205,255,149,201,195,0,42,225,11,255,40,162,115,0,9,7,81,0,165,218,219,0,180,22,0,254,29,146,252,255,146,207,225,1,180,135,96,0,31,163,112,0,177,11,219,255,133,12,193,254,43,78,50,0,65,113,121,1,59,217,6,255,110,94,24,1,112,172,111,0,7,15,96,0,36,85,123,0,71,150,21,255,208,73,188,0,192,11,167,1,213,245,34,0,9,230,92,0,162,142,39,255,215,90,27,0,98,97,89,0,94,79,211,0,90,157,240,0,95,220,126,1,102,176,226,0,36,30,224,254,35,31,127,0,231,232,115,1,85,83,130,0,210,73,245,255,47,143,114,255,68,65,197,0,59,72,62,255,183,133,173,254,93,121,118,255,59,177,81,255,234,69,173,255,205,128,177,0,220,244,51,0,26,244,209,1,73,222,77,255,163,8,96,254,150,149,211,0,158,254,203,1,54,127,139,0,161,224,59,0,4,109,22,255,222,42,45,255,208,146,102,255,236,142,187,0,50,205,245,255,10,74,89,254,48,79,142,0,222,76,130,255,30,166,63,0,236,12,13,255,49,184,244,0,187,113,102,0,218,101,253,0,153,57,182,254,32,150,42,0,25,198,146,1,237,241,56,0,140,68,5,0,91,164,172,255,78,145,186,254,67,52,205,0,219,207,129,1,109,115,17,0,54,143,58,1,21,248,120,255,179,255,30,0,193,236,66,255,1,255,7,255,253,192,48,255,19,69,217,1,3,214,0,255,64,101,146,1,223,125,35,255,235,73,179,255,249,167,226,0,225,175,10,1,97,162,58,0,106,112,171,1,84,172,5,255,133,140,178,255,134,245,142,0,97,90,125,255,186,203,185,255,223,77,23,255,192,92,106,0,15,198,115,255,217,152,248,0,171,178,120,255,228,134,53,0,176,54,193,1,250,251,53,0,213,10,100,1,34,199,106,0,151,31,244,254,172,224,87,255,14,237,23,255,253,85,26,255,127,39,116,255,172,104,100,0,251,14,70,255,212,208,138,255,253,211,250,0,176,49,165,0,15,76,123,255,37,218,160,255,92,135,16,1,10,126,114,255,70,5,224,255,247,249,141,0,68,20,60,1,241,210,189,255,195,217,187,1,151,3,113,0,151,92,174,0,231,62,178,255,219,183,225,0,23,23,33,255,205,181,80,0,57,184,248,255,67,180,1,255,90,123,93,255,39,0,162,255,96,248,52,255,84,66,140,0,34,127,228,255,194,138,7,1,166,110,188,0,21,17,155,1,154,190,198,255,214,80,59,255,18,7,143,0,72,29,226,1,199,217,249,0,232,161,71,1,149,190,201,0,217,175,95,254,113,147,67,255,138,143,199,255,127,204,1,0,29,182,83,1,206,230,155,255,186,204,60,0,10,125,85,255,232,96,25,255,255,89,247,255,213,254,175,1,232,193,81,0,28,43,156,254,12,69,8,0,147,24,248,0,18,198,49,0,134,60,35,0,118,246,18,255,49,88,254,254,228,21,186,255,182,65,112,1,219,22,1,255,22,126,52,255,189,53,49,255,112,25,143,0,38,127,55,255,226,101,163,254,208,133,61,255,137,69,174,1,190,118,145,255,60,98,219,255,217,13,245,255,250,136,10,0,84,254,226,0,201,31,125,1,240,51,251,255,31,131,130,255,2,138,50,255,215,215,177,1,223,12,238,255,252,149,56,255,124,91,68,255,72,126,170,254,119,255,100,0,130,135,232,255,14,79,178,0,250,131,197,0,138,198,208,0,121,216,139,254,119,18,36,255,29,193,122,0,16,42,45,255,213,240,235,1,230,190,169,255,198,35,228,254,110,173,72,0,214,221,241,255,56,148,135,0,192,117,78,254,141,93,207,255,143,65,149,0,21,18,98,255,95,44,244,1,106,191,77,0,254,85,8,254,214,110,176,255,73,173,19,254,160,196,199,255,237,90,144,0,193,172,113,255,200,155,136,254,228,90,221,0,137,49,74,1,164,221,215,255,209,189,5,255,105,236,55,255,42,31,129,1,193,255,236,0,46,217,60,0,138,88,187,255,226,82,236,255,81,69,151,255,142,190,16,1,13,134,8,0,127,122,48,255,81,64,156,0,171,243,139,0,237,35,246,0,122,143,193,254,212,122,146,0,95,41,255,1,87,132,77,0,4,212,31,0,17,31,78,0,39,45,173,254,24,142,217,255,95,9,6,255,227,83,6,0,98,59,130,254,62,30,33,0,8,115,211,1,162,97,128,255,7,184,23,254,116,28,168,255,248,138,151,255,98,244,240,0,186,118,130,0,114,248,235,255,105,173,200,1,160,124,71,255,94,36,164,1,175,65,146,255,238,241,170,254,202,198,197,0,228,71,138,254,45,246,109,255,194,52,158,0,133,187,176,0,83,252,154,254,89,189,221,255,170,73,252,0,148,58,125,0,36,68,51,254,42,69,177,255,168,76,86,255,38,100,204,255,38,53,35,0,175,19,97,0,225,238,253,255,81,81,135,0,210,27,255,254,235,73,107,0,8,207,115,0,82,127,136,0,84,99,21,254,207,19,136,0,100,164,101,0,80,208,77,255,132,207,237,255,15,3,15,255,33,166,110,0,156,95,85,255,37,185,111,1,150,106,35,255,166,151,76,0,114,87,135,255,159,194,64,0,12,122,31,255,232,7,101,254,173,119,98,0,154,71,220,254,191,57,53,255,168,232,160,255,224,32,99,255,218,156,165,0,151,153,163,0,217,13,148,1,197,113,89,0,149,28,161,254,207,23,30,0,105,132,227,255,54,230,94,255,133,173,204,255,92,183,157,255,88,144,252,254,102,33,90,0,159,97,3,0,181,218,155,255,240,114,119,0,106,214,53,255,165,190,115,1,152,91,225,255,88,106,44,255,208,61,113,0,151,52,124,0,191,27,156,255,110,54,236,1,14,30,166,255,39,127,207,1,229,199,28,0,188,228,188,254,100,157,235,0,246,218,183,1,107,22,193,255,206,160,95,0,76,239,147,0,207,161,117,0,51,166,2,255,52,117,10,254,73,56,227,255,152,193,225,0,132,94,136,255,101,191,209,0,32,107,229,255,198,43,180,1,100,210,118,0,114,67,153,255,23,88,26,255,89,154,92,1,220,120,140,255,144,114,207,255,252,115,250,255,34,206,72,0,138,133,127,255,8,178,124,1,87,75,97,0,15,229,92,254,240,67,131,255,118,123,227,254,146,120,104,255,145,213,255,1,129,187,70,255,219,119,54,0,1,19,173,0,45,150,148,1,248,83,72,0,203,233,169,1,142,107,56,0,247,249,38,1,45,242,80,255,30,233,103,0,96,82,70,0,23,201,111,0,81,39,30,255,161,183,78,255,194,234,33,255,68,227,140,254,216,206,116,0,70,27,235,255,104,144,79,0,164,230,93,254,214,135,156,0,154,187,242,254,188,20,131,255,36,109,174,0,159,112,241,0,5,110,149,1,36,165,218,0,166,29,19,1,178,46,73,0,93,43,32,254,248,189,237,0,102,155,141,0,201,93,195,255,241,139,253,255,15,111,98,255,108,65,163,254,155,79,190,255,73,174,193,254,246,40,48,255,107,88,11,254,202,97,85,255,253,204,18,255,113,242,66,0,110,160,194,254,208,18,186,0,81,21,60,0,188,104,167,255,124,166,97,254,210,133,142,0,56,242,137,254,41,111,130,0,111,151,58,1,111,213,141,255,183,172,241,255,38,6,196,255,185,7,123,255,46,11,246,0,245,105,119,1,15,2,161,255,8,206,45,255,18,202,74,255,83,124,115,1,212,141,157,0,83,8,209,254,139,15,232,255,172,54,173,254,50,247,132,0,214,189,213,0,144,184,105,0,223,254,248,0,255,147,240,255,23,188,72,0,7,51,54,0,188,25,180,254,220,180,0,255,83,160,20,0,163,189,243,255,58,209,194,255,87,73,60,0,106,24,49,0,245,249,220,0,22,173,167,0,118,11,195,255,19,126,237,0,110,159,37,255,59,82,47,0,180,187,86,0,188,148,208,1,100,37,133,255,7,112,193,0,129,188,156,255,84,106,129,255,133,225,202,0,14,236,111,255,40,20,101,0,172,172,49,254,51,54,74,255,251,185,184,255,93,155,224,255,180,249,224,1,230,178,146,0,72,57,54,254,178,62,184,0,119,205,72,0,185,239,253,255,61,15,218,0,196,67,56,255,234,32,171,1,46,219,228,0,208,108,234,255,20,63,232,255,165,53,199,1,133,228,5,255,52,205,107,0,74,238,140,255,150,156,219,254,239,172,178,255,251,189,223,254,32,142,211,255,218,15,138,1,241,196,80,0,28,36,98,254,22,234,199,0,61,237,220,255,246,57,37,0,142,17,142,255,157,62,26,0,43,238,95,254,3,217,6,255,213,25,240,1,39,220,174,255,154,205,48,254,19,13,192,255,244,34,54,254,140,16,155,0,240,181,5,254,155,193,60,0,166,128,4,255,36,145,56,255,150,240,219,0,120,51,145,0,82,153,42,1,140,236,146,0,107,92,248,1,189,10,3,0,63,136,242,0,211,39,24,0,19,202,161,1,173,27,186,255,210,204,239,254,41,209,162,255,182,254,159,255,172,116,52,0,195,103,222,254,205,69,59,0,53,22,41,1,218,48,194,0,80,210,242,0,210,188,207,0,187,161,161,254,216,17,1,0,136,225,113,0,250,184,63,0,223,30,98,254,77,168,162,0,59,53,175,0,19,201,10,255,139,224,194,0,147,193,154,255,212,189,12,254,1,200,174,255,50,133,113,1,94,179,90,0,173,182,135,0,94,177,113,0,43,89,215,255,136,252,106,255,123,134,83,254,5,245,66,255,82,49,39,1,220,2,224,0,97,129,177,0,77,59,89,0,61,29,155,1,203,171,220,255,92,78,139,0,145,33,181,255,169,24,141,1,55,150,179,0,139,60,80,255,218,39,97,0,2,147,107,255,60,248,72,0,173,230,47,1,6,83,182,255,16,105,162,254,137,212,81,255,180,184,134,1,39,222,164,255,221,105,251,1,239,112,125,0,63,7,97,0,63,104,227,255,148,58,12,0,90,60,224,255,84,212,252,0,79,215,168,0,248,221,199,1,115,121,1,0,36,172,120,0,32,162,187,255,57,107,49,255,147,42,21,0,106,198,43,1,57,74,87,0,126,203,81,255,129,135,195,0,140,31,177,0,221,139,194,0,3,222,215,0,131,68,231,0,177,86,178,254,124,151,180,0,184,124,38,1,70,163,17,0,249,251,181,1,42,55,227,0,226,161,44,0,23,236,110,0,51,149,142,1,93,5,236,0,218,183,106,254,67,24,77,0,40,245,209,255,222,121,153,0,165,57,30,0,83,125,60,0,70,38,82,1,229,6,188,0,109,222,157,255,55,118,63,255,205,151,186,0,227,33,149,255,254,176,246,1,227,177,227,0,34,106,163,254,176,43,79,0,106,95,78,1,185,241,122,255,185,14,61,0,36,1,202,0,13,178,162,255,247,11,132,0,161,230,92,1,65,1,185,255,212,50,165,1,141,146,64,255,158,242,218,0,21,164,125,0,213,139,122,1,67,71,87,0,203,158,178,1,151,92,43,0,152,111,5,255,39,3,239,255,217,255,250,255,176,63,71,255,74,245,77,1,250,174,18,255,34,49,227,255,246,46,251,255,154,35,48,1,125,157,61,255,106,36,78,255,97,236,153,0,136,187,120,255,113,134,171,255,19,213,217,254,216,94,209,255,252,5,61,0,94,3,202,0,3,26,183,255,64,191,43,255,30,23,21,0,129,141,77,255,102,120,7,1,194,76,140,0,188,175,52,255,17,81,148,0,232,86,55,1,225,48,172,0,134,42,42,255,238,50,47,0,169,18,254,0,20,147,87,255,14,195,239,255,69,247,23,0,238,229,128,255,177,49,112,0,168,98,251,255,121,71,248,0,243,8,145,254,246,227,153,255,219,169,177,254,251,139,165,255,12,163,185,255,164,40,171,255,153,159,27,254,243,109,91,255,222,24,112,1,18,214,231,0,107,157,181,254,195,147,0,255,194,99,104,255,89,140,190,255,177,66,126,254,106,185,66,0,49,218,31,0,252,174,158,0,188,79,230,1,238,41,224,0,212,234,8,1,136,11,181,0,166,117,83,255,68,195,94,0,46,132,201,0,240,152,88,0,164,57,69,254,160,224,42,255,59,215,67,255,119,195,141,255,36,180,121,254,207,47,8,255,174,210,223,0,101,197,68,255,255,82,141,1,250,137,233,0,97,86,133,1,16,80,69,0,132,131,159,0,116,93,100,0,45,141,139,0,152,172,157,255,90,43,91,0,71,153,46,0,39,16,112,255,217,136,97,255,220,198,25,254,177,53,49,0,222,88,134,255,128,15,60,0,207,192,169,255,192,116,209,255,106,78,211,1,200,213,183,255,7,12,122,254,222,203,60,255,33,110,199,254,251,106,117,0,228,225,4,1,120,58,7,255,221,193,84,254,112,133,27,0,189,200,201,255,139,135,150,0,234,55,176,255,61,50,65,0,152,108,169,255,220,85,1,255,112,135,227,0,162,26,186,0,207,96,185,254,244,136,107,0,93,153,50,1,198,97,151,0,110,11,86,255,143,117,174,255,115,212,200,0,5,202,183,0,237,164,10,254,185,239,62,0,236,120,18,254,98,123,99,255,168,201,194,254,46,234,214,0,191,133,49,255,99,169,119,0,190,187,35,1,115,21,45,255,249,131,72,0,112,6,123,255,214,49,181,254,166,233,34,0,92,197,102,254,253,228,205,255,3,59,201,1,42,98,46,0,219,37,35,255,169,195,38,0,94,124,193,1,156,43,223,0,95,72,133,254,120,206,191,0,122,197,239,255,177,187,79,255,254,46,2,1,250,167,190,0,84,129,19,0,203,113,166,255,249,31,189,254,72,157,202,255,208,71,73,255,207,24,72,0,10,16,18,1,210,81,76,255,88,208,192,255,126,243,107,255,238,141,120,255,199,121,234,255,137,12,59,255,36,220,123,255,148,179,60,254,240,12,29,0,66,0,97,1,36,30,38,255,115,1,93,255,96,103,231,255,197,158,59,1,192,164,240,0,202,202,57,255,24,174,48,0,89,77,155,1,42,76,215,0,244,151,233,0,23,48,81,0,239,127,52,254,227,130,37,255,248,116,93,1,124,132,118,0,173,254,192,1,6,235,83,255,110,175,231,1,251,28,182,0,129,249,93,254,84,184,128,0,76,181,62,0,175,128,186,0,100,53,136,254,109,29,226,0,221,233,58,1,20,99,74,0,0,22,160,0,134,13,21,0,9,52,55,255,17,89,140,0,175,34,59,0,84,165,119,255,224,226,234,255,7,72,166,255,123,115,255,1,18,214,246,0,250,7,71,1,217,220,185,0,212,35,76,255,38,125,175,0,189,97,210,0,114,238,44,255,41,188,169,254,45,186,154,0,81,92,22,0,132,160,193,0,121,208,98,255,13,81,44,255,203,156,82,0,71,58,21,255,208,114,191,254,50,38,147,0,154,216,195,0,101,25,18,0,60,250,215,255,233,132,235,255,103,175,142,1,16,14,92,0,141,31,110,254,238,241,45,255,153,217,239,1,97,168,47,255,249,85,16,1,28,175,62,255],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([57,254,54,0,222,231,126,0,166,45,117,254,18,189,96,255,228,76,50,0,200,244,94,0,198,152,120,1,68,34,69,255,12,65,160,254,101,19,90,0,167,197,120,255,68,54,185,255,41,218,188,0,113,168,48,0,88,105,189,1,26,82,32,255,185,93,164,1,228,240,237,255,66,182,53,0,171,197,92,255,107,9,233,1,199,120,144,255,78,49,10,255,109,170,105,255,90,4,31,255,28,244,113,255,74,58,11,0,62,220,246,255,121,154,200,254,144,210,178,255,126,57,129,1,43,250,14,255,101,111,28,1,47,86,241,255,61,70,150,255,53,73,5,255,30,26,158,0,209,26,86,0,138,237,74,0,164,95,188,0,142,60,29,254,162,116,248,255,187,175,160,0,151,18,16,0,209,111,65,254,203,134,39,255,88,108,49,255,131,26,71,255,221,27,215,254,104,105,93,255,31,236,31,254,135,0,211,255,143,127,110,1,212,73,229,0,233,67,167,254,195,1,208,255,132,17,221,255,51,217,90,0,67,235,50,255,223,210,143,0,179,53,130,1,233,106,198,0,217,173,220,255,112,229,24,255,175,154,93,254,71,203,246,255,48,66,133,255,3,136,230,255,23,221,113,254,235,111,213,0,170,120,95,254,251,221,2,0,45,130,158,254,105,94,217,255,242,52,180,254,213,68,45,255,104,38,28,0,244,158,76,0,161,200,96,255,207,53,13,255,187,67,148,0,170,54,248,0,119,162,178,255,83,20,11,0,42,42,192,1,146,159,163,255,183,232,111,0,77,229,21,255,71,53,143,0,27,76,34,0,246,136,47,255,219,39,182,255,92,224,201,1,19,142,14,255,69,182,241,255,163,118,245,0,9,109,106,1,170,181,247,255,78,47,238,255,84,210,176,255,213,107,139,0,39,38,11,0,72,21,150,0,72,130,69,0,205,77,155,254,142,133,21,0,71,111,172,254,226,42,59,255,179,0,215,1,33,128,241,0,234,252,13,1,184,79,8,0,110,30,73,255,246,141,189,0,170,207,218,1,74,154,69,255,138,246,49,255,155,32,100,0,125,74,105,255,90,85,61,255,35,229,177,255,62,125,193,255,153,86,188,1,73,120,212,0,209,123,246,254,135,209,38,255,151,58,44,1,92,69,214,255,14,12,88,255,252,153,166,255,253,207,112,255,60,78,83,255,227,124,110,0,180,96,252,255,53,117,33,254,164,220,82,255,41,1,27,255,38,164,166,255,164,99,169,254,61,144,70,255,192,166,18,0,107,250,66,0,197,65,50,0,1,179,18,255,255,104,1,255,43,153,35,255,80,111,168,0,110,175,168,0,41,105,45,255,219,14,205,255,164,233,140,254,43,1,118,0,233,67,195,0,178,82,159,255,138,87,122,255,212,238,90,255,144,35,124,254,25,140,164,0,251,215,44,254,133,70,107,255,101,227,80,254,92,169,55,0,215,42,49,0,114,180,85,255,33,232,27,1,172,213,25,0,62,176,123,254,32,133,24,255,225,191,62,0,93,70,153,0,181,42,104,1,22,191,224,255,200,200,140,255,249,234,37,0,149,57,141,0,195,56,208,255,254,130,70,255,32,173,240,255,29,220,199,0,110,100,115,255,132,229,249,0,228,233,223,255,37,216,209,254,178,177,209,255,183,45,165,254,224,97,114,0,137,97,168,255,225,222,172,0,165,13,49,1,210,235,204,255,252,4,28,254,70,160,151,0,232,190,52,254,83,248,93,255,62,215,77,1,175,175,179,255,160,50,66,0,121,48,208,0,63,169,209,255,0,210,200,0,224,187,44,1,73,162,82,0,9,176,143,255,19,76,193,255,29,59,167,1,24,43,154,0,28,190,190,0,141,188,129,0,232,235,203,255,234,0,109,255,54,65,159,0,60,88,232,255,121,253,150,254,252,233,131,255,198,110,41,1,83,77,71,255,200,22,59,254,106,253,242,255,21,12,207,255,237,66,189,0,90,198,202,1,225,172,127,0,53,22,202,0,56,230,132,0,1,86,183,0,109,190,42,0,243,68,174,1,109,228,154,0,200,177,122,1,35,160,183,255,177,48,85,255,90,218,169,255,248,152,78,0,202,254,110,0,6,52,43,0,142,98,65,255,63,145,22,0,70,106,93,0,232,138,107,1,110,179,61,255,211,129,218,1,242,209,92,0,35,90,217,1,182,143,106,255,116,101,217,255,114,250,221,255,173,204,6,0,60,150,163,0,73,172,44,255,239,110,80,255,237,76,153,254,161,140,249,0,149,232,229,0,133,31,40,255,174,164,119,0,113,51,214,0,129,228,2,254,64,34,243,0,107,227,244,255,174,106,200,255,84,153,70,1,50,35,16,0,250,74,216,254,236,189,66,255,153,249,13,0,230,178,4,255,221,41,238,0,118,227,121,255,94,87,140,254,254,119,92,0,73,239,246,254,117,87,128,0,19,211,145,255,177,46,252,0,229,91,246,1,69,128,247,255,202,77,54,1,8,11,9,255,153,96,166,0,217,214,173,255,134,192,2,1,0,207,0,0,189,174,107,1,140,134,100,0,158,193,243,1,182,102,171,0,235,154,51,0,142,5,123,255,60,168,89,1,217,14,92,255,19,214,5,1,211,167,254,0,44,6,202,254,120,18,236,255,15,113,184,255,184,223,139,0,40,177,119,254,182,123,90,255,176,165,176,0,247,77,194,0,27,234,120,0,231,0,214,255,59,39,30,0,125,99,145,255,150,68,68,1,141,222,248,0,153,123,210,255,110,127,152,255,229,33,214,1,135,221,197,0,137,97,2,0,12,143,204,255,81,41,188,0,115,79,130,255,94,3,132,0,152,175,187,255,124,141,10,255,126,192,179,255,11,103,198,0,149,6,45,0,219,85,187,1,230,18,178,255,72,182,152,0,3,198,184,255,128,112,224,1,97,161,230,0,254,99,38,255,58,159,197,0,151,66,219,0,59,69,143,255,185,112,249,0,119,136,47,255,123,130,132,0,168,71,95,255,113,176,40,1,232,185,173,0,207,93,117,1,68,157,108,255,102,5,147,254,49,97,33,0,89,65,111,254,247,30,163,255,124,217,221,1,102,250,216,0,198,174,75,254,57,55,18,0,227,5,236,1,229,213,173,0,201,109,218,1,49,233,239,0,30,55,158,1,25,178,106,0,155,111,188,1,94,126,140,0,215,31,238,1,77,240,16,0,213,242,25,1,38,71,168,0,205,186,93,254,49,211,140,255,219,0,180,255,134,118,165,0,160,147,134,255,110,186,35,255,198,243,42,0,243,146,119,0,134,235,163,1,4,241,135,255,193,46,193,254,103,180,79,255,225,4,184,254,242,118,130,0,146,135,176,1,234,111,30,0,69,66,213,254,41,96,123,0,121,94,42,255,178,191,195,255,46,130,42,0,117,84,8,255,233,49,214,254,238,122,109,0,6,71,89,1,236,211,123,0,244,13,48,254,119,148,14,0,114,28,86,255,75,237,25,255,145,229,16,254,129,100,53,255,134,150,120,254,168,157,50,0,23,72,104,255,224,49,14,0,255,123,22,255,151,185,151,255,170,80,184,1,134,182,20,0,41,100,101,1,153,33,16,0,76,154,111,1,86,206,234,255,192,160,164,254,165,123,93,255,1,216,164,254,67,17,175,255,169,11,59,255,158,41,61,255,73,188,14,255,195,6,137,255,22,147,29,255,20,103,3,255,246,130,227,255,122,40,128,0,226,47,24,254,35,36,32,0,152,186,183,255,69,202,20,0,195,133,195,0,222,51,247,0,169,171,94,1,183,0,160,255,64,205,18,1,156,83,15,255,197,58,249,254,251,89,110,255,50,10,88,254,51,43,216,0,98,242,198,1,245,151,113,0,171,236,194,1,197,31,199,255,229,81,38,1,41,59,20,0,253,104,230,0,152,93,14,255,246,242,146,254,214,169,240,255,240,102,108,254,160,167,236,0,154,218,188,0,150,233,202,255,27,19,250,1,2,71,133,255,175,12,63,1,145,183,198,0,104,120,115,255,130,251,247,0,17,212,167,255,62,123,132,255,247,100,189,0,155,223,152,0,143,197,33,0,155,59,44,255,150,93,240,1,127,3,87,255,95,71,207,1,167,85,1,255,188,152,116,255,10,23,23,0,137,195,93,1,54,98,97,0,240,0,168,255,148,188,127,0,134,107,151,0,76,253,171,0,90,132,192,0,146,22,54,0,224,66,54,254,230,186,229,255,39,182,196,0,148,251,130,255,65,131,108,254,128,1,160,0,169,49,167,254,199,254,148,255,251,6,131,0,187,254,129,255,85,82,62,0,178,23,58,255,254,132,5,0,164,213,39,0,134,252,146,254,37,53,81,255,155,134,82,0,205,167,238,255,94,45,180,255,132,40,161,0,254,111,112,1,54,75,217,0,179,230,221,1,235,94,191,255,23,243,48,1,202,145,203,255,39,118,42,255,117,141,253,0,254,0,222,0,43,251,50,0,54,169,234,1,80,68,208,0,148,203,243,254,145,7,135,0,6,254,0,0,252,185,127,0,98,8,129,255,38,35,72,255,211,36,220,1,40,26,89,0,168,64,197,254,3,222,239,255,2,83,215,254,180,159,105,0,58,115,194,0,186,116,106,255,229,247,219,255,129,118,193,0,202,174,183,1,166,161,72,0,201,107,147,254,237,136,74,0,233,230,106,1,105,111,168,0,64,224,30,1,1,229,3,0,102,151,175,255,194,238,228,255,254,250,212,0,187,237,121,0,67,251,96,1,197,30,11,0,183,95,204,0,205,89,138,0,64,221,37,1,255,223,30,255,178,48,211,255,241,200,90,255,167,209,96,255,57,130,221,0,46,114,200,255,61,184,66,0,55,182,24,254,110,182,33,0,171,190,232,255,114,94,31,0,18,221,8,0,47,231,254,0,255,112,83,0,118,15,215,255,173,25,40,254,192,193,31,255,238,21,146,255,171,193,118,255,101,234,53,254,131,212,112,0,89,192,107,1,8,208,27,0,181,217,15,255,231,149,232,0,140,236,126,0,144,9,199,255,12,79,181,254,147,182,202,255,19,109,182,255,49,212,225,0,74,163,203,0,175,233,148,0,26,112,51,0,193,193,9,255,15,135,249,0,150,227,130,0,204,0,219,1,24,242,205,0,238,208,117,255,22,244,112,0,26,229,34,0,37,80,188,255,38,45,206,254,240,90,225,255,29,3,47,255,42,224,76,0,186,243,167,0,32,132,15,255,5,51,125,0,139,135,24,0,6,241,219,0,172,229,133,255,246,214,50,0,231,11,207,255,191,126,83,1,180,163,170,255,245,56,24,1,178,164,211,255,3,16,202,1,98,57,118,255,141,131,89,254,33,51,24,0,243,149,91,255,253,52,14,0,35,169,67,254,49,30,88,255,179,27,36,255,165,140,183,0,58,189,151,0,88,31,0,0,75,169,66,0,66,101,199,255,24,216,199,1,121,196,26,255,14,79,203,254,240,226,81,255,94,28,10,255,83,193,240,255,204,193,131,255,94,15,86,0,218,40,157,0,51,193,209,0,0,242,177,0,102,185,247,0,158,109,116,0,38,135,91,0,223,175,149,0,220,66,1,255,86,60,232,0,25,96,37,255,225,122,162,1,215,187,168,255,158,157,46,0,56,171,162,0,232,240,101,1,122,22,9,0,51,9,21,255,53,25,238,255,217,30,232,254,125,169,148,0,13,232,102,0,148,9,37,0,165,97,141,1,228,131,41,0,222,15,243,255,254,18,17,0,6,60,237,1,106,3,113,0,59,132,189,0,92,112,30,0,105,208,213,0,48,84,179,255,187,121,231,254,27,216,109,255,162,221,107,254,73,239,195,255,250,31,57,255,149,135,89,255,185,23,115,1,3,163,157,255,18,112,250,0,25,57,187,255,161,96,164,0,47,16,243,0,12,141,251,254,67,234,184,255,41,18,161,0,175,6,96,255,160,172,52,254,24,176,183,255,198,193,85,1,124,121,137,255,151,50,114,255,220,203,60,255,207,239,5,1,0,38,107,255,55,238,94,254,70,152,94,0,213,220,77,1,120,17,69,255,85,164,190,255,203,234,81,0,38,49,37,254,61,144,124,0,137,78,49,254,168,247,48,0,95,164,252,0,105,169,135,0,253,228,134,0,64,166,75,0,81,73,20,255,207,210,10,0,234,106,150,255,94,34,90,255,254,159,57,254,220,133,99,0,139,147,180,254,24,23,185,0,41,57,30,255,189,97,76,0,65,187,223,255,224,172,37,255,34,62,95,1,231,144,240,0,77,106,126,254,64,152,91,0,29,98,155,0,226,251,53,255,234,211,5,255,144,203,222,255,164,176,221,254,5,231,24,0,179,122,205,0,36,1,134,255,125,70,151,254,97,228,252,0,172,129,23,254,48,90,209,255,150,224,82,1,84,134,30,0,241,196,46,0,103,113,234,255,46,101,121,254,40,124,250,255,135,45,242,254,9,249,168,255,140,108,131,255,143,163,171,0,50,173,199,255,88,222,142,255,200,95,158,0,142,192,163,255,7,117,135,0,111,124,22,0,236,12,65,254,68,38,65,255,227,174,254,0,244,245,38,0,240,50,208,255,161,63,250,0,60,209,239,0,122,35,19,0,14,33,230,254,2,159,113,0,106,20,127,255,228,205,96,0,137,210,174,254,180,212,144,255,89,98,154,1,34,88,139,0,167,162,112,1,65,110,197,0,241,37,169,0,66,56,131,255,10,201,83,254,133,253,187,255,177,112,45,254,196,251,0,0,196,250,151,255,238,232,214,255,150,209,205,0,28,240,118,0,71,76,83,1,236,99,91,0,42,250,131,1,96,18,64,255,118,222,35,0,113,214,203,255,122,119,184,255,66,19,36,0,204,64,249,0,146,89,139,0,134,62,135,1,104,233,101,0,188,84,26,0,49,249,129,0,208,214,75,255,207,130,77,255,115,175,235,0,171,2,137,255,175,145,186,1,55,245,135,255,154,86,181,1,100,58,246,255,109,199,60,255,82,204,134,255,215,49,230,1,140,229,192,255,222,193,251,255,81,136,15,255,179,149,162,255,23,39,29,255,7,95,75,254,191,81,222,0,241,81,90,255,107,49,201,255,244,211,157,0,222,140,149,255,65,219,56,254,189,246,90,255,178,59,157,1,48,219,52,0,98,34,215,0,28,17,187,255,175,169,24,0,92,79,161,255,236,200,194,1,147,143,234,0,229,225,7,1,197,168,14,0,235,51,53,1,253,120,174,0,197,6,168,255,202,117,171,0,163,21,206,0,114,85,90,255,15,41,10,255,194,19,99,0,65,55,216,254,162,146,116,0,50,206,212,255,64,146,29,255,158,158,131,1,100,165,130,255,172,23,129,255,125,53,9,255,15,193,18,1,26,49,11,255,181,174,201,1,135,201,14,255,100,19,149,0,219,98,79,0,42,99,143,254,96,0,48,255,197,249,83,254,104,149,79,255,235,110,136,254,82,128,44,255,65,41,36,254,88,211,10,0,187,121,187,0,98,134,199,0,171,188,179,254,210,11,238,255,66,123,130,254,52,234,61,0,48,113,23,254,6,86,120,255,119,178,245,0,87,129,201,0,242,141,209,0,202,114,85,0,148,22,161,0,103,195,48,0,25,49,171,255,138,67,130,0,182,73,122,254,148,24,130,0,211,229,154,0,32,155,158,0,84,105,61,0,177,194,9,255,166,89,86,1,54,83,187,0,249,40,117,255,109,3,215,255,53,146,44,1,63,47,179,0,194,216,3,254,14,84,136,0,136,177,13,255,72,243,186,255,117,17,125,255,211,58,211,255,93,79,223,0,90,88,245,255,139,209,111,255,70,222,47,0,10,246,79,255,198,217,178,0,227,225,11,1,78,126,179,255,62,43,126,0,103,148,35,0,129,8,165,254,245,240,148,0,61,51,142,0,81,208,134,0,15,137,115,255,211,119,236,255,159,245,248,255,2,134,136,255,230,139,58,1,160,164,254,0,114,85,141,255,49,166,182,255,144,70,84,1,85,182,7,0,46,53,93,0,9,166,161,255,55,162,178,255,45,184,188,0,146,28,44,254,169,90,49,0,120,178,241,1,14,123,127,255,7,241,199,1,189,66,50,255,198,143,101,254,189,243,135,255,141,24,24,254,75,97,87,0,118,251,154,1,237,54,156,0,171,146,207,255,131,196,246,255,136,64,113,1,151,232,57,0,240,218,115,0,49,61,27,255,64,129,73,1,252,169,27,255,40,132,10,1,90,201,193,255,252,121,240,1,186,206,41,0,43,198,97,0,145,100,183,0,204,216,80,254,172,150,65,0,249,229,196,254,104,123,73,255,77,104,96,254,130,180,8,0,104,123,57,0,220,202,229,255,102,249,211,0,86,14,232,255,182,78,209,0,239,225,164,0,106,13,32,255,120,73,17,255,134,67,233,0,83,254,181,0,183,236,112,1,48,64,131,255,241,216,243,255,65,193,226,0,206,241,100,254,100,134,166,255,237,202,197,0,55,13,81,0,32,124,102,255,40,228,177,0,118,181,31,1,231,160,134,255,119,187,202,0,0,142,60,255,128,38,189,255,166,201,150,0,207,120,26,1,54,184,172,0,12,242,204,254,133,66,230,0,34,38,31,1,184,112,80,0,32,51,165,254,191,243,55,0,58,73,146,254,155,167,205,255,100,104,152,255,197,254,207,255,173,19,247,0,238,10,202,0,239,151,242,0,94,59,39,255,240,29,102,255,10,92,154,255,229,84,219,255,161,129,80,0,208,90,204,1,240,219,174,255,158,102,145,1,53,178,76,255,52,108,168,1,83,222,107,0,211,36,109,0,118,58,56,0,8,29,22,0,237,160,199,0,170,209,157,0,137,71,47,0,143,86,32,0,198,242,2,0,212,48,136,1,92,172,186,0,230,151,105,1,96,191,229,0,138,80,191,254,240,216,130,255,98,43,6,254,168,196,49,0,253,18,91,1,144,73,121,0,61,146,39,1,63,104,24,255,184,165,112,254,126,235,98,0,80,213,98,255,123,60,87,255,82,140,245,1,223,120,173,255,15,198,134,1,206,60,239,0,231,234,92,255,33,238,19,255,165,113,142,1,176,119,38,0,160,43,166,254,239,91,105,0,107,61,194,1,25,4,68,0,15,139,51,0,164,132,106,255,34,116,46,254,168,95,197,0,137,212,23,0,72,156,58,0,137,112,69,254,150,105,154,255,236,201,157,0,23,212,154,255,136,82,227,254,226,59,221,255,95,149,192,0,81,118,52,255,33,43,215,1,14,147,75,255,89,156,121,254,14,18,79,0,147,208,139,1,151,218,62,255,156,88,8,1,210,184,98,255,20,175,123,255,102,83,229,0,220,65,116,1,150,250,4,255,92,142,220,255,34,247,66,255,204,225,179,254,151,81,151,0,71,40,236,255,138,63,62,0,6,79,240,255,183,185,181,0,118,50,27,0,63,227,192,0,123,99,58,1,50,224,155,255,17,225,223,254,220,224,77,255,14,44,123,1,141,128,175,0,248,212,200,0,150,59,183,255,147,97,29,0,150,204,181,0,253,37,71,0,145,85,119,0,154,200,186,0,2,128,249,255,83,24,124,0,14,87,143,0,168,51,245,1,124,151,231,255,208,240,197,1,124,190,185,0,48,58,246,0,20,233,232,0,125,18,98,255,13,254,31,255,245,177,130,255,108,142,35,0,171,125,242,254,140,12,34,255,165,161,162,0,206,205,101,0,247,25,34,1,100,145,57,0,39,70,57,0,118,204,203,255,242,0,162,0,165,244,30,0,198,116,226,0,128,111,153,255,140,54,182,1,60,122,15,255,155,58,57,1,54,50,198,0,171,211,29,255,107,138,167,255,173,107,199,255,109,161,193,0,89,72,242,255,206,115,89,255,250,254,142,254,177,202,94,255,81,89,50,0,7,105,66,255,25,254,255,254,203,64,23,255,79,222,108,255,39,249,75,0,241,124,50,0,239,152,133,0,221,241,105,0,147,151,98,0,213,161,121,254,242,49,137,0,233,37,249,254,42,183,27,0,184,119,230,255,217,32,163,255,208,251,228,1,137,62,131,255,79,64,9,254,94,48,113,0,17,138,50,254,193,255,22,0,247,18,197,1,67,55,104,0,16,205,95,255,48,37,66,0,55,156,63,1,64,82,74,255,200,53,71,254,239,67,125,0,26,224,222,0,223,137,93,255,30,224,202,255,9,220,132,0,198,38,235,1,102,141,86,0,60,43,81,1,136,28,26,0,233,36,8,254,207,242,148,0,164,162,63,0,51,46,224,255,114,48,79,255,9,175,226,0,222,3,193,255,47,160,232,255,255,93,105,254,14,42,230,0,26,138,82,1,208,43,244,0,27,39,38,255,98,208,127,255,64,149,182,255,5,250,209,0,187,60,28,254,49,25,218,255,169,116,205,255,119,18,120,0,156,116,147,255,132,53,109,255,13,10,202,0,110,83,167,0,157,219,137,255,6,3,130,255,50,167,30,255,60,159,47,255,129,128,157,254,94,3,189,0,3,166,68,0,83,223,215,0,150,90,194,1,15,168,65,0,227,83,51,255,205,171,66,255,54,187,60,1,152,102,45,255,119,154,225,0,240,247,136,0,100,197,178,255,139,71,223,255,204,82,16,1,41,206,42,255,156,192,221,255,216,123,244,255,218,218,185,255,187,186,239,255,252,172,160,255,195,52,22,0,144,174,181,254,187,100,115,255,211,78,176,255,27,7,193,0,147,213,104,255,90,201,10,255,80,123,66,1,22,33,186,0,1,7,99,254,30,206,10,0,229,234,5,0,53,30,210,0,138,8,220,254,71,55,167,0,72,225,86,1,118,190,188,0,254,193,101,1,171,249,172,255,94,158,183,254,93,2,108,255,176,93,76,255,73,99,79,255,74,64,129,254,246,46,65,0,99,241,127,254,246,151,102,255,44,53,208,254,59,102,234,0,154,175,164,255,88,242,32,0,111,38,1,0,255,182,190,255,115,176,15,254,169,60,129,0,122,237,241,0,90,76,63,0,62,74,120,255,122,195,110,0,119,4,178,0,222,242,210,0,130,33,46,254,156,40,41,0,167,146,112,1,49,163,111,255,121,176,235,0,76,207,14,255,3,25,198,1,41,235,213,0,85,36,214,1,49,92,109,255,200,24,30,254,168,236,195,0,145,39,124,1,236,195,149,0,90,36,184,255,67,85,170,255,38,35,26,254,131,124,68,255,239,155,35,255,54,201,164,0,196,22,117,255,49,15,205,0,24,224,29,1,126,113,144,0,117,21,182,0,203,159,141,0,223,135,77,0,176,230,176,255,190,229,215,255,99,37,181,255,51,21,138,255,25,189,89,255,49,48,165,254,152,45,247,0,170,108,222,0,80,202,5,0,27,69,103,254,204,22,129,255,180,252,62,254,210,1,91,255,146,110,254,255,219,162,28,0,223,252,213,1,59,8,33,0,206,16,244,0,129,211,48,0,107,160,208,0,112,59,209,0,109,77,216,254,34,21,185,255,246,99,56,255,179,139,19,255,185,29,50,255,84,89,19,0,74,250,98,255,225,42,200,255,192,217,205,255,210,16,167,0,99,132,95,1,43,230,57,0,254,11,203,255,99,188,63,255,119,193,251,254,80,105,54,0,232,181,189,1,183,69,112,255,208,171,165,255,47,109,180,255,123,83,165,0,146,162,52,255,154,11,4,255,151,227,90,255,146,137,97,254,61,233,41,255,94,42,55,255,108,164,236,0,152,68,254,0,10,140,131,255,10,106,79,254,243,158,137,0,67,178,66,254,177,123,198,255,15,62,34,0,197,88,42,255,149,95,177,255,152,0,198,255,149,254,113,255,225,90,163,255,125,217,247,0,18,17,224,0,128,66,120,254,192,25,9,255,50,221,205,0,49,212,70,0,233,255,164,0,2,209,9,0,221,52,219,254,172,224,244,255,94,56,206,1,242,179,2,255,31,91,164,1,230,46,138,255,189,230,220,0,57,47,61,255,111,11,157,0,177,91,152,0,28,230,98,0,97,87,126,0,198,89,145,255,167,79,107,0,249,77,160,1,29,233,230,255,150,21,86,254,60,11,193,0,151,37,36,254,185,150,243,255,228,212,83,1,172,151,180,0,201,169,155,0,244,60,234,0,142,235,4,1,67,218,60,0,192,113,75,1,116,243,207,255,65,172,155,0,81,30,156,255,80,72,33,254,18,231,109,255,142,107,21,254,125,26,132,255,176,16,59,255,150,201,58,0,206,169,201,0,208,121,226,0,40,172,14,255,150,61,94,255,56,57,156,255,141,60,145,255,45,108,149,255,238,145,155,255,209,85,31,254,192,12,210,0,99,98,93,254,152,16,151,0,225,185,220,0,141,235,44,255,160,172,21,254,71,26,31,255,13,64,93,254,28,56,198,0,177,62,248,1,182,8,241,0,166,101,148,255,78,81,133,255,129,222,215,1,188,169,129,255,232,7,97,0,49,112,60,255,217,229,251,0,119,108,138,0,39,19,123,254,131,49,235,0,132,84,145,0,130,230,148,255,25,74,187,0,5,245,54,255,185,219,241,1,18,194,228,255,241,202,102,0,105,113,202,0,155,235,79,0,21,9,178,255,156,1,239,0,200,148,61,0,115,247,210,255,49,221,135,0,58,189,8,1,35,46,9,0,81,65,5,255,52,158,185,255,125,116,46,255,74,140,13,255,210,92,172,254,147,23,71,0,217,224,253,254,115,108,180,255,145,58,48,254,219,177,24,255,156,255,60,1,154,147,242,0,253,134,87,0,53,75,229,0,48,195,222,255,31,175,50,255,156,210,120,255,208,35,222,255,18,248,179,1,2,10,101,255,157,194,248,255,158,204,101,255,104,254,197,255,79,62,4,0,178,172,101,1,96,146,251,255,65,10,156,0,2,137,165,255,116,4,231,0,242,215,1,0,19,35,29,255,43,161,79,0,59,149,246,1,251,66,176,0,200,33,3,255,80,110,142,255,195,161,17,1,228,56,66,255,123,47,145,254,132,4,164,0,67,174,172,0,25,253,114,0,87,97,87,1,250,220,84,0,96,91,200,255,37,125,59,0,19,65,118,0,161,52,241,255,237,172,6,255,176,191,255,255,1,65,130,254,223,190,230,0,101,253,231,255,146,35,109,0,250,29,77,1,49,0,19,0,123,90,155,1,22,86,32,255,218,213,65,0,111,93,127,0,60,93,169,255,8,127,182,0,17,186,14,254,253,137,246,255,213,25,48,254,76,238,0,255,248,92,70,255,99,224,139,0,184,9,255,1,7,164,208,0,205,131,198,1,87,214,199,0,130,214,95,0,221,149,222,0,23,38,171,254,197,110,213,0,43,115,140,254,215,177,118,0,96,52,66,1,117,158,237,0,14,64,182,255,46,63,174,255,158,95,190,255,225,205,177,255,43,5,142,255,172,99,212,255,244,187,147,0,29,51,153,255,228,116,24,254,30,101,207,0,19,246,150,255,134,231,5,0,125,134,226,1,77,65,98,0,236,130,33,255,5,110,62,0,69,108,127,255,7,113,22,0,145,20,83,254,194,161,231,255,131,181,60,0,217,209,177,255,229,148,212,254,3,131,184,0,117,177,187,1,28,14,31,255,176,102,80,0,50,84,151,255,125,31,54,255,21,157,133,255,19,179,139,1,224,232,26,0,34,117,170,255,167,252,171,255,73,141,206,254,129,250,35,0,72,79,236,1,220,229,20,255,41,202,173,255,99,76,238,255,198,22,224,255,108,198,195,255,36,141,96,1,236,158,59,255,106,100,87,0,110,226,2,0,227,234,222,0,154,93,119,255,74,112,164,255,67,91,2,255,21,145,33,255,102,214,137,255,175,230,103,254,163,246,166,0,93,247,116,254,167,224,28,255,220,2,57,1,171,206,84,0,123,228,17,255,27,120,119,0,119,11,147,1,180,47,225,255,104,200,185,254,165,2,114,0,77,78,212,0,45,154,177,255,24,196,121,254,82,157,182,0,90,16,190,1,12,147,197,0,95,239,152,255,11,235,71,0,86,146,119,255,172,134,214,0,60,131,196,0,161,225,129,0,31,130,120,254,95,200,51,0,105,231,210,255,58,9,148,255,43,168,221,255,124,237,142,0,198,211,50,254,46,245,103,0,164,248,84,0,152,70,208,255,180,117,177,0,70,79,185,0,243,74,32,0,149,156,207,0,197,196,161,1,245,53,239,0,15,93,246,254,139,240,49,255,196,88,36,255,162,38,123,0,128,200,157,1,174,76,103,255,173,169,34,254,216,1,171,255,114,51,17,0,136,228,194,0,110,150,56,254,106,246,159,0,19,184,79,255,150,77,240,255,155,80,162,0,0,53,169,255,29,151,86,0,68,94,16,0,92,7,110,254,98,117,149,255,249,77,230,255,253,10,140,0,214,124,92,254,35,118,235,0,89,48,57,1,22,53,166,0,184,144,61,255,179,255,194,0,214,248,61,254,59,110,246,0,121,21,81,254,166,3,228,0,106,64,26,255,69,232,134,255,242,220,53,254,46,220,85,0,113,149,247,255,97,179,103,255,190,127,11,0,135,209,182,0,95,52,129,1,170,144,206,255,122,200,204,255,168,100,146,0,60,144,149,254,70,60,40,0,122,52,177,255,246,211,101,255,174,237,8,0,7,51,120,0,19,31,173,0,126,239,156,255,143,189,203,0,196,128,88,255,233,133,226,255,30,125,173,255,201,108,50,0,123,100,59,255,254,163,3,1,221,148,181,255,214,136,57,254,222,180,137,255,207,88,54,255,28,33,251,255,67,214,52,1,210,208,100,0,81,170,94,0,145,40,53,0,224,111,231,254,35,28,244,255,226,199,195,254,238,17,230,0,217,217,164,254,169,157,221,0,218,46,162,1,199,207,163,255,108,115,162,1,14,96,187,255,118,60,76,0,184,159,152,0,209,231,71,254,42,164,186,255,186,153,51,254,221,171,182,255,162,142,173,0,235,47,193,0,7,139,16,1,95,164,64,255,16,221,166,0,219,197,16,0,132,29,44,255,100,69,117,255,60,235,88,254,40,81,173,0,71,190,61,255,187,88,157,0,231,11,23,0,237,117,164,0,225,168,223,255,154,114,116,255,163,152,242,1,24,32,170,0,125,98,113,254,168,19,76,0,17,157,220,254,155,52,5,0,19,111,161,255,71,90,252,255,173,110,240,0,10,198,121,255,253,255,240,255,66,123,210,0,221,194,215,254,121,163,17,255,225,7,99,0,190,49,182,0,115,9,133,1,232,26,138,255,213,68,132,0,44,119,122,255,179,98,51,0,149,90,106,0,71,50,230,255,10,153,118,255,177,70,25,0,165,87,205,0,55,138,234,0,238,30,97,0,113,155,207,0,98,153,127,0,34,107,219,254,117,114,172,255,76,180,255,254,242,57,179,255,221,34,172,254,56,162,49,255,83,3,255,255,113,221,189,255,188,25,228,254,16,88,89,255,71,28,198,254,22,17,149,255,243,121,254,255,107,202,99,255,9,206,14,1,220,47,153,0,107,137,39,1,97,49,194,255,149,51,197,254,186,58,11,255,107,43,232,1,200,6,14,255,181,133,65,254,221,228,171,255,123,62,231,1,227,234,179,255,34,189,212,254,244,187,249,0,190,13,80,1,130,89,1,0,223,133,173,0,9,222,198,255,66,127,74,0,167,216,93,255,155,168,198,1,66,145,0,0,68,102,46,1,172,90,154,0,216,128,75,255,160,40,51,0,158,17,27,1,124,240,49,0,236,202,176,255,151,124,192,255,38,193,190,0,95,182,61,0,163,147,124,255,255,165,51,255,28,40,17,254,215,96,78,0,86,145,218,254,31,36,202,255,86,9,5,0,111,41,200,255,237,108,97,0,57,62,44,0,117,184,15,1,45,241,116,0,152,1,220,255,157,165,188,0,250,15,131,1,60,44,125,255,65,220,251,255,75,50,184,0,53,90,128,255,231,80,194,255,136,129,127,1,21,18,187,255,45,58,161,255,71,147,34,0,174,249,11,254,35,141,29,0,239,68,177,255,115,110,58,0,238,190,177,1,87,245,166,255,190,49,247,255,146,83,184,255,173,14,39,255,146,215,104,0,142,223,120,0,149,200,155,255,212,207,145,1,16,181,217,0,173,32,87,255,255,35,181,0,119,223,161,1,200,223,94,255,70,6,186,255,192,67,85,255,50,169,152,0,144,26,123,255,56,243,179,254,20,68,136,0,39,140,188,254,253,208,5,255,200,115,135,1,43,172,229,255,156,104,187,0,151,251,167,0,52,135,23,0,151,153,72,0,147,197,107,254,148,158,5,255,238,143,206,0,126,153,137,255,88,152,197,254,7,68,167,0,252,159,165,255,239,78,54,255,24,63,55,255,38,222,94,0,237,183,12,255,206,204,210,0,19,39,246,254,30,74,231,0,135,108,29,1,179,115,0,0,117,118,116,1,132,6,252,255,145,129,161,1,105,67,141,0,82,37,226,255,238,226,228,255,204,214,129,254,162,123,100,255,185,121,234,0,45,108,231,0,66,8,56,255,132,136,128,0,172,224,66,254,175,157,188,0,230,223,226,254,242,219,69,0,184,14,119,1,82,162,56,0,114,123,20,0,162,103,85,255,49,239,99,254,156,135,215,0,111,255,167,254,39,196,214,0,144,38,79,1,249,168,125,0,155,97,156,255,23,52,219,255,150,22,144,0,44,149,165,255,40,127,183,0,196,77,233,255,118,129,210,255,170,135,230,255,214,119,198,0,233,240,35,0,253,52,7,255,117,102,48,255,21,204,154,255,179,136,177,255,23,2,3,1,149,130,89,255,252,17,159,1,70,60,26,0,144,107,17,0,180,190,60,255,56,182,59,255,110,71,54,255,198,18,129,255,149,224,87,255,223,21,152,255,138,22,182,255,250,156,205,0,236,45,208,255,79,148,242,1,101,70,209,0,103,78,174,0,101,144,172,255,152,136,237,1,191,194,136,0,113,80,125,1,152,4,141,0,155,150,53,255,196,116,245,0,239,114,73,254,19,82,17,255,124,125,234,255,40,52,191,0,42,210,158,255,155,132,165,0,178,5,42,1,64,92,40,255,36,85,77,255,178,228,118,0,137,66,96,254,115,226,66,0,110,240,69,254,151,111,80,0,167,174,236,255,227,108,107,255,188,242,65,255,183,81,255,0,57,206,181,255,47,34,181,255,213,240,158,1,71,75,95,0,156,40,24,255,102,210,81,0,171,199,228,255,154,34,41,0,227,175,75,0,21,239,195,0,138,229,95,1,76,192,49,0,117,123,87,1,227,225,130,0,125,62,63,255,2,198,171,0,254,36,13,254,145,186,206,0,148,255,244,255,35,0,166,0,30,150,219,1,92,228,212,0,92,198,60,254,62,133,200,255,201,41,59,0,125,238,109,255,180,163,238,1,140,122,82,0,9,22,88,255,197,157,47,255,153,94,57,0,88,30,182,0,84,161,85,0,178,146,124,0,166,166,7,255,21,208,223,0,156,182,242,0,155,121,185,0,83,156,174,254,154,16,118,255,186,83,232,1,223,58,121,255,29,23,88,0,35,125,127,255,170,5,149,254,164,12,130,255,155,196,29,0,161,96,136,0,7,35,29,1,162,37,251,0,3,46,242,255,0,217,188,0,57,174,226,1,206,233,2,0,57,187,136,254,123,189,9,255,201,117,127,255,186,36,204,0,231,25,216,0,80,78,105,0,19,134,129,255,148,203,68,0,141,81,125,254,248,165,200,255,214,144,135,0,151,55,166,255,38,235,91,0,21,46,154,0,223,254,150,255,35,153,180,255,125,176,29,1,43,98,30,255,216,122,230,255,233,160,12,0,57,185,12,254,240,113,7,255,5,9,16,254,26,91,108,0,109,198,203,0,8,147,40,0,129,134,228,255,124,186,40,255,114,98,132,254,166,132,23,0,99,69,44,0,9,242,238,255,184,53,59,0,132,129,102,255,52,32,243,254,147,223,200,255,123,83,179,254,135,144,201,255,141,37,56,1,151,60,227,255,90,73,156,1,203,172,187,0,80,151,47,255,94,137,231,255,36,191,59,255,225,209,181,255,74,215,213,254,6,118,179,255,153,54,193,1,50,0,231,0,104,157,72,1,140,227,154,255,182,226,16,254,96,225,92,255,115,20,170,254,6,250,78,0,248,75,173,255,53,89,6,255,0,180,118,0,72,173,1,0,64,8,206,1,174,133,223,0,185,62,133,255,214,11,98,0,197,31,208,0,171,167,244,255,22,231,181,1,150,218,185,0,247,169,97,1,165,139,247,255,47,120,149,1,103,248,51,0,60,69,28,254,25,179,196,0,124,7,218,254,58,107,81,0,184,233,156,255,252,74,36,0,118,188,67,0,141,95,53,255,222,94,165,254,46,61,53,0,206,59,115,255,47,236,250,255,74,5,32,1,129,154,238,255,106,32,226,0,121,187,61,255,3,166,241,254,67,170,172,255,29,216,178,255,23,201,252,0,253,110,243,0,200,125,57,0,109,192,96,255,52,115,238,0,38,121,243,255,201,56,33,0,194,118,130,0,75,96,25,255,170,30,230,254,39,63,253,0,36,45,250,255,251,1,239,0,160,212,92,1,45,209,237,0,243,33,87,254,237,84,201,255,212,18,157,254,212,99,127,255,217,98,16,254,139,172,239,0,168,201,130,255,143,193,169,255,238,151,193,1,215,104,41,0,239,61,165,254,2,3,242,0,22,203,177,254,177,204,22,0,149,129,213,254,31,11,41,255,0,159,121,254,160,25,114,255,162,80,200,0,157,151,11,0,154,134,78,1,216,54,252,0,48,103,133,0,105,220,197,0,253,168,77,254,53,179,23,0,24,121,240,1,255,46,96,255,107,60,135,254,98,205,249,255,63,249,119,255,120,59,211,255,114,180,55,254,91,85,237,0,149,212,77,1,56,73,49,0,86,198,150,0,93,209,160,0,69,205,182,255,244,90,43,0,20,36,176,0,122,116,221,0,51,167,39,1,231,1,63,255,13,197,134,0,3,209,34,255,135,59,202,0,167,100,78,0,47,223,76,0,185,60,62,0,178,166,123,1,132,12,161,255,61,174,43,0,195,69,144,0,127,47,191,1,34,44,78,0,57,234,52,1,255,22,40,255,246,94,146,0,83,228,128,0,60,78,224,255,0,96,210,255,153,175,236,0,159,21,73,0,180,115,196,254,131,225,106,0,255,167,134,0,159,8,112,255,120,68,194,255,176,196,198,255,118,48,168,255,93,169,1,0,112,200,102,1,74,24,254,0,19,141,4,254,142,62,63,0,131,179,187,255,77,156,155,255,119,86,164,0,170,208,146,255,208,133,154,255,148,155,58,255,162,120,232,254,252,213,155,0,241,13,42,0,94,50,131,0,179,170,112,0,140,83,151,255,55,119,84,1,140,35,239,255,153,45,67,1,236,175,39,0,54,151,103,255,158,42,65,255,196,239,135,254,86,53,203,0,149,97,47,254,216,35,17,255,70,3,70,1,103,36,90,255,40,26,173,0,184,48,13,0,163,219,217,255,81,6,1,255,221,170,108,254,233,208,93,0,100,201,249,254,86,36,35,255,209,154,30,1,227,201,251,255,2,189,167,254,100,57,3,0,13,128,41,0,197,100,75,0,150,204,235,255,145,174,59,0,120,248,149,255,85,55,225,0,114,210,53,254,199,204,119,0,14,247,74,1,63,251,129,0,67,104,151,1,135,130,80,0,79,89,55,255,117,230,157,255,25,96,143,0,213,145,5,0,69,241,120,1,149,243,95,255,114,42,20,0,131,72,2,0,154,53,20,255,73,62,109,0,196,102,152,0,41,12,204,255,122,38,11,1,250,10,145,0,207,125,148,0,246,244,222,255,41,32,85,1,112,213,126,0,162,249,86,1,71,198,127,255,81,9,21,1,98,39,4,255,204,71,45,1,75,111,137,0,234,59,231,0,32,48,95,255,204,31,114,1,29,196,181,255,51,241,167,254,93,109,142,0,104,144,45,0,235,12,181,255,52,112,164,0,76,254,202,255,174,14,162,0,61,235,147,255,43,64,185,254,233,125,217,0,243,88,167,254,74,49,8,0,156,204,66,0,124,214,123,0,38,221,118,1,146,112,236,0,114,98,177,0,151,89,199,0,87,197,112,0,185,149,161,0,44,96,165,0,248,179,20,255,188,219,216,254,40,62,13,0,243,142,141,0,229,227,206,255,172,202,35,255,117,176,225,255,82,110,38,1,42,245,14,255,20,83,97,0,49,171,10,0,242,119,120,0,25,232,61,0,212,240,147,255,4,115,56,255,145,17,239,254,202,17,251,255,249,18,245,255,99,117,239,0,184,4,179,255,246,237,51,255,37,239,137,255,166,112,166,255,81,188,33,255,185,250,142,255,54,187,173,0,208,112,201,0,246,43,228,1,104,184,88,255,212,52,196,255,51,117,108,255,254,117,155,0,46,91,15,255,87,14,144,255,87,227,204,0,83,26,83,1,159,76,227,0,159,27,213,1,24,151,108,0,117,144,179,254,137,209,82,0,38,159,10,0,115,133,201,0,223,182,156,1,110,196,93,255,57,60,233,0,5,167,105,255,154,197,164,0,96,34,186,255,147,133,37,1,220,99,190,0,1,167,84,255,20,145,171,0,194,197,251,254,95,78,133,255,252,248,243,255,225,93,131,255,187,134,196,255,216,153,170,0,20,118,158,254,140,1,118,0,86,158,15,1,45,211,41,255,147,1,100,254,113,116,76,255,211,127,108,1,103,15,48,0,193,16,102,1,69,51,95,255,107,128,157,0,137,171,233,0,90,124,144,1,106,161,182,0,175,76,236,1,200,141,172,255,163,58,104,0,233,180,52,255,240,253,14,255,162,113,254,255,38,239,138,254,52,46,166,0,241,101,33,254,131,186,156,0,111,208,62,255,124,94,160,255,31,172,254,0,112,174,56,255,188,99,27,255,67,138,251,0,125,58,128,1,156,152,174,255,178,12,247,255,252,84,158,0,82,197,14,254,172,200,83,255,37,39,46,1,106,207,167,0,24,189,34,0,131,178,144,0,206,213,4,0,161,226,210,0,72,51,105,255,97,45,187,255,78,184,223,255,176,29,251,0,79,160,86,255,116,37,178,0,82,77,213,1,82,84,141,255,226,101,212,1,175,88,199,255,245,94,247,1,172,118,109,255,166,185,190,0,131,181,120,0,87,254,93,255,134,240,73,255,32,245,143,255,139,162,103,255,179,98,18,254,217,204,112,0,147,223,120,255,53,10,243,0,166,140,150,0,125,80,200,255,14,109,219,255,91,218,1,255,252,252,47,254,109,156,116,255,115,49,127,1,204,87,211,255,148,202,217,255,26,85,249,255,14,245,134,1,76,89,169,255,242,45,230,0,59,98,172,255,114,73,132,254,78,155,49,255,158,126,84,0,49,175,43,255,16,182,84,255,157,103,35,0,104,193,109,255,67,221,154,0,201,172,1,254,8,162,88,0,165,1,29,255,125,155,229,255,30,154,220,1,103,239,92,0,220,1,109,255,202,198,1,0,94,2,142,1,36,54,44,0,235,226,158,255,170,251,214,255,185,77,9,0,97,74,242,0,219,163,149,255,240,35,118,255,223,114,88,254,192,199,3,0,106,37,24,255,201,161,118,255,97,89,99,1,224,58,103,255,101,199,147,254,222,60,99,0,234,25,59,1,52,135,27,0,102,3,91,254,168,216,235,0,229,232,136,0,104,60,129,0,46,168,238,0,39,191,67,0,75,163,47,0,143,97,98,255,56,216,168,1,168,233,252,255,35,111,22,255,92,84,43,0,26,200,87,1,91,253,152,0,202,56,70,0,142,8,77,0,80,10,175,1,252,199,76,0,22,110,82,255,129,1,194,0,11,128,61,1,87,14,145,255,253,222,190,1,15,72,174,0,85,163,86,254,58,99,44,255,45,24,188,254,26,205,15,0,19,229,210,254,248,67,195,0,99,71,184,0,154,199,37,255,151,243,121,255,38,51,75,255,201,85,130,254,44,65,250,0,57,147,243,254,146,43,59,255,89,28,53,0,33,84,24,255,179,51,18,254,189,70,83,0,11,156,179,1,98,134,119,0,158,111,111,0,119,154,73,255,200,63,140,254,45,13,13,255,154,192,2,254,81,72,42,0,46,160,185,254,44,112,6,0,146,215,149,1,26,176,104,0,68,28,87,1,236,50,153,255,179,128,250,254,206,193,191,255,166,92,137,254,53,40,239,0,210,1,204,254,168,173,35,0,141,243,45,1,36,50,109,255,15,242,194,255,227,159,122,255,176,175,202,254,70,57,72,0,40,223,56,0,208,162,58,255,183,98,93,0,15,111,12,0,30,8,76,255,132,127,246,255,45,242,103,0,69,181,15,255,10,209,30,0,3,179,121,0,241,232,218,1,123,199,88,255,2,210,202,1,188,130,81,255,94,101,208,1,103,36,45,0,76,193,24,1,95,26,241,255,165,162,187,0,36,114,140,0,202,66,5,255,37,56,147,0,152,11,243,1,127,85,232,255,250,135,212,1,185,177,113,0,90,220,75,255,69,248,146,0,50,111,50,0,92,22,80,0,244,36,115,254,163,100,82,255,25,193,6,1,127,61,36,0,253,67,30,254,65,236,170,255,161,17,215,254,63,175,140,0,55,127,4,0,79,112,233,0,109,160,40,0,143,83,7,255,65,26,238,255,217,169,140,255,78,94,189,255,0,147,190,255,147,71,186,254,106,77,127,255,233,157,233,1,135,87,237,255,208,13,236,1,155,109,36,255,180,100,218,0,180,163,18,0,190,110,9,1,17,63,123,255,179,136,180,255,165,123,123,255,144,188,81,254,71,240,108,255,25,112,11,255,227,218,51,255,167,50,234,255,114,79,108,255,31,19,115,255,183,240,99,0,227,87,143,255,72,217,248,255,102,169,95,1,129,149,149,0,238,133,12,1,227,204,35,0,208,115,26,1,102,8,234,0,112,88,143,1,144,249,14,0,240,158,172,254,100,112,119],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([194,141,153,254,40,56,83,255,121,176,46,0,42,53,76,255,158,191,154,0,91,209,92,0,173,13,16,1,5,72,226,255,204,254,149,0,80,184,207,0,100,9,122,254,118,101,171,255,252,203,0,254,160,207,54,0,56,72,249,1,56,140,13,255,10,64,107,254,91,101,52,255,225,181,248,1,139,255,132,0,230,145,17,0,233,56,23,0,119,1,241,255,213,169,151,255,99,99,9,254,185,15,191,255,173,103,109,1,174,13,251,255,178,88,7,254,27,59,68,255,10,33,2,255,248,97,59,0,26,30,146,1,176,147,10,0,95,121,207,1,188,88,24,0,185,94,254,254,115,55,201,0,24,50,70,0,120,53,6,0,142,66,146,0,228,226,249,255,104,192,222,1,173,68,219,0,162,184,36,255,143,102,137,255,157,11,23,0,125,45,98,0,235,93,225,254,56,112,160,255,70,116,243,1,153,249,55,255,129,39,17,1,241,80,244,0,87,69,21,1,94,228,73,255,78,66,65,255,194,227,231,0,61,146,87,255,173,155,23,255,112,116,219,254,216,38,11,255,131,186,133,0,94,212,187,0,100,47,91,0,204,254,175,255,222,18,215,254,173,68,108,255,227,228,79,255,38,221,213,0,163,227,150,254,31,190,18,0,160,179,11,1,10,90,94,255,220,174,88,0,163,211,229,255,199,136,52,0,130,95,221,255,140,188,231,254,139,113,128,255,117,171,236,254,49,220,20,255,59,20,171,255,228,109,188,0,20,225,32,254,195,16,174,0,227,254,136,1,135,39,105,0,150,77,206,255,210,238,226,0,55,212,132,254,239,57,124,0,170,194,93,255,249,16,247,255,24,151,62,255,10,151,10,0,79,139,178,255,120,242,202,0,26,219,213,0,62,125,35,255,144,2,108,255,230,33,83,255,81,45,216,1,224,62,17,0,214,217,125,0,98,153,153,255,179,176,106,254,131,93,138,255,109,62,36,255,178,121,32,255,120,252,70,0,220,248,37,0,204,88,103,1,128,220,251,255,236,227,7,1,106,49,198,255,60,56,107,0,99,114,238,0,220,204,94,1,73,187,1,0,89,154,34,0,78,217,165,255,14,195,249,255,9,230,253,255,205,135,245,0,26,252,7,255,84,205,27,1,134,2,112,0,37,158,32,0,231,91,237,255,191,170,204,255,152,7,222,0,109,192,49,0,193,166,146,255,232,19,181,255,105,142,52,255,103,16,27,1,253,200,165,0,195,217,4,255,52,189,144,255,123,155,160,254,87,130,54,255,78,120,61,255,14,56,41,0,25,41,125,255,87,168,245,0,214,165,70,0,212,169,6,255,219,211,194,254,72,93,164,255,197,33,103,255,43,142,141,0,131,225,172,0,244,105,28,0,68,68,225,0,136,84,13,255,130,57,40,254,139,77,56,0,84,150,53,0,54,95,157,0,144,13,177,254,95,115,186,0,117,23,118,255,244,166,241,255,11,186,135,0,178,106,203,255,97,218,93,0,43,253,45,0,164,152,4,0,139,118,239,0,96,1,24,254,235,153,211,255,168,110,20,255,50,239,176,0,114,41,232,0,193,250,53,0,254,160,111,254,136,122,41,255,97,108,67,0,215,152,23,255,140,209,212,0,42,189,163,0,202,42,50,255,106,106,189,255,190,68,217,255,233,58,117,0,229,220,243,1,197,3,4,0,37,120,54,254,4,156,134,255,36,61,171,254,165,136,100,255,212,232,14,0,90,174,10,0,216,198,65,255,12,3,64,0,116,113,115,255,248,103,8,0,231,125,18,255,160,28,197,0,30,184,35,1,223,73,249,255,123,20,46,254,135,56,37,255,173,13,229,1,119,161,34,255,245,61,73,0,205,125,112,0,137,104,134,0,217,246,30,255,237,142,143,0,65,159,102,255,108,164,190,0,219,117,173,255,34,37,120,254,200,69,80,0,31,124,218,254,74,27,160,255,186,154,199,255,71,199,252,0,104,81,159,1,17,200,39,0,211,61,192,1,26,238,91,0,148,217,12,0,59,91,213,255,11,81,183,255,129,230,122,255,114,203,145,1,119,180,66,255,72,138,180,0,224,149,106,0,119,82,104,255,208,140,43,0,98,9,182,255,205,101,134,255,18,101,38,0,95,197,166,255,203,241,147,0,62,208,145,255,133,246,251,0,2,169,14,0,13,247,184,0,142,7,254,0,36,200,23,255,88,205,223,0,91,129,52,255,21,186,30,0,143,228,210,1,247,234,248,255,230,69,31,254,176,186,135,255,238,205,52,1,139,79,43,0,17,176,217,254,32,243,67,0,242,111,233,0,44,35,9,255,227,114,81,1,4,71,12,255,38,105,191,0,7,117,50,255,81,79,16,0,63,68,65,255,157,36,110,255,77,241,3,255,226,45,251,1,142,25,206,0,120,123,209,1,28,254,238,255,5,128,126,255,91,222,215,255,162,15,191,0,86,240,73,0,135,185,81,254,44,241,163,0,212,219,210,255,112,162,155,0,207,101,118,0,168,72,56,255,196,5,52,0,72,172,242,255,126,22,157,255,146,96,59,255,162,121,152,254,140,16,95,0,195,254,200,254,82,150,162,0,119,43,145,254,204,172,78,255,166,224,159,0,104,19,237,255,245,126,208,255,226,59,213,0,117,217,197,0,152,72,237,0,220,31,23,254,14,90,231,255,188,212,64,1,60,101,246,255,85,24,86,0,1,177,109,0,146,83,32,1,75,182,192,0,119,241,224,0,185,237,27,255,184,101,82,1,235,37,77,255,253,134,19,0,232,246,122,0,60,106,179,0,195,11,12,0,109,66,235,1,125,113,59,0,61,40,164,0,175,104,240,0,2,47,187,255,50,12,141,0,194,139,181,255,135,250,104,0,97,92,222,255,217,149,201,255,203,241,118,255,79,151,67,0,122,142,218,255,149,245,239,0,138,42,200,254,80,37,97,255,124,112,167,255,36,138,87,255,130,29,147,255,241,87,78,255,204,97,19,1,177,209,22,255,247,227,127,254,99,119,83,255,212,25,198,1,16,179,179,0,145,77,172,254,89,153,14,255,218,189,167,0,107,233,59,255,35,33,243,254,44,112,112,255,161,127,79,1,204,175,10,0,40,21,138,254,104,116,228,0,199,95,137,255,133,190,168,255,146,165,234,1,183,99,39,0,183,220,54,254,255,222,133,0,162,219,121,254,63,239,6,0,225,102,54,255,251,18,246,0,4,34,129,1,135,36,131,0,206,50,59,1,15,97,183,0,171,216,135,255,101,152,43,255,150,251,91,0,38,145,95,0,34,204,38,254,178,140,83,255,25,129,243,255,76,144,37,0,106,36,26,254,118,144,172,255,68,186,229,255,107,161,213,255,46,163,68,255,149,170,253,0,187,17,15,0,218,160,165,255,171,35,246,1,96,13,19,0,165,203,117,0,214,107,192,255,244,123,177,1,100,3,104,0,178,242,97,255,251,76,130,255,211,77,42,1,250,79,70,255,63,244,80,1,105,101,246,0,61,136,58,1,238,91,213,0,14,59,98,255,167,84,77,0,17,132,46,254,57,175,197,255,185,62,184,0,76,64,207,0,172,175,208,254,175,74,37,0,138,27,211,254,148,125,194,0,10,89,81,0,168,203,101,255,43,213,209,1,235,245,54,0,30,35,226,255,9,126,70,0,226,125,94,254,156,117,20,255,57,248,112,1,230,48,64,255,164,92,166,1,224,214,230,255,36,120,143,0,55,8,43,255,251,1,245,1,106,98,165,0,74,107,106,254,53,4,54,255,90,178,150,1,3,120,123,255,244,5,89,1,114,250,61,255,254,153,82,1,77,15,17,0,57,238,90,1,95,223,230,0,236,52,47,254,103,148,164,255,121,207,36,1,18,16,185,255,75,20,74,0,187,11,101,0,46,48,129,255,22,239,210,255,77,236,129,255,111,77,204,255,61,72,97,255,199,217,251,255,42,215,204,0,133,145,201,255,57,230,146,1,235,100,198,0,146,73,35,254,108,198,20,255,182,79,210,255,82,103,136,0,246,108,176,0,34,17,60,255,19,74,114,254,168,170,78,255,157,239,20,255,149,41,168,0,58,121,28,0,79,179,134,255,231,121,135,255,174,209,98,255,243,122,190,0,171,166,205,0,212,116,48,0,29,108,66,255,162,222,182,1,14,119,21,0,213,39,249,255,254,223,228,255,183,165,198,0,133,190,48,0,124,208,109,255,119,175,85,255,9,209,121,1,48,171,189,255,195,71,134,1,136,219,51,255,182,91,141,254,49,159,72,0,35,118,245,255,112,186,227,255,59,137,31,0,137,44,163,0,114,103,60,254,8,213,150,0,162,10,113,255,194,104,72,0,220,131,116,255,178,79,92,0,203,250,213,254,93,193,189,255,130,255,34,254,212,188,151,0,136,17,20,255,20,101,83,255,212,206,166,0,229,238,73,255,151,74,3,255,168,87,215,0,155,188,133,255,166,129,73,0,240,79,133,255,178,211,81,255,203,72,163,254,193,168,165,0,14,164,199,254,30,255,204,0,65,72,91,1,166,74,102,255,200,42,0,255,194,113,227,255,66,23,208,0,229,216,100,255,24,239,26,0,10,233,62,255,123,10,178,1,26,36,174,255,119,219,199,1,45,163,190,0,16,168,42,0,166,57,198,255,28,26,26,0,126,165,231,0,251,108,100,255,61,229,121,255,58,118,138,0,76,207,17,0,13,34,112,254,89,16,168,0,37,208,105,255,35,201,215,255,40,106,101,254,6,239,114,0,40,103,226,254,246,127,110,255,63,167,58,0,132,240,142,0,5,158,88,255,129,73,158,255,94,89,146,0,230,54,146,0,8,45,173,0,79,169,1,0,115,186,247,0,84,64,131,0,67,224,253,255,207,189,64,0,154,28,81,1,45,184,54,255,87,212,224,255,0,96,73,255,129,33,235,1,52,66,80,255,251,174,155,255,4,179,37,0,234,164,93,254,93,175,253,0,198,69,87,255,224,106,46,0,99,29,210,0,62,188,114,255,44,234,8,0,169,175,247,255,23,109,137,255,229,182,39,0,192,165,94,254,245,101,217,0,191,88,96,0,196,94,99,255,106,238,11,254,53,126,243,0,94,1,101,255,46,147,2,0,201,124,124,255,141,12,218,0,13,166,157,1,48,251,237,255,155,250,124,255,106,148,146,255,182,13,202,0,28,61,167,0,217,152,8,254,220,130,45,255,200,230,255,1,55,65,87,255,93,191,97,254,114,251,14,0,32,105,92,1,26,207,141,0,24,207,13,254,21,50,48,255,186,148,116,255,211,43,225,0,37,34,162,254,164,210,42,255,68,23,96,255,182,214,8,255,245,117,137,255,66,195,50,0,75,12,83,254,80,140,164,0,9,165,36,1,228,110,227,0,241,17,90,1,25,52,212,0,6,223,12,255,139,243,57,0,12,113,75,1,246,183,191,255,213,191,69,255,230,15,142,0,1,195,196,255,138,171,47,255,64,63,106,1,16,169,214,255,207,174,56,1,88,73,133,255,182,133,140,0,177,14,25,255,147,184,53,255,10,227,161,255,120,216,244,255,73,77,233,0,157,238,139,1,59,65,233,0,70,251,216,1,41,184,153,255,32,203,112,0,146,147,253,0,87,101,109,1,44,82,133,255,244,150,53,255,94,152,232,255,59,93,39,255,88,147,220,255,78,81,13,1,32,47,252,255,160,19,114,255,93,107,39,255,118,16,211,1,185,119,209,255,227,219,127,254,88,105,236,255,162,110,23,255,36,166,110,255,91,236,221,255,66,234,116,0,111,19,244,254,10,233,26,0,32,183,6,254,2,191,242,0,218,156,53,254,41,60,70,255,168,236,111,0,121,185,126,255,238,142,207,255,55,126,52,0,220,129,208,254,80,204,164,255,67,23,144,254,218,40,108,255,127,202,164,0,203,33,3,255,2,158,0,0,37,96,188,255,192,49,74,0,109,4,0,0,111,167,10,254,91,218,135,255,203,66,173,255,150,194,226,0,201,253,6,255,174,102,121,0,205,191,110,0,53,194,4,0,81,40,45,254,35,102,143,255,12,108,198,255,16,27,232,255,252,71,186,1,176,110,114,0,142,3,117,1,113,77,142,0,19,156,197,1,92,47,252,0,53,232,22,1,54,18,235,0,46,35,189,255,236,212,129,0,2,96,208,254,200,238,199,255,59,175,164,255,146,43,231,0,194,217,52,255,3,223,12,0,138,54,178,254,85,235,207,0,232,207,34,0,49,52,50,255,166,113,89,255,10,45,216,255,62,173,28,0,111,165,246,0,118,115,91,255,128,84,60,0,167,144,203,0,87,13,243,0,22,30,228,1,177,113,146,255,129,170,230,254,252,153,129,255,145,225,43,0,70,231,5,255,122,105,126,254,86,246,148,255,110,37,154,254,209,3,91,0,68,145,62,0,228,16,165,255,55,221,249,254,178,210,91,0,83,146,226,254,69,146,186,0,93,210,104,254,16,25,173,0,231,186,38,0,189,122,140,255,251,13,112,255,105,110,93,0,251,72,170,0,192,23,223,255,24,3,202,1,225,93,228,0,153,147,199,254,109,170,22,0,248,101,246,255,178,124,12,255,178,254,102,254,55,4,65,0,125,214,180,0,183,96,147,0,45,117,23,254,132,191,249,0,143,176,203,254,136,183,54,255,146,234,177,0,146,101,86,255,44,123,143,1,33,209,152,0,192,90,41,254,83,15,125,255,213,172,82,0,215,169,144,0,16,13,34,0,32,209,100,255,84,18,249,1,197,17,236,255,217,186,230,0,49,160,176,255,111,118,97,255,237,104,235,0,79,59,92,254,69,249,11,255,35,172,74,1,19,118,68,0,222,124,165,255,180,66,35,255,86,174,246,0,43,74,111,255,126,144,86,255,228,234,91,0,242,213,24,254,69,44,235,255,220,180,35,0,8,248,7,255,102,47,92,255,240,205,102,255,113,230,171,1,31,185,201,255,194,246,70,255,122,17,187,0,134,70,199,255,149,3,150,255,117,63,103,0,65,104,123,255,212,54,19,1,6,141,88,0,83,134,243,255,136,53,103,0,169,27,180,0,177,49,24,0,111,54,167,0,195,61,215,255,31,1,108,1,60,42,70,0,185,3,162,255,194,149,40,255,246,127,38,254,190,119,38,255,61,119,8,1,96,161,219,255,42,203,221,1,177,242,164,255,245,159,10,0,116,196,0,0,5,93,205,254,128,127,179,0,125,237,246,255,149,162,217,255,87,37,20,254,140,238,192,0,9,9,193,0,97,1,226,0,29,38,10,0,0,136,63,255,229,72,210,254,38,134,92,255,78,218,208,1,104,36,84,255,12,5,193,255,242,175,61,255,191,169,46,1,179,147,147,255,113,190,139,254,125,172,31,0,3,75,252,254,215,36,15,0,193,27,24,1,255,69,149,255,110,129,118,0,203,93,249,0,138,137,64,254,38,70,6,0,153,116,222,0,161,74,123,0,193,99,79,255,118,59,94,255,61,12,43,1,146,177,157,0,46,147,191,0,16,255,38,0,11,51,31,1,60,58,98,255,111,194,77,1,154,91,244,0,140,40,144,1,173,10,251,0,203,209,50,254,108,130,78,0,228,180,90,0,174,7,250,0,31,174,60,0,41,171,30,0,116,99,82,255,118,193,139,255,187,173,198,254,218,111,56,0,185,123,216,0,249,158,52,0,52,180,93,255,201,9,91,255,56,45,166,254,132,155,203,255,58,232,110,0,52,211,89,255,253,0,162,1,9,87,183,0,145,136,44,1,94,122,245,0,85,188,171,1,147,92,198,0,0,8,104,0,30,95,174,0,221,230,52,1,247,247,235,255,137,174,53,255,35,21,204,255,71,227,214,1,232,82,194,0,11,48,227,255,170,73,184,255,198,251,252,254,44,112,34,0,131,101,131,255,72,168,187,0,132,135,125,255,138,104,97,255,238,184,168,255,243,104,84,255,135,216,226,255,139,144,237,0,188,137,150,1,80,56,140,255,86,169,167,255,194,78,25,255,220,17,180,255,17,13,193,0,117,137,212,255,141,224,151,0,49,244,175,0,193,99,175,255,19,99,154,1,255,65,62,255,156,210,55,255,242,244,3,255,250,14,149,0,158,88,217,255,157,207,134,254,251,232,28,0,46,156,251,255,171,56,184,255,239,51,234,0,142,138,131,255,25,254,243,1,10,201,194,0,63,97,75,0,210,239,162,0,192,200,31,1,117,214,243,0,24,71,222,254,54,40,232,255,76,183,111,254,144,14,87,255,214,79,136,255,216,196,212,0,132,27,140,254,131,5,253,0,124,108,19,255,28,215,75,0,76,222,55,254,233,182,63,0,68,171,191,254,52,111,222,255,10,105,77,255,80,170,235,0,143,24,88,255,45,231,121,0,148,129,224,1,61,246,84,0,253,46,219,255,239,76,33,0,49,148,18,254,230,37,69,0,67,134,22,254,142,155,94,0,31,157,211,254,213,42,30,255,4,228,247,254,252,176,13,255,39,0,31,254,241,244,255,255,170,45,10,254,253,222,249,0,222,114,132,0,255,47,6,255,180,163,179,1,84,94,151,255,89,209,82,254,229,52,169,255,213,236,0,1,214,56,228,255,135,119,151,255,112,201,193,0,83,160,53,254,6,151,66,0,18,162,17,0,233,97,91,0,131,5,78,1,181,120,53,255,117,95,63,255,237,117,185,0,191,126,136,255,144,119,233,0,183,57,97,1,47,201,187,255,167,165,119,1,45,100,126,0,21,98,6,254,145,150,95,255,120,54,152,0,209,98,104,0,143,111,30,254,184,148,249,0,235,216,46,0,248,202,148,255,57,95,22,0,242,225,163,0,233,247,232,255,71,171,19,255,103,244,49,255,84,103,93,255,68,121,244,1,82,224,13,0,41,79,43,255,249,206,167,255,215,52,21,254,192,32,22,255,247,111,60,0,101,74,38,255,22,91,84,254,29,28,13,255,198,231,215,254,244,154,200,0,223,137,237,0,211,132,14,0,95,64,206,255,17,62,247,255,233,131,121,1,93,23,77,0,205,204,52,254,81,189,136,0,180,219,138,1,143,18,94,0,204,43,140,254,188,175,219,0,111,98,143,255,151,63,162,255,211,50,71,254,19,146,53,0,146,45,83,254,178,82,238,255,16,133,84,255,226,198,93,255,201,97,20,255,120,118,35,255,114,50,231,255,162,229,156,255,211,26,12,0,114,39,115,255,206,212,134,0,197,217,160,255,116,129,94,254,199,215,219,255,75,223,249,1,253,116,181,255,232,215,104,255,228,130,246,255,185,117,86,0,14,5,8,0,239,29,61,1,237,87,133,255,125,146,137,254,204,168,223,0,46,168,245,0,154,105,22,0,220,212,161,255,107,69,24,255,137,218,181,255,241,84,198,255,130,122,211,255,141,8,153,255,190,177,118,0,96,89,178,0,255,16,48,254,122,96,105,255,117,54,232,255,34,126,105,255,204,67,166,0,232,52,138,255,211,147,12,0,25,54,7,0,44,15,215,254,51,236,45,0,190,68,129,1,106,147,225,0,28,93,45,254,236,141,15,255,17,61,161,0,220,115,192,0,236,145,24,254,111,168,169,0,224,58,63,255,127,164,188,0,82,234,75,1,224,158,134,0,209,68,110,1,217,166,217,0,70,225,166,1,187,193,143,255,16,7,88,255,10,205,140,0,117,192,156,1,17,56,38,0,27,124,108,1,171,215,55,255,95,253,212,0,155,135,168,255,246,178,153,254,154,68,74,0,232,61,96,254,105,132,59,0,33,76,199,1,189,176,130,255,9,104,25,254,75,198,102,255,233,1,112,0,108,220,20,255,114,230,70,0,140,194,133,255,57,158,164,254,146,6,80,255,169,196,97,1,85,183,130,0,70,158,222,1,59,237,234,255,96,25,26,255,232,175,97,255,11,121,248,254,88,35,194,0,219,180,252,254,74,8,227,0,195,227,73,1,184,110,161,255,49,233,164,1,128,53,47,0,82,14,121,255,193,190,58,0,48,174,117,255,132,23,32,0,40,10,134,1,22,51,25,255,240,11,176,255,110,57,146,0,117,143,239,1,157,101,118,255,54,84,76,0,205,184,18,255,47,4,72,255,78,112,85,255,193,50,66,1,93,16,52,255,8,105,134,0,12,109,72,255,58,156,251,0,144,35,204,0,44,160,117,254,50,107,194,0,1,68,165,255,111,110,162,0,158,83,40,254,76,214,234,0,58,216,205,255,171,96,147,255,40,227,114,1,176,227,241,0,70,249,183,1,136,84,139,255,60,122,247,254,143,9,117,255,177,174,137,254,73,247,143,0,236,185,126,255,62,25,247,255,45,64,56,255,161,244,6,0,34,57,56,1,105,202,83,0,128,147,208,0,6,103,10,255,74,138,65,255,97,80,100,255,214,174,33,255,50,134,74,255,110,151,130,254,111,84,172,0,84,199,75,254,248,59,112,255,8,216,178,1,9,183,95,0,238,27,8,254,170,205,220,0,195,229,135,0,98,76,237,255,226,91,26,1,82,219,39,255,225,190,199,1,217,200,121,255,81,179,8,255,140,65,206,0,178,207,87,254,250,252,46,255,104,89,110,1,253,189,158,255,144,214,158,255,160,245,54,255,53,183,92,1,21,200,194,255,146,33,113,1,209,1,255,0,235,106,43,255,167,52,232,0,157,229,221,0,51,30,25,0,250,221,27,1,65,147,87,255,79,123,196,0,65,196,223,255,76,44,17,1,85,241,68,0,202,183,249,255,65,212,212,255,9,33,154,1,71,59,80,0,175,194,59,255,141,72,9,0,100,160,244,0,230,208,56,0,59,25,75,254,80,194,194,0,18,3,200,254,160,159,115,0,132,143,247,1,111,93,57,255,58,237,11,1,134,222,135,255,122,163,108,1,123,43,190,255,251,189,206,254,80,182,72,255,208,246,224,1,17,60,9,0,161,207,38,0,141,109,91,0,216,15,211,255,136,78,110,0,98,163,104,255,21,80,121,255,173,178,183,1,127,143,4,0,104,60,82,254,214,16,13,255,96,238,33,1,158,148,230,255,127,129,62,255,51,255,210,255,62,141,236,254,157,55,224,255,114,39,244,0,192,188,250,255,228,76,53,0,98,84,81,255,173,203,61,254,147,50,55,255,204,235,191,0,52,197,244,0,88,43,211,254,27,191,119,0,188,231,154,0,66,81,161,0,92,193,160,1,250,227,120,0,123,55,226,0,184,17,72,0,133,168,10,254,22,135,156,255,41,25,103,255,48,202,58,0,186,149,81,255,188,134,239,0,235,181,189,254,217,139,188,255,74,48,82,0,46,218,229,0,189,253,251,0,50,229,12,255,211,141,191,1,128,244,25,255,169,231,122,254,86,47,189,255,132,183,23,255,37,178,150,255,51,137,253,0,200,78,31,0,22,105,50,0,130,60,0,0,132,163,91,254,23,231,187,0,192,79,239,0,157,102,164,255,192,82,20,1,24,181,103,255,240,9,234,0,1,123,164,255,133,233,0,255,202,242,242,0,60,186,245,0,241,16,199,255,224,116,158,254,191,125,91,255,224,86,207,0,121,37,231,255,227,9,198,255,15,153,239,255,121,232,217,254,75,112,82,0,95,12,57,254,51,214,105,255,148,220,97,1,199,98,36,0,156,209,12,254,10,212,52,0,217,180,55,254,212,170,232,255,216,20,84,255,157,250,135,0,157,99,127,254,1,206,41,0,149,36,70,1,54,196,201,255,87,116,0,254,235,171,150,0,27,163,234,0,202,135,180,0,208,95,0,254,123,156,93,0,183,62,75,0,137,235,182,0,204,225,255,255,214,139,210,255,2,115,8,255,29,12,111,0,52,156,1,0,253,21,251,255,37,165,31,254,12,130,211,0,106,18,53,254,42,99,154,0,14,217,61,254,216,11,92,255,200,197,112,254,147,38,199,0,36,252,120,254,107,169,77,0,1,123,159,255,207,75,102,0,163,175,196,0,44,1,240,0,120,186,176,254,13,98,76,255,237,124,241,255,232,146,188,255,200,96,224,0,204,31,41,0,208,200,13,0,21,225,96,255,175,156,196,0,247,208,126,0,62,184,244,254,2,171,81,0,85,115,158,0,54,64,45,255,19,138,114,0,135,71,205,0,227,47,147,1,218,231,66,0,253,209,28,0,244,15,173,255,6,15,118,254,16,150,208,255,185,22,50,255,86,112,207,255,75,113,215,1,63,146,43,255,4,225,19,254,227,23,62,255,14,255,214,254,45,8,205,255,87,197,151,254,210,82,215,255,245,248,247,255,128,248,70,0,225,247,87,0,90,120,70,0,213,245,92,0,13,133,226,0,47,181,5,1,92,163,105,255,6,30,133,254,232,178,61,255,230,149,24,255,18,49,158,0,228,100,61,254,116,243,251,255,77,75,92,1,81,219,147,255,76,163,254,254,141,213,246,0,232,37,152,254,97,44,100,0,201,37,50,1,212,244,57,0,174,171,183,255,249,74,112,0,166,156,30,0,222,221,97,255,243,93,73,254,251,101,100,255,216,217,93,255,254,138,187,255,142,190,52,255,59,203,177,255,200,94,52,0,115,114,158,255,165,152,104,1,126,99,226,255,118,157,244,1,107,200,16,0,193,90,229,0,121,6,88,0,156,32,93,254,125,241,211,255,14,237,157,255,165,154,21,255,184,224,22,255,250,24,152,255,113,77,31,0,247,171,23,255,237,177,204,255,52,137,145,255,194,182,114,0,224,234,149,0,10,111,103,1,201,129,4,0,238,142,78,0,52,6,40,255,110,213,165,254,60,207,253,0,62,215,69,0,96,97,0,255,49,45,202,0,120,121,22,255,235,139,48,1,198,45,34,255,182,50,27,1,131,210,91,255,46,54,128,0,175,123,105,255,198,141,78,254,67,244,239,255,245,54,103,254,78,38,242,255,2,92,249,254,251,174,87,255,139,63,144,0,24,108,27,255,34,102,18,1,34,22,152,0,66,229,118,254,50,143,99,0,144,169,149,1,118,30,152,0,178,8,121,1,8,159,18,0,90,101,230,255,129,29,119,0,68,36,11,1,232,183,55,0,23,255,96,255,161,41,193,255,63,139,222,0,15,179,243,0,255,100,15,255,82,53,135,0,137,57,149,1,99,240,170,255,22,230,228,254,49,180,82,255,61,82,43,0,110,245,217,0,199,125,61,0,46,253,52,0,141,197,219,0,211,159,193,0,55,121,105,254,183,20,129,0,169,119,170,255,203,178,139,255,135,40,182,255,172,13,202,255,65,178,148,0,8,207,43,0,122,53,127,1,74,161,48,0,227,214,128,254,86,11,243,255,100,86,7,1,245,68,134,255,61,43,21,1,152,84,94,255,190,60,250,254,239,118,232,255,214,136,37,1,113,76,107,255,93,104,100,1,144,206,23,255,110,150,154,1,228,103,185,0,218,49,50,254,135,77,139,255,185,1,78,0,0,161,148,255,97,29,233,255,207,148,149,255,160,168,0,0,91,128,171,255,6,28,19,254,11,111,247,0,39,187,150,255,138,232,149,0,117,62,68,255,63,216,188,255,235,234,32,254,29,57,160,255,25,12,241,1,169,60,191,0,32,131,141,255,237,159,123,255,94,197,94,254,116,254,3,255,92,179,97,254,121,97,92,255,170,112,14,0,21,149,248,0,248,227,3,0,80,96,109,0,75,192,74,1,12,90,226,255,161,106,68,1,208,114,127,255,114,42,255,254,74,26,74,255,247,179,150,254,121,140,60,0,147,70,200,255,214,40,161,255,161,188,201,255,141,65,135,255,242,115,252,0,62,47,202,0,180,149,255,254,130,55,237,0,165,17,186,255,10,169,194,0,156,109,218,255,112,140,123,255,104,128,223,254,177,142,108,255,121,37,219,255,128,77,18,255,111,108,23,1,91,192,75,0,174,245,22,255,4,236,62,255,43,64,153,1,227,173,254,0,237,122,132,1,127,89,186,255,142,82,128,254,252,84,174,0,90,179,177,1,243,214,87,255,103,60,162,255,208,130,14,255,11,130,139,0,206,129,219,255,94,217,157,255,239,230,230,255,116,115,159,254,164,107,95,0,51,218,2,1,216,125,198,255,140,202,128,254,11,95,68,255,55,9,93,254,174,153,6,255,204,172,96,0,69,160,110,0,213,38,49,254,27,80,213,0,118,125,114,0,70,70,67,255,15,142,73,255,131,122,185,255,243,20,50,254,130,237,40,0,210,159,140,1,197,151,65,255,84,153,66,0,195,126,90,0,16,238,236,1,118,187,102,255,3,24,133,255,187,69,230,0,56,197,92,1,213,69,94,255,80,138,229,1,206,7,230,0,222,111,230,1,91,233,119,255,9,89,7,1,2,98,1,0,148,74,133,255,51,246,180,255,228,177,112,1,58,189,108,255,194,203,237,254,21,209,195,0,147,10,35,1,86,157,226,0,31,163,139,254,56,7,75,255,62,90,116,0,181,60,169,0,138,162,212,254,81,167,31,0,205,90,112,255,33,112,227,0,83,151,117,1,177,224,73,255,174,144,217,255,230,204,79,255,22,77,232,255,114,78,234,0,224,57,126,254,9,49,141,0,242,147,165,1,104,182,140,255,167,132,12,1,123,68,127,0,225,87,39,1,251,108,8,0,198,193,143,1,121,135,207,255,172,22,70,0,50,68,116,255,101,175,40,255,248,105,233,0,166,203,7,0,110,197,218,0,215,254,26,254,168,226,253,0,31,143,96,0,11,103,41,0,183,129,203,254,100,247,74,255,213,126,132,0,210,147,44,0,199,234,27,1,148,47,181,0,155,91,158,1,54,105,175,255,2,78,145,254,102,154,95,0,128,207,127,254,52,124,236,255,130,84,71,0,221,243,211,0,152,170,207,0,222,106,199,0,183,84,94,254,92,200,56,255,138,182,115,1,142,96,146,0,133,136,228,0,97,18,150,0,55,251,66,0,140,102,4,0,202,103,151,0,30,19,248,255,51,184,207,0,202,198,89,0,55,197,225,254,169,95,249,255,66,65,68,255,188,234,126,0,166,223,100,1,112,239,244,0,144,23,194,0,58,39,182,0,244,44,24,254,175,68,179,255,152,118,154,1,176,162,130,0,217,114,204,254,173,126,78,255,33,222,30,255,36,2,91,255,2,143,243,0,9,235,215,0,3,171,151,1,24,215,245,255,168,47,164,254,241,146,207,0,69,129,180,0,68,243,113,0,144,53,72,254,251,45,14,0,23,110,168,0,68,68,79,255,110,70,95,254,174,91,144,255,33,206,95,255,137,41,7,255,19,187,153,254,35,255,112,255,9,145,185,254,50,157,37,0,11,112,49,1,102,8,190,255,234,243,169,1,60,85,23,0,74,39,189,0,116,49,239,0,173,213,210,0,46,161,108,255,159,150,37,0,196,120,185,255,34,98,6,255,153,195,62,255,97,230,71,255,102,61,76,0,26,212,236,255,164,97,16,0,198,59,146,0,163,23,196,0,56,24,61,0,181,98,193,0,251,147,229,255,98,189,24,255,46,54,206,255,234,82,246,0,183,103,38,1,109,62,204,0,10,240,224,0,146,22,117,255,142,154,120,0,69,212,35,0,208,99,118,1,121,255,3,255,72,6,194,0,117,17,197,255,125,15,23,0,154,79,153,0,214,94,197,255,185,55,147,255,62,254,78,254,127,82,153,0,110,102,63,255,108,82,161,255,105,187,212,1,80,138,39,0,60,255,93,255,72,12,186,0,210,251,31,1,190,167,144,255,228,44,19,254,128,67,232,0,214,249,107,254,136,145,86,255,132,46,176,0,189,187,227,255,208,22,140,0,217,211,116,0,50,81,186,254,139,250,31,0,30,64,198,1,135,155,100,0,160,206,23,254,187,162,211,255,16,188,63,0,254,208,49,0,85,84,191,0,241,192,242,255,153,126,145,1,234,162,162,255,230,97,216,1,64,135,126,0,190,148,223,1,52,0,43,255,28,39,189,1,64,136,238,0,175,196,185,0,98,226,213,255,127,159,244,1,226,175,60,0,160,233,142,1,180,243,207,255,69,152,89,1,31,101,21,0,144,25,164,254,139,191,209,0,91,25,121,0,32,147,5,0,39,186,123,255,63,115,230,255,93,167,198,255,143,213,220,255,179,156,19,255,25,66,122,0,214,160,217,255,2,45,62,255,106,79,146,254,51,137,99,255,87,100,231,255,175,145,232,255,101,184,1,255,174,9,125,0,82,37,161,1,36,114,141,255,48,222,142,255,245,186,154,0,5,174,221,254,63,114,155,255,135,55,160,1,80,31,135,0,126,250,179,1,236,218,45,0,20,28,145,1,16,147,73,0,249,189,132,1,17,189,192,255,223,142,198,255,72,20,15,255,250,53,237,254,15,11,18,0,27,211,113,254,213,107,56,255,174,147,146,255,96,126,48,0,23,193,109,1,37,162,94,0,199,157,249,254,24,128,187,255,205,49,178,254,93,164,42,255,43,119,235,1,88,183,237,255,218,210,1,255,107,254,42,0,230,10,99,255,162,0,226,0,219,237,91,0,129,178,203,0,208,50,95,254,206,208,95,255,247,191,89,254,110,234,79,255,165,61,243,0,20,122,112,255,246,246,185,254,103,4,123,0,233,99,230,1,219,91,252,255,199,222,22,255,179,245,233,255,211,241,234,0,111,250,192,255,85,84,136,0,101,58,50,255,131,173,156,254,119,45,51,255,118,233,16,254,242,90,214,0,94,159,219,1,3,3,234,255,98,76,92,254,80,54,230,0,5,228,231,254,53,24,223,255,113,56,118,1,20,132,1,255,171,210,236,0,56,241,158,255,186,115,19,255,8,229,174,0,48,44,0,1,114,114,166,255,6,73,226,255,205,89,244,0,137,227,75,1,248,173,56,0,74,120,246,254,119,3,11,255,81,120,198,255,136,122,98,255,146,241,221,1,109,194,78,255,223,241,70,1,214,200,169,255,97,190,47,255,47,103,174,255,99,92,72,254,118,233,180,255,193,35,233,254,26,229,32,255,222,252,198,0,204,43,71,255,199,84,172,0,134,102,190,0,111,238,97,254,230,40,230,0,227,205,64,254,200,12,225,0,166,25,222,0,113,69,51,255,143,159,24,0,167,184,74,0,29,224,116,254,158,208,233,0,193,116,126,255,212,11,133,255,22,58,140,1,204,36,51,255,232,30,43,0,235,70,181,255,64,56,146,254,169,18,84,255,226,1,13,255,200,50,176,255,52,213,245,254,168,209,97,0,191,71,55,0,34,78,156,0,232,144,58,1,185,74,189,0,186,142,149,254,64,69,127,255,161,203,147,255,176,151,191,0,136,231,203,254,163,182,137,0,161,126,251,254,233,32,66,0,68,207,66,0,30,28,37,0,93,114,96,1,254,92,247,255,44,171,69,0,202,119,11,255,188,118,50,1,255,83,136,255,71,82,26,0,70,227,2,0,32,235,121,1,181,41,154,0,71,134,229,254,202,255,36,0,41,152,5,0,154,63,73,255,34,182,124,0,121,221,150,255,26,204,213,1,41,172,87,0,90,157,146,255,109,130,20,0,71,107,200,255,243,102,189,0,1,195,145,254,46,88,117,0,8,206,227,0,191,110,253,255,109,128,20,254,134,85,51,255,137,177,112,1,216,34,22,255,131,16,208,255,121,149,170,0,114,19,23,1,166,80,31,255,113,240,122,0,232,179,250,0,68,110,180,254,210,170,119,0,223,108,164,255,207,79,233,255,27,229,226,254,209,98,81,255,79,68,7,0,131,185,100,0,170,29,162,255,17,162,107,255,57,21,11,1,100,200,181,255,127,65,166,1,165,134,204,0,104,167,168,0,1,164,79,0,146,135,59,1,70,50,128,255,102,119,13,254,227,6,135,0,162,142,179,255,160,100,222,0,27,224,219,1,158,93,195,255,234,141,137,0,16,24,125,255,238,206,47,255,97,17,98,255,116,110,12,255,96,115,77,0,91,227,232,255,248,254,79,255,92,229,6,254,88,198,139,0,206,75,129,0,250,77,206,255,141,244,123,1,138,69,220,0,32,151,6,1,131,167,22,255,237,68,167,254,199,189,150,0,163,171,138,255,51,188,6,255,95,29,137,254,148,226,179,0,181,107,208,255,134,31,82,255,151,101,45,255,129,202,225,0,224,72,147,0,48,138,151,255,195,64,206,254,237,218,158,0,106,29,137,254,253,189,233,255,103,15,17,255,194,97,255,0,178,45,169,254,198,225,155,0,39,48,117,255,135,106,115,0,97,38,181,0,150,47,65,255,83,130,229,254,246,38,129,0,92,239,154,254,91,99,127,0,161,111,33,255,238,217,242,255,131,185,195,255,213,191,158,255,41,150,218,0,132,169,131,0,89,84,252,1,171,70,128,255,163,248,203,254,1,50,180,255,124,76,85,1,251,111,80,0,99,66,239,255,154,237,182,255,221,126,133,254,74,204,99,255,65,147,119,255,99,56,167,255,79,248,149,255,116,155,228,255,237,43,14,254,69,137,11,255,22,250,241,1,91,122,143,255,205,249,243,0,212,26,60,255,48,182,176,1,48,23,191,255,203,121,152,254,45,74,213,255,62,90,18,254,245,163,230,255,185,106,116,255,83,35,159,0,12,33,2,255,80,34,62,0,16,87,174,255,173,101,85,0,202,36,81,254,160,69,204,255,64,225,187,0,58,206,94,0,86,144,47,0,229,86,245,0,63,145,190,1,37,5,39,0,109,251,26,0,137,147,234,0,162,121,145,255,144,116,206,255,197,232,185,255,183,190,140,255,73,12,254,255,139,20,242,255,170,90,239,255,97,66,187,255,245,181,135,254,222,136,52,0,245,5,51,254,203,47,78,0,152,101,216,0,73,23,125,0,254,96,33,1,235,210,73,255,43,209,88,1,7,129,109,0,122,104,228,254,170,242,203,0,242,204,135,255,202,28,233,255,65,6,127,0,159,144,71,0,100,140,95,0,78,150,13,0,251,107,118,1,182,58,125,255,1,38,108,255,141,189,209,255,8,155,125,1,113,163,91,255,121,79,190,255,134,239,108,255,76,47,248,0,163,228,239,0,17,111,10,0,88,149,75,255,215,235,239,0,167,159,24,255,47,151,108,255,107,209,188,0,233,231,99,254,28,202,148,255,174,35,138,255,110,24,68,255,2,69,181,0,107,102,82,0,102,237,7,0,92,36,237,255,221,162,83,1,55,202,6,255,135,234,135,255,24,250,222,0,65,94,168,254,245,248,210,255,167,108,201,254,255,161,111,0,205,8,254,0,136,13,116,0,100,176,132,255,43,215,126,255,177,133,130,255,158,79,148,0,67,224,37,1,12,206,21,255,62,34,110,1,237,104,175,255,80,132,111,255,142,174,72,0,84,229,180,254,105,179,140,0,64,248,15,255,233,138,16,0,245,67,123,254,218,121,212,255,63,95,218,1,213,133,137,255,143,182,82,255,48,28,11,0,244,114,141,1,209,175,76,255,157,181,150,255,186,229,3,255,164,157,111,1,231,189,139,0,119,202,190,255,218,106,64,255,68,235,63,254,96,26,172,255,187,47,11,1,215,18,251,255,81,84,89,0,68,58,128,0,94,113,5,1,92,129,208,255,97,15,83,254,9,28,188,0,239,9,164,0,60,205,152,0,192,163,98,255,184,18,60,0,217,182,139,0,109,59,120,255,4,192,251,0,169,210,240,255,37,172,92,254,148,211,245,255,179,65,52,0,253,13,115,0,185,174,206,1,114,188,149,255,237,90,173,0,43,199,192,255,88,108,113,0,52,35,76,0,66,25,148,255,221,4,7,255,151,241,114,255,190,209,232,0,98,50,199,0,151,150,213,255,18,74,36,1,53,40,7,0,19,135,65,255,26,172,69,0,174,237,85,0,99,95,41,0,3,56,16,0,39,160,177,255,200,106,218,254,185,68,84,255,91,186,61,254,67,143,141,255,13,244,166,255,99,114,198,0,199,110,163,255,193,18,186,0,124,239,246,1,110,68,22,0,2,235,46,1,212,60,107,0,105,42,105,1,14,230,152,0,7,5,131,0,141,104,154,255,213,3,6,0,131,228,162,255,179,100,28,1,231,123,85,255,206,14,223,1,253,96,230,0,38,152,149,1,98,137,122,0,214,205,3,255,226,152,179,255,6,133,137,0,158,69,140,255,113,162,154,255,180,243,172,255,27,189,115,255,143,46,220,255,213,134,225,255,126,29,69,0,188,43,137,1,242,70,9,0,90,204,255,255,231,170,147,0,23,56,19,254,56,125,157,255,48,179,218,255,79,182,253,255,38,212,191,1,41,235,124,0,96,151,28,0,135,148,190,0,205,249,39,254,52,96,136,255,212,44,136,255,67,209,131,255,252,130,23,255,219,128,20,255,198,129,118,0,108,101,11,0,178,5,146,1,62,7,100,255,181,236,94,254,28,26,164,0,76,22,112,255,120,102,79,0,202,192,229,1,200,176,215,0,41,64,244,255,206,184,78,0,167,45,63,1,160,35,0,255,59,12,142,255,204,9,144,255,219,94,229,1,122,27,112,0,189,105,109,255,64,208,74,255,251,127,55,1,2,226,198,0,44,76,209,0,151,152,77,255,210,23,46,1,201,171,69,255,44,211,231,0,190,37,224,255,245,196,62,255,169,181,222,255,34,211,17,0,119,241,197,255,229,35,152,1,21,69,40,255,178,226,161,0,148,179,193,0,219,194,254,1,40,206,51,255,231,92,250,1,67,153,170,0,21,148,241,0,170,69,82,255,121,18,231,255,92,114,3,0,184,62,230,0,225,201,87,255,146,96,162,255,181,242,220,0,173,187,221,1,226,62,170,255,56,126,217,1,117,13,227,255,179,44,239,0,157,141,155,255,144,221,83,0,235,209,208,0,42,17,165,1,251,81,133,0,124,245,201,254,97,211,24,255,83,214,166,0,154,36,9,255,248,47,127,0,90,219,140,255,161,217,38,254,212,147,63,255,66,84,148,1,207,3,1,0,230,134,89,1,127,78,122,255,224,155,1,255,82,136,74,0,178,156,208,255,186,25,49,255,222,3,210,1,229,150,190,255,85,162,52,255,41,84,141,255,73,123,84,254,93,17,150,0,119,19,28,1,32,22,215,255,28,23,204,255,142,241,52,255,228,52,125,0,29,76,207,0,215,167,250,254,175,164,230,0,55,207,105,1,109,187,245,255,161,44,220,1,41,101,128,255,167,16,94,0,93,214,107,255,118,72,0,254,80,61,234,255,121,175,125,0,139,169,251,0,97,39,147,254,250,196,49,255,165,179,110,254,223,70,187,255,22,142,125,1,154,179,138,255,118,176,42,1,10,174,153,0,156,92,102,0,168,13,161,255,143,16,32,0,250,197,180,255,203,163,44,1,87,32,36,0,161,153,20,255,123,252,15,0,25,227,80,0,60,88,142,0,17,22,201,1,154,205,77,255,39,63,47,0,8,122,141,0,128,23,182,254,204,39,19,255,4,112,29,255,23,36,140,255,210,234,116,254,53,50,63,255,121,171,104,255,160,219,94,0,87,82,14,254,231,42,5,0,165,139,127,254,86,78,38,0,130,60,66,254,203,30,45,255,46,196,122,1,249,53,162,255,136,143,103,254,215,210,114,0,231,7,160,254,169,152,42,255,111,45,246,0,142,131,135,255,131,71,204,255,36,226,11,0,0,28,242,255,225,138,213,255,247,46,216,254,245,3,183,0,108,252,74,1,206,26,48,255,205,54,246,255,211,198,36,255,121,35,50,0,52,216,202,255,38,139,129,254,242,73,148,0,67,231,141,255,42,47,204,0,78,116,25,1,4,225,191,255,6,147,228,0,58,88,177,0,122,165,229,255,252,83,201,255,224,167,96,1,177,184,158,255,242,105,179,1,248,198,240,0,133,66,203,1,254,36,47,0,45,24,115,255,119,62,254,0,196,225,186,254,123,141,172,0,26,85,41,255,226,111,183,0,213,231,151,0,4,59,7,255,238,138,148,0,66,147,33,255,31,246,141,255,209,141,116,255,104,112,31,0,88,161,172,0,83,215,230,254,47,111,151,0,45,38,52,1,132,45,204,0,138,128,109,254,233,117,134,255,243,190,173,254,241,236,240,0,82,127,236,254,40,223,161,255,110,182,225,255,123,174,239,0,135,242,145,1,51,209,154,0,150,3,115,254,217,164,252,255,55,156,69,1,84,94,255,255,232,73,45,1,20,19,212,255,96,197,59,254,96,251,33,0,38,199,73,1,64,172,247,255,117,116,56,255,228,17,18,0,62,138,103,1,246,229,164,255,244,118,201,254,86,32,159,255,109,34,137,1,85,211,186,0,10,193,193,254,122,194,177,0,122,238,102,255,162,218,171,0,108,217,161,1,158,170,34,0,176,47,155,1,181,228,11,255,8,156,0,0,16,75,93,0,206,98,255,1,58,154,35,0,12,243,184,254,67,117,66,255,230,229,123,0,201,42,110,0,134,228,178,254,186,108,118,255,58,19,154,255,82,169,62,255,114,143,115,1,239,196,50,255,173,48,193,255,147,2,84,255,150,134,147,254,95,232,73,0,109,227,52,254,191,137,10,0,40,204,30,254,76,52,97,255,164,235,126,0,254,124,188,0,74,182,21,1,121,29,35,255,241,30,7,254,85,218,214,255,7,84,150,254,81,27,117,255,160,159,152,254,66,24,221,255,227,10,60,1,141,135,102,0,208,189,150,1,117,179,92,0,132,22,136,255,120,199,28,0,21,129,79,254,182,9,65,0,218,163,169,0,246,147,198,255,107,38,144,1,78,175,205,255,214,5,250,254,47,88,29,255,164,47,204,255,43,55,6,255,131,134,207,254,116,100,214,0,96,140,75,1,106,220,144,0,195,32,28,1,172,81,5,255,199,179,52,255,37,84,203,0,170,112,174,0,11,4,91,0,69,244,27,1,117,131,92,0,33,152,175,255,140,153,107,255,251,135,43,254,87,138,4,255,198,234,147,254,121,152,84,255,205,101,155,1,157,9,25,0,72,106,17,254,108,153,0,255],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);allocate([189,229,186,0,193,8,176,255,174,149,209,0,238,130,29,0,233,214,126,1,61,226,102,0,57,163,4,1,198,111,51,255,45,79,78,1,115,210,10,255,218,9,25,255,158,139,198,255,211,82,187,254,80,133,83,0,157,129,230,1,243,133,134,255,40,136,16,0,77,107,79,255,183,85,92,1,177,204,202,0,163,71,147,255,152,69,190,0,172,51,188,1,250,210,172,255,211,242,113,1,89,89,26,255,64,66,111,254,116,152,42,0,161,39,27,255,54,80,254,0,106,209,115,1,103,124,97,0,221,230,98,255,31,231,6,0,178,192,120,254,15,217,203,255,124,158,79,0,112,145,247,0,92,250,48,1,163,181,193,255,37,47,142,254,144,189,165,255,46,146,240,0,6,75,128,0,41,157,200,254,87,121,213,0,1,113,236,0,5,45,250,0,144,12,82,0,31,108,231,0,225,239,119,255,167,7,189,255,187,228,132,255,110,189,34,0,94,44,204,1,162,52,197,0,78,188,241,254,57,20,141,0,244,146,47,1,206,100,51,0,125,107,148,254,27,195,77,0,152,253,90,1,7,143,144,255,51,37,31,0,34,119,38,255,7,197,118,0,153,188,211,0,151,20,116,254,245,65,52,255,180,253,110,1,47,177,209,0,161,99,17,255,118,222,202,0,125,179,252,1,123,54,126,255,145,57,191,0,55,186,121,0,10,243,138,0,205,211,229,255,125,156,241,254,148,156,185,255,227,19,188,255,124,41,32,255,31,34,206,254,17,57,83,0,204,22,37,255,42,96,98,0,119,102,184,1,3,190,28,0,110,82,218,255,200,204,192,255,201,145,118,0,117,204,146,0,132,32,98,1,192,194,121,0,106,161,248,1,237,88,124,0,23,212,26,0,205,171,90,255,248,48,216,1,141,37,230,255,124,203,0,254,158,168,30,255,214,248,21,0,112,187,7,255,75,133,239,255,74,227,243,255,250,147,70,0,214,120,162,0,167,9,179,255,22,158,18,0,218,77,209,1,97,109,81,255,244,33,179,255,57,52,57,255,65,172,210,255,249,71,209,255,142,169,238,0,158,189,153,255,174,254,103,254,98,33,14,0,141,76,230,255,113,139,52,255,15,58,212,0,168,215,201,255,248,204,215,1,223,68,160,255,57,154,183,254,47,231,121,0,106,166,137,0,81,136,138,0,165,43,51,0,231,139,61,0,57,95,59,254,118,98,25,255,151,63,236,1,94,190,250,255,169,185,114,1,5,250,58,255,75,105,97,1,215,223,134,0,113,99,163,1,128,62,112,0,99,106,147,0,163,195,10,0,33,205,182,0,214,14,174,255,129,38,231,255,53,182,223,0,98,42,159,255,247,13,40,0,188,210,177,1,6,21,0,255,255,61,148,254,137,45,129,255,89,26,116,254,126,38,114,0,251,50,242,254,121,134,128,255,204,249,167,254,165,235,215,0,202,177,243,0,133,141,62,0,240,130,190,1,110,175,255,0,0,20,146,1,37,210,121,255,7,39,130,0,142,250,84,255,141,200,207,0,9,95,104,255,11,244,174,0,134,232,126,0,167,1,123,254,16,193,149,255,232,233,239,1,213,70,112,255,252,116,160,254,242,222,220,255,205,85,227,0,7,185,58,0,118,247,63,1,116,77,177,255,62,245,200,254,63,18,37,255,107,53,232,254,50,221,211,0,162,219,7,254,2,94,43,0,182,62,182,254,160,78,200,255,135,140,170,0,235,184,228,0,175,53,138,254,80,58,77,255,152,201,2,1,63,196,34,0,5,30,184,0,171,176,154,0,121,59,206,0,38,99,39,0,172,80,77,254,0,134,151,0,186,33,241,254,94,253,223,255,44,114,252,0,108,126,57,255,201,40,13,255,39,229,27,255,39,239,23,1,151,121,51,255,153,150,248,0,10,234,174,255,118,246,4,254,200,245,38,0,69,161,242,1,16,178,150,0,113,56,130,0,171,31,105,0,26,88,108,255,49,42,106,0,251,169,66,0,69,93,149,0,20,57,254,0,164,25,111,0,90,188,90,255,204,4,197,0,40,213,50,1,212,96,132,255,88,138,180,254,228,146,124,255,184,246,247,0,65,117,86,255,253,102,210,254,254,121,36,0,137,115,3,255,60,24,216,0,134,18,29,0,59,226,97,0,176,142,71,0,7,209,161,0,189,84,51,254,155,250,72,0,213,84,235,255,45,222,224,0,238,148,143,255,170,42,53,255,78,167,117,0,186,0,40,255,125,177,103,255,69,225,66,0,227,7,88,1,75,172,6,0,169,45,227,1,16,36,70,255,50,2,9,255,139,193,22,0,143,183,231,254,218,69,50,0,236,56,161,1,213,131,42,0,138,145,44,254,136,229,40,255,49,63,35,255,61,145,245,255,101,192,2,254,232,167,113,0,152,104,38,1,121,185,218,0,121,139,211,254,119,240,35,0,65,189,217,254,187,179,162,255,160,187,230,0,62,248,14,255,60,78,97,0,255,247,163,255,225,59,91,255,107,71,58,255,241,47,33,1,50,117,236,0,219,177,63,254,244,90,179,0,35,194,215,255,189,67,50,255,23,135,129,0,104,189,37,255,185,57,194,0,35,62,231,255,220,248,108,0,12,231,178,0,143,80,91,1,131,93,101,255,144,39,2,1,255,250,178,0,5,17,236,254,139,32,46,0,204,188,38,254,245,115,52,255,191,113,73,254,191,108,69,255,22,69,245,1,23,203,178,0,170,99,170,0,65,248,111,0,37,108,153,255,64,37,69,0,0,88,62,254,89,148,144,255,191,68,224,1,241,39,53,0,41,203,237,255,145,126,194,255,221,42,253,255,25,99,151,0,97,253,223,1,74,115,49,255,6,175,72,255,59,176,203,0,124,183,249,1,228,228,99,0,129,12,207,254,168,192,195,255,204,176,16,254,152,234,171,0,77,37,85,255,33,120,135,255,142,194,227,1,31,214,58,0,213,187,125,255,232,46,60,255,190,116,42,254,151,178,19,255,51,62,237,254,204,236,193,0,194,232,60,0,172,34,157,255,189,16,184,254,103,3,95,255,141,233,36,254,41,25,11,255,21,195,166,0,118,245,45,0,67,213,149,255,159,12,18,255,187,164,227,1,160,25,5,0,12,78,195,1,43,197,225,0,48,142,41,254,196,155,60,255,223,199,18,1,145,136,156,0,252,117,169,254,145,226,238,0,239,23,107,0,109,181,188,255,230,112,49,254,73,170,237,255,231,183,227,255,80,220,20,0,194,107,127,1,127,205,101,0,46,52,197,1,210,171,36,255,88,3,90,255,56,151,141,0,96,187,255,255,42,78,200,0,254,70,70,1,244,125,168,0,204,68,138,1,124,215,70,0,102,66,200,254,17,52,228,0,117,220,143,254,203,248,123,0,56,18,174,255,186,151,164,255,51,232,208,1,160,228,43,255,249,29,25,1,68,190,63,0,103,230,9,106,133,174,103,187,114,243,110,60,58,245,79,165,127,82,14,81,140,104,5,155,171,217,131,31,25,205,224,91,5,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,19,0,0,0,144,135,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,126,0,0,99,117,114,118,101,50,53,53,49,57,120,115,97,108,115,97,50,48,112,111,108,121,49,51,48,53,0,98,108,97,107,101,50,98,0,83,45,62,98,117,102,108,101,110,32,60,61,32,66,76,65,75,69,50,66,95,66,76,79,67,75,66,89,84,69,83,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,98,108,97,107,101,50,98,45,114,101,102,46,99,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,95,102,105,110,97,108,0,111,117,116,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,46,99,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,0,107,101,121,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,115,97,108,116,95,112,101,114,115,111,110,97,108,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,95,115,97,108,116,95,112,101,114,115,111,110,97,108,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,102,105,110,97,108,0,115,104,97,53,49,50,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,111,108,121,49,51,48,53,0,36,97,114,103,111,110,50,105,0,36,118,61,0,36,109,61,0,44,116,61,0,44,112,61,0,44,100,97,116,97,61,0,36,97,114,103,111,110,50,105,36,118,61,0,36,97,114,103,111,110,50,105,36,0,97,114,103,111,110,50,105,0,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,36,55,36,0,99,117,114,118,101,50,53,53,49,57,0,120,115,97,108,115,97,50,48,112,111,108,121,49,51,48,53,0,115,105,112,104,97,115,104,50,52,0,101,100,50,53,53,49,57,0,237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,120,115,97,108,115,97,50,48,0,106,115,0,123,32,114,101,116,117,114,110,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,40,41,59,32,125,0,123,32,105,102,32,40,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,61,61,32,117,110,100,101,102,105,110,101,100,41,32,123,32,116,114,121,32,123,32,118,97,114,32,119,105,110,100,111,119,95,32,61,32,34,111,98,106,101,99,116,34,32,61,61,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,63,32,119,105,110,100,111,119,32,58,32,115,101,108,102,44,32,99,114,121,112,116,111,95,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,58,32,119,105,110,100,111,119,95,46,109,115,67,114,121,112,116,111,44,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,49,41,59,32,99,114,121,112,116,111,95,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,98,117,102,41,59,32,114,101,116,117,114,110,32,98,117,102,91,48,93,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,121,112,116,111,32,61,32,114,101,113,117,105,114,101,40,39,99,114,121,112,116,111,39,41,44,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,99,114,121,112,116,111,46,114,97,110,100,111,109,66,121,116,101,115,40,52,41,59,32,114,101,116,117,114,110,32,40,98,117,102,91,48,93,32,60,60,32,50,52,32,124,32,98,117,102,91,49,93,32,60,60,32,49,54,32,124,32,98,117,102,91,50,93,32,60,60,32,56,32,124,32,98,117,102,91,51,93,41,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,104,114,111,119,32,39,78,111,32,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,32,102,111,117,110,100,39,59,32,125,32,125,32,125,32,125,0,98,117,102,95,108,101,110,32,60,61,32,83,73,90,69,95,77,65,88,0,114,97,110,100,111,109,98,121,116,101,115,47,114,97,110,100,111,109,98,121,116,101,115,46,99,0,114,97,110,100,111,109,98,121,116,101,115,0,49,46,48,46,49,48,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+30720);var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}Module["_i64Subtract"]=_i64Subtract;Module["_i64Add"]=_i64Add;Module["_bitshift64Ashr"]=_bitshift64Ashr;Module["_memset"]=_memset;function _pthread_cleanup_push(routine,arg){__ATEXIT__.push((function(){Runtime.dynCall("vi",routine,[arg])}));_pthread_cleanup_push.level=__ATEXIT__.length}Module["_bitshift64Lshr"]=_bitshift64Lshr;Module["_bitshift64Shl"]=_bitshift64Shl;function _pthread_cleanup_pop(){assert(_pthread_cleanup_push.level==__ATEXIT__.length,"cannot pop if something else added meanwhile!");__ATEXIT__.pop();_pthread_cleanup_push.level=__ATEXIT__.length}function _abort(){Module["abort"]()}function ___lock(){}function ___unlock(){}var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___assert_fail(condition,filename,line,func){ABORT=true;throw"Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"]+" at "+stackTrace()}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort("cannot dynamically allocate, sbrk now has control")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;Module["_memmove"]=_memmove;function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _pthread_self(){return 0}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffer){___syscall146.buffers=[null,[],[]];___syscall146.printChar=(function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?Module["print"]:Module["printErr"])(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}})}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}__ATEXIT__.push((function(){var fflush=Module["_fflush"];if(fflush)fflush(0);var printChar=___syscall146.printChar;if(!printChar)return;var buffers=___syscall146.buffers;if(buffers[1].length)printChar(1,10);if(buffers[2].length)printChar(2,10)}));STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_ii(index,a1){return Runtime.functionPointers[index](a1)}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiii(index,a1,a2,a3){return Runtime.functionPointers[index](a1,a2,a3)}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_vi(index,a1){Runtime.functionPointers[index](a1)}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"invoke_ii":invoke_ii,"jsCall_ii":jsCall_ii,"invoke_iiii":invoke_iiii,"jsCall_iiii":jsCall_iiii,"invoke_vi":invoke_vi,"jsCall_vi":jsCall_vi,"_pthread_cleanup_pop":_pthread_cleanup_pop,"_sysconf":_sysconf,"___lock":___lock,"_emscripten_asm_const_i":_emscripten_asm_const_i,"_emscripten_asm_const_v":_emscripten_asm_const_v,"_pthread_self":_pthread_self,"___syscall6":___syscall6,"___setErrNo":___setErrNo,"_abort":_abort,"_sbrk":_sbrk,"_time":_time,"_pthread_cleanup_push":_pthread_cleanup_push,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___syscall54":___syscall54,"___unlock":___unlock,"___syscall140":___syscall140,"___assert_fail":___assert_fail,"___syscall146":___syscall146,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"cttz_i8":cttz_i8};// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=0;var o=0;var p=0;var q=0;var r=global.NaN,s=global.Infinity;var t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0.0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=global.Math.floor;var N=global.Math.abs;var O=global.Math.sqrt;var P=global.Math.pow;var Q=global.Math.cos;var R=global.Math.sin;var S=global.Math.tan;var T=global.Math.acos;var U=global.Math.asin;var V=global.Math.atan;var W=global.Math.atan2;var X=global.Math.exp;var Y=global.Math.log;var Z=global.Math.ceil;var _=global.Math.imul;var $=global.Math.min;var aa=global.Math.clz32;var ba=env.abort;var ca=env.assert;var da=env.invoke_ii;var ea=env.jsCall_ii;var fa=env.invoke_iiii;var ga=env.jsCall_iiii;var ha=env.invoke_vi;var ia=env.jsCall_vi;var ja=env._pthread_cleanup_pop;var ka=env._sysconf;var la=env.___lock;var ma=env._emscripten_asm_const_i;var na=env._emscripten_asm_const_v;var oa=env._pthread_self;var pa=env.___syscall6;var qa=env.___setErrNo;var ra=env._abort;var sa=env._sbrk;var ta=env._time;var ua=env._pthread_cleanup_push;var va=env._emscripten_memcpy_big;var wa=env.___syscall54;var xa=env.___unlock;var ya=env.___syscall140;var za=env.___assert_fail;var Aa=env.___syscall146;var Ba=0.0;
// EMSCRIPTEN_START_FUNCS
function ee(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=i;e=i=i+63&-64;i=i+2048|0;f=e+1024|0;qh(f|0,b|0,1024)|0;b=0;do{k=a+(b<<3)|0;h=f+(b<<3)|0;l=h;j=c[l+4>>2]^c[k+4>>2];c[h>>2]=c[l>>2]^c[k>>2];c[h+4>>2]=j;b=b+1|0}while((b|0)!=128);qh(e|0,f|0,1024)|0;b=0;do{j=d+(b<<3)|0;l=e+(b<<3)|0;h=l;k=c[h+4>>2]^c[j+4>>2];c[l>>2]=c[h>>2]^c[j>>2];c[l+4>>2]=k;b=b+1|0}while((b|0)!=128);b=0;do{t=b<<4;J=f+(t<<3)|0;q=J;s=c[q>>2]|0;q=c[q+4>>2]|0;l=f+((t|4)<<3)|0;D=l;h=c[D>>2]|0;D=c[D+4>>2]|0;A=lh(h|0,D|0,s|0,q|0)|0;w=C;q=ph(s|0,q|0,1)|0;q=wh(q&-2|0,C&1|0,h|0,0)|0;q=lh(A|0,w|0,q|0,C|0)|0;w=C;A=f+((t|12)<<3)|0;s=A;x=q^c[s>>2];s=w^c[s+4>>2];n=f+((t|8)<<3)|0;k=n;G=c[k>>2]|0;k=c[k+4>>2]|0;m=lh(s|0,x|0,G|0,k|0)|0;o=C;k=ph(G|0,k|0,1)|0;k=wh(k&-2|0,C&1|0,s|0,0)|0;k=lh(m|0,o|0,k|0,C|0)|0;o=C;h=k^h;D=o^D;m=oh(h|0,D|0,24)|0;G=C;D=ph(h|0,D|0,40)|0;D=D|m;G=C|G;h=lh(D|0,G|0,q|0,w|0)|0;j=C;w=ph(q|0,w|0,1)|0;w=wh(m|0,0,w&-2|0,C&1|0)|0;w=lh(h|0,j|0,w|0,C|0)|0;j=C;h=J;c[h>>2]=w;c[h+4>>2]=j;s=w^s;x=j^x;j=oh(s|0,x|0,16)|0;w=C;x=ph(s|0,x|0,48)|0;x=x|j;w=C|w;s=A;c[s>>2]=x;c[s+4>>2]=w;w=lh(x|0,w|0,k|0,o|0)|0;x=C;o=ph(k|0,o|0,1)|0;o=wh(j|0,0,o&-2|0,C&1|0)|0;o=lh(w|0,x|0,o|0,C|0)|0;x=C;w=n;c[w>>2]=o;c[w+4>>2]=x;D=o^D;G=x^G;x=oh(D|0,G|0,63)|0;o=C;G=ph(D|0,G|0,1)|0;D=l;c[D>>2]=G|x;c[D+4>>2]=C|o;D=f+((t|1)<<3)|0;o=D;x=c[o>>2]|0;o=c[o+4>>2]|0;G=f+((t|5)<<3)|0;w=G;j=c[w>>2]|0;w=c[w+4>>2]|0;k=lh(j|0,w|0,x|0,o|0)|0;s=C;o=ph(x|0,o|0,1)|0;o=wh(o&-2|0,C&1|0,j|0,0)|0;o=lh(k|0,s|0,o|0,C|0)|0;s=C;k=f+((t|13)<<3)|0;x=k;h=o^c[x>>2];x=s^c[x+4>>2];m=f+((t|9)<<3)|0;q=m;z=c[q>>2]|0;q=c[q+4>>2]|0;y=lh(x|0,h|0,z|0,q|0)|0;u=C;q=ph(z|0,q|0,1)|0;q=wh(q&-2|0,C&1|0,x|0,0)|0;q=lh(y|0,u|0,q|0,C|0)|0;u=C;j=q^j;w=u^w;y=oh(j|0,w|0,24)|0;z=C;w=ph(j|0,w|0,40)|0;w=w|y;z=C|z;j=lh(w|0,z|0,o|0,s|0)|0;H=C;s=ph(o|0,s|0,1)|0;s=wh(y|0,0,s&-2|0,C&1|0)|0;s=lh(j|0,H|0,s|0,C|0)|0;H=C;j=D;c[j>>2]=s;c[j+4>>2]=H;x=s^x;h=H^h;H=oh(x|0,h|0,16)|0;s=C;h=ph(x|0,h|0,48)|0;h=h|H;s=C|s;x=k;c[x>>2]=h;c[x+4>>2]=s;s=lh(h|0,s|0,q|0,u|0)|0;h=C;u=ph(q|0,u|0,1)|0;u=wh(H|0,0,u&-2|0,C&1|0)|0;u=lh(s|0,h|0,u|0,C|0)|0;h=C;s=m;c[s>>2]=u;c[s+4>>2]=h;w=u^w;z=h^z;h=oh(w|0,z|0,63)|0;u=C;z=ph(w|0,z|0,1)|0;w=G;c[w>>2]=z|h;c[w+4>>2]=C|u;w=f+((t|2)<<3)|0;u=w;h=c[u>>2]|0;u=c[u+4>>2]|0;z=f+((t|6)<<3)|0;s=z;H=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(H|0,s|0,h|0,u|0)|0;x=C;u=ph(h|0,u|0,1)|0;u=wh(u&-2|0,C&1|0,H|0,0)|0;u=lh(q|0,x|0,u|0,C|0)|0;x=C;q=f+((t|14)<<3)|0;h=q;j=u^c[h>>2];h=x^c[h+4>>2];y=f+((t|10)<<3)|0;o=y;v=c[o>>2]|0;o=c[o+4>>2]|0;I=lh(h|0,j|0,v|0,o|0)|0;E=C;o=ph(v|0,o|0,1)|0;o=wh(o&-2|0,C&1|0,h|0,0)|0;o=lh(I|0,E|0,o|0,C|0)|0;E=C;H=o^H;s=E^s;I=oh(H|0,s|0,24)|0;v=C;s=ph(H|0,s|0,40)|0;s=s|I;v=C|v;H=lh(s|0,v|0,u|0,x|0)|0;L=C;x=ph(u|0,x|0,1)|0;x=wh(I|0,0,x&-2|0,C&1|0)|0;x=lh(H|0,L|0,x|0,C|0)|0;L=C;H=w;c[H>>2]=x;c[H+4>>2]=L;h=x^h;j=L^j;L=oh(h|0,j|0,16)|0;x=C;j=ph(h|0,j|0,48)|0;j=j|L;x=C|x;h=q;c[h>>2]=j;c[h+4>>2]=x;x=lh(j|0,x|0,o|0,E|0)|0;j=C;E=ph(o|0,E|0,1)|0;E=wh(L|0,0,E&-2|0,C&1|0)|0;E=lh(x|0,j|0,E|0,C|0)|0;j=C;s=E^s;v=j^v;x=oh(s|0,v|0,63)|0;L=C;v=ph(s|0,v|0,1)|0;s=z;c[s>>2]=v|x;c[s+4>>2]=C|L;s=f+((t|3)<<3)|0;L=s;x=c[L>>2]|0;L=c[L+4>>2]|0;v=f+((t|7)<<3)|0;o=v;h=c[o>>2]|0;o=c[o+4>>2]|0;H=lh(h|0,o|0,x|0,L|0)|0;I=C;L=ph(x|0,L|0,1)|0;L=wh(L&-2|0,C&1|0,h|0,0)|0;L=lh(H|0,I|0,L|0,C|0)|0;I=C;H=f+((t|15)<<3)|0;x=H;u=L^c[x>>2];x=I^c[x+4>>2];t=f+((t|11)<<3)|0;B=t;M=c[B>>2]|0;B=c[B+4>>2]|0;K=lh(x|0,u|0,M|0,B|0)|0;p=C;B=ph(M|0,B|0,1)|0;B=wh(B&-2|0,C&1|0,x|0,0)|0;B=lh(K|0,p|0,B|0,C|0)|0;p=C;h=B^h;o=p^o;K=oh(h|0,o|0,24)|0;M=C;o=ph(h|0,o|0,40)|0;o=o|K;M=C|M;h=lh(o|0,M|0,L|0,I|0)|0;r=C;I=ph(L|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(h|0,r|0,I|0,C|0)|0;r=C;h=s;c[h>>2]=I;c[h+4>>2]=r;x=I^x;u=r^u;r=oh(x|0,u|0,16)|0;I=C;u=ph(x|0,u|0,48)|0;u=u|r;I=C|I;x=lh(u|0,I|0,B|0,p|0)|0;h=C;p=ph(B|0,p|0,1)|0;p=wh(r|0,0,p&-2|0,C&1|0)|0;p=lh(x|0,h|0,p|0,C|0)|0;h=C;o=p^o;M=h^M;x=oh(o|0,M|0,63)|0;r=C;M=ph(o|0,M|0,1)|0;x=M|x;r=C|r;M=v;c[M>>2]=x;c[M+4>>2]=r;M=J;o=c[M>>2]|0;M=c[M+4>>2]|0;B=G;K=c[B>>2]|0;B=c[B+4>>2]|0;L=lh(K|0,B|0,o|0,M|0)|0;F=C;M=ph(o|0,M|0,1)|0;M=wh(M&-2|0,C&1|0,K|0,0)|0;M=lh(L|0,F|0,M|0,C|0)|0;F=C;u=M^u;I=F^I;L=lh(I|0,u|0,E|0,j|0)|0;o=C;j=ph(E|0,j|0,1)|0;j=wh(j&-2|0,C&1|0,I|0,0)|0;j=lh(L|0,o|0,j|0,C|0)|0;o=C;K=j^K;B=o^B;L=oh(K|0,B|0,24)|0;E=C;B=ph(K|0,B|0,40)|0;B=B|L;E=C|E;K=lh(B|0,E|0,M|0,F|0)|0;a=C;F=ph(M|0,F|0,1)|0;F=wh(L|0,0,F&-2|0,C&1|0)|0;F=lh(K|0,a|0,F|0,C|0)|0;a=C;c[J>>2]=F;c[J+4>>2]=a;I=F^I;u=a^u;a=oh(I|0,u|0,16)|0;F=C;u=ph(I|0,u|0,48)|0;u=u|a;F=C|F;c[H>>2]=u;c[H+4>>2]=F;F=lh(u|0,F|0,j|0,o|0)|0;u=C;o=ph(j|0,o|0,1)|0;o=wh(a|0,0,o&-2|0,C&1|0)|0;o=lh(F|0,u|0,o|0,C|0)|0;u=C;c[y>>2]=o;c[y+4>>2]=u;B=o^B;E=u^E;u=oh(B|0,E|0,63)|0;o=C;E=ph(B|0,E|0,1)|0;c[G>>2]=E|u;c[G+4>>2]=C|o;G=D;o=c[G>>2]|0;G=c[G+4>>2]|0;u=z;E=c[u>>2]|0;u=c[u+4>>2]|0;B=lh(E|0,u|0,o|0,G|0)|0;y=C;G=ph(o|0,G|0,1)|0;G=wh(G&-2|0,C&1|0,E|0,0)|0;G=lh(B|0,y|0,G|0,C|0)|0;y=C;B=A;o=G^c[B>>2];B=y^c[B+4>>2];F=lh(B|0,o|0,p|0,h|0)|0;a=C;h=ph(p|0,h|0,1)|0;h=wh(h&-2|0,C&1|0,B|0,0)|0;h=lh(F|0,a|0,h|0,C|0)|0;a=C;E=h^E;u=a^u;F=oh(E|0,u|0,24)|0;p=C;u=ph(E|0,u|0,40)|0;u=u|F;p=C|p;E=lh(u|0,p|0,G|0,y|0)|0;j=C;y=ph(G|0,y|0,1)|0;y=wh(F|0,0,y&-2|0,C&1|0)|0;y=lh(E|0,j|0,y|0,C|0)|0;j=C;c[D>>2]=y;c[D+4>>2]=j;B=y^B;o=j^o;j=oh(B|0,o|0,16)|0;y=C;o=ph(B|0,o|0,48)|0;o=o|j;y=C|y;c[A>>2]=o;c[A+4>>2]=y;y=lh(o|0,y|0,h|0,a|0)|0;o=C;a=ph(h|0,a|0,1)|0;a=wh(j|0,0,a&-2|0,C&1|0)|0;a=lh(y|0,o|0,a|0,C|0)|0;o=C;c[t>>2]=a;c[t+4>>2]=o;u=a^u;p=o^p;o=oh(u|0,p|0,63)|0;a=C;p=ph(u|0,p|0,1)|0;c[z>>2]=p|o;c[z+4>>2]=C|a;z=w;a=c[z>>2]|0;z=c[z+4>>2]|0;o=lh(x|0,r|0,a|0,z|0)|0;p=C;z=ph(a|0,z|0,1)|0;z=wh(z&-2|0,C&1|0,x|0,0)|0;z=lh(o|0,p|0,z|0,C|0)|0;p=C;o=k;a=z^c[o>>2];o=p^c[o+4>>2];u=n;t=c[u>>2]|0;u=c[u+4>>2]|0;y=lh(o|0,a|0,t|0,u|0)|0;j=C;u=ph(t|0,u|0,1)|0;u=wh(u&-2|0,C&1|0,o|0,0)|0;u=lh(y|0,j|0,u|0,C|0)|0;j=C;x=u^x;r=j^r;y=oh(x|0,r|0,24)|0;t=C;r=ph(x|0,r|0,40)|0;r=r|y;t=C|t;x=lh(r|0,t|0,z|0,p|0)|0;h=C;p=ph(z|0,p|0,1)|0;p=wh(y|0,0,p&-2|0,C&1|0)|0;p=lh(x|0,h|0,p|0,C|0)|0;h=C;c[w>>2]=p;c[w+4>>2]=h;o=p^o;a=h^a;h=oh(o|0,a|0,16)|0;p=C;a=ph(o|0,a|0,48)|0;a=a|h;p=C|p;c[k>>2]=a;c[k+4>>2]=p;p=lh(a|0,p|0,u|0,j|0)|0;a=C;j=ph(u|0,j|0,1)|0;j=wh(h|0,0,j&-2|0,C&1|0)|0;j=lh(p|0,a|0,j|0,C|0)|0;a=C;c[n>>2]=j;c[n+4>>2]=a;r=j^r;t=a^t;a=oh(r|0,t|0,63)|0;j=C;t=ph(r|0,t|0,1)|0;c[v>>2]=t|a;c[v+4>>2]=C|j;v=s;j=c[v>>2]|0;v=c[v+4>>2]|0;a=l;t=c[a>>2]|0;a=c[a+4>>2]|0;r=lh(t|0,a|0,j|0,v|0)|0;n=C;v=ph(j|0,v|0,1)|0;v=wh(v&-2|0,C&1|0,t|0,0)|0;v=lh(r|0,n|0,v|0,C|0)|0;n=C;r=q;j=v^c[r>>2];r=n^c[r+4>>2];p=m;h=c[p>>2]|0;p=c[p+4>>2]|0;u=lh(r|0,j|0,h|0,p|0)|0;k=C;p=ph(h|0,p|0,1)|0;p=wh(p&-2|0,C&1|0,r|0,0)|0;p=lh(u|0,k|0,p|0,C|0)|0;k=C;t=p^t;a=k^a;u=oh(t|0,a|0,24)|0;h=C;a=ph(t|0,a|0,40)|0;a=a|u;h=C|h;t=lh(a|0,h|0,v|0,n|0)|0;o=C;n=ph(v|0,n|0,1)|0;n=wh(u|0,0,n&-2|0,C&1|0)|0;n=lh(t|0,o|0,n|0,C|0)|0;o=C;c[s>>2]=n;c[s+4>>2]=o;r=n^r;j=o^j;o=oh(r|0,j|0,16)|0;n=C;j=ph(r|0,j|0,48)|0;j=j|o;n=C|n;c[q>>2]=j;c[q+4>>2]=n;n=lh(j|0,n|0,p|0,k|0)|0;j=C;k=ph(p|0,k|0,1)|0;k=wh(o|0,0,k&-2|0,C&1|0)|0;k=lh(n|0,j|0,k|0,C|0)|0;j=C;c[m>>2]=k;c[m+4>>2]=j;a=k^a;h=j^h;j=oh(a|0,h|0,63)|0;k=C;h=ph(a|0,h|0,1)|0;c[l>>2]=h|j;c[l+4>>2]=C|k;b=b+1|0}while((b|0)!=8);b=0;do{z=b<<1;k=f+(z<<3)|0;D=k;A=c[D>>2]|0;D=c[D+4>>2]|0;M=f+(z+32<<3)|0;q=M;J=c[q>>2]|0;q=c[q+4>>2]|0;s=lh(J|0,q|0,A|0,D|0)|0;w=C;D=ph(A|0,D|0,1)|0;D=wh(D&-2|0,C&1|0,J|0,0)|0;D=lh(s|0,w|0,D|0,C|0)|0;w=C;s=f+(z+96<<3)|0;A=s;v=D^c[A>>2];A=w^c[A+4>>2];G=f+(z+64<<3)|0;L=G;n=c[L>>2]|0;L=c[L+4>>2]|0;H=lh(A|0,v|0,n|0,L|0)|0;F=C;L=ph(n|0,L|0,1)|0;L=wh(L&-2|0,C&1|0,A|0,0)|0;L=lh(H|0,F|0,L|0,C|0)|0;F=C;J=L^J;q=F^q;H=oh(J|0,q|0,24)|0;n=C;q=ph(J|0,q|0,40)|0;q=q|H;n=C|n;J=lh(q|0,n|0,D|0,w|0)|0;K=C;w=ph(D|0,w|0,1)|0;w=wh(H|0,0,w&-2|0,C&1|0)|0;w=lh(J|0,K|0,w|0,C|0)|0;K=C;J=k;c[J>>2]=w;c[J+4>>2]=K;A=w^A;v=K^v;K=oh(A|0,v|0,16)|0;w=C;v=ph(A|0,v|0,48)|0;v=v|K;w=C|w;A=s;c[A>>2]=v;c[A+4>>2]=w;w=lh(v|0,w|0,L|0,F|0)|0;v=C;F=ph(L|0,F|0,1)|0;F=wh(K|0,0,F&-2|0,C&1|0)|0;F=lh(w|0,v|0,F|0,C|0)|0;v=C;w=G;c[w>>2]=F;c[w+4>>2]=v;q=F^q;n=v^n;v=oh(q|0,n|0,63)|0;F=C;n=ph(q|0,n|0,1)|0;q=M;c[q>>2]=n|v;c[q+4>>2]=C|F;q=f+((z|1)<<3)|0;F=q;v=c[F>>2]|0;F=c[F+4>>2]|0;n=f+(z+33<<3)|0;w=n;K=c[w>>2]|0;w=c[w+4>>2]|0;L=lh(K|0,w|0,v|0,F|0)|0;A=C;F=ph(v|0,F|0,1)|0;F=wh(F&-2|0,C&1|0,K|0,0)|0;F=lh(L|0,A|0,F|0,C|0)|0;A=C;L=f+(z+97<<3)|0;v=L;J=F^c[v>>2];v=A^c[v+4>>2];H=f+(z+65<<3)|0;D=H;t=c[D>>2]|0;D=c[D+4>>2]|0;u=lh(v|0,J|0,t|0,D|0)|0;y=C;D=ph(t|0,D|0,1)|0;D=wh(D&-2|0,C&1|0,v|0,0)|0;D=lh(u|0,y|0,D|0,C|0)|0;y=C;K=D^K;w=y^w;u=oh(K|0,w|0,24)|0;t=C;w=ph(K|0,w|0,40)|0;w=w|u;t=C|t;K=lh(w|0,t|0,F|0,A|0)|0;m=C;A=ph(F|0,A|0,1)|0;A=wh(u|0,0,A&-2|0,C&1|0)|0;A=lh(K|0,m|0,A|0,C|0)|0;m=C;K=q;c[K>>2]=A;c[K+4>>2]=m;v=A^v;J=m^J;m=oh(v|0,J|0,16)|0;A=C;J=ph(v|0,J|0,48)|0;J=J|m;A=C|A;v=L;c[v>>2]=J;c[v+4>>2]=A;A=lh(J|0,A|0,D|0,y|0)|0;J=C;y=ph(D|0,y|0,1)|0;y=wh(m|0,0,y&-2|0,C&1|0)|0;y=lh(A|0,J|0,y|0,C|0)|0;J=C;A=H;c[A>>2]=y;c[A+4>>2]=J;w=y^w;t=J^t;J=oh(w|0,t|0,63)|0;y=C;t=ph(w|0,t|0,1)|0;w=n;c[w>>2]=t|J;c[w+4>>2]=C|y;w=f+(z+16<<3)|0;y=w;J=c[y>>2]|0;y=c[y+4>>2]|0;t=f+(z+48<<3)|0;A=t;m=c[A>>2]|0;A=c[A+4>>2]|0;D=lh(m|0,A|0,J|0,y|0)|0;v=C;y=ph(J|0,y|0,1)|0;y=wh(y&-2|0,C&1|0,m|0,0)|0;y=lh(D|0,v|0,y|0,C|0)|0;v=C;D=f+(z+112<<3)|0;J=D;K=y^c[J>>2];J=v^c[J+4>>2];u=f+(z+80<<3)|0;F=u;x=c[F>>2]|0;F=c[F+4>>2]|0;l=lh(J|0,K|0,x|0,F|0)|0;p=C;F=ph(x|0,F|0,1)|0;F=wh(F&-2|0,C&1|0,J|0,0)|0;F=lh(l|0,p|0,F|0,C|0)|0;p=C;m=F^m;A=p^A;l=oh(m|0,A|0,24)|0;x=C;A=ph(m|0,A|0,40)|0;A=A|l;x=C|x;m=lh(A|0,x|0,y|0,v|0)|0;h=C;v=ph(y|0,v|0,1)|0;v=wh(l|0,0,v&-2|0,C&1|0)|0;v=lh(m|0,h|0,v|0,C|0)|0;h=C;m=w;c[m>>2]=v;c[m+4>>2]=h;J=v^J;K=h^K;h=oh(J|0,K|0,16)|0;v=C;K=ph(J|0,K|0,48)|0;K=K|h;v=C|v;J=D;c[J>>2]=K;c[J+4>>2]=v;v=lh(K|0,v|0,F|0,p|0)|0;K=C;p=ph(F|0,p|0,1)|0;p=wh(h|0,0,p&-2|0,C&1|0)|0;p=lh(v|0,K|0,p|0,C|0)|0;K=C;A=p^A;x=K^x;v=oh(A|0,x|0,63)|0;h=C;x=ph(A|0,x|0,1)|0;A=t;c[A>>2]=x|v;c[A+4>>2]=C|h;A=f+(z+17<<3)|0;h=A;v=c[h>>2]|0;h=c[h+4>>2]|0;x=f+(z+49<<3)|0;F=x;J=c[F>>2]|0;F=c[F+4>>2]|0;m=lh(J|0,F|0,v|0,h|0)|0;l=C;h=ph(v|0,h|0,1)|0;h=wh(h&-2|0,C&1|0,J|0,0)|0;h=lh(m|0,l|0,h|0,C|0)|0;l=C;m=f+(z+113<<3)|0;v=m;y=h^c[v>>2];v=l^c[v+4>>2];z=f+(z+81<<3)|0;r=z;a=c[r>>2]|0;r=c[r+4>>2]|0;j=lh(v|0,y|0,a|0,r|0)|0;E=C;r=ph(a|0,r|0,1)|0;r=wh(r&-2|0,C&1|0,v|0,0)|0;r=lh(j|0,E|0,r|0,C|0)|0;E=C;J=r^J;F=E^F;j=oh(J|0,F|0,24)|0;a=C;F=ph(J|0,F|0,40)|0;F=F|j;a=C|a;J=lh(F|0,a|0,h|0,l|0)|0;B=C;l=ph(h|0,l|0,1)|0;l=wh(j|0,0,l&-2|0,C&1|0)|0;l=lh(J|0,B|0,l|0,C|0)|0;B=C;J=A;c[J>>2]=l;c[J+4>>2]=B;v=l^v;y=B^y;B=oh(v|0,y|0,16)|0;l=C;y=ph(v|0,y|0,48)|0;y=y|B;l=C|l;v=lh(y|0,l|0,r|0,E|0)|0;J=C;E=ph(r|0,E|0,1)|0;E=wh(B|0,0,E&-2|0,C&1|0)|0;E=lh(v|0,J|0,E|0,C|0)|0;J=C;F=E^F;a=J^a;v=oh(F|0,a|0,63)|0;B=C;a=ph(F|0,a|0,1)|0;v=a|v;B=C|B;a=x;c[a>>2]=v;c[a+4>>2]=B;a=k;F=c[a>>2]|0;a=c[a+4>>2]|0;r=n;j=c[r>>2]|0;r=c[r+4>>2]|0;h=lh(j|0,r|0,F|0,a|0)|0;o=C;a=ph(F|0,a|0,1)|0;a=wh(a&-2|0,C&1|0,j|0,0)|0;a=lh(h|0,o|0,a|0,C|0)|0;o=C;y=a^y;l=o^l;h=lh(l|0,y|0,p|0,K|0)|0;F=C;K=ph(p|0,K|0,1)|0;K=wh(K&-2|0,C&1|0,l|0,0)|0;K=lh(h|0,F|0,K|0,C|0)|0;F=C;j=K^j;r=F^r;h=oh(j|0,r|0,24)|0;p=C;r=ph(j|0,r|0,40)|0;r=r|h;p=C|p;j=lh(r|0,p|0,a|0,o|0)|0;I=C;o=ph(a|0,o|0,1)|0;o=wh(h|0,0,o&-2|0,C&1|0)|0;o=lh(j|0,I|0,o|0,C|0)|0;I=C;c[k>>2]=o;c[k+4>>2]=I;l=o^l;y=I^y;I=oh(l|0,y|0,16)|0;o=C;y=ph(l|0,y|0,48)|0;y=y|I;o=C|o;c[m>>2]=y;c[m+4>>2]=o;o=lh(y|0,o|0,K|0,F|0)|0;y=C;F=ph(K|0,F|0,1)|0;F=wh(I|0,0,F&-2|0,C&1|0)|0;F=lh(o|0,y|0,F|0,C|0)|0;y=C;c[u>>2]=F;c[u+4>>2]=y;r=F^r;p=y^p;y=oh(r|0,p|0,63)|0;F=C;p=ph(r|0,p|0,1)|0;c[n>>2]=p|y;c[n+4>>2]=C|F;n=q;F=c[n>>2]|0;n=c[n+4>>2]|0;y=t;p=c[y>>2]|0;y=c[y+4>>2]|0;r=lh(p|0,y|0,F|0,n|0)|0;u=C;n=ph(F|0,n|0,1)|0;n=wh(n&-2|0,C&1|0,p|0,0)|0;n=lh(r|0,u|0,n|0,C|0)|0;u=C;r=s;F=n^c[r>>2];r=u^c[r+4>>2];o=lh(r|0,F|0,E|0,J|0)|0;I=C;J=ph(E|0,J|0,1)|0;J=wh(J&-2|0,C&1|0,r|0,0)|0;J=lh(o|0,I|0,J|0,C|0)|0;I=C;p=J^p;y=I^y;o=oh(p|0,y|0,24)|0;E=C;y=ph(p|0,y|0,40)|0;y=y|o;E=C|E;p=lh(y|0,E|0,n|0,u|0)|0;K=C;u=ph(n|0,u|0,1)|0;u=wh(o|0,0,u&-2|0,C&1|0)|0;u=lh(p|0,K|0,u|0,C|0)|0;K=C;c[q>>2]=u;c[q+4>>2]=K;r=u^r;F=K^F;K=oh(r|0,F|0,16)|0;u=C;F=ph(r|0,F|0,48)|0;F=F|K;u=C|u;c[s>>2]=F;c[s+4>>2]=u;u=lh(F|0,u|0,J|0,I|0)|0;F=C;I=ph(J|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(u|0,F|0,I|0,C|0)|0;F=C;c[z>>2]=I;c[z+4>>2]=F;y=I^y;E=F^E;F=oh(y|0,E|0,63)|0;I=C;E=ph(y|0,E|0,1)|0;c[t>>2]=E|F;c[t+4>>2]=C|I;t=w;I=c[t>>2]|0;t=c[t+4>>2]|0;F=lh(v|0,B|0,I|0,t|0)|0;E=C;t=ph(I|0,t|0,1)|0;t=wh(t&-2|0,C&1|0,v|0,0)|0;t=lh(F|0,E|0,t|0,C|0)|0;E=C;F=L;I=t^c[F>>2];F=E^c[F+4>>2];y=G;z=c[y>>2]|0;y=c[y+4>>2]|0;u=lh(F|0,I|0,z|0,y|0)|0;K=C;y=ph(z|0,y|0,1)|0;y=wh(y&-2|0,C&1|0,F|0,0)|0;y=lh(u|0,K|0,y|0,C|0)|0;K=C;v=y^v;B=K^B;u=oh(v|0,B|0,24)|0;z=C;B=ph(v|0,B|0,40)|0;B=B|u;z=C|z;v=lh(B|0,z|0,t|0,E|0)|0;J=C;E=ph(t|0,E|0,1)|0;E=wh(u|0,0,E&-2|0,C&1|0)|0;E=lh(v|0,J|0,E|0,C|0)|0;J=C;c[w>>2]=E;c[w+4>>2]=J;F=E^F;I=J^I;J=oh(F|0,I|0,16)|0;E=C;I=ph(F|0,I|0,48)|0;I=I|J;E=C|E;c[L>>2]=I;c[L+4>>2]=E;E=lh(I|0,E|0,y|0,K|0)|0;I=C;K=ph(y|0,K|0,1)|0;K=wh(J|0,0,K&-2|0,C&1|0)|0;K=lh(E|0,I|0,K|0,C|0)|0;I=C;c[G>>2]=K;c[G+4>>2]=I;B=K^B;z=I^z;I=oh(B|0,z|0,63)|0;K=C;z=ph(B|0,z|0,1)|0;c[x>>2]=z|I;c[x+4>>2]=C|K;x=A;K=c[x>>2]|0;x=c[x+4>>2]|0;I=M;z=c[I>>2]|0;I=c[I+4>>2]|0;B=lh(z|0,I|0,K|0,x|0)|0;G=C;x=ph(K|0,x|0,1)|0;x=wh(x&-2|0,C&1|0,z|0,0)|0;x=lh(B|0,G|0,x|0,C|0)|0;G=C;B=D;K=x^c[B>>2];B=G^c[B+4>>2];E=H;J=c[E>>2]|0;E=c[E+4>>2]|0;y=lh(B|0,K|0,J|0,E|0)|0;L=C;E=ph(J|0,E|0,1)|0;E=wh(E&-2|0,C&1|0,B|0,0)|0;E=lh(y|0,L|0,E|0,C|0)|0;L=C;z=E^z;I=L^I;y=oh(z|0,I|0,24)|0;J=C;I=ph(z|0,I|0,40)|0;I=I|y;J=C|J;z=lh(I|0,J|0,x|0,G|0)|0;F=C;G=ph(x|0,G|0,1)|0;G=wh(y|0,0,G&-2|0,C&1|0)|0;G=lh(z|0,F|0,G|0,C|0)|0;F=C;c[A>>2]=G;c[A+4>>2]=F;B=G^B;K=F^K;F=oh(B|0,K|0,16)|0;G=C;K=ph(B|0,K|0,48)|0;K=K|F;G=C|G;c[D>>2]=K;c[D+4>>2]=G;G=lh(K|0,G|0,E|0,L|0)|0;K=C;L=ph(E|0,L|0,1)|0;L=wh(F|0,0,L&-2|0,C&1|0)|0;L=lh(G|0,K|0,L|0,C|0)|0;K=C;c[H>>2]=L;c[H+4>>2]=K;I=L^I;J=K^J;K=oh(I|0,J|0,63)|0;L=C;J=ph(I|0,J|0,1)|0;c[M>>2]=J|K;c[M+4>>2]=C|L;b=b+1|0}while((b|0)!=8);qh(d|0,e|0,1024)|0;b=0;do{K=f+(b<<3)|0;M=d+(b<<3)|0;J=M;L=c[J+4>>2]^c[K+4>>2];c[M>>2]=c[J>>2]^c[K>>2];c[M+4>>2]=L;b=b+1|0}while((b|0)!=128);i=g;return}function fe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;e=i;d=i=i+63&-64;i=i+48|0;b=ae(a)|0;if(b|0){d=b;i=e;return d|0}f=c[a+44>>2]|0;b=c[a+48>>2]|0;h=b<<3;g=b<<2;f=((f>>>0<h>>>0?h:f)>>>0)/(g>>>0)|0;g=_(f,g)|0;c[d>>2]=0;c[d+4>>2]=c[a+40>>2];c[d+8>>2]=g;c[d+12>>2]=f;c[d+16>>2]=f<<2;c[d+20>>2]=b;c[d+24>>2]=c[a+52>>2];c[d+28>>2]=1;b=be(d,a)|0;if(b|0){h=b;i=e;return h|0}b=$d(d)|0;if(b|0){h=b;i=e;return h|0}_d(a,d);h=0;i=e;return h|0}function ge(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=i;q=i=i+63&-64;i=i+496|0;u=q;g=q+360|0;s=q+432|0;q=q+368|0;c[g>>2]=d;if(d>>>0>=65){nh(u+64|0,0,293)|0;v=u;w=400;x=v+48|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));l=u;c[l>>2]=-222443192;c[l+4>>2]=1779033703;l=u+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=u+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=u+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=u+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=u+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=u+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;l=u+56|0;c[l>>2]=327033209;c[l+4>>2]=1541459225;l=u+352|0;m=u+96|0;n=u+64|0;o=u+72|0;p=u+224|0;c[u+96>>2]=c[g>>2];g=(c[l>>2]|0)+4|0;c[l>>2]=g;a:do if(f|0){k=0;while(1){j=256-g|0;g=u+96+g|0;if(!(k>>>0>0|(k|0)==0&f>>>0>j>>>0))break;qh(g|0,e|0,j|0)|0;c[l>>2]=(c[l>>2]|0)+j;x=n;v=c[x>>2]|0;x=c[x+4>>2]|0;h=lh(v|0,x|0,128,0)|0;w=n;c[w>>2]=h;c[w+4>>2]=C;w=o;w=lh((x>>>0>4294967295|(x|0)==-1&v>>>0>4294967167)&1|0,0,c[w>>2]|0,c[w+4>>2]|0)|0;v=o;c[v>>2]=w;c[v+4>>2]=C;id(u,m);v=m;w=p;x=v+128|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));g=(c[l>>2]|0)+-128|0;c[l>>2]=g;h=kh(f|0,k|0,j|0,0)|0;if((f|0)==(j|0)&(k|0)==0)break a;else{e=e+j|0;k=C;f=h}}qh(g|0,e|0,f|0)|0;x=lh(c[l>>2]|0,0,f|0,k|0)|0;c[l>>2]=x}while(0);jd(u,s,64);v=b;w=s;x=v+32|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));g=d+-32|0;j=b+32|0;h=g>>>0>64;v=q;w=s;x=v+64|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));b:do if(h)while(1){if((kd(s,64,q,64,0,0,0)|0)<0)break b;v=j;w=s;x=v+32|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));g=g+-32|0;j=j+32|0;h=g>>>0>64;v=q;w=s;x=v+64|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));if(!h){r=j;t=g;y=21;break}}else{r=j;t=g;y=21}while(0);if((y|0)==21?(kd(s,t,q,64,0,0,0)|0)>=0:0)qh(r|0,s|0,t|0)|0;i=z;return}if((d+-1|0)>>>0>63){i=z;return}l=d&255;if((l+-1&255)>63)ra();nh(u+64|0,0,293)|0;v=u;w=400;x=v+48|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));m=u;c[m>>2]=d&255^-222443256;c[m+4>>2]=1779033703;m=u+8|0;c[m>>2]=-2067093701;c[m+4>>2]=-1150833019;m=u+16|0;c[m>>2]=-23791573;c[m+4>>2]=1013904242;m=u+24|0;c[m>>2]=1595750129;c[m+4>>2]=-1521486534;m=u+32|0;c[m>>2]=-1377402159;c[m+4>>2]=1359893119;m=u+40|0;c[m>>2]=725511199;c[m+4>>2]=-1694144372;m=u+48|0;c[m>>2]=-79577749;c[m+4>>2]=528734635;m=u+56|0;c[m>>2]=327033209;c[m+4>>2]=1541459225;m=u+352|0;n=u+96|0;o=u+64|0;p=u+72|0;q=u+224|0;c[u+96>>2]=c[g>>2];g=(c[m>>2]|0)+4|0;c[m>>2]=g;if(f|0){k=0;while(1){j=256-g|0;g=u+96+g|0;if(!(k>>>0>0|(k|0)==0&f>>>0>j>>>0)){y=8;break}qh(g|0,e|0,j|0)|0;c[m>>2]=(c[m>>2]|0)+j;x=o;v=c[x>>2]|0;x=c[x+4>>2]|0;t=lh(v|0,x|0,128,0)|0;w=o;c[w>>2]=t;c[w+4>>2]=C;w=p;w=lh((x>>>0>4294967295|(x|0)==-1&v>>>0>4294967167)&1|0,0,c[w>>2]|0,c[w+4>>2]|0)|0;v=p;c[v>>2]=w;c[v+4>>2]=C;id(u,n);v=n;w=q;x=v+128|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));g=(c[m>>2]|0)+-128|0;c[m>>2]=g;h=kh(f|0,k|0,j|0,0)|0;if((f|0)==(j|0)&(k|0)==0)break;else{e=e+j|0;k=C;f=h}}if((y|0)==8){qh(g|0,e|0,f|0)|0;y=lh(c[m>>2]|0,0,f|0,k|0)|0;c[m>>2]=y}if(d>>>0>=256)za(32557,32577,106,32795)}jd(u,b,l);i=z;return}function he(){return 1}function ie(){return 16}function je(){return 128}function ke(){return 33080}function le(){return 4}function me(){return 33554432}function ne(){return 6}function oe(){return 134217728}function pe(){return 8}function qe(){return 536870912}function re(a,b,d,e,f,g,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;q=i;n=i=i+63&-64;i=i+96|0;o=n+60|0;if((m|0)!=1){p=-1;i=q;return p|0}m=l>>>10;g=g|d|k;if(g>>>0>0|(g|0)==0&(f|b|j)>>>0>4294967295|l>>>0>2147484671){if(!(c[8522]|0))m=34132;else m=c[(oa()|0)+64>>2]|0;c[m>>2]=27;p=-1;i=q;return p|0}if(d>>>0<0|(d|0)==0&b>>>0<16|(k>>>0<0|(k|0)==0&j>>>0<3)|l>>>0<8192){if(!(c[8522]|0))m=34132;else m=c[(oa()|0)+64>>2]|0;c[m>>2]=22;p=-1;i=q;return p|0}d=fh(b)|0;do if(!d)m=-22;else{c[n>>2]=d;c[n+4>>2]=b;c[n+8>>2]=e;c[n+12>>2]=f;c[n+16>>2]=h;c[n+20>>2]=16;k=n+24|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[n+40>>2]=j;c[n+44>>2]=m;c[n+48>>2]=1;c[n+52>>2]=1;c[n+56>>2]=4;if(b>>>0>=16)if((e|0)!=0|(f|0)==0)if(h)if(l>>>0>=8192)if(l>>>0<=2147484671)if(j>>>0>=3){m=l>>>12;c[o>>2]=0;c[o+4>>2]=j;c[o+8>>2]=m<<2;c[o+12>>2]=m;c[o+16>>2]=m<<2;c[o+20>>2]=1;c[o+24>>2]=1;c[o+28>>2]=1;m=be(o,n)|0;if(!m){m=$d(o)|0;if(!m){_d(n,o);if(a|0)qh(a|0,d|0,b|0)|0;gh(d);m=0;break}}}else{m=-12;p=17}else{m=-15;p=17}else{m=-14;p=17}else{m=-19;p=17}else{m=-18;p=17}else{m=-2;p=17}gh(d)}while(0);p=((m|0)!=0)<<31>>31;i=q;return p|0}function se(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=i;m=i=i+63&-64;i=i+112|0;t=m+88|0;u=m+60|0;y=m;m=m+72|0;n=e;q=n+128|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(q|0));n=l>>>10;A=k|h;if(A>>>0>0|(A|0)==0&(j|g)>>>0>4294967295|l>>>0>2147484671){if(!(c[8522]|0))h=34132;else h=c[(oa()|0)+64>>2]|0;c[h>>2]=27;e=-1;i=B;return e|0}if(k>>>0<0|(k|0)==0&j>>>0<3|l>>>0<8192){if(!(c[8522]|0))h=34132;else h=c[(oa()|0)+64>>2]|0;c[h>>2]=22;e=-1;i=B;return e|0}else h=0;do{a[m+h>>0]=ma(0)|0;h=h+1|0}while((h|0)!=16);A=fh(32)|0;a:do if(!A)h=-1;else{c[y>>2]=A;x=y+4|0;c[x>>2]=32;o=y+8|0;c[o>>2]=f;l=y+12|0;c[l>>2]=g;w=y+16|0;c[w>>2]=m;v=y+20|0;c[v>>2]=16;k=y+24|0;p=y+40|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[p>>2]=j;f=y+44|0;c[f>>2]=n;g=y+48|0;c[g>>2]=1;m=y+52|0;c[m>>2]=1;c[y+56>>2]=4;if(fe(y)|0){gh(A);h=-1;break}b:do if(e|0){n=e;h=33068;q=n+12|0;do{a[n>>0]=a[h>>0]|0;n=n+1|0;h=h+1|0}while((n|0)<(q|0));j=e+11|0;do if(!((c[y>>2]|0)==0|(c[x>>2]|0)>>>0<16)?(c[o>>2]|0)!=0|(c[l>>2]|0)==0:0){l=c[v>>2]|0;if(!(c[w>>2]|0)){if(l|0)break}else if(l>>>0<8)break;if((c[k>>2]|0)==0?c[y+28>>2]|0:0)break;q=c[y+32>>2]|0;if((q|0)==0?c[y+36>>2]|0:0)break;n=c[f>>2]|0;if((((n+-8|0)>>>0<=2097144?(s=c[g>>2]|0,n>>>0>=s<<3>>>0):0)?(r=c[p>>2]|0,!((s+-1|0)>>>0>16777214|r>>>0<3)):0)?((c[m>>2]|0)+-1|0)>>>0<=16777214:0){a[t+9>>0]=57;h=t+8|0;a[h>>0]=49;h=d[h>>0]|d[h+1>>0]<<8;b[u>>1]=h;a[u+2>>0]=0;g=u;c:do if(!(g&2)){h=u;z=32}else{f=u;k=g;h=h&255;while(1){if(!(h<<24>>24)){h=k;break c}h=f+1|0;k=h;if(!(k&3)){z=32;break c}f=h;h=a[h>>0]|0}}while(0);if((z|0)==32){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do h=h+1|0;while((a[h>>0]|0)!=0)}h=h-g|0;if(h>>>0>=117)break;qh(j|0,u|0,h+1|0)|0;f=j+h|0;g=117-h|0;if(g>>>0>=4){a[f>>0]=36;a[f+1>>0]=109;a[f+2>>0]=61;a[f+3>>0]=0;h=n;n=10;while(1){k=n+-1|0;m=t+k|0;a[m>>0]=(h>>>0)%10|0|48;if(h>>>0>9&(k|0)!=0){h=(h>>>0)/10|0;n=k}else break}j=f+3|0;g=g+-3|0;f=11-n|0;qh(u|0,m|0,f|0)|0;a[u+f>>0]=0;f=u;d:do if(!(f&3)){h=u;z=45}else{h=u;k=f;while(1){if(!(a[h>>0]|0)){h=k;break d}h=h+1|0;k=h;if(!(k&3)){z=45;break}}}while(0);if((z|0)==45){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do h=h+1|0;while((a[h>>0]|0)!=0)}h=h-f|0;if(g>>>0<=h>>>0)break;qh(j|0,u|0,h+1|0)|0;n=j+h|0;f=g-h|0;if(f>>>0<4)break;a[n>>0]=44;a[n+1>>0]=116;a[n+2>>0]=61;a[n+3>>0]=0;h=r;m=10;while(1){k=m+-1|0;g=t+k|0;a[g>>0]=(h>>>0)%10|0|48;if(h>>>0>9&(k|0)!=0){h=(h>>>0)/10|0;m=k}else break}n=n+3|0;j=f+-3|0;f=11-m|0;qh(u|0,g|0,f|0)|0;a[u+f>>0]=0;f=u;e:do if(!(f&3)){h=u;z=58}else{h=u;k=f;while(1){if(!(a[h>>0]|0)){h=k;break e}h=h+1|0;k=h;if(!(k&3)){z=58;break}}}while(0);if((z|0)==58){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do h=h+1|0;while((a[h>>0]|0)!=0)}h=h-f|0;if(j>>>0<=h>>>0)break;qh(n|0,u|0,h+1|0)|0;n=n+h|0;f=j-h|0;if(f>>>0<4)break;a[n>>0]=44;a[n+1>>0]=112;a[n+2>>0]=61;a[n+3>>0]=0;h=s;m=10;while(1){k=m+-1|0;g=t+k|0;a[g>>0]=(h>>>0)%10|0|48;if(h>>>0>9&(k|0)!=0){h=(h>>>0)/10|0;m=k}else break}n=n+3|0;j=f+-3|0;f=11-m|0;qh(u|0,g|0,f|0)|0;a[u+f>>0]=0;f=u;f:do if(!(f&3)){h=u;z=71}else{h=u;k=f;while(1){if(!(a[h>>0]|0)){h=k;break f}h=h+1|0;k=h;if(!(k&3)){z=71;break}}}while(0);if((z|0)==71){while(1){k=c[h>>2]|0;if(!((k&-2139062144^-2139062144)&k+-16843009))h=h+4|0;else break}if((k&255)<<24>>24)do h=h+1|0;while((a[h>>0]|0)!=0)}h=h-f|0;if(j>>>0<=h>>>0)break;qh(n|0,u|0,h+1|0)|0;k=n+h|0;h=j-h|0;f=c[y+36>>2]|0;if(f){if(h>>>0<7)break;a[k>>0]=a[33061]|0;a[k+1>>0]=a[33062]|0;a[k+2>>0]=a[33063]|0;a[k+3>>0]=a[33064]|0;a[k+4>>0]=a[33065]|0;a[k+5>>0]=a[33066]|0;a[k+6>>0]=a[33067]|0;j=k+6|0;o=h+-6|0;h=((f>>>0)/3|0)<<2;switch((f>>>0)%3|0|0){case 2:{h=h|1;z=82;break}case 1:{z=82;break}default:n=h}if((z|0)==82)n=h+2|0;if(o>>>0>n>>>0){h=j;m=0;k=0;g=q}else break;do{f=f+-1|0;u=g;g=g+1|0;m=d[u>>0]|m<<8;k=k+8|0;if(k>>>0>5)while(1){k=k+-6|0;t=m>>>k&63;s=(t+65510|0)>>>8;u=(t+65484|0)>>>8;l=h+1|0;a[h>>0]=(0-(t^62)|0)>>>8&43^43|s&t+65|(0-(t^63)|0)>>>8&47^47|u&t+71&(s^255)|(t+65474|0)>>>8&t+252&(u^255);if(k>>>0>5)h=l;else{h=l;break}}}while((f|0)!=0);if(k){t=m<<6-k&63;s=(t+65510|0)>>>8;u=(t+65484|0)>>>8;a[h>>0]=(0-(t^62)|0)>>>8&43^43|s&t+65|(0-(t^63)|0)>>>8&47^47|u&t+71&(s^255)|(t+65474|0)>>>8&t+252&(u^255);h=h+1|0}a[h>>0]=0;h=(n|0)==-1;if(h)break;k=j+n|0;h=o-(h?0:n)|0;l=c[v>>2]|0}if(!l)break b;if(h>>>0<2)break;a[k>>0]=36;a[k+1>>0]=0;o=k+1|0;j=h+-1|0;f=c[w>>2]|0;h=((l>>>0)/3|0)<<2;switch((l>>>0)%3|0|0){case 2:{h=h|1;z=95;break}case 1:{z=95;break}default:n=h}if((z|0)==95)n=h+2|0;if(j>>>0>n>>>0){h=o;g=l;m=0;k=0}else break;do{g=g+-1|0;w=f;f=f+1|0;m=d[w>>0]|m<<8;k=k+8|0;if(k>>>0>5)while(1){k=k+-6|0;v=m>>>k&63;u=(v+65510|0)>>>8;w=(v+65484|0)>>>8;l=h+1|0;a[h>>0]=(0-(v^62)|0)>>>8&43^43|u&v+65|(0-(v^63)|0)>>>8&47^47|w&v+71&(u^255)|(v+65474|0)>>>8&v+252&(w^255);if(k>>>0>5)h=l;else{h=l;break}}}while((g|0)!=0);if(k){v=m<<6-k&63;u=(v+65510|0)>>>8;w=(v+65484|0)>>>8;a[h>>0]=(0-(v^62)|0)>>>8&43^43|u&v+65|(0-(v^63)|0)>>>8&47^47|w&v+71&(u^255)|(v+65474|0)>>>8&v+252&(w^255);h=h+1|0}a[h>>0]=0;w=(n|0)==-1;k=j-(w?0:n)|0;h=w?o:o+n|0;if(w)break;if(!(c[x>>2]|0))break b;if(k>>>0<2)break;a[h>>0]=36;a[h+1>>0]=0;h=h+1|0;f=k+-1|0;g=c[y>>2]|0;l=c[x>>2]|0;k=((l>>>0)/3|0)<<2;switch((l>>>0)%3|0|0){case 2:{k=k|1;z=107;break}case 1:{z=107;break}default:{}}if((z|0)==107)k=k+2|0;if(k>>>0>=f>>>0)break;do if(l){m=l;n=0;l=0;do{m=m+-1|0;z=g;g=g+1|0;n=d[z>>0]|n<<8;l=l+8|0;if(l>>>0>5)while(1){l=l+-6|0;y=n>>>l&63;x=(y+65510|0)>>>8;z=(y+65484|0)>>>8;f=h+1|0;a[h>>0]=(0-(y^62)|0)>>>8&43^43|x&y+65|(0-(y^63)|0)>>>8&47^47|z&y+71&(x^255)|(y+65474|0)>>>8&y+252&(z^255);if(l>>>0>5)h=f;else{h=f;break}}}while((m|0)!=0);if(!l)break;y=n<<6-l&63;x=(y+65510|0)>>>8;z=(y+65484|0)>>>8;a[h>>0]=(0-(y^62)|0)>>>8&43^43|x&y+65|(0-(y^63)|0)>>>8&47^47|z&y+71&(x^255)|(y+65474|0)>>>8&y+252&(z^255);h=h+1|0}while(0);a[h>>0]=0;if((k|0)!=-1)break b}}}while(0);n=A;q=n+32|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(q|0));n=e;q=n+128|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(q|0));gh(A);h=-1;break a}while(0);gh(A);h=0}while(0);e=h;i=B;return e|0}function te(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;x=i;v=i=i+63&-64;i=i+64|0;if(f>>>0>0|(f|0)==0&e>>>0>4294967295){if(!(c[8522]|0))f=34132;else f=c[(oa()|0)+64>>2]|0;c[f>>2]=27;w=-1;i=x;return w|0}h=b;a:do if(!(h&3)){f=b;w=8}else{f=b;g=h;while(1){if(!(a[f>>0]|0)){f=g;break a}f=f+1|0;g=f;if(!(g&3)){w=8;break}}}while(0);if((w|0)==8){while(1){g=c[f>>2]|0;if(!((g&-2139062144^-2139062144)&g+-16843009))f=f+4|0;else break}if((g&255)<<24>>24)do f=f+1|0;while((a[f>>0]|0)!=0)}p=f-h|0;r=fh(p)|0;s=fh(p)|0;q=s;t=fh(p)|0;b:do if((t|0)==0|(s|0)==0|(r|0)==0){gh(r);gh(s);gh(t);f=-22}else{u=fh(p)|0;if(!u){gh(r);gh(s);gh(t);f=-22;break}f=a[b>>0]|0;c:do if(!(f<<24>>24)){f=0;g=33036}else{j=8;h=b;g=33036;while(1){j=j+-1|0;o=a[g>>0]|0;if(!(f<<24>>24==o<<24>>24&((j|0)!=0&o<<24>>24!=0)))break c;h=h+1|0;g=g+1|0;f=a[h>>0]|0;if(!(f<<24>>24)){f=0;break}}}while(0);o=f<<24>>24==(a[g>>0]|0);b=o?b+8|0:b;d:do if(o){f=a[b>>0]|0;e:do if(!(f<<24>>24)){f=0;g=33045}else{j=3;h=b;g=33045;while(1){j=j+-1|0;o=a[g>>0]|0;if(!(f<<24>>24==o<<24>>24&((j|0)!=0&o<<24>>24!=0)))break e;h=h+1|0;g=g+1|0;f=a[h>>0]|0;if(!(f<<24>>24)){f=0;break}}}while(0);o=f<<24>>24==(a[g>>0]|0);f=b+3|0;j=o?f:b;if(o?(l=a[j>>0]|0,(l+-48&255)<=9):0){h=l;g=0;while(1){h=(h<<24>>24)+-48|0;if(g>>>0>429496729){f=-32;break d}g=g*10|0;if(h>>>0>~g>>>0){f=-32;break d}g=h+g|0;k=f+1|0;h=a[k>>0]|0;if((h+-48&255)>9)break;else f=k}if((k|0)!=(j|0)?!((f|0)!=(j|0)&l<<24>>24==48|(k|0)==0):0)if((g|0)==19){f:do if(!(h<<24>>24)){h=0;g=33049}else{b=3;j=k;g=33049;while(1){b=b+-1|0;o=a[g>>0]|0;if(!(h<<24>>24==o<<24>>24&((b|0)!=0&o<<24>>24!=0)))break f;j=j+1|0;g=g+1|0;h=a[j>>0]|0;if(!(h<<24>>24)){h=0;break}}}while(0);o=h<<24>>24==(a[g>>0]|0);f=f+4|0;j=o?f:k;if(o?(m=a[j>>0]|0,(m+-48&255)<=9):0){g=m;o=0;while(1){h=(g<<24>>24)+-48|0;if(o>>>0>429496729){f=-32;break d}g=o*10|0;if(h>>>0>~g>>>0){f=-32;break d}o=h+g|0;k=f+1|0;g=a[k>>0]|0;if((g+-48&255)>9)break;else f=k}if((k|0)!=(j|0)?!(m<<24>>24==48&(f|0)!=(j|0)|(k|0)==0):0){g:do if(!(g<<24>>24)){h=0;g=33053}else{b=3;h=g;j=k;g=33053;while(1){b=b+-1|0;n=a[g>>0]|0;if(!(h<<24>>24==n<<24>>24&((b|0)!=0&n<<24>>24!=0)))break g;j=j+1|0;g=g+1|0;h=a[j>>0]|0;if(!(h<<24>>24)){h=0;break}}}while(0);n=h<<24>>24==(a[g>>0]|0);f=f+4|0;j=n?f:k;if(!n){f=-32;break}b=a[j>>0]|0;if((b+-48&255)>9){f=-32;break}else{g=b;n=0}while(1){h=(g<<24>>24)+-48|0;if(n>>>0>429496729){f=-32;break d}g=n*10|0;if(h>>>0>~g>>>0){f=-32;break d}n=h+g|0;k=f+1|0;g=a[k>>0]|0;if((g+-48&255)>9)break;else f=k}if((k|0)==(j|0)){f=-32;break}if(b<<24>>24==48&(f|0)!=(j|0)|(k|0)==0){f=-32;break}h:do if(!(g<<24>>24)){h=0;g=33057}else{b=3;h=g;j=k;g=33057;while(1){b=b+-1|0;m=a[g>>0]|0;if(!(h<<24>>24==m<<24>>24&((b|0)!=0&m<<24>>24!=0)))break h;j=j+1|0;g=g+1|0;h=a[j>>0]|0;if(!(h<<24>>24)){h=0;break}}}while(0);m=h<<24>>24==(a[g>>0]|0);f=f+4|0;h=m?f:k;if(!m){f=-32;break}j=a[h>>0]|0;if((j+-48&255)>9){f=-32;break}else{l=f;f=j;m=0}while(1){g=(f<<24>>24)+-48|0;if(m>>>0>429496729){f=-32;break d}f=m*10|0;if(g>>>0>~f>>>0){f=-32;break d}m=g+f|0;g=l+1|0;f=a[g>>0]|0;if((f+-48&255)>9)break;else l=g}if((g|0)==(h|0)){f=-32;break}if(j<<24>>24==48&(l|0)!=(h|0)|(g|0)==0){f=-32;break}i:do if(!(f<<24>>24)){j=0;h=33061}else{b=6;j=f;k=g;h=33061;while(1){b=b+-1|0;y=a[h>>0]|0;if(!(j<<24>>24==y<<24>>24&((b|0)!=0&y<<24>>24!=0)))break i;k=k+1|0;h=h+1|0;j=a[k>>0]|0;if(!(j<<24>>24)){j=0;break}}}while(0);if(j<<24>>24==(a[h>>0]|0)){c[v>>2]=p;f=ce(r,v,l+7|0)|0;if(!f){f=-32;break}g=f;f=a[f>>0]|0}j:do switch(f<<24>>24){case 0:{h=0;j=0;break}case 36:{c[v>>2]=p;f=ce(s,v,g+1|0)|0;if(!f){f=-32;break d}h=c[v>>2]|0;switch(a[f>>0]|0){case 0:{j=0;break j}case 36:break;default:{f=-32;break d}}c[v>>2]=p;f=ce(t,v,f+1|0)|0;if(!f){f=-32;break d}g=c[v>>2]|0;if(g>>>0<16){f=-2;break d}if(!s){if(h|0){f=-19;break d}}else if(h>>>0<8){f=-6;break d}if(o>>>0<8){f=-14;break d}if(o>>>0>2097152){f=-15;break d}if(o>>>0<m<<3>>>0){f=-14;break d}if(n>>>0<3){f=-12;break d}if(!m){f=-16;break d}if(m>>>0>16777215){f=-17;break d}if(!(a[f>>0]|0))j=g;else{f=-32;break d}break}default:{f=-32;break d}}while(0);f=fh(j)|0;do if(f){c[v>>2]=f;c[v+4>>2]=j;c[v+8>>2]=d;c[v+12>>2]=e;c[v+16>>2]=q;c[v+20>>2]=h;y=v+24|0;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[v+40>>2]=n;c[v+44>>2]=o;c[v+48>>2]=m;c[v+52>>2]=m;c[v+56>>2]=4;if(fe(v)|0){gh(f);gh(r);gh(s);w=93;break}qh(u|0,f|0,j|0)|0;gh(f);gh(r);gh(s);if(!j)f=0;else{f=0;g=0;do{f=a[t+g>>0]^a[u+g>>0]|f;g=g+1|0}while((g|0)!=(j|0))}if(!((f&255)+511&256))w=93;else f=0}else{gh(r);gh(s);w=93}while(0);if((w|0)==93)f=-35;gh(u);gh(t);break b}else f=-32}else f=-32}else f=-26;else f=-32}else f=-32}else f=-32;while(0);gh(r);gh(s);gh(t);gh(u)}while(0);y=((f|0)!=0)<<31>>31;i=x;return y|0}function ue(){return 1}function ve(){return 1}function we(){return 16}function xe(){return 128}function ye(){return 33080}function ze(){return 4}function Ae(){return 33554432}function Be(){return 6}function Ce(){return 134217728}function De(){return 8}function Ee(){return 536870912}function Fe(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if((l|0)==1){h=re(a,b,d,e,f,g,h,i,j,k,1)|0;return h|0}if(!(c[8522]|0))b=34132;else b=c[(oa()|0)+64>>2]|0;c[b>>2]=22;h=-1;return h|0}function Ge(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return se(a,b,c,d,e,f,g)|0}function He(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return te(a,b,c,d)|0}function Ie(){return 33090}function Je(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;t=i=i+63&-64;i=i+48|0;j=t+8|0;u=t+4|0;if((a[g>>0]|0)!=36){h=0;i=w;return h|0}if((a[g+1>>0]|0)!=55){h=0;i=w;return h|0}if((a[g+2>>0]|0)!=36){h=0;i=w;return h|0}o=a[g+3>>0]|0;n=o&255;a:do if(2){l=65;k=33098;do{if((a[k>>0]|0)==o<<24>>24)break a;k=k+1|0;l=l+-1|0;m=(l|0)!=0}while(m&(k&3|0)!=0);if(!m){h=0;i=w;return h|0}}else{l=65;k=33098}while(0);b:do if((a[k>>0]|0)!=o<<24>>24){m=_(n,16843009)|0;c:do if(l>>>0>3)while(1){s=c[k>>2]^m;if((s&-2139062144^-2139062144)&s+-16843009|0)break c;k=k+4|0;l=l+-4|0;if(l>>>0<=3){v=12;break}}else v=12;while(0);if((v|0)==12)if(!l){h=0;i=w;return h|0}while(1){if((a[k>>0]|0)==o<<24>>24)break b;l=l+-1|0;if(!l){j=0;break}else k=k+1|0}i=w;return j|0}while(0);if((k|0)==0|(l|0)==0){h=0;i=w;return h|0}r=ph(1,0,k-33098|0)|0;s=C;k=Ke(u,g+4|0)|0;if(!k){h=0;i=w;return h|0}q=Ke(t,k)|0;if(!q){h=0;i=w;return h|0}o=q;p=o-g|0;n=(o&3|0)==0;d:do if(n){k=q;v=22}else{l=q;k=o;while(1){if(!(a[l>>0]|0))break d;l=l+1|0;k=l;if(!(k&3)){k=l;v=22;break}}}while(0);if((v|0)==22){while(1){l=c[k>>2]|0;if(!((l&-2139062144^-2139062144)&l+-16843009))k=k+4|0;else break}if((l&255)<<24>>24)do k=k+1|0;while((a[k>>0]|0)!=0)}l=k-o+1|0;while(1){k=l+-1|0;if(!l){v=32;break}m=q+k|0;if((a[m>>0]|0)==36){v=30;break}else l=k}if((v|0)==30)if(!m)v=32;else l=l+-1|0;if((v|0)==32){e:do if(n){k=q;v=35}else{k=q;l=o;while(1){if(!(a[k>>0]|0)){k=l;break e}k=k+1|0;l=k;if(!(l&3)){v=35;break}}}while(0);if((v|0)==35){while(1){l=c[k>>2]|0;if(!((l&-2139062144^-2139062144)&l+-16843009))k=k+4|0;else break}if((l&255)<<24>>24)do k=k+1|0;while((a[k>>0]|0)!=0)}l=k-o|0}k=l+p|0;p=k+45|0;if(p>>>0>102|p>>>0<l>>>0){h=0;i=w;return h|0}if(Xe(b,e,f,q,l,r,s,c[u>>2]|0,c[t>>2]|0,j,32)|0){h=0;i=w;return h|0}qh(h|0,g|0,k|0)|0;r=h+k|0;p=r+1|0;a[r>>0]=36;r=p;p=h+102-p|0;k=0;f:while(1){if(k>>>0<32){q=0;l=0}else break;do{g=k;k=k+1|0;l=d[j+g>>0]<<q|l;q=q+8|0}while(k>>>0<32&q>>>0<24);m=p;n=r;o=0;while(1){if(!m){v=49;break f}g=n;n=n+1|0;a[g>>0]=a[33098+(l&63)>>0]|0;o=o+6|0;if(o>>>0>=q>>>0)break;else{l=l>>>6;m=m+-1|0}}g=(n|0)==0;p=(g?0:r-n|0)+p|0;if(g){v=49;break}else r=n}if((v|0)==49){k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));h=0;i=w;return h|0}k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));if(!((r|0)!=0&r>>>0<(h+102|0)>>>0)){h=0;i=w;return h|0}a[r>>0]=0;i=w;return h|0}function Ke(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;i=a[d>>0]|0;h=i&255;a:do if(2){e=65;f=33098;do{if((a[f>>0]|0)==i<<24>>24)break a;f=f+1|0;e=e+-1|0;g=(e|0)!=0}while(g&(f&3|0)!=0);if(!g){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;f=33098}while(0);b:do if((a[f>>0]|0)!=i<<24>>24){g=_(h,16843009)|0;c:do if(e>>>0>3)while(1){m=c[f>>2]^g;if((m&-2139062144^-2139062144)&m+-16843009|0)break c;f=f+4|0;e=e+-4|0;if(e>>>0<=3){n=9;break}}else n=9;while(0);if((n|0)==9)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[f>>0]|0)==i<<24>>24)break b;e=e+-1|0;if(!e){e=0;f=0;break}else f=f+1|0}c[b>>2]=f;return e|0}while(0);if((f|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}j=a[d+1>>0]|0;i=j&255;d:do if(2){e=65;g=33098;do{if((a[g>>0]|0)==j<<24>>24)break d;g=g+1|0;e=e+-1|0;h=(e|0)!=0}while(h&(g&3|0)!=0);if(!h){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;g=33098}while(0);e:do if((a[g>>0]|0)!=j<<24>>24){h=_(i,16843009)|0;f:do if(e>>>0>3)while(1){m=c[g>>2]^h;if((m&-2139062144^-2139062144)&m+-16843009|0)break f;g=g+4|0;e=e+-4|0;if(e>>>0<=3){n=22;break}}else n=22;while(0);if((n|0)==22)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[g>>0]|0)==j<<24>>24)break e;e=e+-1|0;if(!e){e=0;f=0;break}else g=g+1|0}c[b>>2]=f;return e|0}while(0);if((g|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}k=a[d+2>>0]|0;j=k&255;g:do if(2){e=65;h=33098;do{if((a[h>>0]|0)==k<<24>>24)break g;h=h+1|0;e=e+-1|0;i=(e|0)!=0}while(i&(h&3|0)!=0);if(!i){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;h=33098}while(0);h:do if((a[h>>0]|0)!=k<<24>>24){i=_(j,16843009)|0;i:do if(e>>>0>3)while(1){m=c[h>>2]^i;if((m&-2139062144^-2139062144)&m+-16843009|0)break i;h=h+4|0;e=e+-4|0;if(e>>>0<=3){n=36;break}}else n=36;while(0);if((n|0)==36)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[h>>0]|0)==k<<24>>24)break h;e=e+-1|0;if(!e){e=0;f=0;break}else h=h+1|0}c[b>>2]=f;return e|0}while(0);if((h|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+3>>0]|0;k=l&255;j:do if(2){e=65;i=33098;do{if((a[i>>0]|0)==l<<24>>24)break j;i=i+1|0;e=e+-1|0;j=(e|0)!=0}while(j&(i&3|0)!=0);if(!j){d=0;n=0;c[b>>2]=n;return d|0}}else{e=65;i=33098}while(0);k:do if((a[i>>0]|0)==l<<24>>24)m=i;else{j=_(k,16843009)|0;l:do if(e>>>0>3)while(1){m=c[i>>2]^j;if((m&-2139062144^-2139062144)&m+-16843009|0)break l;i=i+4|0;e=e+-4|0;if(e>>>0<=3){n=49;break}}else n=49;while(0);if((n|0)==49)if(!e){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[i>>0]|0)==l<<24>>24){m=i;break k}e=e+-1|0;if(!e){e=0;f=0;break}else i=i+1|0}c[b>>2]=f;return e|0}while(0);if((m|0)==0|(e|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+4>>0]|0;k=l&255;m:do if(2){i=65;e=33098;do{if((a[e>>0]|0)==l<<24>>24)break m;e=e+1|0;i=i+-1|0;j=(i|0)!=0}while(j&(e&3|0)!=0);if(!j){d=0;n=0;c[b>>2]=n;return d|0}}else{i=65;e=33098}while(0);n:do if((a[e>>0]|0)!=l<<24>>24){j=_(k,16843009)|0;o:do if(i>>>0>3)while(1){k=c[e>>2]^j;if((k&-2139062144^-2139062144)&k+-16843009|0)break o;e=e+4|0;i=i+-4|0;if(i>>>0<=3){n=62;break}}else n=62;while(0);if((n|0)==62)if(!i){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[e>>0]|0)==l<<24>>24)break n;i=i+-1|0;if(!i){e=0;f=0;break}else e=e+1|0}c[b>>2]=f;return e|0}while(0);if((e|0)==0|(i|0)==0){d=0;n=0;c[b>>2]=n;return d|0}d=d+5|0;n=e-33098<<24|(m-33098<<18|(h-33098<<12|(g-33098<<6|f-33098)));c[b>>2]=n;return d|0}function Le(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;m=i;n=i=i+63&-64;i=i+16|0;c[n+4>>2]=0;c[n>>2]=0;c[n+8>>2]=0;f=Xe(n,a,b,d,e,f,g,h,j,k,l)|0;g=c[n>>2]|0;if(!g){i=m;return f|0}gh(g);i=m;return f|0}function Me(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;q=i=i+63&-64;i=i+464|0;p=q+208|0;r=q;s=q+416|0;q=q+424|0;jb(p,b,d)|0;do if(f|0){d=p+32|0;n=d;m=c[n>>2]|0;n=c[n+4>>2]|0;b=oh(m|0,n|0,3)|0;b=b&63;o=ph(f|0,0,3)|0;o=lh(m|0,n|0,o|0,C|0)|0;c[d>>2]=o;c[d+4>>2]=C;d=64-b|0;b=p+40+b|0;if(d>>>0>f>>>0){qh(b|0,e|0,f|0)|0;break}qh(b|0,e|0,d|0)|0;j=p+40|0;xd(p,j);b=e+d|0;e=kh(f|0,0,d|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&e>>>0>63){do{xd(p,b);b=b+64|0;e=lh(e|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&e>>>0>63);d=e}else d=e;qh(j|0,b|0,d|0)|0}while(0);if(!h){i=t;return}f=s+3|0;j=s+2|0;k=s+1|0;l=r+32|0;m=r+40|0;n=0;o=0;do{o=o+1|0;a[f>>0]=o;a[j>>0]=o>>>8;a[k>>0]=o>>>16;a[s>>0]=o>>>24;qh(r|0,p|0,208)|0;e=l;d=c[e>>2]|0;e=c[e+4>>2]|0;b=oh(d|0,e|0,3)|0;b=b&63;e=lh(d|0,e|0,32,0)|0;d=l;c[d>>2]=e;c[d+4>>2]=C;d=64-b|0;b=r+40+b|0;if(d>>>0>4){e=c[s>>2]|0;a[b>>0]=e;a[b+1>>0]=e>>8;a[b+2>>0]=e>>16;a[b+3>>0]=e>>24}else{qh(b|0,s|0,d|0)|0;xd(r,m);b=s+d|0;e=kh(4,0,d|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&e>>>0>63){do{xd(r,b);b=b+64|0;e=lh(e|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&e>>>0>63);d=e}else d=e;qh(m|0,b|0,d|0)|0}lb(r,q)|0;e=h-n|0;qh(g+n|0,q|0,(e>>>0>32?32:e)|0)|0;n=o<<5}while(n>>>0<h>>>0);i=t;return}function Ne(){return 32}function Oe(){return 102}function Pe(){return 33163}function Qe(){return 524288}function Re(){return 16777216}function Se(){return 33554432}function Te(){return 1073741824}function Ue(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=i;n=i=i+63&-64;i=i+16|0;nh(a|0,0,b|0)|0;m=g|d;if(m>>>0>0|(m|0)==0&(f|b)>>>0>4294967295){if(!(c[8522]|0))d=34132;else d=c[(oa()|0)+64>>2]|0;c[d>>2]=27;n=-1;i=o;return n|0}g=k>>>0<0|(k|0)==0&j>>>0<32768;m=g?32768:j;k=g?0:k;a:do if(k>>>0<0|(k|0)==0&m>>>0<l>>>5>>>0){g=oh(m|0,k|0,6)|0;j=C;k=1;while(1){m=ph(1,0,k|0)|0;l=C;d=k+1|0;if(l>>>0>j>>>0|(l|0)==(j|0)&m>>>0>g>>>0){d=k;g=1;break a}if(d>>>0<63)k=d;else{g=1;break}}}else{j=l>>>11;g=1;while(1){l=ph(1,0,g|0)|0;p=C;d=g+1|0;if(p>>>0>0|(p|0)==0&l>>>0>j>>>0){d=g;break}if(d>>>0<63)g=d;else break}g=oh(m|0,k|0,2)|0;g=oh(g|0,C|0,d|0)|0;p=C;m=p>>>0>0|(p|0)==0&g>>>0>1073741823;g=m?1073741823:g;g=g>>>3}while(0);d=ph(1,0,d|0)|0;c[n+4>>2]=0;c[n>>2]=0;c[n+8>>2]=0;g=Xe(n,e,f,h,32,d,C,8,g,a,b)|0;d=c[n>>2]|0;if(d|0)gh(d);p=g;i=o;return p|0}function Ve(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;v=i=i+63&-64;i=i+112|0;t=v+72|0;u=v+12|0;l=b;m=l+102|0;do{a[l>>0]=0;l=l+1|0}while((l|0)<(m|0));if(g>>>0>0|(g|0)==0&f>>>0>4294967295){if(!(c[8522]|0))g=34132;else g=c[(oa()|0)+64>>2]|0;c[g>>2]=27;v=-1;i=w;return v|0}m=j>>>0<0|(j|0)==0&h>>>0<32768;n=m?32768:h;m=m?0:j;a:do if(m>>>0<0|(m|0)==0&n>>>0<k>>>5>>>0){h=oh(n|0,m|0,6)|0;l=C;m=1;while(1){k=ph(1,0,m|0)|0;n=C;g=m+1|0;if(n>>>0>l>>>0|(n|0)==(l|0)&k>>>0>h>>>0){g=m;l=1;break a}if(g>>>0<63)m=g;else{l=1;break}}}else{l=k>>>11;h=1;while(1){k=ph(1,0,h|0)|0;j=C;g=h+1|0;if(j>>>0>0|(j|0)==0&k>>>0>l>>>0){g=h;break}if(g>>>0<63)h=g;else break}l=oh(n|0,m|0,2)|0;l=oh(l|0,C|0,g|0)|0;k=C;n=k>>>0>0|(k|0)==0&l>>>0>1073741823;l=n?1073741823:l;l=l>>>3}while(0);h=0;do{a[t+h>>0]=ma(0)|0;h=h+1|0}while((h|0)!=32);b:do if((((((((g>>>0<=63?(k=ph(l|0,0,3)|0,n=C,!(n>>>0>0|(n|0)==0&k>>>0>1073741823)):0)?(a[u>>0]=36,a[u+1>>0]=55,a[u+2>>0]=36,a[u+3>>0]=a[33098+g>>0]|0,a[u+4>>0]=54,k=u+5|0,o=u+9|0,a[k>>0]=46,a[k+1>>0]=46,a[k+2>>0]=46,a[k+3>>0]=46,o|0):0)?(p=o,r=u+58|0,(r|0)!=(p|0)):0)?(q=r-p|0,a[o>>0]=a[33098+(l&63)>>0]|0,(q|0)!=1):0)?(a[u+10>>0]=a[33098+(l>>>6&63)>>0]|0,(q|0)!=2):0)?(a[u+11>>0]=a[33098+(l>>>12&63)>>0]|0,(q|0)!=3):0)?(a[u+12>>0]=a[33098+(l>>>18&63)>>0]|0,(q|0)!=4):0)?(s=u+14|0,a[u+13>>0]=a[33098+(l>>>24)>>0]|0,s|0):0){o=s;n=r-s|0;g=0;while(1){if(g>>>0<32){k=0;h=0}else break;do{s=g;g=g+1|0;h=(d[t+s>>0]|0)<<k|h;k=k+8|0}while(g>>>0<32&k>>>0<24);l=n;m=o;j=0;while(1){if(!l)break b;s=m;m=m+1|0;a[s>>0]=a[33098+(h&63)>>0]|0;j=j+6|0;if(j>>>0>=k>>>0)break;else{h=h>>>6;l=l+-1|0}}s=(m|0)==0;n=(s?0:o-m|0)+n|0;if(s)break b;else o=m}if(o>>>0<(u+58|0)>>>0){a[o>>0]=0;l=v+4|0;c[l>>2]=0;c[v>>2]=0;m=v+8|0;c[m>>2]=0;g=(Je(v,e,f,u,b)|0)==0;h=c[v>>2]|0;if(h|0)gh(h);c[l>>2]=0;c[v>>2]=0;c[m>>2]=0;if(!g){v=0;i=w;return v|0}if(!(c[8522]|0))g=34132;else g=c[(oa()|0)+64>>2]|0;c[g>>2]=22;v=-1;i=w;return v|0}}while(0);if(!(c[8522]|0))g=34132;else g=c[(oa()|0)+64>>2]|0;c[g>>2]=22;v=-1;i=w;return v|0}function We(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;l=i=i+63&-64;i=i+128|0;m=l+12|0;a:do if(b&3){f=102;g=b;do{if(!(a[g>>0]|0)){j=5;break a}g=g+1|0;f=f+-1|0;h=(f|0)!=0}while(h&(g&3|0)!=0);if(h)j=5;else f=0}else{f=102;g=b;j=5}while(0);b:do if((j|0)==5)if(a[g>>0]|0){c:do if(f>>>0>3)while(1){k=c[g>>2]|0;if((k&-2139062144^-2139062144)&k+-16843009|0)break;g=g+4|0;f=f+-4|0;if(f>>>0<=3){j=10;break c}}else j=10;while(0);if((j|0)==10)if(!f){f=0;break}while(1){if(!(a[g>>0]|0))break b;g=g+1|0;f=f+-1|0;if(!f){f=0;break}}}while(0);if(((f|0?g:0)|0)!=(b+101|0)){m=-1;i=n;return m|0}j=l+4|0;c[j>>2]=0;c[l>>2]=0;k=l+8|0;c[k>>2]=0;g=m;h=g+102|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(h|0));f=(Je(l,d,e,b,m)|0)==0;g=c[l>>2]|0;if(g|0)gh(g);c[j>>2]=0;c[l>>2]=0;c[k>>2]=0;if(f){m=-1;i=n;return m|0}else{f=0;g=0}do{f=a[b+g>>0]^a[m+g>>0]|f;g=g+1|0}while((g|0)!=102);f=(((f&255)+511|0)>>>8&1)+-1|0;g=m;h=g+102|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(h|0));m=f;i=n;return m|0}function Xe(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;I=i;u=i=i+63&-64;i=i+16|0;H=wh(m|0,0,l|0,0)|0;G=C;if(G>>>0>0|(G|0)==0&H>>>0>1073741823){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=27;f=-1;i=I;return f|0}if(k>>>0>0|(k|0)==0&j>>>0>4294967295){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=27;f=-1;i=I;return f|0}F=lh(j|0,k|0,-1,-1)|0;if(k>>>0<0|(k|0)==0&j>>>0<2|((F&j|0)!=0|(C&k|0)!=0)){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=22;f=-1;i=I;return f|0}if((l|0)==0|(m|0)==0){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=22;f=-1;i=I;return f|0}if(!(l>>>0>16777215?1:(33554431/(m>>>0)|0)>>>0<l>>>0)?!(0<k>>>0|(0==(k|0)?(33554431/(l>>>0)|0)>>>0<j>>>0:0)):0){G=l<<7;H=_(G,m)|0;v=wh(G|0,0,j|0,k|0)|0;p=v+H|0;if(p>>>0<v>>>0){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=12;f=-1;i=I;return f|0}E=l<<8|64;s=p+E|0;if(s>>>0<E>>>0){if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=12;f=-1;i=I;return f|0}t=b+8|0;if((c[t>>2]|0)>>>0<s>>>0){p=c[b>>2]|0;if(p|0)gh(p);r=b+4|0;c[r>>2]=0;c[b>>2]=0;c[t>>2]=0;q=ih(u,s)|0;if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=q;if(!q)p=c[u>>2]|0;else{c[u>>2]=0;p=0}c[b>>2]=p;c[r>>2]=p;c[t>>2]=p|0?s:0;if(!p){f=-1;i=I;return f|0}}else p=c[b+4>>2]|0;E=p+H|0;D=E+v|0;Me(e,f,g,h,p,H);u=l<<5;b=D+(u<<2)|0;v=D+(l<<6<<2)|0;g=(u|0)==0;h=(j|0)==0&(k|0)==0;w=u&1073741792;x=(w|0)==0;z=G+-64|0;y=D+z|0;z=b+z|0;B=0;do{A=p+(_(G,B)|0)|0;if(!g){q=0;do{t=A+(q<<2)|0;c[D+(q<<2)>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;q=q+1|0}while((q|0)!=(u|0))}a:do if(!h){if(x){q=0;r=0;do{Ye(D,b,v,l);Ye(b,D,v,l);q=lh(q|0,r|0,2,0)|0;r=C}while(r>>>0<k>>>0|(r|0)==(k|0)&q>>>0<j>>>0)}else{s=0;t=0;do{q=wh(s|0,t|0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{c[q+(r<<2)>>2]=c[D+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(D,b,v,l);q=wh(s|1|0,t|0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{c[q+(r<<2)>>2]=c[b+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(b,D,v,l);s=lh(s|0,t|0,2,0)|0;t=C}while(t>>>0<k>>>0|(t|0)==(k|0)&s>>>0<j>>>0)}if(x){q=0;r=0;while(1){Ye(D,b,v,l);Ye(b,D,v,l);q=lh(q|0,r|0,2,0)|0;r=C;if(!(r>>>0<k>>>0|(r|0)==(k|0)&q>>>0<j>>>0))break a}}else{s=0;t=0}do{q=wh(c[y>>2]&F|0,0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{J=D+(r<<2)|0;c[J>>2]=c[J>>2]^c[q+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(D,b,v,l);q=wh(c[z>>2]&F|0,0,u|0,0)|0;q=E+(q<<2)|0;r=0;do{J=b+(r<<2)|0;c[J>>2]=c[J>>2]^c[q+(r<<2)>>2];r=r+1|0}while((r|0)!=(w|0));Ye(b,D,v,l);s=lh(s|0,t|0,2,0)|0;t=C}while(t>>>0<k>>>0|(t|0)==(k|0)&s>>>0<j>>>0)}while(0);if(!g){q=0;do{J=A+(q<<2)|0;t=c[D+(q<<2)>>2]|0;a[J>>0]=t;a[J+1>>0]=t>>8;a[J+2>>0]=t>>16;a[J+3>>0]=t>>24;q=q+1|0}while((q|0)!=(u|0))}B=B+1|0}while((B|0)!=(m|0));Me(e,f,p,H,n,o);J=0;i=I;return J|0}if(!(c[8522]|0))p=34132;else p=c[(oa()|0)+64>>2]|0;c[p>>2]=12;J=-1;i=I;return J|0}function Ye(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;w=e<<1;m=a+((e<<5)+-16<<2)|0;o=c[m>>2]|0;c[d>>2]=o;q=c[m+4>>2]|0;L=d+4|0;c[L>>2]=q;t=c[m+8>>2]|0;x=d+8|0;c[x>>2]=t;u=c[m+12>>2]|0;y=d+12|0;c[y>>2]=u;s=c[m+16>>2]|0;z=d+16|0;c[z>>2]=s;r=c[m+20>>2]|0;A=d+20|0;c[A>>2]=r;p=c[m+24>>2]|0;B=d+24|0;c[B>>2]=p;n=c[m+28>>2]|0;C=d+28|0;c[C>>2]=n;l=c[m+32>>2]|0;D=d+32|0;c[D>>2]=l;j=c[m+36>>2]|0;E=d+36|0;c[E>>2]=j;h=c[m+40>>2]|0;F=d+40|0;c[F>>2]=h;f=c[m+44>>2]|0;G=d+44|0;c[G>>2]=f;g=c[m+48>>2]|0;H=d+48|0;c[H>>2]=g;i=c[m+52>>2]|0;I=d+52|0;c[I>>2]=i;k=c[m+56>>2]|0;J=d+56|0;c[J>>2]=k;m=c[m+60>>2]|0;K=d+60|0;c[K>>2]=m;if(!w)return;v=e<<4;e=0;while(1){M=e<<4;N=a+(M<<2)|0;c[d>>2]=o^c[N>>2];c[L>>2]=q^c[N+4>>2];c[x>>2]=t^c[N+8>>2];c[y>>2]=u^c[N+12>>2];c[z>>2]=s^c[N+16>>2];c[A>>2]=r^c[N+20>>2];c[B>>2]=p^c[N+24>>2];c[C>>2]=n^c[N+28>>2];c[D>>2]=l^c[N+32>>2];c[E>>2]=j^c[N+36>>2];c[F>>2]=h^c[N+40>>2];c[G>>2]=f^c[N+44>>2];c[H>>2]=g^c[N+48>>2];c[I>>2]=i^c[N+52>>2];c[J>>2]=k^c[N+56>>2];c[K>>2]=m^c[N+60>>2];Ze(d);u=e<<3;t=b+(u<<2)|0;c[t>>2]=c[d>>2];c[t+4>>2]=c[L>>2];c[t+8>>2]=c[x>>2];c[t+12>>2]=c[y>>2];c[t+16>>2]=c[z>>2];c[t+20>>2]=c[A>>2];c[t+24>>2]=c[B>>2];c[t+28>>2]=c[C>>2];c[t+32>>2]=c[D>>2];c[t+36>>2]=c[E>>2];c[t+40>>2]=c[F>>2];c[t+44>>2]=c[G>>2];c[t+48>>2]=c[H>>2];c[t+52>>2]=c[I>>2];c[t+56>>2]=c[J>>2];c[t+60>>2]=c[K>>2];t=a+((M|16)<<2)|0;c[d>>2]=c[d>>2]^c[t>>2];c[L>>2]=c[L>>2]^c[t+4>>2];c[x>>2]=c[x>>2]^c[t+8>>2];c[y>>2]=c[y>>2]^c[t+12>>2];c[z>>2]=c[z>>2]^c[t+16>>2];c[A>>2]=c[A>>2]^c[t+20>>2];c[B>>2]=c[B>>2]^c[t+24>>2];c[C>>2]=c[C>>2]^c[t+28>>2];c[D>>2]=c[D>>2]^c[t+32>>2];c[E>>2]=c[E>>2]^c[t+36>>2];c[F>>2]=c[F>>2]^c[t+40>>2];c[G>>2]=c[G>>2]^c[t+44>>2];c[H>>2]=c[H>>2]^c[t+48>>2];c[I>>2]=c[I>>2]^c[t+52>>2];c[J>>2]=c[J>>2]^c[t+56>>2];c[K>>2]=c[K>>2]^c[t+60>>2];Ze(d);u=b+(u+v<<2)|0;c[u>>2]=c[d>>2];c[u+4>>2]=c[L>>2];c[u+8>>2]=c[x>>2];c[u+12>>2]=c[y>>2];c[u+16>>2]=c[z>>2];c[u+20>>2]=c[A>>2];c[u+24>>2]=c[B>>2];c[u+28>>2]=c[C>>2];c[u+32>>2]=c[D>>2];c[u+36>>2]=c[E>>2];c[u+40>>2]=c[F>>2];c[u+44>>2]=c[G>>2];c[u+48>>2]=c[H>>2];c[u+52>>2]=c[I>>2];c[u+56>>2]=c[J>>2];c[u+60>>2]=c[K>>2];e=e+2|0;if(e>>>0>=w>>>0)break;f=c[G>>2]|0;g=c[H>>2]|0;i=c[I>>2]|0;k=c[J>>2]|0;m=c[K>>2]|0;o=c[d>>2]|0;q=c[L>>2]|0;t=c[x>>2]|0;u=c[y>>2]|0;s=c[z>>2]|0;r=c[A>>2]|0;p=c[B>>2]|0;n=c[C>>2]|0;l=c[D>>2]|0;j=c[E>>2]|0;h=c[F>>2]|0}return}function Ze(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;b=a+4|0;z=a+8|0;A=a+12|0;B=a+16|0;F=a+20|0;f=a+24|0;k=a+28|0;n=a+32|0;s=a+36|0;t=a+40|0;u=a+44|0;v=a+48|0;w=a+52|0;x=a+56|0;y=a+60|0;d=c[F>>2]|0;e=c[b>>2]|0;g=c[s>>2]|0;h=c[w>>2]|0;i=c[t>>2]|0;j=c[f>>2]|0;l=c[x>>2]|0;m=c[z>>2]|0;o=c[y>>2]|0;p=c[u>>2]|0;q=c[A>>2]|0;r=c[k>>2]|0;C=c[a>>2]|0;D=c[v>>2]|0;E=c[B>>2]|0;G=c[n>>2]|0;H=0;do{R=D+C|0;R=(R<<7|R>>>25)^E;O=R+C|0;O=(O<<9|O>>>23)^G;L=O+R|0;L=(L<<13|L>>>19)^D;U=L+O|0;U=(U<<18|U>>>14)^C;N=e+d|0;N=(N<<7|N>>>25)^g;K=N+d|0;K=(K<<9|K>>>23)^h;X=K+N|0;X=(X<<13|X>>>19)^e;Q=X+K|0;Q=(Q<<18|Q>>>14)^d;J=j+i|0;J=(J<<7|J>>>25)^l;W=J+i|0;W=(W<<9|W>>>23)^m;T=W+J|0;T=(T<<13|T>>>19)^j;M=T+W|0;M=(M<<18|M>>>14)^i;V=p+o|0;V=(V<<7|V>>>25)^q;S=V+o|0;S=(S<<9|S>>>23)^r;P=S+V|0;P=(P<<13|P>>>19)^p;I=P+S|0;I=(I<<18|I>>>14)^o;Y=V+U|0;e=(Y<<7|Y>>>25)^X;X=e+U|0;m=(X<<9|X>>>23)^W;W=m+e|0;q=(W<<13|W>>>19)^V;V=q+m|0;C=(V<<18|V>>>14)^U;U=R+Q|0;j=(U<<7|U>>>25)^T;T=j+Q|0;r=(T<<9|T>>>23)^S;S=r+j|0;E=(S<<13|S>>>19)^R;R=E+r|0;d=(R<<18|R>>>14)^Q;Q=N+M|0;p=(Q<<7|Q>>>25)^P;P=p+M|0;G=(P<<9|P>>>23)^O;O=G+p|0;g=(O<<13|O>>>19)^N;N=g+G|0;i=(N<<18|N>>>14)^M;M=J+I|0;D=(M<<7|M>>>25)^L;L=D+I|0;h=(L<<9|L>>>23)^K;K=h+D|0;l=(K<<13|K>>>19)^J;J=l+h|0;o=(J<<18|J>>>14)^I;H=H+2|0}while(H>>>0<8);c[a>>2]=(c[a>>2]|0)+C;c[b>>2]=(c[b>>2]|0)+e;c[z>>2]=(c[z>>2]|0)+m;c[A>>2]=(c[A>>2]|0)+q;c[B>>2]=(c[B>>2]|0)+E;c[F>>2]=(c[F>>2]|0)+d;c[f>>2]=(c[f>>2]|0)+j;c[k>>2]=(c[k>>2]|0)+r;c[n>>2]=(c[n>>2]|0)+G;c[s>>2]=(c[s>>2]|0)+g;c[t>>2]=(c[t>>2]|0)+i;c[u>>2]=(c[u>>2]|0)+p;c[v>>2]=(c[v>>2]|0)+D;c[w>>2]=(c[w>>2]|0)+h;c[x>>2]=(c[x>>2]|0)+l;c[y>>2]=(c[y>>2]|0)+o;return}function _e(){return 33167}function $e(a,b){a=a|0;b=b|0;return ef(a,b)|0}function af(a,b,c){a=a|0;b=b|0;c=c|0;return df(a,b,c)|0}function bf(){return 32}function cf(){return 32}function df(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0;Ua=i;Oa=i=i+63&-64;i=i+320|0;Ma=Oa+280|0;Pa=Oa+240|0;Qa=Oa+200|0;Sa=Oa+160|0;Ra=Oa+120|0;Ta=Oa+80|0;Na=Oa+40|0;h=Ma;g=h+32|0;do{a[h>>0]=a[e>>0]|0;h=h+1|0;e=e+1|0}while((h|0)<(g|0));a[Ma>>0]=(d[Ma>>0]|0)&248;Ba=Ma+31|0;a[Ba>>0]=(d[Ba>>0]|0)&63|64;sc(Pa,f);c[Qa>>2]=1;Ba=Qa+4|0;h=Ba;g=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));h=Sa;g=h+40|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));s=c[Pa>>2]|0;q=c[Pa+4>>2]|0;o=c[Pa+8>>2]|0;e=c[Pa+12>>2]|0;f=c[Pa+16>>2]|0;j=c[Pa+20>>2]|0;k=c[Pa+24>>2]|0;l=c[Pa+28>>2]|0;m=c[Pa+32>>2]|0;n=c[Pa+36>>2]|0;c[Ra>>2]=s;Ca=Ra+4|0;c[Ca>>2]=q;Da=Ra+8|0;c[Da>>2]=o;Ea=Ra+12|0;c[Ea>>2]=e;Fa=Ra+16|0;c[Fa>>2]=f;Ga=Ra+20|0;c[Ga>>2]=j;Ha=Ra+24|0;c[Ha>>2]=k;Ia=Ra+28|0;c[Ia>>2]=l;Ja=Ra+32|0;c[Ja>>2]=m;Ka=Ra+36|0;c[Ka>>2]=n;c[Ta>>2]=1;La=Ta+4|0;h=La;g=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));M=Qa+8|0;N=Qa+12|0;O=Qa+16|0;P=Qa+20|0;Q=Qa+24|0;R=Qa+28|0;S=Qa+32|0;T=Qa+36|0;U=Sa+4|0;V=Sa+8|0;W=Sa+12|0;X=Sa+16|0;Y=Sa+20|0;Z=Sa+24|0;_=Sa+28|0;$=Sa+32|0;aa=Sa+36|0;ba=Ta+8|0;ca=Ta+12|0;da=Ta+16|0;ea=Ta+20|0;fa=Ta+24|0;ga=Ta+28|0;ha=Ta+32|0;ia=Ta+36|0;ja=Oa+4|0;ka=Oa+8|0;la=Oa+12|0;ma=Oa+16|0;na=Oa+20|0;oa=Oa+24|0;pa=Oa+28|0;qa=Oa+32|0;ra=Oa+36|0;sa=Na+4|0;ta=Na+8|0;ua=Na+12|0;va=Na+16|0;wa=Na+20|0;xa=Na+24|0;ya=Na+28|0;za=Na+32|0;Aa=Na+36|0;L=0;K=0;J=0;I=0;H=0;G=0;F=0;u=0;v=0;w=0;x=0;y=0;z=0;A=0;B=0;D=0;E=1;t=0;r=0;h=o;o=254;p=0;while(1){g=(d[Ma+((o|0)/8|0)>>0]|0)>>>(o&7)&1;jb=0-(g^p)|0;Ya=(s^E)&jb;Xa=(q^t)&jb;Wa=(h^r)&jb;Va=(e^L)&jb;hb=(f^K)&jb;ib=(j^J)&jb;p=(k^I)&jb;ab=(l^H)&jb;eb=(m^G)&jb;gb=(n^F)&jb;c[Qa>>2]=Ya^E;c[Ba>>2]=Xa^t;c[M>>2]=Wa^r;c[N>>2]=Va^L;c[O>>2]=hb^K;c[P>>2]=ib^J;c[Q>>2]=p^I;c[R>>2]=ab^H;c[S>>2]=eb^G;c[T>>2]=gb^F;Ya=Ya^s;c[Ra>>2]=Ya;Xa=Xa^q;c[Ca>>2]=Xa;Wa=Wa^h;c[Da>>2]=Wa;Va=Va^e;c[Ea>>2]=Va;I=hb^f;c[Fa>>2]=I;E=ib^j;c[Ga>>2]=E;p=p^k;c[Ha>>2]=p;l=ab^l;c[Ia>>2]=l;j=eb^m;c[Ja>>2]=j;f=gb^n;c[Ka>>2]=f;K=c[aa>>2]|0;t=c[Ta>>2]|0;gb=c[La>>2]|0;eb=c[ba>>2]|0;q=c[ca>>2]|0;r=c[da>>2]|0;ab=c[ea>>2]|0;F=c[fa>>2]|0;H=c[ga>>2]|0;J=c[ha>>2]|0;L=c[ia>>2]|0;ib=(t^u)&jb;hb=(gb^v)&jb;fb=(eb^w)&jb;db=(q^x)&jb;cb=(r^y)&jb;bb=(ab^z)&jb;$a=(F^A)&jb;_a=(H^B)&jb;Za=(J^D)&jb;n=(L^K)&jb;e=ib^u;c[Sa>>2]=e;h=hb^v;c[U>>2]=h;k=fb^w;c[V>>2]=k;m=db^x;c[W>>2]=m;x=cb^y;c[X>>2]=x;s=bb^z;c[Y>>2]=s;w=$a^A;c[Z>>2]=w;A=_a^B;c[_>>2]=A;G=Za^D;c[$>>2]=G;K=n^K;c[aa>>2]=K;t=ib^t;c[Ta>>2]=t;v=hb^gb;c[La>>2]=v;B=fb^eb;c[ba>>2]=B;q=db^q;c[ca>>2]=q;r=cb^r;c[da>>2]=r;D=bb^ab;c[ea>>2]=D;F=$a^F;c[fa>>2]=F;H=_a^H;c[ga>>2]=H;J=Za^J;c[ha>>2]=J;L=n^L;c[ia>>2]=L;c[Na>>2]=Ya-t;c[sa>>2]=Xa-v;c[ta>>2]=Wa-B;c[ua>>2]=Va-q;c[va>>2]=I-r;c[wa>>2]=E-D;c[xa>>2]=p-F;c[ya>>2]=l-H;c[za>>2]=j-J;c[Aa>>2]=f-L;f=c[Qa>>2]|0;j=c[Ba>>2]|0;l=c[M>>2]|0;n=c[N>>2]|0;p=c[O>>2]|0;u=c[P>>2]|0;y=c[Q>>2]|0;E=c[R>>2]|0;I=c[S>>2]|0;z=c[T>>2]|0;c[Oa>>2]=f-e;c[ja>>2]=j-h;c[ka>>2]=l-k;c[la>>2]=n-m;c[ma>>2]=p-x;c[na>>2]=u-s;c[oa>>2]=y-w;c[pa>>2]=E-A;c[qa>>2]=I-G;c[ra>>2]=z-K;c[Qa>>2]=e+f;c[Ba>>2]=h+j;c[M>>2]=k+l;c[N>>2]=m+n;c[O>>2]=x+p;c[P>>2]=s+u;c[Q>>2]=w+y;c[R>>2]=A+E;c[S>>2]=G+I;c[T>>2]=K+z;v=v+(c[Ca>>2]|0)|0;B=B+(c[Da>>2]|0)|0;q=q+(c[Ea>>2]|0)|0;r=r+(c[Fa>>2]|0)|0;D=D+(c[Ga>>2]|0)|0;F=F+(c[Ha>>2]|0)|0;H=H+(c[Ia>>2]|0)|0;J=J+(c[Ja>>2]|0)|0;L=L+(c[Ka>>2]|0)|0;c[Sa>>2]=t+(c[Ra>>2]|0);c[U>>2]=v;c[V>>2]=B;c[W>>2]=q;c[X>>2]=r;c[Y>>2]=D;c[Z>>2]=F;c[_>>2]=H;c[$>>2]=J;c[aa>>2]=L;uc(Ta,Na,Qa);uc(Sa,Sa,Oa);vc(Na,Oa);vc(Oa,Qa);L=c[Ta>>2]|0;J=c[La>>2]|0;H=c[ba>>2]|0;F=c[ca>>2]|0;D=c[da>>2]|0;r=c[ea>>2]|0;q=c[fa>>2]|0;B=c[ga>>2]|0;v=c[ha>>2]|0;t=c[ia>>2]|0;z=c[Sa>>2]|0;K=c[U>>2]|0;I=c[V>>2]|0;G=c[W>>2]|0;E=c[X>>2]|0;A=c[Y>>2]|0;y=c[Z>>2]|0;w=c[_>>2]|0;u=c[$>>2]|0;s=c[aa>>2]|0;c[Ra>>2]=z+L;c[Ca>>2]=K+J;c[Da>>2]=I+H;c[Ea>>2]=G+F;c[Fa>>2]=E+D;c[Ga>>2]=A+r;c[Ha>>2]=y+q;c[Ia>>2]=w+B;c[Ja>>2]=u+v;c[Ka>>2]=s+t;c[Sa>>2]=L-z;c[U>>2]=J-K;c[V>>2]=H-I;c[W>>2]=F-G;c[X>>2]=D-E;c[Y>>2]=r-A;c[Z>>2]=q-y;c[_>>2]=B-w;c[$>>2]=v-u;c[aa>>2]=t-s;uc(Qa,Oa,Na);s=(c[Oa>>2]|0)-(c[Na>>2]|0)|0;t=(c[ja>>2]|0)-(c[sa>>2]|0)|0;u=(c[ka>>2]|0)-(c[ta>>2]|0)|0;v=(c[la>>2]|0)-(c[ua>>2]|0)|0;w=(c[ma>>2]|0)-(c[va>>2]|0)|0;B=(c[na>>2]|0)-(c[wa>>2]|0)|0;y=(c[oa>>2]|0)-(c[xa>>2]|0)|0;q=(c[pa>>2]|0)-(c[ya>>2]|0)|0;A=(c[qa>>2]|0)-(c[za>>2]|0)|0;r=(c[ra>>2]|0)-(c[Aa>>2]|0)|0;c[Oa>>2]=s;c[ja>>2]=t;c[ka>>2]=u;c[la>>2]=v;c[ma>>2]=w;c[na>>2]=B;c[oa>>2]=y;c[pa>>2]=q;c[qa>>2]=A;c[ra>>2]=r;vc(Sa,Sa);s=wh(s|0,((s|0)<0)<<31>>31|0,121666,0)|0;E=C;t=wh(t|0,((t|0)<0)<<31>>31|0,121666,0)|0;D=C;u=wh(u|0,((u|0)<0)<<31>>31|0,121666,0)|0;G=C;v=wh(v|0,((v|0)<0)<<31>>31|0,121666,0)|0;F=C;w=wh(w|0,((w|0)<0)<<31>>31|0,121666,0)|0;I=C;B=wh(B|0,((B|0)<0)<<31>>31|0,121666,0)|0;H=C;y=wh(y|0,((y|0)<0)<<31>>31|0,121666,0)|0;K=C;q=wh(q|0,((q|0)<0)<<31>>31|0,121666,0)|0;J=C;A=wh(A|0,((A|0)<0)<<31>>31|0,121666,0)|0;z=C;r=wh(r|0,((r|0)<0)<<31>>31|0,121666,0)|0;L=C;p=lh(r|0,L|0,16777216,0)|0;p=mh(p|0,C|0,25)|0;x=C;n=wh(p|0,x|0,19,0)|0;E=lh(n|0,C|0,s|0,E|0)|0;s=C;x=ph(p|0,x|0,25)|0;x=kh(r|0,L|0,x|0,C|0)|0;L=C;r=lh(t|0,D|0,16777216,0)|0;r=mh(r|0,C|0,25)|0;p=C;G=lh(r|0,p|0,u|0,G|0)|0;u=C;p=ph(r|0,p|0,25)|0;p=kh(t|0,D|0,p|0,C|0)|0;D=C;t=lh(v|0,F|0,16777216,0)|0;t=mh(t|0,C|0,25)|0;r=C;I=lh(t|0,r|0,w|0,I|0)|0;w=C;r=ph(t|0,r|0,25)|0;r=kh(v|0,F|0,r|0,C|0)|0;F=C;v=lh(B|0,H|0,16777216,0)|0;v=mh(v|0,C|0,25)|0;t=C;K=lh(v|0,t|0,y|0,K|0)|0;y=C;t=ph(v|0,t|0,25)|0;t=kh(B|0,H|0,t|0,C|0)|0;H=C;B=lh(q|0,J|0,16777216,0)|0;B=mh(B|0,C|0,25)|0;v=C;z=lh(B|0,v|0,A|0,z|0)|0;A=C;v=ph(B|0,v|0,25)|0;v=kh(q|0,J|0,v|0,C|0)|0;J=C;q=lh(E|0,s|0,33554432,0)|0;q=mh(q|0,C|0,26)|0;B=C;D=lh(p|0,D|0,q|0,B|0)|0;B=ph(q|0,B|0,26)|0;B=kh(E|0,s|0,B|0,C|0)|0;s=lh(G|0,u|0,33554432,0)|0;s=mh(s|0,C|0,26)|0;E=C;F=lh(r|0,F|0,s|0,E|0)|0;E=ph(s|0,E|0,26)|0;E=kh(G|0,u|0,E|0,C|0)|0;u=lh(I|0,w|0,33554432,0)|0;u=mh(u|0,C|0,26)|0;G=C;H=lh(t|0,H|0,u|0,G|0)|0;G=ph(u|0,G|0,26)|0;G=kh(I|0,w|0,G|0,C|0)|0;w=lh(K|0,y|0,33554432,0)|0;w=mh(w|0,C|0,26)|0;I=C;J=lh(v|0,J|0,w|0,I|0)|0;I=ph(w|0,I|0,26)|0;I=kh(K|0,y|0,I|0,C|0)|0;y=lh(z|0,A|0,33554432,0)|0;y=mh(y|0,C|0,26)|0;K=C;L=lh(x|0,L|0,y|0,K|0)|0;K=ph(y|0,K|0,26)|0;K=kh(z|0,A|0,K|0,C|0)|0;c[Ta>>2]=B;c[La>>2]=D;c[ba>>2]=E;c[ca>>2]=F;c[da>>2]=G;c[ea>>2]=H;c[fa>>2]=I;c[ga>>2]=J;c[ha>>2]=K;c[ia>>2]=L;vc(Ra,Ra);D=D+(c[sa>>2]|0)|0;E=E+(c[ta>>2]|0)|0;F=F+(c[ua>>2]|0)|0;G=G+(c[va>>2]|0)|0;H=H+(c[wa>>2]|0)|0;I=I+(c[xa>>2]|0)|0;J=J+(c[ya>>2]|0)|0;K=K+(c[za>>2]|0)|0;L=L+(c[Aa>>2]|0)|0;c[Na>>2]=B+(c[Na>>2]|0);c[sa>>2]=D;c[ta>>2]=E;c[ua>>2]=F;c[va>>2]=G;c[wa>>2]=H;c[xa>>2]=I;c[ya>>2]=J;c[za>>2]=K;c[Aa>>2]=L;uc(Ta,Pa,Sa);uc(Sa,Oa,Na);if((o|0)<=0)break;L=c[N>>2]|0;e=c[Ea>>2]|0;K=c[O>>2]|0;f=c[Fa>>2]|0;J=c[P>>2]|0;j=c[Ga>>2]|0;I=c[Q>>2]|0;k=c[Ha>>2]|0;H=c[R>>2]|0;l=c[Ia>>2]|0;G=c[S>>2]|0;m=c[Ja>>2]|0;F=c[T>>2]|0;n=c[Ka>>2]|0;u=c[Sa>>2]|0;v=c[U>>2]|0;w=c[V>>2]|0;x=c[W>>2]|0;y=c[X>>2]|0;z=c[Y>>2]|0;A=c[Z>>2]|0;B=c[_>>2]|0;D=c[$>>2]|0;E=c[Qa>>2]|0;s=c[Ra>>2]|0;t=c[Ba>>2]|0;q=c[Ca>>2]|0;r=c[M>>2]|0;h=c[Da>>2]|0;o=o+-1|0;p=g}Na=c[Qa>>2]|0;gb=c[Ba>>2]|0;cb=c[M>>2]|0;_a=c[N>>2]|0;Wa=c[O>>2]|0;hb=c[P>>2]|0;db=c[Q>>2]|0;$a=c[R>>2]|0;Xa=c[S>>2]|0;Pa=c[T>>2]|0;Oa=0-g|0;ib=(c[Ca>>2]^gb)&Oa;eb=(c[Da>>2]^cb)&Oa;ab=(c[Ea>>2]^_a)&Oa;Ya=(c[Fa>>2]^Wa)&Oa;jb=(c[Ga>>2]^hb)&Oa;fb=(c[Ha>>2]^db)&Oa;bb=(c[Ia>>2]^$a)&Oa;Za=(c[Ja>>2]^Xa)&Oa;Va=(c[Ka>>2]^Pa)&Oa;c[Qa>>2]=(c[Ra>>2]^Na)&Oa^Na;c[Ba>>2]=ib^gb;c[M>>2]=eb^cb;c[N>>2]=ab^_a;c[O>>2]=Ya^Wa;c[P>>2]=jb^hb;c[Q>>2]=fb^db;c[R>>2]=bb^$a;c[S>>2]=Za^Xa;c[T>>2]=Va^Pa;Pa=c[Sa>>2]|0;Va=c[U>>2]|0;Xa=c[V>>2]|0;Za=c[W>>2]|0;$a=c[X>>2]|0;bb=c[Y>>2]|0;db=c[Z>>2]|0;fb=c[_>>2]|0;hb=c[$>>2]|0;jb=c[aa>>2]|0;Ra=(c[La>>2]^Va)&Oa;Wa=(c[ba>>2]^Xa)&Oa;Ya=(c[ca>>2]^Za)&Oa;_a=(c[da>>2]^$a)&Oa;ab=(c[ea>>2]^bb)&Oa;cb=(c[fa>>2]^db)&Oa;eb=(c[ga>>2]^fb)&Oa;gb=(c[ha>>2]^hb)&Oa;ib=(c[ia>>2]^jb)&Oa;c[Sa>>2]=(c[Ta>>2]^Pa)&Oa^Pa;c[U>>2]=Ra^Va;c[V>>2]=Wa^Xa;c[W>>2]=Ya^Za;c[X>>2]=_a^$a;c[Y>>2]=ab^bb;c[Z>>2]=cb^db;c[_>>2]=eb^fb;c[$>>2]=gb^hb;c[aa>>2]=ib^jb;wc(Sa,Sa);uc(Qa,Qa,Sa);tc(b,Qa);i=Ua;return 0-((((a[b+31>>0]|(a[b+30>>0]|(a[b+29>>0]|(a[b+28>>0]|(a[b+27>>0]|(a[b+26>>0]|(a[b+25>>0]|(a[b+24>>0]|(a[b+23>>0]|(a[b+22>>0]|(a[b+21>>0]|(a[b+20>>0]|(a[b+19>>0]|(a[b+18>>0]|(a[b+17>>0]|(a[b+16>>0]|(a[b+15>>0]|(a[b+14>>0]|(a[b+13>>0]|(a[b+12>>0]|(a[b+11>>0]|(a[b+10>>0]|(a[b+9>>0]|(a[b+8>>0]|(a[b+7>>0]|(a[b+6>>0]|(a[b+5>>0]|(a[b+4>>0]|(a[b+3>>0]|(a[b+2>>0]|(a[b+1>>0]|a[b>>0])))))))))))))))))))))))))))))))&255)+511|0)>>>8&1)|0}function ef(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;j=i=i+63&-64;i=i+320|0;k=j+240|0;l=j+200|0;h=j+280|0;g=j+40|0;m=h;f=m+32|0;do{a[m>>0]=a[e>>0]|0;m=m+1|0;e=e+1|0}while((m|0)<(f|0));a[h>>0]=(d[h>>0]|0)&248;D=h+31|0;a[D>>0]=(d[D>>0]|0)&63|64;Cc(g,h);D=c[g+80>>2]|0;B=c[g+84>>2]|0;z=c[g+88>>2]|0;x=c[g+92>>2]|0;v=c[g+96>>2]|0;t=c[g+100>>2]|0;r=c[g+104>>2]|0;p=c[g+108>>2]|0;e=c[g+112>>2]|0;h=c[g+116>>2]|0;C=c[g+40>>2]|0;A=c[g+44>>2]|0;y=c[g+48>>2]|0;w=c[g+52>>2]|0;u=c[g+56>>2]|0;s=c[g+60>>2]|0;q=c[g+64>>2]|0;o=c[g+68>>2]|0;f=c[g+72>>2]|0;m=c[g+76>>2]|0;c[k>>2]=C+D;c[k+4>>2]=A+B;c[k+8>>2]=y+z;c[k+12>>2]=w+x;c[k+16>>2]=u+v;c[k+20>>2]=s+t;c[k+24>>2]=q+r;c[k+28>>2]=o+p;c[k+32>>2]=f+e;c[k+36>>2]=m+h;c[l>>2]=D-C;c[l+4>>2]=B-A;c[l+8>>2]=z-y;c[l+12>>2]=x-w;c[l+16>>2]=v-u;c[l+20>>2]=t-s;c[l+24>>2]=r-q;c[l+28>>2]=p-o;c[l+32>>2]=e-f;c[l+36>>2]=h-m;wc(l,l);uc(j,k,l);tc(b,j);i=n;return 0}function ff(){return 32}function gf(){return 32}function hf(){return 32}function jf(){return 24}function kf(){return 32}function lf(){return 16}function mf(){return 16}function nf(){return 33178}function of(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return zf(a,b,c,d,e,f)|0}function pf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Af(a,b,c,d,e,f)|0}function qf(b,f,g,h,j,k,l){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=i;t=i=i+63&-64;i=i+352|0;s=t;r=t+256|0;t=t+320|0;Fc(t,k,l,0)|0;l=b;m=g;if(b>>>0>=g>>>0?0<j>>>0|0==(j|0)&(l-m|0)>>>0<h>>>0:0)n=5;else if(g>>>0>=b>>>0?0<j>>>0|0==(j|0)&(m-l|0)>>>0<h>>>0:0)n=5;if((n|0)==5){rh(b|0,g|0,h|0)|0;g=b};c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;c[r+16>>2]=0;c[r+20>>2]=0;c[r+24>>2]=0;c[r+28>>2]=0;o=j>>>0>0|(j|0)==0&h>>>0>32;p=o?32:h;q=o?0:j;l=(p|0)==0&(q|0)==0;if(!l){n=j>>>0<0|(j|0)==0&h>>>0<32;n=lh((n?h:32)|0,(n?j:0)|0,-1,0)|0;qh(r+32|0,g|0,n+1|0)|0}m=lh(p|0,q|0,32,0)|0;n=k+16|0;Wg(r,r,m,C,n,0,0,t)|0;c[s>>2]=c[r>>2]&67108863;k=r+3|0;c[s+4>>2]=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)>>>2&67108611;k=r+6|0;c[s+8>>2]=(e[k>>1]|e[k+2>>1]<<16)>>>4&67092735;k=r+9|0;c[s+12>>2]=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)>>>6&66076671;c[s+16>>2]=(c[r+12>>2]|0)>>>8&1048575;k=s+20|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[s+40>>2]=c[r+16>>2];c[s+44>>2]=c[r+20>>2];c[s+48>>2]=c[r+24>>2];c[s+52>>2]=c[r+28>>2];k=s+56|0;c[k>>2]=0;c[k+4>>2]=0;a[s+80>>0]=0;if(!l){k=j>>>0<0|(j|0)==0&h>>>0<32;k=lh((k?h:32)|0,(k?j:0)|0,-1,0)|0;qh(b|0,r+32|0,k+1|0)|0}l=r;m=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));if(!o){Xd(s,b,h,j);Zd(s,f);i=u;return 0}r=kh(h|0,j|0,p|0,q|0)|0;Wg(b+p|0,g+p|0,r,C,n,1,0,t)|0;Xd(s,b,h,j);Zd(s,f);i=u;return 0}function rf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){e=-1;return e|0}qf(a+16|0,a,b,c,d,e,f)|0;e=0;return e|0}function sf(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;s=i=i+63&-64;i=i+208|0;m=s;o=s+144|0;n=s+112|0;r=s+48|0;s=s+16|0;Fc(s,j,k,0)|0;q=j+16|0;k=n;j=s;l=k+32|0;do{a[k>>0]=a[j>>0]|0;k=k+1|0;j=j+1|0}while((k|0)<(l|0));l=q;j=l;l=l+4|0;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;k=m;c[k>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;c[k+4>>2]=l;k=m+8|0;c[k>>2]=0;c[k+4>>2]=0;Kc(o,m,n,0)|0;k=0;do{a[r+k>>0]=a[o+k>>0]|0;k=k+1|0}while((k|0)!=32);if(Rd(f,e,g,h,r)|0){k=s;l=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0));s=-1;i=t;return s|0}k=e;j=b;if(e>>>0>=b>>>0?0<h>>>0|0==(h|0)&(k-j|0)>>>0<g>>>0:0)p=9;else if(b>>>0>=e>>>0?0<h>>>0|0==(h|0)&(j-k|0)>>>0<g>>>0:0)p=9;if((p|0)==9){rh(b|0,e|0,g|0)|0;e=b}k=h>>>0>0|(h|0)==0&g>>>0>32;j=k?32:g;l=k?0:h;if((j|0)==0&(l|0)==0)Wg(r,r,32,0,q,0,0,s)|0;else{f=r+32|0;p=h>>>0<0|(h|0)==0&g>>>0<32;p=lh((p?g:32)|0,(p?h:0)|0,-1,0)|0;p=p+1|0;qh(f|0,e|0,p|0)|0;o=lh(j|0,l|0,32,0)|0;Wg(r,r,o,C,q,0,0,s)|0;qh(b|0,f|0,p|0)|0}if(k){r=kh(g|0,h|0,j|0,l|0)|0;Wg(b+j|0,e+j|0,r,C,q,1,0,s)|0}k=s;l=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0));s=0;i=t;return s|0}function tf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16){e=-1;return e|0}d=lh(c|0,d|0,-16,-1)|0;e=sf(a,b+16|0,b,d,C,e,f)|0;return e|0}function uf(){return 32}function vf(){return 24}function wf(){return 32}function xf(){return 16}function yf(){return 16}function zf(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;l=i;k=i=i+63&-64;i=i+96|0;if(g>>>0<0|(g|0)==0&f>>>0<32){k=-1;i=l;return k|0}Fc(k,h,j,0)|0;Wg(b,e,f,g,h+16|0,0,0,k)|0;h=b+16|0;f=lh(f|0,g|0,-32,-1)|0;c[k>>2]=(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)&67108863;e=b+3|0;c[k+4>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>2&67108611;e=b+6|0;c[k+8>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>4&67092735;e=b+9|0;c[k+12>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>6&66076671;e=b+12|0;c[k+16>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)>>>8&1048575;e=k+20|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[k+40>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;e=b+20|0;c[k+44>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+24|0;c[k+48>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+28|0;c[k+52>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=k+56|0;c[e>>2]=0;c[e+4>>2]=0;a[k+80>>0]=0;Xd(k,b+32|0,f,C);Zd(k,h);f=b+16|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(f|0));k=0;i=l;return k|0}function Af(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;r=i=i+63&-64;i=i+176|0;k=r;q=r+112|0;l=r+80|0;s=r+48|0;r=r+16|0;if(g>>>0<0|(g|0)==0&f>>>0<32){s=-1;i=t;return s|0}Fc(s,h,j,0)|0;p=h+16|0;m=l;n=s;o=m+32|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(o|0));n=p;m=n;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;o=k;c[o>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;c[o+4>>2]=n;o=k+8|0;c[o>>2]=0;c[o+4>>2]=0;Kc(q,k,l,0)|0;k=0;do{a[r+k>>0]=a[q+k>>0]|0;k=k+1|0}while((k|0)!=32);q=lh(f|0,g|0,-32,-1)|0;if(Rd(e+16|0,e+32|0,q,C,r)|0){s=-1;i=t;return s|0}Fc(s,h,j,0)|0;Wg(b,e,f,g,p,0,0,s)|0;m=b;o=m+32|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(o|0));s=0;i=t;return s|0}function Bf(){return 8}function Cf(){return 16}function Df(){return 33195}function Ef(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Hf(a,b,c,d,e)|0;return 0}function Ff(){return 8}function Gf(){return 16}function Hf(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;n=g;l=n;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;k=g+8|0;m=k;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;k=k+4|0;k=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;p=e&7;o=c+e+(0-p)|0;e=ph(e|0,f|0,56)|0;g=C;h=m^2037671283;j=k^1952801890;i=l^1852142177;f=n^1819895653;m=m^1852075885;k=k^1685025377;l=l^1886610805;n=n^1936682341;if((o|0)!=(c|0)){do{r=c;s=r;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;r=r+4|0;r=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;v=s^h;u=r^j;n=lh(l|0,n|0,m|0,k|0)|0;l=C;t=ph(m|0,k|0,13)|0;h=C;m=oh(m|0,k|0,51)|0;m=(t|m)^n;h=(h|C)^l;f=lh(v|0,u|0,i|0,f|0)|0;i=C;t=ph(v|0,u|0,16)|0;j=C;u=oh(v|0,u|0,48)|0;u=(t|u)^f;j=(j|C)^i;n=lh(u|0,j|0,l|0,n|0)|0;l=C;t=ph(u|0,j|0,21)|0;k=C;j=oh(u|0,j|0,43)|0;j=(t|j)^n;k=(k|C)^l;i=lh(f|0,i|0,m|0,h|0)|0;f=C;t=ph(m|0,h|0,17)|0;u=C;h=oh(m|0,h|0,47)|0;h=i^(t|h);u=f^(u|C);l=lh(n|0,l|0,h|0,u|0)|0;n=C;t=ph(h|0,u|0,13)|0;m=C;u=oh(h|0,u|0,51)|0;u=(t|u)^l;m=(m|C)^n;i=lh(j|0,k|0,f|0,i|0)|0;f=C;t=ph(j|0,k|0,16)|0;h=C;k=oh(j|0,k|0,48)|0;k=(t|k)^i;h=(h|C)^f;l=lh(k|0,h|0,n|0,l|0)|0;n=C;t=ph(k|0,h|0,21)|0;j=C;h=oh(k|0,h|0,43)|0;h=(t|h)^l;j=(j|C)^n;f=lh(i|0,f|0,u|0,m|0)|0;i=C;t=ph(u|0,m|0,17)|0;k=C;m=oh(u|0,m|0,47)|0;m=(t|m)^f;k=(k|C)^i;l=l^s;n=n^r;c=c+8|0}while((c|0)!=(o|0));c=o}switch(p|0){case 7:{e=ph(d[c+6>>0]|0|0,0,48)|0|e;g=C|g;q=5;break}case 6:{q=5;break}case 5:{q=6;break}case 4:{q=7;break}case 3:{q=8;break}case 2:{q=9;break}case 1:{q=10;break}default:{}}if((q|0)==5){v=ph(d[c+5>>0]|0|0,0,40)|0;g=C|g;e=v|e;q=6}if((q|0)==6){g=d[c+4>>0]|0|g;q=7}if((q|0)==7){v=ph(d[c+3>>0]|0|0,0,24)|0;e=v|e;g=C|g;q=8}if((q|0)==8){v=ph(d[c+2>>0]|0|0,0,16)|0;e=v|e;g=C|g;q=9}if((q|0)==9){v=ph(d[c+1>>0]|0|0,0,8)|0;e=v|e;g=C|g;q=10}if((q|0)==10)e=d[c>>0]|0|e;u=e^h;o=g^j;p=lh(l|0,n|0,m|0,k|0)|0;n=C;v=ph(m|0,k|0,13)|0;q=C;s=oh(m|0,k|0,51)|0;s=(v|s)^p;q=(q|C)^n;v=lh(u|0,o|0,i|0,f|0)|0;t=C;r=ph(u|0,o|0,16)|0;m=C;o=oh(u|0,o|0,48)|0;o=(r|o)^v;m=(m|C)^t;p=lh(o|0,m|0,n|0,p|0)|0;n=C;r=ph(o|0,m|0,21)|0;u=C;m=oh(o|0,m|0,43)|0;m=(r|m)^p;u=(u|C)^n;t=lh(v|0,t|0,s|0,q|0)|0;v=C;r=ph(s|0,q|0,17)|0;o=C;q=oh(s|0,q|0,47)|0;q=t^(r|q);o=v^(o|C);n=lh(p|0,n|0,q|0,o|0)|0;p=C;r=ph(q|0,o|0,13)|0;s=C;o=oh(q|0,o|0,51)|0;o=(r|o)^n;s=(s|C)^p;t=lh(m|0,u|0,v|0,t|0)|0;v=C;r=ph(m|0,u|0,16)|0;q=C;u=oh(m|0,u|0,48)|0;u=(r|u)^t;q=(q|C)^v;n=lh(u|0,q|0,p|0,n|0)|0;p=C;r=ph(u|0,q|0,21)|0;m=C;q=oh(u|0,q|0,43)|0;q=(r|q)^n;m=(m|C)^p;v=lh(t|0,v|0,o|0,s|0)|0;t=C;r=ph(o|0,s|0,17)|0;u=C;s=oh(o|0,s|0,47)|0;s=(r|s)^v;u=(u|C)^t;p=lh(n^e|0,p^g|0,s|0,u|0)|0;n=C;r=ph(s|0,u|0,13)|0;o=C;u=oh(s|0,u|0,51)|0;u=p^(r|u);o=n^(o|C);v=lh(q|0,m|0,t^255|0,v|0)|0;t=C;r=ph(q|0,m|0,16)|0;s=C;m=oh(q|0,m|0,48)|0;m=(r|m)^v;s=(s|C)^t;p=lh(m|0,s|0,n|0,p|0)|0;n=C;r=ph(m|0,s|0,21)|0;q=C;s=oh(m|0,s|0,43)|0;s=(r|s)^p;q=(q|C)^n;t=lh(v|0,t|0,u|0,o|0)|0;v=C;r=ph(u|0,o|0,17)|0;m=C;o=oh(u|0,o|0,47)|0;o=(r|o)^t;m=(m|C)^v;n=lh(p|0,n|0,o|0,m|0)|0;p=C;r=ph(o|0,m|0,13)|0;u=C;m=oh(o|0,m|0,51)|0;m=(r|m)^n;u=(u|C)^p;t=lh(s|0,q|0,v|0,t|0)|0;v=C;r=ph(s|0,q|0,16)|0;o=C;q=oh(s|0,q|0,48)|0;q=(r|q)^t;o=(o|C)^v;n=lh(q|0,o|0,p|0,n|0)|0;p=C;r=ph(q|0,o|0,21)|0;s=C;o=oh(q|0,o|0,43)|0;o=(r|o)^n;s=(s|C)^p;v=lh(t|0,v|0,m|0,u|0)|0;t=C;r=ph(m|0,u|0,17)|0;q=C;u=oh(m|0,u|0,47)|0;u=(r|u)^v;q=(q|C)^t;p=lh(n|0,p|0,u|0,q|0)|0;n=C;r=ph(u|0,q|0,13)|0;m=C;q=oh(u|0,q|0,51)|0;q=(r|q)^p;m=(m|C)^n;v=lh(o|0,s|0,t|0,v|0)|0;t=C;r=ph(o|0,s|0,16)|0;u=C;s=oh(o|0,s|0,48)|0;s=(r|s)^v;u=(u|C)^t;p=lh(s|0,u|0,n|0,p|0)|0;n=C;r=ph(s|0,u|0,21)|0;o=C;u=oh(s|0,u|0,43)|0;u=(r|u)^p;o=(o|C)^n;t=lh(v|0,t|0,q|0,m|0)|0;v=C;r=ph(q|0,m|0,17)|0;s=C;m=oh(q|0,m|0,47)|0;m=(r|m)^t;s=(s|C)^v;n=lh(p|0,n|0,m|0,s|0)|0;p=C;r=ph(m|0,s|0,13)|0;q=C;s=oh(m|0,s|0,51)|0;n=(r|s)^n;p=(q|C)^p;t=lh(u|0,o|0,v|0,t|0)|0;v=C;q=ph(u|0,o|0,16)|0;s=C;o=oh(u|0,o|0,48)|0;o=(q|o)^t;s=(s|C)^v;q=ph(o|0,s|0,21)|0;u=C;s=oh(o|0,s|0,43)|0;u=u|C;v=lh(t|0,v|0,n|0,p|0)|0;t=C;o=ph(n|0,p|0,17)|0;r=C;p=oh(n|0,p|0,47)|0;s=(o|p)^v^t^(q|s);u=(r|C)^t^v^u;v=b;t=v;a[t>>0]=s;a[t+1>>0]=s>>8;a[t+2>>0]=s>>16;a[t+3>>0]=s>>24;v=v+4|0;a[v>>0]=u;a[v+1>>0]=u>>8;a[v+2>>0]=u>>16;a[v+3>>0]=u>>24;return 0}function If(){return 64}function Jf(){return 32}function Kf(){return 32}function Lf(){return 64}function Mf(){return 33205}function Nf(a,b,c){a=a|0;b=b|0;c=c|0;Zf(a,b,c)|0;return 0}function Of(a,b){a=a|0;b=b|0;_f(a,b)|0;return 0}function Pf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=i=i+63&-64;i=i+16|0;k=a+64|0;rh(k|0,d|0,e|0)|0;dg(a,j,k,e,f,g)|0;g=j;d=(b|0)!=0;if((c[g>>2]|0)==64&(c[g+4>>2]|0)==0){if(!d){k=0;i=h;return k|0}j=lh(e|0,f|0,64,0)|0;k=b;c[k>>2]=j;c[k+4>>2]=C;k=0;i=h;return k|0}else{if(d){k=b;c[k>>2]=0;c[k+4>>2]=0}k=lh(e|0,f|0,64,0)|0;nh(a|0,0,k|0)|0;k=-1;i=h;return k|0}return 0}function Qf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;e=lh(e|0,f|0,-64,-1)|0;f=C;do if(!(f>>>0>0|(f|0)==0&e>>>0>4294967231)){h=d+64|0;if(bg(d,h,e,f,g)|0){nh(a|0,0,e|0)|0;break}if(b|0){d=b;c[d>>2]=e;c[d+4>>2]=f}rh(a|0,h|0,e|0)|0;d=0;return d|0}while(0);if(!b){d=-1;return d|0}d=b;c[d>>2]=0;c[d+4>>2]=0;d=-1;return d|0}function Rf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;dg(a,b,c,d,e,f)|0;return 0}function Sf(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return bg(a,b,c,d,e)|0}function Tf(){return 64}function Uf(){return 32}function Vf(){return 32}function Wf(){return 64}function Xf(a,b){a=a|0;b=b|0;rh(a|0,b|0,32)|0;return 0}function Yf(a,b){a=a|0;b=b|0;rh(a|0,b+32|0,32)|0;return 0}function Zf(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;o=i;h=i=i+63&-64;i=i+496|0;k=h;j=h+448|0;l=h+408|0;m=h+368|0;h=h+208|0;g=k+64|0;n=k;p=400;q=n+64|0;do{c[n>>2]=c[p>>2];n=n+4|0;p=p+4|0}while((n|0)<(q|0));n=k+72|0;c[n>>2]=256;c[n+4>>2]=0;n=g;c[n>>2]=0;c[n+4>>2]=0;n=k+80|0;p=f;q=n+32|0;do{a[n>>0]=a[p>>0]|0;n=n+1|0;p=p+1|0}while((n|0)<(q|0));Fd(k,e)|0;a[e>>0]=(d[e>>0]|0)&248;q=e+31|0;a[q>>0]=(d[q>>0]|0)&63|64;Cc(h,e);wc(j,h+80|0);uc(l,h,j);uc(m,h+40|0,j);tc(b,m);tc(k,l);q=b+31|0;a[q>>0]=(d[q>>0]|0)^(d[k>>0]|0)<<7;rh(e|0,f|0,32)|0;rh(e+32|0,b|0,32)|0;i=o;return 0}function _f(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=i;n=i=i+63&-64;i=i+528|0;m=n;l=n+448|0;o=n+408|0;p=n+368|0;k=n+208|0;n=n+488|0;f=0;do{a[n+f>>0]=ma(0)|0;f=f+1|0}while((f|0)!=32);f=m+64|0;g=m;h=400;j=g+64|0;do{c[g>>2]=c[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(j|0));g=m+72|0;c[g>>2]=256;c[g+4>>2]=0;g=f;c[g>>2]=0;c[g+4>>2]=0;g=m+80|0;h=n;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));Fd(m,e)|0;a[e>>0]=(d[e>>0]|0)&248;g=e+31|0;a[g>>0]=(d[g>>0]|0)&63|64;Cc(k,e);wc(l,k+80|0);uc(o,k,l);uc(p,k+40|0,l);tc(b,p);tc(m,o);g=b+31|0;a[g>>0]=(d[g>>0]|0)^(d[m>>0]|0)<<7;g=e;h=n;j=g+32|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));rh(e+32|0,b|0,32)|0;i=q;return 0}function $f(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;e=i=i+63&-64;i=i+240|0;d=e+80|0;f=e+40|0;if(yc(d,b)|0){f=-1;i=g;return f|0}y=e+4|0;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[y+16>>2]=0;c[y+20>>2]=0;c[y+24>>2]=0;c[y+28>>2]=0;q=d+40|0;p=d+44|0;n=d+48|0;m=d+52|0;l=d+56|0;k=d+60|0;j=d+64|0;h=d+68|0;r=d+72|0;b=d+76|0;z=0-(c[p>>2]|0)|0;x=0-(c[n>>2]|0)|0;w=0-(c[m>>2]|0)|0;v=0-(c[l>>2]|0)|0;u=0-(c[k>>2]|0)|0;t=0-(c[j>>2]|0)|0;s=0-(c[h>>2]|0)|0;d=0-(c[r>>2]|0)|0;o=0-(c[b>>2]|0)|0;c[e>>2]=1-(c[q>>2]|0);c[y>>2]=z;c[e+8>>2]=x;c[e+12>>2]=w;c[e+16>>2]=v;c[e+20>>2]=u;c[e+24>>2]=t;c[e+28>>2]=s;c[e+32>>2]=d;c[e+36>>2]=o;wc(e,e);o=f+4|0;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;p=c[p>>2]|0;n=c[n>>2]|0;m=c[m>>2]|0;l=c[l>>2]|0;k=c[k>>2]|0;j=c[j>>2]|0;h=c[h>>2]|0;d=c[r>>2]|0;b=c[b>>2]|0;c[f>>2]=(c[q>>2]|0)+1;c[o>>2]=p;c[f+8>>2]=n;c[f+12>>2]=m;c[f+16>>2]=l;c[f+20>>2]=k;c[f+24>>2]=j;c[f+28>>2]=h;c[f+32>>2]=d;c[f+36>>2]=b;uc(f,f,e);tc(a,f);f=0;i=g;return f|0}function ag(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;g=i=i+63&-64;i=i+272|0;h=g;g=g+208|0;f=h+64|0;j=h;l=400;m=j+64|0;do{c[j>>2]=c[l>>2];j=j+4|0;l=l+4|0}while((j|0)<(m|0));j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=f;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;l=e;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));Fd(h,g)|0;a[g>>0]=(d[g>>0]|0)&248;j=g+31|0;a[j>>0]=(d[j>>0]|0)&63|64;j=b;l=g;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));i=k;return 0}function bg(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;Ga=i;za=i=i+63&-64;i=i+2976|0;Ca=za+2760|0;Aa=za+2504|0;Ba=za+2248|0;ya=za+968|0;Da=za+808|0;Ea=za+648|0;s=za+488|0;o=za;p=za+2912|0;Fa=za+2880|0;r=za+328|0;za=za+208|0;q=b+32|0;m=0;n=32;j=1;while(1){n=n+-1|0;k=a[q+n>>0]|0;l=a[33213+n>>0]|0;j=j&255;m=((k&255)-(l&255)|0)>>>8&j|m&255;if(!n)break;else j=(((l^k)&255)+65535|0)>>>8&j}if(!m){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[16+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[48+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[80+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[112+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[144+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[176+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[208+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[240+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[272+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[304+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[336+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}else{j=0;k=0}do{j=a[368+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);if(!(j<<24>>24)){b=-1;i=Ga;return b|0}if(yc(r,h)|0){b=-1;i=Ga;return b|0}if(!((a[h+31>>0]|(a[h+30>>0]|(a[h+29>>0]|(a[h+28>>0]|(a[h+27>>0]|(a[h+26>>0]|(a[h+25>>0]|(a[h+24>>0]|(a[h+23>>0]|(a[h+22>>0]|(a[h+21>>0]|(a[h+20>>0]|(a[h+19>>0]|(a[h+18>>0]|(a[h+17>>0]|(a[h+16>>0]|(a[h+15>>0]|(a[h+14>>0]|(a[h+13>>0]|(a[h+12>>0]|(a[h+11>>0]|(a[h+10>>0]|(a[h+9>>0]|(a[h+8>>0]|(a[h+7>>0]|(a[h+6>>0]|(a[h+5>>0]|(a[h+4>>0]|(a[h+3>>0]|(a[h+2>>0]|(a[h+1>>0]|a[h>>0])))))))))))))))))))))))))))))))<<24>>24)){b=-1;i=Ga;return b|0}j=o+64|0;m=j;c[m>>2]=0;c[m+4>>2]=0;m=o;l=400;n=m+64|0;do{c[m>>2]=c[l>>2];m=m+4|0;l=l+4|0}while((m|0)<(n|0));k=o+72|0;m=k;c[m>>2]=256;c[m+4>>2]=0;m=j;c[m>>2]=0;c[m+4>>2]=0;m=o+80|0;l=b;n=m+32|0;do{a[m>>0]=a[l>>0]|0;m=m+1|0;l=l+1|0}while((m|0)<(n|0));m=k;c[m>>2]=512;c[m+4>>2]=0;m=j;c[m>>2]=0;c[m+4>>2]=0;m=o+112|0;l=h;n=m+32|0;do{a[m>>0]=a[l>>0]|0;m=m+1|0;l=l+1|0}while((m|0)<(n|0));Dd(o,e,f,g)|0;Fd(o,p)|0;Ec(p);j=0;do{a[Aa+j>>0]=(d[p+(j>>3)>>0]|0)>>>(j&7)&1;j=j+1|0}while((j|0)!=256);o=0;while(1){f=Aa+o|0;a:do if(a[f>>0]|0){g=1;do{j=g+o|0;if((j|0)>=256)break a;n=Aa+j|0;k=a[n>>0]|0;b:do if(k<<24>>24){m=a[f>>0]|0;k=k<<24>>24<<g;l=m+k|0;if((l|0)<16){a[f>>0]=l;a[n>>0]=0;break}k=m-k|0;if((k|0)<=-16)break a;a[f>>0]=k;k=n;do{a[k>>0]=0;j=j+1|0;if((j|0)>=256)break b;k=Aa+j|0}while((a[k>>0]|0)!=0);a[k>>0]=1}while(0);g=g+1|0}while((g|0)<7)}while(0);o=o+1|0;if((o|0)==256){j=0;break}}do{a[Ba+j>>0]=(d[q+(j>>3)>>0]|0)>>>(j&7)&1;j=j+1|0}while((j|0)!=256);o=0;do{f=Ba+o|0;c:do if(a[f>>0]|0){g=1;do{j=g+o|0;if((j|0)>=256)break c;n=Ba+j|0;k=a[n>>0]|0;d:do if(k<<24>>24){m=a[f>>0]|0;k=k<<24>>24<<g;l=m+k|0;if((l|0)<16){a[f>>0]=l;a[n>>0]=0;break}k=m-k|0;if((k|0)<=-16)break c;a[f>>0]=k;k=n;do{a[k>>0]=0;j=j+1|0;if((j|0)>=256)break d;k=Ba+j|0}while((a[k>>0]|0)!=0);a[k>>0]=1}while(0);g=g+1|0}while((g|0)<7)}while(0);o=o+1|0}while((o|0)!=256);Bc(ya,r);ra=c[r+4>>2]|0;n=c[r+8>>2]|0;m=c[r+12>>2]|0;xa=c[r+16>>2]|0;wa=c[r+20>>2]|0;va=c[r+24>>2]|0;ua=c[r+28>>2]|0;ta=c[r+32>>2]|0;sa=c[r+36>>2]|0;c[Ca>>2]=c[r>>2];c[Ca+4>>2]=ra;c[Ca+8>>2]=n;c[Ca+12>>2]=m;c[Ca+16>>2]=xa;c[Ca+20>>2]=wa;c[Ca+24>>2]=va;c[Ca+28>>2]=ua;c[Ca+32>>2]=ta;c[Ca+36>>2]=sa;sa=c[r+44>>2]|0;ta=c[r+48>>2]|0;ua=c[r+52>>2]|0;va=c[r+56>>2]|0;wa=c[r+60>>2]|0;xa=c[r+64>>2]|0;m=c[r+68>>2]|0;n=c[r+72>>2]|0;ra=c[r+76>>2]|0;c[Ca+40>>2]=c[r+40>>2];c[Ca+44>>2]=sa;c[Ca+48>>2]=ta;c[Ca+52>>2]=ua;c[Ca+56>>2]=va;c[Ca+60>>2]=wa;c[Ca+64>>2]=xa;c[Ca+68>>2]=m;c[Ca+72>>2]=n;c[Ca+76>>2]=ra;ra=c[r+84>>2]|0;n=c[r+88>>2]|0;m=c[r+92>>2]|0;xa=c[r+96>>2]|0;wa=c[r+100>>2]|0;va=c[r+104>>2]|0;ua=c[r+108>>2]|0;ta=c[r+112>>2]|0;sa=c[r+116>>2]|0;c[Ca+80>>2]=c[r+80>>2];c[Ca+84>>2]=ra;c[Ca+88>>2]=n;c[Ca+92>>2]=m;c[Ca+96>>2]=xa;c[Ca+100>>2]=wa;c[Ca+104>>2]=va;c[Ca+108>>2]=ua;c[Ca+112>>2]=ta;c[Ca+116>>2]=sa;Ac(Da,Ca);sa=Da+120|0;uc(s,Da,sa);ta=Da+40|0;ua=Da+80|0;uc(s+40|0,ta,ua);uc(s+80|0,ua,sa);uc(s+120|0,Da,ta);xc(Da,s,ya);uc(Ea,Da,sa);va=Ea+40|0;uc(va,ta,ua);wa=Ea+80|0;uc(wa,ua,sa);xa=Ea+120|0;uc(xa,Da,ta);m=ya+160|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+320|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+480|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+640|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+800|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);m=ya+960|0;Bc(m,Ea);xc(Da,s,m);uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);Bc(ya+1120|0,Ea);m=za;n=m+40|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));qa=za+40|0;c[qa>>2]=1;m=za+44|0;n=m+36|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));ra=za+80|0;c[ra>>2]=1;m=za+84|0;n=m+36|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));k=255;while(1){if(a[Aa+k>>0]|0){j=k;break}if(a[Ba+k>>0]|0){j=k;break}j=k+-1|0;if((k|0)>0)k=j;else break}if((j|0)>-1){l=Ea+44|0;m=Ea+48|0;n=Ea+52|0;f=Ea+56|0;g=Ea+60|0;o=Ea+64|0;e=Ea+68|0;h=Ea+72|0;p=Ea+76|0;q=Ea+4|0;r=Ea+8|0;s=Ea+12|0;t=Ea+16|0;u=Ea+20|0;v=Ea+24|0;w=Ea+28|0;x=Ea+32|0;y=Ea+36|0;z=Da+4|0;A=Da+8|0;B=Da+12|0;C=Da+16|0;D=Da+20|0;E=Da+24|0;F=Da+28|0;G=Da+32|0;H=Da+36|0;I=Da+44|0;J=Da+48|0;K=Da+52|0;L=Da+56|0;M=Da+60|0;N=Da+64|0;O=Da+68|0;P=Da+72|0;Q=Da+76|0;R=Ea+84|0;S=Ea+88|0;T=Ea+92|0;U=Ea+96|0;V=Ea+100|0;W=Ea+104|0;X=Ea+108|0;Y=Ea+112|0;Z=Ea+116|0;_=Da+84|0;$=Da+88|0;aa=Da+92|0;ba=Da+96|0;ca=Da+100|0;da=Da+104|0;ea=Da+108|0;fa=Da+112|0;ga=Da+116|0;ha=Da+124|0;ia=Da+128|0;ja=Da+132|0;ka=Da+136|0;la=Da+140|0;ma=Da+144|0;na=Da+148|0;oa=Da+152|0;pa=Da+156|0;while(1){Ac(Da,za);k=a[Aa+j>>0]|0;do if(k<<24>>24>0){uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);xc(Da,Ea,ya+(((k<<24>>24|0)/2|0)*160|0)|0)}else{if(k<<24>>24>=0)break;uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);Ya=(k<<24>>24|0)/-2|0;hb=c[va>>2]|0;Va=c[l>>2]|0;Na=c[m>>2]|0;_a=c[n>>2]|0;cb=c[f>>2]|0;gb=c[g>>2]|0;Ia=c[o>>2]|0;Ma=c[e>>2]|0;Qa=c[h>>2]|0;Ua=c[p>>2]|0;Za=c[Ea>>2]|0;Ra=c[q>>2]|0;Ja=c[r>>2]|0;ab=c[s>>2]|0;eb=c[t>>2]|0;k=c[u>>2]|0;Ka=c[v>>2]|0;Oa=c[w>>2]|0;Sa=c[x>>2]|0;Wa=c[y>>2]|0;c[Da>>2]=Za+hb;c[z>>2]=Ra+Va;c[A>>2]=Ja+Na;c[B>>2]=ab+_a;c[C>>2]=eb+cb;c[D>>2]=k+gb;c[E>>2]=Ka+Ia;c[F>>2]=Oa+Ma;c[G>>2]=Sa+Qa;c[H>>2]=Wa+Ua;c[ta>>2]=hb-Za;c[I>>2]=Va-Ra;c[J>>2]=Na-Ja;c[K>>2]=_a-ab;c[L>>2]=cb-eb;c[M>>2]=gb-k;c[N>>2]=Ia-Ka;c[O>>2]=Ma-Oa;c[P>>2]=Qa-Sa;c[Q>>2]=Ua-Wa;uc(ua,Da,ya+(Ya*160|0)+40|0);uc(ta,ta,ya+(Ya*160|0)|0);uc(sa,ya+(Ya*160|0)+120|0,xa);uc(Da,wa,ya+(Ya*160|0)+80|0);Ya=c[Da>>2]<<1;Wa=c[z>>2]<<1;Ua=c[A>>2]<<1;Sa=c[B>>2]<<1;Qa=c[C>>2]<<1;Oa=c[D>>2]<<1;Ma=c[E>>2]<<1;Ka=c[F>>2]<<1;Ia=c[G>>2]<<1;k=c[H>>2]<<1;gb=c[ua>>2]|0;eb=c[_>>2]|0;cb=c[$>>2]|0;ab=c[aa>>2]|0;_a=c[ba>>2]|0;Ja=c[ca>>2]|0;Na=c[da>>2]|0;Ra=c[ea>>2]|0;Va=c[fa>>2]|0;Za=c[ga>>2]|0;hb=c[ta>>2]|0;fb=c[I>>2]|0;db=c[J>>2]|0;bb=c[K>>2]|0;$a=c[L>>2]|0;Ha=c[M>>2]|0;La=c[N>>2]|0;Pa=c[O>>2]|0;Ta=c[P>>2]|0;Xa=c[Q>>2]|0;c[Da>>2]=gb-hb;c[z>>2]=eb-fb;c[A>>2]=cb-db;c[B>>2]=ab-bb;c[C>>2]=_a-$a;c[D>>2]=Ja-Ha;c[E>>2]=Na-La;c[F>>2]=Ra-Pa;c[G>>2]=Va-Ta;c[H>>2]=Za-Xa;c[ta>>2]=hb+gb;c[I>>2]=fb+eb;c[J>>2]=db+cb;c[K>>2]=bb+ab;c[L>>2]=$a+_a;c[M>>2]=Ha+Ja;c[N>>2]=La+Na;c[O>>2]=Pa+Ra;c[P>>2]=Ta+Va;c[Q>>2]=Xa+Za;Za=c[sa>>2]|0;Xa=c[ha>>2]|0;Va=c[ia>>2]|0;Ta=c[ja>>2]|0;Ra=c[ka>>2]|0;Pa=c[la>>2]|0;Na=c[ma>>2]|0;La=c[na>>2]|0;Ja=c[oa>>2]|0;Ha=c[pa>>2]|0;c[ua>>2]=Ya-Za;c[_>>2]=Wa-Xa;c[$>>2]=Ua-Va;c[aa>>2]=Sa-Ta;c[ba>>2]=Qa-Ra;c[ca>>2]=Oa-Pa;c[da>>2]=Ma-Na;c[ea>>2]=Ka-La;c[fa>>2]=Ia-Ja;c[ga>>2]=k-Ha;c[sa>>2]=Za+Ya;c[ha>>2]=Xa+Wa;c[ia>>2]=Va+Ua;c[ja>>2]=Ta+Sa;c[ka>>2]=Ra+Qa;c[la>>2]=Pa+Oa;c[ma>>2]=Na+Ma;c[na>>2]=La+Ka;c[oa>>2]=Ja+Ia;c[pa>>2]=Ha+k}while(0);k=a[Ba+j>>0]|0;do if(k<<24>>24>0){uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);zc(Da,Ea,584+(((k<<24>>24|0)/2|0)*120|0)|0)}else{if(k<<24>>24>=0)break;uc(Ea,Da,sa);uc(va,ta,ua);uc(wa,ua,sa);uc(xa,Da,ta);Ra=(k<<24>>24|0)/-2|0;k=c[va>>2]|0;Ua=c[l>>2]|0;ab=c[m>>2]|0;Pa=c[n>>2]|0;La=c[f>>2]|0;Ha=c[g>>2]|0;fb=c[o>>2]|0;bb=c[e>>2]|0;Za=c[h>>2]|0;Va=c[p>>2]|0;Qa=c[Ea>>2]|0;Ya=c[q>>2]|0;eb=c[r>>2]|0;Na=c[s>>2]|0;Ja=c[t>>2]|0;hb=c[u>>2]|0;db=c[v>>2]|0;$a=c[w>>2]|0;Xa=c[x>>2]|0;Ta=c[y>>2]|0;c[Da>>2]=Qa+k;c[z>>2]=Ya+Ua;c[A>>2]=eb+ab;c[B>>2]=Na+Pa;c[C>>2]=Ja+La;c[D>>2]=hb+Ha;c[E>>2]=db+fb;c[F>>2]=$a+bb;c[G>>2]=Xa+Za;c[H>>2]=Ta+Va;c[ta>>2]=k-Qa;c[I>>2]=Ua-Ya;c[J>>2]=ab-eb;c[K>>2]=Pa-Na;c[L>>2]=La-Ja;c[M>>2]=Ha-hb;c[N>>2]=fb-db;c[O>>2]=bb-$a;c[P>>2]=Za-Xa;c[Q>>2]=Va-Ta;uc(ua,Da,584+(Ra*120|0)+40|0);uc(ta,ta,584+(Ra*120|0)|0);uc(sa,584+(Ra*120|0)+80|0,xa);Ra=c[wa>>2]<<1;Ta=c[R>>2]<<1;Va=c[S>>2]<<1;Xa=c[T>>2]<<1;Za=c[U>>2]<<1;$a=c[V>>2]<<1;bb=c[W>>2]<<1;db=c[X>>2]<<1;fb=c[Y>>2]<<1;hb=c[Z>>2]<<1;Ha=c[ua>>2]|0;Ja=c[_>>2]|0;La=c[$>>2]|0;Na=c[aa>>2]|0;Pa=c[ba>>2]|0;eb=c[ca>>2]|0;ab=c[da>>2]|0;Ya=c[ea>>2]|0;Ua=c[fa>>2]|0;Qa=c[ga>>2]|0;k=c[ta>>2]|0;Ia=c[I>>2]|0;Ka=c[J>>2]|0;Ma=c[K>>2]|0;Oa=c[L>>2]|0;gb=c[M>>2]|0;cb=c[N>>2]|0;_a=c[O>>2]|0;Wa=c[P>>2]|0;Sa=c[Q>>2]|0;c[Da>>2]=Ha-k;c[z>>2]=Ja-Ia;c[A>>2]=La-Ka;c[B>>2]=Na-Ma;c[C>>2]=Pa-Oa;c[D>>2]=eb-gb;c[E>>2]=ab-cb;c[F>>2]=Ya-_a;c[G>>2]=Ua-Wa;c[H>>2]=Qa-Sa;c[ta>>2]=k+Ha;c[I>>2]=Ia+Ja;c[J>>2]=Ka+La;c[K>>2]=Ma+Na;c[L>>2]=Oa+Pa;c[M>>2]=gb+eb;c[N>>2]=cb+ab;c[O>>2]=_a+Ya;c[P>>2]=Wa+Ua;c[Q>>2]=Sa+Qa;Qa=c[sa>>2]|0;Sa=c[ha>>2]|0;Ua=c[ia>>2]|0;Wa=c[ja>>2]|0;Ya=c[ka>>2]|0;_a=c[la>>2]|0;ab=c[ma>>2]|0;cb=c[na>>2]|0;eb=c[oa>>2]|0;gb=c[pa>>2]|0;c[ua>>2]=Ra-Qa;c[_>>2]=Ta-Sa;c[$>>2]=Va-Ua;c[aa>>2]=Xa-Wa;c[ba>>2]=Za-Ya;c[ca>>2]=$a-_a;c[da>>2]=bb-ab;c[ea>>2]=db-cb;c[fa>>2]=fb-eb;c[ga>>2]=hb-gb;c[sa>>2]=Qa+Ra;c[ha>>2]=Sa+Ta;c[ia>>2]=Ua+Va;c[ja>>2]=Wa+Xa;c[ka>>2]=Ya+Za;c[la>>2]=_a+$a;c[ma>>2]=ab+bb;c[na>>2]=cb+db;c[oa>>2]=eb+fb;c[pa>>2]=gb+hb}while(0);uc(za,Da,sa);uc(qa,ta,ua);uc(ra,ua,sa);if((j|0)>0)j=j+-1|0;else break}}wc(Aa,ra);uc(Ba,za,Aa);uc(ya,qa,Aa);tc(Fa,ya);tc(Ca,Ba);j=Fa+31|0;a[j>>0]=d[j>>0]^d[Ca>>0]<<7;j=0;k=0;do{j=(a[b+k>>0]^a[Fa+k>>0])&255|j;k=k+1|0}while((k|0)!=32);j=(j+511|0)>>>8&1;k=(Fa|0)==(b|0);l=0;m=0;do{l=a[Fa+m>>0]^a[b+m>>0]|l;m=m+1|0}while((m|0)!=32);hb=(k?-1:j+-1|0)|(((l&255)+511|0)>>>8&1)+-1;i=Ga;return hb|0}function cg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;e=lh(e|0,f|0,-64,-1)|0;f=C;do if(!(f>>>0>0|(f|0)==0&e>>>0>4294967231)){h=d+64|0;if(bg(d,h,e,f,g)|0){nh(a|0,0,e|0)|0;break}if(b|0){d=b;c[d>>2]=e;c[d+4>>2]=f}rh(a|0,h|0,e|0)|0;d=0;return d|0}while(0);if(!b){d=-1;return d|0}d=b;c[d>>2]=0;c[d+4>>2]=0;d=-1;return d|0}function dg(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,vc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Dc=0,Fc=0,Gc=0;z=i;p=i=i+63&-64;i=i+896|0;v=p+208|0;u=p+656|0;w=p+616|0;x=p+576|0;s=p;q=p+824|0;t=p+760|0;r=p+696|0;p=p+416|0;k=v+64|0;y=v;A=400;B=y+64|0;do{c[y>>2]=c[A>>2];y=y+4|0;A=A+4|0}while((y|0)<(B|0));y=v+72|0;c[y>>2]=256;c[y+4>>2]=0;y=k;c[y>>2]=0;c[y+4>>2]=0;y=v+80|0;A=j;B=y+32|0;do{a[y>>0]=a[A>>0]|0;y=y+1|0;A=A+1|0}while((y|0)<(B|0));Fd(v,q)|0;a[q>>0]=(d[q>>0]|0)&248;k=q+31|0;a[k>>0]=(d[k>>0]|0)&63|64;l=s+64|0;y=l;c[y>>2]=0;c[y+4>>2]=0;y=s;A=400;B=y+64|0;do{c[y>>2]=c[A>>2];y=y+4|0;A=A+4|0}while((y|0)<(B|0));m=s+72|0;n=m;c[n>>2]=256;c[n+4>>2]=0;n=l;c[n>>2]=0;c[n+4>>2]=0;n=s+80|0;y=n;A=q+32|0;B=y+32|0;do{a[y>>0]=a[A>>0]|0;y=y+1|0;A=A+1|0}while((y|0)<(B|0));Dd(s,f,g,h)|0;Fd(s,t)|0;o=b+32|0;rh(o|0,j+32|0,32)|0;Ec(t);Cc(p,t);wc(u,p+80|0);uc(w,p,u);uc(x,p+40|0,u);tc(b,x);tc(v,w);y=b+31|0;a[y>>0]=(d[y>>0]|0)^(d[v>>0]|0)<<7;y=l;c[y>>2]=0;c[y+4>>2]=0;y=s;A=400;B=y+64|0;do{c[y>>2]=c[A>>2];y=y+4|0;A=A+4|0}while((y|0)<(B|0));y=m;c[y>>2]=512;c[y+4>>2]=0;y=l;c[y>>2]=0;c[y+4>>2]=0;y=n;A=b;B=y+64|0;do{a[y>>0]=a[A>>0]|0;y=y+1|0;A=A+1|0}while((y|0)<(B|0));Dd(s,f,g,h)|0;Fd(s,r)|0;Ec(r);I=a[r+2>>0]|0;Sa=d[r>>0]|0;wb=ph(d[r+1>>0]|0|0,0,8)|0;pb=C;I=I&255;jb=ph(I|0,0,16)|0;jb=wb|Sa|jb&2031616;Sa=ph(d[r+3>>0]|0|0,0,8)|0;wb=C;E=ph(d[r+4>>0]|0|0,0,16)|0;wb=wb|C;tb=d[r+5>>0]|0;cb=ph(tb|0,0,24)|0;wb=oh(Sa|I|E|cb|0,wb|C|0,5)|0;wb=wb&2097151;cb=a[r+7>>0]|0;E=ph(d[r+6>>0]|0|0,0,8)|0;I=C;cb=cb&255;Sa=ph(cb|0,0,16)|0;I=oh(E|tb|Sa|0,I|C|0,2)|0;I=I&2097151;Sa=ph(d[r+8>>0]|0|0,0,8)|0;tb=C;E=ph(d[r+9>>0]|0|0,0,16)|0;tb=tb|C;v=d[r+10>>0]|0;Ra=ph(v|0,0,24)|0;tb=oh(Sa|cb|E|Ra|0,tb|C|0,7)|0;tb=tb&2097151;Ra=ph(d[r+11>>0]|0|0,0,8)|0;E=C;cb=ph(d[r+12>>0]|0|0,0,16)|0;E=E|C;Sa=d[r+13>>0]|0;y=ph(Sa|0,0,24)|0;E=oh(Ra|v|cb|y|0,E|C|0,4)|0;E=E&2097151;y=a[r+15>>0]|0;cb=ph(d[r+14>>0]|0|0,0,8)|0;v=C;y=y&255;Ra=ph(y|0,0,16)|0;v=oh(cb|Sa|Ra|0,v|C|0,1)|0;v=v&2097151;Ra=ph(d[r+16>>0]|0|0,0,8)|0;Sa=C;cb=ph(d[r+17>>0]|0|0,0,16)|0;Sa=Sa|C;Bc=d[r+18>>0]|0;ia=ph(Bc|0,0,24)|0;Sa=oh(Ra|y|cb|ia|0,Sa|C|0,6)|0;Sa=Sa&2097151;ia=a[r+20>>0]|0;cb=ph(d[r+19>>0]|0|0,0,8)|0;y=C;ia=ph(ia&255|0,0,16)|0;y=oh(cb|Bc|ia|0,y|C|0,3)|0;ia=C;Bc=a[r+23>>0]|0;cb=d[r+21>>0]|0;Ra=ph(d[r+22>>0]|0|0,0,8)|0;rb=C;Bc=Bc&255;Pa=ph(Bc|0,0,16)|0;Pa=Ra|cb|Pa&2031616;cb=ph(d[r+24>>0]|0|0,0,8)|0;Ra=C;h=ph(d[r+25>>0]|0|0,0,16)|0;Ra=Ra|C;Ja=d[r+26>>0]|0;f=ph(Ja|0,0,24)|0;Ra=oh(cb|Bc|h|f|0,Ra|C|0,5)|0;Ra=Ra&2097151;f=a[r+28>>0]|0;h=ph(d[r+27>>0]|0|0,0,8)|0;Bc=C;f=f&255;cb=ph(f|0,0,16)|0;Bc=oh(h|Ja|cb|0,Bc|C|0,2)|0;Bc=Bc&2097151;cb=ph(d[r+29>>0]|0|0,0,8)|0;Ja=C;h=ph(d[r+30>>0]|0|0,0,16)|0;Ja=Ja|C;r=ph(d[r+31>>0]|0|0,0,24)|0;r=oh(cb|f|h|r|0,Ja|C|0,7)|0;Ja=C;h=a[q+2>>0]|0;f=d[q>>0]|0;cb=ph(d[q+1>>0]|0|0,0,8)|0;ha=C;h=h&255;ga=ph(h|0,0,16)|0;ga=cb|f|ga&2031616;f=ph(d[q+3>>0]|0|0,0,8)|0;cb=C;ka=ph(d[q+4>>0]|0|0,0,16)|0;cb=cb|C;p=d[q+5>>0]|0;yc=ph(p|0,0,24)|0;cb=oh(f|h|ka|yc|0,cb|C|0,5)|0;cb=cb&2097151;yc=a[q+7>>0]|0;ka=ph(d[q+6>>0]|0|0,0,8)|0;h=C;yc=yc&255;f=ph(yc|0,0,16)|0;h=oh(ka|p|f|0,h|C|0,2)|0;h=h&2097151;f=ph(d[q+8>>0]|0|0,0,8)|0;p=C;ka=ph(d[q+9>>0]|0|0,0,16)|0;p=p|C;Za=d[q+10>>0]|0;Oa=ph(Za|0,0,24)|0;p=oh(f|yc|ka|Oa|0,p|C|0,7)|0;p=p&2097151;Oa=ph(d[q+11>>0]|0|0,0,8)|0;ka=C;yc=ph(d[q+12>>0]|0|0,0,16)|0;ka=ka|C;f=d[q+13>>0]|0;Gc=ph(f|0,0,24)|0;ka=oh(Oa|Za|yc|Gc|0,ka|C|0,4)|0;ka=ka&2097151;Gc=a[q+15>>0]|0;yc=ph(d[q+14>>0]|0|0,0,8)|0;Za=C;Gc=Gc&255;Oa=ph(Gc|0,0,16)|0;Za=oh(yc|f|Oa|0,Za|C|0,1)|0;Za=Za&2097151;Oa=ph(d[q+16>>0]|0|0,0,8)|0;f=C;yc=ph(d[q+17>>0]|0|0,0,16)|0;f=f|C;Q=d[q+18>>0]|0;Ab=ph(Q|0,0,24)|0;f=oh(Oa|Gc|yc|Ab|0,f|C|0,6)|0;f=f&2097151;Ab=a[q+20>>0]|0;yc=ph(d[q+19>>0]|0|0,0,8)|0;Gc=C;Ab=ph(Ab&255|0,0,16)|0;Gc=oh(yc|Q|Ab|0,Gc|C|0,3)|0;Ab=C;Q=a[q+23>>0]|0;yc=d[q+21>>0]|0;Oa=ph(d[q+22>>0]|0|0,0,8)|0;Ca=C;Q=Q&255;ta=ph(Q|0,0,16)|0;ta=Oa|yc|ta&2031616;yc=ph(d[q+24>>0]|0|0,0,8)|0;Oa=C;La=ph(d[q+25>>0]|0|0,0,16)|0;Oa=Oa|C;Ha=d[q+26>>0]|0;zc=ph(Ha|0,0,24)|0;Oa=oh(yc|Q|La|zc|0,Oa|C|0,5)|0;Oa=Oa&2097151;zc=a[q+28>>0]|0;La=ph(d[q+27>>0]|0|0,0,8)|0;Q=C;zc=zc&255;yc=ph(zc|0,0,16)|0;Q=oh(La|Ha|yc|0,Q|C|0,2)|0;Q=Q&2097151;yc=ph(d[q+29>>0]|0|0,0,8)|0;Ha=C;La=ph(d[q+30>>0]|0|0,0,16)|0;Ha=Ha|C;k=ph(d[k>>0]|0|0,0,24)|0;k=oh(yc|zc|La|k|0,Ha|C|0,7)|0;Ha=C;La=a[t+2>>0]|0;zc=d[t>>0]|0;yc=ph(d[t+1>>0]|0|0,0,8)|0;aa=C;La=La&255;Ac=ph(La|0,0,16)|0;Wa=ph(d[t+3>>0]|0|0,0,8)|0;Da=C;Fa=ph(d[t+4>>0]|0|0,0,16)|0;Da=Da|C;ob=d[t+5>>0]|0;ya=ph(ob|0,0,24)|0;Da=oh(Wa|La|Fa|ya|0,Da|C|0,5)|0;ya=a[t+7>>0]|0;Fa=ph(d[t+6>>0]|0|0,0,8)|0;La=C;ya=ya&255;Wa=ph(ya|0,0,16)|0;La=oh(Fa|ob|Wa|0,La|C|0,2)|0;Wa=ph(d[t+8>>0]|0|0,0,8)|0;ob=C;Fa=ph(d[t+9>>0]|0|0,0,16)|0;ob=ob|C;W=d[t+10>>0]|0;N=ph(W|0,0,24)|0;ob=oh(Wa|ya|Fa|N|0,ob|C|0,7)|0;N=ph(d[t+11>>0]|0|0,0,8)|0;Fa=C;ya=ph(d[t+12>>0]|0|0,0,16)|0;Fa=Fa|C;Wa=d[t+13>>0]|0;G=ph(Wa|0,0,24)|0;Fa=oh(N|W|ya|G|0,Fa|C|0,4)|0;G=a[t+15>>0]|0;ya=ph(d[t+14>>0]|0|0,0,8)|0;W=C;G=G&255;N=ph(G|0,0,16)|0;W=oh(ya|Wa|N|0,W|C|0,1)|0;N=ph(d[t+16>>0]|0|0,0,8)|0;Wa=C;ya=ph(d[t+17>>0]|0|0,0,16)|0;Wa=Wa|C;T=d[t+18>>0]|0;w=ph(T|0,0,24)|0;Wa=oh(N|G|ya|w|0,Wa|C|0,6)|0;w=a[t+20>>0]|0;ya=ph(d[t+19>>0]|0|0,0,8)|0;G=C;w=ph(w&255|0,0,16)|0;G=oh(ya|T|w|0,G|C|0,3)|0;w=C;T=a[t+23>>0]|0;ya=d[t+21>>0]|0;N=ph(d[t+22>>0]|0|0,0,8)|0;ca=C;T=T&255;da=ph(T|0,0,16)|0;Aa=ph(d[t+24>>0]|0|0,0,8)|0;M=C;Ga=ph(d[t+25>>0]|0|0,0,16)|0;M=M|C;A=d[t+26>>0]|0;sa=ph(A|0,0,24)|0;M=oh(Aa|T|Ga|sa|0,M|C|0,5)|0;sa=a[t+28>>0]|0;Ga=ph(d[t+27>>0]|0|0,0,8)|0;T=C;sa=sa&255;Aa=ph(sa|0,0,16)|0;T=oh(Ga|A|Aa|0,T|C|0,2)|0;Aa=ph(d[t+29>>0]|0|0,0,8)|0;A=C;Ga=ph(d[t+30>>0]|0|0,0,16)|0;A=A|C;j=ph(d[t+31>>0]|0|0,0,24)|0;A=oh(Aa|sa|Ga|j|0,A|C|0,7)|0;j=C;Ga=wh(ga|0,ha|0,jb|0,pb|0)|0;Ga=lh(yc|zc|Ac&2031616|0,aa|0,Ga|0,C|0)|0;aa=C;Ac=wh(cb|0,0,jb|0,pb|0)|0;zc=C;yc=wh(ga|0,ha|0,wb|0,0)|0;sa=C;Aa=wh(h|0,0,jb|0,pb|0)|0;Ka=C;Ba=wh(cb|0,0,wb|0,0)|0;qc=C;oa=wh(ga|0,ha|0,I|0,0)|0;oa=lh(Ba|0,qc|0,oa|0,C|0)|0;Ka=lh(oa|0,C|0,Aa|0,Ka|0)|0;La=lh(Ka|0,C|0,La&2097151|0,0)|0;Ka=C;Aa=wh(p|0,0,jb|0,pb|0)|0;oa=C;qc=wh(h|0,0,wb|0,0)|0;Ba=C;xc=wh(cb|0,0,I|0,0)|0;vc=C;sc=wh(ga|0,ha|0,tb|0,0)|0;rc=C;Na=wh(ka|0,0,jb|0,pb|0)|0;Ea=C;hc=wh(p|0,0,wb|0,0)|0;X=C;jc=wh(h|0,0,I|0,0)|0;Ma=C;kc=wh(cb|0,0,tb|0,0)|0;lc=C;ic=wh(ga|0,ha|0,E|0,0)|0;ic=lh(kc|0,lc|0,ic|0,C|0)|0;Ma=lh(ic|0,C|0,jc|0,Ma|0)|0;X=lh(Ma|0,C|0,hc|0,X|0)|0;Ea=lh(X|0,C|0,Na|0,Ea|0)|0;Fa=lh(Ea|0,C|0,Fa&2097151|0,0)|0;Ea=C;Na=wh(Za|0,0,jb|0,pb|0)|0;X=C;hc=wh(ka|0,0,wb|0,0)|0;Ma=C;jc=wh(p|0,0,I|0,0)|0;ic=C;lc=wh(h|0,0,tb|0,0)|0;kc=C;pc=wh(cb|0,0,E|0,0)|0;oc=C;nc=wh(ga|0,ha|0,v|0,0)|0;mc=C;ba=wh(f|0,0,jb|0,pb|0)|0;Xa=C;Wb=wh(Za|0,0,wb|0,0)|0;ja=C;Yb=wh(ka|0,0,I|0,0)|0;Vb=C;_b=wh(p|0,0,tb|0,0)|0;Xb=C;ac=wh(h|0,0,E|0,0)|0;Zb=C;bc=wh(cb|0,0,v|0,0)|0;cc=C;$b=wh(ga|0,ha|0,Sa|0,0)|0;$b=lh(bc|0,cc|0,$b|0,C|0)|0;Zb=lh($b|0,C|0,ac|0,Zb|0)|0;Xb=lh(Zb|0,C|0,_b|0,Xb|0)|0;Vb=lh(Xb|0,C|0,Yb|0,Vb|0)|0;ja=lh(Vb|0,C|0,Wb|0,ja|0)|0;Xa=lh(ja|0,C|0,ba|0,Xa|0)|0;Wa=lh(Xa|0,C|0,Wa&2097151|0,0)|0;Xa=C;ba=wh(Gc|0,Ab|0,jb|0,pb|0)|0;ja=C;Wb=wh(f|0,0,wb|0,0)|0;Vb=C;Yb=wh(Za|0,0,I|0,0)|0;Xb=C;_b=wh(ka|0,0,tb|0,0)|0;Zb=C;ac=wh(p|0,0,E|0,0)|0;$b=C;cc=wh(h|0,0,v|0,0)|0;bc=C;gc=wh(cb|0,0,Sa|0,0)|0;fc=C;ec=wh(ga|0,ha|0,y|0,ia|0)|0;dc=C;za=wh(ta|0,Ca|0,jb|0,pb|0)|0;Eb=C;Fb=wh(Gc|0,Ab|0,wb|0,0)|0;Gb=C;Hb=wh(f|0,0,I|0,0)|0;Ib=C;Jb=wh(Za|0,0,tb|0,0)|0;Kb=C;Lb=wh(ka|0,0,E|0,0)|0;Mb=C;Nb=wh(p|0,0,v|0,0)|0;Ob=C;Pb=wh(h|0,0,Sa|0,0)|0;Qb=C;Sb=wh(cb|0,0,y|0,ia|0)|0;Tb=C;Ub=wh(ga|0,ha|0,Pa|0,rb|0)|0;Ub=lh(Sb|0,Tb|0,Ub|0,C|0)|0;Qb=lh(Ub|0,C|0,Pb|0,Qb|0)|0;Ob=lh(Qb|0,C|0,Nb|0,Ob|0)|0;Mb=lh(Ob|0,C|0,Lb|0,Mb|0)|0;Kb=lh(Mb|0,C|0,Jb|0,Kb|0)|0;Ib=lh(Kb|0,C|0,Hb|0,Ib|0)|0;Gb=lh(Ib|0,C|0,Fb|0,Gb|0)|0;Eb=lh(Gb|0,C|0,za|0,Eb|0)|0;ca=lh(Eb|0,C|0,N|ya|da&2031616|0,ca|0)|0;da=C;ya=wh(Oa|0,0,jb|0,pb|0)|0;N=C;Eb=wh(ta|0,Ca|0,wb|0,0)|0;za=C;Gb=wh(Gc|0,Ab|0,I|0,0)|0;Fb=C;Ib=wh(f|0,0,tb|0,0)|0;Hb=C;Kb=wh(Za|0,0,E|0,0)|0;Jb=C;Mb=wh(ka|0,0,v|0,0)|0;Lb=C;Ob=wh(p|0,0,Sa|0,0)|0;Nb=C;Qb=wh(h|0,0,y|0,ia|0)|0;Pb=C;Ub=wh(cb|0,0,Pa|0,rb|0)|0;Tb=C;Sb=wh(ga|0,ha|0,Ra|0,0)|0;Rb=C;U=wh(Q|0,0,jb|0,pb|0)|0;S=C;gb=wh(Oa|0,0,wb|0,0)|0;V=C;H=wh(ta|0,Ca|0,I|0,0)|0;hb=C;ub=wh(Gc|0,Ab|0,tb|0,0)|0;D=C;P=wh(f|0,0,E|0,0)|0;vb=C;Ua=wh(Za|0,0,v|0,0)|0;J=C;mb=wh(ka|0,0,Sa|0,0)|0;Va=C;_=wh(p|0,0,y|0,ia|0)|0;nb=C;ab=wh(h|0,0,Pa|0,rb|0)|0;$=C;Cb=wh(cb|0,0,Ra|0,0)|0;Db=C;bb=wh(ga|0,ha|0,Bc|0,0)|0;bb=lh(Cb|0,Db|0,bb|0,C|0)|0;$=lh(bb|0,C|0,ab|0,$|0)|0;nb=lh($|0,C|0,_|0,nb|0)|0;Va=lh(nb|0,C|0,mb|0,Va|0)|0;J=lh(Va|0,C|0,Ua|0,J|0)|0;vb=lh(J|0,C|0,P|0,vb|0)|0;D=lh(vb|0,C|0,ub|0,D|0)|0;hb=lh(D|0,C|0,H|0,hb|0)|0;V=lh(hb|0,C|0,gb|0,V|0)|0;S=lh(V|0,C|0,U|0,S|0)|0;T=lh(S|0,C|0,T&2097151|0,0)|0;S=C;pb=wh(k|0,Ha|0,jb|0,pb|0)|0;jb=C;U=wh(Q|0,0,wb|0,0)|0;V=C;gb=wh(Oa|0,0,I|0,0)|0;hb=C;H=wh(ta|0,Ca|0,tb|0,0)|0;D=C;ub=wh(Gc|0,Ab|0,E|0,0)|0;vb=C;P=wh(f|0,0,v|0,0)|0;J=C;Ua=wh(Za|0,0,Sa|0,0)|0;Va=C;mb=wh(ka|0,0,y|0,ia|0)|0;nb=C;_=wh(p|0,0,Pa|0,rb|0)|0;$=C;ab=wh(h|0,0,Ra|0,0)|0;bb=C;Db=wh(cb|0,0,Bc|0,0)|0;Cb=C;ha=wh(ga|0,ha|0,r|0,Ja|0)|0;ga=C;wb=wh(k|0,Ha|0,wb|0,0)|0;xb=C;kb=wh(Q|0,0,I|0,0)|0;F=C;la=wh(Oa|0,0,tb|0,0)|0;lb=C;na=wh(ta|0,Ca|0,E|0,0)|0;fa=C;yb=wh(Gc|0,Ab|0,v|0,0)|0;qb=C;ra=wh(f|0,0,Sa|0,0)|0;zb=C;wa=wh(Za|0,0,y|0,ia|0)|0;qa=C;Ta=wh(ka|0,0,Pa|0,rb|0)|0;va=C;db=wh(p|0,0,Ra|0,0)|0;ma=C;sb=wh(h|0,0,Bc|0,0)|0;m=C;cb=wh(cb|0,0,r|0,Ja|0)|0;cb=lh(sb|0,m|0,cb|0,C|0)|0;ma=lh(cb|0,C|0,db|0,ma|0)|0;va=lh(ma|0,C|0,Ta|0,va|0)|0;qa=lh(va|0,C|0,wa|0,qa|0)|0;zb=lh(qa|0,C|0,ra|0,zb|0)|0;qb=lh(zb|0,C|0,yb|0,qb|0)|0;fa=lh(qb|0,C|0,na|0,fa|0)|0;lb=lh(fa|0,C|0,la|0,lb|0)|0;F=lh(lb|0,C|0,kb|0,F|0)|0;xb=lh(F|0,C|0,wb|0,xb|0)|0;wb=C;I=wh(k|0,Ha|0,I|0,0)|0;F=C;kb=wh(Q|0,0,tb|0,0)|0;lb=C;la=wh(Oa|0,0,E|0,0)|0;fa=C;na=wh(ta|0,Ca|0,v|0,0)|0;qb=C;yb=wh(Gc|0,Ab|0,Sa|0,0)|0;zb=C;ra=wh(f|0,0,y|0,ia|0)|0;qa=C;wa=wh(Za|0,0,Pa|0,rb|0)|0;va=C;Ta=wh(ka|0,0,Ra|0,0)|0;ma=C;db=wh(p|0,0,Bc|0,0)|0;cb=C;h=wh(h|0,0,r|0,Ja|0)|0;m=C;tb=wh(k|0,Ha|0,tb|0,0)|0;sb=C;eb=wh(Q|0,0,E|0,0)|0;g=C;K=wh(Oa|0,0,v|0,0)|0;fb=C;s=wh(ta|0,Ca|0,Sa|0,0)|0;n=C;ea=wh(Gc|0,Ab|0,y|0,ia|0)|0;x=C;pa=wh(f|0,0,Pa|0,rb|0)|0;l=C;ua=wh(Za|0,0,Ra|0,0)|0;L=C;Bb=wh(ka|0,0,Bc|0,0)|0;t=C;p=wh(p|0,0,r|0,Ja|0)|0;p=lh(Bb|0,t|0,p|0,C|0)|0;L=lh(p|0,C|0,ua|0,L|0)|0;l=lh(L|0,C|0,pa|0,l|0)|0;x=lh(l|0,C|0,ea|0,x|0)|0;n=lh(x|0,C|0,s|0,n|0)|0;fb=lh(n|0,C|0,K|0,fb|0)|0;g=lh(fb|0,C|0,eb|0,g|0)|0;sb=lh(g|0,C|0,tb|0,sb|0)|0;tb=C;E=wh(k|0,Ha|0,E|0,0)|0;g=C;eb=wh(Q|0,0,v|0,0)|0;fb=C;K=wh(Oa|0,0,Sa|0,0)|0;n=C;s=wh(ta|0,Ca|0,y|0,ia|0)|0;x=C;ea=wh(Gc|0,Ab|0,Pa|0,rb|0)|0;l=C;pa=wh(f|0,0,Ra|0,0)|0;L=C;ua=wh(Za|0,0,Bc|0,0)|0;p=C;ka=wh(ka|0,0,r|0,Ja|0)|0;t=C;v=wh(k|0,Ha|0,v|0,0)|0;Bb=C;B=wh(Q|0,0,Sa|0,0)|0;R=C;Z=wh(Oa|0,0,y|0,ia|0)|0;Qa=C;$a=wh(ta|0,Ca|0,Pa|0,rb|0)|0;Y=C;Ya=wh(Gc|0,Ab|0,Ra|0,0)|0;_a=C;O=wh(f|0,0,Bc|0,0)|0;u=C;Za=wh(Za|0,0,r|0,Ja|0)|0;Za=lh(O|0,u|0,Za|0,C|0)|0;_a=lh(Za|0,C|0,Ya|0,_a|0)|0;Y=lh(_a|0,C|0,$a|0,Y|0)|0;Qa=lh(Y|0,C|0,Z|0,Qa|0)|0;R=lh(Qa|0,C|0,B|0,R|0)|0;Bb=lh(R|0,C|0,v|0,Bb|0)|0;v=C;Sa=wh(k|0,Ha|0,Sa|0,0)|0;R=C;B=wh(Q|0,0,y|0,ia|0)|0;Qa=C;Z=wh(Oa|0,0,Pa|0,rb|0)|0;Y=C;$a=wh(ta|0,Ca|0,Ra|0,0)|0;_a=C;Ya=wh(Gc|0,Ab|0,Bc|0,0)|0;Za=C;f=wh(f|0,0,r|0,Ja|0)|0;u=C;ia=wh(k|0,Ha|0,y|0,ia|0)|0;y=C;O=wh(Q|0,0,Pa|0,rb|0)|0;Ia=C;xa=wh(Oa|0,0,Ra|0,0)|0;ib=C;Dc=wh(ta|0,Ca|0,Bc|0,0)|0;Fc=C;Ab=wh(Gc|0,Ab|0,r|0,Ja|0)|0;Ab=lh(Dc|0,Fc|0,Ab|0,C|0)|0;ib=lh(Ab|0,C|0,xa|0,ib|0)|0;Ia=lh(ib|0,C|0,O|0,Ia|0)|0;y=lh(Ia|0,C|0,ia|0,y|0)|0;ia=C;rb=wh(k|0,Ha|0,Pa|0,rb|0)|0;Pa=C;Ia=wh(Q|0,0,Ra|0,0)|0;O=C;ib=wh(Oa|0,0,Bc|0,0)|0;xa=C;Ca=wh(ta|0,Ca|0,r|0,Ja|0)|0;ta=C;Ra=wh(k|0,Ha|0,Ra|0,0)|0;Ab=C;Fc=wh(Q|0,0,Bc|0,0)|0;Dc=C;Oa=wh(Oa|0,0,r|0,Ja|0)|0;Oa=lh(Fc|0,Dc|0,Oa|0,C|0)|0;Ab=lh(Oa|0,C|0,Ra|0,Ab|0)|0;Ra=C;Bc=wh(k|0,Ha|0,Bc|0,0)|0;Oa=C;Q=wh(Q|0,0,r|0,Ja|0)|0;Q=lh(Bc|0,Oa|0,Q|0,C|0)|0;Oa=C;Ja=wh(k|0,Ha|0,r|0,Ja|0)|0;r=C;Ha=lh(Ga|0,aa|0,1048576,0)|0;Ha=oh(Ha|0,C|0,21)|0;k=C;sa=lh(Ac|0,zc|0,yc|0,sa|0)|0;sa=lh(sa|0,C|0,Ha|0,k|0)|0;Da=lh(sa|0,C|0,Da&2097151|0,0)|0;sa=C;k=ph(Ha|0,k|0,21)|0;k=kh(Ga|0,aa|0,k|0,C|0)|0;aa=C;Ga=lh(La|0,Ka|0,1048576,0)|0;Ga=oh(Ga|0,C|0,21)|0;Ha=C;rc=lh(xc|0,vc|0,sc|0,rc|0)|0;Ba=lh(rc|0,C|0,qc|0,Ba|0)|0;oa=lh(Ba|0,C|0,Aa|0,oa|0)|0;ob=lh(oa|0,C|0,ob&2097151|0,0)|0;ob=lh(ob|0,C|0,Ga|0,Ha|0)|0;oa=C;Ha=ph(Ga|0,Ha|0,21)|0;Ga=C;Aa=lh(Fa|0,Ea|0,1048576,0)|0;Aa=mh(Aa|0,C|0,21)|0;Ba=C;mc=lh(pc|0,oc|0,nc|0,mc|0)|0;kc=lh(mc|0,C|0,lc|0,kc|0)|0;ic=lh(kc|0,C|0,jc|0,ic|0)|0;Ma=lh(ic|0,C|0,hc|0,Ma|0)|0;X=lh(Ma|0,C|0,Na|0,X|0)|0;W=lh(X|0,C|0,W&2097151|0,0)|0;W=lh(W|0,C|0,Aa|0,Ba|0)|0;X=C;Ba=ph(Aa|0,Ba|0,21)|0;Aa=C;Na=lh(Wa|0,Xa|0,1048576,0)|0;Na=mh(Na|0,C|0,21)|0;Ma=C;dc=lh(gc|0,fc|0,ec|0,dc|0)|0;bc=lh(dc|0,C|0,cc|0,bc|0)|0;$b=lh(bc|0,C|0,ac|0,$b|0)|0;Zb=lh($b|0,C|0,_b|0,Zb|0)|0;Xb=lh(Zb|0,C|0,Yb|0,Xb|0)|0;Vb=lh(Xb|0,C|0,Wb|0,Vb|0)|0;ja=lh(Vb|0,C|0,ba|0,ja|0)|0;w=lh(ja|0,C|0,G|0,w|0)|0;w=lh(w|0,C|0,Na|0,Ma|0)|0;G=C;Ma=ph(Na|0,Ma|0,21)|0;Na=C;ja=lh(ca|0,da|0,1048576,0)|0;ja=mh(ja|0,C|0,21)|0;ba=C;Rb=lh(Ub|0,Tb|0,Sb|0,Rb|0)|0;Pb=lh(Rb|0,C|0,Qb|0,Pb|0)|0;Nb=lh(Pb|0,C|0,Ob|0,Nb|0)|0;Lb=lh(Nb|0,C|0,Mb|0,Lb|0)|0;Jb=lh(Lb|0,C|0,Kb|0,Jb|0)|0;Hb=lh(Jb|0,C|0,Ib|0,Hb|0)|0;Fb=lh(Hb|0,C|0,Gb|0,Fb|0)|0;za=lh(Fb|0,C|0,Eb|0,za|0)|0;N=lh(za|0,C|0,ya|0,N|0)|0;M=lh(N|0,C|0,M&2097151|0,0)|0;M=lh(M|0,C|0,ja|0,ba|0)|0;N=C;ba=ph(ja|0,ba|0,21)|0;ja=C;ya=lh(T|0,S|0,1048576,0)|0;ya=mh(ya|0,C|0,21)|0;za=C;ga=lh(Db|0,Cb|0,ha|0,ga|0)|0;bb=lh(ga|0,C|0,ab|0,bb|0)|0;$=lh(bb|0,C|0,_|0,$|0)|0;nb=lh($|0,C|0,mb|0,nb|0)|0;Va=lh(nb|0,C|0,Ua|0,Va|0)|0;J=lh(Va|0,C|0,P|0,J|0)|0;vb=lh(J|0,C|0,ub|0,vb|0)|0;D=lh(vb|0,C|0,H|0,D|0)|0;hb=lh(D|0,C|0,gb|0,hb|0)|0;V=lh(hb|0,C|0,U|0,V|0)|0;jb=lh(V|0,C|0,pb|0,jb|0)|0;j=lh(jb|0,C|0,A|0,j|0)|0;j=lh(j|0,C|0,ya|0,za|0)|0;A=C;za=ph(ya|0,za|0,21)|0;ya=C;jb=lh(xb|0,wb|0,1048576,0)|0;jb=mh(jb|0,C|0,21)|0;pb=C;m=lh(db|0,cb|0,h|0,m|0)|0;ma=lh(m|0,C|0,Ta|0,ma|0)|0;va=lh(ma|0,C|0,wa|0,va|0)|0;qa=lh(va|0,C|0,ra|0,qa|0)|0;zb=lh(qa|0,C|0,yb|0,zb|0)|0;qb=lh(zb|0,C|0,na|0,qb|0)|0;fa=lh(qb|0,C|0,la|0,fa|0)|0;lb=lh(fa|0,C|0,kb|0,lb|0)|0;F=lh(lb|0,C|0,I|0,F|0)|0;F=lh(F|0,C|0,jb|0,pb|0)|0;I=C;pb=ph(jb|0,pb|0,21)|0;jb=C;lb=lh(sb|0,tb|0,1048576,0)|0;lb=mh(lb|0,C|0,21)|0;kb=C;t=lh(ua|0,p|0,ka|0,t|0)|0;L=lh(t|0,C|0,pa|0,L|0)|0;l=lh(L|0,C|0,ea|0,l|0)|0;x=lh(l|0,C|0,s|0,x|0)|0;n=lh(x|0,C|0,K|0,n|0)|0;fb=lh(n|0,C|0,eb|0,fb|0)|0;g=lh(fb|0,C|0,E|0,g|0)|0;g=lh(g|0,C|0,lb|0,kb|0)|0;E=C;kb=ph(lb|0,kb|0,21)|0;lb=C;fb=lh(Bb|0,v|0,1048576,0)|0;fb=mh(fb|0,C|0,21)|0;eb=C;u=lh(Ya|0,Za|0,f|0,u|0)|0;_a=lh(u|0,C|0,$a|0,_a|0)|0;Y=lh(_a|0,C|0,Z|0,Y|0)|0;Qa=lh(Y|0,C|0,B|0,Qa|0)|0;R=lh(Qa|0,C|0,Sa|0,R|0)|0;R=lh(R|0,C|0,fb|0,eb|0)|0;Sa=C;eb=ph(fb|0,eb|0,21)|0;fb=C;Qa=lh(y|0,ia|0,1048576,0)|0;Qa=mh(Qa|0,C|0,21)|0;B=C;ta=lh(ib|0,xa|0,Ca|0,ta|0)|0;O=lh(ta|0,C|0,Ia|0,O|0)|0;Pa=lh(O|0,C|0,rb|0,Pa|0)|0;Pa=lh(Pa|0,C|0,Qa|0,B|0)|0;rb=C;B=ph(Qa|0,B|0,21)|0;B=kh(y|0,ia|0,B|0,C|0)|0;ia=C;y=lh(Ab|0,Ra|0,1048576,0)|0;y=mh(y|0,C|0,21)|0;Qa=C;Oa=lh(Q|0,Oa|0,y|0,Qa|0)|0;Q=C;Qa=ph(y|0,Qa|0,21)|0;Qa=kh(Ab|0,Ra|0,Qa|0,C|0)|0;Ra=C;Ab=lh(Ja|0,r|0,1048576,0)|0;Ab=mh(Ab|0,C|0,21)|0;y=C;O=ph(Ab|0,y|0,21)|0;O=kh(Ja|0,r|0,O|0,C|0)|0;r=C;Ja=lh(Da|0,sa|0,1048576,0)|0;Ja=oh(Ja|0,C|0,21)|0;Ia=C;ta=ph(Ja|0,Ia|0,21)|0;ta=kh(Da|0,sa|0,ta|0,C|0)|0;sa=C;Da=lh(ob|0,oa|0,1048576,0)|0;Da=mh(Da|0,C|0,21)|0;Ca=C;xa=ph(Da|0,Ca|0,21)|0;xa=kh(ob|0,oa|0,xa|0,C|0)|0;oa=C;ob=lh(W|0,X|0,1048576,0)|0;ob=mh(ob|0,C|0,21)|0;ib=C;Y=ph(ob|0,ib|0,21)|0;Z=C;_a=lh(w|0,G|0,1048576,0)|0;_a=mh(_a|0,C|0,21)|0;$a=C;u=ph(_a|0,$a|0,21)|0;f=C;Za=lh(M|0,N|0,1048576,0)|0;Za=mh(Za|0,C|0,21)|0;Ya=C;n=ph(Za|0,Ya|0,21)|0;K=C;x=lh(j|0,A|0,1048576,0)|0;x=mh(x|0,C|0,21)|0;s=C;l=ph(x|0,s|0,21)|0;ea=C;L=lh(F|0,I|0,1048576,0)|0;L=mh(L|0,C|0,21)|0;pa=C;t=ph(L|0,pa|0,21)|0;ka=C;p=lh(g|0,E|0,1048576,0)|0;p=mh(p|0,C|0,21)|0;ua=C;fa=ph(p|0,ua|0,21)|0;la=C;qb=lh(R|0,Sa|0,1048576,0)|0;qb=mh(qb|0,C|0,21)|0;na=C;ia=lh(qb|0,na|0,B|0,ia|0)|0;B=C;na=ph(qb|0,na|0,21)|0;na=kh(R|0,Sa|0,na|0,C|0)|0;Sa=C;R=lh(Pa|0,rb|0,1048576,0)|0;R=mh(R|0,C|0,21)|0;qb=C;Ra=lh(R|0,qb|0,Qa|0,Ra|0)|0;Qa=C;qb=ph(R|0,qb|0,21)|0;qb=kh(Pa|0,rb|0,qb|0,C|0)|0;rb=C;Pa=lh(Oa|0,Q|0,1048576,0)|0;Pa=mh(Pa|0,C|0,21)|0;R=C;r=lh(Pa|0,R|0,O|0,r|0)|0;O=C;R=ph(Pa|0,R|0,21)|0;R=kh(Oa|0,Q|0,R|0,C|0)|0;Q=C;Oa=wh(Ab|0,y|0,666643,0)|0;Pa=C;zb=wh(Ab|0,y|0,470296,0)|0;yb=C;qa=wh(Ab|0,y|0,654183,0)|0;ra=C;va=wh(Ab|0,y|0,-997805,-1)|0;wa=C;ma=wh(Ab|0,y|0,136657,0)|0;Ta=C;y=wh(Ab|0,y|0,-683901,-1)|0;y=lh(Bb|0,v|0,y|0,C|0)|0;fb=kh(y|0,C|0,eb|0,fb|0)|0;ua=lh(fb|0,C|0,p|0,ua|0)|0;p=C;fb=wh(r|0,O|0,666643,0)|0;eb=C;y=wh(r|0,O|0,470296,0)|0;v=C;Bb=wh(r|0,O|0,654183,0)|0;Ab=C;m=wh(r|0,O|0,-997805,-1)|0;h=C;cb=wh(r|0,O|0,136657,0)|0;db=C;O=wh(r|0,O|0,-683901,-1)|0;r=C;V=wh(R|0,Q|0,666643,0)|0;U=C;hb=wh(R|0,Q|0,470296,0)|0;gb=C;D=wh(R|0,Q|0,654183,0)|0;H=C;vb=wh(R|0,Q|0,-997805,-1)|0;ub=C;J=wh(R|0,Q|0,136657,0)|0;P=C;Q=wh(R|0,Q|0,-683901,-1)|0;R=C;wa=lh(sb|0,tb|0,va|0,wa|0)|0;db=lh(wa|0,C|0,cb|0,db|0)|0;R=lh(db|0,C|0,Q|0,R|0)|0;lb=kh(R|0,C|0,kb|0,lb|0)|0;pa=lh(lb|0,C|0,L|0,pa|0)|0;L=C;lb=wh(Ra|0,Qa|0,666643,0)|0;kb=C;R=wh(Ra|0,Qa|0,470296,0)|0;Q=C;db=wh(Ra|0,Qa|0,654183,0)|0;cb=C;wa=wh(Ra|0,Qa|0,-997805,-1)|0;va=C;tb=wh(Ra|0,Qa|0,136657,0)|0;sb=C;Qa=wh(Ra|0,Qa|0,-683901,-1)|0;Ra=C;Va=wh(qb|0,rb|0,666643,0)|0;Ua=C;nb=wh(qb|0,rb|0,470296,0)|0;mb=C;$=wh(qb|0,rb|0,654183,0)|0;_=C;bb=wh(qb|0,rb|0,-997805,-1)|0;ab=C;ga=wh(qb|0,rb|0,136657,0)|0;ha=C;rb=wh(qb|0,rb|0,-683901,-1)|0;qb=C;yb=lh(Bb|0,Ab|0,zb|0,yb|0)|0;wb=lh(yb|0,C|0,xb|0,wb|0)|0;ub=lh(wb|0,C|0,vb|0,ub|0)|0;sb=lh(ub|0,C|0,tb|0,sb|0)|0;qb=lh(sb|0,C|0,rb|0,qb|0)|0;jb=kh(qb|0,C|0,pb|0,jb|0)|0;s=lh(jb|0,C|0,x|0,s|0)|0;x=C;jb=wh(ia|0,B|0,666643,0)|0;jb=lh(ob|0,ib|0,jb|0,C|0)|0;Xa=lh(jb|0,C|0,Wa|0,Xa|0)|0;Na=kh(Xa|0,C|0,Ma|0,Na|0)|0;Ma=C;Xa=wh(ia|0,B|0,470296,0)|0;Wa=C;jb=wh(ia|0,B|0,654183,0)|0;ib=C;kb=lh(nb|0,mb|0,lb|0,kb|0)|0;ib=lh(kb|0,C|0,jb|0,ib|0)|0;$a=lh(ib|0,C|0,_a|0,$a|0)|0;da=lh($a|0,C|0,ca|0,da|0)|0;ja=kh(da|0,C|0,ba|0,ja|0)|0;ba=C;da=wh(ia|0,B|0,-997805,-1)|0;ca=C;$a=wh(ia|0,B|0,136657,0)|0;_a=C;eb=lh(hb|0,gb|0,fb|0,eb|0)|0;cb=lh(eb|0,C|0,db|0,cb|0)|0;ab=lh(cb|0,C|0,bb|0,ab|0)|0;_a=lh(ab|0,C|0,$a|0,_a|0)|0;Ya=lh(_a|0,C|0,Za|0,Ya|0)|0;S=lh(Ya|0,C|0,T|0,S|0)|0;ya=kh(S|0,C|0,za|0,ya|0)|0;za=C;B=wh(ia|0,B|0,-683901,-1)|0;ia=C;S=lh(Na|0,Ma|0,1048576,0)|0;S=mh(S|0,C|0,21)|0;T=C;Ua=lh(Xa|0,Wa|0,Va|0,Ua|0)|0;G=lh(Ua|0,C|0,w|0,G|0)|0;f=kh(G|0,C|0,u|0,f|0)|0;f=lh(f|0,C|0,S|0,T|0)|0;u=C;T=ph(S|0,T|0,21)|0;S=C;G=lh(ja|0,ba|0,1048576,0)|0;G=mh(G|0,C|0,21)|0;w=C;U=lh(R|0,Q|0,V|0,U|0)|0;_=lh(U|0,C|0,$|0,_|0)|0;ca=lh(_|0,C|0,da|0,ca|0)|0;N=lh(ca|0,C|0,M|0,N|0)|0;K=kh(N|0,C|0,n|0,K|0)|0;K=lh(K|0,C|0,G|0,w|0)|0;n=C;w=ph(G|0,w|0,21)|0;G=C;N=lh(ya|0,za|0,1048576,0)|0;N=mh(N|0,C|0,21)|0;M=C;Pa=lh(y|0,v|0,Oa|0,Pa|0)|0;H=lh(Pa|0,C|0,D|0,H|0)|0;va=lh(H|0,C|0,wa|0,va|0)|0;ha=lh(va|0,C|0,ga|0,ha|0)|0;ia=lh(ha|0,C|0,B|0,ia|0)|0;A=lh(ia|0,C|0,j|0,A|0)|0;ea=kh(A|0,C|0,l|0,ea|0)|0;ea=lh(ea|0,C|0,N|0,M|0)|0;l=C;M=ph(N|0,M|0,21)|0;N=C;A=lh(s|0,x|0,1048576,0)|0;A=mh(A|0,C|0,21)|0;j=C;ra=lh(m|0,h|0,qa|0,ra|0)|0;P=lh(ra|0,C|0,J|0,P|0)|0;Ra=lh(P|0,C|0,Qa|0,Ra|0)|0;I=lh(Ra|0,C|0,F|0,I|0)|0;ka=kh(I|0,C|0,t|0,ka|0)|0;ka=lh(ka|0,C|0,A|0,j|0)|0;t=C;j=ph(A|0,j|0,21)|0;j=kh(s|0,x|0,j|0,C|0)|0;x=C;s=lh(pa|0,L|0,1048576,0)|0;s=mh(s|0,C|0,21)|0;A=C;Ta=lh(O|0,r|0,ma|0,Ta|0)|0;E=lh(Ta|0,C|0,g|0,E|0)|0;la=kh(E|0,C|0,fa|0,la|0)|0;la=lh(la|0,C|0,s|0,A|0)|0;fa=C;A=ph(s|0,A|0,21)|0;A=kh(pa|0,L|0,A|0,C|0)|0;L=C;pa=lh(ua|0,p|0,1048576,0)|0;pa=mh(pa|0,C|0,21)|0;s=C;Sa=lh(pa|0,s|0,na|0,Sa|0)|0;na=C;s=ph(pa|0,s|0,21)|0;s=kh(ua|0,p|0,s|0,C|0)|0;p=C;ua=lh(f|0,u|0,1048576,0)|0;ua=mh(ua|0,C|0,21)|0;pa=C;E=ph(ua|0,pa|0,21)|0;g=C;Ta=lh(K|0,n|0,1048576,0)|0;Ta=mh(Ta|0,C|0,21)|0;ma=C;r=ph(Ta|0,ma|0,21)|0;O=C;I=lh(ea|0,l|0,1048576,0)|0;I=mh(I|0,C|0,21)|0;F=C;x=lh(I|0,F|0,j|0,x|0)|0;j=C;F=ph(I|0,F|0,21)|0;F=kh(ea|0,l|0,F|0,C|0)|0;l=C;ea=lh(ka|0,t|0,1048576,0)|0;ea=mh(ea|0,C|0,21)|0;I=C;L=lh(ea|0,I|0,A|0,L|0)|0;A=C;I=ph(ea|0,I|0,21)|0;I=kh(ka|0,t|0,I|0,C|0)|0;t=C;ka=lh(la|0,fa|0,1048576,0)|0;ka=mh(ka|0,C|0,21)|0;ea=C;p=lh(ka|0,ea|0,s|0,p|0)|0;s=C;ea=ph(ka|0,ea|0,21)|0;ea=kh(la|0,fa|0,ea|0,C|0)|0;fa=C;la=wh(Sa|0,na|0,666643,0)|0;ka=C;Ra=wh(Sa|0,na|0,470296,0)|0;Qa=C;P=wh(Sa|0,na|0,654183,0)|0;J=C;ra=wh(Sa|0,na|0,-997805,-1)|0;qa=C;h=wh(Sa|0,na|0,136657,0)|0;m=C;na=wh(Sa|0,na|0,-683901,-1)|0;na=lh(Ta|0,ma|0,na|0,C|0)|0;za=lh(na|0,C|0,ya|0,za|0)|0;N=kh(za|0,C|0,M|0,N|0)|0;M=C;za=wh(p|0,s|0,666643,0)|0;ya=C;na=wh(p|0,s|0,470296,0)|0;ma=C;Ta=wh(p|0,s|0,654183,0)|0;Sa=C;ia=wh(p|0,s|0,-997805,-1)|0;B=C;ha=wh(p|0,s|0,136657,0)|0;ga=C;s=wh(p|0,s|0,-683901,-1)|0;p=C;va=wh(ea|0,fa|0,666643,0)|0;va=lh(xa|0,oa|0,va|0,C|0)|0;oa=C;xa=wh(ea|0,fa|0,470296,0)|0;wa=C;H=wh(ea|0,fa|0,654183,0)|0;D=C;Pa=wh(ea|0,fa|0,-997805,-1)|0;Oa=C;v=wh(ea|0,fa|0,136657,0)|0;y=C;fa=wh(ea|0,fa|0,-683901,-1)|0;ea=C;qa=lh(ha|0,ga|0,ra|0,qa|0)|0;ea=lh(qa|0,C|0,fa|0,ea|0)|0;pa=lh(ea|0,C|0,ua|0,pa|0)|0;ba=lh(pa|0,C|0,ja|0,ba|0)|0;G=kh(ba|0,C|0,w|0,G|0)|0;w=C;ba=wh(L|0,A|0,666643,0)|0;ja=C;pa=wh(L|0,A|0,470296,0)|0;pa=lh(va|0,oa|0,pa|0,C|0)|0;oa=C;va=wh(L|0,A|0,654183,0)|0;ua=C;ea=wh(L|0,A|0,-997805,-1)|0;fa=C;qa=wh(L|0,A|0,136657,0)|0;ra=C;A=wh(L|0,A|0,-683901,-1)|0;L=C;ga=wh(I|0,t|0,666643,0)|0;ha=C;ca=wh(I|0,t|0,470296,0)|0;da=C;_=wh(I|0,t|0,654183,0)|0;$=C;U=wh(I|0,t|0,-997805,-1)|0;V=C;Q=wh(I|0,t|0,136657,0)|0;R=C;t=wh(I|0,t|0,-683901,-1)|0;I=C;Qa=lh(Ta|0,Sa|0,Ra|0,Qa|0)|0;Oa=lh(Qa|0,C|0,Pa|0,Oa|0)|0;Ma=lh(Oa|0,C|0,Na|0,Ma|0)|0;S=kh(Ma|0,C|0,T|0,S|0)|0;ra=lh(S|0,C|0,qa|0,ra|0)|0;I=lh(ra|0,C|0,t|0,I|0)|0;t=C;ra=wh(x|0,j|0,666643,0)|0;aa=lh(ra|0,C|0,k|0,aa|0)|0;k=C;ra=wh(x|0,j|0,470296,0)|0;qa=C;S=wh(x|0,j|0,654183,0)|0;T=C;Ia=lh(La|0,Ka|0,Ja|0,Ia|0)|0;Ga=kh(Ia|0,C|0,Ha|0,Ga|0)|0;ja=lh(Ga|0,C|0,ba|0,ja|0)|0;T=lh(ja|0,C|0,S|0,T|0)|0;da=lh(T|0,C|0,ca|0,da|0)|0;ca=C;T=wh(x|0,j|0,-997805,-1)|0;S=C;ja=wh(x|0,j|0,136657,0)|0;ba=C;Ca=lh(Fa|0,Ea|0,Da|0,Ca|0)|0;Aa=kh(Ca|0,C|0,Ba|0,Aa|0)|0;ya=lh(Aa|0,C|0,za|0,ya|0)|0;wa=lh(ya|0,C|0,xa|0,wa|0)|0;ua=lh(wa|0,C|0,va|0,ua|0)|0;ba=lh(ua|0,C|0,ja|0,ba|0)|0;V=lh(ba|0,C|0,U|0,V|0)|0;U=C;j=wh(x|0,j|0,-683901,-1)|0;x=C;ba=lh(aa|0,k|0,1048576,0)|0;ba=mh(ba|0,C|0,21)|0;ja=C;qa=lh(ta|0,sa|0,ra|0,qa|0)|0;ha=lh(qa|0,C|0,ga|0,ha|0)|0;ha=lh(ha|0,C|0,ba|0,ja|0)|0;ga=C;ja=ph(ba|0,ja|0,21)|0;ja=kh(aa|0,k|0,ja|0,C|0)|0;k=C;aa=lh(da|0,ca|0,1048576,0)|0;aa=mh(aa|0,C|0,21)|0;ba=C;S=lh(pa|0,oa|0,T|0,S|0)|0;$=lh(S|0,C|0,_|0,$|0)|0;$=lh($|0,C|0,aa|0,ba|0)|0;_=C;ba=ph(aa|0,ba|0,21)|0;aa=C;S=lh(V|0,U|0,1048576,0)|0;S=mh(S|0,C|0,21)|0;T=C;ka=lh(na|0,ma|0,la|0,ka|0)|0;D=lh(ka|0,C|0,H|0,D|0)|0;X=lh(D|0,C|0,W|0,X|0)|0;Z=kh(X|0,C|0,Y|0,Z|0)|0;fa=lh(Z|0,C|0,ea|0,fa|0)|0;x=lh(fa|0,C|0,j|0,x|0)|0;R=lh(x|0,C|0,Q|0,R|0)|0;R=lh(R|0,C|0,S|0,T|0)|0;Q=C;T=ph(S|0,T|0,21)|0;S=C;x=lh(I|0,t|0,1048576,0)|0;x=mh(x|0,C|0,21)|0;j=C;J=lh(ia|0,B|0,P|0,J|0)|0;y=lh(J|0,C|0,v|0,y|0)|0;u=lh(y|0,C|0,f|0,u|0)|0;g=kh(u|0,C|0,E|0,g|0)|0;L=lh(g|0,C|0,A|0,L|0)|0;L=lh(L|0,C|0,x|0,j|0)|0;A=C;j=ph(x|0,j|0,21)|0;j=kh(I|0,t|0,j|0,C|0)|0;t=C;I=lh(G|0,w|0,1048576,0)|0;I=mh(I|0,C|0,21)|0;x=C;m=lh(s|0,p|0,h|0,m|0)|0;n=lh(m|0,C|0,K|0,n|0)|0;n=lh(n|0,C|0,I|0,x|0)|0;O=kh(n|0,C|0,r|0,O|0)|0;r=C;x=ph(I|0,x|0,21)|0;x=kh(G|0,w|0,x|0,C|0)|0;w=C;G=lh(N|0,M|0,1048576,0)|0;G=mh(G|0,C|0,21)|0;I=C;l=lh(F|0,l|0,G|0,I|0)|0;F=C;I=ph(G|0,I|0,21)|0;G=C;n=lh(ha|0,ga|0,1048576,0)|0;n=mh(n|0,C|0,21)|0;K=C;m=ph(n|0,K|0,21)|0;h=C;p=lh($|0,_|0,1048576,0)|0;p=mh(p|0,C|0,21)|0;s=C;g=ph(p|0,s|0,21)|0;E=C;u=lh(R|0,Q|0,1048576,0)|0;u=mh(u|0,C|0,21)|0;f=C;t=lh(j|0,t|0,u|0,f|0)|0;j=C;f=ph(u|0,f|0,21)|0;u=C;y=lh(L|0,A|0,1048576,0)|0;y=mh(y|0,C|0,21)|0;v=C;w=lh(x|0,w|0,y|0,v|0)|0;x=C;v=ph(y|0,v|0,21)|0;v=kh(L|0,A|0,v|0,C|0)|0;A=C;L=lh(O|0,r|0,1048576,0)|0;L=mh(L|0,C|0,21)|0;y=C;J=ph(L|0,y|0,21)|0;J=kh(O|0,r|0,J|0,C|0)|0;r=C;O=lh(l|0,F|0,1048576,0)|0;O=mh(O|0,C|0,21)|0;P=C;B=ph(O|0,P|0,21)|0;B=kh(l|0,F|0,B|0,C|0)|0;F=C;l=wh(O|0,P|0,666643,0)|0;l=lh(ja|0,k|0,l|0,C|0)|0;k=C;ja=wh(O|0,P|0,470296,0)|0;ia=C;fa=wh(O|0,P|0,654183,0)|0;ea=C;Z=wh(O|0,P|0,-997805,-1)|0;Y=C;X=wh(O|0,P|0,136657,0)|0;W=C;P=wh(O|0,P|0,-683901,-1)|0;O=C;D=mh(l|0,k|0,21)|0;H=C;ga=lh(ja|0,ia|0,ha|0,ga|0)|0;h=kh(ga|0,C|0,m|0,h|0)|0;h=lh(h|0,C|0,D|0,H|0)|0;m=C;H=ph(D|0,H|0,21)|0;H=kh(l|0,k|0,H|0,C|0)|0;k=C;l=mh(h|0,m|0,21)|0;D=C;ca=lh(fa|0,ea|0,da|0,ca|0)|0;aa=kh(ca|0,C|0,ba|0,aa|0)|0;K=lh(aa|0,C|0,n|0,K|0)|0;K=lh(K|0,C|0,l|0,D|0)|0;n=C;D=ph(l|0,D|0,21)|0;D=kh(h|0,m|0,D|0,C|0)|0;m=C;h=mh(K|0,n|0,21)|0;l=C;Y=lh($|0,_|0,Z|0,Y|0)|0;E=kh(Y|0,C|0,g|0,E|0)|0;E=lh(E|0,C|0,h|0,l|0)|0;g=C;l=ph(h|0,l|0,21)|0;l=kh(K|0,n|0,l|0,C|0)|0;n=C;K=mh(E|0,g|0,21)|0;h=C;U=lh(X|0,W|0,V|0,U|0)|0;S=kh(U|0,C|0,T|0,S|0)|0;s=lh(S|0,C|0,p|0,s|0)|0;s=lh(s|0,C|0,K|0,h|0)|0;p=C;h=ph(K|0,h|0,21)|0;h=kh(E|0,g|0,h|0,C|0)|0;g=C;E=mh(s|0,p|0,21)|0;K=C;O=lh(R|0,Q|0,P|0,O|0)|0;u=kh(O|0,C|0,f|0,u|0)|0;u=lh(u|0,C|0,E|0,K|0)|0;f=C;K=ph(E|0,K|0,21)|0;K=kh(s|0,p|0,K|0,C|0)|0;p=C;s=mh(u|0,f|0,21)|0;E=C;j=lh(t|0,j|0,s|0,E|0)|0;t=C;E=ph(s|0,E|0,21)|0;E=kh(u|0,f|0,E|0,C|0)|0;f=C;u=mh(j|0,t|0,21)|0;s=C;A=lh(u|0,s|0,v|0,A|0)|0;v=C;s=ph(u|0,s|0,21)|0;s=kh(j|0,t|0,s|0,C|0)|0;t=C;j=mh(A|0,v|0,21)|0;u=C;x=lh(w|0,x|0,j|0,u|0)|0;w=C;u=ph(j|0,u|0,21)|0;u=kh(A|0,v|0,u|0,C|0)|0;v=C;A=mh(x|0,w|0,21)|0;j=C;r=lh(A|0,j|0,J|0,r|0)|0;J=C;j=ph(A|0,j|0,21)|0;j=kh(x|0,w|0,j|0,C|0)|0;w=C;x=mh(r|0,J|0,21)|0;A=C;y=lh(N|0,M|0,L|0,y|0)|0;G=kh(y|0,C|0,I|0,G|0)|0;G=lh(G|0,C|0,x|0,A|0)|0;I=C;A=ph(x|0,A|0,21)|0;A=kh(r|0,J|0,A|0,C|0)|0;J=C;r=mh(G|0,I|0,21)|0;x=C;F=lh(r|0,x|0,B|0,F|0)|0;B=C;x=ph(r|0,x|0,21)|0;x=kh(G|0,I|0,x|0,C|0)|0;I=C;G=mh(F|0,B|0,21)|0;r=C;y=ph(G|0,r|0,21)|0;y=kh(F|0,B|0,y|0,C|0)|0;B=C;F=wh(G|0,r|0,666643,0)|0;k=lh(F|0,C|0,H|0,k|0)|0;H=C;F=wh(G|0,r|0,470296,0)|0;F=lh(D|0,m|0,F|0,C|0)|0;m=C;D=wh(G|0,r|0,654183,0)|0;D=lh(l|0,n|0,D|0,C|0)|0;n=C;l=wh(G|0,r|0,-997805,-1)|0;l=lh(h|0,g|0,l|0,C|0)|0;g=C;h=wh(G|0,r|0,136657,0)|0;h=lh(K|0,p|0,h|0,C|0)|0;p=C;r=wh(G|0,r|0,-683901,-1)|0;r=lh(E|0,f|0,r|0,C|0)|0;f=C;E=mh(k|0,H|0,21)|0;G=C;m=lh(F|0,m|0,E|0,G|0)|0;F=C;G=ph(E|0,G|0,21)|0;G=kh(k|0,H|0,G|0,C|0)|0;H=C;k=mh(m|0,F|0,21)|0;E=C;n=lh(D|0,n|0,k|0,E|0)|0;D=C;E=ph(k|0,E|0,21)|0;E=kh(m|0,F|0,E|0,C|0)|0;F=C;m=mh(n|0,D|0,21)|0;k=C;g=lh(l|0,g|0,m|0,k|0)|0;l=C;k=ph(m|0,k|0,21)|0;k=kh(n|0,D|0,k|0,C|0)|0;D=C;n=mh(g|0,l|0,21)|0;m=C;p=lh(h|0,p|0,n|0,m|0)|0;h=C;m=ph(n|0,m|0,21)|0;m=kh(g|0,l|0,m|0,C|0)|0;l=C;g=mh(p|0,h|0,21)|0;n=C;f=lh(r|0,f|0,g|0,n|0)|0;r=C;n=ph(g|0,n|0,21)|0;n=kh(p|0,h|0,n|0,C|0)|0;h=C;p=mh(f|0,r|0,21)|0;g=C;t=lh(p|0,g|0,s|0,t|0)|0;s=C;g=ph(p|0,g|0,21)|0;g=kh(f|0,r|0,g|0,C|0)|0;r=C;f=mh(t|0,s|0,21)|0;p=C;v=lh(f|0,p|0,u|0,v|0)|0;u=C;p=ph(f|0,p|0,21)|0;p=kh(t|0,s|0,p|0,C|0)|0;s=C;t=mh(v|0,u|0,21)|0;f=C;w=lh(t|0,f|0,j|0,w|0)|0;j=C;f=ph(t|0,f|0,21)|0;f=kh(v|0,u|0,f|0,C|0)|0;u=C;v=mh(w|0,j|0,21)|0;t=C;J=lh(v|0,t|0,A|0,J|0)|0;A=C;t=ph(v|0,t|0,21)|0;t=kh(w|0,j|0,t|0,C|0)|0;j=C;w=mh(J|0,A|0,21)|0;v=C;I=lh(w|0,v|0,x|0,I|0)|0;x=C;v=ph(w|0,v|0,21)|0;v=kh(J|0,A|0,v|0,C|0)|0;A=C;J=mh(I|0,x|0,21)|0;w=C;B=lh(J|0,w|0,y|0,B|0)|0;y=C;w=ph(J|0,w|0,21)|0;w=kh(I|0,x|0,w|0,C|0)|0;x=C;a[o>>0]=G;o=oh(G|0,H|0,8)|0;a[b+33>>0]=o;o=oh(G|0,H|0,16)|0;H=C;G=ph(E|0,F|0,5)|0;a[b+34>>0]=G|o;o=oh(E|0,F|0,3)|0;a[b+35>>0]=o;o=oh(E|0,F|0,11)|0;a[b+36>>0]=o;o=oh(E|0,F|0,19)|0;F=C;E=ph(k|0,D|0,2)|0;a[b+37>>0]=E|o;o=oh(k|0,D|0,6)|0;a[b+38>>0]=o;o=oh(k|0,D|0,14)|0;D=C;k=ph(m|0,l|0,7)|0;a[b+39>>0]=k|o;o=oh(m|0,l|0,1)|0;a[b+40>>0]=o;o=oh(m|0,l|0,9)|0;a[b+41>>0]=o;o=oh(m|0,l|0,17)|0;l=C;m=ph(n|0,h|0,4)|0;a[b+42>>0]=m|o;o=oh(n|0,h|0,4)|0;a[b+43>>0]=o;o=oh(n|0,h|0,12)|0;a[b+44>>0]=o;h=oh(n|0,h|0,20)|0;n=C;o=ph(g|0,r|0,1)|0;a[b+45>>0]=o|h;h=oh(g|0,r|0,7)|0;a[b+46>>0]=h;r=oh(g|0,r|0,15)|0;g=C;h=ph(p|0,s|0,6)|0;a[b+47>>0]=h|r;r=oh(p|0,s|0,2)|0;a[b+48>>0]=r;r=oh(p|0,s|0,10)|0;a[b+49>>0]=r;s=oh(p|0,s|0,18)|0;p=C;r=ph(f|0,u|0,3)|0;a[b+50>>0]=r|s;s=oh(f|0,u|0,5)|0;a[b+51>>0]=s;u=oh(f|0,u|0,13)|0;a[b+52>>0]=u;a[b+53>>0]=t;u=oh(t|0,j|0,8)|0;a[b+54>>0]=u;j=oh(t|0,j|0,16)|0;t=C;u=ph(v|0,A|0,5)|0;a[b+55>>0]=u|j;j=oh(v|0,A|0,3)|0;a[b+56>>0]=j;j=oh(v|0,A|0,11)|0;a[b+57>>0]=j;A=oh(v|0,A|0,19)|0;v=C;j=ph(w|0,x|0,2)|0;a[b+58>>0]=j|A;A=oh(w|0,x|0,6)|0;a[b+59>>0]=A;x=oh(w|0,x|0,14)|0;w=C;A=ph(B|0,y|0,7)|0;a[b+60>>0]=x|A;A=oh(B|0,y|0,1)|0;a[b+61>>0]=A;A=oh(B|0,y|0,9)|0;a[b+62>>0]=A;y=oh(B|0,y|0,17)|0;a[b+63>>0]=y;y=q;B=y+64|0;do{a[y>>0]=0;y=y+1|0}while((y|0)<(B|0));if(!e){i=z;return 0}Gc=e;c[Gc>>2]=64;c[Gc+4>>2]=0;i=z;return 0}function eg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=i=i+63&-64;i=i+16|0;k=a+64|0;rh(k|0,d|0,e|0)|0;dg(a,j,k,e,f,g)|0;g=j;d=(b|0)!=0;if((c[g>>2]|0)==64&(c[g+4>>2]|0)==0){if(!d){k=0;i=h;return k|0}j=lh(e|0,f|0,64,0)|0;k=b;c[k>>2]=j;c[k+4>>2]=C;k=0;i=h;return k|0}else{if(d){k=b;c[k>>2]=0;c[k+4>>2]=0}k=lh(e|0,f|0,64,0)|0;nh(a|0,0,k|0)|0;k=-1;i=h;return k|0}return 0}function fg(){return 32}function gg(){return 8}function hg(){return 12}function ig(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;j=i;h=i=i+63&-64;i=i+64|0;if((b|0)==0&(e|0)==0){i=j;return 0}c[h>>2]=1634760805;c[h+4>>2]=857760878;c[h+8>>2]=2036477234;c[h+12>>2]=1797285236;c[h+16>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;k=g+4|0;c[h+20>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+8|0;c[h+24>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+12|0;c[h+28>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+16|0;c[h+32>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+20|0;c[h+36>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+24|0;c[h+40>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;g=g+28|0;c[h+44>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[h+48>>2]=0;c[h+52>>2]=0;c[h+56>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=f+4|0;c[h+60>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;nh(a|0,0,b|0)|0;og(h,a,a,b,e);b=h+64|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(b|0));i=j;return 0}function jg(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;j=i;h=i=i+63&-64;i=i+64|0;if((b|0)==0&(e|0)==0){i=j;return 0}c[h>>2]=1634760805;c[h+4>>2]=857760878;c[h+8>>2]=2036477234;c[h+12>>2]=1797285236;c[h+16>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;k=g+4|0;c[h+20>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+8|0;c[h+24>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+12|0;c[h+28>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+16|0;c[h+32>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+20|0;c[h+36>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;k=g+24|0;c[h+40>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;g=g+28|0;c[h+44>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;c[h+48>>2]=0;c[h+52>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;g=f+4|0;c[h+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;f=f+8|0;c[h+60>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;nh(a|0,0,b|0)|0;og(h,a,a,b,e);b=h+64|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(b|0));i=j;return 0}
function Fa(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function Ga(){return i|0}function Ha(a){a=a|0;i=a}function Ia(a,b){a=a|0;b=b|0;i=a;j=b}function Ja(a,b){a=a|0;b=b|0;if(!n){n=a;o=b}}function Ka(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function La(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function Ma(a){a=a|0;C=a}function Na(){return C|0}function Oa(b,f,g,h,j,k,l,m,n,o,p,q){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=i;i=i+400|0;z=D+328|0;B=D;y=D+264|0;A=D+256|0;c[z>>2]=1634760805;c[z+4>>2]=857760878;c[z+8>>2]=2036477234;c[z+12>>2]=1797285236;c[z+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;x=q+4|0;c[z+20>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;o=q+8|0;c[z+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;r=q+12|0;c[z+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;s=q+16|0;c[z+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=q+20|0;c[z+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=q+24|0;c[z+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=q+28|0;c[z+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[z+48>>2]=0;c[z+52>>2]=0;c[z+56>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;w=p+4|0;c[z+60>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;C=y;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));og(z,y,y,64,0);c[B>>2]=c[y>>2]&67108863;C=y+3|0;c[B+4>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>2&67108611;C=y+6|0;c[B+8>>2]=(e[C>>1]|e[C+2>>1]<<16)>>>4&67092735;C=y+9|0;c[B+12>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>6&66076671;c[B+16>>2]=(c[y+12>>2]|0)>>>8&1048575;C=B+20|0;c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[C+12>>2]=0;c[C+16>>2]=0;c[B+40>>2]=c[y+16>>2];c[B+44>>2]=c[y+20>>2];c[B+48>>2]=c[y+24>>2];c[B+52>>2]=c[y+28>>2];C=B+56|0;c[C>>2]=0;c[C+4>>2]=0;a[B+80>>0]=0;C=y;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));Xd(B,l,m,n);l=A;c[l>>2]=m;c[l+4>>2]=n;Xd(B,A,8,0);if(!((j|0)==0&(k|0)==0)){c[z>>2]=1634760805;c[z+4>>2]=857760878;c[z+8>>2]=2036477234;c[z+12>>2]=1797285236;c[z+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;c[z+20>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[z+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[z+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;c[z+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[z+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[z+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[z+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[z+48>>2]=1;c[z+52>>2]=0;c[z+56>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[z+60>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;og(z,h,b,j,k);C=z;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0))}Xd(B,b,j,k);p=A;c[p>>2]=j;c[p+4>>2]=k;Xd(B,A,8,0);Zd(B,f);nh(B|0,0,256)|0;if(!g){i=D;return 0}p=g;c[p>>2]=16;c[p+4>>2]=0;i=D;return 0}function Pa(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(f>>>0>4294967295|(f|0)==-1&e>>>0>4294967279)ra();Oa(a,a+e|0,0,d,e,f,g,h,i,0,k,l)|0;if(!b)return 0;k=lh(e|0,f|0,16,0)|0;j=b;c[j>>2]=k;c[j+4>>2]=C;return 0}function Qa(b,f,g,h,j,k,l,m,n,o,p,q){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;E=i;i=i+400|0;A=E+328|0;C=E;z=E+264|0;B=E+256|0;c[A>>2]=1634760805;c[A+4>>2]=857760878;c[A+8>>2]=2036477234;c[A+12>>2]=1797285236;c[A+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;y=q+4|0;c[A+20>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;o=q+8|0;c[A+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;r=q+12|0;c[A+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;s=q+16|0;c[A+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=q+20|0;c[A+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=q+24|0;c[A+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=q+28|0;c[A+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[A+48>>2]=0;c[A+52>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;w=p+4|0;c[A+56>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=p+8|0;c[A+60>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;D=z;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));og(A,z,z,64,0);c[C>>2]=c[z>>2]&67108863;D=z+3|0;c[C+4>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>2&67108611;D=z+6|0;c[C+8>>2]=(e[D>>1]|e[D+2>>1]<<16)>>>4&67092735;D=z+9|0;c[C+12>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>6&66076671;c[C+16>>2]=(c[z+12>>2]|0)>>>8&1048575;D=C+20|0;c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;c[D+12>>2]=0;c[D+16>>2]=0;c[C+40>>2]=c[z+16>>2];c[C+44>>2]=c[z+20>>2];c[C+48>>2]=c[z+24>>2];c[C+52>>2]=c[z+28>>2];D=C+56|0;c[D>>2]=0;c[D+4>>2]=0;a[C+80>>0]=0;D=z;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));Xd(C,l,m,n);l=kh(0,0,m|0,n|0)|0;Xd(C,34632,l&15,0);if(!((j|0)==0&(k|0)==0)){c[A>>2]=1634760805;c[A+4>>2]=857760878;c[A+8>>2]=2036477234;c[A+12>>2]=1797285236;c[A+16>>2]=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;c[A+20>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;c[A+24>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[A+28>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;c[A+32>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[A+36>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[A+40>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[A+44>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[A+48>>2]=1;c[A+52>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[A+56>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[A+60>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;og(A,h,b,j,k);D=A;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0))}Xd(C,b,j,k);p=kh(0,0,j|0,k|0)|0;Xd(C,34632,p&15,0);p=B;c[p>>2]=m;c[p+4>>2]=n;Xd(C,B,8,0);p=B;c[p>>2]=j;c[p+4>>2]=k;Xd(C,B,8,0);Zd(C,f);nh(C|0,0,256)|0;if(!g){i=E;return 0}p=g;c[p>>2]=16;c[p+4>>2]=0;i=E;return 0}function Ra(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(f>>>0>4294967295|(f|0)==-1&e>>>0>4294967279)ra();Qa(a,a+e|0,0,d,e,f,g,h,i,0,k,l)|0;if(!b)return 0;k=lh(e|0,f|0,16,0)|0;j=b;c[j>>2]=k;c[j+4>>2]=C;return 0}function Sa(b,f,g,h,j,k,l,m,n,o,p){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=i;i=i+416|0;B=D+328|0;r=D;f=D+264|0;q=D+256|0;A=D+392|0;c[B>>2]=1634760805;c[B+4>>2]=857760878;c[B+8>>2]=2036477234;c[B+12>>2]=1797285236;c[B+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;z=p+4|0;c[B+20>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;s=p+8|0;c[B+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=p+12|0;c[B+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=p+16|0;c[B+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=p+20|0;c[B+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;w=p+24|0;c[B+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=p+28|0;c[B+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[B+48>>2]=0;c[B+52>>2]=0;c[B+56>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;y=o+4|0;c[B+60>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;C=f;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));og(B,f,f,64,0);c[r>>2]=c[f>>2]&67108863;C=f+3|0;c[r+4>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>2&67108611;C=f+6|0;c[r+8>>2]=(e[C>>1]|e[C+2>>1]<<16)>>>4&67092735;C=f+9|0;c[r+12>>2]=(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>6&66076671;c[r+16>>2]=(c[f+12>>2]|0)>>>8&1048575;C=r+20|0;c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[C+12>>2]=0;c[C+16>>2]=0;c[r+40>>2]=c[f+16>>2];c[r+44>>2]=c[f+20>>2];c[r+48>>2]=c[f+24>>2];c[r+52>>2]=c[f+28>>2];C=r+56|0;c[C>>2]=0;c[C+4>>2]=0;a[r+80>>0]=0;C=f;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0));Xd(r,l,m,n);f=q;c[f>>2]=m;c[f+4>>2]=n;Xd(r,q,8,0);Xd(r,g,h,j);f=q;c[f>>2]=h;c[f+4>>2]=j;Xd(r,q,8,0);Zd(r,A);nh(r|0,0,256)|0;f=((a[k+15>>0]^a[A+15>>0]|(a[k+14>>0]^a[A+14>>0]|(a[k+13>>0]^a[A+13>>0]|(a[k+12>>0]^a[A+12>>0]|(a[k+11>>0]^a[A+11>>0]|(a[k+10>>0]^a[A+10>>0]|(a[k+9>>0]^a[A+9>>0]|(a[k+8>>0]^a[A+8>>0]|(a[k+7>>0]^a[A+7>>0]|(a[k+6>>0]^a[A+6>>0]|(a[k+5>>0]^a[A+5>>0]|(a[k+4>>0]^a[A+4>>0]|(a[k+3>>0]^a[A+3>>0]|(a[k+2>>0]^a[A+2>>0]|(a[k+1>>0]^a[A+1>>0]|a[k>>0]^a[A>>0])))))))))))))))&255)+511&256;C=A;E=C+16|0;do{a[C>>0]=0;C=C+1|0}while((C|0)<(E|0));if(!f){nh(b|0,0,h|0)|0;o=-1;i=D;return o|0}if(!((h|0)==0&(j|0)==0)){c[B>>2]=1634760805;c[B+4>>2]=857760878;c[B+8>>2]=2036477234;c[B+12>>2]=1797285236;c[B+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[B+20>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;c[B+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[B+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[B+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[B+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[B+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[B+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[B+48>>2]=1;c[B+52>>2]=0;c[B+56>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[B+60>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;og(B,g,b,h,j);C=B;E=C+64|0;do{c[C>>2]=0;C=C+4|0}while((C|0)<(E|0))}o=0;i=D;return o|0}function Ta(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(g>>>0>0|(g|0)==0&f>>>0>15){d=lh(f|0,g|0,-16,-1)|0;i=Sa(a,0,e,d,C,e+f+-16|0,h,i,j,k,l)|0}else i=-1;if(!b)return i|0;d=(i|0)==0;g=lh(f|0,g|0,-16,-1)|0;c[b>>2]=d?g:0;c[b+4>>2]=d?C:0;return i|0}function Ua(b,f,g,h,j,k,l,m,n,o,p){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;E=i;i=i+416|0;C=E+328|0;r=E;f=E+264|0;q=E+256|0;B=E+392|0;c[C>>2]=1634760805;c[C+4>>2]=857760878;c[C+8>>2]=2036477234;c[C+12>>2]=1797285236;c[C+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;A=p+4|0;c[C+20>>2]=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;s=p+8|0;c[C+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;t=p+12|0;c[C+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=p+16|0;c[C+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;v=p+20|0;c[C+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;w=p+24|0;c[C+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=p+28|0;c[C+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[C+48>>2]=0;c[C+52>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;y=o+4|0;c[C+56>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;z=o+8|0;c[C+60>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;D=f;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));og(C,f,f,64,0);c[r>>2]=c[f>>2]&67108863;D=f+3|0;c[r+4>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>2&67108611;D=f+6|0;c[r+8>>2]=(e[D>>1]|e[D+2>>1]<<16)>>>4&67092735;D=f+9|0;c[r+12>>2]=(d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24)>>>6&66076671;c[r+16>>2]=(c[f+12>>2]|0)>>>8&1048575;D=r+20|0;c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;c[D+12>>2]=0;c[D+16>>2]=0;c[r+40>>2]=c[f+16>>2];c[r+44>>2]=c[f+20>>2];c[r+48>>2]=c[f+24>>2];c[r+52>>2]=c[f+28>>2];D=r+56|0;c[D>>2]=0;c[D+4>>2]=0;a[r+80>>0]=0;D=f;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0));Xd(r,l,m,n);f=kh(0,0,m|0,n|0)|0;Xd(r,34632,f&15,0);Xd(r,g,h,j);f=kh(0,0,h|0,j|0)|0;Xd(r,34632,f&15,0);f=q;c[f>>2]=m;c[f+4>>2]=n;Xd(r,q,8,0);f=q;c[f>>2]=h;c[f+4>>2]=j;Xd(r,q,8,0);Zd(r,B);nh(r|0,0,256)|0;f=((a[k+15>>0]^a[B+15>>0]|(a[k+14>>0]^a[B+14>>0]|(a[k+13>>0]^a[B+13>>0]|(a[k+12>>0]^a[B+12>>0]|(a[k+11>>0]^a[B+11>>0]|(a[k+10>>0]^a[B+10>>0]|(a[k+9>>0]^a[B+9>>0]|(a[k+8>>0]^a[B+8>>0]|(a[k+7>>0]^a[B+7>>0]|(a[k+6>>0]^a[B+6>>0]|(a[k+5>>0]^a[B+5>>0]|(a[k+4>>0]^a[B+4>>0]|(a[k+3>>0]^a[B+3>>0]|(a[k+2>>0]^a[B+2>>0]|(a[k+1>>0]^a[B+1>>0]|a[k>>0]^a[B>>0])))))))))))))))&255)+511&256;D=B;F=D+16|0;do{a[D>>0]=0;D=D+1|0}while((D|0)<(F|0));if(!f){nh(b|0,0,h|0)|0;o=-1;i=E;return o|0}if(!((h|0)==0&(j|0)==0)){c[C>>2]=1634760805;c[C+4>>2]=857760878;c[C+8>>2]=2036477234;c[C+12>>2]=1797285236;c[C+16>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[C+20>>2]=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;c[C+24>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;c[C+28>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;c[C+32>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;c[C+36>>2]=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[C+40>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[C+44>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;c[C+48>>2]=1;c[C+52>>2]=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;c[C+56>>2]=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;c[C+60>>2]=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;og(C,g,b,h,j);D=C;F=D+64|0;do{c[D>>2]=0;D=D+4|0}while((D|0)<(F|0))}o=0;i=E;return o|0}function Va(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;if(g>>>0>0|(g|0)==0&f>>>0>15){d=lh(f|0,g|0,-16,-1)|0;i=Ua(a,0,e,d,C,e+f+-16|0,h,i,j,k,l)|0}else i=-1;if(!b)return i|0;d=(i|0)==0;g=lh(f|0,g|0,-16,-1)|0;c[b>>2]=d?g:0;c[b+4>>2]=d?C:0;return i|0}function Wa(){return 32}function Xa(){return 12}function Ya(){return 0}function Za(){return 16}function _a(){return 32}function $a(){return 8}function ab(){return 0}function bb(){return 16}function cb(){return 32}function db(){return 32}function eb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+480|0;h=g+416|0;j=g;rb(j,f,32)|0;Dd(j,c,d,e)|0;tb(j,h)|0;d=h;e=b+32|0;do{a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}while((b|0)<(e|0));i=g;return 0}function fb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Db(a,b,c,d,e)|0}function gb(){return 32}function hb(){return 32}function ib(){return 208}function jb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;i=i+96|0;o=p+32|0;h=p;n=b+32|0;if(e>>>0<=64){j=n;c[j>>2]=0;c[j+4>>2]=0;c[b>>2]=c[8066];c[b+4>>2]=c[8067];c[b+8>>2]=c[8068];c[b+12>>2]=c[8069];c[b+16>>2]=c[8070];c[b+20>>2]=c[8071];c[b+24>>2]=c[8072];c[b+28>>2]=c[8073];j=o;k=j+64|0;do{a[j>>0]=54;j=j+1|0}while((j|0)<(k|0));g=(e|0)==0;if(!g){a[o>>0]=a[d>>0]^54;if((e|0)==1)l=d;else{f=e;e=1;m=8}}else l=d}else{j=n;c[j>>2]=0;c[j+4>>2]=0;c[b>>2]=c[8066];c[b+4>>2]=c[8067];c[b+8>>2]=c[8068];c[b+12>>2]=c[8069];c[b+16>>2]=c[8070];c[b+20>>2]=c[8071];c[b+24>>2]=c[8072];c[b+28>>2]=c[8073];j=ph(e|0,0,3)|0;g=n;c[g>>2]=j;c[g+4>>2]=C;g=b+40|0;j=g;f=d;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(b,g);d=d+64|0;f=lh(e|0,0,-64,-1)|0;e=C;if(e>>>0>0|(e|0)==0&f>>>0>63){do{xd(b,d);d=d+64|0;f=lh(f|0,e|0,-64,-1)|0;e=C}while(e>>>0>0|(e|0)==0&f>>>0>63);e=f}else e=f;qh(g|0,d|0,e|0)|0;yd(b,h)|0;j=n;c[j>>2]=0;c[j+4>>2]=0;c[b>>2]=c[8066];c[b+4>>2]=c[8067];c[b+8>>2]=c[8068];c[b+12>>2]=c[8069];c[b+16>>2]=c[8070];c[b+20>>2]=c[8071];c[b+24>>2]=c[8072];c[b+28>>2]=c[8073];j=o;k=j+64|0;do{a[j>>0]=54;j=j+1|0}while((j|0)<(k|0));a[o>>0]=a[h>>0]^54;d=h;f=32;e=1;g=0;m=8}if((m|0)==8)while(1){m=o+e|0;a[m>>0]=a[m>>0]^a[d+e>>0];e=e+1|0;if((e|0)==(f|0)){l=d;e=f;break}else m=8}d=n;c[d>>2]=512;c[d+4>>2]=0;d=b+40|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(b,d);h=b+104|0;f=b+136|0;j=f;c[j>>2]=0;c[j+4>>2]=0;c[h>>2]=c[8066];c[h+4>>2]=c[8067];c[h+8>>2]=c[8068];c[h+12>>2]=c[8069];c[h+16>>2]=c[8070];c[h+20>>2]=c[8071];c[h+24>>2]=c[8072];c[h+28>>2]=c[8073];j=o;k=j+64|0;do{a[j>>0]=92;j=j+1|0}while((j|0)<(k|0));if(g){d=f;j=d;c[j>>2]=512;d=d+4|0;c[d>>2]=0;d=b+144|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(h,d);i=p;return 0}a[o>>0]=a[l>>0]^92;if((e|0)==1){d=f;j=d;c[j>>2]=512;d=d+4|0;c[d>>2]=0;d=b+144|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(h,d);i=p;return 0}else d=1;do{n=o+d|0;a[n>>0]=a[n>>0]^a[l+d>>0];d=d+1|0}while((d|0)!=(e|0));d=f;j=d;c[j>>2]=512;d=d+4|0;c[d>>2]=0;d=b+144|0;j=d;f=o;k=j+64|0;do{a[j>>0]=a[f>>0]|0;j=j+1|0;f=f+1|0}while((j|0)<(k|0));xd(h,d);i=p;return 0}function kb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((d|0)==0&(e|0)==0)return 0;g=a+32|0;i=g;j=c[i>>2]|0;i=c[i+4>>2]|0;f=oh(j|0,i|0,3)|0;f=f&63;h=ph(d|0,e|0,3)|0;h=lh(j|0,i|0,h|0,C|0)|0;c[g>>2]=h;c[g+4>>2]=C;g=64-f|0;f=a+40+f|0;if(0>e>>>0|0==(e|0)&g>>>0>d>>>0){qh(f|0,b|0,d|0)|0;return 0}qh(f|0,b|0,g|0)|0;h=a+40|0;xd(a,h);f=b+g|0;b=kh(d|0,e|0,g|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&b>>>0>63)do{xd(a,f);f=f+64|0;b=lh(b|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&b>>>0>63);qh(h|0,f|0,b|0)|0;return 0}function lb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;k=i;i=i+32|0;e=k;yd(b,e)|0;j=b+104|0;g=b+136|0;h=g;l=c[h>>2]|0;h=c[h+4>>2]|0;f=oh(l|0,h|0,3)|0;f=f&63;h=lh(l|0,h|0,256,0)|0;c[g>>2]=h;c[g+4>>2]=C;g=64-f|0;f=b+144+f|0;if(g>>>0>32){b=f;f=b+32|0;do{a[b>>0]=a[e>>0]|0;b=b+1|0;e=e+1|0}while((b|0)<(f|0));yd(j,d)|0;i=k;return 0}qh(f|0,e|0,g|0)|0;h=b+144|0;xd(j,h);e=e+g|0;b=kh(32,0,g|0,0)|0;f=C;if(f>>>0>0|(f|0)==0&b>>>0>63){do{xd(j,e);e=e+64|0;b=lh(b|0,f|0,-64,-1)|0;f=C}while(f>>>0>0|(f|0)==0&b>>>0>63);f=b}else f=b;qh(h|0,e|0,f|0)|0;yd(j,d)|0;i=k;return 0}function mb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;m=i;i=i+240|0;h=m+208|0;l=m;jb(l,g,32)|0;do if(!((e|0)==0&(f|0)==0)){j=l+32|0;n=j;o=c[n>>2]|0;n=c[n+4>>2]|0;g=oh(o|0,n|0,3)|0;g=g&63;k=ph(e|0,f|0,3)|0;k=lh(o|0,n|0,k|0,C|0)|0;c[j>>2]=k;c[j+4>>2]=C;j=64-g|0;g=l+40+g|0;if(0>f>>>0|0==(f|0)&j>>>0>e>>>0){qh(g|0,d|0,e|0)|0;break}qh(g|0,d|0,j|0)|0;k=l+40|0;xd(l,k);g=d+j|0;d=kh(e|0,f|0,j|0,0)|0;j=C;if(j>>>0>0|(j|0)==0&d>>>0>63){do{xd(l,g);g=g+64|0;d=lh(d|0,j|0,-64,-1)|0;j=C}while(j>>>0>0|(j|0)==0&d>>>0>63);j=d}else j=d;qh(k|0,g|0,j|0)|0}while(0);yd(l,h)|0;e=l+104|0;j=l+136|0;o=j;n=c[o>>2]|0;o=c[o+4>>2]|0;g=oh(n|0,o|0,3)|0;g=g&63;o=lh(n|0,o|0,256,0)|0;c[j>>2]=o;c[j+4>>2]=C;j=64-g|0;g=l+144+g|0;if(j>>>0>32){j=g;g=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(g|0));yd(e,b)|0;i=m;return 0}qh(g|0,h|0,j|0)|0;d=l+144|0;xd(e,d);h=h+j|0;j=kh(32,0,j|0,0)|0;g=C;if(g>>>0>0|(g|0)==0&j>>>0>63){do{xd(e,h);h=h+64|0;j=lh(j|0,g|0,-64,-1)|0;g=C}while(g>>>0>0|(g|0)==0&j>>>0>63);g=j}else g=j;qh(d|0,h|0,g|0)|0;yd(e,b)|0;i=m;return 0}function nb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;i=i+32|0;g=h;mb(g,c,d,e,f)|0;d=0;e=0;do{d=(a[g+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);d=(d+511|0)>>>8&1;e=(g|0)==(b|0);c=0;f=0;do{c=a[b+f>>0]^a[g+f>>0]|c;f=f+1|0}while((f|0)!=32);i=h;return (e?-1:d+-1|0)|(((c&255)+511|0)>>>8&1)+-1|0}function ob(){return 64}function pb(){return 32}function qb(){return 416}function rb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;i=i+192|0;n=o+64|0;f=o;g=b+64|0;if(e>>>0>128){c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;k=b;l=400;m=k+64|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));Dd(b,d,e,0)|0;Fd(b,f)|0;j=64;d=f}else j=e;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;k=b;l=400;m=k+64|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));k=n;m=k+128|0;do{a[k>>0]=54;k=k+1|0}while((k|0)<(m|0));h=(j|0)==0;if(!h?(a[n>>0]=a[d>>0]^54,(j|0)!=1):0){e=1;do{m=n+e|0;a[m>>0]=a[m>>0]^a[d+e>>0];e=e+1|0}while((e|0)!=(j|0))}e=b+72|0;c[e>>2]=1024;c[e+4>>2]=0;e=g;c[e>>2]=0;c[e+4>>2]=0;e=b+80|0;k=e;l=n;m=k+128|0;do{a[k>>0]=a[l>>0]|0;k=k+1|0;l=l+1|0}while((k|0)<(m|0));Ed(b,e);g=b+208|0;f=b+272|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;k=g;l=400;m=k+64|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));k=n;m=k+128|0;do{a[k>>0]=92;k=k+1|0}while((k|0)<(m|0));if(!h?(a[n>>0]=a[d>>0]^92,(j|0)!=1):0){e=1;do{m=n+e|0;a[m>>0]=a[m>>0]^a[d+e>>0];e=e+1|0}while((e|0)!=(j|0))}e=b+280|0;c[e>>2]=1024;c[e+4>>2]=0;e=f;c[e>>2]=0;c[e+4>>2]=0;e=b+288|0;k=e;l=n;m=k+128|0;do{a[k>>0]=a[l>>0]|0;k=k+1|0;l=l+1|0}while((k|0)<(m|0));Ed(g,e);i=o;return 0}function sb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Dd(a,b,c,d)|0;return 0}function tb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+64|0;e=l;Fd(b,e)|0;k=b+208|0;h=b+280|0;n=h;m=c[n>>2]|0;n=c[n+4>>2]|0;j=oh(m|0,n|0,3)|0;j=j&127;g=lh(m|0,n|0,512,0)|0;c[h>>2]=g;c[h+4>>2]=C;h=b+272|0;g=h;f=c[g>>2]|0;g=c[g+4>>2]|0;if(n>>>0>4294967295|(n|0)==-1&m>>>0>4294966783){f=lh(f|0,g|0,1,0)|0;g=C;n=h;c[n>>2]=f;c[n+4>>2]=g}c[h>>2]=f;c[h+4>>2]=g;f=kh(128,0,j|0,0)|0;h=C;g=b+288+j|0;if(h>>>0>0|(h|0)==0&f>>>0>64){f=g+64|0;do{a[g>>0]=a[e>>0]|0;g=g+1|0;e=e+1|0}while((g|0)<(f|0));Fd(k,d)|0;i=l;return 0}qh(g|0,e|0,f|0)|0;j=b+288|0;Ed(k,j);e=e+f|0;f=kh(64,0,f|0,h|0)|0;g=C;if(g>>>0>0|(g|0)==0&f>>>0>127)do{Ed(k,e);e=e+128|0;f=lh(f|0,g|0,-128,-1)|0;g=C}while(g>>>0>0|(g|0)==0&f>>>0>127);qh(j|0,e|0,f|0)|0;Fd(k,d)|0;i=l;return 0}function ub(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+480|0;h=l+416|0;j=l;rb(j,g,32)|0;Dd(j,d,e,f)|0;Fd(j,h)|0;k=j+208|0;d=j+280|0;n=d;m=c[n>>2]|0;n=c[n+4>>2]|0;g=oh(m|0,n|0,3)|0;g=g&127;f=lh(m|0,n|0,512,0)|0;c[d>>2]=f;c[d+4>>2]=C;d=j+272|0;f=d;e=c[f>>2]|0;f=c[f+4>>2]|0;if(n>>>0>4294967295|(n|0)==-1&m>>>0>4294966783){e=lh(e|0,f|0,1,0)|0;f=C;n=d;c[n>>2]=e;c[n+4>>2]=f}c[d>>2]=e;c[d+4>>2]=f;e=kh(128,0,g|0,0)|0;d=C;f=j+288+g|0;if(d>>>0>0|(d|0)==0&e>>>0>64){e=f+64|0;do{a[f>>0]=a[h>>0]|0;f=f+1|0;h=h+1|0}while((f|0)<(e|0));Fd(k,b)|0;i=l;return 0}qh(f|0,h|0,e|0)|0;g=j+288|0;Ed(k,g);h=h+e|0;e=kh(64,0,e|0,d|0)|0;f=C;if(f>>>0>0|(f|0)==0&e>>>0>127)do{Ed(k,h);h=h+128|0;e=lh(e|0,f|0,-128,-1)|0;f=C}while(f>>>0>0|(f|0)==0&e>>>0>127);qh(g|0,h|0,e|0)|0;Fd(k,b)|0;i=l;return 0}function vb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;i=i+64|0;g=h;ub(g,c,d,e,f)|0;d=0;e=0;do{d=(a[g+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=64);d=(d+511|0)>>>8&1;e=(g|0)==(b|0);c=0;f=0;do{c=a[b+f>>0]^a[g+f>>0]|c;f=f+1|0}while((f|0)!=64);i=h;return (e?-1:d+-1|0)|(((c&255)+511|0)>>>8&1)+-1|0}function wb(){return 32}function xb(){return 32}function yb(){return 416}function zb(a,b,c){a=a|0;b=b|0;c=c|0;rb(a,b,c)|0;return 0}function Ab(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Dd(a,b,c,d)|0;return 0}function Bb(b,c){b=b|0;c=c|0;var d=0,e=0;e=i;i=i+64|0;d=e;tb(b,d)|0;b=d;d=c+32|0;do{a[c>>0]=a[b>>0]|0;c=c+1|0;b=b+1|0}while((c|0)<(d|0));i=e;return 0}function Cb(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+480|0;h=g+416|0;j=g;rb(j,f,32)|0;Dd(j,c,d,e)|0;tb(j,h)|0;d=h;e=b+32|0;do{a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0}while((b|0)<(e|0));i=g;return 0}function Db(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;h=i;i=i+512|0;j=h+448|0;k=h;g=h+416|0;rb(k,f,32)|0;Dd(k,c,d,e)|0;tb(k,j)|0;d=g;e=j;c=d+32|0;do{a[d>>0]=a[e>>0]|0;d=d+1|0;e=e+1|0}while((d|0)<(c|0));d=0;e=0;do{d=(a[g+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);d=(d+511|0)>>>8&1;e=0;c=0;do{e=a[b+c>>0]^a[g+c>>0]|e;c=c+1|0}while((c|0)!=32);i=h;return d+-1|(((e&255)+511|0)>>>8&1)+-1|0}function Eb(){return 32}function Fb(){return 32}function Gb(){return 32}function Hb(){return 32}function Ib(){return 24}function Jb(){return 32}function Kb(){return 16}function Lb(){return 16}function Mb(){return 32412}function Nb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;i=i+272|0;h=k;g=k+208|0;f=h+64|0;j=h;l=400;m=j+64|0;do{c[j>>2]=c[l>>2];j=j+4|0;l=l+4|0}while((j|0)<(m|0));j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=f;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;l=e;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));Fd(h,g)|0;j=d;l=g;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));m=ef(b,d)|0;i=k;return m|0}function Ob(b,c){b=b|0;c=c|0;var d=0;d=0;do{a[c+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=32);return ef(b,c)|0}function Pb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=i;i=i+32|0;d=e;if(!(df(d,c,b)|0)){Fc(a,34648,d,0)|0;a=0}else a=-1;i=e;return a|0}function Qb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return zf(a,b,c,d,e,f)|0}function Rb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Af(a,b,c,d,e,f)|0}function Sb(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=zf(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function Tb(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=Af(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function Ub(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;qf(a,b,c,d,e,f,g)|0;return 0}function Vb(b,c,d,e,f,g,h,j){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;m=i;i=i+64|0;l=m+32|0;k=m;if(!(df(l,j,h)|0)){Fc(k,34648,l,0)|0;qf(b,c,d,e,f,g,k)|0;e=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(e|0));j=0;i=m;return j|0}else{j=-1;i=m;return j|0}return 0}function Wb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){e=-1;return e|0}qf(a+16|0,a,b,c,d,e,f)|0;e=0;return e|0}function Xb(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(e>>>0>0|(e|0)==0&d>>>0>4294967279){h=-1;i=l;return h|0}if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;qf(b+16|0,b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));j=0}else j=-1;h=j;i=l;return h|0}function Yb(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return sf(a,b,c,d,e,f,g)|0}function Zb(b,c,d,e,f,g,h,j){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;m=i;i=i+64|0;l=m+32|0;k=m;if(!(df(l,j,h)|0)){Fc(k,34648,l,0)|0;f=sf(b,c,d,e,f,g,k)|0;e=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(e|0));j=f;i=m;return j|0}else{j=-1;i=m;return j|0}return 0}function _b(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16){e=-1;return e|0}d=lh(c|0,d|0,-16,-1)|0;e=sf(a,b+16|0,b,d,C,e,f)|0;return e|0}function $b(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;i=i+64|0;k=l+32|0;j=l;if(e>>>0<0|(e|0)==0&d>>>0<16){h=-1;i=l;return h|0}if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;d=lh(d|0,e|0,-16,-1)|0;d=sf(b,c+16|0,c,d,C,f,j)|0;e=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(e|0))}else d=-1;h=d;i=l;return h|0}function ac(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;A=i;y=i=i+63&-64;i=i+480|0;w=y;v=y+448|0;z=y+424|0;x=y+392|0;y=y+360|0;h=0;do{a[y+h>>0]=ma(0)|0;h=h+1|0}while((h|0)!=32);if(ef(x,y)|0){z=-1;i=A;return z|0}j=b;h=x;k=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(k|0));nh(w+64|0,0,293)|0;j=w;h=400;k=j+48|0;do{c[j>>2]=c[h>>2];j=j+4|0;h=h+4|0}while((j|0)<(k|0));m=w;c[m>>2]=-222443248;c[m+4>>2]=1779033703;m=w+8|0;c[m>>2]=-2067093701;c[m+4>>2]=-1150833019;m=w+16|0;c[m>>2]=-23791573;c[m+4>>2]=1013904242;m=w+24|0;c[m>>2]=1595750129;c[m+4>>2]=-1521486534;m=w+32|0;c[m>>2]=-1377402159;c[m+4>>2]=1359893119;m=w+40|0;c[m>>2]=725511199;c[m+4>>2]=-1694144372;m=w+48|0;c[m>>2]=-79577749;c[m+4>>2]=528734635;m=w+56|0;c[m>>2]=327033209;c[m+4>>2]=1541459225;m=w+352|0;n=w+96|0;o=w+64|0;p=w+72|0;q=w+224|0;j=w+96|0;h=x;k=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(k|0));j=(c[m>>2]|0)+32|0;c[m>>2]=j;l=g;s=0;t=32;while(1){r=256-j|0;h=w+96+j|0;if(!(s>>>0>0|(s|0)==0&t>>>0>r>>>0)){u=6;break}qh(h|0,l|0,r|0)|0;c[m>>2]=(c[m>>2]|0)+r;k=o;j=c[k>>2]|0;k=c[k+4>>2]|0;B=lh(j|0,k|0,128,0)|0;h=o;c[h>>2]=B;c[h+4>>2]=C;h=p;h=lh((k>>>0>4294967295|(k|0)==-1&j>>>0>4294967167)&1|0,0,c[h>>2]|0,c[h+4>>2]|0)|0;j=p;c[j>>2]=h;c[j+4>>2]=C;id(w,n);j=n;h=q;k=j+128|0;do{c[j>>2]=c[h>>2];j=j+4|0;h=h+4|0}while((j|0)<(k|0));j=(c[m>>2]|0)+-128|0;c[m>>2]=j;h=kh(t|0,s|0,r|0,0)|0;if((t|0)==(r|0)&(s|0)==0)break;else{l=l+r|0;s=C;t=h}}if((u|0)==6){qh(h|0,l|0,t|0)|0;B=lh(c[m>>2]|0,0,t|0,s|0)|0;c[m>>2]=B}jd(w,z,24);h=b+32|0;if(f>>>0>0|(f|0)==0&e>>>0>4294967279)h=-1;else if(!(df(w,y,g)|0)){Fc(v,34648,w,0)|0;qf(b+48|0,h,d,e,f,z,v)|0;j=v;k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));h=0}else h=-1;j=y;k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));j=x;k=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));j=z;k=j+24|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(k|0));B=h;i=A;return B|0}function bc(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=i;u=i=i+63&-64;i=i+416|0;v=u;x=u+384|0;u=u+360|0;if(f>>>0<0|(f|0)==0&e>>>0<48){x=-1;i=y;return x|0}nh(v+64|0,0,293)|0;k=v;j=400;l=k+48|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));p=v;c[p>>2]=-222443248;c[p+4>>2]=1779033703;p=v+8|0;c[p>>2]=-2067093701;c[p+4>>2]=-1150833019;p=v+16|0;c[p>>2]=-23791573;c[p+4>>2]=1013904242;p=v+24|0;c[p>>2]=1595750129;c[p+4>>2]=-1521486534;p=v+32|0;c[p>>2]=-1377402159;c[p+4>>2]=1359893119;p=v+40|0;c[p>>2]=725511199;c[p+4>>2]=-1694144372;p=v+48|0;c[p>>2]=-79577749;c[p+4>>2]=528734635;p=v+56|0;c[p>>2]=327033209;c[p+4>>2]=1541459225;p=v+352|0;q=v+96|0;r=v+64|0;s=v+72|0;t=v+224|0;k=v+96|0;j=d;l=k+32|0;do{a[k>>0]=a[j>>0]|0;k=k+1|0;j=j+1|0}while((k|0)<(l|0));k=(c[p>>2]|0)+32|0;c[p>>2]=k;n=0;o=32;while(1){m=256-k|0;j=v+96+k|0;if(!(n>>>0>0|(n|0)==0&o>>>0>m>>>0)){w=4;break}qh(j|0,g|0,m|0)|0;c[p>>2]=(c[p>>2]|0)+m;l=r;k=c[l>>2]|0;l=c[l+4>>2]|0;z=lh(k|0,l|0,128,0)|0;j=r;c[j>>2]=z;c[j+4>>2]=C;j=s;j=lh((l>>>0>4294967295|(l|0)==-1&k>>>0>4294967167)&1|0,0,c[j>>2]|0,c[j+4>>2]|0)|0;k=s;c[k>>2]=j;c[k+4>>2]=C;id(v,q);k=q;j=t;l=k+128|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));k=(c[p>>2]|0)+-128|0;c[p>>2]=k;j=kh(o|0,n|0,m|0,0)|0;if((o|0)==(m|0)&(n|0)==0)break;else{g=g+m|0;n=C;o=j}}if((w|0)==4){qh(j|0,g|0,o|0)|0;z=lh(c[p>>2]|0,0,o|0,n|0)|0;c[p>>2]=z}jd(v,u,24);if((e&-16|0)==32&(f|0)==0){z=-1;i=y;return z|0}if(!(df(v,h,d)|0)){Fc(x,34648,v,0)|0;g=lh(e|0,f|0,-48,-1)|0;g=sf(b,d+48|0,d+32|0,g,C,u,x)|0;k=x;l=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(l|0))}else g=-1;z=g;i=y;return z|0}function cc(){return 48}function dc(){return 32}function ec(){return 32}function fc(){return 32}function gc(){return 32}function hc(){return 24}function ic(){return 32}function jc(){return 16}function kc(){return 16}function lc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return zf(a,b,c,d,e,f)|0}function mc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Af(a,b,c,d,e,f)|0}function nc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=i;d=i=i+63&-64;i=i+32|0;if(df(d,c,b)|0){c=-1;i=e;return c|0}Fc(a,34648,d,0)|0;c=0;i=e;return c|0}function oc(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;j=i=i+63&-64;i=i+64|0;k=j+32|0;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=zf(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function pc(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;l=i;j=i=i+63&-64;i=i+64|0;k=j+32|0;if(!(df(k,h,g)|0)){Fc(j,34648,k,0)|0;e=Af(b,c,d,e,f,j)|0;d=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(d|0));h=e;i=l;return h|0}else{h=-1;i=l;return h|0}return 0}function qc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;k=i;g=i=i+63&-64;i=i+272|0;h=g;g=g+208|0;f=h+64|0;j=h;l=400;m=j+64|0;do{c[j>>2]=c[l>>2];j=j+4|0;l=l+4|0}while((j|0)<(m|0));j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=f;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;l=e;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));Fd(h,g)|0;j=d;l=g;m=j+32|0;do{a[j>>0]=a[l>>0]|0;j=j+1|0;l=l+1|0}while((j|0)<(m|0));m=ef(b,d)|0;i=k;return m|0}function rc(b,c){b=b|0;c=c|0;var d=0;d=0;do{a[c+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=32);return ef(b,c)|0}function sc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0;H=d[e>>0]|0;i=ph(d[e+1>>0]|0|0,0,8)|0;l=C;D=ph(d[e+2>>0]|0|0,0,16)|0;l=l|C;B=ph(d[e+3>>0]|0|0,0,24)|0;l=l|C;m=a[e+6>>0]|0;j=d[e+4>>0]|0;E=ph(d[e+5>>0]|0|0,0,8)|0;k=C;m=ph(m&255|0,0,16)|0;k=ph(E|j|m|0,k|C|0,6)|0;m=C;j=a[e+9>>0]|0;E=d[e+7>>0]|0;h=ph(d[e+8>>0]|0|0,0,8)|0;x=C;j=ph(j&255|0,0,16)|0;x=ph(h|E|j|0,x|C|0,5)|0;j=C;E=a[e+12>>0]|0;h=d[e+10>>0]|0;v=ph(d[e+11>>0]|0|0,0,8)|0;F=C;E=ph(E&255|0,0,16)|0;F=ph(v|h|E|0,F|C|0,3)|0;E=C;h=a[e+15>>0]|0;v=d[e+13>>0]|0;p=ph(d[e+14>>0]|0|0,0,8)|0;t=C;h=ph(h&255|0,0,16)|0;t=ph(p|v|h|0,t|C|0,2)|0;h=C;v=d[e+16>>0]|0;p=ph(d[e+17>>0]|0|0,0,8)|0;z=C;f=ph(d[e+18>>0]|0|0,0,16)|0;z=z|C;A=ph(d[e+19>>0]|0|0,0,24)|0;A=p|v|f|A;z=z|C;f=a[e+22>>0]|0;v=d[e+20>>0]|0;p=ph(d[e+21>>0]|0|0,0,8)|0;q=C;f=ph(f&255|0,0,16)|0;q=ph(p|v|f|0,q|C|0,7)|0;f=C;v=a[e+25>>0]|0;p=d[e+23>>0]|0;g=ph(d[e+24>>0]|0|0,0,8)|0;w=C;v=ph(v&255|0,0,16)|0;w=ph(g|p|v|0,w|C|0,5)|0;v=C;p=a[e+28>>0]|0;g=d[e+26>>0]|0;r=ph(d[e+27>>0]|0|0,0,8)|0;o=C;p=ph(p&255|0,0,16)|0;o=ph(r|g|p|0,o|C|0,4)|0;p=C;g=a[e+31>>0]|0;r=d[e+29>>0]|0;y=ph(d[e+30>>0]|0|0,0,8)|0;s=C;e=ph(g&255|0,0,16)|0;s=ph(y|r|e|0,s|C|0,2)|0;s=s&33554428;e=lh(s|0,0,16777216,0)|0;e=oh(e|0,C|0,25)|0;r=C;y=kh(0,0,e|0,r|0)|0;l=lh(y&19|0,0,i|H|D|B|0,l|0)|0;B=C;r=ph(e|0,r|0,25)|0;e=C;D=lh(k|0,m|0,16777216,0)|0;D=oh(D|0,C|0,25)|0;H=C;j=lh(x|0,j|0,D|0,H|0)|0;x=C;H=ph(D|0,H|0,25)|0;H=kh(k|0,m|0,H|0,C|0)|0;m=C;k=lh(F|0,E|0,16777216,0)|0;k=oh(k|0,C|0,25)|0;D=C;h=lh(t|0,h|0,k|0,D|0)|0;t=C;D=ph(k|0,D|0,25)|0;k=C;i=lh(A|0,z|0,16777216,0)|0;i=oh(i|0,C|0,25)|0;y=C;f=lh(q|0,f|0,i|0,y|0)|0;q=C;y=ph(i|0,y|0,25)|0;i=C;g=lh(w|0,v|0,16777216,0)|0;g=oh(g|0,C|0,25)|0;u=C;p=lh(o|0,p|0,g|0,u|0)|0;o=C;u=ph(g|0,u|0,25)|0;g=C;G=lh(l|0,B|0,33554432,0)|0;G=mh(G|0,C|0,26)|0;n=C;m=lh(H|0,m|0,G|0,n|0)|0;n=ph(G|0,n|0,26)|0;n=kh(l|0,B|0,n|0,C|0)|0;B=lh(j|0,x|0,33554432,0)|0;B=mh(B|0,C|0,26)|0;l=C;E=lh(B|0,l|0,F|0,E|0)|0;k=kh(E|0,C|0,D|0,k|0)|0;l=ph(B|0,l|0,26)|0;l=kh(j|0,x|0,l|0,C|0)|0;x=lh(h|0,t|0,33554432,0)|0;x=mh(x|0,C|0,26)|0;j=C;z=lh(x|0,j|0,A|0,z|0)|0;i=kh(z|0,C|0,y|0,i|0)|0;j=ph(x|0,j|0,26)|0;j=kh(h|0,t|0,j|0,C|0)|0;t=lh(f|0,q|0,33554432,0)|0;t=mh(t|0,C|0,26)|0;h=C;v=lh(t|0,h|0,w|0,v|0)|0;g=kh(v|0,C|0,u|0,g|0)|0;h=ph(t|0,h|0,26)|0;h=kh(f|0,q|0,h|0,C|0)|0;q=lh(p|0,o|0,33554432,0)|0;q=mh(q|0,C|0,26)|0;f=C;s=lh(s|0,0,q|0,f|0)|0;e=kh(s|0,C|0,r|0,e|0)|0;f=ph(q|0,f|0,26)|0;f=kh(p|0,o|0,f|0,C|0)|0;c[b>>2]=n;c[b+4>>2]=m;c[b+8>>2]=l;c[b+12>>2]=k;c[b+16>>2]=j;c[b+20>>2]=i;c[b+24>>2]=h;c[b+28>>2]=g;c[b+32>>2]=f;c[b+36>>2]=e;return}function tc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=c[d>>2]|0;l=c[d+4>>2]|0;k=c[d+8>>2]|0;j=c[d+12>>2]|0;i=c[d+16>>2]|0;h=c[d+20>>2]|0;g=c[d+24>>2]|0;f=c[d+28>>2]|0;o=c[d+32>>2]|0;e=c[d+36>>2]|0;m=((((((((((((((e*19|0)+16777216|0)>>>25)+m>>26)+l>>25)+k>>26)+j>>25)+i>>26)+h>>25)+g>>26)+f>>25)+o>>26)+e>>25)*19|0)+m|0;n=m>>26;l=n+l|0;n=m-(n<<26)|0;m=l>>25;k=m+k|0;m=l-(m<<25)|0;l=k>>26;j=l+j|0;l=k-(l<<26)|0;k=j>>25;i=k+i|0;k=j-(k<<25)|0;j=i>>26;h=j+h|0;j=i-(j<<26)|0;i=h>>25;g=i+g|0;i=h-(i<<25)|0;h=g>>26;f=h+f|0;h=g-(h<<26)|0;g=f>>25;d=g+o|0;g=f-(g<<25)|0;f=d>>26;e=f+e|0;f=d-(f<<26)|0;d=e&33554431;a[b>>0]=n;a[b+1>>0]=n>>>8;a[b+2>>0]=n>>>16;a[b+3>>0]=m<<2|n>>>24;a[b+4>>0]=m>>>6;a[b+5>>0]=m>>>14;a[b+6>>0]=l<<3|m>>>22;a[b+7>>0]=l>>>5;a[b+8>>0]=l>>>13;a[b+9>>0]=k<<5|l>>>21;a[b+10>>0]=k>>>3;a[b+11>>0]=k>>>11;a[b+12>>0]=j<<6|k>>>19;a[b+13>>0]=j>>>2;a[b+14>>0]=j>>>10;a[b+15>>0]=j>>>18;a[b+16>>0]=i;a[b+17>>0]=i>>>8;a[b+18>>0]=i>>>16;a[b+19>>0]=h<<1|i>>>24;a[b+20>>0]=h>>>7;a[b+21>>0]=h>>>15;a[b+22>>0]=g<<3|h>>>23;a[b+23>>0]=g>>>5;a[b+24>>0]=g>>>13;a[b+25>>0]=f<<4|g>>>21;a[b+26>>0]=f>>>4;a[b+27>>0]=f>>>12;a[b+28>>0]=f>>>20|d<<6;a[b+29>>0]=e>>>2;a[b+30>>0]=e>>>10;a[b+31>>0]=d>>>18;return}function uc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0;l=c[b>>2]|0;s=c[b+4>>2]|0;j=c[b+8>>2]|0;Rb=c[b+12>>2]|0;e=c[b+16>>2]|0;za=c[b+20>>2]|0;ya=c[b+24>>2]|0;zb=c[b+28>>2]|0;h=c[b+32>>2]|0;ga=c[b+36>>2]|0;H=c[d>>2]|0;J=c[d+4>>2]|0;F=c[d+8>>2]|0;D=c[d+12>>2]|0;A=c[d+16>>2]|0;y=c[d+20>>2]|0;w=c[d+24>>2]|0;u=c[d+28>>2]|0;k=c[d+32>>2]|0;t=c[d+36>>2]|0;Oc=J*19|0;bc=F*19|0;rb=D*19|0;Ha=A*19|0;jc=y*19|0;Db=w*19|0;Ta=u*19|0;Sc=k*19|0;Qc=t*19|0;p=s<<1;f=Rb<<1;M=za<<1;i=zb<<1;d=ga<<1;o=((l|0)<0)<<31>>31;I=((H|0)<0)<<31>>31;Mc=wh(H|0,I|0,l|0,o|0)|0;Lc=C;K=((J|0)<0)<<31>>31;wc=wh(J|0,K|0,l|0,o|0)|0;vc=C;G=((F|0)<0)<<31>>31;ub=wh(F|0,G|0,l|0,o|0)|0;tb=C;E=((D|0)<0)<<31>>31;Ka=wh(D|0,E|0,l|0,o|0)|0;Ja=C;B=((A|0)<0)<<31>>31;mc=wh(A|0,B|0,l|0,o|0)|0;lc=C;z=((y|0)<0)<<31>>31;Gb=wh(y|0,z|0,l|0,o|0)|0;Fb=C;x=((w|0)<0)<<31>>31;Wa=wh(w|0,x|0,l|0,o|0)|0;Va=C;v=((u|0)<0)<<31>>31;ja=wh(u|0,v|0,l|0,o|0)|0;ia=C;Pc=((k|0)<0)<<31>>31;P=wh(k|0,Pc|0,l|0,o|0)|0;O=C;o=wh(t|0,((t|0)<0)<<31>>31|0,l|0,o|0)|0;l=C;t=((s|0)<0)<<31>>31;dc=wh(H|0,I|0,s|0,t|0)|0;ec=C;n=((p|0)<0)<<31>>31;yb=wh(J|0,K|0,p|0,n|0)|0;xb=C;Ma=wh(F|0,G|0,s|0,t|0)|0;La=C;oc=wh(D|0,E|0,p|0,n|0)|0;nc=C;Ib=wh(A|0,B|0,s|0,t|0)|0;Hb=C;Ya=wh(y|0,z|0,p|0,n|0)|0;Xa=C;la=wh(w|0,x|0,s|0,t|0)|0;ka=C;R=wh(u|0,v|0,p|0,n|0)|0;Q=C;t=wh(k|0,Pc|0,s|0,t|0)|0;s=C;Pc=((Qc|0)<0)<<31>>31;n=wh(Qc|0,Pc|0,p|0,n|0)|0;p=C;k=((j|0)<0)<<31>>31;wb=wh(H|0,I|0,j|0,k|0)|0;vb=C;Qa=wh(J|0,K|0,j|0,k|0)|0;Pa=C;qc=wh(F|0,G|0,j|0,k|0)|0;pc=C;Kb=wh(D|0,E|0,j|0,k|0)|0;Jb=C;_a=wh(A|0,B|0,j|0,k|0)|0;Za=C;na=wh(y|0,z|0,j|0,k|0)|0;ma=C;T=wh(w|0,x|0,j|0,k|0)|0;S=C;v=wh(u|0,v|0,j|0,k|0)|0;u=C;Rc=((Sc|0)<0)<<31>>31;yc=wh(Sc|0,Rc|0,j|0,k|0)|0;xc=C;k=wh(Qc|0,Pc|0,j|0,k|0)|0;j=C;Sb=((Rb|0)<0)<<31>>31;Oa=wh(H|0,I|0,Rb|0,Sb|0)|0;Na=C;fa=((f|0)<0)<<31>>31;uc=wh(J|0,K|0,f|0,fa|0)|0;tc=C;Mb=wh(F|0,G|0,Rb|0,Sb|0)|0;Lb=C;ab=wh(D|0,E|0,f|0,fa|0)|0;$a=C;pa=wh(A|0,B|0,Rb|0,Sb|0)|0;oa=C;V=wh(y|0,z|0,f|0,fa|0)|0;U=C;x=wh(w|0,x|0,Rb|0,Sb|0)|0;w=C;Ua=((Ta|0)<0)<<31>>31;Ac=wh(Ta|0,Ua|0,f|0,fa|0)|0;zc=C;Sb=wh(Sc|0,Rc|0,Rb|0,Sb|0)|0;Rb=C;fa=wh(Qc|0,Pc|0,f|0,fa|0)|0;f=C;N=((e|0)<0)<<31>>31;sc=wh(H|0,I|0,e|0,N|0)|0;rc=C;Qb=wh(J|0,K|0,e|0,N|0)|0;Pb=C;cb=wh(F|0,G|0,e|0,N|0)|0;bb=C;ra=wh(D|0,E|0,e|0,N|0)|0;qa=C;X=wh(A|0,B|0,e|0,N|0)|0;W=C;z=wh(y|0,z|0,e|0,N|0)|0;y=C;Eb=((Db|0)<0)<<31>>31;Cc=wh(Db|0,Eb|0,e|0,N|0)|0;Bc=C;Ub=wh(Ta|0,Ua|0,e|0,N|0)|0;Tb=C;ib=wh(Sc|0,Rc|0,e|0,N|0)|0;hb=C;N=wh(Qc|0,Pc|0,e|0,N|0)|0;e=C;Aa=((za|0)<0)<<31>>31;Ob=wh(H|0,I|0,za|0,Aa|0)|0;Nb=C;b=((M|0)<0)<<31>>31;gb=wh(J|0,K|0,M|0,b|0)|0;fb=C;ta=wh(F|0,G|0,za|0,Aa|0)|0;sa=C;Z=wh(D|0,E|0,M|0,b|0)|0;Y=C;B=wh(A|0,B|0,za|0,Aa|0)|0;A=C;kc=((jc|0)<0)<<31>>31;Ec=wh(jc|0,kc|0,M|0,b|0)|0;Dc=C;Wb=wh(Db|0,Eb|0,za|0,Aa|0)|0;Vb=C;kb=wh(Ta|0,Ua|0,M|0,b|0)|0;jb=C;Aa=wh(Sc|0,Rc|0,za|0,Aa|0)|0;za=C;b=wh(Qc|0,Pc|0,M|0,b|0)|0;M=C;g=((ya|0)<0)<<31>>31;eb=wh(H|0,I|0,ya|0,g|0)|0;db=C;xa=wh(J|0,K|0,ya|0,g|0)|0;wa=C;$=wh(F|0,G|0,ya|0,g|0)|0;_=C;E=wh(D|0,E|0,ya|0,g|0)|0;D=C;Ia=((Ha|0)<0)<<31>>31;Gc=wh(Ha|0,Ia|0,ya|0,g|0)|0;Fc=C;Yb=wh(jc|0,kc|0,ya|0,g|0)|0;Xb=C;mb=wh(Db|0,Eb|0,ya|0,g|0)|0;lb=C;Ca=wh(Ta|0,Ua|0,ya|0,g|0)|0;Ba=C;m=wh(Sc|0,Rc|0,ya|0,g|0)|0;r=C;g=wh(Qc|0,Pc|0,ya|0,g|0)|0;ya=C;Ab=((zb|0)<0)<<31>>31;va=wh(H|0,I|0,zb|0,Ab|0)|0;ua=C;ea=((i|0)<0)<<31>>31;da=wh(J|0,K|0,i|0,ea|0)|0;ca=C;G=wh(F|0,G|0,zb|0,Ab|0)|0;F=C;sb=((rb|0)<0)<<31>>31;Ic=wh(rb|0,sb|0,i|0,ea|0)|0;Hc=C;_b=wh(Ha|0,Ia|0,zb|0,Ab|0)|0;Zb=C;ob=wh(jc|0,kc|0,i|0,ea|0)|0;nb=C;Ea=wh(Db|0,Eb|0,zb|0,Ab|0)|0;Da=C;gc=wh(Ta|0,Ua|0,i|0,ea|0)|0;fc=C;Ab=wh(Sc|0,Rc|0,zb|0,Ab|0)|0;zb=C;ea=wh(Qc|0,Pc|0,i|0,ea|0)|0;i=C;L=((h|0)<0)<<31>>31;ba=wh(H|0,I|0,h|0,L|0)|0;aa=C;K=wh(J|0,K|0,h|0,L|0)|0;J=C;cc=((bc|0)<0)<<31>>31;Kc=wh(bc|0,cc|0,h|0,L|0)|0;Jc=C;ac=wh(rb|0,sb|0,h|0,L|0)|0;$b=C;qb=wh(Ha|0,Ia|0,h|0,L|0)|0;pb=C;Ga=wh(jc|0,kc|0,h|0,L|0)|0;Fa=C;ic=wh(Db|0,Eb|0,h|0,L|0)|0;hc=C;Cb=wh(Ta|0,Ua|0,h|0,L|0)|0;Bb=C;Sa=wh(Sc|0,Rc|0,h|0,L|0)|0;Ra=C;L=wh(Qc|0,Pc|0,h|0,L|0)|0;h=C;ha=((ga|0)<0)<<31>>31;I=wh(H|0,I|0,ga|0,ha|0)|0;H=C;q=((d|0)<0)<<31>>31;Oc=wh(Oc|0,((Oc|0)<0)<<31>>31|0,d|0,q|0)|0;Nc=C;cc=wh(bc|0,cc|0,ga|0,ha|0)|0;bc=C;sb=wh(rb|0,sb|0,d|0,q|0)|0;rb=C;Ia=wh(Ha|0,Ia|0,ga|0,ha|0)|0;Ha=C;kc=wh(jc|0,kc|0,d|0,q|0)|0;jc=C;Eb=wh(Db|0,Eb|0,ga|0,ha|0)|0;Db=C;Ua=wh(Ta|0,Ua|0,d|0,q|0)|0;Ta=C;ha=wh(Sc|0,Rc|0,ga|0,ha|0)|0;ga=C;q=wh(Qc|0,Pc|0,d|0,q|0)|0;d=C;Lc=lh(Oc|0,Nc|0,Mc|0,Lc|0)|0;Jc=lh(Lc|0,C|0,Kc|0,Jc|0)|0;Hc=lh(Jc|0,C|0,Ic|0,Hc|0)|0;Fc=lh(Hc|0,C|0,Gc|0,Fc|0)|0;Dc=lh(Fc|0,C|0,Ec|0,Dc|0)|0;Bc=lh(Dc|0,C|0,Cc|0,Bc|0)|0;zc=lh(Bc|0,C|0,Ac|0,zc|0)|0;xc=lh(zc|0,C|0,yc|0,xc|0)|0;p=lh(xc|0,C|0,n|0,p|0)|0;n=C;ec=lh(wc|0,vc|0,dc|0,ec|0)|0;dc=C;rc=lh(uc|0,tc|0,sc|0,rc|0)|0;pc=lh(rc|0,C|0,qc|0,pc|0)|0;nc=lh(pc|0,C|0,oc|0,nc|0)|0;lc=lh(nc|0,C|0,mc|0,lc|0)|0;jc=lh(lc|0,C|0,kc|0,jc|0)|0;hc=lh(jc|0,C|0,ic|0,hc|0)|0;fc=lh(hc|0,C|0,gc|0,fc|0)|0;r=lh(fc|0,C|0,m|0,r|0)|0;M=lh(r|0,C|0,b|0,M|0)|0;b=C;r=lh(p|0,n|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;m=C;bc=lh(ec|0,dc|0,cc|0,bc|0)|0;$b=lh(bc|0,C|0,ac|0,$b|0)|0;Zb=lh($b|0,C|0,_b|0,Zb|0)|0;Xb=lh(Zb|0,C|0,Yb|0,Xb|0)|0;Vb=lh(Xb|0,C|0,Wb|0,Vb|0)|0;Tb=lh(Vb|0,C|0,Ub|0,Tb|0)|0;Rb=lh(Tb|0,C|0,Sb|0,Rb|0)|0;j=lh(Rb|0,C|0,k|0,j|0)|0;j=lh(j|0,C|0,r|0,m|0)|0;k=C;m=ph(r|0,m|0,26)|0;m=kh(p|0,n|0,m|0,C|0)|0;n=C;p=lh(M|0,b|0,33554432,0)|0;p=mh(p|0,C|0,26)|0;r=C;Nb=lh(Qb|0,Pb|0,Ob|0,Nb|0)|0;Lb=lh(Nb|0,C|0,Mb|0,Lb|0)|0;Jb=lh(Lb|0,C|0,Kb|0,Jb|0)|0;Hb=lh(Jb|0,C|0,Ib|0,Hb|0)|0;Fb=lh(Hb|0,C|0,Gb|0,Fb|0)|0;Db=lh(Fb|0,C|0,Eb|0,Db|0)|0;Bb=lh(Db|0,C|0,Cb|0,Bb|0)|0;zb=lh(Bb|0,C|0,Ab|0,zb|0)|0;ya=lh(zb|0,C|0,g|0,ya|0)|0;ya=lh(ya|0,C|0,p|0,r|0)|0;g=C;r=ph(p|0,r|0,26)|0;r=kh(M|0,b|0,r|0,C|0)|0;b=C;M=lh(j|0,k|0,16777216,0)|0;M=mh(M|0,C|0,25)|0;p=C;vb=lh(yb|0,xb|0,wb|0,vb|0)|0;tb=lh(vb|0,C|0,ub|0,tb|0)|0;rb=lh(tb|0,C|0,sb|0,rb|0)|0;pb=lh(rb|0,C|0,qb|0,pb|0)|0;nb=lh(pb|0,C|0,ob|0,nb|0)|0;lb=lh(nb|0,C|0,mb|0,lb|0)|0;jb=lh(lb|0,C|0,kb|0,jb|0)|0;hb=lh(jb|0,C|0,ib|0,hb|0)|0;f=lh(hb|0,C|0,fa|0,f|0)|0;f=lh(f|0,C|0,M|0,p|0)|0;fa=C;p=ph(M|0,p|0,25)|0;p=kh(j|0,k|0,p|0,C|0)|0;k=C;j=lh(ya|0,g|0,16777216,0)|0;j=mh(j|0,C|0,25)|0;M=C;db=lh(gb|0,fb|0,eb|0,db|0)|0;bb=lh(db|0,C|0,cb|0,bb|0)|0;$a=lh(bb|0,C|0,ab|0,$a|0)|0;Za=lh($a|0,C|0,_a|0,Za|0)|0;Xa=lh(Za|0,C|0,Ya|0,Xa|0)|0;Va=lh(Xa|0,C|0,Wa|0,Va|0)|0;Ta=lh(Va|0,C|0,Ua|0,Ta|0)|0;Ra=lh(Ta|0,C|0,Sa|0,Ra|0)|0;i=lh(Ra|0,C|0,ea|0,i|0)|0;i=lh(i|0,C|0,j|0,M|0)|0;ea=C;M=ph(j|0,M|0,25)|0;M=kh(ya|0,g|0,M|0,C|0)|0;g=C;ya=lh(f|0,fa|0,33554432,0)|0;ya=mh(ya|0,C|0,26)|0;j=C;Na=lh(Qa|0,Pa|0,Oa|0,Na|0)|0;La=lh(Na|0,C|0,Ma|0,La|0)|0;Ja=lh(La|0,C|0,Ka|0,Ja|0)|0;Ha=lh(Ja|0,C|0,Ia|0,Ha|0)|0;Fa=lh(Ha|0,C|0,Ga|0,Fa|0)|0;Da=lh(Fa|0,C|0,Ea|0,Da|0)|0;Ba=lh(Da|0,C|0,Ca|0,Ba|0)|0;za=lh(Ba|0,C|0,Aa|0,za|0)|0;e=lh(za|0,C|0,N|0,e|0)|0;e=lh(e|0,C|0,ya|0,j|0)|0;N=C;j=ph(ya|0,j|0,26)|0;j=kh(f|0,fa|0,j|0,C|0)|0;fa=lh(i|0,ea|0,33554432,0)|0;fa=mh(fa|0,C|0,26)|0;f=C;ua=lh(xa|0,wa|0,va|0,ua|0)|0;sa=lh(ua|0,C|0,ta|0,sa|0)|0;qa=lh(sa|0,C|0,ra|0,qa|0)|0;oa=lh(qa|0,C|0,pa|0,oa|0)|0;ma=lh(oa|0,C|0,na|0,ma|0)|0;ka=lh(ma|0,C|0,la|0,ka|0)|0;ia=lh(ka|0,C|0,ja|0,ia|0)|0;ga=lh(ia|0,C|0,ha|0,ga|0)|0;h=lh(ga|0,C|0,L|0,h|0)|0;h=lh(h|0,C|0,fa|0,f|0)|0;L=C;f=ph(fa|0,f|0,26)|0;f=kh(i|0,ea|0,f|0,C|0)|0;ea=lh(e|0,N|0,16777216,0)|0;ea=mh(ea|0,C|0,25)|0;i=C;b=lh(ea|0,i|0,r|0,b|0)|0;r=C;i=ph(ea|0,i|0,25)|0;i=kh(e|0,N|0,i|0,C|0)|0;N=lh(h|0,L|0,16777216,0)|0;N=mh(N|0,C|0,25)|0;e=C;aa=lh(da|0,ca|0,ba|0,aa|0)|0;_=lh(aa|0,C|0,$|0,_|0)|0;Y=lh(_|0,C|0,Z|0,Y|0)|0;W=lh(Y|0,C|0,X|0,W|0)|0;U=lh(W|0,C|0,V|0,U|0)|0;S=lh(U|0,C|0,T|0,S|0)|0;Q=lh(S|0,C|0,R|0,Q|0)|0;O=lh(Q|0,C|0,P|0,O|0)|0;d=lh(O|0,C|0,q|0,d|0)|0;d=lh(d|0,C|0,N|0,e|0)|0;q=C;e=ph(N|0,e|0,25)|0;e=kh(h|0,L|0,e|0,C|0)|0;L=lh(b|0,r|0,33554432,0)|0;L=mh(L|0,C|0,26)|0;h=C;g=lh(M|0,g|0,L|0,h|0)|0;h=ph(L|0,h|0,26)|0;h=kh(b|0,r|0,h|0,C|0)|0;r=lh(d|0,q|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;b=C;H=lh(K|0,J|0,I|0,H|0)|0;F=lh(H|0,C|0,G|0,F|0)|0;D=lh(F|0,C|0,E|0,D|0)|0;A=lh(D|0,C|0,B|0,A|0)|0;y=lh(A|0,C|0,z|0,y|0)|0;w=lh(y|0,C|0,x|0,w|0)|0;u=lh(w|0,C|0,v|0,u|0)|0;s=lh(u|0,C|0,t|0,s|0)|0;l=lh(s|0,C|0,o|0,l|0)|0;l=lh(l|0,C|0,r|0,b|0)|0;o=C;b=ph(r|0,b|0,26)|0;b=kh(d|0,q|0,b|0,C|0)|0;q=lh(l|0,o|0,16777216,0)|0;q=mh(q|0,C|0,25)|0;d=C;r=wh(q|0,d|0,19,0)|0;n=lh(r|0,C|0,m|0,n|0)|0;m=C;d=ph(q|0,d|0,25)|0;d=kh(l|0,o|0,d|0,C|0)|0;o=lh(n|0,m|0,33554432,0)|0;o=mh(o|0,C|0,26)|0;l=C;k=lh(p|0,k|0,o|0,l|0)|0;l=ph(o|0,l|0,26)|0;l=kh(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=b;c[a+36>>2]=d;return}function vc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0;bb=c[b>>2]|0;ua=c[b+4>>2]|0;j=c[b+8>>2]|0;la=c[b+12>>2]|0;e=c[b+16>>2]|0;db=c[b+20>>2]|0;Y=c[b+24>>2]|0;La=c[b+28>>2]|0;h=c[b+32>>2]|0;b=c[b+36>>2]|0;l=bb<<1;p=ua<<1;Xa=j<<1;f=la<<1;na=e<<1;B=db<<1;m=Y<<1;i=La<<1;Ka=db*38|0;ra=Y*19|0;va=La*38|0;da=h*19|0;gb=b*38|0;cb=((bb|0)<0)<<31>>31;cb=wh(bb|0,cb|0,bb|0,cb|0)|0;bb=C;o=((l|0)<0)<<31>>31;ta=((ua|0)<0)<<31>>31;Ia=wh(l|0,o|0,ua|0,ta|0)|0;Ha=C;k=((j|0)<0)<<31>>31;Wa=wh(j|0,k|0,l|0,o|0)|0;Va=C;ma=((la|0)<0)<<31>>31;Ua=wh(la|0,ma|0,l|0,o|0)|0;Ta=C;D=((e|0)<0)<<31>>31;Oa=wh(e|0,D|0,l|0,o|0)|0;Na=C;eb=((db|0)<0)<<31>>31;ya=wh(db|0,eb|0,l|0,o|0)|0;xa=C;g=((Y|0)<0)<<31>>31;ga=wh(Y|0,g|0,l|0,o|0)|0;fa=C;Ma=((La|0)<0)<<31>>31;R=wh(La|0,Ma|0,l|0,o|0)|0;Q=C;A=((h|0)<0)<<31>>31;F=wh(h|0,A|0,l|0,o|0)|0;E=C;q=((b|0)<0)<<31>>31;o=wh(b|0,q|0,l|0,o|0)|0;l=C;n=((p|0)<0)<<31>>31;ta=wh(p|0,n|0,ua|0,ta|0)|0;ua=C;ba=wh(p|0,n|0,j|0,k|0)|0;ca=C;P=((f|0)<0)<<31>>31;Sa=wh(f|0,P|0,p|0,n|0)|0;Ra=C;Ca=wh(e|0,D|0,p|0,n|0)|0;Ba=C;d=((B|0)<0)<<31>>31;ia=wh(B|0,d|0,p|0,n|0)|0;ha=C;T=wh(Y|0,g|0,p|0,n|0)|0;S=C;O=((i|0)<0)<<31>>31;H=wh(i|0,O|0,p|0,n|0)|0;G=C;t=wh(h|0,A|0,p|0,n|0)|0;s=C;fb=((gb|0)<0)<<31>>31;n=wh(gb|0,fb|0,p|0,n|0)|0;p=C;Qa=wh(j|0,k|0,j|0,k|0)|0;Pa=C;Ya=((Xa|0)<0)<<31>>31;Aa=wh(Xa|0,Ya|0,la|0,ma|0)|0;za=C;ka=wh(e|0,D|0,Xa|0,Ya|0)|0;ja=C;X=wh(db|0,eb|0,Xa|0,Ya|0)|0;W=C;N=wh(Y|0,g|0,Xa|0,Ya|0)|0;M=C;v=wh(La|0,Ma|0,Xa|0,Ya|0)|0;u=C;ea=((da|0)<0)<<31>>31;Ya=wh(da|0,ea|0,Xa|0,Ya|0)|0;Xa=C;k=wh(gb|0,fb|0,j|0,k|0)|0;j=C;ma=wh(f|0,P|0,la|0,ma|0)|0;la=C;V=wh(f|0,P|0,e|0,D|0)|0;U=C;J=wh(B|0,d|0,f|0,P|0)|0;I=C;z=wh(Y|0,g|0,f|0,P|0)|0;y=C;wa=((va|0)<0)<<31>>31;_a=wh(va|0,wa|0,f|0,P|0)|0;Za=C;Ea=wh(da|0,ea|0,f|0,P|0)|0;Da=C;P=wh(gb|0,fb|0,f|0,P|0)|0;f=C;L=wh(e|0,D|0,e|0,D|0)|0;K=C;oa=((na|0)<0)<<31>>31;x=wh(na|0,oa|0,db|0,eb|0)|0;w=C;sa=((ra|0)<0)<<31>>31;ab=wh(ra|0,sa|0,na|0,oa|0)|0;$a=C;Ga=wh(va|0,wa|0,e|0,D|0)|0;Fa=C;oa=wh(da|0,ea|0,na|0,oa|0)|0;na=C;D=wh(gb|0,fb|0,e|0,D|0)|0;e=C;eb=wh(Ka|0,((Ka|0)<0)<<31>>31|0,db|0,eb|0)|0;db=C;Ka=wh(ra|0,sa|0,B|0,d|0)|0;Ja=C;qa=wh(va|0,wa|0,B|0,d|0)|0;pa=C;_=wh(da|0,ea|0,B|0,d|0)|0;Z=C;d=wh(gb|0,fb|0,B|0,d|0)|0;B=C;sa=wh(ra|0,sa|0,Y|0,g|0)|0;ra=C;aa=wh(va|0,wa|0,Y|0,g|0)|0;$=C;m=wh(da|0,ea|0,m|0,((m|0)<0)<<31>>31|0)|0;r=C;g=wh(gb|0,fb|0,Y|0,g|0)|0;Y=C;Ma=wh(va|0,wa|0,La|0,Ma|0)|0;La=C;wa=wh(da|0,ea|0,i|0,O|0)|0;va=C;O=wh(gb|0,fb|0,i|0,O|0)|0;i=C;ea=wh(da|0,ea|0,h|0,A|0)|0;da=C;A=wh(gb|0,fb|0,h|0,A|0)|0;h=C;q=wh(gb|0,fb|0,b|0,q|0)|0;b=C;bb=lh(eb|0,db|0,cb|0,bb|0)|0;$a=lh(bb|0,C|0,ab|0,$a|0)|0;Za=lh($a|0,C|0,_a|0,Za|0)|0;Xa=lh(Za|0,C|0,Ya|0,Xa|0)|0;p=lh(Xa|0,C|0,n|0,p|0)|0;n=C;ua=lh(Wa|0,Va|0,ta|0,ua|0)|0;ta=C;ca=lh(Ua|0,Ta|0,ba|0,ca|0)|0;ba=C;Pa=lh(Sa|0,Ra|0,Qa|0,Pa|0)|0;Na=lh(Pa|0,C|0,Oa|0,Na|0)|0;La=lh(Na|0,C|0,Ma|0,La|0)|0;r=lh(La|0,C|0,m|0,r|0)|0;B=lh(r|0,C|0,d|0,B|0)|0;d=C;r=lh(p|0,n|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;m=C;Ha=lh(Ka|0,Ja|0,Ia|0,Ha|0)|0;Fa=lh(Ha|0,C|0,Ga|0,Fa|0)|0;Da=lh(Fa|0,C|0,Ea|0,Da|0)|0;j=lh(Da|0,C|0,k|0,j|0)|0;j=lh(j|0,C|0,r|0,m|0)|0;k=C;m=ph(r|0,m|0,26)|0;m=kh(p|0,n|0,m|0,C|0)|0;n=C;p=lh(B|0,d|0,33554432,0)|0;p=mh(p|0,C|0,26)|0;r=C;za=lh(Ca|0,Ba|0,Aa|0,za|0)|0;xa=lh(za|0,C|0,ya|0,xa|0)|0;va=lh(xa|0,C|0,wa|0,va|0)|0;Y=lh(va|0,C|0,g|0,Y|0)|0;Y=lh(Y|0,C|0,p|0,r|0)|0;g=C;r=ph(p|0,r|0,26)|0;r=kh(B|0,d|0,r|0,C|0)|0;d=C;B=lh(j|0,k|0,16777216,0)|0;B=mh(B|0,C|0,25)|0;p=C;ra=lh(ua|0,ta|0,sa|0,ra|0)|0;pa=lh(ra|0,C|0,qa|0,pa|0)|0;na=lh(pa|0,C|0,oa|0,na|0)|0;f=lh(na|0,C|0,P|0,f|0)|0;f=lh(f|0,C|0,B|0,p|0)|0;P=C;p=ph(B|0,p|0,25)|0;p=kh(j|0,k|0,p|0,C|0)|0;k=C;j=lh(Y|0,g|0,16777216,0)|0;j=mh(j|0,C|0,25)|0;B=C;ja=lh(ma|0,la|0,ka|0,ja|0)|0;ha=lh(ja|0,C|0,ia|0,ha|0)|0;fa=lh(ha|0,C|0,ga|0,fa|0)|0;da=lh(fa|0,C|0,ea|0,da|0)|0;i=lh(da|0,C|0,O|0,i|0)|0;i=lh(i|0,C|0,j|0,B|0)|0;O=C;B=ph(j|0,B|0,25)|0;B=kh(Y|0,g|0,B|0,C|0)|0;g=C;Y=lh(f|0,P|0,33554432,0)|0;Y=mh(Y|0,C|0,26)|0;j=C;$=lh(ca|0,ba|0,aa|0,$|0)|0;Z=lh($|0,C|0,_|0,Z|0)|0;e=lh(Z|0,C|0,D|0,e|0)|0;e=lh(e|0,C|0,Y|0,j|0)|0;D=C;j=ph(Y|0,j|0,26)|0;j=kh(f|0,P|0,j|0,C|0)|0;P=lh(i|0,O|0,33554432,0)|0;P=mh(P|0,C|0,26)|0;f=C;U=lh(X|0,W|0,V|0,U|0)|0;S=lh(U|0,C|0,T|0,S|0)|0;Q=lh(S|0,C|0,R|0,Q|0)|0;h=lh(Q|0,C|0,A|0,h|0)|0;h=lh(h|0,C|0,P|0,f|0)|0;A=C;f=ph(P|0,f|0,26)|0;f=kh(i|0,O|0,f|0,C|0)|0;O=lh(e|0,D|0,16777216,0)|0;O=mh(O|0,C|0,25)|0;i=C;d=lh(O|0,i|0,r|0,d|0)|0;r=C;i=ph(O|0,i|0,25)|0;i=kh(e|0,D|0,i|0,C|0)|0;D=lh(h|0,A|0,16777216,0)|0;D=mh(D|0,C|0,25)|0;e=C;K=lh(N|0,M|0,L|0,K|0)|0;I=lh(K|0,C|0,J|0,I|0)|0;G=lh(I|0,C|0,H|0,G|0)|0;E=lh(G|0,C|0,F|0,E|0)|0;b=lh(E|0,C|0,q|0,b|0)|0;b=lh(b|0,C|0,D|0,e|0)|0;q=C;e=ph(D|0,e|0,25)|0;e=kh(h|0,A|0,e|0,C|0)|0;A=lh(d|0,r|0,33554432,0)|0;A=mh(A|0,C|0,26)|0;h=C;g=lh(B|0,g|0,A|0,h|0)|0;h=ph(A|0,h|0,26)|0;h=kh(d|0,r|0,h|0,C|0)|0;r=lh(b|0,q|0,33554432,0)|0;r=mh(r|0,C|0,26)|0;d=C;w=lh(z|0,y|0,x|0,w|0)|0;u=lh(w|0,C|0,v|0,u|0)|0;s=lh(u|0,C|0,t|0,s|0)|0;l=lh(s|0,C|0,o|0,l|0)|0;l=lh(l|0,C|0,r|0,d|0)|0;o=C;d=ph(r|0,d|0,26)|0;d=kh(b|0,q|0,d|0,C|0)|0;q=lh(l|0,o|0,16777216,0)|0;q=mh(q|0,C|0,25)|0;b=C;r=wh(q|0,b|0,19,0)|0;n=lh(r|0,C|0,m|0,n|0)|0;m=C;b=ph(q|0,b|0,25)|0;b=kh(l|0,o|0,b|0,C|0)|0;o=lh(n|0,m|0,33554432,0)|0;o=mh(o|0,C|0,26)|0;l=C;k=lh(p|0,k|0,o|0,l|0)|0;l=ph(o|0,l|0,26)|0;l=kh(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=d;c[a+36>>2]=b;return}function wc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=i;c=i=i+63&-64;i=i+160|0;d=c+120|0;e=c+80|0;f=c+40|0;vc(d,b);vc(e,d);vc(e,e);uc(e,b,e);uc(d,d,e);vc(f,d);uc(e,e,f);vc(f,e);vc(f,f);vc(f,f);vc(f,f);vc(f,f);uc(e,f,e);vc(f,e);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);uc(f,f,e);vc(c,f);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);vc(c,c);uc(f,c,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);vc(f,f);uc(e,f,e);vc(f,e);b=1;do{vc(f,f);b=b+1|0}while((b|0)!=50);uc(f,f,e);vc(c,f);b=1;do{vc(c,c);b=b+1|0}while((b|0)!=100);uc(f,c,f);vc(f,f);b=1;do{vc(f,f);b=b+1|0}while((b|0)!=50);uc(e,f,e);vc(e,e);vc(e,e);vc(e,e);vc(e,e);vc(e,e);uc(a,e,d);i=g;return}function xc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;V=b+40|0;j=b+44|0;m=b+48|0;p=b+52|0;s=b+56|0;v=b+60|0;y=b+64|0;B=b+68|0;E=b+72|0;C=b+76|0;S=b+4|0;P=b+8|0;e=b+12|0;l=b+16|0;n=b+20|0;u=b+24|0;w=b+28|0;D=b+32|0;O=b+36|0;ga=(c[S>>2]|0)+(c[j>>2]|0)|0;fa=(c[P>>2]|0)+(c[m>>2]|0)|0;ea=(c[e>>2]|0)+(c[p>>2]|0)|0;da=(c[l>>2]|0)+(c[s>>2]|0)|0;ca=(c[n>>2]|0)+(c[v>>2]|0)|0;ba=(c[u>>2]|0)+(c[y>>2]|0)|0;aa=(c[w>>2]|0)+(c[B>>2]|0)|0;$=(c[D>>2]|0)+(c[E>>2]|0)|0;Y=(c[O>>2]|0)+(c[C>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[V>>2]|0);ha=a+4|0;c[ha>>2]=ga;ga=a+8|0;c[ga>>2]=fa;fa=a+12|0;c[fa>>2]=ea;ea=a+16|0;c[ea>>2]=da;da=a+20|0;c[da>>2]=ca;ca=a+24|0;c[ca>>2]=ba;ba=a+28|0;c[ba>>2]=aa;aa=a+32|0;c[aa>>2]=$;$=a+36|0;c[$>>2]=Y;Y=a+40|0;S=(c[j>>2]|0)-(c[S>>2]|0)|0;P=(c[m>>2]|0)-(c[P>>2]|0)|0;e=(c[p>>2]|0)-(c[e>>2]|0)|0;l=(c[s>>2]|0)-(c[l>>2]|0)|0;n=(c[v>>2]|0)-(c[n>>2]|0)|0;u=(c[y>>2]|0)-(c[u>>2]|0)|0;w=(c[B>>2]|0)-(c[w>>2]|0)|0;D=(c[E>>2]|0)-(c[D>>2]|0)|0;O=(c[C>>2]|0)-(c[O>>2]|0)|0;c[Y>>2]=(c[V>>2]|0)-(c[b>>2]|0);V=a+44|0;c[V>>2]=S;S=a+48|0;c[S>>2]=P;P=a+52|0;c[P>>2]=e;e=a+56|0;c[e>>2]=l;l=a+60|0;c[l>>2]=n;n=a+64|0;c[n>>2]=u;u=a+68|0;c[u>>2]=w;w=a+72|0;c[w>>2]=D;D=a+76|0;c[D>>2]=O;O=a+80|0;uc(O,a,d);uc(Y,Y,d+40|0);C=a+120|0;uc(C,d+120|0,b+120|0);uc(a,b+80|0,d+80|0);E=c[a>>2]<<1;B=c[ha>>2]<<1;y=c[ga>>2]<<1;v=c[fa>>2]<<1;s=c[ea>>2]<<1;p=c[da>>2]<<1;m=c[ca>>2]<<1;j=c[ba>>2]<<1;g=c[aa>>2]<<1;b=c[$>>2]<<1;Z=c[O>>2]|0;N=a+84|0;W=c[N>>2]|0;M=a+88|0;T=c[M>>2]|0;L=a+92|0;Q=c[L>>2]|0;K=a+96|0;f=c[K>>2]|0;J=a+100|0;h=c[J>>2]|0;I=a+104|0;o=c[I>>2]|0;H=a+108|0;q=c[H>>2]|0;G=a+112|0;x=c[G>>2]|0;F=a+116|0;z=c[F>>2]|0;_=c[Y>>2]|0;X=c[V>>2]|0;U=c[S>>2]|0;R=c[P>>2]|0;d=c[e>>2]|0;i=c[l>>2]|0;k=c[n>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;A=c[D>>2]|0;c[a>>2]=Z-_;c[ha>>2]=W-X;c[ga>>2]=T-U;c[fa>>2]=Q-R;c[ea>>2]=f-d;c[da>>2]=h-i;c[ca>>2]=o-k;c[ba>>2]=q-r;c[aa>>2]=x-t;c[$>>2]=z-A;c[Y>>2]=_+Z;c[V>>2]=X+W;c[S>>2]=U+T;c[P>>2]=R+Q;c[e>>2]=d+f;c[l>>2]=i+h;c[n>>2]=k+o;c[u>>2]=r+q;c[w>>2]=t+x;c[D>>2]=A+z;D=c[C>>2]|0;z=a+124|0;A=c[z>>2]|0;w=a+128|0;x=c[w>>2]|0;t=a+132|0;u=c[t>>2]|0;q=a+136|0;r=c[q>>2]|0;n=a+140|0;o=c[n>>2]|0;k=a+144|0;l=c[k>>2]|0;h=a+148|0;i=c[h>>2]|0;e=a+152|0;f=c[e>>2]|0;a=a+156|0;d=c[a>>2]|0;c[O>>2]=D+E;c[N>>2]=A+B;c[M>>2]=x+y;c[L>>2]=u+v;c[K>>2]=r+s;c[J>>2]=o+p;c[I>>2]=l+m;c[H>>2]=i+j;c[G>>2]=f+g;c[F>>2]=d+b;c[C>>2]=E-D;c[z>>2]=B-A;c[w>>2]=y-x;c[t>>2]=v-u;c[q>>2]=s-r;c[n>>2]=p-o;c[k>>2]=m-l;c[h>>2]=j-i;c[e>>2]=g-f;c[a>>2]=b-d;return}function yc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;V=i;R=i=i+63&-64;i=i+320|0;U=R+280|0;l=R+240|0;k=R+200|0;S=R+160|0;m=R+120|0;n=R+80|0;o=R+40|0;T=b+40|0;sc(T,e);h=b+80|0;c[h>>2]=1;j=b+84|0;f=j;g=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));vc(S,T);uc(m,S,464);O=S+4|0;P=S+8|0;Q=S+12|0;I=S+16|0;J=S+20|0;K=S+24|0;L=S+28|0;M=S+32|0;N=S+36|0;$=c[h>>2]|0;_=c[j>>2]|0;Y=c[b+88>>2]|0;W=c[b+92>>2]|0;q=c[b+96>>2]|0;u=c[b+100>>2]|0;w=c[b+104>>2]|0;y=c[b+108>>2]|0;A=c[b+112>>2]|0;C=c[b+116>>2]|0;g=(c[S>>2]|0)-$|0;h=(c[O>>2]|0)-_|0;j=(c[P>>2]|0)-Y|0;s=(c[Q>>2]|0)-W|0;t=(c[I>>2]|0)-q|0;D=(c[J>>2]|0)-u|0;E=(c[K>>2]|0)-w|0;F=(c[L>>2]|0)-y|0;G=(c[M>>2]|0)-A|0;H=(c[N>>2]|0)-C|0;c[S>>2]=g;c[O>>2]=h;c[P>>2]=j;c[Q>>2]=s;c[I>>2]=t;c[J>>2]=D;c[K>>2]=E;c[L>>2]=F;c[M>>2]=G;c[N>>2]=H;Z=m+4|0;X=m+8|0;p=m+12|0;r=m+16|0;v=m+20|0;x=m+24|0;z=m+28|0;B=m+32|0;f=m+36|0;_=_+(c[Z>>2]|0)|0;Y=Y+(c[X>>2]|0)|0;W=W+(c[p>>2]|0)|0;q=q+(c[r>>2]|0)|0;u=u+(c[v>>2]|0)|0;w=w+(c[x>>2]|0)|0;y=y+(c[z>>2]|0)|0;A=A+(c[B>>2]|0)|0;C=C+(c[f>>2]|0)|0;c[m>>2]=$+(c[m>>2]|0);c[Z>>2]=_;c[X>>2]=Y;c[p>>2]=W;c[r>>2]=q;c[v>>2]=u;c[x>>2]=w;c[z>>2]=y;c[B>>2]=A;c[f>>2]=C;vc(n,m);uc(n,n,m);vc(b,n);uc(b,b,m);uc(b,b,S);vc(U,b);vc(l,U);vc(l,l);uc(l,b,l);uc(U,U,l);vc(U,U);uc(U,l,U);vc(l,U);vc(l,l);vc(l,l);vc(l,l);vc(l,l);uc(U,l,U);vc(l,U);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);uc(l,l,U);vc(k,l);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);vc(k,k);uc(l,k,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);vc(l,l);uc(U,l,U);vc(l,U);f=1;do{vc(l,l);f=f+1|0}while((f|0)!=50);uc(l,l,U);vc(k,l);f=1;do{vc(k,k);f=f+1|0}while((f|0)!=100);uc(l,k,l);vc(l,l);f=1;do{vc(l,l);f=f+1|0}while((f|0)!=50);uc(U,l,U);vc(U,U);vc(U,U);uc(b,U,b);uc(b,b,n);uc(b,b,S);vc(o,b);uc(o,o,m);u=c[o>>2]|0;v=c[o+4>>2]|0;w=c[o+8>>2]|0;x=c[o+12>>2]|0;y=c[o+16>>2]|0;z=c[o+20>>2]|0;A=c[o+24>>2]|0;B=c[o+28>>2]|0;C=c[o+32>>2]|0;r=c[o+36>>2]|0;c[R>>2]=u-g;q=R+4|0;c[q>>2]=v-h;p=R+8|0;c[p>>2]=w-j;o=R+12|0;c[o>>2]=x-s;n=R+16|0;c[n>>2]=y-t;m=R+20|0;c[m>>2]=z-D;l=R+24|0;c[l>>2]=A-E;k=R+28|0;c[k>>2]=B-F;j=R+32|0;c[j>>2]=C-G;h=R+36|0;c[h>>2]=r-H;tc(U,R);f=0;g=0;do{f=(a[34664+g>>0]^a[U+g>>0])&255|f;g=g+1|0}while((g|0)!=32);do if(!(f+511&256)){O=(c[O>>2]|0)+v|0;W=(c[P>>2]|0)+w|0;X=(c[Q>>2]|0)+x|0;Y=(c[I>>2]|0)+y|0;Z=(c[J>>2]|0)+z|0;_=(c[K>>2]|0)+A|0;$=(c[L>>2]|0)+B|0;g=(c[M>>2]|0)+C|0;f=(c[N>>2]|0)+r|0;c[R>>2]=(c[S>>2]|0)+u;c[q>>2]=O;c[p>>2]=W;c[o>>2]=X;c[n>>2]=Y;c[m>>2]=Z;c[l>>2]=_;c[k>>2]=$;c[j>>2]=g;c[h>>2]=f;tc(U,R);f=0;g=0;do{f=(a[34664+g>>0]^a[U+g>>0])&255|f;g=g+1|0}while((g|0)!=32);if(!(f+511&256)){$=-1;i=V;return $|0}else{uc(b,b,504);break}}while(0);tc(U,b);if(((d[U>>0]|0)&1|0)==((d[e+31>>0]|0)>>>7|0)){K=b+4|0;M=b+8|0;O=b+12|0;Q=b+16|0;S=b+20|0;U=b+24|0;X=b+28|0;Z=b+32|0;$=b+36|0;J=0-(c[K>>2]|0)|0;L=0-(c[M>>2]|0)|0;N=0-(c[O>>2]|0)|0;P=0-(c[Q>>2]|0)|0;R=0-(c[S>>2]|0)|0;e=0-(c[U>>2]|0)|0;W=0-(c[X>>2]|0)|0;Y=0-(c[Z>>2]|0)|0;_=0-(c[$>>2]|0)|0;c[b>>2]=0-(c[b>>2]|0);c[K>>2]=J;c[M>>2]=L;c[O>>2]=N;c[Q>>2]=P;c[S>>2]=R;c[U>>2]=e;c[X>>2]=W;c[Z>>2]=Y;c[$>>2]=_}uc(b+120|0,b,T);$=0;i=V;return $|0}function zc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;V=b+40|0;j=b+44|0;m=b+48|0;p=b+52|0;s=b+56|0;v=b+60|0;y=b+64|0;B=b+68|0;E=b+72|0;C=b+76|0;S=b+4|0;P=b+8|0;e=b+12|0;l=b+16|0;n=b+20|0;u=b+24|0;w=b+28|0;D=b+32|0;O=b+36|0;ga=(c[S>>2]|0)+(c[j>>2]|0)|0;fa=(c[P>>2]|0)+(c[m>>2]|0)|0;ea=(c[e>>2]|0)+(c[p>>2]|0)|0;da=(c[l>>2]|0)+(c[s>>2]|0)|0;ca=(c[n>>2]|0)+(c[v>>2]|0)|0;ba=(c[u>>2]|0)+(c[y>>2]|0)|0;aa=(c[w>>2]|0)+(c[B>>2]|0)|0;$=(c[D>>2]|0)+(c[E>>2]|0)|0;Y=(c[O>>2]|0)+(c[C>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[V>>2]|0);ha=a+4|0;c[ha>>2]=ga;ga=a+8|0;c[ga>>2]=fa;fa=a+12|0;c[fa>>2]=ea;ea=a+16|0;c[ea>>2]=da;da=a+20|0;c[da>>2]=ca;ca=a+24|0;c[ca>>2]=ba;ba=a+28|0;c[ba>>2]=aa;aa=a+32|0;c[aa>>2]=$;$=a+36|0;c[$>>2]=Y;Y=a+40|0;S=(c[j>>2]|0)-(c[S>>2]|0)|0;P=(c[m>>2]|0)-(c[P>>2]|0)|0;e=(c[p>>2]|0)-(c[e>>2]|0)|0;l=(c[s>>2]|0)-(c[l>>2]|0)|0;n=(c[v>>2]|0)-(c[n>>2]|0)|0;u=(c[y>>2]|0)-(c[u>>2]|0)|0;w=(c[B>>2]|0)-(c[w>>2]|0)|0;D=(c[E>>2]|0)-(c[D>>2]|0)|0;O=(c[C>>2]|0)-(c[O>>2]|0)|0;c[Y>>2]=(c[V>>2]|0)-(c[b>>2]|0);V=a+44|0;c[V>>2]=S;S=a+48|0;c[S>>2]=P;P=a+52|0;c[P>>2]=e;e=a+56|0;c[e>>2]=l;l=a+60|0;c[l>>2]=n;n=a+64|0;c[n>>2]=u;u=a+68|0;c[u>>2]=w;w=a+72|0;c[w>>2]=D;D=a+76|0;c[D>>2]=O;O=a+80|0;uc(O,a,d);uc(Y,Y,d+40|0);C=a+120|0;uc(C,d+80|0,b+120|0);E=c[b+80>>2]<<1;B=c[b+84>>2]<<1;y=c[b+88>>2]<<1;v=c[b+92>>2]<<1;s=c[b+96>>2]<<1;p=c[b+100>>2]<<1;m=c[b+104>>2]<<1;j=c[b+108>>2]<<1;g=c[b+112>>2]<<1;b=c[b+116>>2]<<1;Z=c[O>>2]|0;N=a+84|0;W=c[N>>2]|0;M=a+88|0;T=c[M>>2]|0;L=a+92|0;Q=c[L>>2]|0;K=a+96|0;f=c[K>>2]|0;J=a+100|0;h=c[J>>2]|0;I=a+104|0;o=c[I>>2]|0;H=a+108|0;q=c[H>>2]|0;G=a+112|0;x=c[G>>2]|0;F=a+116|0;z=c[F>>2]|0;_=c[Y>>2]|0;X=c[V>>2]|0;U=c[S>>2]|0;R=c[P>>2]|0;d=c[e>>2]|0;i=c[l>>2]|0;k=c[n>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;A=c[D>>2]|0;c[a>>2]=Z-_;c[ha>>2]=W-X;c[ga>>2]=T-U;c[fa>>2]=Q-R;c[ea>>2]=f-d;c[da>>2]=h-i;c[ca>>2]=o-k;c[ba>>2]=q-r;c[aa>>2]=x-t;c[$>>2]=z-A;c[Y>>2]=_+Z;c[V>>2]=X+W;c[S>>2]=U+T;c[P>>2]=R+Q;c[e>>2]=d+f;c[l>>2]=i+h;c[n>>2]=k+o;c[u>>2]=r+q;c[w>>2]=t+x;c[D>>2]=A+z;D=c[C>>2]|0;z=a+124|0;A=c[z>>2]|0;w=a+128|0;x=c[w>>2]|0;t=a+132|0;u=c[t>>2]|0;q=a+136|0;r=c[q>>2]|0;n=a+140|0;o=c[n>>2]|0;k=a+144|0;l=c[k>>2]|0;h=a+148|0;i=c[h>>2]|0;e=a+152|0;f=c[e>>2]|0;a=a+156|0;d=c[a>>2]|0;c[O>>2]=D+E;c[N>>2]=A+B;c[M>>2]=x+y;c[L>>2]=u+v;c[K>>2]=r+s;c[J>>2]=o+p;c[I>>2]=l+m;c[H>>2]=i+j;c[G>>2]=f+g;c[F>>2]=d+b;c[C>>2]=E-D;c[z>>2]=B-A;c[w>>2]=y-x;c[t>>2]=v-u;c[q>>2]=s-r;c[n>>2]=p-o;c[k>>2]=m-l;c[h>>2]=j-i;c[e>>2]=g-f;c[a>>2]=b-d;return}function Ac(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;d=i;S=i=i+63&-64;i=i+48|0;vc(a,b);aa=a+80|0;ta=b+40|0;vc(aa,ta);v=a+120|0;ib=c[b+80>>2]|0;Sa=c[b+84>>2]|0;p=c[b+88>>2]|0;x=c[b+92>>2]|0;f=c[b+96>>2]|0;kb=c[b+100>>2]|0;_=c[b+104>>2]|0;wa=c[b+108>>2]|0;l=c[b+112>>2]|0;ua=c[b+116>>2]|0;t=ib<<1;ra=Sa<<1;cb=p<<1;g=x<<1;Ma=f<<1;e=kb<<1;va=_<<1;n=wa<<1;bb=kb*38|0;Qa=_*19|0;Q=wa*38|0;H=l*19|0;nb=ua*38|0;jb=((ib|0)<0)<<31>>31;jb=wh(ib|0,jb|0,ib|0,jb|0)|0;ib=C;qa=((t|0)<0)<<31>>31;Ta=((Sa|0)<0)<<31>>31;$a=wh(t|0,qa|0,Sa|0,Ta|0)|0;_a=C;r=((p|0)<0)<<31>>31;Va=wh(p|0,r|0,t|0,qa|0)|0;Ua=C;R=((x|0)<0)<<31>>31;La=wh(x|0,R|0,t|0,qa|0)|0;Ka=C;ka=((f|0)<0)<<31>>31;za=wh(f|0,ka|0,t|0,qa|0)|0;ya=C;lb=((kb|0)<0)<<31>>31;K=wh(kb|0,lb|0,t|0,qa|0)|0;M=C;j=((_|0)<0)<<31>>31;k=wh(_|0,j|0,t|0,qa|0)|0;F=C;xa=((wa|0)<0)<<31>>31;u=wh(wa|0,xa|0,t|0,qa|0)|0;P=C;ma=((l|0)<0)<<31>>31;W=wh(l|0,ma|0,t|0,qa|0)|0;fa=C;oa=((ua|0)<0)<<31>>31;qa=wh(ua|0,oa|0,t|0,qa|0)|0;t=C;pa=((ra|0)<0)<<31>>31;Ta=wh(ra|0,pa|0,Sa|0,Ta|0)|0;Sa=C;Ja=wh(ra|0,pa|0,p|0,r|0)|0;Ia=C;ja=((g|0)<0)<<31>>31;Da=wh(g|0,ja|0,ra|0,pa|0)|0;Ca=C;B=wh(f|0,ka|0,ra|0,pa|0)|0;E=C;la=((e|0)<0)<<31>>31;h=wh(e|0,la|0,ra|0,pa|0)|0;D=C;s=wh(_|0,j|0,ra|0,pa|0)|0;N=C;$=((n|0)<0)<<31>>31;V=wh(n|0,$|0,ra|0,pa|0)|0;ea=C;sa=wh(l|0,ma|0,ra|0,pa|0)|0;na=C;mb=((nb|0)<0)<<31>>31;pa=wh(nb|0,mb|0,ra|0,pa|0)|0;ra=C;Ba=wh(p|0,r|0,p|0,r|0)|0;Aa=C;db=((cb|0)<0)<<31>>31;G=wh(cb|0,db|0,x|0,R|0)|0;I=C;y=wh(f|0,ka|0,cb|0,db|0)|0;A=C;o=wh(kb|0,lb|0,cb|0,db|0)|0;J=C;w=wh(_|0,j|0,cb|0,db|0)|0;ba=C;Z=wh(wa|0,xa|0,cb|0,db|0)|0;ia=C;m=((H|0)<0)<<31>>31;db=wh(H|0,m|0,cb|0,db|0)|0;cb=C;r=wh(nb|0,mb|0,p|0,r|0)|0;p=C;R=wh(g|0,ja|0,x|0,R|0)|0;x=C;q=wh(g|0,ja|0,f|0,ka|0)|0;L=C;U=wh(e|0,la|0,g|0,ja|0)|0;da=C;X=wh(_|0,j|0,g|0,ja|0)|0;ga=C;O=((Q|0)<0)<<31>>31;fb=wh(Q|0,O|0,g|0,ja|0)|0;eb=C;Xa=wh(H|0,m|0,g|0,ja|0)|0;Wa=C;ja=wh(nb|0,mb|0,g|0,ja|0)|0;g=C;T=wh(f|0,ka|0,f|0,ka|0)|0;ca=C;Na=((Ma|0)<0)<<31>>31;Y=wh(Ma|0,Na|0,kb|0,lb|0)|0;ha=C;Ra=((Qa|0)<0)<<31>>31;hb=wh(Qa|0,Ra|0,Ma|0,Na|0)|0;gb=C;Za=wh(Q|0,O|0,f|0,ka|0)|0;Ya=C;Na=wh(H|0,m|0,Ma|0,Na|0)|0;Ma=C;ka=wh(nb|0,mb|0,f|0,ka|0)|0;f=C;lb=wh(bb|0,((bb|0)<0)<<31>>31|0,kb|0,lb|0)|0;kb=C;bb=wh(Qa|0,Ra|0,e|0,la|0)|0;ab=C;Pa=wh(Q|0,O|0,e|0,la|0)|0;Oa=C;Fa=wh(H|0,m|0,e|0,la|0)|0;Ea=C;la=wh(nb|0,mb|0,e|0,la|0)|0;e=C;Ra=wh(Qa|0,Ra|0,_|0,j|0)|0;Qa=C;Ha=wh(Q|0,O|0,_|0,j|0)|0;Ga=C;va=wh(H|0,m|0,va|0,((va|0)<0)<<31>>31|0)|0;z=C;j=wh(nb|0,mb|0,_|0,j|0)|0;_=C;xa=wh(Q|0,O|0,wa|0,xa|0)|0;wa=C;O=wh(H|0,m|0,n|0,$|0)|0;Q=C;$=wh(nb|0,mb|0,n|0,$|0)|0;n=C;m=wh(H|0,m|0,l|0,ma|0)|0;H=C;ma=wh(nb|0,mb|0,l|0,ma|0)|0;l=C;oa=wh(nb|0,mb|0,ua|0,oa|0)|0;ua=C;ib=lh(lb|0,kb|0,jb|0,ib|0)|0;gb=lh(ib|0,C|0,hb|0,gb|0)|0;eb=lh(gb|0,C|0,fb|0,eb|0)|0;cb=lh(eb|0,C|0,db|0,cb|0)|0;ra=lh(cb|0,C|0,pa|0,ra|0)|0;pa=C;_a=lh(bb|0,ab|0,$a|0,_a|0)|0;Ya=lh(_a|0,C|0,Za|0,Ya|0)|0;Wa=lh(Ya|0,C|0,Xa|0,Wa|0)|0;p=lh(Wa|0,C|0,r|0,p|0)|0;r=C;Sa=lh(Va|0,Ua|0,Ta|0,Sa|0)|0;Qa=lh(Sa|0,C|0,Ra|0,Qa|0)|0;Oa=lh(Qa|0,C|0,Pa|0,Oa|0)|0;Ma=lh(Oa|0,C|0,Na|0,Ma|0)|0;g=lh(Ma|0,C|0,ja|0,g|0)|0;ja=C;Ia=lh(La|0,Ka|0,Ja|0,Ia|0)|0;Ga=lh(Ia|0,C|0,Ha|0,Ga|0)|0;Ea=lh(Ga|0,C|0,Fa|0,Ea|0)|0;f=lh(Ea|0,C|0,ka|0,f|0)|0;ka=C;Aa=lh(Da|0,Ca|0,Ba|0,Aa|0)|0;ya=lh(Aa|0,C|0,za|0,ya|0)|0;wa=lh(ya|0,C|0,xa|0,wa|0)|0;z=lh(wa|0,C|0,va|0,z|0)|0;e=lh(z|0,C|0,la|0,e|0)|0;la=C;I=lh(B|0,E|0,G|0,I|0)|0;M=lh(I|0,C|0,K|0,M|0)|0;Q=lh(M|0,C|0,O|0,Q|0)|0;_=lh(Q|0,C|0,j|0,_|0)|0;j=C;A=lh(R|0,x|0,y|0,A|0)|0;D=lh(A|0,C|0,h|0,D|0)|0;F=lh(D|0,C|0,k|0,F|0)|0;H=lh(F|0,C|0,m|0,H|0)|0;n=lh(H|0,C|0,$|0,n|0)|0;$=C;L=lh(o|0,J|0,q|0,L|0)|0;N=lh(L|0,C|0,s|0,N|0)|0;P=lh(N|0,C|0,u|0,P|0)|0;l=lh(P|0,C|0,ma|0,l|0)|0;ma=C;ca=lh(w|0,ba|0,T|0,ca|0)|0;da=lh(ca|0,C|0,U|0,da|0)|0;ea=lh(da|0,C|0,V|0,ea|0)|0;fa=lh(ea|0,C|0,W|0,fa|0)|0;ua=lh(fa|0,C|0,oa|0,ua|0)|0;oa=C;ha=lh(X|0,ga|0,Y|0,ha|0)|0;ia=lh(ha|0,C|0,Z|0,ia|0)|0;na=lh(ia|0,C|0,sa|0,na|0)|0;t=lh(na|0,C|0,qa|0,t|0)|0;qa=C;pa=ph(ra|0,pa|0,1)|0;ra=C;r=ph(p|0,r|0,1)|0;p=C;ja=ph(g|0,ja|0,1)|0;g=C;ka=ph(f|0,ka|0,1)|0;f=C;la=ph(e|0,la|0,1)|0;e=C;j=ph(_|0,j|0,1)|0;_=C;$=ph(n|0,$|0,1)|0;n=C;ma=ph(l|0,ma|0,1)|0;l=C;oa=ph(ua|0,oa|0,1)|0;ua=C;qa=ph(t|0,qa|0,1)|0;t=C;na=lh(pa|0,ra|0,33554432,0)|0;na=mh(na|0,C|0,26)|0;sa=C;p=lh(na|0,sa|0,r|0,p|0)|0;r=C;sa=ph(na|0,sa|0,26)|0;sa=kh(pa|0,ra|0,sa|0,C|0)|0;ra=C;pa=lh(la|0,e|0,33554432,0)|0;pa=mh(pa|0,C|0,26)|0;na=C;_=lh(pa|0,na|0,j|0,_|0)|0;j=C;na=ph(pa|0,na|0,26)|0;na=kh(la|0,e|0,na|0,C|0)|0;e=C;la=lh(p|0,r|0,16777216,0)|0;la=mh(la|0,C|0,25)|0;pa=C;g=lh(la|0,pa|0,ja|0,g|0)|0;ja=C;pa=ph(la|0,pa|0,25)|0;pa=kh(p|0,r|0,pa|0,C|0)|0;r=C;p=lh(_|0,j|0,16777216,0)|0;p=mh(p|0,C|0,25)|0;la=C;n=lh(p|0,la|0,$|0,n|0)|0;$=C;la=ph(p|0,la|0,25)|0;la=kh(_|0,j|0,la|0,C|0)|0;j=C;_=lh(g|0,ja|0,33554432,0)|0;_=mh(_|0,C|0,26)|0;p=C;f=lh(_|0,p|0,ka|0,f|0)|0;ka=C;p=ph(_|0,p|0,26)|0;p=kh(g|0,ja|0,p|0,C|0)|0;ja=lh(n|0,$|0,33554432,0)|0;ja=mh(ja|0,C|0,26)|0;g=C;l=lh(ja|0,g|0,ma|0,l|0)|0;ma=C;g=ph(ja|0,g|0,26)|0;g=kh(n|0,$|0,g|0,C|0)|0;$=lh(f|0,ka|0,16777216,0)|0;$=mh($|0,C|0,25)|0;n=C;e=lh($|0,n|0,na|0,e|0)|0;na=C;n=ph($|0,n|0,25)|0;n=kh(f|0,ka|0,n|0,C|0)|0;ka=lh(l|0,ma|0,16777216,0)|0;ka=mh(ka|0,C|0,25)|0;f=C;ua=lh(ka|0,f|0,oa|0,ua|0)|0;oa=C;f=ph(ka|0,f|0,25)|0;f=kh(l|0,ma|0,f|0,C|0)|0;ma=lh(e|0,na|0,33554432,0)|0;ma=mh(ma|0,C|0,26)|0;l=C;j=lh(la|0,j|0,ma|0,l|0)|0;l=ph(ma|0,l|0,26)|0;l=kh(e|0,na|0,l|0,C|0)|0;na=lh(ua|0,oa|0,33554432,0)|0;na=mh(na|0,C|0,26)|0;e=C;t=lh(na|0,e|0,qa|0,t|0)|0;qa=C;e=ph(na|0,e|0,26)|0;e=kh(ua|0,oa|0,e|0,C|0)|0;oa=lh(t|0,qa|0,16777216,0)|0;oa=mh(oa|0,C|0,25)|0;ua=C;na=wh(oa|0,ua|0,19,0)|0;ra=lh(na|0,C|0,sa|0,ra|0)|0;sa=C;ua=ph(oa|0,ua|0,25)|0;ua=kh(t|0,qa|0,ua|0,C|0)|0;qa=lh(ra|0,sa|0,33554432,0)|0;qa=mh(qa|0,C|0,26)|0;t=C;r=lh(pa|0,r|0,qa|0,t|0)|0;t=ph(qa|0,t|0,26)|0;t=kh(ra|0,sa|0,t|0,C|0)|0;c[v>>2]=t;t=a+124|0;c[t>>2]=r;r=a+128|0;c[r>>2]=p;p=a+132|0;c[p>>2]=n;n=a+136|0;c[n>>2]=l;l=a+140|0;c[l>>2]=j;j=a+144|0;c[j>>2]=g;g=a+148|0;c[g>>2]=f;f=a+152|0;c[f>>2]=e;e=a+156|0;c[e>>2]=ua;ua=a+40|0;sa=(c[b+44>>2]|0)+(c[b+4>>2]|0)|0;ra=(c[b+48>>2]|0)+(c[b+8>>2]|0)|0;qa=(c[b+52>>2]|0)+(c[b+12>>2]|0)|0;pa=(c[b+56>>2]|0)+(c[b+16>>2]|0)|0;oa=(c[b+60>>2]|0)+(c[b+20>>2]|0)|0;na=(c[b+64>>2]|0)+(c[b+24>>2]|0)|0;ma=(c[b+68>>2]|0)+(c[b+28>>2]|0)|0;la=(c[b+72>>2]|0)+(c[b+32>>2]|0)|0;ka=(c[b+76>>2]|0)+(c[b+36>>2]|0)|0;c[ua>>2]=(c[ta>>2]|0)+(c[b>>2]|0);ta=a+44|0;c[ta>>2]=sa;sa=a+48|0;c[sa>>2]=ra;ra=a+52|0;c[ra>>2]=qa;qa=a+56|0;c[qa>>2]=pa;pa=a+60|0;c[pa>>2]=oa;oa=a+64|0;c[oa>>2]=na;na=a+68|0;c[na>>2]=ma;ma=a+72|0;c[ma>>2]=la;la=a+76|0;c[la>>2]=ka;vc(S,ua);ka=c[aa>>2]|0;$=a+84|0;ja=c[$>>2]|0;_=a+88|0;ia=c[_>>2]|0;Z=a+92|0;ha=c[Z>>2]|0;Y=a+96|0;ga=c[Y>>2]|0;X=a+100|0;fa=c[X>>2]|0;W=a+104|0;ea=c[W>>2]|0;V=a+108|0;da=c[V>>2]|0;U=a+112|0;ca=c[U>>2]|0;T=a+116|0;ba=c[T>>2]|0;w=c[a>>2]|0;P=a+4|0;u=c[P>>2]|0;N=a+8|0;s=c[N>>2]|0;L=a+12|0;q=c[L>>2]|0;J=a+16|0;o=c[J>>2]|0;H=a+20|0;m=c[H>>2]|0;F=a+24|0;k=c[F>>2]|0;D=a+28|0;h=c[D>>2]|0;A=a+32|0;b=c[A>>2]|0;y=a+36|0;x=c[y>>2]|0;R=w+ka|0;Q=u+ja|0;O=s+ia|0;M=q+ha|0;K=o+ga|0;I=m+fa|0;G=k+ea|0;E=h+da|0;B=b+ca|0;z=x+ba|0;c[ua>>2]=R;c[ta>>2]=Q;c[sa>>2]=O;c[ra>>2]=M;c[qa>>2]=K;c[pa>>2]=I;c[oa>>2]=G;c[na>>2]=E;c[ma>>2]=B;c[la>>2]=z;w=ka-w|0;u=ja-u|0;s=ia-s|0;q=ha-q|0;o=ga-o|0;m=fa-m|0;k=ea-k|0;h=da-h|0;b=ca-b|0;x=ba-x|0;c[aa>>2]=w;c[$>>2]=u;c[_>>2]=s;c[Z>>2]=q;c[Y>>2]=o;c[X>>2]=m;c[W>>2]=k;c[V>>2]=h;c[U>>2]=b;c[T>>2]=x;Q=(c[S+4>>2]|0)-Q|0;O=(c[S+8>>2]|0)-O|0;M=(c[S+12>>2]|0)-M|0;K=(c[S+16>>2]|0)-K|0;I=(c[S+20>>2]|0)-I|0;G=(c[S+24>>2]|0)-G|0;E=(c[S+28>>2]|0)-E|0;B=(c[S+32>>2]|0)-B|0;z=(c[S+36>>2]|0)-z|0;c[a>>2]=(c[S>>2]|0)-R;c[P>>2]=Q;c[N>>2]=O;c[L>>2]=M;c[J>>2]=K;c[H>>2]=I;c[F>>2]=G;c[D>>2]=E;c[A>>2]=B;c[y>>2]=z;u=(c[t>>2]|0)-u|0;s=(c[r>>2]|0)-s|0;q=(c[p>>2]|0)-q|0;o=(c[n>>2]|0)-o|0;m=(c[l>>2]|0)-m|0;k=(c[j>>2]|0)-k|0;h=(c[g>>2]|0)-h|0;b=(c[f>>2]|0)-b|0;a=(c[e>>2]|0)-x|0;c[v>>2]=(c[v>>2]|0)-w;c[t>>2]=u;c[r>>2]=s;c[p>>2]=q;c[n>>2]=o;c[l>>2]=m;c[j>>2]=k;c[g>>2]=h;c[f>>2]=b;c[e>>2]=a;i=d;return}function Bc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;m=b+40|0;v=b+44|0;u=b+48|0;t=b+52|0;s=b+56|0;r=b+60|0;q=b+64|0;p=b+68|0;o=b+72|0;n=b+76|0;d=b+4|0;e=b+8|0;f=b+12|0;g=b+16|0;h=b+20|0;i=b+24|0;j=b+28|0;k=b+32|0;l=b+36|0;E=(c[d>>2]|0)+(c[v>>2]|0)|0;D=(c[e>>2]|0)+(c[u>>2]|0)|0;C=(c[f>>2]|0)+(c[t>>2]|0)|0;B=(c[g>>2]|0)+(c[s>>2]|0)|0;A=(c[h>>2]|0)+(c[r>>2]|0)|0;z=(c[i>>2]|0)+(c[q>>2]|0)|0;y=(c[j>>2]|0)+(c[p>>2]|0)|0;x=(c[k>>2]|0)+(c[o>>2]|0)|0;w=(c[l>>2]|0)+(c[n>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[m>>2]|0);c[a+4>>2]=E;c[a+8>>2]=D;c[a+12>>2]=C;c[a+16>>2]=B;c[a+20>>2]=A;c[a+24>>2]=z;c[a+28>>2]=y;c[a+32>>2]=x;c[a+36>>2]=w;d=(c[v>>2]|0)-(c[d>>2]|0)|0;e=(c[u>>2]|0)-(c[e>>2]|0)|0;f=(c[t>>2]|0)-(c[f>>2]|0)|0;g=(c[s>>2]|0)-(c[g>>2]|0)|0;h=(c[r>>2]|0)-(c[h>>2]|0)|0;i=(c[q>>2]|0)-(c[i>>2]|0)|0;j=(c[p>>2]|0)-(c[j>>2]|0)|0;k=(c[o>>2]|0)-(c[k>>2]|0)|0;l=(c[n>>2]|0)-(c[l>>2]|0)|0;c[a+40>>2]=(c[m>>2]|0)-(c[b>>2]|0);c[a+44>>2]=d;c[a+48>>2]=e;c[a+52>>2]=f;c[a+56>>2]=g;c[a+60>>2]=h;c[a+64>>2]=i;c[a+68>>2]=j;c[a+72>>2]=k;c[a+76>>2]=l;l=c[b+84>>2]|0;k=c[b+88>>2]|0;j=c[b+92>>2]|0;i=c[b+96>>2]|0;h=c[b+100>>2]|0;g=c[b+104>>2]|0;f=c[b+108>>2]|0;e=c[b+112>>2]|0;d=c[b+116>>2]|0;c[a+80>>2]=c[b+80>>2];c[a+84>>2]=l;c[a+88>>2]=k;c[a+92>>2]=j;c[a+96>>2]=i;c[a+100>>2]=h;c[a+104>>2]=g;c[a+108>>2]=f;c[a+112>>2]=e;c[a+116>>2]=d;uc(a+120|0,b+120|0,544);return}function Cc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;t=i;s=i=i+63&-64;i=i+592|0;o=s+400|0;q=s+520|0;r=s+240|0;p=s+120|0;f=0;do{m=a[e+f>>0]|0;n=f<<1;a[q+n>>0]=m&15;a[q+(n|1)>>0]=(m&255)>>>4;f=f+1|0}while((f|0)!=32);e=0;f=0;do{n=q+f|0;m=(d[n>>0]|0)+e|0;e=(m<<24)+134217728>>28;a[n>>0]=m-(e<<4);f=f+1|0}while((f|0)!=63);f=q+63|0;a[f>>0]=(d[f>>0]|0)+e;e=b;f=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));m=b+40|0;c[m>>2]=1;k=b+44|0;e=k;f=e+36|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));n=b+80|0;c[n>>2]=1;l=b+84|0;e=l;f=e+76|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));f=r+120|0;g=r+40|0;h=r+80|0;j=b+120|0;e=1;do{Dc(s,(e|0)/2|0,a[q+e>>0]|0);zc(r,b,s);uc(b,r,f);uc(m,g,h);uc(n,h,f);uc(j,r,g);e=e+2|0}while((e|0)<64);B=c[b+4>>2]|0;z=c[b+8>>2]|0;y=c[b+12>>2]|0;x=c[b+16>>2]|0;w=c[b+20>>2]|0;v=c[b+24>>2]|0;u=c[b+28>>2]|0;e=c[b+32>>2]|0;A=c[b+36>>2]|0;c[o>>2]=c[b>>2];c[o+4>>2]=B;c[o+8>>2]=z;c[o+12>>2]=y;c[o+16>>2]=x;c[o+20>>2]=w;c[o+24>>2]=v;c[o+28>>2]=u;c[o+32>>2]=e;c[o+36>>2]=A;A=c[k>>2]|0;e=c[b+48>>2]|0;k=c[b+52>>2]|0;u=c[b+56>>2]|0;v=c[b+60>>2]|0;w=c[b+64>>2]|0;x=c[b+68>>2]|0;y=c[b+72>>2]|0;z=c[b+76>>2]|0;c[o+40>>2]=c[m>>2];c[o+44>>2]=A;c[o+48>>2]=e;c[o+52>>2]=k;c[o+56>>2]=u;c[o+60>>2]=v;c[o+64>>2]=w;c[o+68>>2]=x;c[o+72>>2]=y;c[o+76>>2]=z;z=c[l>>2]|0;y=c[b+88>>2]|0;x=c[b+92>>2]|0;w=c[b+96>>2]|0;v=c[b+100>>2]|0;u=c[b+104>>2]|0;k=c[b+108>>2]|0;l=c[b+112>>2]|0;e=c[b+116>>2]|0;c[o+80>>2]=c[n>>2];c[o+84>>2]=z;c[o+88>>2]=y;c[o+92>>2]=x;c[o+96>>2]=w;c[o+100>>2]=v;c[o+104>>2]=u;c[o+108>>2]=k;c[o+112>>2]=l;c[o+116>>2]=e;Ac(r,o);uc(p,r,f);o=p+40|0;uc(o,g,h);e=p+80|0;uc(e,h,f);Ac(r,p);uc(p,r,f);uc(o,g,h);uc(e,h,f);Ac(r,p);uc(p,r,f);uc(o,g,h);uc(e,h,f);Ac(r,p);uc(b,r,f);uc(m,g,h);uc(n,h,f);uc(j,r,g);e=0;do{Dc(s,(e|0)/2|0,a[q+e>>0]|0);zc(r,b,s);uc(b,r,f);uc(m,g,h);uc(n,h,f);uc(j,r,g);e=e+2|0}while((e|0)<64);i=t;return}function Dc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;g=d<<24>>24;g=oh(g|0,((g|0)<0)<<31>>31|0,63)|0;h=d<<24>>24;g=0-g|0;h=h-((h&g)<<1)|0;d=a+4|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;e=a+40|0;f=a+44|0;i=f;j=i+76|0;do{c[i>>2]=0;i=i+4|0}while((i|0)<(j|0));ia=h&255;ea=a+8|0;ca=a+12|0;aa=a+16|0;_=a+20|0;s=a+24|0;O=a+28|0;U=a+32|0;Y=a+36|0;F=(ia^1)+-1>>31;r=c[1544+(b*960|0)+4>>2]&F;E=c[1544+(b*960|0)+8>>2]&F;v=c[1544+(b*960|0)+12>>2]&F;G=c[1544+(b*960|0)+16>>2]&F;I=c[1544+(b*960|0)+20>>2]&F;K=c[1544+(b*960|0)+24>>2]&F;N=c[1544+(b*960|0)+28>>2]&F;Q=c[1544+(b*960|0)+32>>2]&F;T=c[1544+(b*960|0)+36>>2]&F;c[a>>2]=(c[1544+(b*960|0)>>2]^1)&F^1;c[d>>2]=r;c[ea>>2]=E;c[ca>>2]=v;c[aa>>2]=G;c[_>>2]=I;c[s>>2]=K;c[O>>2]=N;c[U>>2]=Q;c[Y>>2]=T;T=a+48|0;Q=a+52|0;N=a+56|0;K=a+60|0;I=a+64|0;G=a+68|0;v=a+72|0;E=a+76|0;r=c[1544+(b*960|0)+44>>2]&F;o=c[1544+(b*960|0)+48>>2]&F;u=c[1544+(b*960|0)+52>>2]&F;C=c[1544+(b*960|0)+56>>2]&F;x=c[1544+(b*960|0)+60>>2]&F;da=c[1544+(b*960|0)+64>>2]&F;A=c[1544+(b*960|0)+68>>2]&F;ga=c[1544+(b*960|0)+72>>2]&F;D=c[1544+(b*960|0)+76>>2]&F;c[e>>2]=(c[1544+(b*960|0)+40>>2]^1)&F^1;c[f>>2]=r;c[T>>2]=o;c[Q>>2]=u;c[N>>2]=C;c[K>>2]=x;c[I>>2]=da;c[G>>2]=A;c[v>>2]=ga;c[E>>2]=D;D=a+80|0;ga=c[D>>2]|0;A=a+84|0;da=c[A>>2]|0;x=a+88|0;C=c[x>>2]|0;u=a+92|0;o=c[u>>2]|0;r=a+96|0;t=c[r>>2]|0;p=a+100|0;fa=c[p>>2]|0;n=a+104|0;B=c[n>>2]|0;l=a+108|0;w=c[l>>2]|0;i=a+112|0;W=c[i>>2]|0;j=a+116|0;ba=c[j>>2]|0;R=(c[1544+(b*960|0)+84>>2]^da)&F;L=(c[1544+(b*960|0)+88>>2]^C)&F;m=(c[1544+(b*960|0)+92>>2]^o)&F;k=(c[1544+(b*960|0)+96>>2]^t)&F;ha=(c[1544+(b*960|0)+100>>2]^fa)&F;Z=(c[1544+(b*960|0)+104>>2]^B)&F;$=(c[1544+(b*960|0)+108>>2]^w)&F;q=(c[1544+(b*960|0)+112>>2]^W)&F;z=(c[1544+(b*960|0)+116>>2]^ba)&F;c[D>>2]=(c[1544+(b*960|0)+80>>2]^ga)&F^ga;c[A>>2]=R^da;c[x>>2]=L^C;c[u>>2]=m^o;c[r>>2]=k^t;c[p>>2]=ha^fa;c[n>>2]=Z^B;c[l>>2]=$^w;c[i>>2]=q^W;c[j>>2]=z^ba;ba=c[a>>2]|0;z=c[d>>2]|0;W=c[ea>>2]|0;q=c[ca>>2]|0;w=c[aa>>2]|0;$=c[_>>2]|0;B=c[s>>2]|0;Z=c[O>>2]|0;fa=c[U>>2]|0;ha=c[Y>>2]|0;t=(ia^2)+-1>>31;k=(c[1544+(b*960|0)+124>>2]^z)&t;o=(c[1544+(b*960|0)+128>>2]^W)&t;m=(c[1544+(b*960|0)+132>>2]^q)&t;C=(c[1544+(b*960|0)+136>>2]^w)&t;L=(c[1544+(b*960|0)+140>>2]^$)&t;da=(c[1544+(b*960|0)+144>>2]^B)&t;R=(c[1544+(b*960|0)+148>>2]^Z)&t;ga=(c[1544+(b*960|0)+152>>2]^fa)&t;F=(c[1544+(b*960|0)+156>>2]^ha)&t;c[a>>2]=(c[1544+(b*960|0)+120>>2]^ba)&t^ba;c[d>>2]=k^z;c[ea>>2]=o^W;c[ca>>2]=m^q;c[aa>>2]=C^w;c[_>>2]=L^$;c[s>>2]=da^B;c[O>>2]=R^Z;c[U>>2]=ga^fa;c[Y>>2]=F^ha;ha=c[e>>2]|0;F=c[f>>2]|0;fa=c[T>>2]|0;ga=c[Q>>2]|0;Z=c[N>>2]|0;R=c[K>>2]|0;B=c[I>>2]|0;da=c[G>>2]|0;$=c[v>>2]|0;L=c[E>>2]|0;w=(c[1544+(b*960|0)+164>>2]^F)&t;C=(c[1544+(b*960|0)+168>>2]^fa)&t;q=(c[1544+(b*960|0)+172>>2]^ga)&t;m=(c[1544+(b*960|0)+176>>2]^Z)&t;W=(c[1544+(b*960|0)+180>>2]^R)&t;o=(c[1544+(b*960|0)+184>>2]^B)&t;z=(c[1544+(b*960|0)+188>>2]^da)&t;k=(c[1544+(b*960|0)+192>>2]^$)&t;ba=(c[1544+(b*960|0)+196>>2]^L)&t;c[e>>2]=(c[1544+(b*960|0)+160>>2]^ha)&t^ha;c[f>>2]=w^F;c[T>>2]=C^fa;c[Q>>2]=q^ga;c[N>>2]=m^Z;c[K>>2]=W^R;c[I>>2]=o^B;c[G>>2]=z^da;c[v>>2]=k^$;c[E>>2]=ba^L;L=c[D>>2]|0;ba=c[A>>2]|0;$=c[x>>2]|0;k=c[u>>2]|0;da=c[r>>2]|0;z=c[p>>2]|0;B=c[n>>2]|0;o=c[l>>2]|0;R=c[i>>2]|0;W=c[j>>2]|0;Z=(c[1544+(b*960|0)+204>>2]^ba)&t;m=(c[1544+(b*960|0)+208>>2]^$)&t;ga=(c[1544+(b*960|0)+212>>2]^k)&t;q=(c[1544+(b*960|0)+216>>2]^da)&t;fa=(c[1544+(b*960|0)+220>>2]^z)&t;C=(c[1544+(b*960|0)+224>>2]^B)&t;F=(c[1544+(b*960|0)+228>>2]^o)&t;w=(c[1544+(b*960|0)+232>>2]^R)&t;ha=(c[1544+(b*960|0)+236>>2]^W)&t;c[D>>2]=(c[1544+(b*960|0)+200>>2]^L)&t^L;c[A>>2]=Z^ba;c[x>>2]=m^$;c[u>>2]=ga^k;c[r>>2]=q^da;c[p>>2]=fa^z;c[n>>2]=C^B;c[l>>2]=F^o;c[i>>2]=w^R;c[j>>2]=ha^W;W=c[a>>2]|0;ha=c[d>>2]|0;R=c[ea>>2]|0;w=c[ca>>2]|0;o=c[aa>>2]|0;F=c[_>>2]|0;B=c[s>>2]|0;C=c[O>>2]|0;z=c[U>>2]|0;fa=c[Y>>2]|0;da=(ia^3)+-1>>31;q=(c[1544+(b*960|0)+244>>2]^ha)&da;k=(c[1544+(b*960|0)+248>>2]^R)&da;ga=(c[1544+(b*960|0)+252>>2]^w)&da;$=(c[1544+(b*960|0)+256>>2]^o)&da;m=(c[1544+(b*960|0)+260>>2]^F)&da;ba=(c[1544+(b*960|0)+264>>2]^B)&da;Z=(c[1544+(b*960|0)+268>>2]^C)&da;L=(c[1544+(b*960|0)+272>>2]^z)&da;t=(c[1544+(b*960|0)+276>>2]^fa)&da;c[a>>2]=(c[1544+(b*960|0)+240>>2]^W)&da^W;c[d>>2]=q^ha;c[ea>>2]=k^R;c[ca>>2]=ga^w;c[aa>>2]=$^o;c[_>>2]=m^F;c[s>>2]=ba^B;c[O>>2]=Z^C;c[U>>2]=L^z;c[Y>>2]=t^fa;fa=c[e>>2]|0;t=c[f>>2]|0;z=c[T>>2]|0;L=c[Q>>2]|0;C=c[N>>2]|0;Z=c[K>>2]|0;B=c[I>>2]|0;ba=c[G>>2]|0;F=c[v>>2]|0;m=c[E>>2]|0;o=(c[1544+(b*960|0)+284>>2]^t)&da;$=(c[1544+(b*960|0)+288>>2]^z)&da;w=(c[1544+(b*960|0)+292>>2]^L)&da;ga=(c[1544+(b*960|0)+296>>2]^C)&da;R=(c[1544+(b*960|0)+300>>2]^Z)&da;k=(c[1544+(b*960|0)+304>>2]^B)&da;ha=(c[1544+(b*960|0)+308>>2]^ba)&da;q=(c[1544+(b*960|0)+312>>2]^F)&da;W=(c[1544+(b*960|0)+316>>2]^m)&da;c[e>>2]=(c[1544+(b*960|0)+280>>2]^fa)&da^fa;c[f>>2]=o^t;c[T>>2]=$^z;c[Q>>2]=w^L;c[N>>2]=ga^C;c[K>>2]=R^Z;c[I>>2]=k^B;c[G>>2]=ha^ba;c[v>>2]=q^F;c[E>>2]=W^m;m=c[D>>2]|0;W=c[A>>2]|0;F=c[x>>2]|0;q=c[u>>2]|0;ba=c[r>>2]|0;ha=c[p>>2]|0;B=c[n>>2]|0;k=c[l>>2]|0;Z=c[i>>2]|0;R=c[j>>2]|0;C=(c[1544+(b*960|0)+324>>2]^W)&da;ga=(c[1544+(b*960|0)+328>>2]^F)&da;L=(c[1544+(b*960|0)+332>>2]^q)&da;w=(c[1544+(b*960|0)+336>>2]^ba)&da;z=(c[1544+(b*960|0)+340>>2]^ha)&da;$=(c[1544+(b*960|0)+344>>2]^B)&da;t=(c[1544+(b*960|0)+348>>2]^k)&da;o=(c[1544+(b*960|0)+352>>2]^Z)&da;fa=(c[1544+(b*960|0)+356>>2]^R)&da;c[D>>2]=(c[1544+(b*960|0)+320>>2]^m)&da^m;c[A>>2]=C^W;c[x>>2]=ga^F;c[u>>2]=L^q;c[r>>2]=w^ba;c[p>>2]=z^ha;c[n>>2]=$^B;c[l>>2]=t^k;c[i>>2]=o^Z;c[j>>2]=fa^R;R=c[a>>2]|0;fa=c[d>>2]|0;Z=c[ea>>2]|0;o=c[ca>>2]|0;k=c[aa>>2]|0;t=c[_>>2]|0;B=c[s>>2]|0;$=c[O>>2]|0;ha=c[U>>2]|0;z=c[Y>>2]|0;ba=(ia^4)+-1>>31;w=(c[1544+(b*960|0)+364>>2]^fa)&ba;q=(c[1544+(b*960|0)+368>>2]^Z)&ba;L=(c[1544+(b*960|0)+372>>2]^o)&ba;F=(c[1544+(b*960|0)+376>>2]^k)&ba;ga=(c[1544+(b*960|0)+380>>2]^t)&ba;W=(c[1544+(b*960|0)+384>>2]^B)&ba;C=(c[1544+(b*960|0)+388>>2]^$)&ba;m=(c[1544+(b*960|0)+392>>2]^ha)&ba;da=(c[1544+(b*960|0)+396>>2]^z)&ba;c[a>>2]=(c[1544+(b*960|0)+360>>2]^R)&ba^R;c[d>>2]=w^fa;c[ea>>2]=q^Z;c[ca>>2]=L^o;c[aa>>2]=F^k;c[_>>2]=ga^t;c[s>>2]=W^B;c[O>>2]=C^$;c[U>>2]=m^ha;c[Y>>2]=da^z;z=c[e>>2]|0;da=c[f>>2]|0;ha=c[T>>2]|0;m=c[Q>>2]|0;$=c[N>>2]|0;C=c[K>>2]|0;B=c[I>>2]|0;W=c[G>>2]|0;t=c[v>>2]|0;ga=c[E>>2]|0;k=(c[1544+(b*960|0)+404>>2]^da)&ba;F=(c[1544+(b*960|0)+408>>2]^ha)&ba;o=(c[1544+(b*960|0)+412>>2]^m)&ba;L=(c[1544+(b*960|0)+416>>2]^$)&ba;Z=(c[1544+(b*960|0)+420>>2]^C)&ba;q=(c[1544+(b*960|0)+424>>2]^B)&ba;fa=(c[1544+(b*960|0)+428>>2]^W)&ba;w=(c[1544+(b*960|0)+432>>2]^t)&ba;R=(c[1544+(b*960|0)+436>>2]^ga)&ba;c[e>>2]=(c[1544+(b*960|0)+400>>2]^z)&ba^z;c[f>>2]=k^da;c[T>>2]=F^ha;c[Q>>2]=o^m;c[N>>2]=L^$;c[K>>2]=Z^C;c[I>>2]=q^B;c[G>>2]=fa^W;c[v>>2]=w^t;c[E>>2]=R^ga;ga=c[D>>2]|0;R=c[A>>2]|0;t=c[x>>2]|0;w=c[u>>2]|0;W=c[r>>2]|0;fa=c[p>>2]|0;B=c[n>>2]|0;q=c[l>>2]|0;C=c[i>>2]|0;Z=c[j>>2]|0;$=(c[1544+(b*960|0)+444>>2]^R)&ba;L=(c[1544+(b*960|0)+448>>2]^t)&ba;m=(c[1544+(b*960|0)+452>>2]^w)&ba;o=(c[1544+(b*960|0)+456>>2]^W)&ba;ha=(c[1544+(b*960|0)+460>>2]^fa)&ba;F=(c[1544+(b*960|0)+464>>2]^B)&ba;da=(c[1544+(b*960|0)+468>>2]^q)&ba;k=(c[1544+(b*960|0)+472>>2]^C)&ba;z=(c[1544+(b*960|0)+476>>2]^Z)&ba;c[D>>2]=(c[1544+(b*960|0)+440>>2]^ga)&ba^ga;c[A>>2]=$^R;c[x>>2]=L^t;c[u>>2]=m^w;c[r>>2]=o^W;c[p>>2]=ha^fa;c[n>>2]=F^B;c[l>>2]=da^q;c[i>>2]=k^C;c[j>>2]=z^Z;Z=c[a>>2]|0;z=c[d>>2]|0;C=c[ea>>2]|0;k=c[ca>>2]|0;q=c[aa>>2]|0;da=c[_>>2]|0;B=c[s>>2]|0;F=c[O>>2]|0;fa=c[U>>2]|0;ha=c[Y>>2]|0;W=(ia^5)+-1>>31;o=(c[1544+(b*960|0)+484>>2]^z)&W;w=(c[1544+(b*960|0)+488>>2]^C)&W;m=(c[1544+(b*960|0)+492>>2]^k)&W;t=(c[1544+(b*960|0)+496>>2]^q)&W;L=(c[1544+(b*960|0)+500>>2]^da)&W;R=(c[1544+(b*960|0)+504>>2]^B)&W;$=(c[1544+(b*960|0)+508>>2]^F)&W;ga=(c[1544+(b*960|0)+512>>2]^fa)&W;ba=(c[1544+(b*960|0)+516>>2]^ha)&W;c[a>>2]=(c[1544+(b*960|0)+480>>2]^Z)&W^Z;c[d>>2]=o^z;c[ea>>2]=w^C;c[ca>>2]=m^k;c[aa>>2]=t^q;c[_>>2]=L^da;c[s>>2]=R^B;c[O>>2]=$^F;c[U>>2]=ga^fa;c[Y>>2]=ba^ha;ha=c[e>>2]|0;ba=c[f>>2]|0;fa=c[T>>2]|0;ga=c[Q>>2]|0;F=c[N>>2]|0;$=c[K>>2]|0;B=c[I>>2]|0;R=c[G>>2]|0;da=c[v>>2]|0;L=c[E>>2]|0;q=(c[1544+(b*960|0)+524>>2]^ba)&W;t=(c[1544+(b*960|0)+528>>2]^fa)&W;k=(c[1544+(b*960|0)+532>>2]^ga)&W;m=(c[1544+(b*960|0)+536>>2]^F)&W;C=(c[1544+(b*960|0)+540>>2]^$)&W;w=(c[1544+(b*960|0)+544>>2]^B)&W;z=(c[1544+(b*960|0)+548>>2]^R)&W;o=(c[1544+(b*960|0)+552>>2]^da)&W;Z=(c[1544+(b*960|0)+556>>2]^L)&W;c[e>>2]=(c[1544+(b*960|0)+520>>2]^ha)&W^ha;c[f>>2]=q^ba;c[T>>2]=t^fa;c[Q>>2]=k^ga;c[N>>2]=m^F;c[K>>2]=C^$;c[I>>2]=w^B;c[G>>2]=z^R;c[v>>2]=o^da;c[E>>2]=Z^L;L=c[D>>2]|0;Z=c[A>>2]|0;da=c[x>>2]|0;o=c[u>>2]|0;R=c[r>>2]|0;z=c[p>>2]|0;B=c[n>>2]|0;w=c[l>>2]|0;$=c[i>>2]|0;C=c[j>>2]|0;F=(c[1544+(b*960|0)+564>>2]^Z)&W;m=(c[1544+(b*960|0)+568>>2]^da)&W;ga=(c[1544+(b*960|0)+572>>2]^o)&W;k=(c[1544+(b*960|0)+576>>2]^R)&W;fa=(c[1544+(b*960|0)+580>>2]^z)&W;t=(c[1544+(b*960|0)+584>>2]^B)&W;ba=(c[1544+(b*960|0)+588>>2]^w)&W;q=(c[1544+(b*960|0)+592>>2]^$)&W;ha=(c[1544+(b*960|0)+596>>2]^C)&W;c[D>>2]=(c[1544+(b*960|0)+560>>2]^L)&W^L;c[A>>2]=F^Z;c[x>>2]=m^da;c[u>>2]=ga^o;c[r>>2]=k^R;c[p>>2]=fa^z;c[n>>2]=t^B;c[l>>2]=ba^w;c[i>>2]=q^$;c[j>>2]=ha^C;C=c[a>>2]|0;ha=c[d>>2]|0;$=c[ea>>2]|0;q=c[ca>>2]|0;w=c[aa>>2]|0;ba=c[_>>2]|0;B=c[s>>2]|0;t=c[O>>2]|0;z=c[U>>2]|0;fa=c[Y>>2]|0;R=(ia^6)+-1>>31;k=(c[1544+(b*960|0)+604>>2]^ha)&R;o=(c[1544+(b*960|0)+608>>2]^$)&R;ga=(c[1544+(b*960|0)+612>>2]^q)&R;da=(c[1544+(b*960|0)+616>>2]^w)&R;m=(c[1544+(b*960|0)+620>>2]^ba)&R;Z=(c[1544+(b*960|0)+624>>2]^B)&R;F=(c[1544+(b*960|0)+628>>2]^t)&R;L=(c[1544+(b*960|0)+632>>2]^z)&R;W=(c[1544+(b*960|0)+636>>2]^fa)&R;c[a>>2]=(c[1544+(b*960|0)+600>>2]^C)&R^C;c[d>>2]=k^ha;c[ea>>2]=o^$;c[ca>>2]=ga^q;c[aa>>2]=da^w;c[_>>2]=m^ba;c[s>>2]=Z^B;c[O>>2]=F^t;c[U>>2]=L^z;c[Y>>2]=W^fa;fa=c[e>>2]|0;W=c[f>>2]|0;z=c[T>>2]|0;L=c[Q>>2]|0;t=c[N>>2]|0;F=c[K>>2]|0;B=c[I>>2]|0;Z=c[G>>2]|0;ba=c[v>>2]|0;m=c[E>>2]|0;w=(c[1544+(b*960|0)+644>>2]^W)&R;da=(c[1544+(b*960|0)+648>>2]^z)&R;q=(c[1544+(b*960|0)+652>>2]^L)&R;ga=(c[1544+(b*960|0)+656>>2]^t)&R;$=(c[1544+(b*960|0)+660>>2]^F)&R;o=(c[1544+(b*960|0)+664>>2]^B)&R;ha=(c[1544+(b*960|0)+668>>2]^Z)&R;k=(c[1544+(b*960|0)+672>>2]^ba)&R;C=(c[1544+(b*960|0)+676>>2]^m)&R;c[e>>2]=(c[1544+(b*960|0)+640>>2]^fa)&R^fa;c[f>>2]=w^W;c[T>>2]=da^z;c[Q>>2]=q^L;c[N>>2]=ga^t;c[K>>2]=$^F;c[I>>2]=o^B;c[G>>2]=ha^Z;c[v>>2]=k^ba;c[E>>2]=C^m;m=c[D>>2]|0;C=c[A>>2]|0;ba=c[x>>2]|0;k=c[u>>2]|0;Z=c[r>>2]|0;ha=c[p>>2]|0;B=c[n>>2]|0;o=c[l>>2]|0;F=c[i>>2]|0;$=c[j>>2]|0;t=(c[1544+(b*960|0)+684>>2]^C)&R;ga=(c[1544+(b*960|0)+688>>2]^ba)&R;L=(c[1544+(b*960|0)+692>>2]^k)&R;q=(c[1544+(b*960|0)+696>>2]^Z)&R;z=(c[1544+(b*960|0)+700>>2]^ha)&R;da=(c[1544+(b*960|0)+704>>2]^B)&R;W=(c[1544+(b*960|0)+708>>2]^o)&R;w=(c[1544+(b*960|0)+712>>2]^F)&R;fa=(c[1544+(b*960|0)+716>>2]^$)&R;c[D>>2]=(c[1544+(b*960|0)+680>>2]^m)&R^m;c[A>>2]=t^C;c[x>>2]=ga^ba;c[u>>2]=L^k;c[r>>2]=q^Z;c[p>>2]=z^ha;c[n>>2]=da^B;c[l>>2]=W^o;c[i>>2]=w^F;c[j>>2]=fa^$;$=c[a>>2]|0;fa=c[d>>2]|0;F=c[ea>>2]|0;w=c[ca>>2]|0;o=c[aa>>2]|0;W=c[_>>2]|0;B=c[s>>2]|0;da=c[O>>2]|0;ha=c[U>>2]|0;z=c[Y>>2]|0;Z=(ia^7)+-1>>31;q=(c[1544+(b*960|0)+724>>2]^fa)&Z;k=(c[1544+(b*960|0)+728>>2]^F)&Z;L=(c[1544+(b*960|0)+732>>2]^w)&Z;ba=(c[1544+(b*960|0)+736>>2]^o)&Z;ga=(c[1544+(b*960|0)+740>>2]^W)&Z;C=(c[1544+(b*960|0)+744>>2]^B)&Z;t=(c[1544+(b*960|0)+748>>2]^da)&Z;m=(c[1544+(b*960|0)+752>>2]^ha)&Z;R=(c[1544+(b*960|0)+756>>2]^z)&Z;c[a>>2]=(c[1544+(b*960|0)+720>>2]^$)&Z^$;c[d>>2]=q^fa;c[ea>>2]=k^F;c[ca>>2]=L^w;c[aa>>2]=ba^o;c[_>>2]=ga^W;c[s>>2]=C^B;c[O>>2]=t^da;c[U>>2]=m^ha;c[Y>>2]=R^z;z=c[e>>2]|0;R=c[f>>2]|0;ha=c[T>>2]|0;m=c[Q>>2]|0;da=c[N>>2]|0;t=c[K>>2]|0;B=c[I>>2]|0;C=c[G>>2]|0;W=c[v>>2]|0;ga=c[E>>2]|0;o=(c[1544+(b*960|0)+764>>2]^R)&Z;ba=(c[1544+(b*960|0)+768>>2]^ha)&Z;w=(c[1544+(b*960|0)+772>>2]^m)&Z;L=(c[1544+(b*960|0)+776>>2]^da)&Z;F=(c[1544+(b*960|0)+780>>2]^t)&Z;k=(c[1544+(b*960|0)+784>>2]^B)&Z;fa=(c[1544+(b*960|0)+788>>2]^C)&Z;q=(c[1544+(b*960|0)+792>>2]^W)&Z;$=(c[1544+(b*960|0)+796>>2]^ga)&Z;c[e>>2]=(c[1544+(b*960|0)+760>>2]^z)&Z^z;c[f>>2]=o^R;c[T>>2]=ba^ha;c[Q>>2]=w^m;c[N>>2]=L^da;c[K>>2]=F^t;c[I>>2]=k^B;c[G>>2]=fa^C;c[v>>2]=q^W;c[E>>2]=$^ga;ga=c[D>>2]|0;$=c[A>>2]|0;W=c[x>>2]|0;q=c[u>>2]|0;C=c[r>>2]|0;fa=c[p>>2]|0;B=c[n>>2]|0;k=c[l>>2]|0;t=c[i>>2]|0;F=c[j>>2]|0;da=(c[1544+(b*960|0)+804>>2]^$)&Z;L=(c[1544+(b*960|0)+808>>2]^W)&Z;m=(c[1544+(b*960|0)+812>>2]^q)&Z;w=(c[1544+(b*960|0)+816>>2]^C)&Z;ha=(c[1544+(b*960|0)+820>>2]^fa)&Z;ba=(c[1544+(b*960|0)+824>>2]^B)&Z;R=(c[1544+(b*960|0)+828>>2]^k)&Z;o=(c[1544+(b*960|0)+832>>2]^t)&Z;z=(c[1544+(b*960|0)+836>>2]^F)&Z;c[D>>2]=(c[1544+(b*960|0)+800>>2]^ga)&Z^ga;c[A>>2]=da^$;c[x>>2]=L^W;c[u>>2]=m^q;c[r>>2]=w^C;c[p>>2]=ha^fa;c[n>>2]=ba^B;c[l>>2]=R^k;c[i>>2]=o^t;c[j>>2]=z^F;F=c[a>>2]|0;z=c[d>>2]|0;t=c[ea>>2]|0;o=c[ca>>2]|0;k=c[aa>>2]|0;R=c[_>>2]|0;B=c[s>>2]|0;ba=c[O>>2]|0;fa=c[U>>2]|0;ha=c[Y>>2]|0;ia=(ia^8)+-1>>31;C=(c[1544+(b*960|0)+844>>2]^z)&ia;w=(c[1544+(b*960|0)+848>>2]^t)&ia;q=(c[1544+(b*960|0)+852>>2]^o)&ia;m=(c[1544+(b*960|0)+856>>2]^k)&ia;W=(c[1544+(b*960|0)+860>>2]^R)&ia;L=(c[1544+(b*960|0)+864>>2]^B)&ia;$=(c[1544+(b*960|0)+868>>2]^ba)&ia;da=(c[1544+(b*960|0)+872>>2]^fa)&ia;ga=(c[1544+(b*960|0)+876>>2]^ha)&ia;c[a>>2]=(c[1544+(b*960|0)+840>>2]^F)&ia^F;c[d>>2]=C^z;c[ea>>2]=w^t;c[ca>>2]=q^o;c[aa>>2]=m^k;c[_>>2]=W^R;c[s>>2]=L^B;c[O>>2]=$^ba;c[U>>2]=da^fa;c[Y>>2]=ga^ha;ha=c[e>>2]|0;ga=c[f>>2]|0;fa=c[T>>2]|0;da=c[Q>>2]|0;ba=c[N>>2]|0;$=c[K>>2]|0;B=c[I>>2]|0;L=c[G>>2]|0;R=c[v>>2]|0;W=c[E>>2]|0;k=(c[1544+(b*960|0)+884>>2]^ga)&ia;m=(c[1544+(b*960|0)+888>>2]^fa)&ia;o=(c[1544+(b*960|0)+892>>2]^da)&ia;q=(c[1544+(b*960|0)+896>>2]^ba)&ia;t=(c[1544+(b*960|0)+900>>2]^$)&ia;w=(c[1544+(b*960|0)+904>>2]^B)&ia;z=(c[1544+(b*960|0)+908>>2]^L)&ia;C=(c[1544+(b*960|0)+912>>2]^R)&ia;F=(c[1544+(b*960|0)+916>>2]^W)&ia;ha=(c[1544+(b*960|0)+880>>2]^ha)&ia^ha;c[e>>2]=ha;ga=k^ga;c[f>>2]=ga;fa=m^fa;c[T>>2]=fa;da=o^da;c[Q>>2]=da;ba=q^ba;c[N>>2]=ba;$=t^$;c[K>>2]=$;B=w^B;c[I>>2]=B;L=z^L;c[G>>2]=L;R=C^R;c[v>>2]=R;W=F^W;c[E>>2]=W;F=c[D>>2]|0;C=c[A>>2]|0;z=c[x>>2]|0;w=c[u>>2]|0;t=c[r>>2]|0;q=c[p>>2]|0;o=c[n>>2]|0;m=c[l>>2]|0;k=c[i>>2]|0;Z=c[j>>2]|0;y=(c[1544+(b*960|0)+924>>2]^C)&ia;h=(c[1544+(b*960|0)+928>>2]^z)&ia;H=(c[1544+(b*960|0)+932>>2]^w)&ia;J=(c[1544+(b*960|0)+936>>2]^t)&ia;M=(c[1544+(b*960|0)+940>>2]^q)&ia;P=(c[1544+(b*960|0)+944>>2]^o)&ia;S=(c[1544+(b*960|0)+948>>2]^m)&ia;V=(c[1544+(b*960|0)+952>>2]^k)&ia;X=(c[1544+(b*960|0)+956>>2]^Z)&ia;F=(c[1544+(b*960|0)+920>>2]^F)&ia^F;c[D>>2]=F;C=y^C;c[A>>2]=C;z=h^z;c[x>>2]=z;w=H^w;c[u>>2]=w;t=J^t;c[r>>2]=t;q=M^q;c[p>>2]=q;o=P^o;c[n>>2]=o;m=S^m;c[l>>2]=m;k=V^k;c[i>>2]=k;b=X^Z;c[j>>2]=b;Z=c[a>>2]|0;X=c[d>>2]|0;V=c[ea>>2]|0;S=c[ca>>2]|0;P=c[aa>>2]|0;M=c[_>>2]|0;J=c[s>>2]|0;H=c[O>>2]|0;h=c[U>>2]|0;y=c[Y>>2]|0;c[a>>2]=(Z^ha)&g^Z;c[d>>2]=(X^ga)&g^X;c[ea>>2]=(V^fa)&g^V;c[ca>>2]=(S^da)&g^S;c[aa>>2]=(P^ba)&g^P;c[_>>2]=(M^$)&g^M;c[s>>2]=(J^B)&g^J;c[O>>2]=(H^L)&g^H;c[U>>2]=(h^R)&g^h;c[Y>>2]=(y^W)&g^y;Y=c[e>>2]|0;W=c[f>>2]|0;U=c[T>>2]|0;R=c[Q>>2]|0;O=c[N>>2]|0;L=c[K>>2]|0;a=c[I>>2]|0;d=c[G>>2]|0;s=c[v>>2]|0;B=c[E>>2]|0;c[e>>2]=(Y^Z)&g^Y;c[f>>2]=(W^X)&g^W;c[T>>2]=(U^V)&g^U;c[Q>>2]=(R^S)&g^R;c[N>>2]=(O^P)&g^O;c[K>>2]=(L^M)&g^L;c[I>>2]=(a^J)&g^a;c[G>>2]=(d^H)&g^d;c[v>>2]=(s^h)&g^s;c[E>>2]=(B^y)&g^B;E=c[D>>2]|0;B=c[A>>2]|0;y=c[x>>2]|0;v=c[u>>2]|0;s=c[r>>2]|0;d=c[p>>2]|0;e=c[n>>2]|0;f=c[l>>2]|0;h=c[i>>2]|0;a=c[j>>2]|0;c[D>>2]=(E^0-F)&g^E;c[A>>2]=(B^0-C)&g^B;c[x>>2]=(y^0-z)&g^y;c[u>>2]=(v^0-w)&g^v;c[r>>2]=(s^0-t)&g^s;c[p>>2]=(d^0-q)&g^d;c[n>>2]=(e^0-o)&g^e;c[l>>2]=(f^0-m)&g^f;c[i>>2]=(h^0-k)&g^h;c[j>>2]=(a^0-b)&g^a;return}function Ec(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0;ea=b+1|0;ba=b+2|0;D=a[ba>>0]|0;f=d[b>>0]|0;n=ph(d[ea>>0]|0|0,0,8)|0;va=C;D=D&255;V=ph(D|0,0,16)|0;aa=b+3|0;y=ph(d[aa>>0]|0|0,0,8)|0;ga=C;$=b+4|0;U=ph(d[$>>0]|0|0,0,16)|0;ga=ga|C;Y=b+5|0;N=d[Y>>0]|0;X=ph(N|0,0,24)|0;ga=oh(y|D|U|X|0,ga|C|0,5)|0;X=b+6|0;U=b+7|0;D=a[U>>0]|0;y=ph(d[X>>0]|0|0,0,8)|0;Ba=C;D=D&255;T=ph(D|0,0,16)|0;Ba=oh(y|N|T|0,Ba|C|0,2)|0;T=b+8|0;N=ph(d[T>>0]|0|0,0,8)|0;y=C;S=b+9|0;Ca=ph(d[S>>0]|0|0,0,16)|0;y=y|C;P=b+10|0;Sa=d[P>>0]|0;O=ph(Sa|0,0,24)|0;y=oh(N|D|Ca|O|0,y|C|0,7)|0;O=b+11|0;Ca=ph(d[O>>0]|0|0,0,8)|0;D=C;N=b+12|0;G=ph(d[N>>0]|0|0,0,16)|0;D=D|C;K=b+13|0;u=d[K>>0]|0;J=ph(u|0,0,24)|0;D=oh(Ca|Sa|G|J|0,D|C|0,4)|0;J=b+14|0;G=b+15|0;Sa=a[G>>0]|0;Ca=ph(d[J>>0]|0|0,0,8)|0;Da=C;Sa=Sa&255;F=ph(Sa|0,0,16)|0;Da=oh(Ca|u|F|0,Da|C|0,1)|0;F=b+16|0;u=ph(d[F>>0]|0|0,0,8)|0;Ca=C;E=b+17|0;w=ph(d[E>>0]|0|0,0,16)|0;Ca=Ca|C;A=b+18|0;v=d[A>>0]|0;z=ph(v|0,0,24)|0;Ca=oh(u|Sa|w|z|0,Ca|C|0,6)|0;z=b+19|0;w=b+20|0;Sa=a[w>>0]|0;u=ph(d[z>>0]|0|0,0,8)|0;Ta=C;Sa=ph(Sa&255|0,0,16)|0;Ta=oh(u|v|Sa|0,Ta|C|0,3)|0;Sa=C;v=b+21|0;u=b+22|0;r=b+23|0;na=a[r>>0]|0;ab=d[v>>0]|0;bb=ph(d[u>>0]|0|0,0,8)|0;_a=C;na=na&255;$a=ph(na|0,0,16)|0;q=b+24|0;Ka=ph(d[q>>0]|0|0,0,8)|0;Pa=C;p=b+25|0;i=ph(d[p>>0]|0|0,0,16)|0;Pa=Pa|C;m=b+26|0;xa=d[m>>0]|0;l=ph(xa|0,0,24)|0;Pa=oh(Ka|na|i|l|0,Pa|C|0,5)|0;l=b+27|0;i=b+28|0;na=a[i>>0]|0;Ka=ph(d[l>>0]|0|0,0,8)|0;Za=C;na=na&255;h=ph(na|0,0,16)|0;Za=oh(Ka|xa|h|0,Za|C|0,2)|0;h=b+29|0;xa=ph(d[h>>0]|0|0,0,8)|0;Ka=C;g=b+30|0;fb=ph(d[g>>0]|0|0,0,16)|0;Ka=Ka|C;c=b+31|0;qa=d[c>>0]|0;oa=ph(qa|0,0,24)|0;Ka=oh(xa|na|fb|oa|0,Ka|C|0,7)|0;oa=ph(d[b+32>>0]|0|0,0,8)|0;fb=C;na=ph(d[b+33>>0]|0|0,0,16)|0;fb=fb|C;xa=d[b+34>>0]|0;la=ph(xa|0,0,24)|0;fb=oh(oa|qa|na|la|0,fb|C|0,4)|0;la=a[b+36>>0]|0;na=ph(d[b+35>>0]|0|0,0,8)|0;qa=C;la=la&255;oa=ph(la|0,0,16)|0;qa=oh(na|xa|oa|0,qa|C|0,1)|0;oa=ph(d[b+37>>0]|0|0,0,8)|0;xa=C;na=ph(d[b+38>>0]|0|0,0,16)|0;xa=xa|C;Ma=d[b+39>>0]|0;fa=ph(Ma|0,0,24)|0;xa=oh(oa|la|na|fa|0,xa|C|0,6)|0;fa=a[b+41>>0]|0;na=ph(d[b+40>>0]|0|0,0,8)|0;la=C;fa=ph(fa&255|0,0,16)|0;la=oh(na|Ma|fa|0,la|C|0,3)|0;fa=C;Ma=a[b+44>>0]|0;na=d[b+42>>0]|0;oa=ph(d[b+43>>0]|0|0,0,8)|0;j=C;Ma=Ma&255;za=ph(Ma|0,0,16)|0;ja=ph(d[b+45>>0]|0|0,0,8)|0;L=C;W=ph(d[b+46>>0]|0|0,0,16)|0;L=L|C;gb=d[b+47>>0]|0;o=ph(gb|0,0,24)|0;L=oh(ja|Ma|W|o|0,L|C|0,5)|0;o=a[b+49>>0]|0;W=ph(d[b+48>>0]|0|0,0,8)|0;Ma=C;o=o&255;ja=ph(o|0,0,16)|0;Ma=oh(W|gb|ja|0,Ma|C|0,2)|0;Ma=Ma&2097151;ja=ph(d[b+50>>0]|0|0,0,8)|0;gb=C;W=ph(d[b+51>>0]|0|0,0,16)|0;gb=gb|C;Aa=d[b+52>>0]|0;M=ph(Aa|0,0,24)|0;gb=oh(ja|o|W|M|0,gb|C|0,7)|0;gb=gb&2097151;M=ph(d[b+53>>0]|0|0,0,8)|0;W=C;o=ph(d[b+54>>0]|0|0,0,16)|0;W=W|C;ja=d[b+55>>0]|0;R=ph(ja|0,0,24)|0;W=oh(M|Aa|o|R|0,W|C|0,4)|0;W=W&2097151;R=a[b+57>>0]|0;o=ph(d[b+56>>0]|0|0,0,8)|0;Aa=C;R=R&255;M=ph(R|0,0,16)|0;Aa=oh(o|ja|M|0,Aa|C|0,1)|0;Aa=Aa&2097151;M=ph(d[b+58>>0]|0|0,0,8)|0;ja=C;o=ph(d[b+59>>0]|0|0,0,16)|0;ja=ja|C;ha=d[b+60>>0]|0;Q=ph(ha|0,0,24)|0;ja=oh(M|R|o|Q|0,ja|C|0,6)|0;ja=ja&2097151;Q=ph(d[b+61>>0]|0|0,0,8)|0;o=C;R=ph(d[b+62>>0]|0|0,0,16)|0;o=o|C;M=ph(d[b+63>>0]|0|0,0,24)|0;o=oh(Q|ha|R|M|0,o|C|0,3)|0;M=C;R=wh(o|0,M|0,666643,0)|0;ha=C;Q=wh(o|0,M|0,470296,0)|0;I=C;ca=wh(o|0,M|0,654183,0)|0;ta=C;Ea=wh(o|0,M|0,-997805,-1)|0;t=C;k=wh(o|0,M|0,136657,0)|0;B=C;M=wh(o|0,M|0,-683901,-1)|0;j=lh(M|0,C|0,oa|na|za&2031616|0,j|0)|0;za=C;na=wh(ja|0,0,666643,0)|0;oa=C;M=wh(ja|0,0,470296,0)|0;o=C;Va=wh(ja|0,0,654183,0)|0;s=C;ma=wh(ja|0,0,-997805,-1)|0;_=C;ya=wh(ja|0,0,136657,0)|0;sa=C;ja=wh(ja|0,0,-683901,-1)|0;H=C;e=wh(Aa|0,0,666643,0)|0;ra=C;wa=wh(Aa|0,0,470296,0)|0;La=C;Fa=wh(Aa|0,0,654183,0)|0;da=C;cb=wh(Aa|0,0,-997805,-1)|0;Ua=C;ka=wh(Aa|0,0,136657,0)|0;x=C;Aa=wh(Aa|0,0,-683901,-1)|0;xa=lh(Aa|0,C|0,xa&2097151|0,0)|0;sa=lh(xa|0,C|0,ya|0,sa|0)|0;t=lh(sa|0,C|0,Ea|0,t|0)|0;Ea=C;sa=wh(W|0,0,666643,0)|0;ya=C;xa=wh(W|0,0,470296,0)|0;Aa=C;Wa=wh(W|0,0,654183,0)|0;Z=C;Ha=wh(W|0,0,-997805,-1)|0;Ga=C;eb=wh(W|0,0,136657,0)|0;db=C;W=wh(W|0,0,-683901,-1)|0;pa=C;ia=wh(gb|0,0,666643,0)|0;ua=C;Qa=wh(gb|0,0,470296,0)|0;Ra=C;Oa=wh(gb|0,0,654183,0)|0;Na=C;Ya=wh(gb|0,0,-997805,-1)|0;Xa=C;Ja=wh(gb|0,0,136657,0)|0;Ia=C;gb=wh(gb|0,0,-683901,-1)|0;fb=lh(gb|0,C|0,fb&2097151|0,0)|0;db=lh(fb|0,C|0,eb|0,db|0)|0;Ua=lh(db|0,C|0,cb|0,Ua|0)|0;s=lh(Ua|0,C|0,Va|0,s|0)|0;I=lh(s|0,C|0,Q|0,I|0)|0;Q=C;s=wh(Ma|0,0,666643,0)|0;Ca=lh(s|0,C|0,Ca&2097151|0,0)|0;s=C;Va=wh(Ma|0,0,470296,0)|0;Ua=C;cb=wh(Ma|0,0,654183,0)|0;_a=lh(cb|0,C|0,bb|ab|$a&2031616|0,_a|0)|0;Ra=lh(_a|0,C|0,Qa|0,Ra|0)|0;ya=lh(Ra|0,C|0,sa|0,ya|0)|0;sa=C;Ra=wh(Ma|0,0,-997805,-1)|0;Qa=C;_a=wh(Ma|0,0,136657,0)|0;Za=lh(_a|0,C|0,Za&2097151|0,0)|0;Xa=lh(Za|0,C|0,Ya|0,Xa|0)|0;Z=lh(Xa|0,C|0,Wa|0,Z|0)|0;La=lh(Z|0,C|0,wa|0,La|0)|0;oa=lh(La|0,C|0,na|0,oa|0)|0;na=C;Ma=wh(Ma|0,0,-683901,-1)|0;La=C;wa=lh(Ca|0,s|0,1048576,0)|0;wa=oh(wa|0,C|0,21)|0;Z=C;Sa=lh(Va|0,Ua|0,Ta|0,Sa|0)|0;Sa=lh(Sa|0,C|0,wa|0,Z|0)|0;ua=lh(Sa|0,C|0,ia|0,ua|0)|0;ia=C;Z=ph(wa|0,Z|0,21)|0;Z=kh(Ca|0,s|0,Z|0,C|0)|0;s=C;Ca=lh(ya|0,sa|0,1048576,0)|0;Ca=oh(Ca|0,C|0,21)|0;wa=C;Pa=lh(Ra|0,Qa|0,Pa&2097151|0,0)|0;Na=lh(Pa|0,C|0,Oa|0,Na|0)|0;Aa=lh(Na|0,C|0,xa|0,Aa|0)|0;ra=lh(Aa|0,C|0,e|0,ra|0)|0;ra=lh(ra|0,C|0,Ca|0,wa|0)|0;e=C;wa=ph(Ca|0,wa|0,21)|0;Ca=C;Aa=lh(oa|0,na|0,1048576,0)|0;Aa=mh(Aa|0,C|0,21)|0;xa=C;Ka=lh(Ma|0,La|0,Ka&2097151|0,0)|0;Ia=lh(Ka|0,C|0,Ja|0,Ia|0)|0;Ga=lh(Ia|0,C|0,Ha|0,Ga|0)|0;da=lh(Ga|0,C|0,Fa|0,da|0)|0;o=lh(da|0,C|0,M|0,o|0)|0;ha=lh(o|0,C|0,R|0,ha|0)|0;ha=lh(ha|0,C|0,Aa|0,xa|0)|0;R=C;xa=ph(Aa|0,xa|0,21)|0;Aa=C;o=lh(I|0,Q|0,1048576,0)|0;o=mh(o|0,C|0,21)|0;M=C;qa=lh(W|0,pa|0,qa&2097151|0,0)|0;x=lh(qa|0,C|0,ka|0,x|0)|0;_=lh(x|0,C|0,ma|0,_|0)|0;ta=lh(_|0,C|0,ca|0,ta|0)|0;ta=lh(ta|0,C|0,o|0,M|0)|0;ca=C;M=ph(o|0,M|0,21)|0;M=kh(I|0,Q|0,M|0,C|0)|0;Q=C;I=lh(t|0,Ea|0,1048576,0)|0;I=mh(I|0,C|0,21)|0;o=C;fa=lh(ja|0,H|0,la|0,fa|0)|0;B=lh(fa|0,C|0,k|0,B|0)|0;B=lh(B|0,C|0,I|0,o|0)|0;k=C;o=ph(I|0,o|0,21)|0;o=kh(t|0,Ea|0,o|0,C|0)|0;Ea=C;t=lh(j|0,za|0,1048576,0)|0;t=mh(t|0,C|0,21)|0;I=C;L=lh(t|0,I|0,L&2097151|0,0)|0;fa=C;I=ph(t|0,I|0,21)|0;I=kh(j|0,za|0,I|0,C|0)|0;za=C;j=lh(ua|0,ia|0,1048576,0)|0;j=oh(j|0,C|0,21)|0;t=C;la=ph(j|0,t|0,21)|0;la=kh(ua|0,ia|0,la|0,C|0)|0;ia=C;ua=lh(ra|0,e|0,1048576,0)|0;ua=mh(ua|0,C|0,21)|0;H=C;ja=ph(ua|0,H|0,21)|0;ja=kh(ra|0,e|0,ja|0,C|0)|0;e=C;ra=lh(ha|0,R|0,1048576,0)|0;ra=mh(ra|0,C|0,21)|0;_=C;Q=lh(M|0,Q|0,ra|0,_|0)|0;M=C;_=ph(ra|0,_|0,21)|0;_=kh(ha|0,R|0,_|0,C|0)|0;R=C;ha=lh(ta|0,ca|0,1048576,0)|0;ha=mh(ha|0,C|0,21)|0;ra=C;Ea=lh(ha|0,ra|0,o|0,Ea|0)|0;o=C;ra=ph(ha|0,ra|0,21)|0;ra=kh(ta|0,ca|0,ra|0,C|0)|0;ca=C;ta=lh(B|0,k|0,1048576,0)|0;ta=mh(ta|0,C|0,21)|0;ha=C;za=lh(ta|0,ha|0,I|0,za|0)|0;I=C;ha=ph(ta|0,ha|0,21)|0;ha=kh(B|0,k|0,ha|0,C|0)|0;k=C;B=wh(L|0,fa|0,666643,0)|0;Da=lh(B|0,C|0,Da&2097151|0,0)|0;B=C;ta=wh(L|0,fa|0,470296,0)|0;ta=lh(Z|0,s|0,ta|0,C|0)|0;s=C;Z=wh(L|0,fa|0,654183,0)|0;Z=lh(la|0,ia|0,Z|0,C|0)|0;ia=C;la=wh(L|0,fa|0,-997805,-1)|0;ma=C;x=wh(L|0,fa|0,136657,0)|0;x=lh(ja|0,e|0,x|0,C|0)|0;e=C;fa=wh(L|0,fa|0,-683901,-1)|0;L=C;H=lh(oa|0,na|0,ua|0,H|0)|0;Aa=kh(H|0,C|0,xa|0,Aa|0)|0;L=lh(Aa|0,C|0,fa|0,L|0)|0;fa=C;Aa=wh(za|0,I|0,666643,0)|0;D=lh(Aa|0,C|0,D&2097151|0,0)|0;Aa=C;xa=wh(za|0,I|0,470296,0)|0;xa=lh(Da|0,B|0,xa|0,C|0)|0;B=C;Da=wh(za|0,I|0,654183,0)|0;Da=lh(ta|0,s|0,Da|0,C|0)|0;s=C;ta=wh(za|0,I|0,-997805,-1)|0;ta=lh(Z|0,ia|0,ta|0,C|0)|0;ia=C;Z=wh(za|0,I|0,136657,0)|0;H=C;I=wh(za|0,I|0,-683901,-1)|0;I=lh(x|0,e|0,I|0,C|0)|0;e=C;x=wh(ha|0,k|0,666643,0)|0;y=lh(x|0,C|0,y&2097151|0,0)|0;x=C;za=wh(ha|0,k|0,470296,0)|0;za=lh(D|0,Aa|0,za|0,C|0)|0;Aa=C;D=wh(ha|0,k|0,654183,0)|0;D=lh(xa|0,B|0,D|0,C|0)|0;B=C;xa=wh(ha|0,k|0,-997805,-1)|0;xa=lh(Da|0,s|0,xa|0,C|0)|0;s=C;Da=wh(ha|0,k|0,136657,0)|0;Da=lh(ta|0,ia|0,Da|0,C|0)|0;ia=C;k=wh(ha|0,k|0,-683901,-1)|0;ha=C;t=lh(ya|0,sa|0,j|0,t|0)|0;Ca=kh(t|0,C|0,wa|0,Ca|0)|0;ma=lh(Ca|0,C|0,la|0,ma|0)|0;H=lh(ma|0,C|0,Z|0,H|0)|0;ha=lh(H|0,C|0,k|0,ha|0)|0;k=C;H=wh(Ea|0,o|0,666643,0)|0;Z=C;ma=wh(Ea|0,o|0,470296,0)|0;la=C;Ca=wh(Ea|0,o|0,654183,0)|0;wa=C;t=wh(Ea|0,o|0,-997805,-1)|0;j=C;sa=wh(Ea|0,o|0,136657,0)|0;sa=lh(xa|0,s|0,sa|0,C|0)|0;s=C;o=wh(Ea|0,o|0,-683901,-1)|0;o=lh(Da|0,ia|0,o|0,C|0)|0;ia=C;Da=wh(ra|0,ca|0,666643,0)|0;Ea=C;xa=wh(ra|0,ca|0,470296,0)|0;ya=C;ta=wh(ra|0,ca|0,654183,0)|0;ua=C;na=wh(ra|0,ca|0,-997805,-1)|0;oa=C;ja=wh(ra|0,ca|0,136657,0)|0;ka=C;ca=wh(ra|0,ca|0,-683901,-1)|0;ca=lh(sa|0,s|0,ca|0,C|0)|0;s=C;sa=wh(Q|0,M|0,666643,0)|0;va=lh(sa|0,C|0,n|f|V&2031616|0,va|0)|0;V=C;f=wh(Q|0,M|0,470296,0)|0;n=C;sa=wh(Q|0,M|0,654183,0)|0;Ba=lh(sa|0,C|0,Ba&2097151|0,0)|0;Z=lh(Ba|0,C|0,H|0,Z|0)|0;ya=lh(Z|0,C|0,xa|0,ya|0)|0;xa=C;Z=wh(Q|0,M|0,-997805,-1)|0;H=C;Ba=wh(Q|0,M|0,136657,0)|0;Ba=lh(za|0,Aa|0,Ba|0,C|0)|0;wa=lh(Ba|0,C|0,Ca|0,wa|0)|0;oa=lh(wa|0,C|0,na|0,oa|0)|0;na=C;M=wh(Q|0,M|0,-683901,-1)|0;Q=C;wa=lh(va|0,V|0,1048576,0)|0;wa=mh(wa|0,C|0,21)|0;Ca=C;ga=lh(f|0,n|0,ga&2097151|0,0)|0;Ea=lh(ga|0,C|0,Da|0,Ea|0)|0;Ea=lh(Ea|0,C|0,wa|0,Ca|0)|0;Da=C;Ca=ph(wa|0,Ca|0,21)|0;Ca=kh(va|0,V|0,Ca|0,C|0)|0;V=C;va=lh(ya|0,xa|0,1048576,0)|0;va=mh(va|0,C|0,21)|0;wa=C;H=lh(y|0,x|0,Z|0,H|0)|0;la=lh(H|0,C|0,ma|0,la|0)|0;ua=lh(la|0,C|0,ta|0,ua|0)|0;ua=lh(ua|0,C|0,va|0,wa|0)|0;ta=C;wa=ph(va|0,wa|0,21)|0;va=C;la=lh(oa|0,na|0,1048576,0)|0;la=mh(la|0,C|0,21)|0;ma=C;Q=lh(D|0,B|0,M|0,Q|0)|0;j=lh(Q|0,C|0,t|0,j|0)|0;ka=lh(j|0,C|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,la|0,ma|0)|0;ja=C;ma=ph(la|0,ma|0,21)|0;la=C;j=lh(ca|0,s|0,1048576,0)|0;j=mh(j|0,C|0,21)|0;t=C;ia=lh(o|0,ia|0,j|0,t|0)|0;o=C;t=ph(j|0,t|0,21)|0;t=kh(ca|0,s|0,t|0,C|0)|0;s=C;ca=lh(ha|0,k|0,1048576,0)|0;ca=mh(ca|0,C|0,21)|0;j=C;e=lh(I|0,e|0,ca|0,j|0)|0;I=C;j=ph(ca|0,j|0,21)|0;j=kh(ha|0,k|0,j|0,C|0)|0;k=C;ha=lh(L|0,fa|0,1048576,0)|0;ha=mh(ha|0,C|0,21)|0;ca=C;R=lh(_|0,R|0,ha|0,ca|0)|0;_=C;ca=ph(ha|0,ca|0,21)|0;ca=kh(L|0,fa|0,ca|0,C|0)|0;fa=C;L=lh(Ea|0,Da|0,1048576,0)|0;L=mh(L|0,C|0,21)|0;ha=C;Q=ph(L|0,ha|0,21)|0;M=C;B=lh(ua|0,ta|0,1048576,0)|0;B=mh(B|0,C|0,21)|0;D=C;H=ph(B|0,D|0,21)|0;Z=C;x=lh(ka|0,ja|0,1048576,0)|0;x=mh(x|0,C|0,21)|0;y=C;s=lh(t|0,s|0,x|0,y|0)|0;t=C;y=ph(x|0,y|0,21)|0;x=C;ga=lh(ia|0,o|0,1048576,0)|0;ga=mh(ga|0,C|0,21)|0;n=C;k=lh(j|0,k|0,ga|0,n|0)|0;j=C;n=ph(ga|0,n|0,21)|0;n=kh(ia|0,o|0,n|0,C|0)|0;o=C;ia=lh(e|0,I|0,1048576,0)|0;ia=mh(ia|0,C|0,21)|0;ga=C;fa=lh(ca|0,fa|0,ia|0,ga|0)|0;ca=C;ga=ph(ia|0,ga|0,21)|0;ga=kh(e|0,I|0,ga|0,C|0)|0;I=C;e=lh(R|0,_|0,1048576,0)|0;e=mh(e|0,C|0,21)|0;ia=C;f=ph(e|0,ia|0,21)|0;f=kh(R|0,_|0,f|0,C|0)|0;_=C;R=wh(e|0,ia|0,666643,0)|0;R=lh(Ca|0,V|0,R|0,C|0)|0;V=C;Ca=wh(e|0,ia|0,470296,0)|0;Ba=C;Aa=wh(e|0,ia|0,654183,0)|0;za=C;sa=wh(e|0,ia|0,-997805,-1)|0;ra=C;qa=wh(e|0,ia|0,136657,0)|0;pa=C;ia=wh(e|0,ia|0,-683901,-1)|0;e=C;W=mh(R|0,V|0,21)|0;da=C;Ba=lh(Ea|0,Da|0,Ca|0,Ba|0)|0;Ba=lh(Ba|0,C|0,W|0,da|0)|0;M=kh(Ba|0,C|0,Q|0,M|0)|0;Q=C;da=ph(W|0,da|0,21)|0;da=kh(R|0,V|0,da|0,C|0)|0;V=C;R=mh(M|0,Q|0,21)|0;W=C;xa=lh(Aa|0,za|0,ya|0,xa|0)|0;va=kh(xa|0,C|0,wa|0,va|0)|0;ha=lh(va|0,C|0,L|0,ha|0)|0;ha=lh(ha|0,C|0,R|0,W|0)|0;L=C;W=ph(R|0,W|0,21)|0;W=kh(M|0,Q|0,W|0,C|0)|0;Q=C;M=mh(ha|0,L|0,21)|0;R=C;ra=lh(ua|0,ta|0,sa|0,ra|0)|0;Z=kh(ra|0,C|0,H|0,Z|0)|0;Z=lh(Z|0,C|0,M|0,R|0)|0;H=C;R=ph(M|0,R|0,21)|0;R=kh(ha|0,L|0,R|0,C|0)|0;L=C;ha=mh(Z|0,H|0,21)|0;M=C;na=lh(qa|0,pa|0,oa|0,na|0)|0;la=kh(na|0,C|0,ma|0,la|0)|0;D=lh(la|0,C|0,B|0,D|0)|0;D=lh(D|0,C|0,ha|0,M|0)|0;B=C;M=ph(ha|0,M|0,21)|0;M=kh(Z|0,H|0,M|0,C|0)|0;H=C;Z=mh(D|0,B|0,21)|0;ha=C;e=lh(ka|0,ja|0,ia|0,e|0)|0;x=kh(e|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,Z|0,ha|0)|0;y=C;ha=ph(Z|0,ha|0,21)|0;ha=kh(D|0,B|0,ha|0,C|0)|0;B=C;D=mh(x|0,y|0,21)|0;Z=C;t=lh(s|0,t|0,D|0,Z|0)|0;s=C;Z=ph(D|0,Z|0,21)|0;Z=kh(x|0,y|0,Z|0,C|0)|0;y=C;x=mh(t|0,s|0,21)|0;D=C;o=lh(x|0,D|0,n|0,o|0)|0;n=C;D=ph(x|0,D|0,21)|0;D=kh(t|0,s|0,D|0,C|0)|0;s=C;t=mh(o|0,n|0,21)|0;x=C;j=lh(k|0,j|0,t|0,x|0)|0;k=C;x=ph(t|0,x|0,21)|0;x=kh(o|0,n|0,x|0,C|0)|0;n=C;o=mh(j|0,k|0,21)|0;t=C;I=lh(o|0,t|0,ga|0,I|0)|0;ga=C;t=ph(o|0,t|0,21)|0;t=kh(j|0,k|0,t|0,C|0)|0;k=C;j=mh(I|0,ga|0,21)|0;o=C;ca=lh(fa|0,ca|0,j|0,o|0)|0;fa=C;o=ph(j|0,o|0,21)|0;o=kh(I|0,ga|0,o|0,C|0)|0;ga=C;I=mh(ca|0,fa|0,21)|0;j=C;_=lh(I|0,j|0,f|0,_|0)|0;f=C;j=ph(I|0,j|0,21)|0;j=kh(ca|0,fa|0,j|0,C|0)|0;fa=C;ca=mh(_|0,f|0,21)|0;I=C;e=ph(ca|0,I|0,21)|0;e=kh(_|0,f|0,e|0,C|0)|0;f=C;_=wh(ca|0,I|0,666643,0)|0;V=lh(_|0,C|0,da|0,V|0)|0;da=C;_=wh(ca|0,I|0,470296,0)|0;_=lh(W|0,Q|0,_|0,C|0)|0;Q=C;W=wh(ca|0,I|0,654183,0)|0;W=lh(R|0,L|0,W|0,C|0)|0;L=C;R=wh(ca|0,I|0,-997805,-1)|0;R=lh(M|0,H|0,R|0,C|0)|0;H=C;M=wh(ca|0,I|0,136657,0)|0;M=lh(ha|0,B|0,M|0,C|0)|0;B=C;I=wh(ca|0,I|0,-683901,-1)|0;I=lh(Z|0,y|0,I|0,C|0)|0;y=C;Z=mh(V|0,da|0,21)|0;ca=C;Q=lh(_|0,Q|0,Z|0,ca|0)|0;_=C;ca=ph(Z|0,ca|0,21)|0;ca=kh(V|0,da|0,ca|0,C|0)|0;da=C;V=mh(Q|0,_|0,21)|0;Z=C;L=lh(W|0,L|0,V|0,Z|0)|0;W=C;Z=ph(V|0,Z|0,21)|0;Z=kh(Q|0,_|0,Z|0,C|0)|0;_=C;Q=mh(L|0,W|0,21)|0;V=C;H=lh(R|0,H|0,Q|0,V|0)|0;R=C;V=ph(Q|0,V|0,21)|0;V=kh(L|0,W|0,V|0,C|0)|0;W=C;L=mh(H|0,R|0,21)|0;Q=C;B=lh(M|0,B|0,L|0,Q|0)|0;M=C;Q=ph(L|0,Q|0,21)|0;Q=kh(H|0,R|0,Q|0,C|0)|0;R=C;H=mh(B|0,M|0,21)|0;L=C;y=lh(I|0,y|0,H|0,L|0)|0;I=C;L=ph(H|0,L|0,21)|0;L=kh(B|0,M|0,L|0,C|0)|0;M=C;B=mh(y|0,I|0,21)|0;H=C;s=lh(B|0,H|0,D|0,s|0)|0;D=C;H=ph(B|0,H|0,21)|0;H=kh(y|0,I|0,H|0,C|0)|0;I=C;y=mh(s|0,D|0,21)|0;B=C;n=lh(y|0,B|0,x|0,n|0)|0;x=C;B=ph(y|0,B|0,21)|0;B=kh(s|0,D|0,B|0,C|0)|0;D=C;s=mh(n|0,x|0,21)|0;y=C;k=lh(s|0,y|0,t|0,k|0)|0;t=C;y=ph(s|0,y|0,21)|0;y=kh(n|0,x|0,y|0,C|0)|0;x=C;n=mh(k|0,t|0,21)|0;s=C;ga=lh(n|0,s|0,o|0,ga|0)|0;o=C;s=ph(n|0,s|0,21)|0;s=kh(k|0,t|0,s|0,C|0)|0;t=C;k=mh(ga|0,o|0,21)|0;n=C;fa=lh(k|0,n|0,j|0,fa|0)|0;j=C;n=ph(k|0,n|0,21)|0;n=kh(ga|0,o|0,n|0,C|0)|0;o=C;ga=mh(fa|0,j|0,21)|0;k=C;f=lh(ga|0,k|0,e|0,f|0)|0;e=C;k=ph(ga|0,k|0,21)|0;k=kh(fa|0,j|0,k|0,C|0)|0;j=C;a[b>>0]=ca;b=oh(ca|0,da|0,8)|0;a[ea>>0]=b;b=oh(ca|0,da|0,16)|0;da=C;ca=ph(Z|0,_|0,5)|0;a[ba>>0]=ca|b;b=oh(Z|0,_|0,3)|0;a[aa>>0]=b;b=oh(Z|0,_|0,11)|0;a[$>>0]=b;b=oh(Z|0,_|0,19)|0;_=C;Z=ph(V|0,W|0,2)|0;a[Y>>0]=Z|b;b=oh(V|0,W|0,6)|0;a[X>>0]=b;b=oh(V|0,W|0,14)|0;W=C;V=ph(Q|0,R|0,7)|0;a[U>>0]=V|b;b=oh(Q|0,R|0,1)|0;a[T>>0]=b;b=oh(Q|0,R|0,9)|0;a[S>>0]=b;b=oh(Q|0,R|0,17)|0;R=C;Q=ph(L|0,M|0,4)|0;a[P>>0]=Q|b;b=oh(L|0,M|0,4)|0;a[O>>0]=b;b=oh(L|0,M|0,12)|0;a[N>>0]=b;b=oh(L|0,M|0,20)|0;M=C;L=ph(H|0,I|0,1)|0;a[K>>0]=L|b;b=oh(H|0,I|0,7)|0;a[J>>0]=b;b=oh(H|0,I|0,15)|0;I=C;H=ph(B|0,D|0,6)|0;a[G>>0]=H|b;b=oh(B|0,D|0,2)|0;a[F>>0]=b;b=oh(B|0,D|0,10)|0;a[E>>0]=b;b=oh(B|0,D|0,18)|0;D=C;B=ph(y|0,x|0,3)|0;a[A>>0]=B|b;b=oh(y|0,x|0,5)|0;a[z>>0]=b;b=oh(y|0,x|0,13)|0;a[w>>0]=b;a[v>>0]=s;b=oh(s|0,t|0,8)|0;a[u>>0]=b;b=oh(s|0,t|0,16)|0;t=C;s=ph(n|0,o|0,5)|0;a[r>>0]=s|b;b=oh(n|0,o|0,3)|0;a[q>>0]=b;b=oh(n|0,o|0,11)|0;a[p>>0]=b;b=oh(n|0,o|0,19)|0;o=C;n=ph(k|0,j|0,2)|0;a[m>>0]=n|b;b=oh(k|0,j|0,6)|0;a[l>>0]=b;j=oh(k|0,j|0,14)|0;k=C;b=ph(f|0,e|0,7)|0;a[i>>0]=j|b;b=oh(f|0,e|0,1)|0;a[h>>0]=b;b=oh(f|0,e|0,9)|0;a[g>>0]=b;b=oh(f|0,e|0,17)|0;a[c>>0]=b;return}function Fc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;if(!f){f=1634760805;g=2036477234;h=1797285236;i=857760878}else{i=f+4|0;g=f+8|0;h=f+12|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;g=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;h=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;i=d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24}l=e+4|0;m=e+8|0;n=e+12|0;o=e+16|0;p=e+20|0;q=e+24|0;r=e+28|0;v=c+4|0;u=c+8|0;j=c+12|0;t=20;s=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;o=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;p=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;q=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;r=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;k=i;e=d[c>>0]|d[c+1>>0]<<8|d[c+2>>0]<<16|d[c+3>>0]<<24;i=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;j=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;while(1){D=p+f|0;D=(D>>>25|D<<7)^n;A=D+f|0;A=(A>>>23|A<<9)^c;x=A+D|0;x=(x>>>19|x<<13)^p;G=x+A|0;G=(G>>>14|G<<18)^f;z=k+s|0;z=j^(z>>>25|z<<7);w=z+k|0;w=q^(w>>>23|w<<9);J=w+z|0;J=(J>>>19|J<<13)^s;C=J+w|0;C=(C>>>14|C<<18)^k;u=g+e|0;u=r^(u>>>25|u<<7);I=u+g|0;I=(I>>>23|I<<9)^l;F=I+u|0;F=(F>>>19|F<<13)^e;y=F+I|0;y=(y>>>14|y<<18)^g;H=h+o|0;H=(H>>>25|H<<7)^m;E=H+h|0;E=(E>>>23|E<<9)^i;B=E+H|0;B=(B>>>19|B<<13)^o;v=B+E|0;v=(v>>>14|v<<18)^h;K=G+H|0;s=(K>>>25|K<<7)^J;J=s+G|0;l=(J>>>23|J<<9)^I;I=l+s|0;m=(I>>>19|I<<13)^H;H=m+l|0;f=(H>>>14|H<<18)^G;G=C+D|0;e=(G>>>25|G<<7)^F;F=e+C|0;i=(F>>>23|F<<9)^E;E=i+e|0;n=(E>>>19|E<<13)^D;D=n+i|0;k=(D>>>14|D<<18)^C;C=y+z|0;o=(C>>>25|C<<7)^B;B=o+y|0;c=(B>>>23|B<<9)^A;A=c+o|0;j=(A>>>19|A<<13)^z;z=j+c|0;g=(z>>>14|z<<18)^y;y=v+u|0;p=(y>>>25|y<<7)^x;x=p+v|0;q=(x>>>23|x<<9)^w;w=q+p|0;r=(w>>>19|w<<13)^u;u=r+q|0;h=(u>>>14|u<<18)^v;if((t|0)<=2)break;else t=t+-2|0}a[b>>0]=f;a[b+1>>0]=f>>8;a[b+2>>0]=f>>16;a[b+3>>0]=f>>24;K=b+4|0;a[K>>0]=k;a[K+1>>0]=k>>8;a[K+2>>0]=k>>16;a[K+3>>0]=k>>24;K=b+8|0;a[K>>0]=g;a[K+1>>0]=g>>8;a[K+2>>0]=g>>16;a[K+3>>0]=g>>24;K=b+12|0;a[K>>0]=h;a[K+1>>0]=h>>8;a[K+2>>0]=h>>16;a[K+3>>0]=h>>24;K=b+16|0;a[K>>0]=e;a[K+1>>0]=e>>8;a[K+2>>0]=e>>16;a[K+3>>0]=e>>24;K=b+20|0;a[K>>0]=i;a[K+1>>0]=i>>8;a[K+2>>0]=i>>16;a[K+3>>0]=i>>24;K=b+24|0;a[K>>0]=c;a[K+1>>0]=c>>8;a[K+2>>0]=c>>16;a[K+3>>0]=c>>24;K=b+28|0;a[K>>0]=j;a[K+1>>0]=j>>8;a[K+2>>0]=j>>16;a[K+3>>0]=j>>24;return 0}function Gc(){return 32}function Hc(){return 16}function Ic(){return 32}function Jc(){return 16}function Kc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;if(!f){G=1634760805;H=857760878;I=2036477234;J=1797285236}else{H=f+4|0;I=f+8|0;J=f+12|0;G=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;H=d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24;I=d[I>>0]|d[I+1>>0]<<8|d[I+2>>0]<<16|d[I+3>>0]<<24;J=d[J>>0]|d[J+1>>0]<<8|d[J+2>>0]<<16|d[J+3>>0]<<24}F=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;z=e+4|0;z=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;A=e+8|0;A=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;B=e+12|0;B=d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24;C=d[c>>0]|d[c+1>>0]<<8|d[c+2>>0]<<16|d[c+3>>0]<<24;D=c+4|0;D=d[D>>0]|d[D+1>>0]<<8|d[D+2>>0]<<16|d[D+3>>0]<<24;E=c+8|0;E=d[E>>0]|d[E+1>>0]<<8|d[E+2>>0]<<16|d[E+3>>0]<<24;v=c+12|0;v=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;w=e+16|0;w=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;x=e+20|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;y=e+24|0;y=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;f=e+28|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;c=20;e=G;g=F;h=I;i=w;j=x;k=y;l=f;m=J;n=z;o=A;p=B;q=H;r=C;s=D;t=E;u=v;while(1){T=e+j|0;T=(T>>>25|T<<7)^p;Q=T+e|0;Q=(Q>>>23|Q<<9)^t;N=Q+T|0;N=(N>>>19|N<<13)^j;W=N+Q|0;W=(W>>>14|W<<18)^e;P=g+q|0;P=(P>>>25|P<<7)^u;M=P+q|0;M=(M>>>23|M<<9)^k;Z=M+P|0;Z=(Z>>>19|Z<<13)^g;S=Z+M|0;S=(S>>>14|S<<18)^q;L=r+h|0;L=(L>>>25|L<<7)^l;Y=L+h|0;Y=(Y>>>23|Y<<9)^n;V=Y+L|0;V=(V>>>19|V<<13)^r;O=V+Y|0;O=(O>>>14|O<<18)^h;X=i+m|0;X=o^(X>>>25|X<<7);U=X+m|0;U=(U>>>23|U<<9)^s;R=U+X|0;R=(R>>>19|R<<13)^i;K=R+U|0;K=(K>>>14|K<<18)^m;_=W+X|0;g=(_>>>25|_<<7)^Z;Z=g+W|0;n=(Z>>>23|Z<<9)^Y;Y=n+g|0;o=(Y>>>19|Y<<13)^X;X=o+n|0;e=(X>>>14|X<<18)^W;W=S+T|0;r=(W>>>25|W<<7)^V;V=r+S|0;s=(V>>>23|V<<9)^U;U=s+r|0;p=(U>>>19|U<<13)^T;T=p+s|0;q=(T>>>14|T<<18)^S;S=O+P|0;i=(S>>>25|S<<7)^R;R=i+O|0;t=(R>>>23|R<<9)^Q;Q=t+i|0;u=(Q>>>19|Q<<13)^P;P=u+t|0;h=(P>>>14|P<<18)^O;O=K+L|0;j=(O>>>25|O<<7)^N;N=j+K|0;k=(N>>>23|N<<9)^M;M=k+j|0;l=(M>>>19|M<<13)^L;L=l+k|0;m=(L>>>14|L<<18)^K;if((c|0)<=2)break;else c=c+-2|0}_=e+G|0;L=g+F|0;M=n+z|0;N=o+A|0;O=p+B|0;P=q+H|0;Q=r+C|0;R=s+D|0;S=t+E|0;T=u+v|0;U=h+I|0;V=i+w|0;W=j+x|0;X=k+y|0;Y=l+f|0;Z=m+J|0;a[b>>0]=_;a[b+1>>0]=_>>8;a[b+2>>0]=_>>16;a[b+3>>0]=_>>24;_=b+4|0;a[_>>0]=L;a[_+1>>0]=L>>8;a[_+2>>0]=L>>16;a[_+3>>0]=L>>24;_=b+8|0;a[_>>0]=M;a[_+1>>0]=M>>8;a[_+2>>0]=M>>16;a[_+3>>0]=M>>24;_=b+12|0;a[_>>0]=N;a[_+1>>0]=N>>8;a[_+2>>0]=N>>16;a[_+3>>0]=N>>24;_=b+16|0;a[_>>0]=O;a[_+1>>0]=O>>8;a[_+2>>0]=O>>16;a[_+3>>0]=O>>24;_=b+20|0;a[_>>0]=P;a[_+1>>0]=P>>8;a[_+2>>0]=P>>16;a[_+3>>0]=P>>24;_=b+24|0;a[_>>0]=Q;a[_+1>>0]=Q>>8;a[_+2>>0]=Q>>16;a[_+3>>0]=Q>>24;_=b+28|0;a[_>>0]=R;a[_+1>>0]=R>>8;a[_+2>>0]=R>>16;a[_+3>>0]=R>>24;_=b+32|0;a[_>>0]=S;a[_+1>>0]=S>>8;a[_+2>>0]=S>>16;a[_+3>>0]=S>>24;_=b+36|0;a[_>>0]=T;a[_+1>>0]=T>>8;a[_+2>>0]=T>>16;a[_+3>>0]=T>>24;_=b+40|0;a[_>>0]=U;a[_+1>>0]=U>>8;a[_+2>>0]=U>>16;a[_+3>>0]=U>>24;_=b+44|0;a[_>>0]=V;a[_+1>>0]=V>>8;a[_+2>>0]=V>>16;a[_+3>>0]=V>>24;_=b+48|0;a[_>>0]=W;a[_+1>>0]=W>>8;a[_+2>>0]=W>>16;a[_+3>>0]=W>>24;_=b+52|0;a[_>>0]=X;a[_+1>>0]=X>>8;a[_+2>>0]=X>>16;a[_+3>>0]=X>>24;_=b+56|0;a[_>>0]=Y;a[_+1>>0]=Y>>8;a[_+2>>0]=Y>>16;a[_+3>>0]=Y>>24;_=b+60|0;a[_>>0]=Z;a[_+1>>0]=Z>>8;a[_+2>>0]=Z>>16;a[_+3>>0]=Z>>24;return 0}function Lc(){return 64}function Mc(){return 16}function Nc(){return 32}function Oc(){return 16}function Pc(){return 16}function Qc(){return 64}function Rc(){return 32}function Sc(){return 16}function Tc(){return 64}function Uc(){return 32}function Vc(){return 32439}function Wc(){return 384}function Xc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kd(a,b,c,d,e,f,g)|0}function Yc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return md(a,b,c,d)|0}function Zc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((e|0)==0&(f|0)==0)return 0;k=b+352|0;l=b+96|0;m=b+64|0;n=b+72|0;o=b+224|0;g=c[k>>2]|0;j=e;while(1){i=256-g|0;e=b+96+g|0;if(!(f>>>0>0|(f|0)==0&j>>>0>i>>>0))break;qh(e|0,d|0,i|0)|0;c[k>>2]=(c[k>>2]|0)+i;h=m;e=c[h>>2]|0;h=c[h+4>>2]|0;q=lh(e|0,h|0,128,0)|0;g=m;c[g>>2]=q;c[g+4>>2]=C;g=n;g=lh((h>>>0>4294967295|(h|0)==-1&e>>>0>4294967167)&1|0,0,c[g>>2]|0,c[g+4>>2]|0)|0;e=n;c[e>>2]=g;c[e+4>>2]=C;id(b,l);e=l;g=o;h=e+128|0;do{a[e>>0]=a[g>>0]|0;e=e+1|0;g=g+1|0}while((e|0)<(h|0));g=(c[k>>2]|0)+-128|0;c[k>>2]=g;e=kh(j|0,f|0,i|0,0)|0;if((j|0)==(i|0)&(f|0)==0){p=6;break}else{d=d+i|0;f=C;j=e}}if((p|0)==6)return 0;qh(e|0,d|0,j|0)|0;q=lh(c[k>>2]|0,0,j|0,f|0)|0;c[k>>2]=q;return 0}function _c(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0<256){jd(a,b,c&255);return 0}else za(32557,32577,106,32795);return 0}function $c(){return 16}function ad(){return 64}function bd(){return 32}function cd(){return 16}function dd(){return 64}function ed(){return 32}function fd(){return 16}function gd(){return 16}function hd(){return 384}
function Ed(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;h=i;g=i=i+63&-64;i=i+640|0;e=0;do{k=b+(e<<3)|0;p=d[k+7>>0]|0;q=ph(d[k+6>>0]|0|0,0,8)|0;j=C;o=ph(d[k+5>>0]|0|0,0,16)|0;j=j|C;n=ph(d[k+4>>0]|0|0,0,24)|0;j=j|C|(d[k+3>>0]|0);m=ph(d[k+2>>0]|0|0,0,40)|0;j=j|C;l=ph(d[k+1>>0]|0|0,0,48)|0;j=j|C;k=ph(d[k>>0]|0|0,0,56)|0;f=g+(e<<3)|0;c[f>>2]=q|p|o|n|m|l|k;c[f+4>>2]=j|C;e=e+1|0}while((e|0)!=16);e=g;b=c[e>>2]|0;e=c[e+4>>2]|0;f=16;do{s=g+(f+-2<<3)|0;w=c[s>>2]|0;s=c[s+4>>2]|0;r=oh(w|0,s|0,19)|0;k=C;j=ph(w|0,s|0,45)|0;k=k|C;u=oh(w|0,s|0,61)|0;v=C;t=ph(w|0,s|0,3)|0;v=v|C;s=oh(w|0,s|0,6)|0;k=v^C^k;v=g+(f+-7<<3)|0;w=c[v>>2]|0;v=c[v+4>>2]|0;o=g+(f+-15<<3)|0;y=b;b=c[o>>2]|0;x=e;e=c[o+4>>2]|0;o=oh(b|0,e|0,1)|0;p=C;q=ph(b|0,e|0,63)|0;p=p|C;l=oh(b|0,e|0,8)|0;z=C;m=ph(b|0,e|0,56)|0;z=z|C;n=oh(b|0,e|0,7)|0;p=z^C^p;v=lh(y|0,x|0,w|0,v|0)|0;k=lh(v|0,C|0,(u|t)^s^(r|j)|0,k|0)|0;p=lh(k|0,C|0,(l|m)^n^(o|q)|0,p|0)|0;q=g+(f<<3)|0;c[q>>2]=p;c[q+4>>2]=C;f=f+1|0}while((f|0)!=80);o=a;p=c[o>>2]|0;o=c[o+4>>2]|0;e=a+8|0;r=e;s=c[r>>2]|0;r=c[r+4>>2]|0;k=a+16|0;u=k;v=c[u>>2]|0;u=c[u+4>>2]|0;n=a+24|0;x=n;y=c[x>>2]|0;x=c[x+4>>2]|0;q=a+32|0;F=q;L=c[F>>2]|0;F=c[F+4>>2]|0;t=a+40|0;H=t;M=c[H>>2]|0;H=c[H+4>>2]|0;w=a+48|0;B=w;A=c[B>>2]|0;B=c[B+4>>2]|0;z=a+56|0;b=z;f=c[b>>2]|0;b=c[b+4>>2]|0;G=oh(L|0,F|0,14)|0;J=C;I=ph(L|0,F|0,50)|0;J=J|C;E=oh(L|0,F|0,18)|0;j=C;K=ph(L|0,F|0,46)|0;j=J^(j|C);J=oh(L|0,F|0,41)|0;m=C;l=ph(L|0,F|0,23)|0;m=j^(m|C);j=g;D=c[j>>2]|0;j=c[j+4>>2]|0;b=lh(f|0,b|0,-685199838,1116352408)|0;j=lh(b|0,C|0,D|0,j|0)|0;m=lh(j|0,C|0,(G|I)^(E|K)^(J|l)|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;J=oh(p|0,o|0,28)|0;K=C;E=ph(p|0,o|0,36)|0;K=K|C;I=oh(p|0,o|0,34)|0;G=C;j=ph(p|0,o|0,30)|0;G=K^(G|C);K=oh(p|0,o|0,39)|0;D=C;b=ph(p|0,o|0,25)|0;D=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(J|E)^(I|j)^(K|b)|0,G^(D|C)|0)|0;G=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(D|0,G|0,m|0,l|0)|0;m=C;G=oh(x|0,y|0,14)|0;D=C;b=ph(x|0,y|0,50)|0;D=D|C;K=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=D^(j|C);D=oh(x|0,y|0,41)|0;E=C;J=ph(x|0,y|0,23)|0;E=j^(E|C);j=g+8|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,602891725,1899447441)|0;E=lh(B|0,C|0,(G|b)^(K|I)^(D|J)|0,E|0)|0;j=lh(E|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;E=oh(l|0,m|0,28)|0;J=C;D=ph(l|0,m|0,36)|0;J=J|C;I=oh(l|0,m|0,34)|0;K=C;b=ph(l|0,m|0,30)|0;K=J^(K|C);J=oh(l|0,m|0,39)|0;G=C;B=ph(l|0,m|0,25)|0;G=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(E|D)^(I|b)^(J|B)|0,K^(G|C)|0)|0;K=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(G|0,K|0,j|0,f|0)|0;j=C;K=oh(u|0,v|0,14)|0;G=C;B=ph(u|0,v|0,50)|0;G=G|C;J=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=G^(b|C);G=oh(u|0,v|0,41)|0;D=C;E=ph(u|0,v|0,23)|0;D=b^(D|C);b=g+16|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,-330482897,-1245643825)|0;D=lh(H|0,C|0,(K|B)^(J|I)^(G|E)|0,D|0)|0;b=lh(D|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;D=oh(f|0,j|0,28)|0;E=C;G=ph(f|0,j|0,36)|0;E=E|C;I=oh(f|0,j|0,34)|0;J=C;B=ph(f|0,j|0,30)|0;J=E^(J|C);E=oh(f|0,j|0,39)|0;K=C;H=ph(f|0,j|0,25)|0;K=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(D|G)^(I|B)^(E|H)|0,J^(K|C)|0)|0;J=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(K|0,J|0,b|0,A|0)|0;b=C;J=oh(r|0,s|0,14)|0;K=C;H=ph(r|0,s|0,50)|0;K=K|C;E=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=K^(B|C);K=oh(r|0,s|0,41)|0;G=C;D=ph(r|0,s|0,23)|0;G=B^(G|C);B=g+24|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,-2121671748,-373957723)|0;G=lh(F|0,C|0,(J|H)^(E|I)^(K|D)|0,G|0)|0;B=lh(G|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;G=oh(A|0,b|0,28)|0;D=C;K=ph(A|0,b|0,36)|0;D=D|C;I=oh(A|0,b|0,34)|0;E=C;H=ph(A|0,b|0,30)|0;E=D^(E|C);D=oh(A|0,b|0,39)|0;J=C;F=ph(A|0,b|0,25)|0;J=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(G|K)^(I|H)^(D|F)|0,E^(J|C)|0)|0;E=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(J|0,E|0,B|0,M|0)|0;B=C;E=oh(o|0,p|0,14)|0;J=C;F=ph(o|0,p|0,50)|0;J=J|C;D=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=J^(H|C);J=oh(o|0,p|0,41)|0;K=C;G=ph(o|0,p|0,23)|0;K=H^(K|C);H=g+32|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-213338824,961987163)|0;K=lh(y|0,C|0,(E|F)^(D|I)^(J|G)|0,K|0)|0;H=lh(K|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;K=oh(M|0,B|0,28)|0;G=C;J=ph(M|0,B|0,36)|0;G=G|C;I=oh(M|0,B|0,34)|0;D=C;F=ph(M|0,B|0,30)|0;D=G^(D|C);G=oh(M|0,B|0,39)|0;E=C;y=ph(M|0,B|0,25)|0;E=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(K|J)^(I|F)^(G|y)|0,D^(E|C)|0)|0;D=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(E|0,D|0,H|0,L|0)|0;H=C;D=oh(m|0,l|0,14)|0;E=C;y=ph(m|0,l|0,50)|0;E=E|C;G=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=E^(F|C);E=oh(m|0,l|0,41)|0;J=C;K=ph(m|0,l|0,23)|0;J=F^(J|C);F=g+40|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,-1241133031,1508970993)|0;J=lh(v|0,C|0,(D|y)^(G|I)^(E|K)|0,J|0)|0;F=lh(J|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;J=oh(L|0,H|0,28)|0;K=C;E=ph(L|0,H|0,36)|0;K=K|C;I=oh(L|0,H|0,34)|0;G=C;y=ph(L|0,H|0,30)|0;G=K^(G|C);K=oh(L|0,H|0,39)|0;D=C;v=ph(L|0,H|0,25)|0;D=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(J|E)^(I|y)^(K|v)|0,G^(D|C)|0)|0;G=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(D|0,G|0,F|0,x|0)|0;F=C;G=oh(j|0,f|0,14)|0;D=C;v=ph(j|0,f|0,50)|0;D=D|C;K=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=D^(y|C);D=oh(j|0,f|0,41)|0;E=C;J=ph(j|0,f|0,23)|0;E=y^(E|C);y=g+48|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,-1357295717,-1841331548)|0;E=lh(s|0,C|0,(G|v)^(K|I)^(D|J)|0,E|0)|0;y=lh(E|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;E=oh(x|0,F|0,28)|0;J=C;D=ph(x|0,F|0,36)|0;J=J|C;I=oh(x|0,F|0,34)|0;K=C;v=ph(x|0,F|0,30)|0;K=J^(K|C);J=oh(x|0,F|0,39)|0;G=C;s=ph(x|0,F|0,25)|0;G=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(E|D)^(I|v)^(J|s)|0,K^(G|C)|0)|0;K=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(G|0,K|0,y|0,u|0)|0;y=C;K=oh(b|0,A|0,14)|0;G=C;s=ph(b|0,A|0,50)|0;G=G|C;J=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=G^(v|C);G=oh(b|0,A|0,41)|0;D=C;E=ph(b|0,A|0,23)|0;D=v^(D|C);v=g+56|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,-630357736,-1424204075)|0;D=lh(p|0,C|0,(K|s)^(J|I)^(G|E)|0,D|0)|0;v=lh(D|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;D=oh(u|0,y|0,28)|0;E=C;G=ph(u|0,y|0,36)|0;E=E|C;I=oh(u|0,y|0,34)|0;J=C;s=ph(u|0,y|0,30)|0;J=E^(J|C);E=oh(u|0,y|0,39)|0;K=C;p=ph(u|0,y|0,25)|0;K=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(D|G)^(I|s)^(E|p)|0,J^(K|C)|0)|0;J=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(K|0,J|0,v|0,r|0)|0;v=C;J=oh(B|0,M|0,14)|0;K=C;p=ph(B|0,M|0,50)|0;K=K|C;E=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=K^(s|C);K=oh(B|0,M|0,41)|0;G=C;D=ph(B|0,M|0,23)|0;G=s^(G|C);s=g+64|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,-1560083902,-670586216)|0;G=lh(l|0,C|0,(J|p)^(E|I)^(K|D)|0,G|0)|0;s=lh(G|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;G=oh(r|0,v|0,28)|0;D=C;K=ph(r|0,v|0,36)|0;D=D|C;I=oh(r|0,v|0,34)|0;E=C;p=ph(r|0,v|0,30)|0;E=D^(E|C);D=oh(r|0,v|0,39)|0;J=C;l=ph(r|0,v|0,25)|0;J=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(G|K)^(I|p)^(D|l)|0,E^(J|C)|0)|0;E=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(J|0,E|0,s|0,o|0)|0;s=C;E=oh(H|0,L|0,14)|0;J=C;l=ph(H|0,L|0,50)|0;J=J|C;D=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=J^(p|C);J=oh(H|0,L|0,41)|0;K=C;G=ph(H|0,L|0,23)|0;K=p^(K|C);p=g+72|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,1164996542,310598401)|0;K=lh(f|0,C|0,(E|l)^(D|I)^(J|G)|0,K|0)|0;p=lh(K|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;K=oh(o|0,s|0,28)|0;G=C;J=ph(o|0,s|0,36)|0;G=G|C;I=oh(o|0,s|0,34)|0;D=C;l=ph(o|0,s|0,30)|0;D=G^(D|C);G=oh(o|0,s|0,39)|0;E=C;f=ph(o|0,s|0,25)|0;E=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(K|J)^(I|l)^(G|f)|0,D^(E|C)|0)|0;D=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(E|0,D|0,p|0,m|0)|0;p=C;D=oh(F|0,x|0,14)|0;E=C;f=ph(F|0,x|0,50)|0;E=E|C;G=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=E^(l|C);E=oh(F|0,x|0,41)|0;J=C;K=ph(F|0,x|0,23)|0;J=l^(J|C);l=g+80|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,1323610764,607225278)|0;J=lh(A|0,C|0,(D|f)^(G|I)^(E|K)|0,J|0)|0;l=lh(J|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;J=oh(m|0,p|0,28)|0;K=C;E=ph(m|0,p|0,36)|0;K=K|C;I=oh(m|0,p|0,34)|0;G=C;f=ph(m|0,p|0,30)|0;G=K^(G|C);K=oh(m|0,p|0,39)|0;D=C;A=ph(m|0,p|0,25)|0;D=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(J|E)^(I|f)^(K|A)|0,G^(D|C)|0)|0;G=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(D|0,G|0,l|0,j|0)|0;l=C;G=oh(y|0,u|0,14)|0;D=C;A=ph(y|0,u|0,50)|0;D=D|C;K=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=D^(f|C);D=oh(y|0,u|0,41)|0;E=C;J=ph(y|0,u|0,23)|0;E=f^(E|C);f=g+88|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,-704662302,1426881987)|0;E=lh(M|0,C|0,(G|A)^(K|I)^(D|J)|0,E|0)|0;f=lh(E|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;E=oh(j|0,l|0,28)|0;J=C;D=ph(j|0,l|0,36)|0;J=J|C;I=oh(j|0,l|0,34)|0;K=C;A=ph(j|0,l|0,30)|0;K=J^(K|C);J=oh(j|0,l|0,39)|0;G=C;M=ph(j|0,l|0,25)|0;G=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(E|D)^(I|A)^(J|M)|0,K^(G|C)|0)|0;K=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(G|0,K|0,f|0,b|0)|0;f=C;K=oh(v|0,r|0,14)|0;G=C;M=ph(v|0,r|0,50)|0;G=G|C;J=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=G^(A|C);G=oh(v|0,r|0,41)|0;D=C;E=ph(v|0,r|0,23)|0;D=A^(D|C);A=g+96|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,-226784913,1925078388)|0;D=lh(L|0,C|0,(K|M)^(J|I)^(G|E)|0,D|0)|0;A=lh(D|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;D=oh(b|0,f|0,28)|0;E=C;G=ph(b|0,f|0,36)|0;E=E|C;I=oh(b|0,f|0,34)|0;J=C;M=ph(b|0,f|0,30)|0;J=E^(J|C);E=oh(b|0,f|0,39)|0;K=C;L=ph(b|0,f|0,25)|0;K=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(D|G)^(I|M)^(E|L)|0,J^(K|C)|0)|0;J=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(K|0,J|0,A|0,B|0)|0;A=C;J=oh(s|0,o|0,14)|0;K=C;L=ph(s|0,o|0,50)|0;K=K|C;E=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=K^(M|C);K=oh(s|0,o|0,41)|0;G=C;D=ph(s|0,o|0,23)|0;G=M^(G|C);M=g+104|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,991336113,-2132889090)|0;G=lh(x|0,C|0,(J|L)^(E|I)^(K|D)|0,G|0)|0;M=lh(G|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;G=oh(B|0,A|0,28)|0;D=C;K=ph(B|0,A|0,36)|0;D=D|C;I=oh(B|0,A|0,34)|0;E=C;L=ph(B|0,A|0,30)|0;E=D^(E|C);D=oh(B|0,A|0,39)|0;J=C;x=ph(B|0,A|0,25)|0;J=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(G|K)^(I|L)^(D|x)|0,E^(J|C)|0)|0;E=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(J|0,E|0,M|0,H|0)|0;M=C;E=oh(p|0,m|0,14)|0;J=C;x=ph(p|0,m|0,50)|0;J=J|C;D=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=J^(L|C);J=oh(p|0,m|0,41)|0;K=C;G=ph(p|0,m|0,23)|0;K=L^(K|C);L=g+112|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,633803317,-1680079193)|0;K=lh(u|0,C|0,(E|x)^(D|I)^(J|G)|0,K|0)|0;L=lh(K|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;K=oh(H|0,M|0,28)|0;G=C;J=ph(H|0,M|0,36)|0;G=G|C;I=oh(H|0,M|0,34)|0;D=C;x=ph(H|0,M|0,30)|0;D=G^(D|C);G=oh(H|0,M|0,39)|0;E=C;u=ph(H|0,M|0,25)|0;E=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(K|J)^(I|x)^(G|u)|0,D^(E|C)|0)|0;D=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(E|0,D|0,L|0,F|0)|0;L=C;D=oh(l|0,j|0,14)|0;E=C;u=ph(l|0,j|0,50)|0;E=E|C;G=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=E^(x|C);E=oh(l|0,j|0,41)|0;J=C;K=ph(l|0,j|0,23)|0;J=x^(J|C);x=g+120|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,-815192428,-1046744716)|0;J=lh(r|0,C|0,(D|u)^(G|I)^(E|K)|0,J|0)|0;x=lh(J|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;J=oh(F|0,L|0,28)|0;K=C;E=ph(F|0,L|0,36)|0;K=K|C;I=oh(F|0,L|0,34)|0;G=C;u=ph(F|0,L|0,30)|0;G=K^(G|C);K=oh(F|0,L|0,39)|0;D=C;r=ph(F|0,L|0,25)|0;D=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(J|E)^(I|u)^(K|r)|0,G^(D|C)|0)|0;G=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(D|0,G|0,x|0,y|0)|0;x=C;G=oh(f|0,b|0,14)|0;D=C;r=ph(f|0,b|0,50)|0;D=D|C;K=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=D^(u|C);D=oh(f|0,b|0,41)|0;E=C;J=ph(f|0,b|0,23)|0;E=u^(E|C);u=g+128|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,-1628353838,-459576895)|0;E=lh(o|0,C|0,(G|r)^(K|I)^(D|J)|0,E|0)|0;u=lh(E|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;E=oh(y|0,x|0,28)|0;J=C;D=ph(y|0,x|0,36)|0;J=J|C;I=oh(y|0,x|0,34)|0;K=C;r=ph(y|0,x|0,30)|0;K=J^(K|C);J=oh(y|0,x|0,39)|0;G=C;o=ph(y|0,x|0,25)|0;G=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(E|D)^(I|r)^(J|o)|0,K^(G|C)|0)|0;K=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(G|0,K|0,u|0,v|0)|0;u=C;K=oh(A|0,B|0,14)|0;G=C;o=ph(A|0,B|0,50)|0;G=G|C;J=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=G^(r|C);G=oh(A|0,B|0,41)|0;D=C;E=ph(A|0,B|0,23)|0;D=r^(D|C);r=g+136|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,944711139,-272742522)|0;D=lh(m|0,C|0,(K|o)^(J|I)^(G|E)|0,D|0)|0;r=lh(D|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;D=oh(v|0,u|0,28)|0;E=C;G=ph(v|0,u|0,36)|0;E=E|C;I=oh(v|0,u|0,34)|0;J=C;o=ph(v|0,u|0,30)|0;J=E^(J|C);E=oh(v|0,u|0,39)|0;K=C;m=ph(v|0,u|0,25)|0;K=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(D|G)^(I|o)^(E|m)|0,J^(K|C)|0)|0;J=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(K|0,J|0,r|0,s|0)|0;r=C;J=oh(M|0,H|0,14)|0;K=C;m=ph(M|0,H|0,50)|0;K=K|C;E=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=K^(o|C);K=oh(M|0,H|0,41)|0;G=C;D=ph(M|0,H|0,23)|0;G=o^(G|C);o=g+144|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,-1953704523,264347078)|0;G=lh(j|0,C|0,(J|m)^(E|I)^(K|D)|0,G|0)|0;o=lh(G|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;G=oh(s|0,r|0,28)|0;D=C;K=ph(s|0,r|0,36)|0;D=D|C;I=oh(s|0,r|0,34)|0;E=C;m=ph(s|0,r|0,30)|0;E=D^(E|C);D=oh(s|0,r|0,39)|0;J=C;j=ph(s|0,r|0,25)|0;J=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(G|K)^(I|m)^(D|j)|0,E^(J|C)|0)|0;E=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(J|0,E|0,o|0,p|0)|0;o=C;E=oh(L|0,F|0,14)|0;J=C;j=ph(L|0,F|0,50)|0;J=J|C;D=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=J^(m|C);J=oh(L|0,F|0,41)|0;K=C;G=ph(L|0,F|0,23)|0;K=m^(K|C);m=g+152|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,2007800933,604807628)|0;K=lh(b|0,C|0,(E|j)^(D|I)^(J|G)|0,K|0)|0;m=lh(K|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;K=oh(p|0,o|0,28)|0;G=C;J=ph(p|0,o|0,36)|0;G=G|C;I=oh(p|0,o|0,34)|0;D=C;j=ph(p|0,o|0,30)|0;D=G^(D|C);G=oh(p|0,o|0,39)|0;E=C;b=ph(p|0,o|0,25)|0;E=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(K|J)^(I|j)^(G|b)|0,D^(E|C)|0)|0;D=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(E|0,D|0,m|0,l|0)|0;m=C;D=oh(x|0,y|0,14)|0;E=C;b=ph(x|0,y|0,50)|0;E=E|C;G=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=E^(j|C);E=oh(x|0,y|0,41)|0;J=C;K=ph(x|0,y|0,23)|0;J=j^(J|C);j=g+160|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,1495990901,770255983)|0;J=lh(B|0,C|0,(D|b)^(G|I)^(E|K)|0,J|0)|0;j=lh(J|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;J=oh(l|0,m|0,28)|0;K=C;E=ph(l|0,m|0,36)|0;K=K|C;I=oh(l|0,m|0,34)|0;G=C;b=ph(l|0,m|0,30)|0;G=K^(G|C);K=oh(l|0,m|0,39)|0;D=C;B=ph(l|0,m|0,25)|0;D=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(J|E)^(I|b)^(K|B)|0,G^(D|C)|0)|0;G=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(D|0,G|0,j|0,f|0)|0;j=C;G=oh(u|0,v|0,14)|0;D=C;B=ph(u|0,v|0,50)|0;D=D|C;K=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=D^(b|C);D=oh(u|0,v|0,41)|0;E=C;J=ph(u|0,v|0,23)|0;E=b^(E|C);b=g+168|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,1856431235,1249150122)|0;E=lh(H|0,C|0,(G|B)^(K|I)^(D|J)|0,E|0)|0;b=lh(E|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;E=oh(f|0,j|0,28)|0;J=C;D=ph(f|0,j|0,36)|0;J=J|C;I=oh(f|0,j|0,34)|0;K=C;B=ph(f|0,j|0,30)|0;K=J^(K|C);J=oh(f|0,j|0,39)|0;G=C;H=ph(f|0,j|0,25)|0;G=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(E|D)^(I|B)^(J|H)|0,K^(G|C)|0)|0;K=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(G|0,K|0,b|0,A|0)|0;b=C;K=oh(r|0,s|0,14)|0;G=C;H=ph(r|0,s|0,50)|0;G=G|C;J=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=G^(B|C);G=oh(r|0,s|0,41)|0;D=C;E=ph(r|0,s|0,23)|0;D=B^(D|C);B=g+176|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,-1119749164,1555081692)|0;D=lh(F|0,C|0,(K|H)^(J|I)^(G|E)|0,D|0)|0;B=lh(D|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;D=oh(A|0,b|0,28)|0;E=C;G=ph(A|0,b|0,36)|0;E=E|C;I=oh(A|0,b|0,34)|0;J=C;H=ph(A|0,b|0,30)|0;J=E^(J|C);E=oh(A|0,b|0,39)|0;K=C;F=ph(A|0,b|0,25)|0;K=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(D|G)^(I|H)^(E|F)|0,J^(K|C)|0)|0;J=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(K|0,J|0,B|0,M|0)|0;B=C;J=oh(o|0,p|0,14)|0;K=C;F=ph(o|0,p|0,50)|0;K=K|C;E=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=K^(H|C);K=oh(o|0,p|0,41)|0;G=C;D=ph(o|0,p|0,23)|0;G=H^(G|C);H=g+184|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-2096016459,1996064986)|0;G=lh(y|0,C|0,(J|F)^(E|I)^(K|D)|0,G|0)|0;H=lh(G|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;G=oh(M|0,B|0,28)|0;D=C;K=ph(M|0,B|0,36)|0;D=D|C;I=oh(M|0,B|0,34)|0;E=C;F=ph(M|0,B|0,30)|0;E=D^(E|C);D=oh(M|0,B|0,39)|0;J=C;y=ph(M|0,B|0,25)|0;J=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(G|K)^(I|F)^(D|y)|0,E^(J|C)|0)|0;E=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(J|0,E|0,H|0,L|0)|0;H=C;E=oh(m|0,l|0,14)|0;J=C;y=ph(m|0,l|0,50)|0;J=J|C;D=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=J^(F|C);J=oh(m|0,l|0,41)|0;K=C;G=ph(m|0,l|0,23)|0;K=F^(K|C);F=g+192|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,-295247957,-1740746414)|0;K=lh(v|0,C|0,(E|y)^(D|I)^(J|G)|0,K|0)|0;F=lh(K|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;K=oh(L|0,H|0,28)|0;G=C;J=ph(L|0,H|0,36)|0;G=G|C;I=oh(L|0,H|0,34)|0;D=C;y=ph(L|0,H|0,30)|0;D=G^(D|C);G=oh(L|0,H|0,39)|0;E=C;v=ph(L|0,H|0,25)|0;E=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(K|J)^(I|y)^(G|v)|0,D^(E|C)|0)|0;D=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(E|0,D|0,F|0,x|0)|0;F=C;D=oh(j|0,f|0,14)|0;E=C;v=ph(j|0,f|0,50)|0;E=E|C;G=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=E^(y|C);E=oh(j|0,f|0,41)|0;J=C;K=ph(j|0,f|0,23)|0;J=y^(J|C);y=g+200|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,766784016,-1473132947)|0;J=lh(s|0,C|0,(D|v)^(G|I)^(E|K)|0,J|0)|0;y=lh(J|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;J=oh(x|0,F|0,28)|0;K=C;E=ph(x|0,F|0,36)|0;K=K|C;I=oh(x|0,F|0,34)|0;G=C;v=ph(x|0,F|0,30)|0;G=K^(G|C);K=oh(x|0,F|0,39)|0;D=C;s=ph(x|0,F|0,25)|0;D=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(J|E)^(I|v)^(K|s)|0,G^(D|C)|0)|0;G=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(D|0,G|0,y|0,u|0)|0;y=C;G=oh(b|0,A|0,14)|0;D=C;s=ph(b|0,A|0,50)|0;D=D|C;K=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=D^(v|C);D=oh(b|0,A|0,41)|0;E=C;J=ph(b|0,A|0,23)|0;E=v^(E|C);v=g+208|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,-1728372417,-1341970488)|0;E=lh(p|0,C|0,(G|s)^(K|I)^(D|J)|0,E|0)|0;v=lh(E|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;E=oh(u|0,y|0,28)|0;J=C;D=ph(u|0,y|0,36)|0;J=J|C;I=oh(u|0,y|0,34)|0;K=C;s=ph(u|0,y|0,30)|0;K=J^(K|C);J=oh(u|0,y|0,39)|0;G=C;p=ph(u|0,y|0,25)|0;G=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(E|D)^(I|s)^(J|p)|0,K^(G|C)|0)|0;K=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(G|0,K|0,v|0,r|0)|0;v=C;K=oh(B|0,M|0,14)|0;G=C;p=ph(B|0,M|0,50)|0;G=G|C;J=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=G^(s|C);G=oh(B|0,M|0,41)|0;D=C;E=ph(B|0,M|0,23)|0;D=s^(D|C);s=g+216|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,-1091629340,-1084653625)|0;D=lh(l|0,C|0,(K|p)^(J|I)^(G|E)|0,D|0)|0;s=lh(D|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;D=oh(r|0,v|0,28)|0;E=C;G=ph(r|0,v|0,36)|0;E=E|C;I=oh(r|0,v|0,34)|0;J=C;p=ph(r|0,v|0,30)|0;J=E^(J|C);E=oh(r|0,v|0,39)|0;K=C;l=ph(r|0,v|0,25)|0;K=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(D|G)^(I|p)^(E|l)|0,J^(K|C)|0)|0;J=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(K|0,J|0,s|0,o|0)|0;s=C;J=oh(H|0,L|0,14)|0;K=C;l=ph(H|0,L|0,50)|0;K=K|C;E=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=K^(p|C);K=oh(H|0,L|0,41)|0;G=C;D=ph(H|0,L|0,23)|0;G=p^(G|C);p=g+224|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,1034457026,-958395405)|0;G=lh(f|0,C|0,(J|l)^(E|I)^(K|D)|0,G|0)|0;p=lh(G|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;G=oh(o|0,s|0,28)|0;D=C;K=ph(o|0,s|0,36)|0;D=D|C;I=oh(o|0,s|0,34)|0;E=C;l=ph(o|0,s|0,30)|0;E=D^(E|C);D=oh(o|0,s|0,39)|0;J=C;f=ph(o|0,s|0,25)|0;J=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(G|K)^(I|l)^(D|f)|0,E^(J|C)|0)|0;E=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(J|0,E|0,p|0,m|0)|0;p=C;E=oh(F|0,x|0,14)|0;J=C;f=ph(F|0,x|0,50)|0;J=J|C;D=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=J^(l|C);J=oh(F|0,x|0,41)|0;K=C;G=ph(F|0,x|0,23)|0;K=l^(K|C);l=g+232|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,-1828018395,-710438585)|0;K=lh(A|0,C|0,(E|f)^(D|I)^(J|G)|0,K|0)|0;l=lh(K|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;K=oh(m|0,p|0,28)|0;G=C;J=ph(m|0,p|0,36)|0;G=G|C;I=oh(m|0,p|0,34)|0;D=C;f=ph(m|0,p|0,30)|0;D=G^(D|C);G=oh(m|0,p|0,39)|0;E=C;A=ph(m|0,p|0,25)|0;E=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(K|J)^(I|f)^(G|A)|0,D^(E|C)|0)|0;D=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(E|0,D|0,l|0,j|0)|0;l=C;D=oh(y|0,u|0,14)|0;E=C;A=ph(y|0,u|0,50)|0;E=E|C;G=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=E^(f|C);E=oh(y|0,u|0,41)|0;J=C;K=ph(y|0,u|0,23)|0;J=f^(J|C);f=g+240|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,-536640913,113926993)|0;J=lh(M|0,C|0,(D|A)^(G|I)^(E|K)|0,J|0)|0;f=lh(J|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;J=oh(j|0,l|0,28)|0;K=C;E=ph(j|0,l|0,36)|0;K=K|C;I=oh(j|0,l|0,34)|0;G=C;A=ph(j|0,l|0,30)|0;G=K^(G|C);K=oh(j|0,l|0,39)|0;D=C;M=ph(j|0,l|0,25)|0;D=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(J|E)^(I|A)^(K|M)|0,G^(D|C)|0)|0;G=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(D|0,G|0,f|0,b|0)|0;f=C;G=oh(v|0,r|0,14)|0;D=C;M=ph(v|0,r|0,50)|0;D=D|C;K=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=D^(A|C);D=oh(v|0,r|0,41)|0;E=C;J=ph(v|0,r|0,23)|0;E=A^(E|C);A=g+248|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,168717936,338241895)|0;E=lh(L|0,C|0,(G|M)^(K|I)^(D|J)|0,E|0)|0;A=lh(E|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;E=oh(b|0,f|0,28)|0;J=C;D=ph(b|0,f|0,36)|0;J=J|C;I=oh(b|0,f|0,34)|0;K=C;M=ph(b|0,f|0,30)|0;K=J^(K|C);J=oh(b|0,f|0,39)|0;G=C;L=ph(b|0,f|0,25)|0;G=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(E|D)^(I|M)^(J|L)|0,K^(G|C)|0)|0;K=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(G|0,K|0,A|0,B|0)|0;A=C;K=oh(s|0,o|0,14)|0;G=C;L=ph(s|0,o|0,50)|0;G=G|C;J=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=G^(M|C);G=oh(s|0,o|0,41)|0;D=C;E=ph(s|0,o|0,23)|0;D=M^(D|C);M=g+256|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,1188179964,666307205)|0;D=lh(x|0,C|0,(K|L)^(J|I)^(G|E)|0,D|0)|0;M=lh(D|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;D=oh(B|0,A|0,28)|0;E=C;G=ph(B|0,A|0,36)|0;E=E|C;I=oh(B|0,A|0,34)|0;J=C;L=ph(B|0,A|0,30)|0;J=E^(J|C);E=oh(B|0,A|0,39)|0;K=C;x=ph(B|0,A|0,25)|0;K=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(D|G)^(I|L)^(E|x)|0,J^(K|C)|0)|0;J=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(K|0,J|0,M|0,H|0)|0;M=C;J=oh(p|0,m|0,14)|0;K=C;x=ph(p|0,m|0,50)|0;K=K|C;E=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=K^(L|C);K=oh(p|0,m|0,41)|0;G=C;D=ph(p|0,m|0,23)|0;G=L^(G|C);L=g+264|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,1546045734,773529912)|0;G=lh(u|0,C|0,(J|x)^(E|I)^(K|D)|0,G|0)|0;L=lh(G|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;G=oh(H|0,M|0,28)|0;D=C;K=ph(H|0,M|0,36)|0;D=D|C;I=oh(H|0,M|0,34)|0;E=C;x=ph(H|0,M|0,30)|0;E=D^(E|C);D=oh(H|0,M|0,39)|0;J=C;u=ph(H|0,M|0,25)|0;J=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(G|K)^(I|x)^(D|u)|0,E^(J|C)|0)|0;E=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(J|0,E|0,L|0,F|0)|0;L=C;E=oh(l|0,j|0,14)|0;J=C;u=ph(l|0,j|0,50)|0;J=J|C;D=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=J^(x|C);J=oh(l|0,j|0,41)|0;K=C;G=ph(l|0,j|0,23)|0;K=x^(K|C);x=g+272|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,1522805485,1294757372)|0;K=lh(r|0,C|0,(E|u)^(D|I)^(J|G)|0,K|0)|0;x=lh(K|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;K=oh(F|0,L|0,28)|0;G=C;J=ph(F|0,L|0,36)|0;G=G|C;I=oh(F|0,L|0,34)|0;D=C;u=ph(F|0,L|0,30)|0;D=G^(D|C);G=oh(F|0,L|0,39)|0;E=C;r=ph(F|0,L|0,25)|0;E=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(K|J)^(I|u)^(G|r)|0,D^(E|C)|0)|0;D=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(E|0,D|0,x|0,y|0)|0;x=C;D=oh(f|0,b|0,14)|0;E=C;r=ph(f|0,b|0,50)|0;E=E|C;G=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=E^(u|C);E=oh(f|0,b|0,41)|0;J=C;K=ph(f|0,b|0,23)|0;J=u^(J|C);u=g+280|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,-1651133473,1396182291)|0;J=lh(o|0,C|0,(D|r)^(G|I)^(E|K)|0,J|0)|0;u=lh(J|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;J=oh(y|0,x|0,28)|0;K=C;E=ph(y|0,x|0,36)|0;K=K|C;I=oh(y|0,x|0,34)|0;G=C;r=ph(y|0,x|0,30)|0;G=K^(G|C);K=oh(y|0,x|0,39)|0;D=C;o=ph(y|0,x|0,25)|0;D=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(J|E)^(I|r)^(K|o)|0,G^(D|C)|0)|0;G=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(D|0,G|0,u|0,v|0)|0;u=C;G=oh(A|0,B|0,14)|0;D=C;o=ph(A|0,B|0,50)|0;D=D|C;K=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=D^(r|C);D=oh(A|0,B|0,41)|0;E=C;J=ph(A|0,B|0,23)|0;E=r^(E|C);r=g+288|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,-1951439906,1695183700)|0;E=lh(m|0,C|0,(G|o)^(K|I)^(D|J)|0,E|0)|0;r=lh(E|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;E=oh(v|0,u|0,28)|0;J=C;D=ph(v|0,u|0,36)|0;J=J|C;I=oh(v|0,u|0,34)|0;K=C;o=ph(v|0,u|0,30)|0;K=J^(K|C);J=oh(v|0,u|0,39)|0;G=C;m=ph(v|0,u|0,25)|0;G=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(E|D)^(I|o)^(J|m)|0,K^(G|C)|0)|0;K=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(G|0,K|0,r|0,s|0)|0;r=C;K=oh(M|0,H|0,14)|0;G=C;m=ph(M|0,H|0,50)|0;G=G|C;J=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=G^(o|C);G=oh(M|0,H|0,41)|0;D=C;E=ph(M|0,H|0,23)|0;D=o^(D|C);o=g+296|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,1014477480,1986661051)|0;D=lh(j|0,C|0,(K|m)^(J|I)^(G|E)|0,D|0)|0;o=lh(D|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;D=oh(s|0,r|0,28)|0;E=C;G=ph(s|0,r|0,36)|0;E=E|C;I=oh(s|0,r|0,34)|0;J=C;m=ph(s|0,r|0,30)|0;J=E^(J|C);E=oh(s|0,r|0,39)|0;K=C;j=ph(s|0,r|0,25)|0;K=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(D|G)^(I|m)^(E|j)|0,J^(K|C)|0)|0;J=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(K|0,J|0,o|0,p|0)|0;o=C;J=oh(L|0,F|0,14)|0;K=C;j=ph(L|0,F|0,50)|0;K=K|C;E=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=K^(m|C);K=oh(L|0,F|0,41)|0;G=C;D=ph(L|0,F|0,23)|0;G=m^(G|C);m=g+304|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,1206759142,-2117940946)|0;G=lh(b|0,C|0,(J|j)^(E|I)^(K|D)|0,G|0)|0;m=lh(G|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;G=oh(p|0,o|0,28)|0;D=C;K=ph(p|0,o|0,36)|0;D=D|C;I=oh(p|0,o|0,34)|0;E=C;j=ph(p|0,o|0,30)|0;E=D^(E|C);D=oh(p|0,o|0,39)|0;J=C;b=ph(p|0,o|0,25)|0;J=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(G|K)^(I|j)^(D|b)|0,E^(J|C)|0)|0;E=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(J|0,E|0,m|0,l|0)|0;m=C;E=oh(x|0,y|0,14)|0;J=C;b=ph(x|0,y|0,50)|0;J=J|C;D=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=J^(j|C);J=oh(x|0,y|0,41)|0;K=C;G=ph(x|0,y|0,23)|0;K=j^(K|C);j=g+312|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,344077627,-1838011259)|0;K=lh(B|0,C|0,(E|b)^(D|I)^(J|G)|0,K|0)|0;j=lh(K|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;K=oh(l|0,m|0,28)|0;G=C;J=ph(l|0,m|0,36)|0;G=G|C;I=oh(l|0,m|0,34)|0;D=C;b=ph(l|0,m|0,30)|0;D=G^(D|C);G=oh(l|0,m|0,39)|0;E=C;B=ph(l|0,m|0,25)|0;E=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(K|J)^(I|b)^(G|B)|0,D^(E|C)|0)|0;D=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(E|0,D|0,j|0,f|0)|0;j=C;D=oh(u|0,v|0,14)|0;E=C;B=ph(u|0,v|0,50)|0;E=E|C;G=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=E^(b|C);E=oh(u|0,v|0,41)|0;J=C;K=ph(u|0,v|0,23)|0;J=b^(J|C);b=g+320|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,1290863460,-1564481375)|0;J=lh(H|0,C|0,(D|B)^(G|I)^(E|K)|0,J|0)|0;b=lh(J|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;J=oh(f|0,j|0,28)|0;K=C;E=ph(f|0,j|0,36)|0;K=K|C;I=oh(f|0,j|0,34)|0;G=C;B=ph(f|0,j|0,30)|0;G=K^(G|C);K=oh(f|0,j|0,39)|0;D=C;H=ph(f|0,j|0,25)|0;D=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(J|E)^(I|B)^(K|H)|0,G^(D|C)|0)|0;G=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(D|0,G|0,b|0,A|0)|0;b=C;G=oh(r|0,s|0,14)|0;D=C;H=ph(r|0,s|0,50)|0;D=D|C;K=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=D^(B|C);D=oh(r|0,s|0,41)|0;E=C;J=ph(r|0,s|0,23)|0;E=B^(E|C);B=g+328|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,-1136513023,-1474664885)|0;E=lh(F|0,C|0,(G|H)^(K|I)^(D|J)|0,E|0)|0;B=lh(E|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;E=oh(A|0,b|0,28)|0;J=C;D=ph(A|0,b|0,36)|0;J=J|C;I=oh(A|0,b|0,34)|0;K=C;H=ph(A|0,b|0,30)|0;K=J^(K|C);J=oh(A|0,b|0,39)|0;G=C;F=ph(A|0,b|0,25)|0;G=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(E|D)^(I|H)^(J|F)|0,K^(G|C)|0)|0;K=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(G|0,K|0,B|0,M|0)|0;B=C;K=oh(o|0,p|0,14)|0;G=C;F=ph(o|0,p|0,50)|0;G=G|C;J=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=G^(H|C);G=oh(o|0,p|0,41)|0;D=C;E=ph(o|0,p|0,23)|0;D=H^(D|C);H=g+336|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-789014639,-1035236496)|0;D=lh(y|0,C|0,(K|F)^(J|I)^(G|E)|0,D|0)|0;H=lh(D|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;D=oh(M|0,B|0,28)|0;E=C;G=ph(M|0,B|0,36)|0;E=E|C;I=oh(M|0,B|0,34)|0;J=C;F=ph(M|0,B|0,30)|0;J=E^(J|C);E=oh(M|0,B|0,39)|0;K=C;y=ph(M|0,B|0,25)|0;K=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(D|G)^(I|F)^(E|y)|0,J^(K|C)|0)|0;J=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(K|0,J|0,H|0,L|0)|0;H=C;J=oh(m|0,l|0,14)|0;K=C;y=ph(m|0,l|0,50)|0;K=K|C;E=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=K^(F|C);K=oh(m|0,l|0,41)|0;G=C;D=ph(m|0,l|0,23)|0;G=F^(G|C);F=g+344|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,106217008,-949202525)|0;G=lh(v|0,C|0,(J|y)^(E|I)^(K|D)|0,G|0)|0;F=lh(G|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;G=oh(L|0,H|0,28)|0;D=C;K=ph(L|0,H|0,36)|0;D=D|C;I=oh(L|0,H|0,34)|0;E=C;y=ph(L|0,H|0,30)|0;E=D^(E|C);D=oh(L|0,H|0,39)|0;J=C;v=ph(L|0,H|0,25)|0;J=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(G|K)^(I|y)^(D|v)|0,E^(J|C)|0)|0;E=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(J|0,E|0,F|0,x|0)|0;F=C;E=oh(j|0,f|0,14)|0;J=C;v=ph(j|0,f|0,50)|0;J=J|C;D=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=J^(y|C);J=oh(j|0,f|0,41)|0;K=C;G=ph(j|0,f|0,23)|0;K=y^(K|C);y=g+352|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,-688958952,-778901479)|0;K=lh(s|0,C|0,(E|v)^(D|I)^(J|G)|0,K|0)|0;y=lh(K|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;K=oh(x|0,F|0,28)|0;G=C;J=ph(x|0,F|0,36)|0;G=G|C;I=oh(x|0,F|0,34)|0;D=C;v=ph(x|0,F|0,30)|0;D=G^(D|C);G=oh(x|0,F|0,39)|0;E=C;s=ph(x|0,F|0,25)|0;E=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(K|J)^(I|v)^(G|s)|0,D^(E|C)|0)|0;D=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(E|0,D|0,y|0,u|0)|0;y=C;D=oh(b|0,A|0,14)|0;E=C;s=ph(b|0,A|0,50)|0;E=E|C;G=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=E^(v|C);E=oh(b|0,A|0,41)|0;J=C;K=ph(b|0,A|0,23)|0;J=v^(J|C);v=g+360|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,1432725776,-694614492)|0;J=lh(p|0,C|0,(D|s)^(G|I)^(E|K)|0,J|0)|0;v=lh(J|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;J=oh(u|0,y|0,28)|0;K=C;E=ph(u|0,y|0,36)|0;K=K|C;I=oh(u|0,y|0,34)|0;G=C;s=ph(u|0,y|0,30)|0;G=K^(G|C);K=oh(u|0,y|0,39)|0;D=C;p=ph(u|0,y|0,25)|0;D=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(J|E)^(I|s)^(K|p)|0,G^(D|C)|0)|0;G=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(D|0,G|0,v|0,r|0)|0;v=C;G=oh(B|0,M|0,14)|0;D=C;p=ph(B|0,M|0,50)|0;D=D|C;K=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=D^(s|C);D=oh(B|0,M|0,41)|0;E=C;J=ph(B|0,M|0,23)|0;E=s^(E|C);s=g+368|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,1467031594,-200395387)|0;E=lh(l|0,C|0,(G|p)^(K|I)^(D|J)|0,E|0)|0;s=lh(E|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;E=oh(r|0,v|0,28)|0;J=C;D=ph(r|0,v|0,36)|0;J=J|C;I=oh(r|0,v|0,34)|0;K=C;p=ph(r|0,v|0,30)|0;K=J^(K|C);J=oh(r|0,v|0,39)|0;G=C;l=ph(r|0,v|0,25)|0;G=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(E|D)^(I|p)^(J|l)|0,K^(G|C)|0)|0;K=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(G|0,K|0,s|0,o|0)|0;s=C;K=oh(H|0,L|0,14)|0;G=C;l=ph(H|0,L|0,50)|0;G=G|C;J=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=G^(p|C);G=oh(H|0,L|0,41)|0;D=C;E=ph(H|0,L|0,23)|0;D=p^(D|C);p=g+376|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,851169720,275423344)|0;D=lh(f|0,C|0,(K|l)^(J|I)^(G|E)|0,D|0)|0;p=lh(D|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;D=oh(o|0,s|0,28)|0;E=C;G=ph(o|0,s|0,36)|0;E=E|C;I=oh(o|0,s|0,34)|0;J=C;l=ph(o|0,s|0,30)|0;J=E^(J|C);E=oh(o|0,s|0,39)|0;K=C;f=ph(o|0,s|0,25)|0;K=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(D|G)^(I|l)^(E|f)|0,J^(K|C)|0)|0;J=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(K|0,J|0,p|0,m|0)|0;p=C;J=oh(F|0,x|0,14)|0;K=C;f=ph(F|0,x|0,50)|0;K=K|C;E=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=K^(l|C);K=oh(F|0,x|0,41)|0;G=C;D=ph(F|0,x|0,23)|0;G=l^(G|C);l=g+384|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,-1194143544,430227734)|0;G=lh(A|0,C|0,(J|f)^(E|I)^(K|D)|0,G|0)|0;l=lh(G|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;G=oh(m|0,p|0,28)|0;D=C;K=ph(m|0,p|0,36)|0;D=D|C;I=oh(m|0,p|0,34)|0;E=C;f=ph(m|0,p|0,30)|0;E=D^(E|C);D=oh(m|0,p|0,39)|0;J=C;A=ph(m|0,p|0,25)|0;J=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(G|K)^(I|f)^(D|A)|0,E^(J|C)|0)|0;E=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(J|0,E|0,l|0,j|0)|0;l=C;E=oh(y|0,u|0,14)|0;J=C;A=ph(y|0,u|0,50)|0;J=J|C;D=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=J^(f|C);J=oh(y|0,u|0,41)|0;K=C;G=ph(y|0,u|0,23)|0;K=f^(K|C);f=g+392|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,1363258195,506948616)|0;K=lh(M|0,C|0,(E|A)^(D|I)^(J|G)|0,K|0)|0;f=lh(K|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;K=oh(j|0,l|0,28)|0;G=C;J=ph(j|0,l|0,36)|0;G=G|C;I=oh(j|0,l|0,34)|0;D=C;A=ph(j|0,l|0,30)|0;D=G^(D|C);G=oh(j|0,l|0,39)|0;E=C;M=ph(j|0,l|0,25)|0;E=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(K|J)^(I|A)^(G|M)|0,D^(E|C)|0)|0;D=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(E|0,D|0,f|0,b|0)|0;f=C;D=oh(v|0,r|0,14)|0;E=C;M=ph(v|0,r|0,50)|0;E=E|C;G=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=E^(A|C);E=oh(v|0,r|0,41)|0;J=C;K=ph(v|0,r|0,23)|0;J=A^(J|C);A=g+400|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,-544281703,659060556)|0;J=lh(L|0,C|0,(D|M)^(G|I)^(E|K)|0,J|0)|0;A=lh(J|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;J=oh(b|0,f|0,28)|0;K=C;E=ph(b|0,f|0,36)|0;K=K|C;I=oh(b|0,f|0,34)|0;G=C;M=ph(b|0,f|0,30)|0;G=K^(G|C);K=oh(b|0,f|0,39)|0;D=C;L=ph(b|0,f|0,25)|0;D=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(J|E)^(I|M)^(K|L)|0,G^(D|C)|0)|0;G=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(D|0,G|0,A|0,B|0)|0;A=C;G=oh(s|0,o|0,14)|0;D=C;L=ph(s|0,o|0,50)|0;D=D|C;K=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=D^(M|C);D=oh(s|0,o|0,41)|0;E=C;J=ph(s|0,o|0,23)|0;E=M^(E|C);M=g+408|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,-509917016,883997877)|0;E=lh(x|0,C|0,(G|L)^(K|I)^(D|J)|0,E|0)|0;M=lh(E|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;E=oh(B|0,A|0,28)|0;J=C;D=ph(B|0,A|0,36)|0;J=J|C;I=oh(B|0,A|0,34)|0;K=C;L=ph(B|0,A|0,30)|0;K=J^(K|C);J=oh(B|0,A|0,39)|0;G=C;x=ph(B|0,A|0,25)|0;G=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(E|D)^(I|L)^(J|x)|0,K^(G|C)|0)|0;K=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(G|0,K|0,M|0,H|0)|0;M=C;K=oh(p|0,m|0,14)|0;G=C;x=ph(p|0,m|0,50)|0;G=G|C;J=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=G^(L|C);G=oh(p|0,m|0,41)|0;D=C;E=ph(p|0,m|0,23)|0;D=L^(D|C);L=g+416|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,-976659869,958139571)|0;D=lh(u|0,C|0,(K|x)^(J|I)^(G|E)|0,D|0)|0;L=lh(D|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;D=oh(H|0,M|0,28)|0;E=C;G=ph(H|0,M|0,36)|0;E=E|C;I=oh(H|0,M|0,34)|0;J=C;x=ph(H|0,M|0,30)|0;J=E^(J|C);E=oh(H|0,M|0,39)|0;K=C;u=ph(H|0,M|0,25)|0;K=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(D|G)^(I|x)^(E|u)|0,J^(K|C)|0)|0;J=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(K|0,J|0,L|0,F|0)|0;L=C;J=oh(l|0,j|0,14)|0;K=C;u=ph(l|0,j|0,50)|0;K=K|C;E=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=K^(x|C);K=oh(l|0,j|0,41)|0;G=C;D=ph(l|0,j|0,23)|0;G=x^(G|C);x=g+424|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,-482243893,1322822218)|0;G=lh(r|0,C|0,(J|u)^(E|I)^(K|D)|0,G|0)|0;x=lh(G|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;G=oh(F|0,L|0,28)|0;D=C;K=ph(F|0,L|0,36)|0;D=D|C;I=oh(F|0,L|0,34)|0;E=C;u=ph(F|0,L|0,30)|0;E=D^(E|C);D=oh(F|0,L|0,39)|0;J=C;r=ph(F|0,L|0,25)|0;J=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(G|K)^(I|u)^(D|r)|0,E^(J|C)|0)|0;E=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(J|0,E|0,x|0,y|0)|0;x=C;E=oh(f|0,b|0,14)|0;J=C;r=ph(f|0,b|0,50)|0;J=J|C;D=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=J^(u|C);J=oh(f|0,b|0,41)|0;K=C;G=ph(f|0,b|0,23)|0;K=u^(K|C);u=g+432|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,2003034995,1537002063)|0;K=lh(o|0,C|0,(E|r)^(D|I)^(J|G)|0,K|0)|0;u=lh(K|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;K=oh(y|0,x|0,28)|0;G=C;J=ph(y|0,x|0,36)|0;G=G|C;I=oh(y|0,x|0,34)|0;D=C;r=ph(y|0,x|0,30)|0;D=G^(D|C);G=oh(y|0,x|0,39)|0;E=C;o=ph(y|0,x|0,25)|0;E=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(K|J)^(I|r)^(G|o)|0,D^(E|C)|0)|0;D=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(E|0,D|0,u|0,v|0)|0;u=C;D=oh(A|0,B|0,14)|0;E=C;o=ph(A|0,B|0,50)|0;E=E|C;G=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=E^(r|C);E=oh(A|0,B|0,41)|0;J=C;K=ph(A|0,B|0,23)|0;J=r^(J|C);r=g+440|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,-692930397,1747873779)|0;J=lh(m|0,C|0,(D|o)^(G|I)^(E|K)|0,J|0)|0;r=lh(J|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;J=oh(v|0,u|0,28)|0;K=C;E=ph(v|0,u|0,36)|0;K=K|C;I=oh(v|0,u|0,34)|0;G=C;o=ph(v|0,u|0,30)|0;G=K^(G|C);K=oh(v|0,u|0,39)|0;D=C;m=ph(v|0,u|0,25)|0;D=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(J|E)^(I|o)^(K|m)|0,G^(D|C)|0)|0;G=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(D|0,G|0,r|0,s|0)|0;r=C;G=oh(M|0,H|0,14)|0;D=C;m=ph(M|0,H|0,50)|0;D=D|C;K=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=D^(o|C);D=oh(M|0,H|0,41)|0;E=C;J=ph(M|0,H|0,23)|0;E=o^(E|C);o=g+448|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,1575990012,1955562222)|0;E=lh(j|0,C|0,(G|m)^(K|I)^(D|J)|0,E|0)|0;o=lh(E|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;E=oh(s|0,r|0,28)|0;J=C;D=ph(s|0,r|0,36)|0;J=J|C;I=oh(s|0,r|0,34)|0;K=C;m=ph(s|0,r|0,30)|0;K=J^(K|C);J=oh(s|0,r|0,39)|0;G=C;j=ph(s|0,r|0,25)|0;G=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(E|D)^(I|m)^(J|j)|0,K^(G|C)|0)|0;K=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(G|0,K|0,o|0,p|0)|0;o=C;K=oh(L|0,F|0,14)|0;G=C;j=ph(L|0,F|0,50)|0;G=G|C;J=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=G^(m|C);G=oh(L|0,F|0,41)|0;D=C;E=ph(L|0,F|0,23)|0;D=m^(D|C);m=g+456|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,1125592928,2024104815)|0;D=lh(b|0,C|0,(K|j)^(J|I)^(G|E)|0,D|0)|0;m=lh(D|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;D=oh(p|0,o|0,28)|0;E=C;G=ph(p|0,o|0,36)|0;E=E|C;I=oh(p|0,o|0,34)|0;J=C;j=ph(p|0,o|0,30)|0;J=E^(J|C);E=oh(p|0,o|0,39)|0;K=C;b=ph(p|0,o|0,25)|0;K=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(D|G)^(I|j)^(E|b)|0,J^(K|C)|0)|0;J=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(K|0,J|0,m|0,l|0)|0;m=C;J=oh(x|0,y|0,14)|0;K=C;b=ph(x|0,y|0,50)|0;K=K|C;E=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=K^(j|C);K=oh(x|0,y|0,41)|0;G=C;D=ph(x|0,y|0,23)|0;G=j^(G|C);j=g+464|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,-1578062990,-2067236844)|0;G=lh(B|0,C|0,(J|b)^(E|I)^(K|D)|0,G|0)|0;j=lh(G|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;G=oh(l|0,m|0,28)|0;D=C;K=ph(l|0,m|0,36)|0;D=D|C;I=oh(l|0,m|0,34)|0;E=C;b=ph(l|0,m|0,30)|0;E=D^(E|C);D=oh(l|0,m|0,39)|0;J=C;B=ph(l|0,m|0,25)|0;J=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(G|K)^(I|b)^(D|B)|0,E^(J|C)|0)|0;E=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(J|0,E|0,j|0,f|0)|0;j=C;E=oh(u|0,v|0,14)|0;J=C;B=ph(u|0,v|0,50)|0;J=J|C;D=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=J^(b|C);J=oh(u|0,v|0,41)|0;K=C;G=ph(u|0,v|0,23)|0;K=b^(K|C);b=g+472|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,442776044,-1933114872)|0;K=lh(H|0,C|0,(E|B)^(D|I)^(J|G)|0,K|0)|0;b=lh(K|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;K=oh(f|0,j|0,28)|0;G=C;J=ph(f|0,j|0,36)|0;G=G|C;I=oh(f|0,j|0,34)|0;D=C;B=ph(f|0,j|0,30)|0;D=G^(D|C);G=oh(f|0,j|0,39)|0;E=C;H=ph(f|0,j|0,25)|0;E=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(K|J)^(I|B)^(G|H)|0,D^(E|C)|0)|0;D=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(E|0,D|0,b|0,A|0)|0;b=C;D=oh(r|0,s|0,14)|0;E=C;H=ph(r|0,s|0,50)|0;E=E|C;G=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=E^(B|C);E=oh(r|0,s|0,41)|0;J=C;K=ph(r|0,s|0,23)|0;J=B^(J|C);B=g+480|0;M=c[B>>2]|0;B=c[B+4>>2]|0;F=lh(L|0,F|0,593698344,-1866530822)|0;J=lh(F|0,C|0,(D|H)^(G|I)^(E|K)|0,J|0)|0;B=lh(J|0,C|0,M|0,B|0)|0;B=lh(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;M=C;J=oh(A|0,b|0,28)|0;K=C;E=ph(A|0,b|0,36)|0;K=K|C;I=oh(A|0,b|0,34)|0;G=C;H=ph(A|0,b|0,30)|0;G=K^(G|C);K=oh(A|0,b|0,39)|0;D=C;F=ph(A|0,b|0,25)|0;D=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(J|E)^(I|H)^(K|F)|0,G^(D|C)|0)|0;G=C;o=lh(p|0,o|0,B|0,M|0)|0;p=C;M=lh(D|0,G|0,B|0,M|0)|0;B=C;G=oh(o|0,p|0,14)|0;D=C;F=ph(o|0,p|0,50)|0;D=D|C;K=oh(o|0,p|0,18)|0;H=C;I=ph(o|0,p|0,46)|0;H=D^(H|C);D=oh(o|0,p|0,41)|0;E=C;J=ph(o|0,p|0,23)|0;E=H^(E|C);H=g+488|0;L=c[H>>2]|0;H=c[H+4>>2]|0;y=lh(x|0,y|0,-561857047,-1538233109)|0;E=lh(y|0,C|0,(G|F)^(K|I)^(D|J)|0,E|0)|0;H=lh(E|0,C|0,L|0,H|0)|0;H=lh(H|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;L=C;E=oh(M|0,B|0,28)|0;J=C;D=ph(M|0,B|0,36)|0;J=J|C;I=oh(M|0,B|0,34)|0;K=C;F=ph(M|0,B|0,30)|0;K=J^(K|C);J=oh(M|0,B|0,39)|0;G=C;y=ph(M|0,B|0,25)|0;G=lh((f|A)&M|f&A|0,(j|b)&B|j&b|0,(E|D)^(I|F)^(J|y)|0,K^(G|C)|0)|0;K=C;m=lh(l|0,m|0,H|0,L|0)|0;l=C;L=lh(G|0,K|0,H|0,L|0)|0;H=C;K=oh(m|0,l|0,14)|0;G=C;y=ph(m|0,l|0,50)|0;G=G|C;J=oh(m|0,l|0,18)|0;F=C;I=ph(m|0,l|0,46)|0;F=G^(F|C);G=oh(m|0,l|0,41)|0;D=C;E=ph(m|0,l|0,23)|0;D=F^(D|C);F=g+496|0;x=c[F>>2]|0;F=c[F+4>>2]|0;v=lh(u|0,v|0,-1295615723,-1090935817)|0;D=lh(v|0,C|0,(K|y)^(J|I)^(G|E)|0,D|0)|0;F=lh(D|0,C|0,x|0,F|0)|0;F=lh(F|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;x=C;D=oh(L|0,H|0,28)|0;E=C;G=ph(L|0,H|0,36)|0;E=E|C;I=oh(L|0,H|0,34)|0;J=C;y=ph(L|0,H|0,30)|0;J=E^(J|C);E=oh(L|0,H|0,39)|0;K=C;v=ph(L|0,H|0,25)|0;K=lh((A|M)&L|A&M|0,(b|B)&H|b&B|0,(D|G)^(I|y)^(E|v)|0,J^(K|C)|0)|0;J=C;j=lh(f|0,j|0,F|0,x|0)|0;f=C;x=lh(K|0,J|0,F|0,x|0)|0;F=C;J=oh(j|0,f|0,14)|0;K=C;v=ph(j|0,f|0,50)|0;K=K|C;E=oh(j|0,f|0,18)|0;y=C;I=ph(j|0,f|0,46)|0;y=K^(y|C);K=oh(j|0,f|0,41)|0;G=C;D=ph(j|0,f|0,23)|0;G=y^(G|C);y=g+504|0;u=c[y>>2]|0;y=c[y+4>>2]|0;s=lh(r|0,s|0,-479046869,-965641998)|0;G=lh(s|0,C|0,(J|v)^(E|I)^(K|D)|0,G|0)|0;y=lh(G|0,C|0,u|0,y|0)|0;y=lh(y|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;u=C;G=oh(x|0,F|0,28)|0;D=C;K=ph(x|0,F|0,36)|0;D=D|C;I=oh(x|0,F|0,34)|0;E=C;v=ph(x|0,F|0,30)|0;E=D^(E|C);D=oh(x|0,F|0,39)|0;J=C;s=ph(x|0,F|0,25)|0;J=lh((M|L)&x|M&L|0,(B|H)&F|B&H|0,(G|K)^(I|v)^(D|s)|0,E^(J|C)|0)|0;E=C;b=lh(A|0,b|0,y|0,u|0)|0;A=C;u=lh(J|0,E|0,y|0,u|0)|0;y=C;E=oh(b|0,A|0,14)|0;J=C;s=ph(b|0,A|0,50)|0;J=J|C;D=oh(b|0,A|0,18)|0;v=C;I=ph(b|0,A|0,46)|0;v=J^(v|C);J=oh(b|0,A|0,41)|0;K=C;G=ph(b|0,A|0,23)|0;K=v^(K|C);v=g+512|0;r=c[v>>2]|0;v=c[v+4>>2]|0;p=lh(o|0,p|0,-366583396,-903397682)|0;K=lh(p|0,C|0,(E|s)^(D|I)^(J|G)|0,K|0)|0;v=lh(K|0,C|0,r|0,v|0)|0;v=lh(v|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;r=C;K=oh(u|0,y|0,28)|0;G=C;J=ph(u|0,y|0,36)|0;G=G|C;I=oh(u|0,y|0,34)|0;D=C;s=ph(u|0,y|0,30)|0;D=G^(D|C);G=oh(u|0,y|0,39)|0;E=C;p=ph(u|0,y|0,25)|0;E=lh((L|x)&u|L&x|0,(H|F)&y|H&F|0,(K|J)^(I|s)^(G|p)|0,D^(E|C)|0)|0;D=C;B=lh(M|0,B|0,v|0,r|0)|0;M=C;r=lh(E|0,D|0,v|0,r|0)|0;v=C;D=oh(B|0,M|0,14)|0;E=C;p=ph(B|0,M|0,50)|0;E=E|C;G=oh(B|0,M|0,18)|0;s=C;I=ph(B|0,M|0,46)|0;s=E^(s|C);E=oh(B|0,M|0,41)|0;J=C;K=ph(B|0,M|0,23)|0;J=s^(J|C);s=g+520|0;o=c[s>>2]|0;s=c[s+4>>2]|0;l=lh(m|0,l|0,566280711,-779700025)|0;J=lh(l|0,C|0,(D|p)^(G|I)^(E|K)|0,J|0)|0;s=lh(J|0,C|0,o|0,s|0)|0;s=lh(s|0,C|0,(j^b)&B^j|0,(f^A)&M^f|0)|0;o=C;J=oh(r|0,v|0,28)|0;K=C;E=ph(r|0,v|0,36)|0;K=K|C;I=oh(r|0,v|0,34)|0;G=C;p=ph(r|0,v|0,30)|0;G=K^(G|C);K=oh(r|0,v|0,39)|0;D=C;l=ph(r|0,v|0,25)|0;D=lh((x|u)&r|x&u|0,(F|y)&v|F&y|0,(J|E)^(I|p)^(K|l)|0,G^(D|C)|0)|0;G=C;H=lh(L|0,H|0,s|0,o|0)|0;L=C;o=lh(D|0,G|0,s|0,o|0)|0;s=C;G=oh(H|0,L|0,14)|0;D=C;l=ph(H|0,L|0,50)|0;D=D|C;K=oh(H|0,L|0,18)|0;p=C;I=ph(H|0,L|0,46)|0;p=D^(p|C);D=oh(H|0,L|0,41)|0;E=C;J=ph(H|0,L|0,23)|0;E=p^(E|C);p=g+528|0;m=c[p>>2]|0;p=c[p+4>>2]|0;f=lh(j|0,f|0,-840897762,-354779690)|0;E=lh(f|0,C|0,(G|l)^(K|I)^(D|J)|0,E|0)|0;p=lh(E|0,C|0,m|0,p|0)|0;p=lh(p|0,C|0,(b^B)&H^b|0,(A^M)&L^A|0)|0;m=C;E=oh(o|0,s|0,28)|0;J=C;D=ph(o|0,s|0,36)|0;J=J|C;I=oh(o|0,s|0,34)|0;K=C;l=ph(o|0,s|0,30)|0;K=J^(K|C);J=oh(o|0,s|0,39)|0;G=C;f=ph(o|0,s|0,25)|0;G=lh((u|r)&o|u&r|0,(y|v)&s|y&v|0,(E|D)^(I|l)^(J|f)|0,K^(G|C)|0)|0;K=C;F=lh(x|0,F|0,p|0,m|0)|0;x=C;m=lh(G|0,K|0,p|0,m|0)|0;p=C;K=oh(F|0,x|0,14)|0;G=C;f=ph(F|0,x|0,50)|0;G=G|C;J=oh(F|0,x|0,18)|0;l=C;I=ph(F|0,x|0,46)|0;l=G^(l|C);G=oh(F|0,x|0,41)|0;D=C;E=ph(F|0,x|0,23)|0;D=l^(D|C);l=g+536|0;j=c[l>>2]|0;l=c[l+4>>2]|0;A=lh(b|0,A|0,-294727304,-176337025)|0;D=lh(A|0,C|0,(K|f)^(J|I)^(G|E)|0,D|0)|0;l=lh(D|0,C|0,j|0,l|0)|0;l=lh(l|0,C|0,(B^H)&F^B|0,(M^L)&x^M|0)|0;j=C;D=oh(m|0,p|0,28)|0;E=C;G=ph(m|0,p|0,36)|0;E=E|C;I=oh(m|0,p|0,34)|0;J=C;f=ph(m|0,p|0,30)|0;J=E^(J|C);E=oh(m|0,p|0,39)|0;K=C;A=ph(m|0,p|0,25)|0;K=lh((r|o)&m|r&o|0,(v|s)&p|v&s|0,(D|G)^(I|f)^(E|A)|0,J^(K|C)|0)|0;J=C;y=lh(u|0,y|0,l|0,j|0)|0;u=C;j=lh(K|0,J|0,l|0,j|0)|0;l=C;J=oh(y|0,u|0,14)|0;K=C;A=ph(y|0,u|0,50)|0;K=K|C;E=oh(y|0,u|0,18)|0;f=C;I=ph(y|0,u|0,46)|0;f=K^(f|C);K=oh(y|0,u|0,41)|0;G=C;D=ph(y|0,u|0,23)|0;G=f^(G|C);f=g+544|0;b=c[f>>2]|0;f=c[f+4>>2]|0;M=lh(B|0,M|0,1914138554,116418474)|0;G=lh(M|0,C|0,(J|A)^(E|I)^(K|D)|0,G|0)|0;f=lh(G|0,C|0,b|0,f|0)|0;f=lh(f|0,C|0,(H^F)&y^H|0,(L^x)&u^L|0)|0;b=C;G=oh(j|0,l|0,28)|0;D=C;K=ph(j|0,l|0,36)|0;D=D|C;I=oh(j|0,l|0,34)|0;E=C;A=ph(j|0,l|0,30)|0;E=D^(E|C);D=oh(j|0,l|0,39)|0;J=C;M=ph(j|0,l|0,25)|0;J=lh((o|m)&j|o&m|0,(s|p)&l|s&p|0,(G|K)^(I|A)^(D|M)|0,E^(J|C)|0)|0;E=C;v=lh(r|0,v|0,f|0,b|0)|0;r=C;b=lh(J|0,E|0,f|0,b|0)|0;f=C;E=oh(v|0,r|0,14)|0;J=C;M=ph(v|0,r|0,50)|0;J=J|C;D=oh(v|0,r|0,18)|0;A=C;I=ph(v|0,r|0,46)|0;A=J^(A|C);J=oh(v|0,r|0,41)|0;K=C;G=ph(v|0,r|0,23)|0;K=A^(K|C);A=g+552|0;B=c[A>>2]|0;A=c[A+4>>2]|0;L=lh(H|0,L|0,-1563912026,174292421)|0;K=lh(L|0,C|0,(E|M)^(D|I)^(J|G)|0,K|0)|0;A=lh(K|0,C|0,B|0,A|0)|0;A=lh(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;K=oh(b|0,f|0,28)|0;G=C;J=ph(b|0,f|0,36)|0;G=G|C;I=oh(b|0,f|0,34)|0;D=C;M=ph(b|0,f|0,30)|0;D=G^(D|C);G=oh(b|0,f|0,39)|0;E=C;L=ph(b|0,f|0,25)|0;E=lh((m|j)&b|m&j|0,(p|l)&f|p&l|0,(K|J)^(I|M)^(G|L)|0,D^(E|C)|0)|0;D=C;s=lh(o|0,s|0,A|0,B|0)|0;o=C;B=lh(E|0,D|0,A|0,B|0)|0;A=C;D=oh(s|0,o|0,14)|0;E=C;L=ph(s|0,o|0,50)|0;E=E|C;G=oh(s|0,o|0,18)|0;M=C;I=ph(s|0,o|0,46)|0;M=E^(M|C);E=oh(s|0,o|0,41)|0;J=C;K=ph(s|0,o|0,23)|0;J=M^(J|C);M=g+560|0;H=c[M>>2]|0;M=c[M+4>>2]|0;x=lh(F|0,x|0,-1090974290,289380356)|0;J=lh(x|0,C|0,(D|L)^(G|I)^(E|K)|0,J|0)|0;M=lh(J|0,C|0,H|0,M|0)|0;M=lh(M|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;H=C;J=oh(B|0,A|0,28)|0;K=C;E=ph(B|0,A|0,36)|0;K=K|C;I=oh(B|0,A|0,34)|0;G=C;L=ph(B|0,A|0,30)|0;G=K^(G|C);K=oh(B|0,A|0,39)|0;D=C;x=ph(B|0,A|0,25)|0;D=lh((j|b)&B|j&b|0,(l|f)&A|l&f|0,(J|E)^(I|L)^(K|x)|0,G^(D|C)|0)|0;G=C;p=lh(m|0,p|0,M|0,H|0)|0;m=C;H=lh(D|0,G|0,M|0,H|0)|0;M=C;G=oh(p|0,m|0,14)|0;D=C;x=ph(p|0,m|0,50)|0;D=D|C;K=oh(p|0,m|0,18)|0;L=C;I=ph(p|0,m|0,46)|0;L=D^(L|C);D=oh(p|0,m|0,41)|0;E=C;J=ph(p|0,m|0,23)|0;E=L^(E|C);L=g+568|0;F=c[L>>2]|0;L=c[L+4>>2]|0;u=lh(y|0,u|0,320620315,460393269)|0;E=lh(u|0,C|0,(G|x)^(K|I)^(D|J)|0,E|0)|0;L=lh(E|0,C|0,F|0,L|0)|0;L=lh(L|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;F=C;E=oh(H|0,M|0,28)|0;J=C;D=ph(H|0,M|0,36)|0;J=J|C;I=oh(H|0,M|0,34)|0;K=C;x=ph(H|0,M|0,30)|0;K=J^(K|C);J=oh(H|0,M|0,39)|0;G=C;u=ph(H|0,M|0,25)|0;G=lh((b|B)&H|b&B|0,(f|A)&M|f&A|0,(E|D)^(I|x)^(J|u)|0,K^(G|C)|0)|0;K=C;l=lh(j|0,l|0,L|0,F|0)|0;j=C;F=lh(G|0,K|0,L|0,F|0)|0;L=C;K=oh(l|0,j|0,14)|0;G=C;u=ph(l|0,j|0,50)|0;G=G|C;J=oh(l|0,j|0,18)|0;x=C;I=ph(l|0,j|0,46)|0;x=G^(x|C);G=oh(l|0,j|0,41)|0;D=C;E=ph(l|0,j|0,23)|0;D=x^(D|C);x=g+576|0;y=c[x>>2]|0;x=c[x+4>>2]|0;r=lh(v|0,r|0,587496836,685471733)|0;D=lh(r|0,C|0,(K|u)^(J|I)^(G|E)|0,D|0)|0;x=lh(D|0,C|0,y|0,x|0)|0;x=lh(x|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;y=C;D=oh(F|0,L|0,28)|0;E=C;G=ph(F|0,L|0,36)|0;E=E|C;I=oh(F|0,L|0,34)|0;J=C;u=ph(F|0,L|0,30)|0;J=E^(J|C);E=oh(F|0,L|0,39)|0;K=C;r=ph(F|0,L|0,25)|0;K=lh((B|H)&F|B&H|0,(A|M)&L|A&M|0,(D|G)^(I|u)^(E|r)|0,J^(K|C)|0)|0;J=C;f=lh(b|0,f|0,x|0,y|0)|0;b=C;y=lh(K|0,J|0,x|0,y|0)|0;x=C;J=oh(f|0,b|0,14)|0;K=C;r=ph(f|0,b|0,50)|0;K=K|C;E=oh(f|0,b|0,18)|0;u=C;I=ph(f|0,b|0,46)|0;u=K^(u|C);K=oh(f|0,b|0,41)|0;G=C;D=ph(f|0,b|0,23)|0;G=u^(G|C);u=g+584|0;v=c[u>>2]|0;u=c[u+4>>2]|0;o=lh(s|0,o|0,1086792851,852142971)|0;G=lh(o|0,C|0,(J|r)^(E|I)^(K|D)|0,G|0)|0;u=lh(G|0,C|0,v|0,u|0)|0;u=lh(u|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;v=C;G=oh(y|0,x|0,28)|0;D=C;K=ph(y|0,x|0,36)|0;D=D|C;I=oh(y|0,x|0,34)|0;E=C;r=ph(y|0,x|0,30)|0;E=D^(E|C);D=oh(y|0,x|0,39)|0;J=C;o=ph(y|0,x|0,25)|0;J=lh((H|F)&y|H&F|0,(M|L)&x|M&L|0,(G|K)^(I|r)^(D|o)|0,E^(J|C)|0)|0;E=C;A=lh(B|0,A|0,u|0,v|0)|0;B=C;v=lh(J|0,E|0,u|0,v|0)|0;u=C;E=oh(A|0,B|0,14)|0;J=C;o=ph(A|0,B|0,50)|0;J=J|C;D=oh(A|0,B|0,18)|0;r=C;I=ph(A|0,B|0,46)|0;r=J^(r|C);J=oh(A|0,B|0,41)|0;K=C;G=ph(A|0,B|0,23)|0;K=r^(K|C);r=g+592|0;s=c[r>>2]|0;r=c[r+4>>2]|0;m=lh(p|0,m|0,365543100,1017036298)|0;K=lh(m|0,C|0,(E|o)^(D|I)^(J|G)|0,K|0)|0;r=lh(K|0,C|0,s|0,r|0)|0;r=lh(r|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;s=C;K=oh(v|0,u|0,28)|0;G=C;J=ph(v|0,u|0,36)|0;G=G|C;I=oh(v|0,u|0,34)|0;D=C;o=ph(v|0,u|0,30)|0;D=G^(D|C);G=oh(v|0,u|0,39)|0;E=C;m=ph(v|0,u|0,25)|0;E=lh((F|y)&v|F&y|0,(L|x)&u|L&x|0,(K|J)^(I|o)^(G|m)|0,D^(E|C)|0)|0;D=C;M=lh(H|0,M|0,r|0,s|0)|0;H=C;s=lh(E|0,D|0,r|0,s|0)|0;r=C;D=oh(M|0,H|0,14)|0;E=C;m=ph(M|0,H|0,50)|0;E=E|C;G=oh(M|0,H|0,18)|0;o=C;I=ph(M|0,H|0,46)|0;o=E^(o|C);E=oh(M|0,H|0,41)|0;J=C;K=ph(M|0,H|0,23)|0;J=o^(J|C);o=g+600|0;p=c[o>>2]|0;o=c[o+4>>2]|0;j=lh(l|0,j|0,-1676669620,1126000580)|0;J=lh(j|0,C|0,(D|m)^(G|I)^(E|K)|0,J|0)|0;o=lh(J|0,C|0,p|0,o|0)|0;o=lh(o|0,C|0,(f^A)&M^f|0,(b^B)&H^b|0)|0;p=C;J=oh(s|0,r|0,28)|0;K=C;E=ph(s|0,r|0,36)|0;K=K|C;I=oh(s|0,r|0,34)|0;G=C;m=ph(s|0,r|0,30)|0;G=K^(G|C);K=oh(s|0,r|0,39)|0;D=C;j=ph(s|0,r|0,25)|0;D=lh((y|v)&s|y&v|0,(x|u)&r|x&u|0,(J|E)^(I|m)^(K|j)|0,G^(D|C)|0)|0;G=C;L=lh(F|0,L|0,o|0,p|0)|0;F=C;p=lh(D|0,G|0,o|0,p|0)|0;o=C;G=oh(L|0,F|0,14)|0;D=C;j=ph(L|0,F|0,50)|0;D=D|C;K=oh(L|0,F|0,18)|0;m=C;I=ph(L|0,F|0,46)|0;m=D^(m|C);D=oh(L|0,F|0,41)|0;E=C;J=ph(L|0,F|0,23)|0;E=m^(E|C);m=g+608|0;l=c[m>>2]|0;m=c[m+4>>2]|0;b=lh(f|0,b|0,-885112138,1288033470)|0;E=lh(b|0,C|0,(G|j)^(K|I)^(D|J)|0,E|0)|0;m=lh(E|0,C|0,l|0,m|0)|0;m=lh(m|0,C|0,(A^M)&L^A|0,(B^H)&F^B|0)|0;l=C;E=oh(p|0,o|0,28)|0;J=C;D=ph(p|0,o|0,36)|0;J=J|C;I=oh(p|0,o|0,34)|0;K=C;j=ph(p|0,o|0,30)|0;K=J^(K|C);J=oh(p|0,o|0,39)|0;G=C;b=ph(p|0,o|0,25)|0;G=lh((v|s)&p|v&s|0,(u|r)&o|u&r|0,(E|D)^(I|j)^(J|b)|0,K^(G|C)|0)|0;K=C;x=lh(y|0,x|0,m|0,l|0)|0;y=C;l=lh(G|0,K|0,m|0,l|0)|0;m=C;K=oh(x|0,y|0,14)|0;G=C;b=ph(x|0,y|0,50)|0;G=G|C;J=oh(x|0,y|0,18)|0;j=C;I=ph(x|0,y|0,46)|0;j=G^(j|C);G=oh(x|0,y|0,41)|0;D=C;E=ph(x|0,y|0,23)|0;D=j^(D|C);j=g+616|0;f=c[j>>2]|0;j=c[j+4>>2]|0;B=lh(A|0,B|0,-60457430,1501505948)|0;D=lh(B|0,C|0,(K|b)^(J|I)^(G|E)|0,D|0)|0;j=lh(D|0,C|0,f|0,j|0)|0;j=lh(j|0,C|0,(M^L)&x^M|0,(H^F)&y^H|0)|0;f=C;D=oh(l|0,m|0,28)|0;E=C;G=ph(l|0,m|0,36)|0;E=E|C;I=oh(l|0,m|0,34)|0;J=C;b=ph(l|0,m|0,30)|0;J=E^(J|C);E=oh(l|0,m|0,39)|0;K=C;B=ph(l|0,m|0,25)|0;K=lh((s|p)&l|s&p|0,(r|o)&m|r&o|0,(D|G)^(I|b)^(E|B)|0,J^(K|C)|0)|0;J=C;u=lh(v|0,u|0,j|0,f|0)|0;v=C;f=lh(K|0,J|0,j|0,f|0)|0;j=C;J=oh(u|0,v|0,14)|0;K=C;B=ph(u|0,v|0,50)|0;K=K|C;E=oh(u|0,v|0,18)|0;b=C;I=ph(u|0,v|0,46)|0;b=K^(b|C);K=oh(u|0,v|0,41)|0;G=C;D=ph(u|0,v|0,23)|0;G=b^(G|C);b=g+624|0;A=c[b>>2]|0;b=c[b+4>>2]|0;H=lh(M|0,H|0,987167468,1607167915)|0;G=lh(H|0,C|0,(J|B)^(E|I)^(K|D)|0,G|0)|0;b=lh(G|0,C|0,A|0,b|0)|0;b=lh(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;G=oh(f|0,j|0,28)|0;D=C;K=ph(f|0,j|0,36)|0;D=D|C;I=oh(f|0,j|0,34)|0;E=C;B=ph(f|0,j|0,30)|0;E=D^(E|C);D=oh(f|0,j|0,39)|0;J=C;H=ph(f|0,j|0,25)|0;J=lh((p|l)&f|p&l|0,(o|m)&j|o&m|0,(G|K)^(I|B)^(D|H)|0,E^(J|C)|0)|0;E=C;r=lh(s|0,r|0,b|0,A|0)|0;s=C;A=lh(J|0,E|0,b|0,A|0)|0;b=C;E=oh(r|0,s|0,14)|0;J=C;H=ph(r|0,s|0,50)|0;J=J|C;D=oh(r|0,s|0,18)|0;B=C;I=ph(r|0,s|0,46)|0;B=J^(B|C);J=oh(r|0,s|0,41)|0;K=C;G=ph(r|0,s|0,23)|0;K=B^(K|C);g=g+632|0;B=c[g>>2]|0;g=c[g+4>>2]|0;F=lh(L|0,F|0,1246189591,1816402316)|0;K=lh(F|0,C|0,(E|H)^(D|I)^(J|G)|0,K|0)|0;g=lh(K|0,C|0,B|0,g|0)|0;g=lh(g|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;B=C;K=oh(A|0,b|0,28)|0;G=C;J=ph(A|0,b|0,36)|0;G=G|C;I=oh(A|0,b|0,34)|0;D=C;H=ph(A|0,b|0,30)|0;D=G^(D|C);G=oh(A|0,b|0,39)|0;E=C;F=ph(A|0,b|0,25)|0;E=lh((l|f)&A|l&f|0,(m|j)&b|m&j|0,(K|J)^(I|H)^(G|F)|0,D^(E|C)|0)|0;D=C;o=lh(p|0,o|0,g|0,B|0)|0;p=C;B=lh(E|0,D|0,g|0,B|0)|0;g=a;B=lh(c[g>>2]|0,c[g+4>>2]|0,B|0,C|0)|0;g=a;c[g>>2]=B;c[g+4>>2]=C;g=e;g=lh(c[g>>2]|0,c[g+4>>2]|0,A|0,b|0)|0;a=e;c[a>>2]=g;c[a+4>>2]=C;a=k;j=lh(c[a>>2]|0,c[a+4>>2]|0,f|0,j|0)|0;c[k>>2]=j;c[k+4>>2]=C;k=n;m=lh(c[k>>2]|0,c[k+4>>2]|0,l|0,m|0)|0;c[n>>2]=m;c[n+4>>2]=C;n=q;p=lh(c[n>>2]|0,c[n+4>>2]|0,o|0,p|0)|0;c[q>>2]=p;c[q+4>>2]=C;q=t;s=lh(c[q>>2]|0,c[q+4>>2]|0,r|0,s|0)|0;c[t>>2]=s;c[t+4>>2]=C;t=w;v=lh(c[t>>2]|0,c[t+4>>2]|0,u|0,v|0)|0;c[w>>2]=v;c[w+4>>2]=C;w=z;y=lh(c[w>>2]|0,c[w+4>>2]|0,x|0,y|0)|0;c[z>>2]=y;c[z+4>>2]=C;i=h;return}function Fd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;s=i;e=i=i+63&-64;i=i+16|0;r=b+64|0;f=r;g=c[f>>2]|0;f=c[f+4>>2]|0;a[e+7>>0]=g;q=oh(g|0,f|0,8)|0;a[e+6>>0]=q;q=oh(g|0,f|0,16)|0;a[e+5>>0]=q;q=oh(g|0,f|0,24)|0;a[e+4>>0]=q;a[e+3>>0]=f;q=oh(g|0,f|0,40)|0;a[e+2>>0]=q;q=oh(g|0,f|0,48)|0;a[e+1>>0]=q;q=oh(g|0,f|0,56)|0;a[e>>0]=q;q=b+72|0;j=q;h=c[j>>2]|0;j=c[j+4>>2]|0;a[e+15>>0]=h;n=oh(h|0,j|0,8)|0;a[e+14>>0]=n;n=oh(h|0,j|0,16)|0;a[e+13>>0]=n;n=oh(h|0,j|0,24)|0;a[e+12>>0]=n;a[e+11>>0]=j;n=oh(h|0,j|0,40)|0;a[e+10>>0]=n;n=oh(h|0,j|0,48)|0;a[e+9>>0]=n;n=oh(h|0,j|0,56)|0;a[e+8>>0]=n;n=oh(h|0,j|0,3)|0;n=n&127;o=0<0|0==0&n>>>0<112;o=kh((o?112:240)|0,(o?0:0)|0,n|0,0)|0;p=C;m=ph(o|0,p|0,3)|0;t=C;k=oh(o|0,p|0,61)|0;l=C;j=lh(m|0,t|0,h|0,j|0)|0;h=C;u=q;c[u>>2]=j;c[u+4>>2]=h;if(h>>>0<t>>>0|(h|0)==(t|0)&j>>>0<m>>>0){g=lh(g|0,f|0,1,0)|0;f=C;u=r;c[u>>2]=g;c[u+4>>2]=f}g=lh(g|0,f|0,k|0,l|0)|0;f=C;l=r;c[l>>2]=g;c[l+4>>2]=f;l=kh(128,0,n|0,0)|0;m=C;k=b+80+n|0;if(p>>>0<m>>>0|(p|0)==(m|0)&o>>>0<l>>>0)qh(k|0,32899,o|0)|0;else{qh(k|0,32899,l|0)|0;j=b+80|0;Ed(b,j);f=32899+l|0;g=kh(o|0,p|0,l|0,m|0)|0;h=C;if(h>>>0>0|(h|0)==0&g>>>0>127)do{Ed(b,f);f=f+128|0;g=lh(g|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&g>>>0>127);qh(j|0,f|0,g|0)|0;h=q;f=r;j=c[h>>2]|0;h=c[h+4>>2]|0;g=c[f>>2]|0;f=c[f+4>>2]|0}k=oh(j|0,h|0,3)|0;k=k&127;t=lh(j|0,h|0,128,0)|0;u=q;c[u>>2]=t;c[u+4>>2]=C;if(h>>>0>4294967295|(h|0)==-1&j>>>0>4294967167){g=lh(g|0,f|0,1,0)|0;f=C;u=r;c[u>>2]=g;c[u+4>>2]=f}h=r;c[h>>2]=g;c[h+4>>2]=f;g=kh(128,0,k|0,0)|0;h=C;f=b+80+k|0;if(h>>>0>0|(h|0)==0&g>>>0>16){g=f;f=g+16|0;do{a[g>>0]=a[e>>0]|0;g=g+1|0;e=e+1|0}while((g|0)<(f|0))}else{qh(f|0,e|0,g|0)|0;j=b+80|0;Ed(b,j);e=e+g|0;f=kh(16,0,g|0,h|0)|0;g=C;if(g>>>0>0|(g|0)==0&f>>>0>127)do{Ed(b,e);e=e+128|0;f=lh(f|0,g|0,-128,-1)|0;g=C}while(g>>>0>0|(g|0)==0&f>>>0>127);qh(j|0,e|0,f|0)|0}e=0;do{u=d+(e<<3)|0;t=b+(e<<3)|0;r=c[t>>2]|0;t=c[t+4>>2]|0;a[u+7>>0]=r;q=oh(r|0,t|0,8)|0;a[u+6>>0]=q;q=oh(r|0,t|0,16)|0;a[u+5>>0]=q;q=oh(r|0,t|0,24)|0;a[u+4>>0]=q;a[u+3>>0]=t;q=oh(r|0,t|0,40)|0;a[u+2>>0]=q;q=oh(r|0,t|0,48)|0;a[u+1>>0]=q;t=oh(r|0,t|0,56)|0;a[u>>0]=t;e=e+1|0}while((e|0)!=8);nh(b|0,0,208)|0;i=s;return 0}function Gd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+208|0;g=m+64|0;h=m;j=400;k=h+64|0;do{c[h>>2]=c[j>>2];h=h+4|0;j=j+4|0}while((h|0)<(k|0));h=ph(e|0,f|0,3)|0;j=C;k=oh(e|0,f|0,61)|0;l=m+72|0;c[l>>2]=h;c[l+4>>2]=j;l=g;c[l>>2]=k;c[l+4>>2]=C;l=m+80|0;if(f>>>0<0|(f|0)==0&e>>>0<128){qh(l|0,d|0,e|0)|0;Fd(m,b)|0;i=n;return 0}h=l;j=d;k=h+128|0;do{a[h>>0]=a[j>>0]|0;h=h+1|0;j=j+1|0}while((h|0)<(k|0));Ed(m,l);g=d+128|0;d=lh(e|0,f|0,-128,-1)|0;h=C;if(h>>>0>0|(h|0)==0&d>>>0>127)do{Ed(m,g);g=g+128|0;d=lh(d|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&d>>>0>127);qh(l|0,g|0,d|0)|0;Fd(m,b)|0;i=n;return 0}function Hd(){return 256}function Id(){return 16}function Jd(){return 32}function Kd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;k=i=i+63&-64;i=i+96|0;c[k>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;m=h+3|0;c[k+4>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>2&67108611;m=h+6|0;c[k+8>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>4&67092735;m=h+9|0;c[k+12>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>6&66076671;m=h+12|0;c[k+16>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>8&1048575;m=k+20|0;l=h+16|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[m+16>>2]=0;c[k+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[k+44>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[k+48>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[k+52>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;h=k+56|0;c[h>>2]=0;c[h+4>>2]=0;a[k+80>>0]=0;Xd(k,e,f,g);Zd(k,b);i=j;return 0}function Ld(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Rd(a,b,c,d,e)|0}function Md(b,e){b=b|0;e=e|0;var f=0,g=0;c[b>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863;g=e+3|0;c[b+4>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>2&67108611;g=e+6|0;c[b+8>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>4&67092735;g=e+9|0;c[b+12>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>6&66076671;g=e+12|0;c[b+16>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>8&1048575;g=b+20|0;f=e+16|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[b+40>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+20|0;c[b+44>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+24|0;c[b+48>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;e=e+28|0;c[b+52>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+56|0;c[e>>2]=0;c[e+4>>2]=0;a[b+80>>0]=0;return 0}function Nd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Xd(a,b,c,d);return 0}function Od(a,b){a=a|0;b=b|0;Zd(a,b);return 0}function Pd(){return 33027}function Qd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;k=i=i+63&-64;i=i+96|0;c[k>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;m=h+3|0;c[k+4>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>2&67108611;m=h+6|0;c[k+8>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>4&67092735;m=h+9|0;c[k+12>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>6&66076671;m=h+12|0;c[k+16>>2]=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)>>>8&1048575;m=k+20|0;l=h+16|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[m+16>>2]=0;c[k+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[k+44>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[k+48>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[k+52>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;h=k+56|0;c[h>>2]=0;c[h+4>>2]=0;a[k+80>>0]=0;Xd(k,e,f,g);Zd(k,b);i=j;return 0}function Rd(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;k=i;j=i=i+63&-64;i=i+112|0;l=j;j=j+88|0;c[l>>2]=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&67108863;n=h+3|0;c[l+4>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>2&67108611;n=h+6|0;c[l+8>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>4&67092735;n=h+9|0;c[l+12>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>6&66076671;n=h+12|0;c[l+16>>2]=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)>>>8&1048575;n=l+20|0;m=h+16|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[l+40>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=h+20|0;c[l+44>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=h+24|0;c[l+48>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;h=h+28|0;c[l+52>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;h=l+56|0;c[h>>2]=0;c[h+4>>2]=0;a[l+80>>0]=0;Xd(l,e,f,g);Zd(l,j);i=k;return ((((a[j+15>>0]^a[b+15>>0]|(a[j+14>>0]^a[b+14>>0]|(a[j+13>>0]^a[b+13>>0]|(a[j+12>>0]^a[b+12>>0]|(a[j+11>>0]^a[b+11>>0]|(a[j+10>>0]^a[b+10>>0]|(a[j+9>>0]^a[b+9>>0]|(a[j+8>>0]^a[b+8>>0]|(a[j+7>>0]^a[b+7>>0]|(a[j+6>>0]^a[b+6>>0]|(a[j+5>>0]^a[b+5>>0]|(a[j+4>>0]^a[b+4>>0]|(a[j+3>>0]^a[b+3>>0]|(a[j+2>>0]^a[b+2>>0]|(a[j+1>>0]^a[b+1>>0]|a[j>>0]^a[b>>0])))))))))))))))&255)+511|0)>>>8&1)+-1|0}function Sd(b,e){b=b|0;e=e|0;var f=0,g=0;c[b>>2]=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863;g=e+3|0;c[b+4>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>2&67108611;g=e+6|0;c[b+8>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>4&67092735;g=e+9|0;c[b+12>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>6&66076671;g=e+12|0;c[b+16>>2]=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)>>>8&1048575;g=b+20|0;f=e+16|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[b+40>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+20|0;c[b+44>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=e+24|0;c[b+48>>2]=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;e=e+28|0;c[b+52>>2]=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;e=b+56|0;c[e>>2]=0;c[e+4>>2]=0;a[b+80>>0]=0;return 0}function Td(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Xd(a,b,c,d);return 0}function Ud(a,b){a=a|0;b=b|0;Zd(a,b);return 0}function Vd(){return 16}function Wd(){return 32}function Xd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=b+56|0;g=m;h=c[g>>2]|0;g=c[g+4>>2]|0;do if(!((h|0)==0&(g|0)==0)){k=kh(16,0,h|0,g|0)|0;l=C;j=l>>>0>f>>>0|(l|0)==(f|0)&k>>>0>e>>>0;k=j?e:k;l=j?f:l;if(!((k|0)==0&(l|0)==0)){j=0;i=0;do{n=a[d+j>>0]|0;g=lh(h|0,g|0,j|0,i|0)|0;a[b+64+g>>0]=n;j=lh(j|0,i|0,1,0)|0;i=C;g=m;h=c[g>>2]|0;g=c[g+4>>2]|0}while(i>>>0<l>>>0|(i|0)==(l|0)&j>>>0<k>>>0)}n=lh(h|0,g|0,k|0,l|0)|0;j=C;i=m;c[i>>2]=n;c[i+4>>2]=j;if(j>>>0<0|(j|0)==0&n>>>0<16)return;else{e=kh(e|0,f|0,k|0,l|0)|0;f=C;Yd(b,b+64|0,16,0);n=m;c[n>>2]=0;c[n+4>>2]=0;d=d+k|0;break}}while(0);if(f>>>0>0|(f|0)==0&e>>>0>15){n=e&-16;Yd(b,d,n,f);e=kh(e|0,f|0,n|0,f|0)|0;d=d+n|0;f=C}if((e|0)==0&(f|0)==0)return;else{g=0;h=0}do{l=a[d+g>>0]|0;n=m;n=lh(c[n>>2]|0,c[n+4>>2]|0,g|0,h|0)|0;a[b+64+n>>0]=l;g=lh(g|0,h|0,1,0)|0;h=C}while(h>>>0<f>>>0|(h|0)==(f|0)&g>>>0<e>>>0);b=m;b=lh(c[b>>2]|0,c[b+4>>2]|0,e|0,f|0)|0;n=m;c[n>>2]=b;c[n+4>>2]=C;return}function Yd(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;s=a[b+80>>0]|0?0:16777216;t=c[b+4>>2]|0;u=c[b+8>>2]|0;m=c[b+12>>2]|0;n=c[b+16>>2]|0;v=b+20|0;l=c[v>>2]|0;w=b+24|0;k=c[w>>2]|0;x=b+28|0;j=c[x>>2]|0;y=b+32|0;i=c[y>>2]|0;z=b+36|0;h=c[z>>2]|0;if(!(g>>>0>0|(g|0)==0&f>>>0>15)){q=l;r=k;s=j;t=i;u=h;c[v>>2]=q;c[w>>2]=r;c[x>>2]=s;c[y>>2]=t;c[z>>2]=u;return}o=n*5|0;p=m*5|0;q=u*5|0;r=t*5|0;b=c[b>>2]|0;while(1){B=((d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)&67108863)+l|0;J=e+3|0;J=((d[J>>0]|d[J+1>>0]<<8|d[J+2>>0]<<16|d[J+3>>0]<<24)>>>2&67108863)+k|0;H=e+6|0;H=((d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24)>>>4&67108863)+j|0;G=e+9|0;G=((d[G>>0]|d[G+1>>0]<<8|d[G+2>>0]<<16|d[G+3>>0]<<24)>>>6)+i|0;l=e+12|0;l=((d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)>>>8|s)+h|0;k=wh(B|0,0,b|0,0)|0;j=C;A=wh(J|0,0,o|0,0)|0;j=lh(A|0,C|0,k|0,j|0)|0;k=C;A=wh(H|0,0,p|0,0)|0;A=lh(j|0,k|0,A|0,C|0)|0;k=C;j=wh(G|0,0,q|0,0)|0;j=lh(A|0,k|0,j|0,C|0)|0;k=C;A=wh(l|0,0,r|0,0)|0;A=lh(j|0,k|0,A|0,C|0)|0;k=C;j=wh(B|0,0,t|0,0)|0;i=C;F=wh(J|0,0,b|0,0)|0;i=lh(F|0,C|0,j|0,i|0)|0;j=C;F=wh(H|0,0,o|0,0)|0;F=lh(i|0,j|0,F|0,C|0)|0;j=C;i=wh(G|0,0,p|0,0)|0;i=lh(F|0,j|0,i|0,C|0)|0;j=C;F=wh(l|0,0,q|0,0)|0;F=lh(i|0,j|0,F|0,C|0)|0;j=C;i=wh(B|0,0,u|0,0)|0;h=C;E=wh(J|0,0,t|0,0)|0;h=lh(E|0,C|0,i|0,h|0)|0;i=C;E=wh(H|0,0,b|0,0)|0;E=lh(h|0,i|0,E|0,C|0)|0;i=C;h=wh(G|0,0,o|0,0)|0;h=lh(E|0,i|0,h|0,C|0)|0;i=C;E=wh(l|0,0,p|0,0)|0;E=lh(h|0,i|0,E|0,C|0)|0;i=C;h=wh(B|0,0,m|0,0)|0;I=C;D=wh(J|0,0,u|0,0)|0;I=lh(D|0,C|0,h|0,I|0)|0;h=C;D=wh(H|0,0,t|0,0)|0;D=lh(I|0,h|0,D|0,C|0)|0;h=C;I=wh(G|0,0,b|0,0)|0;I=lh(D|0,h|0,I|0,C|0)|0;h=C;D=wh(l|0,0,o|0,0)|0;D=lh(I|0,h|0,D|0,C|0)|0;h=C;B=wh(B|0,0,n|0,0)|0;I=C;J=wh(J|0,0,m|0,0)|0;I=lh(J|0,C|0,B|0,I|0)|0;B=C;H=wh(H|0,0,u|0,0)|0;H=lh(I|0,B|0,H|0,C|0)|0;B=C;G=wh(G|0,0,t|0,0)|0;G=lh(H|0,B|0,G|0,C|0)|0;B=C;l=wh(l|0,0,b|0,0)|0;l=lh(G|0,B|0,l|0,C|0)|0;B=C;k=oh(A|0,k|0,26)|0;k=lh(F|0,j|0,k|0,0)|0;j=oh(k|0,C|0,26)|0;j=lh(E|0,i|0,j|0,0)|0;i=oh(j|0,C|0,26)|0;j=j&67108863;i=lh(D|0,h|0,i|0,0)|0;h=oh(i|0,C|0,26)|0;i=i&67108863;h=lh(l|0,B|0,h|0,0)|0;B=oh(h|0,C|0,26)|0;h=h&67108863;B=B*5|0;l=B+A&67108863;k=((B+(A&67108863)|0)>>>26)+(k&67108863)|0;f=lh(f|0,g|0,-16,-1)|0;g=C;if(!(g>>>0>0|(g|0)==0&f>>>0>15))break;else e=e+16|0}c[v>>2]=l;c[w>>2]=k;c[x>>2]=j;c[y>>2]=i;c[z>>2]=h;return}function Zd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=b+56|0;f=c[g>>2]|0;g=c[g+4>>2]|0;if(!((f|0)==0&(g|0)==0)){a[b+64+f>>0]=1;e=lh(f|0,g|0,1,0)|0;h=C;if(h>>>0<0|(h|0)==0&e>>>0<16){h=kh(14,0,f|0,g|0)|0;nh(b+64+e|0,0,h+1|0)|0}a[b+80>>0]=1;Yd(b,b+64|0,16,0)}g=c[b+24>>2]|0;p=(c[b+28>>2]|0)+(g>>>26)|0;h=p&67108863;n=(p>>>26)+(c[b+32>>2]|0)|0;m=n&67108863;i=(n>>>26)+(c[b+36>>2]|0)|0;f=((i>>>26)*5|0)+(c[b+20>>2]|0)|0;e=f&67108863;g=(f>>>26)+(g&67108863)|0;r=((e+5|0)>>>26)+g|0;q=r>>>26;o=(q+h|0)>>>26;k=(i|-67108864)+((o+m|0)>>>26)|0;l=(k>>>31)+-1|0;j=k>>31;g=r&67108863&l|j&g;h=q+p&67108863&l|j&h;m=o+n&67108863&l|j&m;e=lh(f+5&67108863&l|j&e|g<<26|0,0,c[b+40>>2]|0,0)|0;f=C;g=lh(g>>>6|h<<20|0,0,c[b+44>>2]|0,0)|0;f=lh(g|0,C|0,f|0,0)|0;g=C;h=lh(h>>>12|m<<14|0,0,c[b+48>>2]|0,0)|0;g=lh(h|0,C|0,g|0,0)|0;h=C;i=lh(m>>>18|(l&k|j&i)<<8|0,0,c[b+52>>2]|0,0)|0;h=lh(i|0,C|0,h|0,0)|0;a[d>>0]=e;a[d+1>>0]=e>>8;a[d+2>>0]=e>>16;a[d+3>>0]=e>>24;e=d+4|0;a[e>>0]=f;a[e+1>>0]=f>>8;a[e+2>>0]=f>>16;a[e+3>>0]=f>>24;e=d+8|0;a[e>>0]=g;a[e+1>>0]=g>>8;a[e+2>>0]=g>>16;a[e+3>>0]=g>>24;e=d+12|0;a[e>>0]=h;a[e+1>>0]=h>>8;a[e+2>>0]=h>>16;a[e+3>>0]=h>>24;e=b+88|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));return}function _d(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;n=i;k=i=i+63&-64;i=i+2048|0;j=k;k=k+1024|0;if(!((a|0)!=0&(b|0)!=0)){i=n;return}g=c[(c[b>>2]|0)+4>>2]|0;h=c[b+16>>2]|0;qh(j|0,g+(h<<10)+-1024|0,1024)|0;d=c[b+20>>2]|0;if(d>>>0>1){e=h+-1|0;m=1;do{f=e+(_(h,m)|0)|0;l=0;do{q=g+(f<<10)+(l<<3)|0;o=j+(l<<3)|0;r=o;p=c[r+4>>2]^c[q+4>>2];c[o>>2]=c[r>>2]^c[q>>2];c[o+4>>2]=p;l=l+1|0}while((l|0)!=128);m=m+1|0}while((m|0)!=(d|0))}qh(k|0,j|0,1024)|0;ge(c[a>>2]|0,c[a+4>>2]|0,k,1024);nh(j|0,0,1024)|0;e=c[b>>2]|0;if(e|0?(c[a+56>>2]&1|0)!=0:0){nh(c[e+4>>2]|0,0,c[b+8>>2]<<10|0)|0;e=c[b>>2]|0}d=c[e>>2]|0;if(d|0)gh(d);gh(e);i=n;return}function $d(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;m=i=i+63&-64;i=i+32|0;n=m+16|0;if(!b){n=0;i=o;return n|0}g=b+20|0;d=c[g>>2]|0;if(!d){n=0;i=o;return n|0}h=b+4|0;if(!(c[h>>2]|0)){n=0;i=o;return n|0}j=m+4|0;k=m+8|0;l=m+12|0;f=0;a:while(1){if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=0;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0);if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=1;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0);if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=2;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0);if(d){e=0;do{c[m>>2]=f;c[j>>2]=e;a[k>>0]=3;c[l>>2]=0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];d=de(b,n)|0;e=e+1|0;if(d|0){e=9;break a}d=c[g>>2]|0}while(e>>>0<d>>>0)}else d=0}else d=0}else d=0}else d=0;f=f+1|0;if(f>>>0>=(c[h>>2]|0)>>>0){d=0;e=9;break}}if((e|0)==9){i=o;return d|0}return 0}function ae(a){a=a|0;var b=0,d=0;if(!a){a=-25;return a|0}if(!(c[a>>2]|0)){a=-1;return a|0}if((c[a+4>>2]|0)>>>0<16){a=-2;return a|0}if((c[a+8>>2]|0)==0?c[a+12>>2]|0:0){a=-18;return a|0}b=c[a+20>>2]|0;if(!(c[a+16>>2]|0)){if(b|0){a=-19;return a|0}}else if(b>>>0<8){a=-6;return a|0}if((c[a+24>>2]|0)==0?c[a+28>>2]|0:0){a=-20;return a|0}if((c[a+32>>2]|0)==0?c[a+36>>2]|0:0){a=-21;return a|0}b=c[a+44>>2]|0;if(b>>>0<8){a=-14;return a|0}if(b>>>0>2097152){a=-15;return a|0}d=c[a+48>>2]|0;if(b>>>0<d<<3>>>0){a=-14;return a|0}if((c[a+40>>2]|0)>>>0<3){a=-12;return a|0}if(!d){a=-16;return a|0}if(d>>>0>16777215){a=-17;return a|0}b=c[a+52>>2]|0;if(!b){a=-28;return a|0}a=b>>>0>16777215?-29:0;return a|0}function be(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=i;z=i=i+63&-64;i=i+1104|0;A=z;m=z+1024|0;z=z+1032|0;if((b|0)==0|(e|0)==0){b=-25;i=B;return b|0}y=c[b+8>>2]|0;h=y<<10;do if((y|0?((h>>>0)/(y>>>0)|0|0)==1024:0)?(y=fh(12)|0,c[b>>2]=y,y|0):0){g=ih(A,h)|0;if(!(c[8522]|0))f=34132;else f=c[(oa()|0)+64>>2]|0;c[f>>2]=g;if(g|0){c[A>>2]=0;break}f=c[A>>2]|0;if(f|0){c[c[b>>2]>>2]=f;c[(c[b>>2]|0)+4>>2]=f;c[(c[b>>2]|0)+8>>2]=h;p=c[b+28>>2]|0;nh(A+64|0,0,293)|0;g=A;r=400;s=g+48|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));u=A;c[u>>2]=-222443192;c[u+4>>2]=1779033703;u=A+8|0;c[u>>2]=-2067093701;c[u+4>>2]=-1150833019;u=A+16|0;c[u>>2]=-23791573;c[u+4>>2]=1013904242;u=A+24|0;c[u>>2]=1595750129;c[u+4>>2]=-1521486534;u=A+32|0;c[u>>2]=-1377402159;c[u+4>>2]=1359893119;u=A+40|0;c[u>>2]=725511199;c[u+4>>2]=-1694144372;u=A+48|0;c[u>>2]=-79577749;c[u+4>>2]=528734635;u=A+56|0;c[u>>2]=327033209;c[u+4>>2]=1541459225;c[m>>2]=c[e+48>>2];u=A+352|0;v=A+96|0;w=A+64|0;x=A+72|0;y=A+224|0;c[A+96>>2]=c[m>>2];g=(c[u>>2]|0)+4|0;c[u>>2]=g;c[m>>2]=c[e+4>>2];h=m;n=0;o=4;while(1){j=256-g|0;f=A+96+g|0;if(!(n>>>0>0|(n|0)==0&o>>>0>j>>>0)){t=13;break}qh(f|0,h|0,j|0)|0;c[u>>2]=(c[u>>2]|0)+j;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(o|0,n|0,j|0,0)|0;if((o|0)==(j|0)&(n|0)==0)break;else{h=h+j|0;n=C;o=f}}if((t|0)==13){qh(f|0,h|0,o|0)|0;g=lh(c[u>>2]|0,0,o|0,n|0)|0;c[u>>2]=g}c[m>>2]=c[e+44>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=17;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==17){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}c[m>>2]=c[e+40>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=21;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==21){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}c[m>>2]=19;o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=25;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==25){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}c[m>>2]=p;o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=29;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==29){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}q=e+12|0;c[m>>2]=c[q>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=33;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;p=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=p;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==33){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}p=e+8|0;f=c[p>>2]|0;if(f){h=c[q>>2]|0;a:do if(h){o=0;while(1){n=256-g|0;g=A+96+g|0;if(!(o>>>0>0|(o|0)==0&h>>>0>n>>>0))break;qh(g|0,f|0,n|0)|0;c[u>>2]=(c[u>>2]|0)+n;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;j=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=j;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;j=kh(h|0,o|0,n|0,0)|0;if((h|0)==(n|0)&(o|0)==0)break a;else{f=f+n|0;o=C;h=j}}qh(g|0,f|0,h|0)|0;g=lh(c[u>>2]|0,0,h|0,o|0)|0;c[u>>2]=g}while(0);if(c[e+56>>2]&1){nh(c[p>>2]|0,0,c[q>>2]|0)|0;c[q>>2]=0;g=c[u>>2]|0}}p=e+20|0;c[m>>2]=c[p>>2];o=m;j=0;n=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&n>>>0>h>>>0)){t=45;break}qh(f|0,o|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(n|0,j|0,h|0,0)|0;if((n|0)==(h|0)&(j|0)==0)break;else{o=o+h|0;j=C;n=f}}if((t|0)==45){qh(f|0,o|0,n|0)|0;g=lh(c[u>>2]|0,0,n|0,j|0)|0;c[u>>2]=g}f=c[e+16>>2]|0;b:do if((f|0)!=0?(l=c[p>>2]|0,(l|0)!=0):0){n=0;while(1){j=256-g|0;g=A+96+g|0;if(!(n>>>0>0|(n|0)==0&l>>>0>j>>>0))break;qh(g|0,f|0,j|0)|0;c[u>>2]=(c[u>>2]|0)+j;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;h=kh(l|0,n|0,j|0,0)|0;if((l|0)==(j|0)&(n|0)==0)break b;else{f=f+j|0;n=C;l=h}}qh(g|0,f|0,l|0)|0;g=lh(c[u>>2]|0,0,l|0,n|0)|0;c[u>>2]=g}while(0);p=e+28|0;c[m>>2]=c[p>>2];n=m;j=0;l=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&l>>>0>h>>>0)){t=55;break}qh(f|0,n|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(l|0,j|0,h|0,0)|0;if((l|0)==(h|0)&(j|0)==0)break;else{n=n+h|0;j=C;l=f}}if((t|0)==55){qh(f|0,n|0,l|0)|0;g=lh(c[u>>2]|0,0,l|0,j|0)|0;c[u>>2]=g}o=e+24|0;f=c[o>>2]|0;if(f){h=c[p>>2]|0;c:do if(h){n=0;while(1){l=256-g|0;g=A+96+g|0;if(!(n>>>0>0|(n|0)==0&h>>>0>l>>>0))break;qh(g|0,f|0,l|0)|0;c[u>>2]=(c[u>>2]|0)+l;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;j=kh(h|0,n|0,l|0,0)|0;if((h|0)==(l|0)&(n|0)==0)break c;else{f=f+l|0;n=C;h=j}}qh(g|0,f|0,h|0)|0;g=lh(c[u>>2]|0,0,h|0,n|0)|0;c[u>>2]=g}while(0);if(c[e+56>>2]&2){nh(c[o>>2]|0,0,c[p>>2]|0)|0;c[p>>2]=0;g=c[u>>2]|0}}n=e+36|0;c[m>>2]=c[n>>2];j=0;l=4;while(1){h=256-g|0;f=A+96+g|0;if(!(j>>>0>0|(j|0)==0&l>>>0>h>>>0)){t=67;break}qh(f|0,m|0,h|0)|0;c[u>>2]=(c[u>>2]|0)+h;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;q=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=q;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));g=(c[u>>2]|0)+-128|0;c[u>>2]=g;f=kh(l|0,j|0,h|0,0)|0;if((l|0)==(h|0)&(j|0)==0)break;else{m=m+h|0;j=C;l=f}}if((t|0)==67){qh(f|0,m|0,l|0)|0;g=lh(c[u>>2]|0,0,l|0,j|0)|0;c[u>>2]=g}f=c[e+32>>2]|0;d:do if(f|0?(k=c[n>>2]|0,k|0):0){h=g;l=0;while(1){j=256-h|0;g=A+96+h|0;if(!(l>>>0>0|(l|0)==0&k>>>0>j>>>0))break;qh(g|0,f|0,j|0)|0;c[u>>2]=(c[u>>2]|0)+j;s=w;g=c[s>>2]|0;s=c[s+4>>2]|0;t=lh(g|0,s|0,128,0)|0;r=w;c[r>>2]=t;c[r+4>>2]=C;r=x;r=lh((s>>>0>4294967295|(s|0)==-1&g>>>0>4294967167)&1|0,0,c[r>>2]|0,c[r+4>>2]|0)|0;g=x;c[g>>2]=r;c[g+4>>2]=C;id(A,v);g=v;r=y;s=g+128|0;do{c[g>>2]=c[r>>2];g=g+4|0;r=r+4|0}while((g|0)<(s|0));h=(c[u>>2]|0)+-128|0;c[u>>2]=h;g=kh(k|0,l|0,j|0,0)|0;if((k|0)==(j|0)&(l|0)==0)break d;else{f=f+j|0;l=C;k=g}}qh(g|0,f|0,k|0)|0;y=lh(c[u>>2]|0,0,k|0,l|0)|0;c[u>>2]=y}while(0);jd(A,z,64);j=z+64|0;k=j;y=k;a[y>>0]=0;a[y+1>>0]=0;a[y+2>>0]=0;a[y+3>>0]=0;k=k+4|0;a[k>>0]=0;a[k+1>>0]=0;a[k+2>>0]=0;a[k+3>>0]=0;k=b+20|0;if(c[k>>2]|0){l=z+68|0;m=b+16|0;n=0;do{a[j>>0]=0;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;a[l>>0]=n;a[l+1>>0]=n>>8;a[l+2>>0]=n>>16;a[l+3>>0]=n>>24;ge(A,1024,z,72);f=_(c[m>>2]|0,n)|0;g=c[(c[b>>2]|0)+4>>2]|0;h=0;do{x=A+(h<<3)|0;w=x;x=x+4|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;y=g+(f<<10)+(h<<3)|0;c[y>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[y+4>>2]=x;h=h+1|0}while((h|0)!=128);a[j>>0]=1;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;ge(A,1024,z,72);f=(_(c[m>>2]|0,n)|0)+1|0;g=c[(c[b>>2]|0)+4>>2]|0;h=0;do{x=A+(h<<3)|0;w=x;x=x+4|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;y=g+(f<<10)+(h<<3)|0;c[y>>2]=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;c[y+4>>2]=x;h=h+1|0}while((h|0)!=128);n=n+1|0}while(n>>>0<(c[k>>2]|0)>>>0)}g=z;s=g+72|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(s|0));b=0;i=B;return b|0}}while(0);b=-22;i=B;return b|0}function ce(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;g=0;f=0;i=0;a:while(1){h=f;while(1){k=a[e>>0]|0;f=k+-65|0;f=(0-(k^47)|0)>>>8&63^63|(0-(k^43)|0)>>>8&62^62|((k+65439|0)>>>8^255)&k+185&((122-k|0)>>>8&255^255)|(f>>>8^255)&f&((90-k|0)>>>8&255^255)|((k+65488|0)>>>8^255)&k+4&((57-k|0)>>>8&255^255);f=((0-f|0)>>>8&255^255)&(0-(k^65)|0)>>>8|f;if((f|0)==255)break a;e=e+1|0;g=f+(g<<6)|0;f=h+6|0;if(f>>>0>7)break;else h=f}f=h+-2|0;if(i>>>0>=(c[d>>2]|0)>>>0){e=0;j=10;break}a[b>>0]=g>>>f;b=b+1|0;i=i+1|0}if((j|0)==10)return e|0;if(h>>>0>4){k=0;return k|0}if((1<<h)+-1&g|0){k=0;return k|0}c[d>>2]=i;k=e;return k|0}function de(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0,ca=0,da=0;B=i;m=i=i+63&-64;i=i+4096|0;z=m+3072|0;A=m+2048|0;l=m+1024|0;if(!b){d=0;i=B;return d|0}w=b+12|0;y=fh(c[w>>2]<<3)|0;if(!y){d=-22;i=B;return d|0}nh(z|0,0,1024)|0;nh(A|0,0,1024)|0;n=c[d>>2]|0;x=A;c[x>>2]=n;c[x+4>>2]=0;x=c[d+4>>2]|0;o=A+8|0;c[o>>2]=x;c[o+4>>2]=0;o=a[d+8>>0]|0;e=A+16|0;c[e>>2]=o&255;c[e+4>>2]=0;e=A+24|0;c[e>>2]=c[b+8>>2];c[e+4>>2]=0;e=A+32|0;c[e>>2]=c[b+4>>2];c[e+4>>2]=0;e=A+40|0;c[e>>2]=c[b+28>>2];c[e+4>>2]=0;e=c[w>>2]|0;if(!e)e=0;else{k=A+48|0;f=0;g=0;j=0;do{h=j&127;if(!h){f=lh(f|0,g|0,1,0)|0;g=C;e=k;c[e>>2]=f;c[e+4>>2]=g;nh(m|0,0,1024)|0;nh(l|0,0,1024)|0;ee(z,A,m);ee(z,m,l);e=c[w>>2]|0}t=l+(h<<3)|0;u=c[t+4>>2]|0;v=y+(j<<3)|0;c[v>>2]=c[t>>2];c[v+4>>2]=u;j=j+1|0}while(j>>>0<e>>>0)}r=(n|0)==0;s=o<<24>>24==0;t=r&s;f=t?2:0;u=b+16|0;g=c[u>>2]|0;v=o&255;h=(_(g,x)|0)+f+(_(v,e)|0)|0;if(f>>>0<e>>>0){q=b+20|0;n=o<<24>>24==3;o=v+1|0;l=g;p=h;e=(((h>>>0)%(g>>>0)|0|0)==0?g+-1|0:-1)+h|0;while(1){m=((p>>>0)%(l>>>0)|0|0)==1?p+-1|0:e;j=y+(f<<3)|0;h=c[j>>2]|0;j=yh(c[j+4>>2]|0,0,c[q>>2]|0,0)|0;j=t?x:j;k=t?0:C;g=(j|0)==(x|0)&(k|0)==0;do if(r){if(s){e=f+-1|0;break}e=_(c[w>>2]|0,v)|0;if(g){e=f+-1+e|0;break}else{e=(((f|0)==0)<<31>>31)+e|0;break}}else{e=l-(c[w>>2]|0)|0;if(g){e=f+-1+e|0;break}else{e=(((f|0)==0)<<31>>31)+e|0;break}}while(0);wh(h|0,0,h|0,0)|0;wh(e|0,0,C|0,0)|0;e=kh(e+-1|0,0,C|0,0)|0;if(r|n){g=0;h=0}else{g=_(c[w>>2]|0,o)|0;h=0}e=lh(e|0,C|0,g|0,h|0)|0;e=yh(e|0,C|0,l|0,0)|0;h=c[(c[b>>2]|0)+4>>2]|0;g=wh(l|0,0,j|0,k|0)|0;e=h+(g<<10)+(e<<10)|0;g=h+(p<<10)|0;if(r){qh(z|0,e|0,1024)|0;e=0;do{j=h+(m<<10)+(e<<3)|0;l=z+(e<<3)|0;D=l;k=c[D+4>>2]^c[j+4>>2];c[l>>2]=c[D>>2]^c[j>>2];c[l+4>>2]=k;e=e+1|0}while((e|0)!=128);qh(A|0,z|0,1024)|0;e=0;do{M=e<<4;aa=z+(M<<3)|0;J=aa;L=c[J>>2]|0;J=c[J+4>>2]|0;D=z+((M|4)<<3)|0;V=D;j=c[V>>2]|0;V=c[V+4>>2]|0;T=lh(j|0,V|0,L|0,J|0)|0;P=C;J=ph(L|0,J|0,1)|0;J=wh(J&-2|0,C&1|0,j|0,0)|0;J=lh(T|0,P|0,J|0,C|0)|0;P=C;T=z+((M|12)<<3)|0;L=T;Q=J^c[L>>2];L=P^c[L+4>>2];G=z+((M|8)<<3)|0;l=G;Y=c[l>>2]|0;l=c[l+4>>2]|0;F=lh(L|0,Q|0,Y|0,l|0)|0;H=C;l=ph(Y|0,l|0,1)|0;l=wh(L|0,0,l&-2|0,C&1|0)|0;l=lh(F|0,H|0,l|0,C|0)|0;H=C;j=l^j;V=H^V;F=oh(j|0,V|0,24)|0;Y=C;V=ph(j|0,V|0,40)|0;V=V|F;Y=C|Y;j=lh(V|0,Y|0,J|0,P|0)|0;k=C;P=ph(J|0,P|0,1)|0;P=wh(F|0,0,P&-2|0,C&1|0)|0;P=lh(j|0,k|0,P|0,C|0)|0;k=C;j=aa;c[j>>2]=P;c[j+4>>2]=k;L=P^L;Q=k^Q;k=oh(L|0,Q|0,16)|0;P=C;Q=ph(L|0,Q|0,48)|0;Q=Q|k;P=C|P;L=T;c[L>>2]=Q;c[L+4>>2]=P;P=lh(Q|0,P|0,l|0,H|0)|0;Q=C;H=ph(l|0,H|0,1)|0;H=wh(k|0,0,H&-2|0,C&1|0)|0;H=lh(P|0,Q|0,H|0,C|0)|0;Q=C;P=G;c[P>>2]=H;c[P+4>>2]=Q;V=H^V;Y=Q^Y;Q=oh(V|0,Y|0,63)|0;H=C;Y=ph(V|0,Y|0,1)|0;V=D;c[V>>2]=Y|Q;c[V+4>>2]=C|H;V=z+((M|1)<<3)|0;H=V;Q=c[H>>2]|0;H=c[H+4>>2]|0;Y=z+((M|5)<<3)|0;P=Y;k=c[P>>2]|0;P=c[P+4>>2]|0;l=lh(k|0,P|0,Q|0,H|0)|0;L=C;H=ph(Q|0,H|0,1)|0;H=wh(H&-2|0,C&1|0,k|0,0)|0;H=lh(l|0,L|0,H|0,C|0)|0;L=C;l=z+((M|13)<<3)|0;Q=l;j=H^c[Q>>2];Q=L^c[Q+4>>2];F=z+((M|9)<<3)|0;J=F;S=c[J>>2]|0;J=c[J+4>>2]|0;R=lh(Q|0,j|0,S|0,J|0)|0;N=C;J=ph(S|0,J|0,1)|0;J=wh(Q|0,0,J&-2|0,C&1|0)|0;J=lh(R|0,N|0,J|0,C|0)|0;N=C;k=J^k;P=N^P;R=oh(k|0,P|0,24)|0;S=C;P=ph(k|0,P|0,40)|0;P=P|R;S=C|S;k=lh(P|0,S|0,H|0,L|0)|0;Z=C;L=ph(H|0,L|0,1)|0;L=wh(R|0,0,L&-2|0,C&1|0)|0;L=lh(k|0,Z|0,L|0,C|0)|0;Z=C;k=V;c[k>>2]=L;c[k+4>>2]=Z;Q=L^Q;j=Z^j;Z=oh(Q|0,j|0,16)|0;L=C;j=ph(Q|0,j|0,48)|0;j=j|Z;L=C|L;Q=l;c[Q>>2]=j;c[Q+4>>2]=L;L=lh(j|0,L|0,J|0,N|0)|0;j=C;N=ph(J|0,N|0,1)|0;N=wh(Z|0,0,N&-2|0,C&1|0)|0;N=lh(L|0,j|0,N|0,C|0)|0;j=C;L=F;c[L>>2]=N;c[L+4>>2]=j;P=N^P;S=j^S;j=oh(P|0,S|0,63)|0;N=C;S=ph(P|0,S|0,1)|0;P=Y;c[P>>2]=S|j;c[P+4>>2]=C|N;P=z+((M|2)<<3)|0;N=P;j=c[N>>2]|0;N=c[N+4>>2]|0;S=z+((M|6)<<3)|0;L=S;Z=c[L>>2]|0;L=c[L+4>>2]|0;J=lh(Z|0,L|0,j|0,N|0)|0;Q=C;N=ph(j|0,N|0,1)|0;N=wh(N&-2|0,C&1|0,Z|0,0)|0;N=lh(J|0,Q|0,N|0,C|0)|0;Q=C;J=z+((M|14)<<3)|0;j=J;k=N^c[j>>2];j=Q^c[j+4>>2];R=z+((M|10)<<3)|0;H=R;O=c[H>>2]|0;H=c[H+4>>2]|0;$=lh(j|0,k|0,O|0,H|0)|0;W=C;H=ph(O|0,H|0,1)|0;H=wh(j|0,0,H&-2|0,C&1|0)|0;H=lh($|0,W|0,H|0,C|0)|0;W=C;Z=H^Z;L=W^L;$=oh(Z|0,L|0,24)|0;O=C;L=ph(Z|0,L|0,40)|0;L=L|$;O=C|O;Z=lh(L|0,O|0,N|0,Q|0)|0;ca=C;Q=ph(N|0,Q|0,1)|0;Q=wh($|0,0,Q&-2|0,C&1|0)|0;Q=lh(Z|0,ca|0,Q|0,C|0)|0;ca=C;Z=P;c[Z>>2]=Q;c[Z+4>>2]=ca;j=Q^j;k=ca^k;ca=oh(j|0,k|0,16)|0;Q=C;k=ph(j|0,k|0,48)|0;k=k|ca;Q=C|Q;j=J;c[j>>2]=k;c[j+4>>2]=Q;Q=lh(k|0,Q|0,H|0,W|0)|0;k=C;W=ph(H|0,W|0,1)|0;W=wh(ca|0,0,W&-2|0,C&1|0)|0;W=lh(Q|0,k|0,W|0,C|0)|0;k=C;L=W^L;O=k^O;Q=oh(L|0,O|0,63)|0;ca=C;O=ph(L|0,O|0,1)|0;L=S;c[L>>2]=O|Q;c[L+4>>2]=C|ca;L=z+((M|3)<<3)|0;ca=L;Q=c[ca>>2]|0;ca=c[ca+4>>2]|0;O=z+((M|7)<<3)|0;H=O;j=c[H>>2]|0;H=c[H+4>>2]|0;Z=lh(j|0,H|0,Q|0,ca|0)|0;$=C;ca=ph(Q|0,ca|0,1)|0;ca=wh(ca&-2|0,C&1|0,j|0,0)|0;ca=lh(Z|0,$|0,ca|0,C|0)|0;$=C;Z=z+((M|15)<<3)|0;Q=Z;N=ca^c[Q>>2];Q=$^c[Q+4>>2];M=z+((M|11)<<3)|0;U=M;da=c[U>>2]|0;U=c[U+4>>2]|0;ba=lh(Q|0,N|0,da|0,U|0)|0;I=C;U=ph(da|0,U|0,1)|0;U=wh(Q|0,0,U&-2|0,C&1|0)|0;U=lh(ba|0,I|0,U|0,C|0)|0;I=C;j=U^j;H=I^H;ba=oh(j|0,H|0,24)|0;da=C;H=ph(j|0,H|0,40)|0;H=H|ba;da=C|da;j=lh(H|0,da|0,ca|0,$|0)|0;K=C;$=ph(ca|0,$|0,1)|0;$=wh(ba|0,0,$&-2|0,C&1|0)|0;$=lh(j|0,K|0,$|0,C|0)|0;K=C;j=L;c[j>>2]=$;c[j+4>>2]=K;Q=$^Q;N=K^N;K=oh(Q|0,N|0,16)|0;$=C;N=ph(Q|0,N|0,48)|0;N=N|K;$=C|$;Q=lh(N|0,$|0,U|0,I|0)|0;j=C;I=ph(U|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(Q|0,j|0,I|0,C|0)|0;j=C;H=I^H;da=j^da;Q=oh(H|0,da|0,63)|0;K=C;da=ph(H|0,da|0,1)|0;Q=da|Q;K=C|K;da=O;c[da>>2]=Q;c[da+4>>2]=K;da=aa;H=c[da>>2]|0;da=c[da+4>>2]|0;U=Y;ba=c[U>>2]|0;U=c[U+4>>2]|0;ca=lh(ba|0,U|0,H|0,da|0)|0;X=C;da=ph(H|0,da|0,1)|0;da=wh(da&-2|0,C&1|0,ba|0,0)|0;da=lh(ca|0,X|0,da|0,C|0)|0;X=C;N=N^da;$=$^X;ca=lh($|0,N|0,W|0,k|0)|0;H=C;k=ph(W|0,k|0,1)|0;k=wh($|0,0,k&-2|0,C&1|0)|0;k=lh(ca|0,H|0,k|0,C|0)|0;H=C;ba=k^ba;U=H^U;ca=oh(ba|0,U|0,24)|0;W=C;U=ph(ba|0,U|0,40)|0;U=U|ca;W=C|W;ba=lh(U|0,W|0,da|0,X|0)|0;E=C;X=ph(da|0,X|0,1)|0;X=wh(ca|0,0,X&-2|0,C&1|0)|0;X=lh(ba|0,E|0,X|0,C|0)|0;E=C;c[aa>>2]=X;c[aa+4>>2]=E;$=X^$;N=E^N;E=oh($|0,N|0,16)|0;X=C;N=ph($|0,N|0,48)|0;N=N|E;X=C|X;c[Z>>2]=N;c[Z+4>>2]=X;X=lh(N|0,X|0,k|0,H|0)|0;N=C;H=ph(k|0,H|0,1)|0;H=wh(E|0,0,H&-2|0,C&1|0)|0;H=lh(X|0,N|0,H|0,C|0)|0;N=C;c[R>>2]=H;c[R+4>>2]=N;U=H^U;W=N^W;N=oh(U|0,W|0,63)|0;H=C;W=ph(U|0,W|0,1)|0;c[Y>>2]=W|N;c[Y+4>>2]=C|H;Y=V;H=c[Y>>2]|0;Y=c[Y+4>>2]|0;N=S;W=c[N>>2]|0;N=c[N+4>>2]|0;U=lh(W|0,N|0,H|0,Y|0)|0;R=C;Y=ph(H|0,Y|0,1)|0;Y=wh(Y&-2|0,C&1|0,W|0,0)|0;Y=lh(U|0,R|0,Y|0,C|0)|0;R=C;U=T;H=Y^c[U>>2];U=R^c[U+4>>2];X=lh(U|0,H|0,I|0,j|0)|0;E=C;j=ph(I|0,j|0,1)|0;j=wh(j&-2|0,C&1|0,U|0,0)|0;j=lh(X|0,E|0,j|0,C|0)|0;E=C;W=j^W;N=E^N;X=oh(W|0,N|0,24)|0;I=C;N=ph(W|0,N|0,40)|0;N=N|X;I=C|I;W=lh(N|0,I|0,Y|0,R|0)|0;k=C;R=ph(Y|0,R|0,1)|0;R=wh(X|0,0,R&-2|0,C&1|0)|0;R=lh(W|0,k|0,R|0,C|0)|0;k=C;c[V>>2]=R;c[V+4>>2]=k;U=R^U;H=k^H;k=oh(U|0,H|0,16)|0;R=C;H=ph(U|0,H|0,48)|0;H=H|k;R=C|R;c[T>>2]=H;c[T+4>>2]=R;R=lh(H|0,R|0,j|0,E|0)|0;H=C;E=ph(j|0,E|0,1)|0;E=wh(k|0,0,E&-2|0,C&1|0)|0;E=lh(R|0,H|0,E|0,C|0)|0;H=C;c[M>>2]=E;c[M+4>>2]=H;N=E^N;I=H^I;H=oh(N|0,I|0,63)|0;E=C;I=ph(N|0,I|0,1)|0;c[S>>2]=I|H;c[S+4>>2]=C|E;S=P;E=c[S>>2]|0;S=c[S+4>>2]|0;H=lh(Q|0,K|0,E|0,S|0)|0;I=C;S=ph(E|0,S|0,1)|0;S=wh(S&-2|0,C&1|0,Q|0,0)|0;S=lh(H|0,I|0,S|0,C|0)|0;I=C;H=l;E=S^c[H>>2];H=I^c[H+4>>2];N=G;M=c[N>>2]|0;N=c[N+4>>2]|0;R=lh(H|0,E|0,M|0,N|0)|0;k=C;N=ph(M|0,N|0,1)|0;N=wh(H|0,0,N&-2|0,C&1|0)|0;N=lh(R|0,k|0,N|0,C|0)|0;k=C;Q=N^Q;K=k^K;R=oh(Q|0,K|0,24)|0;M=C;K=ph(Q|0,K|0,40)|0;K=K|R;M=C|M;Q=lh(K|0,M|0,S|0,I|0)|0;j=C;I=ph(S|0,I|0,1)|0;I=wh(R|0,0,I&-2|0,C&1|0)|0;I=lh(Q|0,j|0,I|0,C|0)|0;j=C;c[P>>2]=I;c[P+4>>2]=j;H=I^H;E=j^E;j=oh(H|0,E|0,16)|0;I=C;E=ph(H|0,E|0,48)|0;E=E|j;I=C|I;c[l>>2]=E;c[l+4>>2]=I;I=lh(E|0,I|0,N|0,k|0)|0;E=C;k=ph(N|0,k|0,1)|0;k=wh(j|0,0,k&-2|0,C&1|0)|0;k=lh(I|0,E|0,k|0,C|0)|0;E=C;c[G>>2]=k;c[G+4>>2]=E;K=k^K;M=E^M;E=oh(K|0,M|0,63)|0;k=C;M=ph(K|0,M|0,1)|0;c[O>>2]=M|E;c[O+4>>2]=C|k;O=L;k=c[O>>2]|0;O=c[O+4>>2]|0;E=D;M=c[E>>2]|0;E=c[E+4>>2]|0;K=lh(M|0,E|0,k|0,O|0)|0;G=C;O=ph(k|0,O|0,1)|0;O=wh(O&-2|0,C&1|0,M|0,0)|0;O=lh(K|0,G|0,O|0,C|0)|0;G=C;K=J;k=O^c[K>>2];K=G^c[K+4>>2];I=F;j=c[I>>2]|0;I=c[I+4>>2]|0;N=lh(K|0,k|0,j|0,I|0)|0;l=C;I=ph(j|0,I|0,1)|0;I=wh(K|0,0,I&-2|0,C&1|0)|0;I=lh(N|0,l|0,I|0,C|0)|0;l=C;M=I^M;E=l^E;N=oh(M|0,E|0,24)|0;j=C;E=ph(M|0,E|0,40)|0;E=E|N;j=C|j;M=lh(E|0,j|0,O|0,G|0)|0;H=C;G=ph(O|0,G|0,1)|0;G=wh(N|0,0,G&-2|0,C&1|0)|0;G=lh(M|0,H|0,G|0,C|0)|0;H=C;c[L>>2]=G;c[L+4>>2]=H;K=G^K;k=H^k;H=oh(K|0,k|0,16)|0;G=C;k=ph(K|0,k|0,48)|0;k=k|H;G=C|G;c[J>>2]=k;c[J+4>>2]=G;G=lh(k|0,G|0,I|0,l|0)|0;k=C;l=ph(I|0,l|0,1)|0;l=wh(H|0,0,l&-2|0,C&1|0)|0;l=lh(G|0,k|0,l|0,C|0)|0;k=C;c[F>>2]=l;c[F+4>>2]=k;E=l^E;j=k^j;k=oh(E|0,j|0,63)|0;l=C;j=ph(E|0,j|0,1)|0;c[D>>2]=j|k;c[D+4>>2]=C|l;e=e+1|0}while((e|0)!=8);e=0;do{S=e<<1;D=z+(S<<3)|0;V=D;T=c[V>>2]|0;V=c[V+4>>2]|0;da=z+(S+32<<3)|0;J=da;aa=c[J>>2]|0;J=c[J+4>>2]|0;L=lh(aa|0,J|0,T|0,V|0)|0;P=C;V=ph(T|0,V|0,1)|0;V=wh(V&-2|0,C&1|0,aa|0,0)|0;V=lh(L|0,P|0,V|0,C|0)|0;P=C;L=z+(S+96<<3)|0;T=L;O=V^c[T>>2];T=P^c[T+4>>2];Y=z+(S+64<<3)|0;ca=Y;G=c[ca>>2]|0;ca=c[ca+4>>2]|0;Z=lh(T|0,O|0,G|0,ca|0)|0;X=C;ca=ph(G|0,ca|0,1)|0;ca=wh(T|0,0,ca&-2|0,C&1|0)|0;ca=lh(Z|0,X|0,ca|0,C|0)|0;X=C;aa=ca^aa;J=X^J;Z=oh(aa|0,J|0,24)|0;G=C;J=ph(aa|0,J|0,40)|0;J=J|Z;G=C|G;aa=lh(J|0,G|0,V|0,P|0)|0;ba=C;P=ph(V|0,P|0,1)|0;P=wh(Z|0,0,P&-2|0,C&1|0)|0;P=lh(aa|0,ba|0,P|0,C|0)|0;ba=C;aa=D;c[aa>>2]=P;c[aa+4>>2]=ba;T=P^T;O=ba^O;ba=oh(T|0,O|0,16)|0;P=C;O=ph(T|0,O|0,48)|0;O=O|ba;P=C|P;T=L;c[T>>2]=O;c[T+4>>2]=P;P=lh(O|0,P|0,ca|0,X|0)|0;O=C;X=ph(ca|0,X|0,1)|0;X=wh(ba|0,0,X&-2|0,C&1|0)|0;X=lh(P|0,O|0,X|0,C|0)|0;O=C;P=Y;c[P>>2]=X;c[P+4>>2]=O;J=X^J;G=O^G;O=oh(J|0,G|0,63)|0;X=C;G=ph(J|0,G|0,1)|0;J=da;c[J>>2]=G|O;c[J+4>>2]=C|X;J=z+((S|1)<<3)|0;X=J;O=c[X>>2]|0;X=c[X+4>>2]|0;G=z+(S+33<<3)|0;P=G;ba=c[P>>2]|0;P=c[P+4>>2]|0;ca=lh(ba|0,P|0,O|0,X|0)|0;T=C;X=ph(O|0,X|0,1)|0;X=wh(X&-2|0,C&1|0,ba|0,0)|0;X=lh(ca|0,T|0,X|0,C|0)|0;T=C;ca=z+(S+97<<3)|0;O=ca;aa=X^c[O>>2];O=T^c[O+4>>2];Z=z+(S+65<<3)|0;V=Z;M=c[V>>2]|0;V=c[V+4>>2]|0;N=lh(O|0,aa|0,M|0,V|0)|0;R=C;V=ph(M|0,V|0,1)|0;V=wh(O|0,0,V&-2|0,C&1|0)|0;V=lh(N|0,R|0,V|0,C|0)|0;R=C;ba=V^ba;P=R^P;N=oh(ba|0,P|0,24)|0;M=C;P=ph(ba|0,P|0,40)|0;P=P|N;M=C|M;ba=lh(P|0,M|0,X|0,T|0)|0;F=C;T=ph(X|0,T|0,1)|0;T=wh(N|0,0,T&-2|0,C&1|0)|0;T=lh(ba|0,F|0,T|0,C|0)|0;F=C;ba=J;c[ba>>2]=T;c[ba+4>>2]=F;O=T^O;aa=F^aa;F=oh(O|0,aa|0,16)|0;T=C;aa=ph(O|0,aa|0,48)|0;aa=aa|F;T=C|T;O=ca;c[O>>2]=aa;c[O+4>>2]=T;T=lh(aa|0,T|0,V|0,R|0)|0;aa=C;R=ph(V|0,R|0,1)|0;R=wh(F|0,0,R&-2|0,C&1|0)|0;R=lh(T|0,aa|0,R|0,C|0)|0;aa=C;T=Z;c[T>>2]=R;c[T+4>>2]=aa;P=R^P;M=aa^M;aa=oh(P|0,M|0,63)|0;R=C;M=ph(P|0,M|0,1)|0;P=G;c[P>>2]=M|aa;c[P+4>>2]=C|R;P=z+(S+16<<3)|0;R=P;aa=c[R>>2]|0;R=c[R+4>>2]|0;M=z+(S+48<<3)|0;T=M;F=c[T>>2]|0;T=c[T+4>>2]|0;V=lh(F|0,T|0,aa|0,R|0)|0;O=C;R=ph(aa|0,R|0,1)|0;R=wh(R&-2|0,C&1|0,F|0,0)|0;R=lh(V|0,O|0,R|0,C|0)|0;O=C;V=z+(S+112<<3)|0;aa=V;ba=R^c[aa>>2];aa=O^c[aa+4>>2];N=z+(S+80<<3)|0;X=N;Q=c[X>>2]|0;X=c[X+4>>2]|0;E=lh(aa|0,ba|0,Q|0,X|0)|0;I=C;X=ph(Q|0,X|0,1)|0;X=wh(aa|0,0,X&-2|0,C&1|0)|0;X=lh(E|0,I|0,X|0,C|0)|0;I=C;F=X^F;T=I^T;E=oh(F|0,T|0,24)|0;Q=C;T=ph(F|0,T|0,40)|0;T=T|E;Q=C|Q;F=lh(T|0,Q|0,R|0,O|0)|0;k=C;O=ph(R|0,O|0,1)|0;O=wh(E|0,0,O&-2|0,C&1|0)|0;O=lh(F|0,k|0,O|0,C|0)|0;k=C;F=P;c[F>>2]=O;c[F+4>>2]=k;aa=O^aa;ba=k^ba;k=oh(aa|0,ba|0,16)|0;O=C;ba=ph(aa|0,ba|0,48)|0;ba=ba|k;O=C|O;aa=V;c[aa>>2]=ba;c[aa+4>>2]=O;O=lh(ba|0,O|0,X|0,I|0)|0;ba=C;I=ph(X|0,I|0,1)|0;I=wh(k|0,0,I&-2|0,C&1|0)|0;I=lh(O|0,ba|0,I|0,C|0)|0;ba=C;T=I^T;Q=ba^Q;O=oh(T|0,Q|0,63)|0;k=C;Q=ph(T|0,Q|0,1)|0;T=M;c[T>>2]=Q|O;c[T+4>>2]=C|k;T=z+(S+17<<3)|0;k=T;O=c[k>>2]|0;k=c[k+4>>2]|0;Q=z+(S+49<<3)|0;X=Q;aa=c[X>>2]|0;X=c[X+4>>2]|0;F=lh(aa|0,X|0,O|0,k|0)|0;E=C;k=ph(O|0,k|0,1)|0;k=wh(k&-2|0,C&1|0,aa|0,0)|0;k=lh(F|0,E|0,k|0,C|0)|0;E=C;F=z+(S+113<<3)|0;O=F;R=k^c[O>>2];O=E^c[O+4>>2];S=z+(S+81<<3)|0;K=S;j=c[K>>2]|0;K=c[K+4>>2]|0;l=lh(O|0,R|0,j|0,K|0)|0;W=C;K=ph(j|0,K|0,1)|0;K=wh(O|0,0,K&-2|0,C&1|0)|0;K=lh(l|0,W|0,K|0,C|0)|0;W=C;aa=K^aa;X=W^X;l=oh(aa|0,X|0,24)|0;j=C;X=ph(aa|0,X|0,40)|0;X=X|l;j=C|j;aa=lh(X|0,j|0,k|0,E|0)|0;U=C;E=ph(k|0,E|0,1)|0;E=wh(l|0,0,E&-2|0,C&1|0)|0;E=lh(aa|0,U|0,E|0,C|0)|0;U=C;aa=T;c[aa>>2]=E;c[aa+4>>2]=U;O=E^O;R=U^R;U=oh(O|0,R|0,16)|0;E=C;R=ph(O|0,R|0,48)|0;R=R|U;E=C|E;O=lh(R|0,E|0,K|0,W|0)|0;aa=C;W=ph(K|0,W|0,1)|0;W=wh(U|0,0,W&-2|0,C&1|0)|0;W=lh(O|0,aa|0,W|0,C|0)|0;aa=C;X=W^X;j=aa^j;O=oh(X|0,j|0,63)|0;U=C;j=ph(X|0,j|0,1)|0;O=j|O;U=C|U;j=Q;c[j>>2]=O;c[j+4>>2]=U;j=D;X=c[j>>2]|0;j=c[j+4>>2]|0;K=G;l=c[K>>2]|0;K=c[K+4>>2]|0;k=lh(l|0,K|0,X|0,j|0)|0;H=C;j=ph(X|0,j|0,1)|0;j=wh(j&-2|0,C&1|0,l|0,0)|0;j=lh(k|0,H|0,j|0,C|0)|0;H=C;R=R^j;E=E^H;k=lh(E|0,R|0,I|0,ba|0)|0;X=C;ba=ph(I|0,ba|0,1)|0;ba=wh(E|0,0,ba&-2|0,C&1|0)|0;ba=lh(k|0,X|0,ba|0,C|0)|0;X=C;l=ba^l;K=X^K;k=oh(l|0,K|0,24)|0;I=C;K=ph(l|0,K|0,40)|0;K=K|k;I=C|I;l=lh(K|0,I|0,j|0,H|0)|0;$=C;H=ph(j|0,H|0,1)|0;H=wh(k|0,0,H&-2|0,C&1|0)|0;H=lh(l|0,$|0,H|0,C|0)|0;$=C;c[D>>2]=H;c[D+4>>2]=$;E=H^E;R=$^R;$=oh(E|0,R|0,16)|0;H=C;R=ph(E|0,R|0,48)|0;R=R|$;H=C|H;c[F>>2]=R;c[F+4>>2]=H;H=lh(R|0,H|0,ba|0,X|0)|0;R=C;X=ph(ba|0,X|0,1)|0;X=wh($|0,0,X&-2|0,C&1|0)|0;X=lh(H|0,R|0,X|0,C|0)|0;R=C;c[N>>2]=X;c[N+4>>2]=R;K=X^K;I=R^I;R=oh(K|0,I|0,63)|0;X=C;I=ph(K|0,I|0,1)|0;c[G>>2]=I|R;c[G+4>>2]=C|X;G=J;X=c[G>>2]|0;G=c[G+4>>2]|0;R=M;I=c[R>>2]|0;R=c[R+4>>2]|0;K=lh(I|0,R|0,X|0,G|0)|0;N=C;G=ph(X|0,G|0,1)|0;G=wh(G&-2|0,C&1|0,I|0,0)|0;G=lh(K|0,N|0,G|0,C|0)|0;N=C;K=L;X=G^c[K>>2];K=N^c[K+4>>2];H=lh(K|0,X|0,W|0,aa|0)|0;$=C;aa=ph(W|0,aa|0,1)|0;aa=wh(aa&-2|0,C&1|0,K|0,0)|0;aa=lh(H|0,$|0,aa|0,C|0)|0;$=C;I=aa^I;R=$^R;H=oh(I|0,R|0,24)|0;W=C;R=ph(I|0,R|0,40)|0;R=R|H;W=C|W;I=lh(R|0,W|0,G|0,N|0)|0;ba=C;N=ph(G|0,N|0,1)|0;N=wh(H|0,0,N&-2|0,C&1|0)|0;N=lh(I|0,ba|0,N|0,C|0)|0;ba=C;c[J>>2]=N;c[J+4>>2]=ba;K=N^K;X=ba^X;ba=oh(K|0,X|0,16)|0;N=C;X=ph(K|0,X|0,48)|0;X=X|ba;N=C|N;c[L>>2]=X;c[L+4>>2]=N;N=lh(X|0,N|0,aa|0,$|0)|0;X=C;$=ph(aa|0,$|0,1)|0;$=wh(ba|0,0,$&-2|0,C&1|0)|0;$=lh(N|0,X|0,$|0,C|0)|0;X=C;c[S>>2]=$;c[S+4>>2]=X;R=$^R;W=X^W;X=oh(R|0,W|0,63)|0;$=C;W=ph(R|0,W|0,1)|0;c[M>>2]=W|X;c[M+4>>2]=C|$;M=P;$=c[M>>2]|0;M=c[M+4>>2]|0;X=lh(O|0,U|0,$|0,M|0)|0;W=C;M=ph($|0,M|0,1)|0;M=wh(M&-2|0,C&1|0,O|0,0)|0;M=lh(X|0,W|0,M|0,C|0)|0;W=C;X=ca;$=M^c[X>>2];X=W^c[X+4>>2];R=Y;S=c[R>>2]|0;R=c[R+4>>2]|0;N=lh(X|0,$|0,S|0,R|0)|0;ba=C;R=ph(S|0,R|0,1)|0;R=wh(X|0,0,R&-2|0,C&1|0)|0;R=lh(N|0,ba|0,R|0,C|0)|0;ba=C;O=R^O;U=ba^U;N=oh(O|0,U|0,24)|0;S=C;U=ph(O|0,U|0,40)|0;U=U|N;S=C|S;O=lh(U|0,S|0,M|0,W|0)|0;aa=C;W=ph(M|0,W|0,1)|0;W=wh(N|0,0,W&-2|0,C&1|0)|0;W=lh(O|0,aa|0,W|0,C|0)|0;aa=C;c[P>>2]=W;c[P+4>>2]=aa;X=W^X;$=aa^$;aa=oh(X|0,$|0,16)|0;W=C;$=ph(X|0,$|0,48)|0;$=$|aa;W=C|W;c[ca>>2]=$;c[ca+4>>2]=W;W=lh($|0,W|0,R|0,ba|0)|0;$=C;ba=ph(R|0,ba|0,1)|0;ba=wh(aa|0,0,ba&-2|0,C&1|0)|0;ba=lh(W|0,$|0,ba|0,C|0)|0;$=C;c[Y>>2]=ba;c[Y+4>>2]=$;U=ba^U;S=$^S;$=oh(U|0,S|0,63)|0;ba=C;S=ph(U|0,S|0,1)|0;c[Q>>2]=S|$;c[Q+4>>2]=C|ba;Q=T;ba=c[Q>>2]|0;Q=c[Q+4>>2]|0;$=da;S=c[$>>2]|0;$=c[$+4>>2]|0;U=lh(S|0,$|0,ba|0,Q|0)|0;Y=C;Q=ph(ba|0,Q|0,1)|0;Q=wh(Q&-2|0,C&1|0,S|0,0)|0;Q=lh(U|0,Y|0,Q|0,C|0)|0;Y=C;U=V;ba=Q^c[U>>2];U=Y^c[U+4>>2];W=Z;aa=c[W>>2]|0;W=c[W+4>>2]|0;R=lh(U|0,ba|0,aa|0,W|0)|0;ca=C;W=ph(aa|0,W|0,1)|0;W=wh(U|0,0,W&-2|0,C&1|0)|0;W=lh(R|0,ca|0,W|0,C|0)|0;ca=C;S=W^S;$=ca^$;R=oh(S|0,$|0,24)|0;aa=C;$=ph(S|0,$|0,40)|0;$=$|R;aa=C|aa;S=lh($|0,aa|0,Q|0,Y|0)|0;X=C;Y=ph(Q|0,Y|0,1)|0;Y=wh(R|0,0,Y&-2|0,C&1|0)|0;Y=lh(S|0,X|0,Y|0,C|0)|0;X=C;c[T>>2]=Y;c[T+4>>2]=X;U=Y^U;ba=X^ba;X=oh(U|0,ba|0,16)|0;Y=C;ba=ph(U|0,ba|0,48)|0;ba=ba|X;Y=C|Y;c[V>>2]=ba;c[V+4>>2]=Y;Y=lh(ba|0,Y|0,W|0,ca|0)|0;ba=C;ca=ph(W|0,ca|0,1)|0;ca=wh(X|0,0,ca&-2|0,C&1|0)|0;ca=lh(Y|0,ba|0,ca|0,C|0)|0;ba=C;c[Z>>2]=ca;c[Z+4>>2]=ba;$=ca^$;aa=ba^aa;ba=oh($|0,aa|0,63)|0;ca=C;aa=ph($|0,aa|0,1)|0;c[da>>2]=aa|ba;c[da+4>>2]=C|ca;e=e+1|0}while((e|0)!=8);qh(g|0,A|0,1024)|0;e=0;do{ba=z+(e<<3)|0;da=h+(p<<10)+(e<<3)|0;aa=da;ca=c[aa+4>>2]^c[ba+4>>2];c[da>>2]=c[aa>>2]^c[ba>>2];c[da+4>>2]=ca;e=e+1|0}while((e|0)!=128)}else ee(h+(m<<10)|0,e,g);e=f+1|0;if(e>>>0>=(c[w>>2]|0)>>>0)break;l=c[u>>2]|0;p=p+1|0;f=e;e=m+1|0}c[d+12>>2]=f}gh(y);da=0;i=B;return da|0}
function id(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;A=b;w=A;w=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;A=A+4|0;A=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;i=b+8|0;e=i;e=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;i=i+4|0;i=d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24;P=b+16|0;R=P;R=d[R>>0]|d[R+1>>0]<<8|d[R+2>>0]<<16|d[R+3>>0]<<24;P=P+4|0;P=d[P>>0]|d[P+1>>0]<<8|d[P+2>>0]<<16|d[P+3>>0]<<24;F=b+24|0;H=F;H=d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24;F=F+4|0;F=d[F>>0]|d[F+1>>0]<<8|d[F+2>>0]<<16|d[F+3>>0]<<24;j=b+32|0;g=j;g=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;j=j+4|0;j=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;o=b+40|0;k=o;k=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;o=o+4|0;o=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;z=b+48|0;U=z;U=d[U>>0]|d[U+1>>0]<<8|d[U+2>>0]<<16|d[U+3>>0]<<24;z=z+4|0;z=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;K=b+56|0;M=K;M=d[M>>0]|d[M+1>>0]<<8|d[M+2>>0]<<16|d[M+3>>0]<<24;K=K+4|0;K=d[K>>0]|d[K+1>>0]<<8|d[K+2>>0]<<16|d[K+3>>0]<<24;n=b+64|0;$=n;$=d[$>>0]|d[$+1>>0]<<8|d[$+2>>0]<<16|d[$+3>>0]<<24;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;B=b+72|0;y=B;y=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;B=B+4|0;B=d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24;t=b+80|0;ca=t;ca=d[ca>>0]|d[ca+1>>0]<<8|d[ca+2>>0]<<16|d[ca+3>>0]<<24;t=t+4|0;t=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;u=b+88|0;q=u;q=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;u=u+4|0;u=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;V=b+96|0;O=V;O=d[O>>0]|d[O+1>>0]<<8|d[O+2>>0]<<16|d[O+3>>0]<<24;V=V+4|0;V=d[V>>0]|d[V+1>>0]<<8|d[V+2>>0]<<16|d[V+3>>0]<<24;v=b+104|0;s=v;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;v=v+4|0;v=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;p=b+112|0;m=p;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;p=p+4|0;p=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;h=b+120|0;Y=h;Y=d[Y>>0]|d[Y+1>>0]<<8|d[Y+2>>0]<<16|d[Y+3>>0]<<24;h=h+4|0;h=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;sa=a;J=a+8|0;oa=J;na=c[oa>>2]|0;oa=c[oa+4>>2]|0;E=a+16|0;ka=E;ja=c[ka>>2]|0;ka=c[ka+4>>2]|0;x=a+24|0;ga=x;fa=c[ga>>2]|0;ga=c[ga+4>>2]|0;r=a+32|0;ma=r;la=c[ma>>2]|0;ma=c[ma+4>>2]|0;l=a+40|0;ia=l;ha=c[ia>>2]|0;ia=c[ia+4>>2]|0;f=a+48|0;ua=f;ta=c[ua>>2]|0;ua=c[ua+4>>2]|0;b=a+56|0;qa=b;pa=c[qa>>2]|0;qa=c[qa+4>>2]|0;ba=a+64|0;aa=c[ba>>2]^-1377402159;ba=c[ba+4>>2]^1359893119;_=a+72|0;Z=c[_>>2]^725511199;_=c[_+4>>2]^-1694144372;X=a+80|0;W=c[X>>2]^-79577749;X=c[X+4>>2]^528734635;ea=a+88|0;da=c[ea>>2]^327033209;ea=c[ea+4>>2]^1541459225;sa=lh(la|0,ma|0,c[sa>>2]|0,c[sa+4>>2]|0)|0;sa=lh(sa|0,C|0,w|0,A|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,-205731576,1779033703)|0;T=C;la=la^S;ma=ma^T;N=oh(la|0,ma|0,24)|0;Q=C;ma=ph(la|0,ma|0,40)|0;N=ma|N;Q=C|Q;ra=lh(N|0,Q|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,e|0,i|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;N=N^T;Q=Q^S;aa=oh(N|0,Q|0,63)|0;ba=C;Q=ph(N|0,Q|0,1)|0;aa=Q|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,R|0,P|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,-2067093701,-1150833019)|0;N=C;ha=ha^Q;ia=ia^N;I=oh(ha|0,ia|0,24)|0;L=C;ia=ph(ha|0,ia|0,40)|0;I=ia|I;L=C|L;na=lh(I|0,L|0,oa|0,na|0)|0;na=lh(na|0,C|0,H|0,F|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;I=I^N;L=L^Q;Z=oh(I|0,L|0,63)|0;_=C;L=ph(I|0,L|0,1)|0;Z=L|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,g|0,j|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,-23791573,1013904242)|0;I=C;ta=ta^L;ua=ua^I;D=oh(ta|0,ua|0,24)|0;G=C;ua=ph(ta|0,ua|0,40)|0;D=ua|D;G=C|G;ja=lh(D|0,G|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,k|0,o|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;D=D^I;G=G^L;W=oh(D|0,G|0,63)|0;X=C;G=ph(D|0,G|0,1)|0;W=G|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,U|0,z|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,1595750129,-1521486534)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,M|0,K|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,$|0,n|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,y|0,B|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,ca|0,t|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,q|0,u|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,O|0,V|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,s|0,v|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,m|0,p|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,Y|0,h|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,m|0,p|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,ca|0,t|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,g|0,j|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,$|0,n|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,y|0,B|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,Y|0,h|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,s|0,v|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,U|0,z|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,e|0,i|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,O|0,V|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,w|0,A|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,R|0,P|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,q|0,u|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,M|0,K|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,k|0,o|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,H|0,F|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,q|0,u|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,$|0,n|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,O|0,V|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,w|0,A|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,k|0,o|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,R|0,P|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,Y|0,h|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,s|0,v|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,ca|0,t|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,m|0,p|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,H|0,F|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,U|0,z|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,M|0,K|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,e|0,i|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,y|0,B|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,g|0,j|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,M|0,K|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,y|0,B|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,H|0,F|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,e|0,i|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,s|0,v|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,O|0,V|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,q|0,u|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,m|0,p|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,R|0,P|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,U|0,z|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,k|0,o|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,ca|0,t|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,g|0,j|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,w|0,A|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,Y|0,h|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,$|0,n|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,y|0,B|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,w|0,A|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,k|0,o|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,M|0,K|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,R|0,P|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,g|0,j|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,ca|0,t|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,Y|0,h|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,m|0,p|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,e|0,i|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,q|0,u|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,O|0,V|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,U|0,z|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,$|0,n|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,H|0,F|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,s|0,v|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,R|0,P|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,O|0,V|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,U|0,z|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,ca|0,t|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,w|0,A|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,q|0,u|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,$|0,n|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,H|0,F|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,g|0,j|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,s|0,v|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,M|0,K|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,k|0,o|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,Y|0,h|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,m|0,p|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,e|0,i|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,y|0,B|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,O|0,V|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,k|0,o|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,e|0,i|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,Y|0,h|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,m|0,p|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,s|0,v|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,g|0,j|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,ca|0,t|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,w|0,A|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,M|0,K|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,U|0,z|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,H|0,F|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,y|0,B|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,R|0,P|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,$|0,n|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,q|0,u|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,s|0,v|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,q|0,u|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,M|0,K|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,m|0,p|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,O|0,V|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,e|0,i|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,H|0,F|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,y|0,B|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,k|0,o|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,w|0,A|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,Y|0,h|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,g|0,j|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,$|0,n|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,U|0,z|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,R|0,P|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,ca|0,t|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,U|0,z|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,Y|0,h|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,m|0,p|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,y|0,B|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,q|0,u|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,H|0,F|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,w|0,A|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,$|0,n|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,O|0,V|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,R|0,P|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,s|0,v|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,M|0,K|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,e|0,i|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,g|0,j|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,ca|0,t|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,k|0,o|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,ca|0,t|0)|0;ra=C;X=X^sa;W=W^ra;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;va=oh(ua|0,ta|0,24)|0;wa=C;ta=ph(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,R|0,P|0)|0;sa=C;W=W^ra;X=X^sa;ta=oh(W|0,X|0,16)|0;ua=C;X=ph(W|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=lh(ta|0,ua|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;X=oh(va|0,wa|0,63)|0;W=C;wa=ph(va|0,wa|0,1)|0;X=wa|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,$|0,n|0)|0;na=C;ea=ea^oa;da=da^na;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;wa=oh(qa|0,pa|0,24)|0;va=C;pa=ph(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,g|0,j|0)|0;oa=C;da=da^na;ea=ea^oa;pa=oh(da|0,ea|0,16)|0;qa=C;ea=ph(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;N=lh(pa|0,qa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ea=oh(wa|0,va|0,63)|0;da=C;va=ph(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,M|0,K|0)|0;ja=C;ba=ba^ka;aa=aa^ja;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;va=oh(ma|0,la|0,24)|0;wa=C;la=ph(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,U|0,z|0)|0;ka=C;aa=aa^ja;ba=ba^ka;la=oh(aa|0,ba|0,16)|0;ma=C;ba=ph(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;I=lh(la|0,ma|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ba=oh(va|0,wa|0,63)|0;aa=C;wa=ph(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,e|0,i|0)|0;fa=C;_=_^ga;Z=Z^fa;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;wa=oh(ia|0,ha|0,24)|0;va=C;ha=ph(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,k|0,o|0)|0;ga=C;Z=Z^fa;_=_^ga;ha=oh(Z|0,_|0,16)|0;ia=C;_=ph(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;D=lh(ha|0,ia|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;_=oh(wa|0,va|0,63)|0;Z=C;va=ph(wa|0,va|0,1)|0;_=va|_;Z=C|Z;sa=lh(ea|0,da|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,Y|0,h|0)|0;ra=C;ha=ha^sa;ia=ia^ra;L=lh(ia|0,ha|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;va=oh(ea|0,da|0,24)|0;wa=C;da=ph(ea|0,da|0,40)|0;va=da|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,q|0,u|0)|0;sa=C;ia=ia^ra;ha=ha^sa;da=oh(ia|0,ha|0,16)|0;ea=C;ha=ph(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;I=lh(da|0,ea|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;ha=oh(va|0,wa|0,63)|0;ia=C;wa=ph(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=lh(ba|0,aa|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,y|0,B|0)|0;na=C;ta=ta^oa;ua=ua^na;G=lh(ua|0,ta|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;wa=oh(ba|0,aa|0,24)|0;va=C;aa=ph(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,m|0,p|0)|0;oa=C;ua=ua^na;ta=ta^oa;aa=oh(ua|0,ta|0,16)|0;ba=C;ta=ph(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;D=lh(aa|0,ba|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ta=oh(wa|0,va|0,63)|0;ua=C;va=ph(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=lh(_|0,Z|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,H|0,F|0)|0;ja=C;pa=pa^ka;qa=qa^ja;S=lh(qa|0,pa|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;va=oh(_|0,Z|0,24)|0;wa=C;Z=ph(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,O|0,V|0)|0;ka=C;qa=qa^ja;pa=pa^ka;Z=oh(qa|0,pa|0,16)|0;_=C;pa=ph(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=lh(Z|0,_|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;pa=oh(va|0,wa|0,63)|0;qa=C;wa=ph(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=lh(X|0,W|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,s|0,v|0)|0;fa=C;la=la^ga;ma=ma^fa;Q=lh(ma|0,la|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;wa=oh(X|0,W|0,24)|0;va=C;W=ph(X|0,W|0,40)|0;wa=W|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,w|0,A|0)|0;ga=C;ma=ma^fa;la=la^ga;W=oh(ma|0,la|0,16)|0;X=C;la=ph(ma|0,la|0,48)|0;W=la|W;X=C|X;N=lh(W|0,X|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;la=oh(wa|0,va|0,63)|0;ma=C;va=ph(wa|0,va|0,1)|0;la=va|la;ma=C|ma;sa=lh(la|0,ma|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,w|0,A|0)|0;ra=C;aa=aa^sa;ba=ba^ra;S=lh(ba|0,aa|0,T|0,S|0)|0;T=C;la=la^S;ma=ma^T;va=oh(la|0,ma|0,24)|0;wa=C;ma=ph(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,e|0,i|0)|0;sa=C;ba=ba^ra;aa=aa^sa;ma=oh(ba|0,aa|0,16)|0;la=C;aa=ph(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=lh(ma|0,la|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;aa=oh(va|0,wa|0,63)|0;ba=C;wa=ph(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=lh(ha|0,ia|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,R|0,P|0)|0;na=C;Z=Z^oa;_=_^na;Q=lh(_|0,Z|0,N|0,Q|0)|0;N=C;ha=ha^Q;ia=ia^N;wa=oh(ha|0,ia|0,24)|0;va=C;ia=ph(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,H|0,F|0)|0;oa=C;_=_^na;Z=Z^oa;ia=oh(_|0,Z|0,16)|0;ha=C;Z=ph(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;N=lh(ia|0,ha|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;Z=oh(wa|0,va|0,63)|0;_=C;va=ph(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=lh(ta|0,ua|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,g|0,j|0)|0;ja=C;W=W^ka;X=X^ja;L=lh(X|0,W|0,I|0,L|0)|0;I=C;ta=ta^L;ua=ua^I;va=oh(ta|0,ua|0,24)|0;wa=C;ua=ph(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,k|0,o|0)|0;ka=C;X=X^ja;W=W^ka;ua=oh(X|0,W|0,16)|0;ta=C;W=ph(X|0,W|0,48)|0;ua=W|ua;ta=C|ta;I=lh(ua|0,ta|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;W=oh(va|0,wa|0,63)|0;X=C;wa=ph(va|0,wa|0,1)|0;W=wa|W;X=C|X;ga=lh(pa|0,qa|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,U|0,z|0)|0;fa=C;da=da^ga;ea=ea^fa;G=lh(ea|0,da|0,D|0,G|0)|0;D=C;pa=pa^G;qa=qa^D;wa=oh(pa|0,qa|0,24)|0;va=C;qa=ph(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,M|0,K|0)|0;ga=C;ea=ea^fa;da=da^ga;qa=oh(ea|0,da|0,16)|0;pa=C;da=ph(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;D=lh(qa|0,pa|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;da=oh(wa|0,va|0,63)|0;ea=C;va=ph(wa|0,va|0,1)|0;da=va|da;ea=C|ea;sa=lh(Z|0,_|0,ra|0,sa|0)|0;sa=lh(sa|0,C|0,$|0,n|0)|0;ra=C;qa=qa^sa;pa=pa^ra;L=lh(pa|0,qa|0,I|0,L|0)|0;I=C;Z=Z^L;_=_^I;va=oh(Z|0,_|0,24)|0;wa=C;_=ph(Z|0,_|0,40)|0;va=_|va;wa=C|wa;ra=lh(va|0,wa|0,sa|0,ra|0)|0;ra=lh(ra|0,C|0,y|0,B|0)|0;sa=C;pa=pa^ra;qa=qa^sa;_=oh(pa|0,qa|0,16)|0;Z=C;qa=ph(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;I=lh(_|0,Z|0,L|0,I|0)|0;L=C;va=va^I;wa=wa^L;qa=oh(va|0,wa|0,63)|0;pa=C;wa=ph(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=lh(W|0,X|0,na|0,oa|0)|0;oa=lh(oa|0,C|0,ca|0,t|0)|0;na=C;ma=ma^oa;la=la^na;G=lh(la|0,ma|0,D|0,G|0)|0;D=C;W=W^G;X=X^D;wa=oh(W|0,X|0,24)|0;va=C;X=ph(W|0,X|0,40)|0;wa=X|wa;va=C|va;na=lh(wa|0,va|0,oa|0,na|0)|0;na=lh(na|0,C|0,q|0,u|0)|0;oa=C;la=la^na;ma=ma^oa;X=oh(la|0,ma|0,16)|0;W=C;ma=ph(la|0,ma|0,48)|0;X=ma|X;W=C|W;D=lh(X|0,W|0,G|0,D|0)|0;G=C;wa=wa^D;va=va^G;ma=oh(wa|0,va|0,63)|0;la=C;va=ph(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=lh(da|0,ea|0,ja|0,ka|0)|0;ka=lh(ka|0,C|0,O|0,V|0)|0;ja=C;ia=ia^ka;ha=ha^ja;S=lh(ha|0,ia|0,T|0,S|0)|0;T=C;da=da^S;ea=ea^T;va=oh(da|0,ea|0,24)|0;wa=C;ea=ph(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=lh(va|0,wa|0,ka|0,ja|0)|0;ja=lh(ja|0,C|0,s|0,v|0)|0;ka=C;ha=ha^ja;ia=ia^ka;ea=oh(ha|0,ia|0,16)|0;da=C;ia=ph(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=lh(ea|0,da|0,S|0,T|0)|0;S=C;va=va^T;wa=wa^S;ia=oh(va|0,wa|0,63)|0;ha=C;wa=ph(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=lh(aa|0,ba|0,fa|0,ga|0)|0;ga=lh(ga|0,C|0,m|0,p|0)|0;fa=C;ua=ua^ga;ta=ta^fa;Q=lh(ta|0,ua|0,N|0,Q|0)|0;N=C;aa=aa^Q;ba=ba^N;wa=oh(aa|0,ba|0,24)|0;va=C;ba=ph(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=lh(wa|0,va|0,ga|0,fa|0)|0;fa=lh(fa|0,C|0,Y|0,h|0)|0;ga=C;ta=ta^fa;ua=ua^ga;ba=oh(ta|0,ua|0,16)|0;aa=C;ua=ph(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;N=lh(ba|0,aa|0,Q|0,N|0)|0;Q=C;wa=wa^N;va=va^Q;ua=oh(wa|0,va|0,63)|0;ta=C;va=ph(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;sa=lh(ua|0,ta|0,ra|0,sa|0)|0;p=lh(sa|0,C|0,m|0,p|0)|0;m=C;X=X^p;W=W^m;S=lh(W|0,X|0,T|0,S|0)|0;T=C;ua=ua^S;ta=ta^T;sa=oh(ua|0,ta|0,24)|0;ra=C;ta=ph(ua|0,ta|0,40)|0;sa=ta|sa;ra=C|ra;m=lh(sa|0,ra|0,p|0,m|0)|0;t=lh(m|0,C|0,ca|0,t|0)|0;ca=C;W=W^t;X=X^ca;m=oh(W|0,X|0,16)|0;p=C;X=ph(W|0,X|0,48)|0;m=X|m;p=C|p;T=lh(m|0,p|0,S|0,T|0)|0;S=C;sa=sa^T;ra=ra^S;X=oh(sa|0,ra|0,63)|0;W=C;ra=ph(sa|0,ra|0,1)|0;X=ra|X;W=C|W;oa=lh(qa|0,pa|0,na|0,oa|0)|0;j=lh(oa|0,C|0,g|0,j|0)|0;g=C;ea=ea^j;da=da^g;Q=lh(da|0,ea|0,N|0,Q|0)|0;N=C;qa=qa^Q;pa=pa^N;oa=oh(qa|0,pa|0,24)|0;na=C;pa=ph(qa|0,pa|0,40)|0;oa=pa|oa;na=C|na;g=lh(oa|0,na|0,j|0,g|0)|0;n=lh(g|0,C|0,$|0,n|0)|0;$=C;da=da^n;ea=ea^$;g=oh(da|0,ea|0,16)|0;j=C;ea=ph(da|0,ea|0,48)|0;g=ea|g;j=C|j;N=lh(g|0,j|0,Q|0,N|0)|0;Q=C;oa=oa^N;na=na^Q;ea=oh(oa|0,na|0,63)|0;da=C;na=ph(oa|0,na|0,1)|0;ea=na|ea;da=C|da;ka=lh(ma|0,la|0,ja|0,ka|0)|0;B=lh(ka|0,C|0,y|0,B|0)|0;y=C;ba=ba^B;aa=aa^y;L=lh(aa|0,ba|0,I|0,L|0)|0;I=C;ma=ma^L;la=la^I;ka=oh(ma|0,la|0,24)|0;ja=C;la=ph(ma|0,la|0,40)|0;ka=la|ka;ja=C|ja;y=lh(ka|0,ja|0,B|0,y|0)|0;h=lh(y|0,C|0,Y|0,h|0)|0;Y=C;aa=aa^h;ba=ba^Y;y=oh(aa|0,ba|0,16)|0;B=C;ba=ph(aa|0,ba|0,48)|0;y=ba|y;B=C|B;I=lh(y|0,B|0,L|0,I|0)|0;L=C;ka=ka^I;ja=ja^L;ba=oh(ka|0,ja|0,63)|0;aa=C;ja=ph(ka|0,ja|0,1)|0;ba=ja|ba;aa=C|aa;ga=lh(ia|0,ha|0,fa|0,ga|0)|0;v=lh(ga|0,C|0,s|0,v|0)|0;s=C;_=_^v;Z=Z^s;G=lh(Z|0,_|0,D|0,G|0)|0;D=C;ia=ia^G;ha=ha^D;ga=oh(ia|0,ha|0,24)|0;fa=C;ha=ph(ia|0,ha|0,40)|0;ga=ha|ga;fa=C|fa;s=lh(ga|0,fa|0,v|0,s|0)|0;z=lh(s|0,C|0,U|0,z|0)|0;U=C;Z=Z^z;_=_^U;s=oh(Z|0,_|0,16)|0;v=C;_=ph(Z|0,_|0,48)|0;s=_|s;v=C|v;D=lh(s|0,v|0,G|0,D|0)|0;G=C;ga=ga^D;fa=fa^G;_=oh(ga|0,fa|0,63)|0;Z=C;fa=ph(ga|0,fa|0,1)|0;_=fa|_;Z=C|Z;ca=lh(ea|0,da|0,t|0,ca|0)|0;i=lh(ca|0,C|0,e|0,i|0)|0;e=C;s=s^i;v=v^e;L=lh(v|0,s|0,I|0,L|0)|0;I=C;ea=ea^L;da=da^I;ca=oh(ea|0,da|0,24)|0;t=C;da=ph(ea|0,da|0,40)|0;ca=da|ca;t=C|t;e=lh(ca|0,t|0,i|0,e|0)|0;V=lh(e|0,C|0,O|0,V|0)|0;O=C;v=v^V;s=s^O;e=oh(v|0,s|0,16)|0;i=C;s=ph(v|0,s|0,48)|0;e=s|e;i=C|i;I=lh(e|0,i|0,L|0,I|0)|0;L=C;ca=ca^I;t=t^L;s=oh(ca|0,t|0,63)|0;v=C;t=ph(ca|0,t|0,1)|0;v=C|v;$=lh(ba|0,aa|0,n|0,$|0)|0;A=lh($|0,C|0,w|0,A|0)|0;w=C;m=m^A;p=p^w;G=lh(p|0,m|0,D|0,G|0)|0;D=C;ba=ba^G;aa=aa^D;$=oh(ba|0,aa|0,24)|0;n=C;aa=ph(ba|0,aa|0,40)|0;$=aa|$;n=C|n;w=lh($|0,n|0,A|0,w|0)|0;P=lh(w|0,C|0,R|0,P|0)|0;R=C;p=p^P;m=m^R;w=oh(p|0,m|0,16)|0;A=C;m=ph(p|0,m|0,48)|0;w=m|w;A=C|A;D=lh(w|0,A|0,G|0,D|0)|0;G=C;$=$^D;n=n^G;m=oh($|0,n|0,63)|0;p=C;n=ph($|0,n|0,1)|0;p=C|p;Y=lh(_|0,Z|0,h|0,Y|0)|0;u=lh(Y|0,C|0,q|0,u|0)|0;q=C;g=g^u;j=j^q;S=lh(j|0,g|0,T|0,S|0)|0;T=C;_=_^S;Z=Z^T;Y=oh(_|0,Z|0,24)|0;h=C;Z=ph(_|0,Z|0,40)|0;Y=Z|Y;h=C|h;q=lh(Y|0,h|0,u|0,q|0)|0;K=lh(q|0,C|0,M|0,K|0)|0;M=C;j=j^K;g=g^M;q=oh(j|0,g|0,16)|0;u=C;g=ph(j|0,g|0,48)|0;q=g|q;u=C|u;T=lh(q|0,u|0,S|0,T|0)|0;S=C;Y=Y^T;h=h^S;g=oh(Y|0,h|0,63)|0;j=C;h=ph(Y|0,h|0,1)|0;j=C|j;U=lh(X|0,W|0,z|0,U|0)|0;o=lh(U|0,C|0,k|0,o|0)|0;k=C;y=y^o;B=B^k;Q=lh(B|0,y|0,N|0,Q|0)|0;N=C;X=X^Q;W=W^N;U=oh(X|0,W|0,24)|0;z=C;W=ph(X|0,W|0,40)|0;U=W|U;z=C|z;k=lh(U|0,z|0,o|0,k|0)|0;F=lh(k|0,C|0,H|0,F|0)|0;H=C;B=B^F;y=y^H;k=oh(B|0,y|0,16)|0;o=C;y=ph(B|0,y|0,48)|0;k=y|k;o=C|o;N=lh(k|0,o|0,Q|0,N|0)|0;Q=C;U=U^N;z=z^Q;y=oh(U|0,z|0,63)|0;B=C;z=ph(U|0,z|0,1)|0;U=a;S=O^c[U+4>>2]^S;O=a;c[O>>2]=V^c[U>>2]^T;c[O+4>>2]=S;O=J;a=R^c[O+4>>2]^Q;c[J>>2]=P^c[O>>2]^N;c[J+4>>2]=a;J=E;a=M^c[J+4>>2]^L;c[E>>2]=K^c[J>>2]^I;c[E+4>>2]=a;E=x;a=H^c[E+4>>2]^G;c[x>>2]=F^c[E>>2]^D;c[x+4>>2]=a;x=r;a=(C|B)^c[x+4>>2]^A;c[r>>2]=(z|y)^c[x>>2]^w;c[r+4>>2]=a;r=l;a=v^c[r+4>>2]^u;c[l>>2]=(t|s)^c[r>>2]^q;c[l+4>>2]=a;l=f;a=p^c[l+4>>2]^o;c[f>>2]=(n|m)^c[l>>2]^k;c[f+4>>2]=a;f=b;a=j^c[f+4>>2]^i;c[b>>2]=(h|g)^c[f>>2]^e;c[b+4>>2]=a;return}function jd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!(e<<24>>24))ra();k=e&255;if((e&255)>64)ra();h=b+352|0;e=c[h>>2]|0;i=b+64|0;do if(e>>>0>128){m=i;f=c[m>>2]|0;m=c[m+4>>2]|0;g=lh(f|0,m|0,128,0)|0;e=i;c[e>>2]=g;c[e+4>>2]=C;e=b+72|0;g=e;g=lh((m>>>0>4294967295|(m|0)==-1&f>>>0>4294967167)&1|0,0,c[g>>2]|0,c[g+4>>2]|0)|0;f=e;c[f>>2]=g;c[f+4>>2]=C;f=b+96|0;id(b,f);g=(c[h>>2]|0)+-128|0;c[h>>2]=g;if(g>>>0<129){qh(f|0,b+224|0,g|0)|0;j=e;l=c[h>>2]|0;break}else za(32447,32479,335,32523)}else{j=b+72|0;l=e}while(0);m=i;m=lh(c[m>>2]|0,c[m+4>>2]|0,l|0,0)|0;h=C;c[i>>2]=m;c[i+4>>2]=h;i=j;i=lh((h>>>0<0|(h|0)==0&m>>>0<l>>>0)&1|0,0,c[i>>2]|0,c[i+4>>2]|0)|0;m=j;c[m>>2]=i;c[m+4>>2]=C;if(!(a[b+356>>0]|0)){m=b+80|0;j=m;c[j>>2]=-1;m=m+4|0;c[m>>2]=-1;m=b+96|0;j=b+96+l|0;l=256-l|0;nh(j|0,0,l|0)|0;id(b,m);qh(d|0,b|0,k|0)|0;return}m=b+88|0;c[m>>2]=-1;c[m+4>>2]=-1;m=b+80|0;j=m;c[j>>2]=-1;m=m+4|0;c[m>>2]=-1;m=b+96|0;j=b+96+l|0;l=256-l|0;nh(j|0,0,l|0)|0;id(b,m);qh(d|0,b|0,k|0)|0;return}function kd(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;v=i=i+63&-64;i=i+496|0;m=v+360|0;if((d+-1|0)>>>0>63|j>>>0>64){b=-1;i=w;return b|0}if(d>>>0>=256)za(32557,32577,18,32629);if(j>>>0>=256)za(32656,32577,19,32629);u=d&255;l=j&255;if((e|0)==0&((f|0)!=0|(g|0)!=0))ra();if(!b)ra();if((u+-1&255)>63)ra();k=l<<24>>24==0;if(!((h|0)!=0|k))ra();if((l&255)>64)ra();do if(!k)if((h|0)==0|(l+-1&255)>63)ra();else{k=j&255;nh(v+64|0,0,293)|0;l=v;n=400;t=l+40|0;do{c[l>>2]=c[n>>2];l=l+4|0;n=n+4|0}while((l|0)<(t|0));n=ph(k|0,0,8)|0;l=v;c[l>>2]=(n|d&255)^-222443256;c[l+4>>2]=C^1779033703;l=v+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=v+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=v+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=v+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=v+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=v+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;l=v+56|0;c[l>>2]=327033209;c[l+4>>2]=1541459225;nh(m+k|0,0,128-k|0)|0;qh(m|0,h|0,k|0)|0;k=v+352|0;l=v+96|0;n=m;t=l+128|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(t|0));c[k>>2]=128;n=128;break}else{nh(v+64|0,0,293)|0;l=v;n=400;t=l+40|0;do{c[l>>2]=c[n>>2];l=l+4|0;n=n+4|0}while((l|0)<(t|0));n=v;c[n>>2]=d&255^-222443256;c[n+4>>2]=1779033703;n=v+8|0;c[n>>2]=-2067093701;c[n+4>>2]=-1150833019;n=v+16|0;c[n>>2]=-23791573;c[n+4>>2]=1013904242;n=v+24|0;c[n>>2]=1595750129;c[n+4>>2]=-1521486534;n=v+32|0;c[n>>2]=-1377402159;c[n+4>>2]=1359893119;n=v+40|0;c[n>>2]=725511199;c[n+4>>2]=-1694144372;n=v+48|0;c[n>>2]=-79577749;c[n+4>>2]=528734635;n=v+56|0;c[n>>2]=327033209;c[n+4>>2]=1541459225;n=0}while(0);a:do if(!((f|0)==0&(g|0)==0)){o=v+352|0;p=v+96|0;q=v+64|0;r=v+72|0;s=v+224|0;m=e;l=n;d=g;h=f;while(1){j=256-l|0;k=v+96+l|0;if(!(d>>>0>0|(d|0)==0&h>>>0>j>>>0))break;qh(k|0,m|0,j|0)|0;c[o>>2]=(c[o>>2]|0)+j;t=q;l=c[t>>2]|0;t=c[t+4>>2]|0;f=lh(l|0,t|0,128,0)|0;n=q;c[n>>2]=f;c[n+4>>2]=C;n=r;n=lh((t>>>0>4294967295|(t|0)==-1&l>>>0>4294967167)&1|0,0,c[n>>2]|0,c[n+4>>2]|0)|0;l=r;c[l>>2]=n;c[l+4>>2]=C;id(v,p);l=p;n=s;t=l+128|0;do{c[l>>2]=c[n>>2];l=l+4|0;n=n+4|0}while((l|0)<(t|0));l=(c[o>>2]|0)+-128|0;c[o>>2]=l;k=kh(h|0,d|0,j|0,0)|0;if((h|0)==(j|0)&(d|0)==0)break a;else{m=m+j|0;d=C;h=k}}qh(k|0,m|0,h|0)|0;f=lh(c[o>>2]|0,0,h|0,d|0)|0;c[o>>2]=f}while(0);jd(v,b,u);b=0;i=w;return b|0}function ld(b,e,f,g,h,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=i;z=i=i+63&-64;i=i+496|0;u=z+360|0;if((e+-1|0)>>>0>63|k>>>0>64){b=-1;i=A;return b|0}if(e>>>0>=256)za(32557,32577,36,32676);if(k>>>0>=256)za(32656,32577,37,32676);y=e&255;p=k&255;if((f|0)==0&((g|0)!=0|(h|0)!=0))ra();if(!b)ra();if((y+-1&255)>63)ra();n=(j|0)!=0;o=p<<24>>24==0;if(!(n|o))ra();if((p&255)>64)ra();if(o){if(!l){l=-1377402159;q=1359893119;r=725511199;s=-1694144372}else{q=l;x=q;q=q+4|0;s=l+8|0;r=s;s=s+4|0;l=(d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24)^-1377402159;q=(d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24)^1359893119;r=(d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24)^725511199;s=(d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24)^-1694144372}if(!m){n=-79577749;o=528734635;p=327033209;k=1541459225}else{o=m;n=o;o=o+4|0;k=m+8|0;p=k;k=k+4|0;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^-79577749;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^528734635;p=(d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)^327033209;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^1541459225}nh(z+64|0,0,293)|0;v=z;w=400;x=v+40|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));x=z;c[x>>2]=e&255^-222443256;c[x+4>>2]=1779033703;x=z+8|0;c[x>>2]=-2067093701;c[x+4>>2]=-1150833019;x=z+16|0;c[x>>2]=-23791573;c[x+4>>2]=1013904242;x=z+24|0;c[x>>2]=1595750129;c[x+4>>2]=-1521486534;x=z+32|0;c[x>>2]=l;c[x+4>>2]=q;x=z+40|0;c[x>>2]=r;c[x+4>>2]=s;x=z+48|0;c[x>>2]=n;c[x+4>>2]=o;n=z+56|0;c[n>>2]=p;c[n+4>>2]=k;n=0}else{if(!n)ra();t=k&255;if(!l){l=-1377402159;q=1359893119;r=725511199;s=-1694144372}else{q=l;x=q;q=q+4|0;s=l+8|0;r=s;s=s+4|0;l=(d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24)^-1377402159;q=(d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24)^1359893119;r=(d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24)^725511199;s=(d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24)^-1694144372}if(!m){n=528734635;o=327033209;p=1541459225;k=-79577749}else{n=m;k=n;n=n+4|0;p=m+8|0;o=p;p=p+4|0;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^528734635;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^327033209;p=(d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)^1541459225;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^-79577749}nh(z+64|0,0,293)|0;v=z;w=400;x=v+40|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));w=ph(t|0,0,8)|0;v=z;c[v>>2]=(w|e&255)^-222443256;c[v+4>>2]=C^1779033703;v=z+8|0;c[v>>2]=-2067093701;c[v+4>>2]=-1150833019;v=z+16|0;c[v>>2]=-23791573;c[v+4>>2]=1013904242;v=z+24|0;c[v>>2]=1595750129;c[v+4>>2]=-1521486534;v=z+32|0;c[v>>2]=l;c[v+4>>2]=q;v=z+40|0;c[v>>2]=r;c[v+4>>2]=s;v=z+48|0;c[v>>2]=k;c[v+4>>2]=n;n=z+56|0;c[n>>2]=o;c[n+4>>2]=p;nh(u+t|0,0,128-t|0)|0;qh(u|0,j|0,t|0)|0;n=z+352|0;v=z+96|0;w=u;x=v+128|0;do{a[v>>0]=a[w>>0]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));c[n>>2]=128;n=128}a:do if(!((g|0)==0&(h|0)==0)){r=z+352|0;s=z+96|0;t=z+64|0;m=z+72|0;j=z+224|0;q=f;l=h;k=g;while(1){p=256-n|0;n=z+96+n|0;if(!(l>>>0>0|(l|0)==0&k>>>0>p>>>0))break;qh(n|0,q|0,p|0)|0;c[r>>2]=(c[r>>2]|0)+p;x=t;v=c[x>>2]|0;x=c[x+4>>2]|0;g=lh(v|0,x|0,128,0)|0;w=t;c[w>>2]=g;c[w+4>>2]=C;w=m;w=lh((x>>>0>4294967295|(x|0)==-1&v>>>0>4294967167)&1|0,0,c[w>>2]|0,c[w+4>>2]|0)|0;v=m;c[v>>2]=w;c[v+4>>2]=C;id(z,s);v=s;w=j;x=v+128|0;do{c[v>>2]=c[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));n=(c[r>>2]|0)+-128|0;c[r>>2]=n;o=kh(k|0,l|0,p|0,0)|0;if((k|0)==(p|0)&(l|0)==0)break a;else{q=q+p|0;l=C;k=o}}qh(n|0,q|0,k|0)|0;g=lh(c[r>>2]|0,0,k|0,l|0)|0;c[r>>2]=g}while(0);jd(z,b,y);b=0;i=A;return b|0}function md(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;m=i;l=i=i+63&-64;i=i+128|0;if(e>>>0>64|(f+-1|0)>>>0>63){b=-1;i=m;return b|0}if(f>>>0>=256)za(32557,32577,53,32717);if(e>>>0>=256)za(32656,32577,54,32717);g=f&255;if((d|0)==0|(e|0)==0){if((g+-1&255)>63)ra();nh(b+64|0,0,293)|0;e=b;h=400;j=e+48|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));l=b;c[l>>2]=f&255^-222443256;c[l+4>>2]=1779033703;l=b+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=b+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=b+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=b+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=b+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=b+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;b=b+56|0;c[b>>2]=327033209;c[b+4>>2]=1541459225;b=0;i=m;return b|0}k=e&255;if((g+-1&255)>63)ra();if((k+-1&255)>63)ra();g=e&255;nh(b+64|0,0,293)|0;e=b;h=400;j=e+48|0;do{c[e>>2]=c[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));h=ph(g|0,0,8)|0;e=b;c[e>>2]=(h|f&255)^-222443256;c[e+4>>2]=C^1779033703;e=b+8|0;c[e>>2]=-2067093701;c[e+4>>2]=-1150833019;e=b+16|0;c[e>>2]=-23791573;c[e+4>>2]=1013904242;e=b+24|0;c[e>>2]=1595750129;c[e+4>>2]=-1521486534;e=b+32|0;c[e>>2]=-1377402159;c[e+4>>2]=1359893119;e=b+40|0;c[e>>2]=725511199;c[e+4>>2]=-1694144372;e=b+48|0;c[e>>2]=-79577749;c[e+4>>2]=528734635;e=b+56|0;c[e>>2]=327033209;c[e+4>>2]=1541459225;nh(l+g|0,0,(k<<24>>24<0?0:128-g|0)|0)|0;qh(l|0,d|0,g|0)|0;g=b+352|0;e=b+96|0;h=l;j=e+128|0;do{a[e>>0]=a[h>>0]|0;e=e+1|0;h=h+1|0}while((e|0)<(j|0));c[g>>2]=128;b=0;i=m;return b|0}function nd(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=i;r=i=i+63&-64;i=i+128|0;if(f>>>0>64|(g+-1|0)>>>0>63){b=-1;i=v;return b|0}if(g>>>0>=256)za(32557,32577,77,32749);if(f>>>0>=256)za(32656,32577,78,32749);k=g&255;if((e|0)==0|(f|0)==0){if((k+-1&255)>63)ra();if(!h){l=-1377402159;m=1359893119;n=725511199;o=-1694144372}else{m=h;l=m;m=m+4|0;o=h+8|0;n=o;o=o+4|0;l=(d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)^-1377402159;m=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)^1359893119;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^725511199;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^-1694144372}if(!j){k=-79577749;f=528734635;h=327033209;j=1541459225}else{f=j;k=f;f=f+4|0;j=j+8|0;h=j;j=j+4|0;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^-79577749;f=(d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)^528734635;h=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)^327033209;j=(d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)^1541459225}nh(b+64|0,0,293)|0;s=b;t=400;u=s+48|0;do{c[s>>2]=c[t>>2];s=s+4|0;t=t+4|0}while((s|0)<(u|0));u=b;c[u>>2]=g&255^-222443256;c[u+4>>2]=1779033703;g=b+8|0;c[g>>2]=-2067093701;c[g+4>>2]=-1150833019;g=b+16|0;c[g>>2]=-23791573;c[g+4>>2]=1013904242;g=b+24|0;c[g>>2]=1595750129;c[g+4>>2]=-1521486534;g=b+32|0;c[g>>2]=l;c[g+4>>2]=m;g=b+40|0;c[g>>2]=n;c[g+4>>2]=o;g=b+48|0;c[g>>2]=k;c[g+4>>2]=f;b=b+56|0;c[b>>2]=h;c[b+4>>2]=j;b=0;i=v;return b|0}q=f&255;if((k+-1&255)>63)ra();if(!(q<<24>>24))ra();p=f&255;if((q&255)>64)ra();if(!h){l=-1377402159;m=1359893119;n=725511199;o=-1694144372}else{m=h;l=m;m=m+4|0;o=h+8|0;n=o;o=o+4|0;l=(d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24)^-1377402159;m=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)^1359893119;n=(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^725511199;o=(d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24)^-1694144372}if(!j){k=-79577749;f=528734635;h=327033209;j=1541459225}else{f=j;k=f;f=f+4|0;j=j+8|0;h=j;j=j+4|0;k=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)^-79577749;f=(d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)^528734635;h=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)^327033209;j=(d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)^1541459225}nh(b+64|0,0,293)|0;s=b;t=400;u=s+48|0;do{c[s>>2]=c[t>>2];s=s+4|0;t=t+4|0}while((s|0)<(u|0));t=ph(p|0,0,8)|0;s=b;c[s>>2]=(t|g&255)^-222443256;c[s+4>>2]=C^1779033703;s=b+8|0;c[s>>2]=-2067093701;c[s+4>>2]=-1150833019;s=b+16|0;c[s>>2]=-23791573;c[s+4>>2]=1013904242;s=b+24|0;c[s>>2]=1595750129;c[s+4>>2]=-1521486534;s=b+32|0;c[s>>2]=l;c[s+4>>2]=m;s=b+40|0;c[s>>2]=n;c[s+4>>2]=o;s=b+48|0;c[s>>2]=k;c[s+4>>2]=f;k=b+56|0;c[k>>2]=h;c[k+4>>2]=j;nh(r+p|0,0,(q<<24>>24<0?0:128-p|0)|0)|0;qh(r|0,e|0,p|0)|0;k=b+352|0;s=b+96|0;t=r;u=s+128|0;do{a[s>>0]=a[t>>0]|0;s=s+1|0;t=t+1|0}while((s|0)<(u|0));c[k>>2]=128;b=0;i=v;return b|0}function od(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((e|0)==0&(f|0)==0)return 0;k=b+352|0;l=b+96|0;m=b+64|0;n=b+72|0;o=b+224|0;g=c[k>>2]|0;j=e;while(1){i=256-g|0;e=b+96+g|0;if(!(f>>>0>0|(f|0)==0&j>>>0>i>>>0))break;qh(e|0,d|0,i|0)|0;c[k>>2]=(c[k>>2]|0)+i;h=m;e=c[h>>2]|0;h=c[h+4>>2]|0;q=lh(e|0,h|0,128,0)|0;g=m;c[g>>2]=q;c[g+4>>2]=C;g=n;g=lh((h>>>0>4294967295|(h|0)==-1&e>>>0>4294967167)&1|0,0,c[g>>2]|0,c[g+4>>2]|0)|0;e=n;c[e>>2]=g;c[e+4>>2]=C;id(b,l);e=l;g=o;h=e+128|0;do{a[e>>0]=a[g>>0]|0;e=e+1|0;g=g+1|0}while((e|0)<(h|0));g=(c[k>>2]|0)+-128|0;c[k>>2]=g;e=kh(j|0,f|0,i|0,0)|0;if((j|0)==(i|0)&(f|0)==0){p=6;break}else{d=d+i|0;f=C;j=e}}if((p|0)==6)return 0;qh(e|0,d|0,j|0)|0;q=lh(c[k>>2]|0,0,j|0,f|0)|0;c[k>>2]=q;return 0}function pd(a,b,c){a=a|0;b=b|0;c=c|0;if(c>>>0<256){jd(a,b,c&255);return 0}else za(32557,32577,106,32795);return 0}function qd(){return 64}function rd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+208|0;g=m+64|0;h=m;j=400;k=h+64|0;do{c[h>>2]=c[j>>2];h=h+4|0;j=j+4|0}while((h|0)<(k|0));h=ph(e|0,f|0,3)|0;j=C;k=oh(e|0,f|0,61)|0;l=m+72|0;c[l>>2]=h;c[l+4>>2]=j;l=g;c[l>>2]=k;c[l+4>>2]=C;l=m+80|0;if(f>>>0<0|(f|0)==0&e>>>0<128){qh(l|0,d|0,e|0)|0;Fd(m,b)|0;i=n;return 0}h=l;j=d;k=h+128|0;do{a[h>>0]=a[j>>0]|0;h=h+1|0;j=j+1|0}while((h|0)<(k|0));Ed(m,l);g=d+128|0;d=lh(e|0,f|0,-128,-1)|0;h=C;if(h>>>0>0|(h|0)==0&d>>>0>127)do{Ed(m,g);g=g+128|0;d=lh(d|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&d>>>0>127);qh(l|0,g|0,d|0)|0;Fd(m,b)|0;i=n;return 0}function sd(){return 32828}function td(){return 32}function ud(){return 104}function vd(a){a=a|0;var b=0;b=a+32|0;c[b>>2]=0;c[b+4>>2]=0;c[a>>2]=c[8066];c[a+4>>2]=c[8067];c[a+8>>2]=c[8068];c[a+12>>2]=c[8069];c[a+16>>2]=c[8070];c[a+20>>2]=c[8071];c[a+24>>2]=c[8072];c[a+28>>2]=c[8073];return 0}function wd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((d|0)==0&(e|0)==0)return 0;g=a+32|0;i=g;j=c[i>>2]|0;i=c[i+4>>2]|0;f=oh(j|0,i|0,3)|0;f=f&63;h=ph(d|0,e|0,3)|0;h=lh(j|0,i|0,h|0,C|0)|0;c[g>>2]=h;c[g+4>>2]=C;g=64-f|0;f=a+40+f|0;if(0>e>>>0|0==(e|0)&g>>>0>d>>>0){qh(f|0,b|0,d|0)|0;return 0}qh(f|0,b|0,g|0)|0;h=a+40|0;xd(a,h);f=b+g|0;b=kh(d|0,e|0,g|0,0)|0;d=C;if(d>>>0>0|(d|0)==0&b>>>0>63)do{xd(a,f);f=f+64|0;b=lh(b|0,d|0,-64,-1)|0;d=C}while(d>>>0>0|(d|0)==0&b>>>0>63);qh(h|0,f|0,b|0)|0;return 0}function xd(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;f=i=i+63&-64;i=i+256|0;e=0;do{h=b+(e<<2)|0;c[f+(e<<2)>>2]=(d[h+2>>0]|0)<<8|(d[h+3>>0]|0)|(d[h+1>>0]|0)<<16|(d[h>>0]|0)<<24;e=e+1|0}while((e|0)!=16);b=c[f>>2]|0;e=16;do{h=c[f+(e+-2<<2)>>2]|0;j=b;b=c[f+(e+-15<<2)>>2]|0;c[f+(e<<2)>>2]=j+(c[f+(e+-7<<2)>>2]|0)+((h>>>19|h<<13)^h>>>10^(h>>>17|h<<15))+((b>>>18|b<<14)^b>>>3^(b>>>7|b<<25));e=e+1|0}while((e|0)!=64);u=c[a>>2]|0;s=a+4|0;t=c[s>>2]|0;q=a+8|0;r=c[q>>2]|0;o=a+12|0;m=a+16|0;n=c[m>>2]|0;k=a+20|0;l=c[k>>2]|0;e=a+24|0;b=c[e>>2]|0;j=a+28|0;h=(c[j>>2]|0)+1116352408+(c[f>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=(c[o>>2]|0)+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+1899447441+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+4>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1245643825+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+8>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-373957723+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+12>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+961987163+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+16>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1508970993+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+20>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1841331548+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+24>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1424204075+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+28>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-670586216+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+32>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+310598401+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+36>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+607225278+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+40>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+1426881987+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+44>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+1925078388+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+48>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-2132889090+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+52>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1680079193+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+56>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1046744716+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+60>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-459576895+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+64>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-272742522+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+68>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+264347078+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+72>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+604807628+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+76>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+770255983+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+80>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1249150122+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+84>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+1555081692+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+88>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+1996064986+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+92>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-1740746414+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+96>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-1473132947+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+100>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1341970488+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+104>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-1084653625+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+108>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-958395405+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+112>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-710438585+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+116>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+113926993+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+120>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+338241895+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+124>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+666307205+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+128>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+773529912+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+132>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+1294757372+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+136>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+1396182291+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+140>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+1695183700+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+144>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1986661051+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+148>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-2117940946+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+152>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1838011259+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+156>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-1564481375+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+160>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-1474664885+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+164>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1035236496+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+168>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-949202525+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+172>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-778901479+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+176>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-694614492+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+180>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-200395387+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+184>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+275423344+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+188>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+430227734+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+192>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+506948616+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+196>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+659060556+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+200>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+883997877+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+204>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+958139571+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+208>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1322822218+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+212>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+1537002063+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+216>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+1747873779+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+220>>2]|0)+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+1955562222+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+(c[f+224>>2]|0)+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+2024104815+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+228>>2]|0)+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-2067236844+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+(c[f+232>>2]|0)+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-1933114872+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+(c[f+236>>2]|0)+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-1866530822+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(c[f+240>>2]|0)+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-1538233109+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(c[f+244>>2]|0)+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1090935817+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+(c[f+248>>2]|0)+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;f=u+-965641998+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(c[f+252>>2]|0)+((h^b)&l^h)|0;c[a>>2]=(c[a>>2]|0)+(((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+f);c[s>>2]=(c[s>>2]|0)+t;c[q>>2]=(c[q>>2]|0)+r;c[o>>2]=(c[o>>2]|0)+p;c[m>>2]=(c[m>>2]|0)+(n+f);c[k>>2]=(c[k>>2]|0)+l;c[e>>2]=(c[e>>2]|0)+b;c[j>>2]=(c[j>>2]|0)+h;i=g;return}function yd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;m=i=i+63&-64;i=i+16|0;l=b+32|0;e=l;f=c[e>>2]|0;e=c[e+4>>2]|0;a[m+7>>0]=f;g=oh(f|0,e|0,8)|0;a[m+6>>0]=g;g=oh(f|0,e|0,16)|0;a[m+5>>0]=g;g=oh(f|0,e|0,24)|0;a[m+4>>0]=g;a[m+3>>0]=e;g=oh(f|0,e|0,40)|0;a[m+2>>0]=g;g=oh(f|0,e|0,48)|0;a[m+1>>0]=g;g=oh(f|0,e|0,56)|0;a[m>>0]=g;g=oh(f|0,e|0,3)|0;g=g&63;k=g>>>0<56?56:120;j=k-g|0;do if((k|0)!=(g|0)){h=ph(j|0,0,3)|0;f=lh(h|0,C|0,f|0,e|0)|0;e=C;h=l;c[h>>2]=f;c[h+4>>2]=e;h=64-g|0;g=b+40+g|0;if(j>>>0<h>>>0){qh(g|0,32835,j|0)|0;break}qh(g|0,32835,h|0)|0;k=b+40|0;xd(b,k);e=32835+h|0;g=kh(j|0,0,h|0,0)|0;f=C;if(f>>>0>0|(f|0)==0&g>>>0>63){do{xd(b,e);e=e+64|0;g=lh(g|0,f|0,-64,-1)|0;f=C}while(f>>>0>0|(f|0)==0&g>>>0>63);f=g}else f=g;qh(k|0,e|0,f|0)|0;e=l;f=c[e>>2]|0;e=c[e+4>>2]|0}while(0);k=oh(f|0,e|0,3)|0;k=k&63;e=lh(f|0,e|0,64,0)|0;f=l;c[f>>2]=e;c[f+4>>2]=C;f=64-k|0;e=b+40+k|0;if(f>>>0>8){k=c[m>>2]|0;m=c[m+4>>2]|0;l=e;a[l>>0]=k;a[l+1>>0]=k>>8;a[l+2>>0]=k>>16;a[l+3>>0]=k>>24;e=e+4|0;a[e>>0]=m;a[e+1>>0]=m>>8;a[e+2>>0]=m>>16;a[e+3>>0]=m>>24;e=b}else{qh(e|0,m|0,f|0)|0;h=b+40|0;xd(b,h);e=m+f|0;g=kh(8,0,f|0,0)|0;f=C;if(f>>>0>0|(f|0)==0&g>>>0>63){do{xd(b,e);e=e+64|0;g=lh(g|0,f|0,-64,-1)|0;f=C}while(f>>>0>0|(f|0)==0&g>>>0>63);f=g}else f=g;qh(h|0,e|0,f|0)|0;e=b}e=c[e>>2]|0;a[d+3>>0]=e;a[d+2>>0]=e>>>8;a[d+1>>0]=e>>>16;a[d>>0]=e>>>24;e=c[b+4>>2]|0;a[d+7>>0]=e;a[d+6>>0]=e>>>8;a[d+5>>0]=e>>>16;a[d+4>>0]=e>>>24;e=c[b+8>>2]|0;a[d+11>>0]=e;a[d+10>>0]=e>>>8;a[d+9>>0]=e>>>16;a[d+8>>0]=e>>>24;e=c[b+12>>2]|0;a[d+15>>0]=e;a[d+14>>0]=e>>>8;a[d+13>>0]=e>>>16;a[d+12>>0]=e>>>24;e=c[b+16>>2]|0;a[d+19>>0]=e;a[d+18>>0]=e>>>8;a[d+17>>0]=e>>>16;a[d+16>>0]=e>>>24;e=c[b+20>>2]|0;a[d+23>>0]=e;a[d+22>>0]=e>>>8;a[d+21>>0]=e>>>16;a[d+20>>0]=e>>>24;e=c[b+24>>2]|0;a[d+27>>0]=e;a[d+26>>0]=e>>>8;a[d+25>>0]=e>>>16;a[d+24>>0]=e>>>24;e=c[b+28>>2]|0;a[d+31>>0]=e;a[d+30>>0]=e>>>8;a[d+29>>0]=e>>>16;a[d+28>>0]=e>>>24;e=b+104|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(e|0));i=n;return 0}function zd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;m=i;l=i=i+63&-64;i=i+112|0;g=l+32|0;k=g;c[k>>2]=0;c[k+4>>2]=0;c[l>>2]=c[8066];c[l+4>>2]=c[8067];c[l+8>>2]=c[8068];c[l+12>>2]=c[8069];c[l+16>>2]=c[8070];c[l+20>>2]=c[8071];c[l+24>>2]=c[8072];c[l+28>>2]=c[8073];if((e|0)==0&(f|0)==0){yd(l,b)|0;i=m;return 0}j=ph(e|0,f|0,3)|0;k=g;c[k>>2]=j;c[k+4>>2]=C;k=l+40|0;if(f>>>0<0|(f|0)==0&e>>>0<64){qh(k|0,d|0,e|0)|0;yd(l,b)|0;i=m;return 0}g=k;h=d;j=g+64|0;do{a[g>>0]=a[h>>0]|0;g=g+1|0;h=h+1|0}while((g|0)<(j|0));xd(l,k);g=d+64|0;j=lh(e|0,f|0,-64,-1)|0;h=C;if(h>>>0>0|(h|0)==0&j>>>0>63){do{xd(l,g);g=g+64|0;j=lh(j|0,h|0,-64,-1)|0;h=C}while(h>>>0>0|(h|0)==0&j>>>0>63);h=j}else h=j;qh(k|0,g|0,h|0)|0;yd(l,b)|0;i=m;return 0}function Ad(){return 64}function Bd(){return 208}function Cd(a){a=a|0;var b=0,d=0;b=a+64|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;b=400;d=a+64|0;do{c[a>>2]=c[b>>2];a=a+4|0;b=b+4|0}while((a|0)<(d|0));return 0}function Dd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;j=a+72|0;m=j;o=c[m>>2]|0;m=c[m+4>>2]|0;k=oh(o|0,m|0,3)|0;k=k&127;l=ph(d|0,e|0,3)|0;n=C;h=oh(d|0,e|0,61)|0;i=C;m=lh(o|0,m|0,l|0,n|0)|0;o=C;c[j>>2]=m;c[j+4>>2]=o;j=a+64|0;g=j;f=c[g>>2]|0;g=c[g+4>>2]|0;if(o>>>0<n>>>0|(o|0)==(n|0)&m>>>0<l>>>0){f=lh(f|0,g|0,1,0)|0;g=C;o=j;c[o>>2]=f;c[o+4>>2]=g}h=lh(f|0,g|0,h|0,i|0)|0;g=j;c[g>>2]=h;c[g+4>>2]=C;g=kh(128,0,k|0,0)|0;h=C;f=a+80+k|0;if(h>>>0>e>>>0|(h|0)==(e|0)&g>>>0>d>>>0){qh(f|0,b|0,d|0)|0;return 0}qh(f|0,b|0,g|0)|0;i=a+80|0;Ed(a,i);f=b+g|0;g=kh(d|0,e|0,g|0,h|0)|0;h=C;if(h>>>0>0|(h|0)==0&g>>>0>127)do{Ed(a,f);f=f+128|0;g=lh(g|0,h|0,-128,-1)|0;h=C}while(h>>>0>0|(h|0)==0&g>>>0>127);qh(i|0,f|0,g|0)|0;return 0}
function kg(a,b,e,f,g,h,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;m=i;l=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=m;return 0}c[l>>2]=1634760805;c[l+4>>2]=857760878;c[l+8>>2]=2036477234;c[l+12>>2]=1797285236;c[l+16>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;n=k+4|0;c[l+20>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+8|0;c[l+24>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+12|0;c[l+28>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+16|0;c[l+32>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+20|0;c[l+36>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;n=k+24|0;c[l+40>>2]=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;k=k+28|0;c[l+44>>2]=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;c[l+48>>2]=h;c[l+52>>2]=j;c[l+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;g=g+4|0;c[l+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(l,b,a,e,f);e=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(e|0));i=m;return 0}function lg(a,b,e,f,g,h,j){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;l=i;k=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=l;return 0}c[k>>2]=1634760805;c[k+4>>2]=857760878;c[k+8>>2]=2036477234;c[k+12>>2]=1797285236;c[k+16>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;m=j+4|0;c[k+20>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+8|0;c[k+24>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+12|0;c[k+28>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+16|0;c[k+32>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+20|0;c[k+36>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=j+24|0;c[k+40>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;j=j+28|0;c[k+44>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;c[k+48>>2]=h;c[k+52>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;j=g+4|0;c[k+56>>2]=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;g=g+8|0;c[k+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(k,b,a,e,f);e=k+64|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(e|0));i=l;return 0}function mg(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;k=i;j=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=k;return 0}c[j>>2]=1634760805;c[j+4>>2]=857760878;c[j+8>>2]=2036477234;c[j+12>>2]=1797285236;c[j+16>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;l=h+4|0;c[j+20>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+8|0;c[j+24>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+12|0;c[j+28>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+16|0;c[j+32>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[j+36>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[j+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[j+44>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;c[j+48>>2]=0;c[j+52>>2]=0;c[j+56>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;g=g+4|0;c[j+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(j,b,a,e,f);e=j+64|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(e|0));i=k;return 0}function ng(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;k=i;j=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=k;return 0}c[j>>2]=1634760805;c[j+4>>2]=857760878;c[j+8>>2]=2036477234;c[j+12>>2]=1797285236;c[j+16>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;l=h+4|0;c[j+20>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+8|0;c[j+24>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+12|0;c[j+28>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+16|0;c[j+32>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+20|0;c[j+36>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;l=h+24|0;c[j+40>>2]=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;h=h+28|0;c[j+44>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;c[j+48>>2]=0;c[j+52>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;h=g+4|0;c[j+56>>2]=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;g=g+8|0;c[j+60>>2]=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;og(j,b,a,e,f);e=j+64|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(e|0));i=k;return 0}function og(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;V=i;S=i=i+63&-64;i=i+64|0;if((g|0)==0&(h|0)==0){i=V;return}if(h>>>0>63|(h|0)==63&g>>>0>4294967232)ra();F=c[b>>2]|0;G=c[b+4>>2]|0;H=c[b+8>>2]|0;I=c[b+12>>2]|0;J=c[b+16>>2]|0;K=c[b+20>>2]|0;L=c[b+24>>2]|0;M=c[b+28>>2]|0;N=c[b+32>>2]|0;O=c[b+36>>2]|0;P=c[b+40>>2]|0;Q=c[b+44>>2]|0;T=b+48|0;U=b+52|0;R=c[b+56>>2]|0;E=c[b+60>>2]|0;b=0;k=c[T>>2]|0;B=c[U>>2]|0;while(1){D=h>>>0<0|(h|0)==0&g>>>0<64;if(D){b=S;j=b+64|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0));b=0;do{a[S+b>>0]=a[e+b>>0]|0;b=b+1|0}while(0<h>>>0|0==(h|0)&b>>>0<g>>>0);e=S;A=S;z=f}else{A=f;z=b}b=20;f=F;j=G;l=P;m=Q;n=k;o=B;p=R;q=E;r=H;s=I;t=J;u=K;v=L;w=M;x=N;y=O;do{ja=f+t|0;ea=ja^n;ea=ea<<16|ea>>>16;$=ea+x|0;W=$^t;W=W<<12|W>>>20;ja=W+ja|0;ea=ja^ea;ea=ea<<8|ea>>>24;$=ea+$|0;W=$^W;W=W<<7|W>>>25;fa=j+u|0;aa=fa^o;aa=aa<<16|aa>>>16;X=aa+y|0;ga=X^u;ga=ga<<12|ga>>>20;fa=ga+fa|0;aa=fa^aa;aa=aa<<8|aa>>>24;X=aa+X|0;ga=X^ga;ga=ga<<7|ga>>>25;ba=r+v|0;Y=ba^p;Y=Y<<16|Y>>>16;ha=Y+l|0;ca=ha^v;ca=ca<<12|ca>>>20;ba=ca+ba|0;Y=ba^Y;Y=Y<<8|Y>>>24;ha=Y+ha|0;ca=ha^ca;ca=ca<<7|ca>>>25;Z=s+w|0;ia=Z^q;ia=ia<<16|ia>>>16;da=ia+m|0;_=da^w;_=_<<12|_>>>20;Z=_+Z|0;ia=Z^ia;ia=ia<<8|ia>>>24;da=ia+da|0;_=da^_;_=_<<7|_>>>25;ja=ga+ja|0;ia=ja^ia;ia=ia<<16|ia>>>16;ha=ia+ha|0;ga=ha^ga;ga=ga<<12|ga>>>20;f=ga+ja|0;ia=f^ia;q=ia<<8|ia>>>24;l=q+ha|0;ga=l^ga;u=ga<<7|ga>>>25;fa=ca+fa|0;ea=fa^ea;ea=ea<<16|ea>>>16;da=ea+da|0;ca=da^ca;ca=ca<<12|ca>>>20;j=ca+fa|0;ea=j^ea;n=ea<<8|ea>>>24;m=n+da|0;ca=m^ca;v=ca<<7|ca>>>25;ba=_+ba|0;aa=ba^aa;aa=aa<<16|aa>>>16;$=aa+$|0;_=$^_;_=_<<12|_>>>20;r=_+ba|0;aa=r^aa;o=aa<<8|aa>>>24;x=o+$|0;_=x^_;w=_<<7|_>>>25;Z=W+Z|0;Y=Z^Y;Y=Y<<16|Y>>>16;X=Y+X|0;W=X^W;W=W<<12|W>>>20;s=W+Z|0;Y=s^Y;p=Y<<8|Y>>>24;y=p+X|0;W=y^W;t=W<<7|W>>>25;b=b+-2|0}while((b|0)!=0);b=(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24)^f+F;W=e+4|0;W=(d[W>>0]|d[W+1>>0]<<8|d[W+2>>0]<<16|d[W+3>>0]<<24)^j+G;X=e+8|0;X=(d[X>>0]|d[X+1>>0]<<8|d[X+2>>0]<<16|d[X+3>>0]<<24)^r+H;Y=e+12|0;Y=(d[Y>>0]|d[Y+1>>0]<<8|d[Y+2>>0]<<16|d[Y+3>>0]<<24)^s+I;Z=e+16|0;Z=(d[Z>>0]|d[Z+1>>0]<<8|d[Z+2>>0]<<16|d[Z+3>>0]<<24)^t+J;_=e+20|0;_=(d[_>>0]|d[_+1>>0]<<8|d[_+2>>0]<<16|d[_+3>>0]<<24)^u+K;$=e+24|0;$=(d[$>>0]|d[$+1>>0]<<8|d[$+2>>0]<<16|d[$+3>>0]<<24)^v+L;aa=e+28|0;aa=(d[aa>>0]|d[aa+1>>0]<<8|d[aa+2>>0]<<16|d[aa+3>>0]<<24)^w+M;ba=e+32|0;ba=(d[ba>>0]|d[ba+1>>0]<<8|d[ba+2>>0]<<16|d[ba+3>>0]<<24)^x+N;ca=e+36|0;ca=(d[ca>>0]|d[ca+1>>0]<<8|d[ca+2>>0]<<16|d[ca+3>>0]<<24)^y+O;da=e+40|0;da=(d[da>>0]|d[da+1>>0]<<8|d[da+2>>0]<<16|d[da+3>>0]<<24)^l+P;ea=e+44|0;ea=(d[ea>>0]|d[ea+1>>0]<<8|d[ea+2>>0]<<16|d[ea+3>>0]<<24)^m+Q;fa=e+48|0;fa=(d[fa>>0]|d[fa+1>>0]<<8|d[fa+2>>0]<<16|d[fa+3>>0]<<24)^n+k;ga=e+52|0;ga=(d[ga>>0]|d[ga+1>>0]<<8|d[ga+2>>0]<<16|d[ga+3>>0]<<24)^o+B;ha=e+56|0;ha=(d[ha>>0]|d[ha+1>>0]<<8|d[ha+2>>0]<<16|d[ha+3>>0]<<24)^p+R;ia=e+60|0;ia=(d[ia>>0]|d[ia+1>>0]<<8|d[ia+2>>0]<<16|d[ia+3>>0]<<24)^q+E;k=k+1|0;j=((k|0)==0&1)+B|0;a[A>>0]=b;a[A+1>>0]=b>>8;a[A+2>>0]=b>>16;a[A+3>>0]=b>>24;ja=A+4|0;a[ja>>0]=W;a[ja+1>>0]=W>>8;a[ja+2>>0]=W>>16;a[ja+3>>0]=W>>24;ja=A+8|0;a[ja>>0]=X;a[ja+1>>0]=X>>8;a[ja+2>>0]=X>>16;a[ja+3>>0]=X>>24;ja=A+12|0;a[ja>>0]=Y;a[ja+1>>0]=Y>>8;a[ja+2>>0]=Y>>16;a[ja+3>>0]=Y>>24;ja=A+16|0;a[ja>>0]=Z;a[ja+1>>0]=Z>>8;a[ja+2>>0]=Z>>16;a[ja+3>>0]=Z>>24;ja=A+20|0;a[ja>>0]=_;a[ja+1>>0]=_>>8;a[ja+2>>0]=_>>16;a[ja+3>>0]=_>>24;ja=A+24|0;a[ja>>0]=$;a[ja+1>>0]=$>>8;a[ja+2>>0]=$>>16;a[ja+3>>0]=$>>24;ja=A+28|0;a[ja>>0]=aa;a[ja+1>>0]=aa>>8;a[ja+2>>0]=aa>>16;a[ja+3>>0]=aa>>24;ja=A+32|0;a[ja>>0]=ba;a[ja+1>>0]=ba>>8;a[ja+2>>0]=ba>>16;a[ja+3>>0]=ba>>24;ja=A+36|0;a[ja>>0]=ca;a[ja+1>>0]=ca>>8;a[ja+2>>0]=ca>>16;a[ja+3>>0]=ca>>24;ja=A+40|0;a[ja>>0]=da;a[ja+1>>0]=da>>8;a[ja+2>>0]=da>>16;a[ja+3>>0]=da>>24;ja=A+44|0;a[ja>>0]=ea;a[ja+1>>0]=ea>>8;a[ja+2>>0]=ea>>16;a[ja+3>>0]=ea>>24;ja=A+48|0;a[ja>>0]=fa;a[ja+1>>0]=fa>>8;a[ja+2>>0]=fa>>16;a[ja+3>>0]=fa>>24;ja=A+52|0;a[ja>>0]=ga;a[ja+1>>0]=ga>>8;a[ja+2>>0]=ga>>16;a[ja+3>>0]=ga>>24;ja=A+56|0;a[ja>>0]=ha;a[ja+1>>0]=ha>>8;a[ja+2>>0]=ha>>16;a[ja+3>>0]=ha>>24;ja=A+60|0;a[ja>>0]=ia;a[ja+1>>0]=ia>>8;a[ja+2>>0]=ia>>16;a[ja+3>>0]=ia>>24;if(h>>>0<0|(h|0)==0&g>>>0<65)break;b=lh(g|0,h|0,-64,-1)|0;e=e+64|0;f=A+64|0;h=C;g=b;b=z;B=j}if((D?g|0:0)?(a[z>>0]=b,(g|0)!=1):0){b=1;do{a[z+b>>0]=a[A+b>>0]|0;b=b+1|0}while((b|0)!=(g|0))}c[T>>2]=k;c[U>>2]=j;i=V;return}function pg(){return 32}function qg(){return 24}function rg(){return 33245}function sg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+32|0;Fc(g,d,e,0)|0;Vg(a,b,c,d+16|0,g)|0;i=f;return 0}function tg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=i=i+63&-64;i=i+32|0;Fc(h,e,f,0)|0;Wg(a,b,c,d,e+16|0,0,0,h)|0;i=g;return 0}function ug(){return 32}function vg(){return 8}function wg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Wg(a,b,c,d,e,0,0,f)|0;return 0}function xg(){return 32}function yg(){return 24}function zg(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=i=i+63&-64;i=i+32|0;Fc(g,d,e,0)|0;Vg(a,b,c,d+16|0,g)|0;i=f;return 0}function Ag(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;j=i;k=i=i+63&-64;i=i+32|0;Fc(k,e,h,0)|0;Wg(a,b,c,d,e+16|0,f,g,k)|0;i=j;return 0}function Bg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=i=i+63&-64;i=i+32|0;Fc(h,e,f,0)|0;Wg(a,b,c,d,e+16|0,0,0,h)|0;i=g;return 0}function Cg(){return 16}function Dg(b,c){b=b|0;c=c|0;return ((((a[c+15>>0]^a[b+15>>0]|(a[c+14>>0]^a[b+14>>0]|(a[c+13>>0]^a[b+13>>0]|(a[c+12>>0]^a[b+12>>0]|(a[c+11>>0]^a[b+11>>0]|(a[c+10>>0]^a[b+10>>0]|(a[c+9>>0]^a[b+9>>0]|(a[c+8>>0]^a[b+8>>0]|(a[c+7>>0]^a[b+7>>0]|(a[c+6>>0]^a[b+6>>0]|(a[c+5>>0]^a[b+5>>0]|(a[c+4>>0]^a[b+4>>0]|(a[c+3>>0]^a[b+3>>0]|(a[c+2>>0]^a[b+2>>0]|(a[c+1>>0]^a[b+1>>0]|a[c>>0]^a[b>>0])))))))))))))))&255)+511|0)>>>8&1)+-1|0}function Eg(){return 32}function Fg(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=32);return ((d+511|0)>>>8&1)+-1|0}function Gg(){return 64}function Hg(b,c){b=b|0;c=c|0;var d=0,e=0;d=0;e=0;do{d=(a[c+e>>0]^a[b+e>>0])&255|d;e=e+1|0}while((e|0)!=64);return ((d+511|0)>>>8&1)+-1|0}function Ig(){return 33254}function Jg(){return ma(0)|0}function Kg(){na(1);return}function Lg(a){a=a|0;var b=0,c=0;if(a>>>0<2){a=0;return a|0}b=((0-a|0)>>>0)%(a>>>0)|0;do c=ma(0)|0;while(c>>>0<b>>>0);a=(c>>>0)%(a>>>0)|0;return a|0}function Mg(b,c){b=b|0;c=c|0;var d=0;if(!c)return;else d=0;do{a[b+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=(c|0));return}function Ng(){return 0}function Og(b,c,d){b=b|0;c=c|0;d=d|0;if(!(d>>>0<1|(d|0)==1&c>>>0<0))za(34e3,34020,162,34046);if(!c)return;else d=0;do{a[b+d>>0]=ma(0)|0;d=d+1|0}while((d|0)!=(c|0));return}function Pg(){var a=0,b=0;if(c[8520]|0){b=1;return b|0}na(1);a=ka(30)|0;if((a|0)>0)c[8521]=a;else a=c[8521]|0;if(a>>>0<16)ra();else b=0;do{ma(0)|0;b=b+1|0}while((b|0)!=16);c[8520]=1;b=0;return b|0}function Qg(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=f<<1;if(!(f>>>0<2147483647&g>>>0<c>>>0))ra();if(!f){f=0;f=b+f|0;a[f>>0]=0;return b|0}else c=0;do{j=d[e+c>>0]|0;i=j&15;j=j>>>4;h=c<<1;a[b+h>>0]=j+87+((j+65526|0)>>>8&217);a[b+(h|1)>>0]=((i<<8)+22272+(i+65526&55552)|0)>>>8;c=c+1|0}while((c|0)!=(f|0));j=b+g|0;a[j>>0]=0;return b|0}function Rg(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;a:do if(!g){n=0;l=0;o=0;k=0}else{b:do if(!h){n=0;r=0;l=0;k=0;while(1){p=d[f+l>>0]|0;m=p^48;o=(m+65526|0)>>>8;p=(p&223)+201|0;q=p&255;q=(q+65526^q+65520)>>>8;if(!((q|o)&255)){o=0;break a}m=q&p|o&m;if(n>>>0>=e>>>0){m=k;break b}if(!(k<<24>>24))m=m<<4&255;else{a[b+n>>0]=m|r&255;n=n+1|0;m=r}k=(k&255^255)&255;l=l+1|0;if(l>>>0<g>>>0)r=m;else{o=0;break a}}}else{n=0;t=0;l=0;k=0;while(1){s=k<<24>>24==0;c:do if(!s){q=d[f+l>>0]|0;m=q^48;o=(m+65526|0)>>>8;q=(q&223)+201|0;p=q&255;p=(p+65526^p+65520)>>>8;if(!((p|o)&255)){o=0;break a}}else while(1){o=d[f+l>>0]|0;m=o^48;q=(m+65526|0)>>>8;r=(o&223)+201|0;p=r&255;p=(p+65526^p+65520)>>>8;if((p|q)&255|0){o=q;q=r;break c}if(!(ch(h,o)|0)){o=0;k=0;break a}l=l+1|0;if(l>>>0>=g>>>0){o=0;k=0;break a}}while(0);m=p&q|o&m;if(n>>>0>=e>>>0){m=k;break b}if(s)m=m<<4&255;else{a[b+n>>0]=m|t&255;n=n+1|0;m=t}k=(k&255^255)&255;l=l+1|0;if(l>>>0<g>>>0)t=m;else{o=0;break a}}}while(0);if(!(c[8522]|0))k=34132;else k=c[(oa()|0)+64>>2]|0;c[k>>2]=34;o=-1;k=m}while(0);if(j|0)c[j>>2]=f+(((k<<24>>24!=0)<<31>>31)+l);if(!i)return o|0;c[i>>2]=n;return o|0}function Sg(){return 34058}function Tg(){return 9}function Ug(){return 2}function Vg(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=i;x=i=i+63&-64;i=i+112|0;s=x;w=x+48|0;x=x+16|0;if((e|0)==0&(f|0)==0){i=y;return 0}k=x;j=k+32|0;do{a[k>>0]=a[h>>0]|0;k=k+1|0;h=h+1|0}while((k|0)<(j|0));q=g;p=q;q=q+4|0;q=d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24;r=s;c[r>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[r+4>>2]=q;r=s+8|0;q=r;c[q>>2]=0;c[q+4>>2]=0;if(f>>>0>0|(f|0)==0&e>>>0>63){k=s+9|0;l=s+10|0;m=s+11|0;n=s+12|0;o=s+13|0;p=s+14|0;q=s+15|0;g=b;j=e;h=f;do{Kc(g,s,x,0)|0;e=c[r>>2]|0;f=(e&255)+1|0;a[r>>0]=f;f=(e>>>8&255)+(f>>>8)|0;a[k>>0]=f;f=(e>>>16&255)+(f>>>8)|0;a[l>>0]=f;f=(e>>>24)+(f>>>8)|0;a[m>>0]=f;e=c[n>>2]|0;f=(e&255)+(f>>>8)|0;a[n>>0]=f;f=(e>>>8&255)+(f>>>8)|0;a[o>>0]=f;f=(e>>>16&255)+(f>>>8)|0;a[p>>0]=f;a[q>>0]=(e>>>24)+(f>>>8);j=lh(j|0,h|0,-64,-1)|0;h=C;g=g+64|0}while(h>>>0>0|(h|0)==0&j>>>0>63);if(!((j|0)==0&(h|0)==0)){u=g;v=j;t=6}}else{u=b;v=e;t=6}if((t|0)==6?(Kc(w,s,x,0)|0,v|0):0){h=0;do{a[u+h>>0]=a[w+h>>0]|0;h=h+1|0}while((h|0)!=(v|0))}k=w;j=k+64|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(j|0));k=x;j=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(j|0));i=y;return 0}function Wg(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0;D=i;B=i=i+63&-64;i=i+112|0;v=B;A=B+48|0;B=B+16|0;if((f|0)==0&(g|0)==0){i=D;return 0}n=B;m=n+32|0;do{a[n>>0]=a[l>>0]|0;n=n+1|0;l=l+1|0}while((n|0)<(m|0));s=h;p=s;s=s+4|0;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;o=v;c[o>>2]=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;c[o+4>>2]=s;o=v+8|0;a[o>>0]=j;s=oh(j|0,k|0,8)|0;p=v+9|0;a[p>>0]=s;s=oh(j|0,k|0,16)|0;q=v+10|0;a[q>>0]=s;s=oh(j|0,k|0,24)|0;r=v+11|0;a[r>>0]=s;s=v+12|0;a[s>>0]=k;n=oh(j|0,k|0,40)|0;t=v+13|0;a[t>>0]=n;n=oh(j|0,k|0,48)|0;u=v+14|0;a[u>>0]=n;k=oh(j|0,k|0,56)|0;j=v+15|0;a[j>>0]=k;if(g>>>0>0|(g|0)==0&f>>>0>63){n=e;h=f;l=g;do{Kc(A,v,B,0)|0;m=0;do{a[b+m>>0]=a[A+m>>0]^a[n+m>>0];m=m+1|0}while((m|0)!=64);f=c[o>>2]|0;g=(f&255)+1|0;a[o>>0]=g;g=(f>>>8&255)+(g>>>8)|0;a[p>>0]=g;g=(f>>>16&255)+(g>>>8)|0;a[q>>0]=g;g=(f>>>24)+(g>>>8)|0;a[r>>0]=g;f=c[s>>2]|0;g=(f&255)+(g>>>8)|0;a[s>>0]=g;g=(f>>>8&255)+(g>>>8)|0;a[t>>0]=g;g=(f>>>16&255)+(g>>>8)|0;a[u>>0]=g;a[j>>0]=(f>>>24)+(g>>>8);h=lh(h|0,l|0,-64,-1)|0;l=C;b=b+64|0;n=n+64|0}while(l>>>0>0|(l|0)==0&h>>>0>63);if(!((h|0)==0&(l|0)==0)){x=b;y=h;z=n;w=8}}else{x=b;y=f;z=e;w=8}if((w|0)==8?(Kc(A,v,B,0)|0,y|0):0){l=0;do{a[x+l>>0]=a[A+l>>0]^a[z+l>>0];l=l+1|0}while((l|0)!=(y|0))}n=A;m=n+64|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(m|0));n=B;m=n+32|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(m|0));i=D;return 0}function Xg(a){a=a|0;var b=0,d=0;d=i;b=i=i+63&-64;i=i+16|0;c[b>>2]=c[a+60>>2];a=pa(6,b|0)|0;if(a>>>0>4294963200){if(!(c[8522]|0))b=34132;else b=c[(oa()|0)+64>>2]|0;c[b>>2]=0-a;a=-1}i=d;return a|0}function Yg(){var a=0;if(!(c[8522]|0))a=34132;else a=c[(oa()|0)+64>>2]|0;return a|0}function Zg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=i;e=i=i+63&-64;i=i+32|0;h=e;e=e+20|0;c[h>>2]=c[a+60>>2];c[h+4>>2]=0;c[h+8>>2]=b;c[h+12>>2]=e;c[h+16>>2]=d;b=ya(140,h|0)|0;if(b>>>0<=4294963200)if((b|0)<0)f=7;else a=c[e>>2]|0;else{if(!(c[8522]|0))a=34132;else a=c[(oa()|0)+64>>2]|0;c[a>>2]=0-b;f=7}if((f|0)==7){c[e>>2]=-1;a=-1}i=g;return a|0}function _g(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=i;h=i=i+63&-64;i=i+80|0;f=h;c[b+36>>2]=20;if((c[b>>2]&64|0)==0?(c[f>>2]=c[b+60>>2],c[f+4>>2]=21505,c[f+8>>2]=h+12,wa(54,f|0)|0):0)a[b+75>>0]=-1;h=$g(b,d,e)|0;i=g;return h|0}function $g(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=i;k=i=i+63&-64;i=i+48|0;n=k+16|0;m=k;k=k+32|0;o=a+28|0;g=c[o>>2]|0;c[k>>2]=g;p=a+20|0;g=(c[p>>2]|0)-g|0;c[k+4>>2]=g;c[k+8>>2]=b;c[k+12>>2]=d;j=a+60|0;l=a+44|0;f=2;g=g+d|0;while(1){if(!(c[8522]|0)){c[n>>2]=c[j>>2];c[n+4>>2]=k;c[n+8>>2]=f;b=Aa(146,n|0)|0;if(b>>>0>4294963200){if(!(c[8522]|0))e=34132;else e=c[(oa()|0)+64>>2]|0;c[e>>2]=0-b;b=-1}}else{ua(18,a|0);c[m>>2]=c[j>>2];c[m+4>>2]=k;c[m+8>>2]=f;b=Aa(146,m|0)|0;if(b>>>0>4294963200){if(!(c[8522]|0))e=34132;else e=c[(oa()|0)+64>>2]|0;c[e>>2]=0-b;b=-1}ja(0)}if((g|0)==(b|0)){b=13;break}if((b|0)<0){b=15;break}g=g-b|0;e=c[k+4>>2]|0;if(b>>>0<=e>>>0)if((f|0)==2){c[o>>2]=(c[o>>2]|0)+b;h=e;e=k;f=2}else{h=e;e=k}else{h=c[l>>2]|0;c[o>>2]=h;c[p>>2]=h;h=c[k+12>>2]|0;b=b-e|0;e=k+8|0;f=f+-1|0}c[e>>2]=(c[e>>2]|0)+b;c[e+4>>2]=h-b;k=e}if((b|0)==13){n=c[l>>2]|0;c[a+16>>2]=n+(c[a+48>>2]|0);a=n;c[o>>2]=a;c[p>>2]=a}else if((b|0)==15){c[a+16>>2]=0;c[o>>2]=0;c[p>>2]=0;c[a>>2]=c[a>>2]|32;if((f|0)==2)d=0;else d=d-(c[k+4>>2]|0)|0}i=q;return d|0}function ah(a){a=a|0;return}function bh(b){b=b|0;var d=0,e=0,f=0;f=b;a:do if(!(f&3))e=4;else{d=b;b=f;while(1){if(!(a[d>>0]|0))break a;d=d+1|0;b=d;if(!(b&3)){b=d;e=4;break}}}while(0);if((e|0)==4){while(1){d=c[b>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009))b=b+4|0;else break}if((d&255)<<24>>24)do b=b+1|0;while((a[b>>0]|0)!=0)}return b-f|0}function ch(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;g=d&255;a:do if(!g){e=b+(bh(b)|0)|0;b=e;f=d&255;e=a[e>>0]|0}else{if(b&3){f=d&255;do{e=a[b>>0]|0;if(e<<24>>24==0?1:e<<24>>24==f<<24>>24)break a;b=b+1|0}while((b&3|0)!=0)}f=_(g,16843009)|0;e=c[b>>2]|0;b:do if(!((e&-2139062144^-2139062144)&e+-16843009))do{g=e^f;if((g&-2139062144^-2139062144)&g+-16843009|0)break b;b=b+4|0;e=c[b>>2]|0}while(!((e&-2139062144^-2139062144)&e+-16843009|0));while(0);f=d&255;while(1){e=a[b>>0]|0;if(e<<24>>24==0?1:e<<24>>24==f<<24>>24)break;else b=b+1|0}}while(0);return (e<<24>>24==f<<24>>24?b:0)|0}function dh(a){a=a|0;var b=0;if(!a){if(!(c[8102]|0))a=0;else a=dh(c[8102]|0)|0;la(34116);b=c[8528]|0;if(b)do{if((c[b+20>>2]|0)>>>0>(c[b+28>>2]|0)>>>0)a=eh(b)|0|a;b=c[b+56>>2]|0}while((b|0)!=0);xa(34116)}else a=eh(a)|0;return a|0}function eh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a+20|0;g=a+28|0;if((c[b>>2]|0)>>>0>(c[g>>2]|0)>>>0?(Da[c[a+36>>2]&31](a,0,0)|0,(c[b>>2]|0)==0):0)b=-1;else{h=a+4|0;d=c[h>>2]|0;e=a+8|0;f=c[e>>2]|0;if(d>>>0<f>>>0)Da[c[a+40>>2]&31](a,d-f|0,1)|0;c[a+16>>2]=0;c[g>>2]=0;c[b>>2]=0;c[e>>2]=0;c[h>>2]=0;b=0}return b|0}function fh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;do if(a>>>0<245){o=a>>>0<11?16:a+11&-8;a=o>>>3;j=c[8534]|0;b=j>>>a;if(b&3|0){b=(b&1^1)+a|0;d=34176+(b<<1<<2)|0;e=d+8|0;f=c[e>>2]|0;g=f+8|0;h=c[g>>2]|0;do if((d|0)!=(h|0)){if(h>>>0<(c[8538]|0)>>>0)ra();a=h+12|0;if((c[a>>2]|0)==(f|0)){c[a>>2]=d;c[e>>2]=h;break}else ra()}else c[8534]=j&~(1<<b);while(0);G=b<<3;c[f+4>>2]=G|3;G=f+G+4|0;c[G>>2]=c[G>>2]|1;G=g;return G|0}h=c[8536]|0;if(o>>>0>h>>>0){if(b|0){d=2<<a;d=b<<a&(d|0-d);d=(d&0-d)+-1|0;i=d>>>12&16;d=d>>>i;f=d>>>5&8;d=d>>>f;g=d>>>2&4;d=d>>>g;e=d>>>1&2;d=d>>>e;b=d>>>1&1;b=(f|i|g|e|b)+(d>>>b)|0;d=34176+(b<<1<<2)|0;e=d+8|0;g=c[e>>2]|0;i=g+8|0;f=c[i>>2]|0;do if((d|0)!=(f|0)){if(f>>>0<(c[8538]|0)>>>0)ra();a=f+12|0;if((c[a>>2]|0)==(g|0)){c[a>>2]=d;c[e>>2]=f;k=c[8536]|0;break}else ra()}else{c[8534]=j&~(1<<b);k=h}while(0);h=(b<<3)-o|0;c[g+4>>2]=o|3;e=g+o|0;c[e+4>>2]=h|1;c[e+h>>2]=h;if(k|0){f=c[8539]|0;b=k>>>3;d=34176+(b<<1<<2)|0;a=c[8534]|0;b=1<<b;if(a&b){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{l=a;m=b}}else{c[8534]=a|b;l=d+8|0;m=d}c[l>>2]=f;c[m+12>>2]=f;c[f+8>>2]=m;c[f+12>>2]=d}c[8536]=h;c[8539]=e;G=i;return G|0}a=c[8535]|0;if(a){i=(a&0-a)+-1|0;F=i>>>12&16;i=i>>>F;E=i>>>5&8;i=i>>>E;G=i>>>2&4;i=i>>>G;b=i>>>1&2;i=i>>>b;j=i>>>1&1;j=c[34440+((E|F|G|b|j)+(i>>>j)<<2)>>2]|0;i=(c[j+4>>2]&-8)-o|0;b=j;while(1){a=c[b+16>>2]|0;if(!a){a=c[b+20>>2]|0;if(!a)break}b=(c[a+4>>2]&-8)-o|0;G=b>>>0<i>>>0;i=G?b:i;b=a;j=G?a:j}f=c[8538]|0;if(j>>>0<f>>>0)ra();h=j+o|0;if(j>>>0>=h>>>0)ra();g=c[j+24>>2]|0;d=c[j+12>>2]|0;do if((d|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){n=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<f>>>0)ra();else{c[b>>2]=0;n=a;break}}else{e=c[j+8>>2]|0;if(e>>>0<f>>>0)ra();a=e+12|0;if((c[a>>2]|0)!=(j|0))ra();b=d+8|0;if((c[b>>2]|0)==(j|0)){c[a>>2]=d;c[b>>2]=e;n=d;break}else ra()}while(0);do if(g|0){a=c[j+28>>2]|0;b=34440+(a<<2)|0;if((j|0)==(c[b>>2]|0)){c[b>>2]=n;if(!n){c[8535]=c[8535]&~(1<<a);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(j|0))c[a>>2]=n;else c[g+20>>2]=n;if(!n)break}b=c[8538]|0;if(n>>>0<b>>>0)ra();c[n+24>>2]=g;a=c[j+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)ra();else{c[n+16>>2]=a;c[a+24>>2]=n;break}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[n+20>>2]=a;c[a+24>>2]=n;break}}while(0);if(i>>>0<16){G=i+o|0;c[j+4>>2]=G|3;G=j+G+4|0;c[G>>2]=c[G>>2]|1}else{c[j+4>>2]=o|3;c[h+4>>2]=i|1;c[h+i>>2]=i;a=c[8536]|0;if(a|0){e=c[8539]|0;b=a>>>3;d=34176+(b<<1<<2)|0;a=c[8534]|0;b=1<<b;if(a&b){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{p=a;q=b}}else{c[8534]=a|b;p=d+8|0;q=d}c[p>>2]=e;c[q+12>>2]=e;c[e+8>>2]=q;c[e+12>>2]=d}c[8536]=i;c[8539]=h}G=j+8|0;return G|0}}}else if(a>>>0<=4294967231){a=a+11|0;o=a&-8;k=c[8535]|0;if(k){d=0-o|0;a=a>>>8;if(a)if(o>>>0>16777215)j=31;else{q=(a+1048320|0)>>>16&8;z=a<<q;p=(z+520192|0)>>>16&4;z=z<<p;j=(z+245760|0)>>>16&2;j=14-(p|q|j)+(z<<j>>>15)|0;j=o>>>(j+7|0)&1|j<<1}else j=0;b=c[34440+(j<<2)>>2]|0;a:do if(!b){a=0;b=0;z=86}else{f=d;a=0;h=o<<((j|0)==31?0:25-(j>>>1)|0);i=b;b=0;while(1){e=c[i+4>>2]&-8;d=e-o|0;if(d>>>0<f>>>0)if((e|0)==(o|0)){a=i;b=i;z=90;break a}else b=i;else d=f;e=c[i+20>>2]|0;i=c[i+16+(h>>>31<<2)>>2]|0;a=(e|0)==0|(e|0)==(i|0)?a:e;e=(i|0)==0;if(e){z=86;break}else{f=d;h=h<<(e&1^1)}}}while(0);if((z|0)==86){if((a|0)==0&(b|0)==0){a=2<<j;a=k&(a|0-a);if(!a)break;q=(a&0-a)+-1|0;m=q>>>12&16;q=q>>>m;l=q>>>5&8;q=q>>>l;n=q>>>2&4;q=q>>>n;p=q>>>1&2;q=q>>>p;a=q>>>1&1;a=c[34440+((l|m|n|p|a)+(q>>>a)<<2)>>2]|0}if(!a){i=d;j=b}else z=90}if((z|0)==90)while(1){z=0;q=(c[a+4>>2]&-8)-o|0;e=q>>>0<d>>>0;d=e?q:d;b=e?a:b;e=c[a+16>>2]|0;if(e|0){a=e;z=90;continue}a=c[a+20>>2]|0;if(!a){i=d;j=b;break}else z=90}if((j|0)!=0?i>>>0<((c[8536]|0)-o|0)>>>0:0){f=c[8538]|0;if(j>>>0<f>>>0)ra();h=j+o|0;if(j>>>0>=h>>>0)ra();g=c[j+24>>2]|0;d=c[j+12>>2]|0;do if((d|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){s=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<f>>>0)ra();else{c[b>>2]=0;s=a;break}}else{e=c[j+8>>2]|0;if(e>>>0<f>>>0)ra();a=e+12|0;if((c[a>>2]|0)!=(j|0))ra();b=d+8|0;if((c[b>>2]|0)==(j|0)){c[a>>2]=d;c[b>>2]=e;s=d;break}else ra()}while(0);do if(g|0){a=c[j+28>>2]|0;b=34440+(a<<2)|0;if((j|0)==(c[b>>2]|0)){c[b>>2]=s;if(!s){c[8535]=c[8535]&~(1<<a);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(j|0))c[a>>2]=s;else c[g+20>>2]=s;if(!s)break}b=c[8538]|0;if(s>>>0<b>>>0)ra();c[s+24>>2]=g;a=c[j+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)ra();else{c[s+16>>2]=a;c[a+24>>2]=s;break}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[s+20>>2]=a;c[a+24>>2]=s;break}}while(0);do if(i>>>0>=16){c[j+4>>2]=o|3;c[h+4>>2]=i|1;c[h+i>>2]=i;a=i>>>3;if(i>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;if(b&a){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{t=a;v=b}}else{c[8534]=b|a;t=d+8|0;v=d}c[t>>2]=h;c[v+12>>2]=h;c[h+8>>2]=v;c[h+12>>2]=d;break}a=i>>>8;if(a)if(i>>>0>16777215)d=31;else{F=(a+1048320|0)>>>16&8;G=a<<F;E=(G+520192|0)>>>16&4;G=G<<E;d=(G+245760|0)>>>16&2;d=14-(E|F|d)+(G<<d>>>15)|0;d=i>>>(d+7|0)&1|d<<1}else d=0;e=34440+(d<<2)|0;c[h+28>>2]=d;a=h+16|0;c[a+4>>2]=0;c[a>>2]=0;a=c[8535]|0;b=1<<d;if(!(a&b)){c[8535]=a|b;c[e>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}d=i<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(i|0)){z=148;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){z=145;break}else{d=d<<1;e=a}}if((z|0)==145)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}else if((z|0)==148){a=e+8|0;b=c[a>>2]|0;G=c[8538]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=h;c[a>>2]=h;c[h+8>>2]=b;c[h+12>>2]=e;c[h+24>>2]=0;break}else ra()}}else{G=i+o|0;c[j+4>>2]=G|3;G=j+G+4|0;c[G>>2]=c[G>>2]|1}while(0);G=j+8|0;return G|0}}}else o=-1;while(0);d=c[8536]|0;if(d>>>0>=o>>>0){a=d-o|0;b=c[8539]|0;if(a>>>0>15){G=b+o|0;c[8539]=G;c[8536]=a;c[G+4>>2]=a|1;c[G+a>>2]=a;c[b+4>>2]=o|3}else{c[8536]=0;c[8539]=0;c[b+4>>2]=d|3;G=b+d+4|0;c[G>>2]=c[G>>2]|1}G=b+8|0;return G|0}a=c[8537]|0;if(a>>>0>o>>>0){E=a-o|0;c[8537]=E;G=c[8540]|0;F=G+o|0;c[8540]=F;c[F+4>>2]=E|1;c[G+4>>2]=o|3;G=G+8|0;return G|0}do if(!(c[8652]|0)){a=ka(30)|0;if(!(a+-1&a)){c[8654]=a;c[8653]=a;c[8655]=-1;c[8656]=-1;c[8657]=0;c[8645]=0;c[8652]=(ta(0)|0)&-16^1431655768;break}else ra()}while(0);h=o+48|0;e=c[8654]|0;i=o+47|0;d=e+i|0;e=0-e|0;j=d&e;if(j>>>0<=o>>>0){G=0;return G|0}a=c[8644]|0;if(a|0?(t=c[8642]|0,v=t+j|0,v>>>0<=t>>>0|v>>>0>a>>>0):0){G=0;return G|0}b:do if(!(c[8645]&4)){b=c[8540]|0;c:do if(b){f=34584;while(1){a=c[f>>2]|0;if(a>>>0<=b>>>0?(r=f+4|0,(a+(c[r>>2]|0)|0)>>>0>b>>>0):0)break;a=c[f+8>>2]|0;if(!a){z=173;break c}else f=a}a=d-(c[8537]|0)&e;if(a>>>0<2147483647){b=sa(a|0)|0;if((b|0)==((c[f>>2]|0)+(c[r>>2]|0)|0)){if((b|0)!=(-1|0)){h=b;g=a;z=193;break b}}else z=183}}else z=173;while(0);do if((z|0)==173?(u=sa(0)|0,(u|0)!=(-1|0)):0){a=u;b=c[8653]|0;d=b+-1|0;if(!(d&a))a=j;else a=j-a+(d+a&0-b)|0;b=c[8642]|0;d=b+a|0;if(a>>>0>o>>>0&a>>>0<2147483647){v=c[8644]|0;if(v|0?d>>>0<=b>>>0|d>>>0>v>>>0:0)break;b=sa(a|0)|0;if((b|0)==(u|0)){h=u;g=a;z=193;break b}else z=183}}while(0);d:do if((z|0)==183){d=0-a|0;do if(h>>>0>a>>>0&(a>>>0<2147483647&(b|0)!=(-1|0))?(w=c[8654]|0,w=i-a+w&0-w,w>>>0<2147483647):0)if((sa(w|0)|0)==(-1|0)){sa(d|0)|0;break d}else{a=w+a|0;break}while(0);if((b|0)!=(-1|0)){h=b;g=a;z=193;break b}}while(0);c[8645]=c[8645]|4;z=190}else z=190;while(0);if((((z|0)==190?j>>>0<2147483647:0)?(x=sa(j|0)|0,y=sa(0)|0,x>>>0<y>>>0&((x|0)!=(-1|0)&(y|0)!=(-1|0))):0)?(g=y-x|0,g>>>0>(o+40|0)>>>0):0){h=x;z=193}if((z|0)==193){a=(c[8642]|0)+g|0;c[8642]=a;if(a>>>0>(c[8643]|0)>>>0)c[8643]=a;k=c[8540]|0;do if(k){f=34584;while(1){a=c[f>>2]|0;b=f+4|0;d=c[b>>2]|0;if((h|0)==(a+d|0)){z=203;break}e=c[f+8>>2]|0;if(!e)break;else f=e}if(((z|0)==203?(c[f+12>>2]&8|0)==0:0)?k>>>0<h>>>0&k>>>0>=a>>>0:0){c[b>>2]=d+g;G=k+8|0;G=(G&7|0)==0?0:0-G&7;F=k+G|0;G=g-G+(c[8537]|0)|0;c[8540]=F;c[8537]=G;c[F+4>>2]=G|1;c[F+G+4>>2]=40;c[8541]=c[8656];break}a=c[8538]|0;if(h>>>0<a>>>0){c[8538]=h;i=h}else i=a;b=h+g|0;a=34584;while(1){if((c[a>>2]|0)==(b|0)){z=211;break}a=c[a+8>>2]|0;if(!a){b=34584;break}}if((z|0)==211)if(!(c[a+12>>2]&8)){c[a>>2]=h;m=a+4|0;c[m>>2]=(c[m>>2]|0)+g;m=h+8|0;m=h+((m&7|0)==0?0:0-m&7)|0;a=b+8|0;a=b+((a&7|0)==0?0:0-a&7)|0;l=m+o|0;j=a-m-o|0;c[m+4>>2]=o|3;do if((a|0)!=(k|0)){if((a|0)==(c[8539]|0)){G=(c[8536]|0)+j|0;c[8536]=G;c[8539]=l;c[l+4>>2]=G|1;c[l+G>>2]=G;break}b=c[a+4>>2]|0;if((b&3|0)==1){h=b&-8;f=b>>>3;e:do if(b>>>0>=256){g=c[a+24>>2]|0;e=c[a+12>>2]|0;do if((e|0)==(a|0)){e=a+16|0;d=e+4|0;b=c[d>>2]|0;if(!b){b=c[e>>2]|0;if(!b){E=0;break}else d=e}while(1){e=b+20|0;f=c[e>>2]|0;if(f|0){b=f;d=e;continue}e=b+16|0;f=c[e>>2]|0;if(!f)break;else{b=f;d=e}}if(d>>>0<i>>>0)ra();else{c[d>>2]=0;E=b;break}}else{f=c[a+8>>2]|0;if(f>>>0<i>>>0)ra();b=f+12|0;if((c[b>>2]|0)!=(a|0))ra();d=e+8|0;if((c[d>>2]|0)==(a|0)){c[b>>2]=e;c[d>>2]=f;E=e;break}else ra()}while(0);if(!g)break;b=c[a+28>>2]|0;d=34440+(b<<2)|0;do if((a|0)!=(c[d>>2]|0)){if(g>>>0<(c[8538]|0)>>>0)ra();b=g+16|0;if((c[b>>2]|0)==(a|0))c[b>>2]=E;else c[g+20>>2]=E;if(!E)break e}else{c[d>>2]=E;if(E|0)break;c[8535]=c[8535]&~(1<<b);break e}while(0);e=c[8538]|0;if(E>>>0<e>>>0)ra();c[E+24>>2]=g;b=a+16|0;d=c[b>>2]|0;do if(d|0)if(d>>>0<e>>>0)ra();else{c[E+16>>2]=d;c[d+24>>2]=E;break}while(0);b=c[b+4>>2]|0;if(!b)break;if(b>>>0<(c[8538]|0)>>>0)ra();else{c[E+20>>2]=b;c[b+24>>2]=E;break}}else{d=c[a+8>>2]|0;e=c[a+12>>2]|0;b=34176+(f<<1<<2)|0;do if((d|0)!=(b|0)){if(d>>>0<i>>>0)ra();if((c[d+12>>2]|0)==(a|0))break;ra()}while(0);if((e|0)==(d|0)){c[8534]=c[8534]&~(1<<f);break}do if((e|0)==(b|0))B=e+8|0;else{if(e>>>0<i>>>0)ra();b=e+8|0;if((c[b>>2]|0)==(a|0)){B=b;break}ra()}while(0);c[d+12>>2]=e;c[B>>2]=d}while(0);a=a+h|0;f=h+j|0}else f=j;a=a+4|0;c[a>>2]=c[a>>2]&-2;c[l+4>>2]=f|1;c[l+f>>2]=f;a=f>>>3;if(f>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;do if(!(b&a)){c[8534]=b|a;F=d+8|0;G=d}else{a=d+8|0;b=c[a>>2]|0;if(b>>>0>=(c[8538]|0)>>>0){F=a;G=b;break}ra()}while(0);c[F>>2]=l;c[G+12>>2]=l;c[l+8>>2]=G;c[l+12>>2]=d;break}a=f>>>8;do if(!a)d=0;else{if(f>>>0>16777215){d=31;break}F=(a+1048320|0)>>>16&8;G=a<<F;E=(G+520192|0)>>>16&4;G=G<<E;d=(G+245760|0)>>>16&2;d=14-(E|F|d)+(G<<d>>>15)|0;d=f>>>(d+7|0)&1|d<<1}while(0);e=34440+(d<<2)|0;c[l+28>>2]=d;a=l+16|0;c[a+4>>2]=0;c[a>>2]=0;a=c[8535]|0;b=1<<d;if(!(a&b)){c[8535]=a|b;c[e>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}d=f<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){z=281;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){z=278;break}else{d=d<<1;e=a}}if((z|0)==278)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}else if((z|0)==281){a=e+8|0;b=c[a>>2]|0;G=c[8538]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=l;c[a>>2]=l;c[l+8>>2]=b;c[l+12>>2]=e;c[l+24>>2]=0;break}else ra()}}else{G=(c[8537]|0)+j|0;c[8537]=G;c[8540]=l;c[l+4>>2]=G|1}while(0);G=m+8|0;return G|0}else b=34584;while(1){a=c[b>>2]|0;if(a>>>0<=k>>>0?(A=a+(c[b+4>>2]|0)|0,A>>>0>k>>>0):0)break;b=c[b+8>>2]|0}f=A+-47|0;b=f+8|0;b=f+((b&7|0)==0?0:0-b&7)|0;f=k+16|0;b=b>>>0<f>>>0?k:b;a=b+8|0;d=h+8|0;d=(d&7|0)==0?0:0-d&7;G=h+d|0;d=g+-40-d|0;c[8540]=G;c[8537]=d;c[G+4>>2]=d|1;c[G+d+4>>2]=40;c[8541]=c[8656];d=b+4|0;c[d>>2]=27;c[a>>2]=c[8646];c[a+4>>2]=c[8647];c[a+8>>2]=c[8648];c[a+12>>2]=c[8649];c[8646]=h;c[8647]=g;c[8649]=0;c[8648]=a;a=b+24|0;do{a=a+4|0;c[a>>2]=7}while((a+4|0)>>>0<A>>>0);if((b|0)!=(k|0)){g=b-k|0;c[d>>2]=c[d>>2]&-2;c[k+4>>2]=g|1;c[b>>2]=g;a=g>>>3;if(g>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;if(b&a){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{C=a;D=b}}else{c[8534]=b|a;C=d+8|0;D=d}c[C>>2]=k;c[D+12>>2]=k;c[k+8>>2]=D;c[k+12>>2]=d;break}a=g>>>8;if(a)if(g>>>0>16777215)d=31;else{F=(a+1048320|0)>>>16&8;G=a<<F;E=(G+520192|0)>>>16&4;G=G<<E;d=(G+245760|0)>>>16&2;d=14-(E|F|d)+(G<<d>>>15)|0;d=g>>>(d+7|0)&1|d<<1}else d=0;e=34440+(d<<2)|0;c[k+28>>2]=d;c[k+20>>2]=0;c[f>>2]=0;a=c[8535]|0;b=1<<d;if(!(a&b)){c[8535]=a|b;c[e>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}d=g<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(g|0)){z=307;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){z=304;break}else{d=d<<1;e=a}}if((z|0)==304)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}else if((z|0)==307){a=e+8|0;b=c[a>>2]|0;G=c[8538]|0;if(b>>>0>=G>>>0&e>>>0>=G>>>0){c[b+12>>2]=k;c[a>>2]=k;c[k+8>>2]=b;c[k+12>>2]=e;c[k+24>>2]=0;break}else ra()}}}else{G=c[8538]|0;if((G|0)==0|h>>>0<G>>>0)c[8538]=h;c[8646]=h;c[8647]=g;c[8649]=0;c[8543]=c[8652];c[8542]=-1;a=0;do{G=34176+(a<<1<<2)|0;c[G+12>>2]=G;c[G+8>>2]=G;a=a+1|0}while((a|0)!=32);G=h+8|0;G=(G&7|0)==0?0:0-G&7;F=h+G|0;G=g+-40-G|0;c[8540]=F;c[8537]=G;c[F+4>>2]=G|1;c[F+G+4>>2]=40;c[8541]=c[8656]}while(0);a=c[8537]|0;if(a>>>0>o>>>0){E=a-o|0;c[8537]=E;G=c[8540]|0;F=G+o|0;c[8540]=F;c[F+4>>2]=E|1;c[G+4>>2]=o|3;G=G+8|0;return G|0}}if(!(c[8522]|0))a=34132;else a=c[(oa()|0)+64>>2]|0;c[a>>2]=12;G=0;return G|0}function gh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(!a)return;d=a+-8|0;h=c[8538]|0;if(d>>>0<h>>>0)ra();a=c[a+-4>>2]|0;b=a&3;if((b|0)==1)ra();e=a&-8;m=d+e|0;do if(!(a&1)){a=c[d>>2]|0;if(!b)return;k=d+(0-a)|0;j=a+e|0;if(k>>>0<h>>>0)ra();if((k|0)==(c[8539]|0)){a=m+4|0;b=c[a>>2]|0;if((b&3|0)!=3){q=k;f=j;break}c[8536]=j;c[a>>2]=b&-2;c[k+4>>2]=j|1;c[k+j>>2]=j;return}e=a>>>3;if(a>>>0<256){b=c[k+8>>2]|0;d=c[k+12>>2]|0;a=34176+(e<<1<<2)|0;if((b|0)!=(a|0)){if(b>>>0<h>>>0)ra();if((c[b+12>>2]|0)!=(k|0))ra()}if((d|0)==(b|0)){c[8534]=c[8534]&~(1<<e);q=k;f=j;break}if((d|0)!=(a|0)){if(d>>>0<h>>>0)ra();a=d+8|0;if((c[a>>2]|0)==(k|0))g=a;else ra()}else g=d+8|0;c[b+12>>2]=d;c[g>>2]=b;q=k;f=j;break}g=c[k+24>>2]|0;d=c[k+12>>2]|0;do if((d|0)==(k|0)){d=k+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){i=0;break}else b=d}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<h>>>0)ra();else{c[b>>2]=0;i=a;break}}else{e=c[k+8>>2]|0;if(e>>>0<h>>>0)ra();a=e+12|0;if((c[a>>2]|0)!=(k|0))ra();b=d+8|0;if((c[b>>2]|0)==(k|0)){c[a>>2]=d;c[b>>2]=e;i=d;break}else ra()}while(0);if(g){a=c[k+28>>2]|0;b=34440+(a<<2)|0;if((k|0)==(c[b>>2]|0)){c[b>>2]=i;if(!i){c[8535]=c[8535]&~(1<<a);q=k;f=j;break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(k|0))c[a>>2]=i;else c[g+20>>2]=i;if(!i){q=k;f=j;break}}d=c[8538]|0;if(i>>>0<d>>>0)ra();c[i+24>>2]=g;a=k+16|0;b=c[a>>2]|0;do if(b|0)if(b>>>0<d>>>0)ra();else{c[i+16>>2]=b;c[b+24>>2]=i;break}while(0);a=c[a+4>>2]|0;if(a)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[i+20>>2]=a;c[a+24>>2]=i;q=k;f=j;break}else{q=k;f=j}}else{q=k;f=j}}else{q=d;f=e}while(0);if(q>>>0>=m>>>0)ra();a=m+4|0;b=c[a>>2]|0;if(!(b&1))ra();if(!(b&2)){if((m|0)==(c[8540]|0)){p=(c[8537]|0)+f|0;c[8537]=p;c[8540]=q;c[q+4>>2]=p|1;if((q|0)!=(c[8539]|0))return;c[8539]=0;c[8536]=0;return}if((m|0)==(c[8539]|0)){p=(c[8536]|0)+f|0;c[8536]=p;c[8539]=q;c[q+4>>2]=p|1;c[q+p>>2]=p;return}f=(b&-8)+f|0;e=b>>>3;do if(b>>>0>=256){g=c[m+24>>2]|0;a=c[m+12>>2]|0;do if((a|0)==(m|0)){d=m+16|0;b=d+4|0;a=c[b>>2]|0;if(!a){a=c[d>>2]|0;if(!a){n=0;break}else b=d}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=0;n=a;break}}else{b=c[m+8>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();d=b+12|0;if((c[d>>2]|0)!=(m|0))ra();e=a+8|0;if((c[e>>2]|0)==(m|0)){c[d>>2]=a;c[e>>2]=b;n=a;break}else ra()}while(0);if(g|0){a=c[m+28>>2]|0;b=34440+(a<<2)|0;if((m|0)==(c[b>>2]|0)){c[b>>2]=n;if(!n){c[8535]=c[8535]&~(1<<a);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();a=g+16|0;if((c[a>>2]|0)==(m|0))c[a>>2]=n;else c[g+20>>2]=n;if(!n)break}d=c[8538]|0;if(n>>>0<d>>>0)ra();c[n+24>>2]=g;a=m+16|0;b=c[a>>2]|0;do if(b|0)if(b>>>0<d>>>0)ra();else{c[n+16>>2]=b;c[b+24>>2]=n;break}while(0);a=c[a+4>>2]|0;if(a|0)if(a>>>0<(c[8538]|0)>>>0)ra();else{c[n+20>>2]=a;c[a+24>>2]=n;break}}}else{b=c[m+8>>2]|0;d=c[m+12>>2]|0;a=34176+(e<<1<<2)|0;if((b|0)!=(a|0)){if(b>>>0<(c[8538]|0)>>>0)ra();if((c[b+12>>2]|0)!=(m|0))ra()}if((d|0)==(b|0)){c[8534]=c[8534]&~(1<<e);break}if((d|0)!=(a|0)){if(d>>>0<(c[8538]|0)>>>0)ra();a=d+8|0;if((c[a>>2]|0)==(m|0))l=a;else ra()}else l=d+8|0;c[b+12>>2]=d;c[l>>2]=b}while(0);c[q+4>>2]=f|1;c[q+f>>2]=f;if((q|0)==(c[8539]|0)){c[8536]=f;return}}else{c[a>>2]=b&-2;c[q+4>>2]=f|1;c[q+f>>2]=f}a=f>>>3;if(f>>>0<256){d=34176+(a<<1<<2)|0;b=c[8534]|0;a=1<<a;if(b&a){a=d+8|0;b=c[a>>2]|0;if(b>>>0<(c[8538]|0)>>>0)ra();else{o=a;p=b}}else{c[8534]=b|a;o=d+8|0;p=d}c[o>>2]=q;c[p+12>>2]=q;c[q+8>>2]=p;c[q+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)d=31;else{o=(a+1048320|0)>>>16&8;p=a<<o;n=(p+520192|0)>>>16&4;p=p<<n;d=(p+245760|0)>>>16&2;d=14-(n|o|d)+(p<<d>>>15)|0;d=f>>>(d+7|0)&1|d<<1}else d=0;e=34440+(d<<2)|0;c[q+28>>2]=d;c[q+20>>2]=0;c[q+16>>2]=0;a=c[8535]|0;b=1<<d;do if(a&b){d=f<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){a=130;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){a=127;break}else{d=d<<1;e=a}}if((a|0)==127)if(b>>>0<(c[8538]|0)>>>0)ra();else{c[b>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q;break}else if((a|0)==130){a=e+8|0;b=c[a>>2]|0;p=c[8538]|0;if(b>>>0>=p>>>0&e>>>0>=p>>>0){c[b+12>>2]=q;c[a>>2]=q;c[q+8>>2]=b;c[q+12>>2]=e;c[q+24>>2]=0;break}else ra()}}else{c[8535]=a|b;c[e>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q}while(0);q=(c[8542]|0)+-1|0;c[8542]=q;if(!q)a=34592;else return;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0}c[8542]=-1;return}function hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;o=a+b|0;d=c[a+4>>2]|0;do if(!(d&1)){g=c[a>>2]|0;if(!(d&3))return;l=a+(0-g)|0;k=g+b|0;i=c[8538]|0;if(l>>>0<i>>>0)ra();if((l|0)==(c[8539]|0)){a=o+4|0;d=c[a>>2]|0;if((d&3|0)!=3){r=l;f=k;break}c[8536]=k;c[a>>2]=d&-2;c[l+4>>2]=k|1;c[l+k>>2]=k;return}e=g>>>3;if(g>>>0<256){a=c[l+8>>2]|0;b=c[l+12>>2]|0;d=34176+(e<<1<<2)|0;if((a|0)!=(d|0)){if(a>>>0<i>>>0)ra();if((c[a+12>>2]|0)!=(l|0))ra()}if((b|0)==(a|0)){c[8534]=c[8534]&~(1<<e);r=l;f=k;break}if((b|0)!=(d|0)){if(b>>>0<i>>>0)ra();d=b+8|0;if((c[d>>2]|0)==(l|0))h=d;else ra()}else h=b+8|0;c[a+12>>2]=b;c[h>>2]=a;r=l;f=k;break}g=c[l+24>>2]|0;b=c[l+12>>2]|0;do if((b|0)==(l|0)){b=l+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){j=0;break}else a=b}while(1){b=d+20|0;e=c[b>>2]|0;if(e|0){d=e;a=b;continue}b=d+16|0;e=c[b>>2]|0;if(!e)break;else{d=e;a=b}}if(a>>>0<i>>>0)ra();else{c[a>>2]=0;j=d;break}}else{e=c[l+8>>2]|0;if(e>>>0<i>>>0)ra();d=e+12|0;if((c[d>>2]|0)!=(l|0))ra();a=b+8|0;if((c[a>>2]|0)==(l|0)){c[d>>2]=b;c[a>>2]=e;j=b;break}else ra()}while(0);if(g){d=c[l+28>>2]|0;a=34440+(d<<2)|0;if((l|0)==(c[a>>2]|0)){c[a>>2]=j;if(!j){c[8535]=c[8535]&~(1<<d);r=l;f=k;break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();d=g+16|0;if((c[d>>2]|0)==(l|0))c[d>>2]=j;else c[g+20>>2]=j;if(!j){r=l;f=k;break}}b=c[8538]|0;if(j>>>0<b>>>0)ra();c[j+24>>2]=g;d=l+16|0;a=c[d>>2]|0;do if(a|0)if(a>>>0<b>>>0)ra();else{c[j+16>>2]=a;c[a+24>>2]=j;break}while(0);d=c[d+4>>2]|0;if(d)if(d>>>0<(c[8538]|0)>>>0)ra();else{c[j+20>>2]=d;c[d+24>>2]=j;r=l;f=k;break}else{r=l;f=k}}else{r=l;f=k}}else{r=a;f=b}while(0);h=c[8538]|0;if(o>>>0<h>>>0)ra();d=o+4|0;a=c[d>>2]|0;if(!(a&2)){if((o|0)==(c[8540]|0)){q=(c[8537]|0)+f|0;c[8537]=q;c[8540]=r;c[r+4>>2]=q|1;if((r|0)!=(c[8539]|0))return;c[8539]=0;c[8536]=0;return}if((o|0)==(c[8539]|0)){q=(c[8536]|0)+f|0;c[8536]=q;c[8539]=r;c[r+4>>2]=q|1;c[r+q>>2]=q;return}f=(a&-8)+f|0;e=a>>>3;do if(a>>>0>=256){g=c[o+24>>2]|0;b=c[o+12>>2]|0;do if((b|0)==(o|0)){b=o+16|0;a=b+4|0;d=c[a>>2]|0;if(!d){d=c[b>>2]|0;if(!d){n=0;break}else a=b}while(1){b=d+20|0;e=c[b>>2]|0;if(e|0){d=e;a=b;continue}b=d+16|0;e=c[b>>2]|0;if(!e)break;else{d=e;a=b}}if(a>>>0<h>>>0)ra();else{c[a>>2]=0;n=d;break}}else{e=c[o+8>>2]|0;if(e>>>0<h>>>0)ra();d=e+12|0;if((c[d>>2]|0)!=(o|0))ra();a=b+8|0;if((c[a>>2]|0)==(o|0)){c[d>>2]=b;c[a>>2]=e;n=b;break}else ra()}while(0);if(g|0){d=c[o+28>>2]|0;a=34440+(d<<2)|0;if((o|0)==(c[a>>2]|0)){c[a>>2]=n;if(!n){c[8535]=c[8535]&~(1<<d);break}}else{if(g>>>0<(c[8538]|0)>>>0)ra();d=g+16|0;if((c[d>>2]|0)==(o|0))c[d>>2]=n;else c[g+20>>2]=n;if(!n)break}b=c[8538]|0;if(n>>>0<b>>>0)ra();c[n+24>>2]=g;d=o+16|0;a=c[d>>2]|0;do if(a|0)if(a>>>0<b>>>0)ra();else{c[n+16>>2]=a;c[a+24>>2]=n;break}while(0);d=c[d+4>>2]|0;if(d|0)if(d>>>0<(c[8538]|0)>>>0)ra();else{c[n+20>>2]=d;c[d+24>>2]=n;break}}}else{a=c[o+8>>2]|0;b=c[o+12>>2]|0;d=34176+(e<<1<<2)|0;if((a|0)!=(d|0)){if(a>>>0<h>>>0)ra();if((c[a+12>>2]|0)!=(o|0))ra()}if((b|0)==(a|0)){c[8534]=c[8534]&~(1<<e);break}if((b|0)!=(d|0)){if(b>>>0<h>>>0)ra();d=b+8|0;if((c[d>>2]|0)==(o|0))m=d;else ra()}else m=b+8|0;c[a+12>>2]=b;c[m>>2]=a}while(0);c[r+4>>2]=f|1;c[r+f>>2]=f;if((r|0)==(c[8539]|0)){c[8536]=f;return}}else{c[d>>2]=a&-2;c[r+4>>2]=f|1;c[r+f>>2]=f}d=f>>>3;if(f>>>0<256){b=34176+(d<<1<<2)|0;a=c[8534]|0;d=1<<d;if(a&d){d=b+8|0;a=c[d>>2]|0;if(a>>>0<(c[8538]|0)>>>0)ra();else{p=d;q=a}}else{c[8534]=a|d;p=b+8|0;q=b}c[p>>2]=r;c[q+12>>2]=r;c[r+8>>2]=q;c[r+12>>2]=b;return}d=f>>>8;if(d)if(f>>>0>16777215)b=31;else{p=(d+1048320|0)>>>16&8;q=d<<p;o=(q+520192|0)>>>16&4;q=q<<o;b=(q+245760|0)>>>16&2;b=14-(o|p|b)+(q<<b>>>15)|0;b=f>>>(b+7|0)&1|b<<1}else b=0;e=34440+(b<<2)|0;c[r+28>>2]=b;c[r+20>>2]=0;c[r+16>>2]=0;d=c[8535]|0;a=1<<b;if(!(d&a)){c[8535]=d|a;c[e>>2]=r;c[r+24>>2]=e;c[r+12>>2]=r;c[r+8>>2]=r;return}b=f<<((b|0)==31?0:25-(b>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){d=127;break}a=e+16+(b>>>31<<2)|0;d=c[a>>2]|0;if(!d){d=124;break}else{b=b<<1;e=d}}if((d|0)==124){if(a>>>0<(c[8538]|0)>>>0)ra();c[a>>2]=r;c[r+24>>2]=e;c[r+12>>2]=r;c[r+8>>2]=r;return}else if((d|0)==127){d=e+8|0;a=c[d>>2]|0;q=c[8538]|0;if(!(a>>>0>=q>>>0&e>>>0>=q>>>0))ra();c[a+12>>2]=r;c[d>>2]=r;c[r+8>>2]=a;c[r+12>>2]=e;c[r+24>>2]=0;return}}function ih(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(b>>>0>4294967168){a=12;return a|0}if(b>>>0>=4294967168){if(!(c[8522]|0))b=34132;else b=c[(oa()|0)+64>>2]|0;c[b>>2]=12;a=12;return a|0}h=b>>>0<11?16:b+11&-8;b=fh(h+76|0)|0;if(!b){a=12;return a|0}e=b+-8|0;do if(b&63){f=b+63&-64;j=f+-8|0;g=e;f=(j-g|0)>>>0>15?j:f+56|0;g=f-g|0;b=b+-4|0;j=c[b>>2]|0;d=(j&-8)-g|0;if(!(j&3)){c[f>>2]=(c[e>>2]|0)+g;c[f+4>>2]=d;e=f;break}else{j=f+4|0;c[j>>2]=d|c[j>>2]&1|2;d=f+d+4|0;c[d>>2]=c[d>>2]|1;c[b>>2]=g|c[b>>2]&1|2;c[j>>2]=c[j>>2]|1;hh(e,g);e=f;break}}while(0);b=e+4|0;d=c[b>>2]|0;if(d&3|0?(i=d&-8,i>>>0>(h+16|0)>>>0):0){j=i-h|0;i=e+h|0;c[b>>2]=h|d&1|2;c[i+4>>2]=j|3;h=i+j+4|0;c[h>>2]=c[h>>2]|1;hh(i,j)}c[a>>2]=e+8;j=0;return j|0}function jh(){}function kh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (C=d,a-c>>>0|0)|0}function lh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (C=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function mh(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=(b|0)<0?-1:0;return b>>c-32|0}function nh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;h=b&3;i=d|d<<8|d<<16|d<<24;g=f&~3;if(h){h=b+4-h|0;while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=i;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function oh(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=0;return b>>>c-32|0}function ph(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}C=a<<c-32;return 0}function qh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return va(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function rh(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else qh(b,c,d)|0;return b|0}function sh(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function th(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=_(e,f)|0;d=a>>>16;a=(c>>>16)+(_(e,d)|0)|0;e=b>>>16;b=_(e,f)|0;return (C=(a>>>16)+(_(e,d)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|c&65535|0)|0}function uh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=kh(j^a|0,i^b|0,j|0,i|0)|0;g=C;a=f^j;b=e^i;return kh((zh(h,g,kh(f^c|0,e^d|0,f|0,e|0)|0,C,0)|0)^a|0,C^b|0,a|0,b|0)|0}function vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=kh(h^a|0,g^b|0,h|0,g|0)|0;b=C;zh(a,b,kh(l^d|0,k^e|0,l|0,k|0)|0,C,j)|0;e=kh(c[j>>2]^h|0,c[j+4>>2]^g|0,h|0,g|0)|0;d=C;i=f;return (C=d,e)|0}function wh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=th(e,f)|0;a=C;return (C=(_(b,f)|0)+(_(d,e)|0)+a|a&0,c|0|0)|0}function xh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return zh(a,b,c,d,0)|0}function yh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+16|0;f=g|0;zh(a,b,d,e,f)|0;i=g;return (C=c[f+4>>2]|0,c[f>>2]|0)|0}function zh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=b;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){c[f>>2]=(l>>>0)%(h>>>0);c[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return (C=n,f)|0}else{if(!g){n=0;f=0;return (C=n,f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;f=0;return (C=n,f)|0}}g=(i|0)==0;do if(h){if(!g){g=(aa(i|0)|0)-(aa(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;b=g-31>>31;h=m;a=l>>>(m>>>0)&b|k<<i;b=k>>>(m>>>0)&b;g=0;i=l<<i;break}if(!f){n=0;f=0;return (C=n,f)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;n=0;f=0;return (C=n,f)|0}g=h-1|0;if(g&h|0){i=(aa(h|0)|0)+33-(aa(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;b=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&b;b=b&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){c[f>>2]=g&l;c[f+4>>2]=0}if((h|0)==1){o=j|b&0;p=a|0|0;return (C=o,p)|0}else{p=sh(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (C=o,p)|0}}else{if(g){if(f|0){c[f>>2]=(k>>>0)%(h>>>0);c[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (C=o,p)|0}if(!l){if(f|0){c[f>>2]=0;c[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (C=o,p)|0}g=i-1|0;if(!(g&i)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=g&k|b&0}o=0;p=k>>>((sh(i|0)|0)>>>0);return (C=o,p)|0}g=(aa(i|0)|0)-(aa(k|0)|0)|0;if(g>>>0<=30){b=g+1|0;i=31-g|0;h=b;a=k<<i|l>>>(b>>>0);b=k>>>(b>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return (C=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return (C=o,p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=lh(m|0,l|0,-1,-1)|0;d=C;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|b<<1|0;kh(k|0,d|0,e|0,n|0)|0;p=C;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=kh(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;b=C;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){c[f>>2]=a;c[f+4>>2]=b}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (C=o,p)|0}function Ah(a,b){a=a|0;b=b|0;return Ca[a&31](b|0)|0}function Bh(a){a=a|0;return ea(0,a|0)|0}function Ch(a){a=a|0;return ea(1,a|0)|0}function Dh(a){a=a|0;return ea(2,a|0)|0}function Eh(a){a=a|0;return ea(3,a|0)|0}function Fh(a){a=a|0;return ea(4,a|0)|0}function Gh(a){a=a|0;return ea(5,a|0)|0}function Hh(a){a=a|0;return ea(6,a|0)|0}function Ih(a){a=a|0;return ea(7,a|0)|0}function Jh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Da[a&31](b|0,c|0,d|0)|0}function Kh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(0,a|0,b|0,c|0)|0}function Lh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(1,a|0,b|0,c|0)|0}function Mh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(2,a|0,b|0,c|0)|0}function Nh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(3,a|0,b|0,c|0)|0}function Oh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(4,a|0,b|0,c|0)|0}function Ph(a,b,c){a=a|0;b=b|0;c=c|0;return ga(5,a|0,b|0,c|0)|0}function Qh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(6,a|0,b|0,c|0)|0}function Rh(a,b,c){a=a|0;b=b|0;c=c|0;return ga(7,a|0,b|0,c|0)|0}function Sh(a,b){a=a|0;b=b|0;Ea[a&31](b|0)}function Th(a){a=a|0;ia(0,a|0)}function Uh(a){a=a|0;ia(1,a|0)}function Vh(a){a=a|0;ia(2,a|0)}function Wh(a){a=a|0;ia(3,a|0)}function Xh(a){a=a|0;ia(4,a|0)}function Yh(a){a=a|0;ia(5,a|0)}function Zh(a){a=a|0;ia(6,a|0)}function _h(a){a=a|0;ia(7,a|0)}function $h(a){a=a|0;ba(0);return 0}function ai(a,b,c){a=a|0;b=b|0;c=c|0;ba(1);return 0}function bi(a){a=a|0;ba(2)}

// EMSCRIPTEN_END_FUNCS
var Ca=[$h,$h,Bh,$h,Ch,$h,Dh,$h,Eh,$h,Fh,$h,Gh,$h,Hh,$h,Ih,$h,Xg,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h,$h];var Da=[ai,ai,Kh,ai,Lh,ai,Mh,ai,Nh,ai,Oh,ai,Ph,ai,Qh,ai,Rh,ai,_g,Zg,$g,ai,ai,ai,ai,ai,ai,ai,ai,ai,ai,ai];var Ea=[bi,bi,Th,bi,Uh,bi,Vh,bi,Wh,bi,Xh,bi,Yh,bi,Zh,bi,_h,bi,ah,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi,bi];return{_crypto_onetimeauth_poly1305_init:Sd,_crypto_hash_sha512_init:Cd,_crypto_hash_primitive:sd,_crypto_onetimeauth_bytes:Id,_crypto_box_open:Tb,_crypto_stream_chacha20_ietf_noncebytes:hg,_crypto_stream_salsa20_xor:wg,_randombytes_buf:Mg,_crypto_auth_hmacsha512_verify:vb,_crypto_generichash_blake2b_keybytes_min:cd,_crypto_sign_open:Qf,_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive:Te,_crypto_sign_ed25519_keypair:_f,_crypto_scalarmult_curve25519_base:ef,_crypto_stream_salsa20:Vg,_crypto_sign_ed25519_open:cg,_sodium_init:Pg,_crypto_pwhash_scryptsalsa208sha256:Ue,_crypto_scalarmult_primitive:_e,_crypto_box_noncebytes:Ib,_crypto_aead_chacha20poly1305_ietf_keybytes:Wa,_crypto_aead_chacha20poly1305_ietf_encrypt_detached:Qa,_crypto_scalarmult_base:$e,_crypto_aead_chacha20poly1305_abytes:bb,_crypto_auth_bytes:cb,_crypto_pwhash_opslimit_sensitive:De,_crypto_pwhash_strbytes:xe,_crypto_auth_hmacsha512256_update:Ab,_memcpy:qh,_crypto_onetimeauth_poly1305:Qd,_crypto_sign_secretkeybytes:Lf,_crypto_generichash_primitive:Vc,_crypto_auth_hmacsha512256:Cb,_crypto_box_seed_keypair:Nb,_crypto_auth_hmacsha512_init:rb,_crypto_generichash_blake2b_keybytes_max:dd,_crypto_box_curve25519xsalsa20poly1305_macbytes:kc,_bitshift64Lshr:oh,_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive:Re,_crypto_sign_ed25519_sk_to_pk:Yf,_crypto_verify_16_bytes:Cg,_crypto_stream_xsalsa20:zg,_crypto_scalarmult_curve25519:df,_crypto_box_open_easy_afternm:_b,_crypto_auth_hmacsha512:ub,_crypto_stream_chacha20_ietf_xor_ic:lg,_crypto_hash:rd,_crypto_box_curve25519xsalsa20poly1305_seedbytes:dc,_crypto_box_zerobytes:Jb,_crypto_stream_salsa20_keybytes:ug,_crypto_auth_hmacsha512256_keybytes:xb,_crypto_aead_chacha20poly1305_keybytes:_a,_crypto_hash_sha512_bytes:Ad,_crypto_verify_32:Fg,_crypto_generichash_blake2b_final:pd,_crypto_generichash_blake2b_init_salt_personal:nd,_crypto_box_seal:ac,_crypto_core_hsalsa20_outputbytes:Gc,_free:gh,_crypto_sign_ed25519_publickeybytes:Vf,_crypto_core_hsalsa20_keybytes:Ic,_crypto_sign_primitive:Mf,_crypto_scalarmult_curve25519_bytes:ff,_crypto_auth_keybytes:db,_crypto_box:Sb,_crypto_stream_xsalsa20_noncebytes:yg,_crypto_onetimeauth_poly1305_keybytes:Wd,_crypto_box_beforenm:Pb,_crypto_box_curve25519xsalsa20poly1305_open_afternm:mc,_crypto_pwhash_scryptsalsa208sha256_saltbytes:Ne,_crypto_aead_chacha20poly1305_npubbytes:$a,_crypto_stream_primitive:rg,_crypto_pwhash_argon2i_str_verify:te,_crypto_pwhash_memlimit_sensitive:Ee,_crypto_shorthash:Ef,_crypto_onetimeauth_poly1305_bytes:Vd,_crypto_secretbox_detached:qf,_crypto_box_curve25519xsalsa20poly1305_seed_keypair:qc,_crypto_box_primitive:Mb,_crypto_pwhash_str:Ge,_crypto_box_detached_afternm:Ub,_crypto_stream_salsa20_xor_ic:Wg,_crypto_secretbox_xsalsa20poly1305_boxzerobytes:xf,_crypto_core_salsa20_constbytes:Oc,_crypto_auth_hmacsha512_keybytes:pb,_crypto_auth:eb,_crypto_auth_hmacsha512256_final:Bb,_randombytes_random:Jg,_crypto_stream_chacha20_keybytes:fg,_crypto_pwhash_str_verify:He,_crypto_sign_keypair:Of,_crypto_auth_hmacsha256_statebytes:ib,_crypto_generichash_keybytes_min:Sc,_crypto_generichash_statebytes:Wc,_randombytes:Og,_crypto_aead_chacha20poly1305_encrypt_detached:Oa,_randombytes_implementation_name:Ig,_crypto_core_salsa20_keybytes:Nc,_sodium_library_version_major:Tg,_crypto_hash_sha256_statebytes:ud,_crypto_pwhash_strprefix:ye,_crypto_box_afternm:Qb,_crypto_secretbox_primitive:nf,_i64Add:lh,_malloc:fh,_crypto_scalarmult_curve25519_scalarbytes:gf,_crypto_box_curve25519xsalsa20poly1305_keypair:rc,_crypto_hash_sha256_init:vd,_crypto_sign_ed25519_detached:dg,_crypto_pwhash_scryptsalsa208sha256_str_verify:We,_crypto_generichash_init:Yc,_crypto_generichash_keybytes_max:Tc,_crypto_sign_ed25519_pk_to_curve25519:$f,_crypto_stream_chacha20_ietf_xor:ng,_crypto_verify_64:Hg,_crypto_sign_publickeybytes:Kf,_crypto_shorthash_siphash24:Hf,_crypto_box_beforenmbytes:Hb,_crypto_stream_chacha20_ietf:jg,_crypto_generichash:Xc,_crypto_sign_ed25519:eg,_crypto_box_curve25519xsalsa20poly1305_open:pc,_crypto_pwhash_opslimit_interactive:ze,_sodium_hex2bin:Rg,_crypto_onetimeauth_poly1305_final:Ud,_crypto_auth_hmacsha256_init:jb,_crypto_aead_chacha20poly1305_ietf_encrypt:Ra,_crypto_aead_chacha20poly1305_ietf_nsecbytes:Ya,_crypto_box_curve25519xsalsa20poly1305_noncebytes:hc,_crypto_secretbox:of,_crypto_box_boxzerobytes:Kb,_crypto_pwhash_argon2i_saltbytes:ie,_crypto_hash_sha512_update:Dd,_crypto_onetimeauth_poly1305_verify:Rd,_crypto_box_curve25519xsalsa20poly1305_beforenmbytes:gc,_crypto_generichash_blake2b_init:md,_crypto_aead_chacha20poly1305_ietf_decrypt:Va,_crypto_auth_hmacsha512256_init:zb,_crypto_pwhash_primitive:Ie,_crypto_onetimeauth_keybytes:Jd,_crypto_pwhash_argon2i:re,_crypto_auth_hmacsha512_final:tb,_crypto_sign_ed25519_seedbytes:Uf,_crypto_auth_hmacsha512256_verify:Db,_crypto_auth_hmacsha256_final:lb,_crypto_box_secretkeybytes:Gb,_crypto_verify_16:Dg,_crypto_stream_chacha20_noncebytes:gg,_crypto_onetimeauth_update:Nd,_crypto_aead_chacha20poly1305_encrypt:Pa,_crypto_core_salsa20:Kc,_crypto_pwhash_scryptsalsa208sha256_ll:Le,_crypto_box_detached:Vb,_crypto_stream_xsalsa20_xor:Bg,_crypto_sign_seedbytes:Jf,_memset:nh,_crypto_pwhash_scryptsalsa208sha256_str:Ve,_crypto_generichash_blake2b_saltbytes:fd,_bitshift64Ashr:mh,_bitshift64Shl:ph,_sodium_version_string:Sg,_crypto_box_open_detached:Zb,_crypto_scalarmult_bytes:bf,_crypto_secretbox_xsalsa20poly1305:zf,_crypto_pwhash:Fe,_crypto_auth_verify:fb,_crypto_sign_ed25519_seed_keypair:Zf,_crypto_secretbox_xsalsa20poly1305_zerobytes:wf,_crypto_onetimeauth_poly1305_update:Td,_crypto_sign_detached:Rf,_crypto_verify_32_bytes:Eg,_crypto_box_curve25519xsalsa20poly1305_zerobytes:ic,_crypto_generichash_blake2b_keybytes:ed,_crypto_sign_ed25519_secretkeybytes:Wf,_crypto_stream_xor:tg,_crypto_stream_xsalsa20_xor_ic:Ag,_crypto_verify_64_bytes:Gg,_randombytes_stir:Kg,_crypto_secretbox_easy:rf,_crypto_pwhash_argon2i_strprefix:ke,_crypto_auth_hmacsha256_update:kb,_crypto_pwhash_scryptsalsa208sha256_strbytes:Oe,_crypto_stream_chacha20:ig,_crypto_stream_xsalsa20_keybytes:xg,_crypto_sign:Pf,_crypto_pwhash_argon2i_str:se,_crypto_box_open_detached_afternm:Yb,_crypto_pwhash_argon2i_memlimit_sensitive:qe,_crypto_box_sealbytes:cc,_crypto_onetimeauth:Kd,_crypto_auth_hmacsha512_statebytes:qb,_crypto_secretbox_boxzerobytes:lf,_i64Subtract:kh,_crypto_pwhash_alg_default:ve,_crypto_pwhash_scryptsalsa208sha256_strprefix:Pe,_crypto_onetimeauth_primitive:Pd,_crypto_box_seedbytes:Eb,_crypto_hash_sha256_update:wd,_crypto_core_hsalsa20_constbytes:Jc,_crypto_box_curve25519xsalsa20poly1305:oc,_crypto_generichash_blake2b_statebytes:hd,_crypto_box_curve25519xsalsa20poly1305_boxzerobytes:jc,_crypto_generichash_blake2b_bytes_min:$c,_crypto_pwhash_opslimit_moderate:Be,_crypto_secretbox_open:pf,_crypto_hash_sha256_bytes:td,_crypto_core_salsa20_inputbytes:Mc,_crypto_box_macbytes:Lb,_crypto_shorthash_bytes:Bf,_crypto_box_publickeybytes:Fb,_crypto_aead_chacha20poly1305_decrypt_detached:Sa,_crypto_auth_hmacsha256_verify:nb,_crypto_pwhash_argon2i_strbytes:je,_sodium_library_version_minor:Ug,_crypto_scalarmult_scalarbytes:cf,_crypto_onetimeauth_statebytes:Hd,_crypto_auth_hmacsha256_bytes:gb,_crypto_sign_seed_keypair:Nf,_crypto_pwhash_argon2i_opslimit_interactive:le,_crypto_stream_salsa20_noncebytes:vg,_crypto_shorthash_keybytes:Cf,_crypto_box_curve25519xsalsa20poly1305_afternm:lc,_crypto_stream_noncebytes:qg,_crypto_aead_chacha20poly1305_decrypt:Ta,_sodium_bin2hex:Qg,_crypto_secretbox_open_easy:tf,_crypto_aead_chacha20poly1305_ietf_decrypt_detached:Ua,_crypto_pwhash_memlimit_interactive:Ae,_crypto_hash_sha512_final:Fd,_crypto_generichash_final:_c,_crypto_secretbox_xsalsa20poly1305_keybytes:uf,_crypto_auth_hmacsha512_update:sb,_crypto_pwhash_saltbytes:we,_crypto_auth_hmacsha256:mb,_crypto_secretbox_noncebytes:jf,_crypto_box_keypair:Ob,_crypto_secretbox_xsalsa20poly1305_macbytes:yf,_crypto_box_open_afternm:Rb,_crypto_auth_hmacsha512_bytes:ob,_crypto_generichash_keybytes:Uc,_crypto_hash_bytes:qd,_crypto_generichash_bytes_min:Pc,_crypto_pwhash_argon2i_alg_argon2i13:he,_crypto_secretbox_macbytes:mf,_crypto_secretbox_keybytes:hf,_crypto_auth_hmacsha256_keybytes:hb,_crypto_pwhash_argon2i_opslimit_sensitive:pe,_crypto_aead_chacha20poly1305_ietf_abytes:Za,_randombytes_close:Ng,_crypto_pwhash_argon2i_memlimit_moderate:oe,_crypto_generichash_blake2b_bytes_max:ad,_crypto_generichash_blake2b:kd,_crypto_generichash_bytes:Rc,_crypto_generichash_bytes_max:Qc,_crypto_secretbox_open_detached:sf,_crypto_sign_ed25519_sk_to_seed:Xf,_crypto_sign_ed25519_sk_to_curve25519:ag,_crypto_core_salsa20_outputbytes:Lc,_crypto_box_easy_afternm:Wb,_crypto_generichash_blake2b_personalbytes:gd,_crypto_stream_chacha20_xor_ic:kg,_crypto_sign_verify_detached:Sf,_crypto_pwhash_argon2i_opslimit_moderate:ne,_crypto_onetimeauth_verify:Ld,_crypto_box_open_easy:$b,_crypto_stream:sg,_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive:Se,_crypto_box_curve25519xsalsa20poly1305_secretkeybytes:fc,_crypto_aead_chacha20poly1305_nsecbytes:ab,_crypto_hash_sha512_statebytes:Bd,_crypto_sign_bytes:If,_crypto_secretbox_zerobytes:kf,_crypto_generichash_update:Zc,_crypto_scalarmult:af,_crypto_shorthash_primitive:Df,_crypto_hash_sha512:Gd,_crypto_stream_chacha20_xor:mg,_crypto_box_seal_open:bc,_fflush:dh,_crypto_box_easy:Xb,___errno_location:Yg,_crypto_sign_ed25519_verify_detached:bg,_memmove:rh,_crypto_sign_ed25519_bytes:Tf,_crypto_generichash_blake2b_update:od,_crypto_hash_sha256:zd,_crypto_box_curve25519xsalsa20poly1305_beforenm:nc,_crypto_pwhash_alg_argon2i13:ue,_crypto_core_hsalsa20_inputbytes:Hc,_crypto_onetimeauth_final:Od,_crypto_generichash_blake2b_bytes:bd,_crypto_auth_hmacsha512256_bytes:wb,_crypto_generichash_blake2b_salt_personal:ld,_randombytes_uniform:Lg,_crypto_shorthash_siphash24_bytes:Ff,_crypto_auth_hmacsha512256_statebytes:yb,_crypto_shorthash_siphash24_keybytes:Gf,_crypto_secretbox_xsalsa20poly1305_noncebytes:vf,_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive:Qe,_crypto_core_hsalsa20:Fc,_crypto_pwhash_argon2i_memlimit_interactive:me,_crypto_hash_sha256_final:yd,_crypto_secretbox_xsalsa20poly1305_open:Af,_crypto_stream_keybytes:pg,_crypto_box_curve25519xsalsa20poly1305_publickeybytes:ec,_crypto_onetimeauth_init:Md,_crypto_aead_chacha20poly1305_ietf_npubbytes:Xa,_crypto_pwhash_memlimit_moderate:Ce,runPostSets:jh,stackAlloc:Fa,stackSave:Ga,stackRestore:Ha,establishStackSpace:Ia,setThrew:Ja,setTempRet0:Ma,getTempRet0:Na,dynCall_ii:Ah,dynCall_iiii:Jh,dynCall_vi:Sh}})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _crypto_onetimeauth_poly1305_init=Module["_crypto_onetimeauth_poly1305_init"]=asm["_crypto_onetimeauth_poly1305_init"];var _crypto_hash_sha512_init=Module["_crypto_hash_sha512_init"]=asm["_crypto_hash_sha512_init"];var _crypto_stream_xsalsa20_noncebytes=Module["_crypto_stream_xsalsa20_noncebytes"]=asm["_crypto_stream_xsalsa20_noncebytes"];var _crypto_auth_hmacsha256_verify=Module["_crypto_auth_hmacsha256_verify"]=asm["_crypto_auth_hmacsha256_verify"];var _crypto_onetimeauth_bytes=Module["_crypto_onetimeauth_bytes"]=asm["_crypto_onetimeauth_bytes"];var _crypto_shorthash_primitive=Module["_crypto_shorthash_primitive"]=asm["_crypto_shorthash_primitive"];var _crypto_box_open=Module["_crypto_box_open"]=asm["_crypto_box_open"];var _crypto_stream_chacha20_ietf_noncebytes=Module["_crypto_stream_chacha20_ietf_noncebytes"]=asm["_crypto_stream_chacha20_ietf_noncebytes"];var _crypto_stream_salsa20_xor=Module["_crypto_stream_salsa20_xor"]=asm["_crypto_stream_salsa20_xor"];var _crypto_auth_hmacsha512_verify=Module["_crypto_auth_hmacsha512_verify"]=asm["_crypto_auth_hmacsha512_verify"];var _crypto_generichash_blake2b_keybytes_min=Module["_crypto_generichash_blake2b_keybytes_min"]=asm["_crypto_generichash_blake2b_keybytes_min"];var _crypto_generichash_blake2b_bytes=Module["_crypto_generichash_blake2b_bytes"]=asm["_crypto_generichash_blake2b_bytes"];var _crypto_pwhash_saltbytes=Module["_crypto_pwhash_saltbytes"]=asm["_crypto_pwhash_saltbytes"];var _crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"]=asm["_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive"];var _crypto_box_seal_open=Module["_crypto_box_seal_open"]=asm["_crypto_box_seal_open"];var _crypto_scalarmult_curve25519_base=Module["_crypto_scalarmult_curve25519_base"]=asm["_crypto_scalarmult_curve25519_base"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _sodium_bin2hex=Module["_sodium_bin2hex"]=asm["_sodium_bin2hex"];var _crypto_pwhash_scryptsalsa208sha256=Module["_crypto_pwhash_scryptsalsa208sha256"]=asm["_crypto_pwhash_scryptsalsa208sha256"];var _crypto_scalarmult_primitive=Module["_crypto_scalarmult_primitive"]=asm["_crypto_scalarmult_primitive"];var _crypto_secretbox_xsalsa20poly1305_open=Module["_crypto_secretbox_xsalsa20poly1305_open"]=asm["_crypto_secretbox_xsalsa20poly1305_open"];var _crypto_box_noncebytes=Module["_crypto_box_noncebytes"]=asm["_crypto_box_noncebytes"];var _crypto_aead_chacha20poly1305_ietf_keybytes=Module["_crypto_aead_chacha20poly1305_ietf_keybytes"]=asm["_crypto_aead_chacha20poly1305_ietf_keybytes"];var _crypto_aead_chacha20poly1305_ietf_encrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"]=asm["_crypto_aead_chacha20poly1305_ietf_encrypt_detached"];var _crypto_scalarmult_base=Module["_crypto_scalarmult_base"]=asm["_crypto_scalarmult_base"];var _crypto_aead_chacha20poly1305_abytes=Module["_crypto_aead_chacha20poly1305_abytes"]=asm["_crypto_aead_chacha20poly1305_abytes"];var _crypto_auth_bytes=Module["_crypto_auth_bytes"]=asm["_crypto_auth_bytes"];var _crypto_onetimeauth=Module["_crypto_onetimeauth"]=asm["_crypto_onetimeauth"];var _crypto_stream_chacha20_keybytes=Module["_crypto_stream_chacha20_keybytes"]=asm["_crypto_stream_chacha20_keybytes"];var _crypto_sign_open=Module["_crypto_sign_open"]=asm["_crypto_sign_open"];var _crypto_auth_hmacsha512256_update=Module["_crypto_auth_hmacsha512256_update"]=asm["_crypto_auth_hmacsha512256_update"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _crypto_onetimeauth_poly1305=Module["_crypto_onetimeauth_poly1305"]=asm["_crypto_onetimeauth_poly1305"];var _crypto_sign_ed25519_keypair=Module["_crypto_sign_ed25519_keypair"]=asm["_crypto_sign_ed25519_keypair"];var _crypto_pwhash=Module["_crypto_pwhash"]=asm["_crypto_pwhash"];var _crypto_auth_hmacsha512256=Module["_crypto_auth_hmacsha512256"]=asm["_crypto_auth_hmacsha512256"];var _crypto_shorthash_siphash24_keybytes=Module["_crypto_shorthash_siphash24_keybytes"]=asm["_crypto_shorthash_siphash24_keybytes"];var _crypto_box_seed_keypair=Module["_crypto_box_seed_keypair"]=asm["_crypto_box_seed_keypair"];var _crypto_auth_hmacsha512_init=Module["_crypto_auth_hmacsha512_init"]=asm["_crypto_auth_hmacsha512_init"];var _crypto_generichash_blake2b_keybytes_max=Module["_crypto_generichash_blake2b_keybytes_max"]=asm["_crypto_generichash_blake2b_keybytes_max"];var _crypto_box_beforenmbytes=Module["_crypto_box_beforenmbytes"]=asm["_crypto_box_beforenmbytes"];var _crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"]=asm["_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive"];var _crypto_sign_ed25519_sk_to_pk=Module["_crypto_sign_ed25519_sk_to_pk"]=asm["_crypto_sign_ed25519_sk_to_pk"];var _crypto_auth_hmacsha512_update=Module["_crypto_auth_hmacsha512_update"]=asm["_crypto_auth_hmacsha512_update"];var _crypto_stream_xsalsa20=Module["_crypto_stream_xsalsa20"]=asm["_crypto_stream_xsalsa20"];var _crypto_scalarmult_curve25519=Module["_crypto_scalarmult_curve25519"]=asm["_crypto_scalarmult_curve25519"];var _crypto_box_open_easy_afternm=Module["_crypto_box_open_easy_afternm"]=asm["_crypto_box_open_easy_afternm"];var _crypto_auth_hmacsha512=Module["_crypto_auth_hmacsha512"]=asm["_crypto_auth_hmacsha512"];var _crypto_stream_chacha20_ietf_xor_ic=Module["_crypto_stream_chacha20_ietf_xor_ic"]=asm["_crypto_stream_chacha20_ietf_xor_ic"];var _crypto_hash_sha256_update=Module["_crypto_hash_sha256_update"]=asm["_crypto_hash_sha256_update"];var _crypto_box_curve25519xsalsa20poly1305_seedbytes=Module["_crypto_box_curve25519xsalsa20poly1305_seedbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_seedbytes"];var _crypto_box_zerobytes=Module["_crypto_box_zerobytes"]=asm["_crypto_box_zerobytes"];var _crypto_stream_salsa20_keybytes=Module["_crypto_stream_salsa20_keybytes"]=asm["_crypto_stream_salsa20_keybytes"];var _crypto_auth_hmacsha512256_keybytes=Module["_crypto_auth_hmacsha512256_keybytes"]=asm["_crypto_auth_hmacsha512256_keybytes"];var _randombytes_uniform=Module["_randombytes_uniform"]=asm["_randombytes_uniform"];var _crypto_aead_chacha20poly1305_keybytes=Module["_crypto_aead_chacha20poly1305_keybytes"]=asm["_crypto_aead_chacha20poly1305_keybytes"];var _crypto_hash_sha512_bytes=Module["_crypto_hash_sha512_bytes"]=asm["_crypto_hash_sha512_bytes"];var _crypto_onetimeauth_statebytes=Module["_crypto_onetimeauth_statebytes"]=asm["_crypto_onetimeauth_statebytes"];var _crypto_generichash_blake2b_final=Module["_crypto_generichash_blake2b_final"]=asm["_crypto_generichash_blake2b_final"];var _crypto_generichash_blake2b_init_salt_personal=Module["_crypto_generichash_blake2b_init_salt_personal"]=asm["_crypto_generichash_blake2b_init_salt_personal"];var _crypto_box_seal=Module["_crypto_box_seal"]=asm["_crypto_box_seal"];var _crypto_sign_ed25519_publickeybytes=Module["_crypto_sign_ed25519_publickeybytes"]=asm["_crypto_sign_ed25519_publickeybytes"];var _free=Module["_free"]=asm["_free"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var _crypto_core_hsalsa20_keybytes=Module["_crypto_core_hsalsa20_keybytes"]=asm["_crypto_core_hsalsa20_keybytes"];var _crypto_sign_primitive=Module["_crypto_sign_primitive"]=asm["_crypto_sign_primitive"];var _crypto_scalarmult_curve25519_bytes=Module["_crypto_scalarmult_curve25519_bytes"]=asm["_crypto_scalarmult_curve25519_bytes"];var _crypto_auth_keybytes=Module["_crypto_auth_keybytes"]=asm["_crypto_auth_keybytes"];var _crypto_box=Module["_crypto_box"]=asm["_crypto_box"];var _crypto_onetimeauth_poly1305_keybytes=Module["_crypto_onetimeauth_poly1305_keybytes"]=asm["_crypto_onetimeauth_poly1305_keybytes"];var _crypto_box_curve25519xsalsa20poly1305_open_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_open_afternm"]=asm["_crypto_box_curve25519xsalsa20poly1305_open_afternm"];var _crypto_pwhash_scryptsalsa208sha256_saltbytes=Module["_crypto_pwhash_scryptsalsa208sha256_saltbytes"]=asm["_crypto_pwhash_scryptsalsa208sha256_saltbytes"];var _crypto_aead_chacha20poly1305_npubbytes=Module["_crypto_aead_chacha20poly1305_npubbytes"]=asm["_crypto_aead_chacha20poly1305_npubbytes"];var _crypto_stream_primitive=Module["_crypto_stream_primitive"]=asm["_crypto_stream_primitive"];var _crypto_pwhash_argon2i_str_verify=Module["_crypto_pwhash_argon2i_str_verify"]=asm["_crypto_pwhash_argon2i_str_verify"];var _crypto_onetimeauth_poly1305_final=Module["_crypto_onetimeauth_poly1305_final"]=asm["_crypto_onetimeauth_poly1305_final"];var _crypto_shorthash=Module["_crypto_shorthash"]=asm["_crypto_shorthash"];var _crypto_onetimeauth_poly1305_bytes=Module["_crypto_onetimeauth_poly1305_bytes"]=asm["_crypto_onetimeauth_poly1305_bytes"];var _crypto_secretbox_detached=Module["_crypto_secretbox_detached"]=asm["_crypto_secretbox_detached"];var _crypto_box_curve25519xsalsa20poly1305_seed_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"]=asm["_crypto_box_curve25519xsalsa20poly1305_seed_keypair"];var _crypto_box_primitive=Module["_crypto_box_primitive"]=asm["_crypto_box_primitive"];var _crypto_pwhash_str=Module["_crypto_pwhash_str"]=asm["_crypto_pwhash_str"];var _crypto_box_detached_afternm=Module["_crypto_box_detached_afternm"]=asm["_crypto_box_detached_afternm"];var _crypto_stream_salsa20_xor_ic=Module["_crypto_stream_salsa20_xor_ic"]=asm["_crypto_stream_salsa20_xor_ic"];var _crypto_secretbox_xsalsa20poly1305_boxzerobytes=Module["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"]=asm["_crypto_secretbox_xsalsa20poly1305_boxzerobytes"];var _crypto_auth_hmacsha256_init=Module["_crypto_auth_hmacsha256_init"]=asm["_crypto_auth_hmacsha256_init"];var _crypto_auth_hmacsha512_keybytes=Module["_crypto_auth_hmacsha512_keybytes"]=asm["_crypto_auth_hmacsha512_keybytes"];var _crypto_auth=Module["_crypto_auth"]=asm["_crypto_auth"];var _crypto_auth_hmacsha512256_final=Module["_crypto_auth_hmacsha512256_final"]=asm["_crypto_auth_hmacsha512256_final"];var _randombytes_random=Module["_randombytes_random"]=asm["_randombytes_random"];var _crypto_onetimeauth_verify=Module["_crypto_onetimeauth_verify"]=asm["_crypto_onetimeauth_verify"];var _crypto_pwhash_str_verify=Module["_crypto_pwhash_str_verify"]=asm["_crypto_pwhash_str_verify"];var _crypto_sign_keypair=Module["_crypto_sign_keypair"]=asm["_crypto_sign_keypair"];var _crypto_sign_ed25519_open=Module["_crypto_sign_ed25519_open"]=asm["_crypto_sign_ed25519_open"];var _crypto_generichash_keybytes_min=Module["_crypto_generichash_keybytes_min"]=asm["_crypto_generichash_keybytes_min"];var _crypto_generichash_statebytes=Module["_crypto_generichash_statebytes"]=asm["_crypto_generichash_statebytes"];var _crypto_aead_chacha20poly1305_encrypt_detached=Module["_crypto_aead_chacha20poly1305_encrypt_detached"]=asm["_crypto_aead_chacha20poly1305_encrypt_detached"];var _crypto_core_salsa20_keybytes=Module["_crypto_core_salsa20_keybytes"]=asm["_crypto_core_salsa20_keybytes"];var _crypto_aead_chacha20poly1305_ietf_nsecbytes=Module["_crypto_aead_chacha20poly1305_ietf_nsecbytes"]=asm["_crypto_aead_chacha20poly1305_ietf_nsecbytes"];var _crypto_pwhash_strprefix=Module["_crypto_pwhash_strprefix"]=asm["_crypto_pwhash_strprefix"];var _crypto_box_afternm=Module["_crypto_box_afternm"]=asm["_crypto_box_afternm"];var _crypto_auth_hmacsha512256_bytes=Module["_crypto_auth_hmacsha512256_bytes"]=asm["_crypto_auth_hmacsha512256_bytes"];var _crypto_box_curve25519xsalsa20poly1305_keypair=Module["_crypto_box_curve25519xsalsa20poly1305_keypair"]=asm["_crypto_box_curve25519xsalsa20poly1305_keypair"];var _crypto_hash_sha256_init=Module["_crypto_hash_sha256_init"]=asm["_crypto_hash_sha256_init"];var _crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"]=asm["_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive"];var _crypto_pwhash_scryptsalsa208sha256_str_verify=Module["_crypto_pwhash_scryptsalsa208sha256_str_verify"]=asm["_crypto_pwhash_scryptsalsa208sha256_str_verify"];var _crypto_hash_primitive=Module["_crypto_hash_primitive"]=asm["_crypto_hash_primitive"];var _crypto_scalarmult_curve25519_scalarbytes=Module["_crypto_scalarmult_curve25519_scalarbytes"]=asm["_crypto_scalarmult_curve25519_scalarbytes"];var _crypto_sign_ed25519_pk_to_curve25519=Module["_crypto_sign_ed25519_pk_to_curve25519"]=asm["_crypto_sign_ed25519_pk_to_curve25519"];var _crypto_verify_64=Module["_crypto_verify_64"]=asm["_crypto_verify_64"];var _crypto_aead_chacha20poly1305_nsecbytes=Module["_crypto_aead_chacha20poly1305_nsecbytes"]=asm["_crypto_aead_chacha20poly1305_nsecbytes"];var _crypto_shorthash_siphash24=Module["_crypto_shorthash_siphash24"]=asm["_crypto_shorthash_siphash24"];var _crypto_box_curve25519xsalsa20poly1305_macbytes=Module["_crypto_box_curve25519xsalsa20poly1305_macbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_macbytes"];var _crypto_stream_chacha20_ietf=Module["_crypto_stream_chacha20_ietf"]=asm["_crypto_stream_chacha20_ietf"];var _crypto_generichash=Module["_crypto_generichash"]=asm["_crypto_generichash"];var _crypto_sign_ed25519=Module["_crypto_sign_ed25519"]=asm["_crypto_sign_ed25519"];var _crypto_core_hsalsa20_outputbytes=Module["_crypto_core_hsalsa20_outputbytes"]=asm["_crypto_core_hsalsa20_outputbytes"];var _crypto_pwhash_opslimit_interactive=Module["_crypto_pwhash_opslimit_interactive"]=asm["_crypto_pwhash_opslimit_interactive"];var _crypto_box_curve25519xsalsa20poly1305_noncebytes=Module["_crypto_box_curve25519xsalsa20poly1305_noncebytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_noncebytes"];var _crypto_pwhash_memlimit_sensitive=Module["_crypto_pwhash_memlimit_sensitive"]=asm["_crypto_pwhash_memlimit_sensitive"];var _crypto_core_salsa20_constbytes=Module["_crypto_core_salsa20_constbytes"]=asm["_crypto_core_salsa20_constbytes"];var _crypto_box_boxzerobytes=Module["_crypto_box_boxzerobytes"]=asm["_crypto_box_boxzerobytes"];var _sodium_library_version_major=Module["_sodium_library_version_major"]=asm["_sodium_library_version_major"];var _crypto_verify_16_bytes=Module["_crypto_verify_16_bytes"]=asm["_crypto_verify_16_bytes"];var _crypto_aead_chacha20poly1305_ietf_encrypt=Module["_crypto_aead_chacha20poly1305_ietf_encrypt"]=asm["_crypto_aead_chacha20poly1305_ietf_encrypt"];var _crypto_pwhash_argon2i_saltbytes=Module["_crypto_pwhash_argon2i_saltbytes"]=asm["_crypto_pwhash_argon2i_saltbytes"];var _crypto_hash_sha512_update=Module["_crypto_hash_sha512_update"]=asm["_crypto_hash_sha512_update"];var _crypto_onetimeauth_poly1305_verify=Module["_crypto_onetimeauth_poly1305_verify"]=asm["_crypto_onetimeauth_poly1305_verify"];var _crypto_box_beforenm=Module["_crypto_box_beforenm"]=asm["_crypto_box_beforenm"];var _crypto_generichash_blake2b_init=Module["_crypto_generichash_blake2b_init"]=asm["_crypto_generichash_blake2b_init"];var _crypto_aead_chacha20poly1305_ietf_decrypt=Module["_crypto_aead_chacha20poly1305_ietf_decrypt"]=asm["_crypto_aead_chacha20poly1305_ietf_decrypt"];var _crypto_stream_chacha20_ietf_xor=Module["_crypto_stream_chacha20_ietf_xor"]=asm["_crypto_stream_chacha20_ietf_xor"];var _crypto_pwhash_primitive=Module["_crypto_pwhash_primitive"]=asm["_crypto_pwhash_primitive"];var _crypto_scalarmult=Module["_crypto_scalarmult"]=asm["_crypto_scalarmult"];var _crypto_onetimeauth_keybytes=Module["_crypto_onetimeauth_keybytes"]=asm["_crypto_onetimeauth_keybytes"];var _crypto_pwhash_argon2i=Module["_crypto_pwhash_argon2i"]=asm["_crypto_pwhash_argon2i"];var _crypto_auth_hmacsha512256_verify=Module["_crypto_auth_hmacsha512256_verify"]=asm["_crypto_auth_hmacsha512256_verify"];var _crypto_auth_hmacsha256_final=Module["_crypto_auth_hmacsha256_final"]=asm["_crypto_auth_hmacsha256_final"];var _crypto_box_secretkeybytes=Module["_crypto_box_secretkeybytes"]=asm["_crypto_box_secretkeybytes"];var _crypto_verify_16=Module["_crypto_verify_16"]=asm["_crypto_verify_16"];var _crypto_aead_chacha20poly1305_ietf_npubbytes=Module["_crypto_aead_chacha20poly1305_ietf_npubbytes"]=asm["_crypto_aead_chacha20poly1305_ietf_npubbytes"];var _crypto_onetimeauth_update=Module["_crypto_onetimeauth_update"]=asm["_crypto_onetimeauth_update"];var _crypto_aead_chacha20poly1305_encrypt=Module["_crypto_aead_chacha20poly1305_encrypt"]=asm["_crypto_aead_chacha20poly1305_encrypt"];var _crypto_secretbox_zerobytes=Module["_crypto_secretbox_zerobytes"]=asm["_crypto_secretbox_zerobytes"];var _crypto_core_salsa20=Module["_crypto_core_salsa20"]=asm["_crypto_core_salsa20"];var _crypto_box_curve25519xsalsa20poly1305_beforenmbytes=Module["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_beforenmbytes"];var _crypto_pwhash_scryptsalsa208sha256_ll=Module["_crypto_pwhash_scryptsalsa208sha256_ll"]=asm["_crypto_pwhash_scryptsalsa208sha256_ll"];var _crypto_box_detached=Module["_crypto_box_detached"]=asm["_crypto_box_detached"];var _randombytes_buf=Module["_randombytes_buf"]=asm["_randombytes_buf"];var _crypto_box_open_detached_afternm=Module["_crypto_box_open_detached_afternm"]=asm["_crypto_box_open_detached_afternm"];var _crypto_sign_seedbytes=Module["_crypto_sign_seedbytes"]=asm["_crypto_sign_seedbytes"];var _crypto_pwhash_scryptsalsa208sha256_strbytes=Module["_crypto_pwhash_scryptsalsa208sha256_strbytes"]=asm["_crypto_pwhash_scryptsalsa208sha256_strbytes"];var _crypto_generichash_blake2b_saltbytes=Module["_crypto_generichash_blake2b_saltbytes"]=asm["_crypto_generichash_blake2b_saltbytes"];var _bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"];var _fflush=Module["_fflush"]=asm["_fflush"];var _crypto_box_open_detached=Module["_crypto_box_open_detached"]=asm["_crypto_box_open_detached"];var _crypto_scalarmult_bytes=Module["_crypto_scalarmult_bytes"]=asm["_crypto_scalarmult_bytes"];var _crypto_secretbox_xsalsa20poly1305=Module["_crypto_secretbox_xsalsa20poly1305"]=asm["_crypto_secretbox_xsalsa20poly1305"];var _crypto_auth_verify=Module["_crypto_auth_verify"]=asm["_crypto_auth_verify"];var _crypto_sign_ed25519_seed_keypair=Module["_crypto_sign_ed25519_seed_keypair"]=asm["_crypto_sign_ed25519_seed_keypair"];var _crypto_secretbox_xsalsa20poly1305_zerobytes=Module["_crypto_secretbox_xsalsa20poly1305_zerobytes"]=asm["_crypto_secretbox_xsalsa20poly1305_zerobytes"];var _crypto_onetimeauth_poly1305_update=Module["_crypto_onetimeauth_poly1305_update"]=asm["_crypto_onetimeauth_poly1305_update"];var _crypto_auth_hmacsha512256_init=Module["_crypto_auth_hmacsha512256_init"]=asm["_crypto_auth_hmacsha512256_init"];var _crypto_auth_hmacsha256=Module["_crypto_auth_hmacsha256"]=asm["_crypto_auth_hmacsha256"];var _crypto_pwhash_strbytes=Module["_crypto_pwhash_strbytes"]=asm["_crypto_pwhash_strbytes"];var _crypto_stream_xor=Module["_crypto_stream_xor"]=asm["_crypto_stream_xor"];var _crypto_stream_xsalsa20_xor_ic=Module["_crypto_stream_xsalsa20_xor_ic"]=asm["_crypto_stream_xsalsa20_xor_ic"];var _crypto_verify_64_bytes=Module["_crypto_verify_64_bytes"]=asm["_crypto_verify_64_bytes"];var _randombytes_stir=Module["_randombytes_stir"]=asm["_randombytes_stir"];var _crypto_secretbox_easy=Module["_crypto_secretbox_easy"]=asm["_crypto_secretbox_easy"];var _crypto_box_open_easy=Module["_crypto_box_open_easy"]=asm["_crypto_box_open_easy"];var _crypto_pwhash_argon2i_strprefix=Module["_crypto_pwhash_argon2i_strprefix"]=asm["_crypto_pwhash_argon2i_strprefix"];var _crypto_auth_hmacsha256_update=Module["_crypto_auth_hmacsha256_update"]=asm["_crypto_auth_hmacsha256_update"];var _crypto_pwhash_scryptsalsa208sha256_str=Module["_crypto_pwhash_scryptsalsa208sha256_str"]=asm["_crypto_pwhash_scryptsalsa208sha256_str"];var _memset=Module["_memset"]=asm["_memset"];var _crypto_stream_salsa20=Module["_crypto_stream_salsa20"]=asm["_crypto_stream_salsa20"];var _crypto_pwhash_argon2i_str=Module["_crypto_pwhash_argon2i_str"]=asm["_crypto_pwhash_argon2i_str"];var _crypto_hash=Module["_crypto_hash"]=asm["_crypto_hash"];var _crypto_pwhash_argon2i_memlimit_sensitive=Module["_crypto_pwhash_argon2i_memlimit_sensitive"]=asm["_crypto_pwhash_argon2i_memlimit_sensitive"];var _crypto_pwhash_argon2i_opslimit_sensitive=Module["_crypto_pwhash_argon2i_opslimit_sensitive"]=asm["_crypto_pwhash_argon2i_opslimit_sensitive"];var _crypto_box_sealbytes=Module["_crypto_box_sealbytes"]=asm["_crypto_box_sealbytes"];var _crypto_auth_hmacsha512_final=Module["_crypto_auth_hmacsha512_final"]=asm["_crypto_auth_hmacsha512_final"];var _crypto_auth_hmacsha512_statebytes=Module["_crypto_auth_hmacsha512_statebytes"]=asm["_crypto_auth_hmacsha512_statebytes"];var _crypto_secretbox_boxzerobytes=Module["_crypto_secretbox_boxzerobytes"]=asm["_crypto_secretbox_boxzerobytes"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _crypto_pwhash_alg_default=Module["_crypto_pwhash_alg_default"]=asm["_crypto_pwhash_alg_default"];var _crypto_pwhash_scryptsalsa208sha256_strprefix=Module["_crypto_pwhash_scryptsalsa208sha256_strprefix"]=asm["_crypto_pwhash_scryptsalsa208sha256_strprefix"];var _crypto_onetimeauth_primitive=Module["_crypto_onetimeauth_primitive"]=asm["_crypto_onetimeauth_primitive"];var _crypto_box_seedbytes=Module["_crypto_box_seedbytes"]=asm["_crypto_box_seedbytes"];var _crypto_stream_chacha20=Module["_crypto_stream_chacha20"]=asm["_crypto_stream_chacha20"];var _crypto_core_hsalsa20_constbytes=Module["_crypto_core_hsalsa20_constbytes"]=asm["_crypto_core_hsalsa20_constbytes"];var _crypto_generichash_bytes=Module["_crypto_generichash_bytes"]=asm["_crypto_generichash_bytes"];var _crypto_secretbox=Module["_crypto_secretbox"]=asm["_crypto_secretbox"];var _crypto_generichash_blake2b_statebytes=Module["_crypto_generichash_blake2b_statebytes"]=asm["_crypto_generichash_blake2b_statebytes"];var _crypto_box_open_afternm=Module["_crypto_box_open_afternm"]=asm["_crypto_box_open_afternm"];var _crypto_generichash_blake2b_bytes_min=Module["_crypto_generichash_blake2b_bytes_min"]=asm["_crypto_generichash_blake2b_bytes_min"];var _crypto_pwhash_opslimit_moderate=Module["_crypto_pwhash_opslimit_moderate"]=asm["_crypto_pwhash_opslimit_moderate"];var _crypto_secretbox_open=Module["_crypto_secretbox_open"]=asm["_crypto_secretbox_open"];var _crypto_auth_hmacsha512_bytes=Module["_crypto_auth_hmacsha512_bytes"]=asm["_crypto_auth_hmacsha512_bytes"];var _crypto_core_salsa20_inputbytes=Module["_crypto_core_salsa20_inputbytes"]=asm["_crypto_core_salsa20_inputbytes"];var _crypto_box_macbytes=Module["_crypto_box_macbytes"]=asm["_crypto_box_macbytes"];var _crypto_secretbox_macbytes=Module["_crypto_secretbox_macbytes"]=asm["_crypto_secretbox_macbytes"];var _crypto_shorthash_bytes=Module["_crypto_shorthash_bytes"]=asm["_crypto_shorthash_bytes"];var _crypto_box_publickeybytes=Module["_crypto_box_publickeybytes"]=asm["_crypto_box_publickeybytes"];var _crypto_generichash_primitive=Module["_crypto_generichash_primitive"]=asm["_crypto_generichash_primitive"];var _crypto_sign_secretkeybytes=Module["_crypto_sign_secretkeybytes"]=asm["_crypto_sign_secretkeybytes"];var _crypto_pwhash_argon2i_strbytes=Module["_crypto_pwhash_argon2i_strbytes"]=asm["_crypto_pwhash_argon2i_strbytes"];var _crypto_hash_sha512_statebytes=Module["_crypto_hash_sha512_statebytes"]=asm["_crypto_hash_sha512_statebytes"];var _crypto_scalarmult_scalarbytes=Module["_crypto_scalarmult_scalarbytes"]=asm["_crypto_scalarmult_scalarbytes"];var _crypto_verify_32=Module["_crypto_verify_32"]=asm["_crypto_verify_32"];var _crypto_auth_hmacsha256_bytes=Module["_crypto_auth_hmacsha256_bytes"]=asm["_crypto_auth_hmacsha256_bytes"];var _crypto_auth_hmacsha256_statebytes=Module["_crypto_auth_hmacsha256_statebytes"]=asm["_crypto_auth_hmacsha256_statebytes"];var _crypto_pwhash_argon2i_opslimit_interactive=Module["_crypto_pwhash_argon2i_opslimit_interactive"]=asm["_crypto_pwhash_argon2i_opslimit_interactive"];var _crypto_aead_chacha20poly1305_decrypt=Module["_crypto_aead_chacha20poly1305_decrypt"]=asm["_crypto_aead_chacha20poly1305_decrypt"];var _crypto_stream_salsa20_noncebytes=Module["_crypto_stream_salsa20_noncebytes"]=asm["_crypto_stream_salsa20_noncebytes"];var _crypto_shorthash_keybytes=Module["_crypto_shorthash_keybytes"]=asm["_crypto_shorthash_keybytes"];var _malloc=Module["_malloc"]=asm["_malloc"];var _crypto_stream_noncebytes=Module["_crypto_stream_noncebytes"]=asm["_crypto_stream_noncebytes"];var _crypto_generichash_keybytes_max=Module["_crypto_generichash_keybytes_max"]=asm["_crypto_generichash_keybytes_max"];var _sodium_version_string=Module["_sodium_version_string"]=asm["_sodium_version_string"];var _memmove=Module["_memmove"]=asm["_memmove"];var _crypto_aead_chacha20poly1305_ietf_decrypt_detached=Module["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"]=asm["_crypto_aead_chacha20poly1305_ietf_decrypt_detached"];var _crypto_hash_sha512_final=Module["_crypto_hash_sha512_final"]=asm["_crypto_hash_sha512_final"];var _crypto_pwhash_memlimit_interactive=Module["_crypto_pwhash_memlimit_interactive"]=asm["_crypto_pwhash_memlimit_interactive"];var _crypto_secretbox_xsalsa20poly1305_keybytes=Module["_crypto_secretbox_xsalsa20poly1305_keybytes"]=asm["_crypto_secretbox_xsalsa20poly1305_keybytes"];var _crypto_aead_chacha20poly1305_decrypt_detached=Module["_crypto_aead_chacha20poly1305_decrypt_detached"]=asm["_crypto_aead_chacha20poly1305_decrypt_detached"];var _crypto_sign=Module["_crypto_sign"]=asm["_crypto_sign"];var _crypto_box_curve25519xsalsa20poly1305_zerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_zerobytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_zerobytes"];var _crypto_secretbox_noncebytes=Module["_crypto_secretbox_noncebytes"]=asm["_crypto_secretbox_noncebytes"];var _crypto_box_keypair=Module["_crypto_box_keypair"]=asm["_crypto_box_keypair"];var _crypto_secretbox_xsalsa20poly1305_macbytes=Module["_crypto_secretbox_xsalsa20poly1305_macbytes"]=asm["_crypto_secretbox_xsalsa20poly1305_macbytes"];var _crypto_box_curve25519xsalsa20poly1305_boxzerobytes=Module["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_boxzerobytes"];var _crypto_hash_sha256_bytes=Module["_crypto_hash_sha256_bytes"]=asm["_crypto_hash_sha256_bytes"];var _crypto_generichash_keybytes=Module["_crypto_generichash_keybytes"]=asm["_crypto_generichash_keybytes"];var _crypto_hash_bytes=Module["_crypto_hash_bytes"]=asm["_crypto_hash_bytes"];var _sodium_hex2bin=Module["_sodium_hex2bin"]=asm["_sodium_hex2bin"];var _sodium_init=Module["_sodium_init"]=asm["_sodium_init"];var _crypto_box_curve25519xsalsa20poly1305_afternm=Module["_crypto_box_curve25519xsalsa20poly1305_afternm"]=asm["_crypto_box_curve25519xsalsa20poly1305_afternm"];var _crypto_auth_hmacsha256_keybytes=Module["_crypto_auth_hmacsha256_keybytes"]=asm["_crypto_auth_hmacsha256_keybytes"];var _crypto_secretbox_keybytes=Module["_crypto_secretbox_keybytes"]=asm["_crypto_secretbox_keybytes"];var _crypto_box_easy=Module["_crypto_box_easy"]=asm["_crypto_box_easy"];var _randombytes=Module["_randombytes"]=asm["_randombytes"];var _crypto_sign_publickeybytes=Module["_crypto_sign_publickeybytes"]=asm["_crypto_sign_publickeybytes"];var _randombytes_close=Module["_randombytes_close"]=asm["_randombytes_close"];var _crypto_pwhash_argon2i_memlimit_moderate=Module["_crypto_pwhash_argon2i_memlimit_moderate"]=asm["_crypto_pwhash_argon2i_memlimit_moderate"];var _crypto_generichash_blake2b_bytes_max=Module["_crypto_generichash_blake2b_bytes_max"]=asm["_crypto_generichash_blake2b_bytes_max"];var _crypto_generichash_blake2b=Module["_crypto_generichash_blake2b"]=asm["_crypto_generichash_blake2b"];var _crypto_stream_chacha20_noncebytes=Module["_crypto_stream_chacha20_noncebytes"]=asm["_crypto_stream_chacha20_noncebytes"];var _crypto_hash_sha256_statebytes=Module["_crypto_hash_sha256_statebytes"]=asm["_crypto_hash_sha256_statebytes"];var _crypto_secretbox_open_detached=Module["_crypto_secretbox_open_detached"]=asm["_crypto_secretbox_open_detached"];var _crypto_sign_ed25519_sk_to_seed=Module["_crypto_sign_ed25519_sk_to_seed"]=asm["_crypto_sign_ed25519_sk_to_seed"];var _crypto_core_salsa20_outputbytes=Module["_crypto_core_salsa20_outputbytes"]=asm["_crypto_core_salsa20_outputbytes"];var _crypto_sign_ed25519_secretkeybytes=Module["_crypto_sign_ed25519_secretkeybytes"]=asm["_crypto_sign_ed25519_secretkeybytes"];var _crypto_pwhash_opslimit_sensitive=Module["_crypto_pwhash_opslimit_sensitive"]=asm["_crypto_pwhash_opslimit_sensitive"];var _crypto_generichash_blake2b_personalbytes=Module["_crypto_generichash_blake2b_personalbytes"]=asm["_crypto_generichash_blake2b_personalbytes"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _crypto_box_curve25519xsalsa20poly1305_open=Module["_crypto_box_curve25519xsalsa20poly1305_open"]=asm["_crypto_box_curve25519xsalsa20poly1305_open"];var _crypto_sign_verify_detached=Module["_crypto_sign_verify_detached"]=asm["_crypto_sign_verify_detached"];var _crypto_pwhash_argon2i_opslimit_moderate=Module["_crypto_pwhash_argon2i_opslimit_moderate"]=asm["_crypto_pwhash_argon2i_opslimit_moderate"];var _crypto_pwhash_alg_argon2i13=Module["_crypto_pwhash_alg_argon2i13"]=asm["_crypto_pwhash_alg_argon2i13"];var _randombytes_implementation_name=Module["_randombytes_implementation_name"]=asm["_randombytes_implementation_name"];var _crypto_box_curve25519xsalsa20poly1305=Module["_crypto_box_curve25519xsalsa20poly1305"]=asm["_crypto_box_curve25519xsalsa20poly1305"];var _crypto_stream=Module["_crypto_stream"]=asm["_crypto_stream"];var _crypto_sign_ed25519_detached=Module["_crypto_sign_ed25519_detached"]=asm["_crypto_sign_ed25519_detached"];var _crypto_generichash_init=Module["_crypto_generichash_init"]=asm["_crypto_generichash_init"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _crypto_sign_ed25519_sk_to_curve25519=Module["_crypto_sign_ed25519_sk_to_curve25519"]=asm["_crypto_sign_ed25519_sk_to_curve25519"];var _crypto_sign_bytes=Module["_crypto_sign_bytes"]=asm["_crypto_sign_bytes"];var _crypto_secretbox_primitive=Module["_crypto_secretbox_primitive"]=asm["_crypto_secretbox_primitive"];var _crypto_generichash_update=Module["_crypto_generichash_update"]=asm["_crypto_generichash_update"];var _crypto_generichash_blake2b_update=Module["_crypto_generichash_blake2b_update"]=asm["_crypto_generichash_blake2b_update"];var _crypto_verify_32_bytes=Module["_crypto_verify_32_bytes"]=asm["_crypto_verify_32_bytes"];var _crypto_aead_chacha20poly1305_ietf_abytes=Module["_crypto_aead_chacha20poly1305_ietf_abytes"]=asm["_crypto_aead_chacha20poly1305_ietf_abytes"];var _crypto_generichash_blake2b_keybytes=Module["_crypto_generichash_blake2b_keybytes"]=asm["_crypto_generichash_blake2b_keybytes"];var _crypto_generichash_bytes_min=Module["_crypto_generichash_bytes_min"]=asm["_crypto_generichash_bytes_min"];var _crypto_box_curve25519xsalsa20poly1305_secretkeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_secretkeybytes"];var _crypto_stream_xsalsa20_xor=Module["_crypto_stream_xsalsa20_xor"]=asm["_crypto_stream_xsalsa20_xor"];var _crypto_sign_detached=Module["_crypto_sign_detached"]=asm["_crypto_sign_detached"];var _crypto_hash_sha512=Module["_crypto_hash_sha512"]=asm["_crypto_hash_sha512"];var _crypto_generichash_bytes_max=Module["_crypto_generichash_bytes_max"]=asm["_crypto_generichash_bytes_max"];var _crypto_box_easy_afternm=Module["_crypto_box_easy_afternm"]=asm["_crypto_box_easy_afternm"];var _crypto_stream_chacha20_xor_ic=Module["_crypto_stream_chacha20_xor_ic"]=asm["_crypto_stream_chacha20_xor_ic"];var ___errno_location=Module["___errno_location"]=asm["___errno_location"];var _crypto_sign_ed25519_verify_detached=Module["_crypto_sign_ed25519_verify_detached"]=asm["_crypto_sign_ed25519_verify_detached"];var _crypto_sign_ed25519_bytes=Module["_crypto_sign_ed25519_bytes"]=asm["_crypto_sign_ed25519_bytes"];var _crypto_stream_xsalsa20_keybytes=Module["_crypto_stream_xsalsa20_keybytes"]=asm["_crypto_stream_xsalsa20_keybytes"];var _crypto_hash_sha256=Module["_crypto_hash_sha256"]=asm["_crypto_hash_sha256"];var _crypto_sign_ed25519_seedbytes=Module["_crypto_sign_ed25519_seedbytes"]=asm["_crypto_sign_ed25519_seedbytes"];var _sodium_library_version_minor=Module["_sodium_library_version_minor"]=asm["_sodium_library_version_minor"];var _crypto_core_hsalsa20_inputbytes=Module["_crypto_core_hsalsa20_inputbytes"]=asm["_crypto_core_hsalsa20_inputbytes"];var _crypto_onetimeauth_final=Module["_crypto_onetimeauth_final"]=asm["_crypto_onetimeauth_final"];var _crypto_secretbox_open_easy=Module["_crypto_secretbox_open_easy"]=asm["_crypto_secretbox_open_easy"];var _crypto_generichash_final=Module["_crypto_generichash_final"]=asm["_crypto_generichash_final"];var _crypto_generichash_blake2b_salt_personal=Module["_crypto_generichash_blake2b_salt_personal"]=asm["_crypto_generichash_blake2b_salt_personal"];var _crypto_pwhash_argon2i_alg_argon2i13=Module["_crypto_pwhash_argon2i_alg_argon2i13"]=asm["_crypto_pwhash_argon2i_alg_argon2i13"];var _crypto_shorthash_siphash24_bytes=Module["_crypto_shorthash_siphash24_bytes"]=asm["_crypto_shorthash_siphash24_bytes"];var _crypto_auth_hmacsha512256_statebytes=Module["_crypto_auth_hmacsha512256_statebytes"]=asm["_crypto_auth_hmacsha512256_statebytes"];var _crypto_sign_seed_keypair=Module["_crypto_sign_seed_keypair"]=asm["_crypto_sign_seed_keypair"];var _crypto_secretbox_xsalsa20poly1305_noncebytes=Module["_crypto_secretbox_xsalsa20poly1305_noncebytes"]=asm["_crypto_secretbox_xsalsa20poly1305_noncebytes"];var _crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Module["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"]=asm["_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive"];var _crypto_box_curve25519xsalsa20poly1305_beforenm=Module["_crypto_box_curve25519xsalsa20poly1305_beforenm"]=asm["_crypto_box_curve25519xsalsa20poly1305_beforenm"];var _crypto_pwhash_argon2i_memlimit_interactive=Module["_crypto_pwhash_argon2i_memlimit_interactive"]=asm["_crypto_pwhash_argon2i_memlimit_interactive"];var _crypto_hash_sha256_final=Module["_crypto_hash_sha256_final"]=asm["_crypto_hash_sha256_final"];var _crypto_stream_chacha20_xor=Module["_crypto_stream_chacha20_xor"]=asm["_crypto_stream_chacha20_xor"];var _crypto_stream_keybytes=Module["_crypto_stream_keybytes"]=asm["_crypto_stream_keybytes"];var _crypto_box_curve25519xsalsa20poly1305_publickeybytes=Module["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"]=asm["_crypto_box_curve25519xsalsa20poly1305_publickeybytes"];var _crypto_onetimeauth_init=Module["_crypto_onetimeauth_init"]=asm["_crypto_onetimeauth_init"];var _crypto_core_hsalsa20=Module["_crypto_core_hsalsa20"]=asm["_crypto_core_hsalsa20"];var _crypto_pwhash_memlimit_moderate=Module["_crypto_pwhash_memlimit_moderate"]=asm["_crypto_pwhash_memlimit_moderate"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.establishStackSpace=asm["establishStackSpace"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run()




var nacl = (function () {
    'use strict';
    var exports = {};

    //---------------------------------------------------------------------------
    // Horrifying UTF-8 and hex codecs

    function encode_utf8(s) {
	return encode_latin1(unescape(encodeURIComponent(s)));
    }

    function encode_latin1(s) {
	var result = new Uint8Array(s.length);
	for (var i = 0; i < s.length; i++) {
	    var c = s.charCodeAt(i);
	    if ((c & 0xff) !== c) throw {message: "Cannot encode string in Latin1", str: s};
	    result[i] = (c & 0xff);
	}
	return result;
    }

    function decode_utf8(bs) {
	return decodeURIComponent(escape(decode_latin1(bs)));
    }

    function decode_latin1(bs) {
	var encoded = [];
	for (var i = 0; i < bs.length; i++) {
	    encoded.push(String.fromCharCode(bs[i]));
	}
	return encoded.join('');
    }

    function to_hex(bs) {
	var encoded = [];
	for (var i = 0; i < bs.length; i++) {
	    encoded.push("0123456789abcdef"[(bs[i] >> 4) & 15]);
	    encoded.push("0123456789abcdef"[bs[i] & 15]);
	}
	return encoded.join('');
    }

    function from_hex(s) {
        var result = new Uint8Array(s.length / 2);
        for (var i = 0; i < s.length / 2; i++) {
            result[i] = parseInt(s.substr(2*i,2),16);
        }
        return result;
    }

    //---------------------------------------------------------------------------
    // Allocation

    function MALLOC(nbytes) {
	var result = nacl_raw._malloc(nbytes);
	if (result === 0) {
	    throw {message: "malloc() failed", nbytes: nbytes};
	}
	return result;
    }

    function FREE(pointer) {
	nacl_raw._free(pointer);
    }

    //---------------------------------------------------------------------------

    function injectBytes(bs, leftPadding) {
	var p = leftPadding || 0;
	var address = MALLOC(bs.length + p);
	nacl_raw.HEAPU8.set(bs, address + p);
	for (var i = address; i < address + p; i++) {
	    nacl_raw.HEAPU8[i] = 0;
	}
	return address;
    }

    function check_injectBytes(function_name, what, thing, expected_length, leftPadding) {
	check_length(function_name, what, thing, expected_length);
	return injectBytes(thing, leftPadding);
    }

    function extractBytes(address, length) {
	var result = new Uint8Array(length);
	result.set(nacl_raw.HEAPU8.subarray(address, address + length));
	return result;
    }

    //---------------------------------------------------------------------------

    function check(function_name, result) {
	if (result !== 0) {
	    throw {message: "nacl_raw." + function_name + " signalled an error"};
	}
    }

    function check_length(function_name, what, thing, expected_length) {
	if (thing.length !== expected_length) {
	    throw {message: "nacl." + function_name + " expected " +
	           expected_length + "-byte " + what + " but got length " + thing.length};
	}
    }

    function Target(length) {
	this.length = length;
	this.address = MALLOC(length);
    }

    Target.prototype.extractBytes = function (offset) {
	var result = extractBytes(this.address + (offset || 0), this.length - (offset || 0));
	FREE(this.address);
	this.address = null;
	return result;
    };

    function free_all(addresses) {
	for (var i = 0; i < addresses.length; i++) {
	    FREE(addresses[i]);
	}
    }

    //---------------------------------------------------------------------------
    // Randomness

    function random_bytes(count) {
      var bs = new Target(count);
      nacl_raw._randombytes_buf(bs.address, count);
      return bs.extractBytes();
    }

    nacl_raw._randombytes_stir();

    //---------------------------------------------------------------------------
    // Boxing

    function crypto_box_keypair() {
      var pk = new Target(nacl_raw._crypto_box_publickeybytes());
      var sk = new Target(nacl_raw._crypto_box_secretkeybytes());
      check("_crypto_box_keypair", nacl_raw._crypto_box_keypair(pk.address, sk.address));
      return {boxPk: pk.extractBytes(), boxSk: sk.extractBytes()};
    }

    function crypto_box_random_nonce() {
      return random_bytes(nacl_raw._crypto_box_noncebytes());
    }

    function crypto_box(msg, nonce, pk, sk) {
      var m = injectBytes(msg, nacl_raw._crypto_box_zerobytes());
      var na = check_injectBytes("crypto_box", "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var pka = check_injectBytes("crypto_box", "pk", pk, nacl_raw._crypto_box_publickeybytes());
      var ska = check_injectBytes("crypto_box", "sk", sk, nacl_raw._crypto_box_secretkeybytes());
      var c = new Target(msg.length + nacl_raw._crypto_box_zerobytes());
      check("_crypto_box", nacl_raw._crypto_box(c.address, m, c.length, 0, na, pka, ska));
      free_all([m, na, pka, ska]);
      return c.extractBytes(nacl_raw._crypto_box_boxzerobytes());
    }

    function crypto_box_open(ciphertext, nonce, pk, sk) {
      var c = injectBytes(ciphertext, nacl_raw._crypto_box_boxzerobytes());
      var na = check_injectBytes("crypto_box_open",
                                 "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var pka = check_injectBytes("crypto_box_open",
                                  "pk", pk, nacl_raw._crypto_box_publickeybytes());
      var ska = check_injectBytes("crypto_box_open",
                                  "sk", sk, nacl_raw._crypto_box_secretkeybytes());
      var m = new Target(ciphertext.length + nacl_raw._crypto_box_boxzerobytes());
      check("_crypto_box_open", nacl_raw._crypto_box_open(m.address, c, m.length, 0, na, pka, ska));
      free_all([c, na, pka, ska]);
      return m.extractBytes(nacl_raw._crypto_box_zerobytes());
    }

    function crypto_box_precompute(pk, sk) {
      var pka = check_injectBytes("crypto_box_precompute",
				  "pk", pk, nacl_raw._crypto_box_publickeybytes());
      var ska = check_injectBytes("crypto_box_precompute",
				  "sk", sk, nacl_raw._crypto_box_secretkeybytes());
      var k = new Target(nacl_raw._crypto_box_beforenmbytes());
      check("_crypto_box_beforenm",
	    nacl_raw._crypto_box_beforenm(k.address, pka, ska));
      free_all([pka, ska]);
      return {boxK: k.extractBytes()};
    }

    function crypto_box_precomputed(msg, nonce, state) {
      var m = injectBytes(msg, nacl_raw._crypto_box_zerobytes());
      var na = check_injectBytes("crypto_box_precomputed",
				 "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var ka = check_injectBytes("crypto_box_precomputed",
				 "boxK", state.boxK, nacl_raw._crypto_box_beforenmbytes());
      var c = new Target(msg.length + nacl_raw._crypto_box_zerobytes());
      check("_crypto_box_afternm",
	    nacl_raw._crypto_box_afternm(c.address, m, c.length, 0, na, ka));
      free_all([m, na, ka]);
      return c.extractBytes(nacl_raw._crypto_box_boxzerobytes());
    }

    function crypto_box_open_precomputed(ciphertext, nonce, state) {
      var c = injectBytes(ciphertext, nacl_raw._crypto_box_boxzerobytes());
      var na = check_injectBytes("crypto_box_open_precomputed",
				 "nonce", nonce, nacl_raw._crypto_box_noncebytes());
      var ka = check_injectBytes("crypto_box_open_precomputed",
				 "boxK", state.boxK, nacl_raw._crypto_box_beforenmbytes());
      var m = new Target(ciphertext.length + nacl_raw._crypto_box_boxzerobytes());
      check("_crypto_box_open_afternm",
	    nacl_raw._crypto_box_open_afternm(m.address, c, m.length, 0, na, ka));
      free_all([c, na, ka]);
      return m.extractBytes(nacl_raw._crypto_box_zerobytes());
    }

    //---------------------------------------------------------------------------
    // Hashing

    function crypto_hash(bs) {
      var address = injectBytes(bs);
      var hash = new Target(nacl_raw._crypto_hash_bytes());
      check("_crypto_hash", nacl_raw._crypto_hash(hash.address, address, bs.length, 0));
      FREE(address);
      return hash.extractBytes();
    }

    function crypto_hash_sha256(bs) {
      var address = injectBytes(bs);
      var hash = new Target(nacl_raw._crypto_hash_sha256_bytes());
      check("_crypto_hash_sha256",
	    nacl_raw._crypto_hash_sha256(hash.address, address, bs.length, 0));
      FREE(address);
      return hash.extractBytes();
    }

    function crypto_hash_string(s) {
      return crypto_hash(encode_utf8(s));
    }

    //---------------------------------------------------------------------------
    // Symmetric-key encryption

    function crypto_stream_random_nonce() {
      return random_bytes(nacl_raw._crypto_stream_noncebytes());
    }

    function crypto_stream(len, nonce, key) {
      var na = check_injectBytes("crypto_stream",
				 "nonce", nonce, nacl_raw._crypto_stream_noncebytes());
      var ka = check_injectBytes("crypto_stream",
				 "key", key, nacl_raw._crypto_stream_keybytes());
      var out = new Target(len);
      check("_crypto_stream", nacl_raw._crypto_stream(out.address, len, 0, na, ka));
      free_all([na, ka]);
      return out.extractBytes();
    }

    function crypto_stream_xor(msg, nonce, key) {
      var na = check_injectBytes("crypto_stream_xor",
				 "nonce", nonce, nacl_raw._crypto_stream_noncebytes());
      var ka = check_injectBytes("crypto_stream_xor",
				 "key", key, nacl_raw._crypto_stream_keybytes());
      var ma = injectBytes(msg);
      var out = new Target(msg.length);
      check("_crypto_stream_xor",
	    nacl_raw._crypto_stream_xor(out.address, ma, msg.length, 0, na, ka));
      free_all([na, ka, ma]);
      return out.extractBytes();
    }

    //---------------------------------------------------------------------------
    // One-time authentication

    function crypto_onetimeauth(msg, key) {
      var ka = check_injectBytes("crypto_onetimeauth",
				 "key", key, nacl_raw._crypto_onetimeauth_keybytes());
      var ma = injectBytes(msg);
      var authenticator = new Target(nacl_raw._crypto_onetimeauth_bytes());
      check("_crypto_onetimeauth",
	    nacl_raw._crypto_onetimeauth(authenticator.address, ma, msg.length, 0, ka));
      free_all([ka, ma]);
      return authenticator.extractBytes();
    }

    function crypto_onetimeauth_verify(authenticator, msg, key) {
      if (authenticator.length != nacl_raw._crypto_onetimeauth_bytes()) return false;
      var ka = check_injectBytes("crypto_onetimeauth_verify",
				 "key", key, nacl_raw._crypto_onetimeauth_keybytes());
      var ma = injectBytes(msg);
      var aa = injectBytes(authenticator);
      var result = nacl_raw._crypto_onetimeauth_verify(aa, ma, msg.length, 0, ka);
      free_all([ka, ma, aa]);
      return (result == 0);
    }

    //---------------------------------------------------------------------------
    // Authentication

    function crypto_auth(msg, key) {
      var ka = check_injectBytes("crypto_auth", "key", key, nacl_raw._crypto_auth_keybytes());
      var ma = injectBytes(msg);
      var authenticator = new Target(nacl_raw._crypto_auth_bytes());
      check("_crypto_auth", nacl_raw._crypto_auth(authenticator.address, ma, msg.length, 0, ka));
      free_all([ka, ma]);
      return authenticator.extractBytes();
    }

    function crypto_auth_verify(authenticator, msg, key) {
      if (authenticator.length != nacl_raw._crypto_auth_bytes()) return false;
      var ka = check_injectBytes("crypto_auth_verify",
				 "key", key, nacl_raw._crypto_auth_keybytes());
      var ma = injectBytes(msg);
      var aa = injectBytes(authenticator);
      var result = nacl_raw._crypto_auth_verify(aa, ma, msg.length, 0, ka);
      free_all([ka, ma, aa]);
      return (result == 0);
    }

    //---------------------------------------------------------------------------
    // Authenticated symmetric-key encryption

    function crypto_secretbox_random_nonce() {
      return random_bytes(nacl_raw._crypto_secretbox_noncebytes());
    }

    function crypto_secretbox(msg, nonce, key) {
      var m = injectBytes(msg, nacl_raw._crypto_secretbox_zerobytes());
      var na = check_injectBytes("crypto_secretbox",
				 "nonce", nonce, nacl_raw._crypto_secretbox_noncebytes());
      var ka = check_injectBytes("crypto_secretbox",
				 "key", key, nacl_raw._crypto_secretbox_keybytes());
      var c = new Target(msg.length + nacl_raw._crypto_secretbox_zerobytes());
      check("_crypto_secretbox", nacl_raw._crypto_secretbox(c.address, m, c.length, 0, na, ka));
      free_all([m, na, ka]);
      return c.extractBytes(nacl_raw._crypto_secretbox_boxzerobytes());
    }

    function crypto_secretbox_open(ciphertext, nonce, key) {
      var c = injectBytes(ciphertext, nacl_raw._crypto_secretbox_boxzerobytes());
      var na = check_injectBytes("crypto_secretbox_open",
				 "nonce", nonce, nacl_raw._crypto_secretbox_noncebytes());
      var ka = check_injectBytes("crypto_secretbox_open",
				 "key", key, nacl_raw._crypto_secretbox_keybytes());
      var m = new Target(ciphertext.length + nacl_raw._crypto_secretbox_boxzerobytes());
      check("_crypto_secretbox_open",
	    nacl_raw._crypto_secretbox_open(m.address, c, m.length, 0, na, ka));
      free_all([c, na, ka]);
      return m.extractBytes(nacl_raw._crypto_secretbox_zerobytes());
    }

    //---------------------------------------------------------------------------
    // Signing

    function crypto_sign_keypair() {
      var pk = new Target(nacl_raw._crypto_sign_publickeybytes());
      var sk = new Target(nacl_raw._crypto_sign_secretkeybytes());
      check("_crypto_sign_keypair", nacl_raw._crypto_sign_keypair(pk.address, sk.address));
      return {signPk: pk.extractBytes(), signSk: sk.extractBytes()};
    }

    function crypto_sign(msg, sk) {
      var ma = injectBytes(msg);
      var ska = check_injectBytes("crypto_sign", "sk", sk, nacl_raw._crypto_sign_secretkeybytes());
      var sm = new Target(msg.length + nacl_raw._crypto_sign_bytes());
      var smlen = new Target(8);
      check("_crypto_sign",
	    nacl_raw._crypto_sign(sm.address, smlen.address, ma, msg.length, 0, ska));
      free_all([ma, ska]);
      sm.length = nacl_raw.HEAPU32[smlen.address >> 2];
      FREE(smlen.address);
      return sm.extractBytes();
    }

    function crypto_sign_detached(msg, sk) {
      // WARNING: Experimental. Works for ed25519 but not necessarily other implementations.
      var signed_msg = crypto_sign(msg, sk);
      return signed_msg.subarray(0, nacl_raw._crypto_sign_bytes());
    }

    function crypto_sign_open(sm, pk) {
      var sma = injectBytes(sm);
      var pka = check_injectBytes("crypto_sign_open",
				  "pk", pk, nacl_raw._crypto_sign_publickeybytes());
      var m = new Target(sm.length);
      var mlen = new Target(8);
      if (nacl_raw._crypto_sign_open(m.address, mlen.address, sma, sm.length, 0, pka) === 0) {
	free_all([sma, pka]);
	m.length = nacl_raw.HEAPU32[mlen.address >> 2];
	FREE(mlen.address);
	return m.extractBytes();
      } else {
	free_all([sma, pka, m.address, mlen.address]);
	return null;
      }
    }

    function crypto_sign_verify_detached(detached_signature, msg, pk) {
      // WARNING: Experimental. Works for ed25519 but not necessarily other implementations.
      var signed_msg = new Uint8Array(detached_signature.length + msg.length);
      signed_msg.set(detached_signature, 0);
      signed_msg.set(msg, detached_signature.length);
      return crypto_sign_open(signed_msg, pk) !== null;
    }

    //---------------------------------------------------------------------------
    // Keys

    function crypto_sign_seed_keypair(bs) {
      var seeda = check_injectBytes("crypto_sign_seed_keypair",
				    "seed", bs, nacl_raw._crypto_sign_secretkeybytes() / 2);
      var pk = new Target(nacl_raw._crypto_sign_publickeybytes());
      var sk = new Target(nacl_raw._crypto_sign_secretkeybytes());
      check("_crypto_sign_seed_keypair",
	    nacl_raw._crypto_sign_seed_keypair(pk.address, sk.address, seeda));
      FREE(seeda);
      return {signPk: pk.extractBytes(), signSk: sk.extractBytes()};
    }

    function crypto_box_seed_keypair(bs) {
      var hash = new Uint8Array(crypto_hash(bs));
      return crypto_box_keypair_from_raw_sk(hash.subarray(0,
							  nacl_raw._crypto_box_secretkeybytes()));
    }

    function crypto_box_keypair_from_raw_sk(sk) {
      return {boxPk: crypto_scalarmult_base(sk), boxSk: sk};
    }

    //---------------------------------------------------------------------------
    // Scalarmult

    function crypto_scalarmult(n,p) {
      var na = check_injectBytes("crypto_scalarmult", "n", n,
				 nacl_raw._crypto_scalarmult_curve25519_scalarbytes());
      var pa = check_injectBytes("crypto_scalarmult", "p", p,
				 nacl_raw._crypto_scalarmult_curve25519_bytes());
      var q = new Target(nacl_raw._crypto_scalarmult_curve25519_bytes());
      check("_crypto_scalarmult_curve25519",
            nacl_raw._crypto_scalarmult_curve25519(q.address, na, pa));
      FREE(na);
      FREE(pa);
      return q.extractBytes();
    }

    function crypto_scalarmult_base(n) {
      var na = check_injectBytes("crypto_scalarmult_base", "n", n,
				 nacl_raw._crypto_scalarmult_curve25519_scalarbytes());
      var q = new Target(nacl_raw._crypto_scalarmult_curve25519_bytes());
      check("_crypto_scalarmult_curve25519_base",
            nacl_raw._crypto_scalarmult_curve25519_base(q.address, na));
      FREE(na);
      return q.extractBytes();
    }

    //---------------------------------------------------------------------------

    exports.crypto_auth_BYTES = nacl_raw._crypto_auth_bytes();
    exports.crypto_auth_KEYBYTES = nacl_raw._crypto_auth_keybytes();
    exports.crypto_box_BEFORENMBYTES = nacl_raw._crypto_box_beforenmbytes();
    exports.crypto_box_BOXZEROBYTES = nacl_raw._crypto_box_boxzerobytes();
    exports.crypto_box_NONCEBYTES = nacl_raw._crypto_box_noncebytes();
    exports.crypto_box_PUBLICKEYBYTES = nacl_raw._crypto_box_publickeybytes();
    exports.crypto_box_SECRETKEYBYTES = nacl_raw._crypto_box_secretkeybytes();
    exports.crypto_box_ZEROBYTES = nacl_raw._crypto_box_zerobytes();
    exports.crypto_hash_BYTES = nacl_raw._crypto_hash_bytes();
    exports.crypto_hash_sha256_BYTES = nacl_raw._crypto_hash_sha256_bytes();
    // exports.crypto_hashblocks_BLOCKBYTES = nacl_raw._crypto_hashblocks_blockbytes();
    // exports.crypto_hashblocks_STATEBYTES = nacl_raw._crypto_hashblocks_statebytes();
    exports.crypto_onetimeauth_BYTES = nacl_raw._crypto_onetimeauth_bytes();
    exports.crypto_onetimeauth_KEYBYTES = nacl_raw._crypto_onetimeauth_keybytes();
    exports.crypto_secretbox_BOXZEROBYTES = nacl_raw._crypto_secretbox_boxzerobytes();
    exports.crypto_secretbox_KEYBYTES = nacl_raw._crypto_secretbox_keybytes();
    exports.crypto_secretbox_NONCEBYTES = nacl_raw._crypto_secretbox_noncebytes();
    exports.crypto_secretbox_ZEROBYTES = nacl_raw._crypto_secretbox_zerobytes();
    exports.crypto_sign_BYTES = nacl_raw._crypto_sign_bytes();
    exports.crypto_sign_PUBLICKEYBYTES = nacl_raw._crypto_sign_publickeybytes();
    exports.crypto_sign_SECRETKEYBYTES = nacl_raw._crypto_sign_secretkeybytes();
    // exports.crypto_stream_BEFORENMBYTES = nacl_raw._crypto_stream_beforenmbytes();
    exports.crypto_stream_KEYBYTES = nacl_raw._crypto_stream_keybytes();
    exports.crypto_stream_NONCEBYTES = nacl_raw._crypto_stream_noncebytes();
    exports.crypto_scalarmult_SCALARBYTES = nacl_raw._crypto_scalarmult_curve25519_scalarbytes();
    exports.crypto_scalarmult_BYTES = nacl_raw._crypto_scalarmult_curve25519_bytes();

    exports.encode_utf8 = encode_utf8;
    exports.encode_latin1 = encode_latin1;
    exports.decode_utf8 = decode_utf8;
    exports.decode_latin1 = decode_latin1;
    exports.to_hex = to_hex;
    exports.from_hex = from_hex;

    exports.random_bytes = random_bytes;

    exports.crypto_box_keypair = crypto_box_keypair;
    exports.crypto_box_random_nonce = crypto_box_random_nonce;
    exports.crypto_box = crypto_box;
    exports.crypto_box_open = crypto_box_open;
    exports.crypto_box_precompute = crypto_box_precompute;
    exports.crypto_box_precomputed = crypto_box_precomputed;
    exports.crypto_box_open_precomputed = crypto_box_open_precomputed;

    exports.crypto_stream_random_nonce = crypto_stream_random_nonce;
    exports.crypto_stream = crypto_stream;
    exports.crypto_stream_xor = crypto_stream_xor;

    exports.crypto_onetimeauth = crypto_onetimeauth;
    exports.crypto_onetimeauth_verify = crypto_onetimeauth_verify;

    exports.crypto_auth = crypto_auth;
    exports.crypto_auth_verify = crypto_auth_verify;

    exports.crypto_secretbox_random_nonce = crypto_secretbox_random_nonce;
    exports.crypto_secretbox = crypto_secretbox;
    exports.crypto_secretbox_open = crypto_secretbox_open;

    exports.crypto_sign_keypair = crypto_sign_keypair;
    exports.crypto_sign = crypto_sign;
    exports.crypto_sign_detached = crypto_sign_detached;
    exports.crypto_sign_open = crypto_sign_open;
    exports.crypto_sign_verify_detached = crypto_sign_verify_detached;

    exports.crypto_hash = crypto_hash;
    exports.crypto_hash_sha256 = crypto_hash_sha256;
    exports.crypto_hash_string = crypto_hash_string;

    exports.crypto_sign_seed_keypair = crypto_sign_seed_keypair;
    exports.crypto_box_seed_keypair = crypto_box_seed_keypair;
    exports.crypto_box_keypair_from_raw_sk = crypto_box_keypair_from_raw_sk;
    // Backwards-compatibility:
    exports.crypto_sign_keypair_from_seed = crypto_sign_seed_keypair;
    exports.crypto_box_keypair_from_seed = crypto_box_seed_keypair;

    exports.crypto_scalarmult = crypto_scalarmult;
    exports.crypto_scalarmult_base = crypto_scalarmult_base;

    return exports;
})();
      nacl.nacl_raw = nacl_raw;

      if (on_ready_call_needed) {
        on_ready(nacl);
      }

      return "nacl_factory API has changed -- see js-nacl README";
    })((typeof window !== 'undefined') ? window : undefined_reference_value,
       (typeof document !== 'undefined') ? document : undefined_reference_value);
  }
};

// export common.js module to allow one js file for browser and node.js
if (typeof module !== 'undefined' && module.exports) {
    module.exports = nacl_factory;
}

}).call(this,require('_process'),"/node_modules/js-nacl/lib")
},{"_process":327,"crypto":244,"fs":124,"path":306}],294:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var makeError = require('make-error');
function makeErrorCause(value, _super) {
    if (_super === void 0) { _super = makeErrorCause.BaseError; }
    return makeError(value, _super);
}
var makeErrorCause;
(function (makeErrorCause) {
    var BaseError = (function (_super) {
        __extends(BaseError, _super);
        function BaseError(message, cause) {
            _super.call(this, message);
            this.cause = cause;
        }
        BaseError.prototype.toString = function () {
            return _super.prototype.toString.call(this) + (this.cause ? "\nCaused by: " + this.cause.toString() : '');
        };
        return BaseError;
    }(makeError.BaseError));
    makeErrorCause.BaseError = BaseError;
})(makeErrorCause || (makeErrorCause = {}));
module.exports = makeErrorCause;

},{"make-error":295}],295:[function(require,module,exports){
// ISC @ Julien Fontanet

'use strict'

// ===================================================================

var construct = typeof Reflect !== 'undefined' ? Reflect.construct : undefined
var defineProperty = Object.defineProperty

// -------------------------------------------------------------------

var captureStackTrace = Error.captureStackTrace
if (captureStackTrace === undefined) {
  captureStackTrace = function captureStackTrace (error) {
    var container = new Error()

    defineProperty(error, 'stack', {
      configurable: true,
      get: function getStack () {
        var stack = container.stack

        // Replace property with value for faster future accesses.
        defineProperty(this, 'stack', {
          configurable: true,
          value: stack,
          writable: true
        })

        return stack
      },
      set: function setStack (stack) {
        defineProperty(error, 'stack', {
          configurable: true,
          value: stack,
          writable: true
        })
      }
    })
  }
}

// -------------------------------------------------------------------

function BaseError (message) {
  if (message !== undefined) {
    defineProperty(this, 'message', {
      configurable: true,
      value: message,
      writable: true
    })
  }

  var cname = this.constructor.name
  if (
    cname !== undefined &&
    cname !== this.name
  ) {
    defineProperty(this, 'name', {
      configurable: true,
      value: cname,
      writable: true
    })
  }

  captureStackTrace(this, this.constructor)
}

BaseError.prototype = Object.create(Error.prototype, {
  // See: https://github.com/JsCommunity/make-error/issues/4
  constructor: {
    configurable: true,
    value: BaseError,
    writable: true
  }
})

// -------------------------------------------------------------------

// Sets the name of a function if possible (depends of the JS engine).
var setFunctionName = (function () {
  function setFunctionName (fn, name) {
    return defineProperty(fn, 'name', {
      configurable: true,
      value: name
    })
  }
  try {
    var f = function () {}
    setFunctionName(f, 'foo')
    if (f.name === 'foo') {
      return setFunctionName
    }
  } catch (_) {}
})()

// -------------------------------------------------------------------

function makeError (constructor, super_) {
  if (super_ == null || super_ === Error) {
    super_ = BaseError
  } else if (typeof super_ !== 'function') {
    throw new TypeError('super_ should be a function')
  }

  var name
  if (typeof constructor === 'string') {
    name = constructor
    constructor = construct !== undefined
      ? function () { return construct(super_, arguments, this.constructor) }
      : function () { super_.apply(this, arguments) }

    // If the name can be set, do it once and for all.
    if (setFunctionName !== undefined) {
      setFunctionName(constructor, name)
      name = undefined
    }
  } else if (typeof constructor !== 'function') {
    throw new TypeError('constructor should be either a string or a function')
  }

  // Also register the super constructor also as `constructor.super_` just
  // like Node's `util.inherits()`.
  constructor.super_ = constructor['super'] = super_

  var properties = {
    constructor: {
      configurable: true,
      value: constructor,
      writable: true
    }
  }

  // If the name could not be set on the constructor, set it on the
  // prototype.
  if (name !== undefined) {
    properties.name = {
      configurable: true,
      value: name,
      writable: true
    }
  }
  constructor.prototype = Object.create(super_.prototype, properties)

  return constructor
}
exports = module.exports = makeError
exports.BaseError = BaseError

},{}],296:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

}).call(this,require("buffer").Buffer)
},{"buffer":127,"hash-base":274,"inherits":290}],297:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":93,"brorand":94}],298:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],299:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],300:[function(require,module,exports){
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};

},{}],301:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],302:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":303,"asn1.js":49}],303:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":49}],304:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)
},{"browserify-aes":98,"buffer":127,"evp_bytestokey":273}],305:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":301,"./asn1":302,"./fixProc":304,"browserify-aes":98,"buffer":127,"pbkdf2":307}],306:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":327}],307:[function(require,module,exports){
exports.pbkdf2 = require('./lib/async')
exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":308,"./lib/sync":311}],308:[function(require,module,exports){
(function (process,global){
var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var Buffer = require('safe-buffer').Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(password, salt, iterations, keylen)
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":309,"./precondition":310,"./sync":311,"_process":327,"safe-buffer":354}],309:[function(require,module,exports){
(function (process){
var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

}).call(this,require('_process'))
},{"_process":327}],310:[function(require,module,exports){
(function (Buffer){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":291}],311:[function(require,module,exports){
var md5 = require('create-hash/md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var Buffer = require('safe-buffer').Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(password, salt, iterations, keylen)

  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":309,"./precondition":310,"create-hash/md5":241,"ripemd160":353,"safe-buffer":354,"sha.js":356}],312:[function(require,module,exports){
"use strict";
var url_1 = require("url");
var querystring_1 = require("querystring");
var support_1 = require("./support");
function lowerHeader(key) {
    var lower = key.toLowerCase();
    if (lower === 'referrer') {
        return 'referer';
    }
    return lower;
}
function type(str) {
    return str == null ? null : str.split(/ *; */, 1)[0];
}
function concat(a, b) {
    if (a == null) {
        return b;
    }
    return Array.isArray(a) ? a.concat(b) : [a, b];
}
var Base = (function () {
    function Base(_a) {
        var url = _a.url, headers = _a.headers, rawHeaders = _a.rawHeaders, query = _a.query;
        this.Url = {};
        this.rawHeaders = [];
        if (url != null) {
            this.url = url;
        }
        if (query != null) {
            this.query = Object.assign(this.query, typeof query === 'string' ? querystring_1.parse(query) : query);
        }
        if (rawHeaders) {
            if (rawHeaders.length % 2 === 1) {
                throw new TypeError("Expected raw headers length to be even, was " + rawHeaders.length);
            }
            this.rawHeaders = rawHeaders.slice(0);
        }
        else {
            this.headers = headers;
        }
    }
    Object.defineProperty(Base.prototype, "url", {
        get: function () {
            return url_1.format(this.Url);
        },
        set: function (url) {
            this.Url = url_1.parse(url, true, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Base.prototype, "query", {
        get: function () {
            return this.Url.query;
        },
        set: function (query) {
            this.Url.query = typeof query === 'string' ? querystring_1.parse(query) : query;
            this.Url.search = null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Base.prototype, "headers", {
        get: function () {
            var headers = {};
            for (var i = 0; i < this.rawHeaders.length; i += 2) {
                var key = lowerHeader(this.rawHeaders[i]);
                var value = concat(headers[key], this.rawHeaders[i + 1]);
                headers[key] = value;
            }
            return headers;
        },
        set: function (headers) {
            this.rawHeaders = [];
            if (headers) {
                for (var _i = 0, _a = Object.keys(headers); _i < _a.length; _i++) {
                    var key = _a[_i];
                    this.append(key, headers[key]);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Base.prototype.toHeaders = function () {
        var headers = {};
        for (var i = 0; i < this.rawHeaders.length; i += 2) {
            var key = this.rawHeaders[i];
            var value = concat(headers[key], this.rawHeaders[i + 1]);
            headers[key] = value;
        }
        return headers;
    };
    Base.prototype.set = function (name, value) {
        this.remove(name);
        this.append(name, value);
        return this;
    };
    Base.prototype.append = function (name, value) {
        if (Array.isArray(value)) {
            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
                var val = value_1[_i];
                if (val != null) {
                    this.rawHeaders.push(name, val);
                }
            }
        }
        else {
            if (value != null) {
                this.rawHeaders.push(name, value);
            }
        }
        return this;
    };
    Base.prototype.name = function (name) {
        var lowered = lowerHeader(name);
        for (var i = 0; i < this.rawHeaders.length; i += 2) {
            if (lowerHeader(this.rawHeaders[i]) === lowered) {
                return this.rawHeaders[i];
            }
        }
        return undefined;
    };
    Base.prototype.get = function (name) {
        var lowered = lowerHeader(name);
        for (var i = 0; i < this.rawHeaders.length; i += 2) {
            if (lowerHeader(this.rawHeaders[i]) === lowered) {
                return this.rawHeaders[i + 1];
            }
        }
        return undefined;
    };
    Base.prototype.getAll = function (name) {
        var lowered = lowerHeader(name);
        var result = [];
        for (var i = 0; i < this.rawHeaders.length; i += 2) {
            if (lowerHeader(this.rawHeaders[i]) === lowered) {
                result.push(this.rawHeaders[i + 1]);
            }
        }
        return result;
    };
    Base.prototype.remove = function (name) {
        var lowered = lowerHeader(name);
        for (var i = 0; i < this.rawHeaders.length; i += 2) {
            if (lowerHeader(this.rawHeaders[i]) === lowered) {
                support_1.splice(this.rawHeaders, i, 2);
            }
        }
        return this;
    };
    Base.prototype.type = function (value) {
        if (arguments.length === 0) {
            return type(this.get('Content-Type'));
        }
        return this.set('Content-Type', value);
    };
    return Base;
}());
exports.Base = Base;

},{"./support":325,"querystring":337,"url":367}],313:[function(require,module,exports){
"use strict";
var response_1 = require("./response");
var index_1 = require("./plugins/index");
function createTransport(options) {
    return {
        use: use,
        abort: abort,
        open: function (request) {
            return handle(request, options);
        }
    };
}
exports.createTransport = createTransport;
var use = [index_1.stringify(), index_1.headers()];
function handle(request, options) {
    return new Promise(function (resolve, reject) {
        var type = options.type || 'text';
        var url = request.url, method = request.method;
        if (window.location.protocol === 'https:' && /^http\:/.test(url)) {
            return reject(request.error("The request to \"" + url + "\" was blocked", 'EBLOCKED'));
        }
        var xhr = request._raw = new XMLHttpRequest();
        function done() {
            return new Promise(function (resolve) {
                return resolve(new response_1.Response({
                    status: xhr.status === 1223 ? 204 : xhr.status,
                    statusText: xhr.statusText,
                    rawHeaders: parseToRawHeaders(xhr.getAllResponseHeaders()),
                    body: type === 'text' ? xhr.responseText : xhr.response,
                    url: xhr.responseURL
                }));
            });
        }
        xhr.onload = function () { return resolve(done()); };
        xhr.onabort = function () { return resolve(done()); };
        xhr.onerror = function () {
            return reject(request.error("Unable to connect to \"" + request.url + "\"", 'EUNAVAILABLE'));
        };
        xhr.onprogress = function (e) {
            if (e.lengthComputable) {
                request.downloadLength = e.total;
            }
            request._setDownloadedBytes(e.loaded);
        };
        xhr.upload.onloadend = function () { return request.downloaded = 1; };
        if (method === 'GET' || method === 'HEAD' || !xhr.upload) {
            request.uploadLength = 0;
            request._setUploadedBytes(0, 1);
        }
        else {
            xhr.upload.onprogress = function (e) {
                if (e.lengthComputable) {
                    request.uploadLength = e.total;
                }
                request._setUploadedBytes(e.loaded);
            };
            xhr.upload.onloadend = function () { return request.uploaded = 1; };
        }
        try {
            xhr.open(method, url);
        }
        catch (e) {
            return reject(request.error("Refused to connect to \"" + url + "\"", 'ECSP', e));
        }
        if (options.withCredentials) {
            xhr.withCredentials = true;
        }
        if (options.overrideMimeType) {
            xhr.overrideMimeType(options.overrideMimeType);
        }
        if (type !== 'text') {
            try {
                xhr.responseType = type;
            }
            finally {
                if (xhr.responseType !== type) {
                    return reject(request.error("Unsupported type: " + type, 'ETYPE'));
                }
            }
        }
        for (var i = 0; i < request.rawHeaders.length; i += 2) {
            xhr.setRequestHeader(request.rawHeaders[i], request.rawHeaders[i + 1]);
        }
        xhr.send(request.body);
    });
}
function abort(request) {
    request._raw.abort();
}
function parseToRawHeaders(headers) {
    var rawHeaders = [];
    var lines = headers.split(/\r?\n/);
    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
        var line = lines_1[_i];
        if (line) {
            var indexOf = line.indexOf(':');
            var name_1 = line.substr(0, indexOf).trim();
            var value = line.substr(indexOf + 1).trim();
            rawHeaders.push(name_1, value);
        }
    }
    return rawHeaders;
}

},{"./plugins/index":320,"./response":324}],314:[function(require,module,exports){
"use strict";
module.exports = FormData;

},{}],315:[function(require,module,exports){
"use strict";
var CookieJar = (function () {
    function CookieJar() {
        throw new TypeError('Cookie jars are not available in browsers');
    }
    return CookieJar;
}());
exports.CookieJar = CookieJar;

},{}],316:[function(require,module,exports){
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var FormData = require("form-data");
exports.FormData = FormData;
var request_1 = require("./request");
var plugins = require("./plugins/index");
exports.plugins = plugins;
var form_1 = require("./form");
exports.form = form_1.default;
var jar_1 = require("./jar");
exports.jar = jar_1.default;
var error_1 = require("./error");
exports.PopsicleError = error_1.default;
var index_1 = require("./index");
exports.createTransport = index_1.createTransport;
function defaults(defaultsOptions) {
    var transport = index_1.createTransport({ type: 'text' });
    var defaults = Object.assign({}, { transport: transport }, defaultsOptions);
    return function popsicle(options) {
        var opts = Object.assign({}, defaults, typeof options === 'string' ? { url: options } : options);
        if (typeof opts.url !== 'string') {
            throw new TypeError('The URL must be a string');
        }
        return new request_1.Request(opts);
    };
}
exports.defaults = defaults;
exports.request = defaults({});
exports.get = defaults({ method: 'get' });
exports.post = defaults({ method: 'post' });
exports.put = defaults({ method: 'put' });
exports.patch = defaults({ method: 'patch' });
exports.del = defaults({ method: 'delete' });
exports.head = defaults({ method: 'head' });
__export(require("./base"));
__export(require("./request"));
__export(require("./response"));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = exports.request;

},{"./base":312,"./error":317,"./form":318,"./index":313,"./jar":319,"./plugins/index":320,"./request":323,"./response":324,"form-data":314}],317:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var makeErrorCause = require("make-error-cause");
var PopsicleError = (function (_super) {
    __extends(PopsicleError, _super);
    function PopsicleError(message, code, original, popsicle) {
        var _this = _super.call(this, message, original) || this;
        _this.name = 'PopsicleError';
        _this.code = code;
        _this.popsicle = popsicle;
        return _this;
    }
    return PopsicleError;
}(makeErrorCause.BaseError));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = PopsicleError;

},{"make-error-cause":294}],318:[function(require,module,exports){
"use strict";
var FormData = require("form-data");
function form(obj) {
    var form = new FormData();
    if (obj) {
        Object.keys(obj).forEach(function (name) {
            form.append(name, obj[name]);
        });
    }
    return form;
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = form;

},{"form-data":314}],319:[function(require,module,exports){
"use strict";
var tough_cookie_1 = require("tough-cookie");
function cookieJar(store) {
    return new tough_cookie_1.CookieJar(store);
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = cookieJar;

},{"tough-cookie":315}],320:[function(require,module,exports){
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(require("./common"));

},{"./common":321}],321:[function(require,module,exports){
"use strict";
var FormData = require("form-data");
var querystring_1 = require("querystring");
var index_1 = require("./is-host/index");
var form_1 = require("../form");
var JSON_MIME_REGEXP = /^application\/(?:[\w!#\$%&\*`\-\.\^~]*\+)?json$/i;
var URL_ENCODED_MIME_REGEXP = /^application\/x-www-form-urlencoded$/i;
var FORM_MIME_REGEXP = /^multipart\/form-data$/i;
var JSON_PROTECTION_PREFIX = /^\)\]\}',?\n/;
function wrap(value) {
    return function () { return value; };
}
exports.wrap = wrap;
exports.headers = wrap(function (request, next) {
    if (!request.get('Accept')) {
        request.set('Accept', '*/*');
    }
    request.remove('Host');
    return next();
});
exports.stringify = wrap(function (request, next) {
    var body = request.body;
    if (Object(body) !== body) {
        request.body = body == null ? null : String(body);
        return next();
    }
    if (index_1.default(body)) {
        return next();
    }
    var type = request.type();
    if (!type) {
        type = 'application/json';
        request.type(type);
    }
    try {
        if (JSON_MIME_REGEXP.test(type)) {
            request.body = JSON.stringify(body);
        }
        else if (FORM_MIME_REGEXP.test(type)) {
            request.body = form_1.default(body);
        }
        else if (URL_ENCODED_MIME_REGEXP.test(type)) {
            request.body = querystring_1.stringify(body);
        }
    }
    catch (err) {
        return Promise.reject(request.error('Unable to stringify request body: ' + err.message, 'ESTRINGIFY', err));
    }
    if (request.body instanceof FormData) {
        request.remove('Content-Type');
    }
    return next();
});
function parse(type, strict) {
    var types = Array.isArray(type) ? type : [type];
    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
        var type_1 = types_1[_i];
        if (type_1 !== 'json' && type_1 !== 'urlencoded') {
            throw new TypeError("Unexpected parse type: " + type_1);
        }
    }
    return function (request, next) {
        return next()
            .then(function (response) {
            var body = response.body;
            var responseType = response.type();
            if (body == null || body === '') {
                response.body = null;
                return response;
            }
            if (responseType == null) {
                throw request.error("Unable to parse empty response content type", 'EPARSE');
            }
            if (typeof body !== 'string') {
                throw request.error("Unable to parse non-string response body", 'EPARSE');
            }
            for (var _i = 0, types_2 = types; _i < types_2.length; _i++) {
                var type_2 = types_2[_i];
                if (type_2 === 'json' && JSON_MIME_REGEXP.test(responseType)) {
                    try {
                        response.body = JSON.parse(body.replace(JSON_PROTECTION_PREFIX, ''));
                    }
                    catch (err) {
                        throw request.error("Unable to parse response body: " + err.message, 'EPARSE', err);
                    }
                    return response;
                }
                if (type_2 === 'urlencoded' && URL_ENCODED_MIME_REGEXP.test(responseType)) {
                    response.body = querystring_1.parse(body);
                    return response;
                }
            }
            if (strict !== false) {
                throw request.error("Unhandled response type: " + responseType, 'EPARSE');
            }
            return response;
        });
    };
}
exports.parse = parse;

},{"../form":318,"./is-host/index":322,"form-data":314,"querystring":337}],322:[function(require,module,exports){
"use strict";
function isHostObject(object) {
    var str = Object.prototype.toString.call(object);
    switch (str) {
        case '[object File]':
        case '[object Blob]':
        case '[object FormData]':
        case '[object ArrayBuffer]':
            return true;
        default:
            return false;
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = isHostObject;

},{}],323:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var base_1 = require("./base");
var support_1 = require("./support");
var error_1 = require("./error");
var Request = (function (_super) {
    __extends(Request, _super);
    function Request(options) {
        var _this = _super.call(this, options) || this;
        _this.middleware = [];
        _this.opened = false;
        _this.aborted = false;
        _this.uploaded = 0;
        _this.downloaded = 0;
        _this.timeout = (options.timeout | 0);
        _this.method = (options.method || 'GET').toUpperCase();
        _this.body = options.body;
        _this.events = options.events || Object.create(null);
        _this.transport = Object.assign({}, options.transport);
        _this.use(options.use || _this.transport.use);
        _this._promise = Promise.resolve().then(function () { return exec(_this); });
        _this.once('abort', function () {
            if (_this.completed === 1) {
                return;
            }
            _this.aborted = true;
        });
        return _this;
    }
    Request.prototype.error = function (message, code, original) {
        return new error_1.default(message, code, original, this);
    };
    Request.prototype.then = function (onFulfilled, onRejected) {
        return this._promise.then(onFulfilled, onRejected);
    };
    Request.prototype.catch = function (onRejected) {
        return this._promise.then(null, onRejected);
    };
    Request.prototype.exec = function (cb) {
        this.then(function (res) { return cb(null, res); }, cb);
    };
    Request.prototype.toOptions = function () {
        return {
            url: this.url,
            method: this.method,
            body: this.body,
            transport: this.transport,
            timeout: this.timeout,
            rawHeaders: this.rawHeaders,
            use: this.middleware,
            events: this.events
        };
    };
    Request.prototype.toJSON = function () {
        return {
            url: this.url,
            method: this.method,
            headers: this.headers,
            body: this.body,
            timeout: this.timeout
        };
    };
    Request.prototype.clone = function () {
        return new Request(this.toOptions());
    };
    Request.prototype.use = function (fn) {
        if (Array.isArray(fn)) {
            (_a = this.middleware).push.apply(_a, fn);
        }
        else {
            this.middleware.push(fn);
        }
        return this;
        var _a;
    };
    Request.prototype.on = function (event, fn) {
        if (Object.prototype.hasOwnProperty.call(this.events, event)) {
            this.events[event].push(fn);
        }
        else {
            this.events[event] = [fn];
        }
        return this;
    };
    Request.prototype.off = function (event, fn) {
        if (Object.prototype.hasOwnProperty.call(this.events, event)) {
            var list = this.events[event];
            var index = -1;
            for (var i = 0; i < list.length; i++) {
                if (list[i] === fn || list[i].listener === fn) {
                    index = i;
                    break;
                }
            }
            if (index > -1) {
                if (list.length === 1) {
                    delete this.events[event];
                }
                else {
                    support_1.splice(this.events[event], index);
                }
            }
        }
        return this;
    };
    Request.prototype.once = function (event, fn) {
        return this.on(event, wrapOnce(this, event, fn));
    };
    Request.prototype.emit = function (event) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (!Object.prototype.hasOwnProperty.call(this.events, event)) {
            return this;
        }
        var listeners = this.events[event];
        if (listeners.length === 1) {
            args.length === 0 ? listeners[0].call(this) : listeners[0].apply(this, args);
        }
        else {
            for (var _a = 0, _b = listeners.slice(); _a < _b.length; _a++) {
                var listener = _b[_a];
                args.length === 0 ? listener.call(this) : listener.apply(this, args);
            }
        }
        return this;
    };
    Request.prototype.abort = function () {
        return this.emit('abort');
    };
    Request.prototype.handle = function () {
        var _this = this;
        this.opened = true;
        if (/^https?\:\/*(?:[~#\\\?;\:]|$)/.test(this.url)) {
            return Promise.reject(this.error("Refused to connect to invalid URL \"" + this.url + "\"", 'EINVALID'));
        }
        var timeout = this.timeout;
        var timer;
        var result = new Promise(function (resolve, reject) {
            if (timeout > 0) {
                timer = setTimeout(function () {
                    reject(_this.error("Timeout of " + timeout + "ms exceeded", 'ETIMEOUT'));
                    _this.abort();
                }, timeout);
            }
            _this.once('abort', function () {
                _this.emit('progress');
                reject(_this.error('Request aborted', 'EABORT'));
                if (_this.transport.abort) {
                    _this.transport.abort(_this);
                }
            });
            Promise.resolve(_this.transport.open(_this)).then(function (res) { return resolve(res); }, function (err) { return reject(err); });
        });
        if (timeout > 0) {
            result.then(function () { return clearTimeout(timer); }, function () { return clearTimeout(timer); });
        }
        return result;
    };
    Object.defineProperty(Request.prototype, "completed", {
        get: function () {
            return (this.uploaded + this.downloaded) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Request.prototype, "completedBytes", {
        get: function () {
            return this.uploadedBytes + this.downloadedBytes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Request.prototype, "totalBytes", {
        get: function () {
            return this.uploadLength + this.downloadLength;
        },
        enumerable: true,
        configurable: true
    });
    Request.prototype._setUploadedBytes = function (bytes, uploaded) {
        if (bytes !== this.uploadedBytes) {
            this.uploaded = uploaded || bytes / this.uploadLength;
            this.uploadedBytes = bytes;
            this.emit('progress');
        }
    };
    Request.prototype._setDownloadedBytes = function (bytes, downloaded) {
        if (bytes !== this.downloadedBytes) {
            this.downloaded = downloaded || bytes / this.downloadLength;
            this.downloadedBytes = bytes;
            this.emit('progress');
        }
    };
    return Request;
}(base_1.Base));
exports.Request = Request;
function wrapOnce(target, event, fn) {
    var fired = false;
    var g = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!fired) {
            fired = true;
            target.off(event, fn);
            args.length === 0 ? fn.call(target) : fn.apply(target, args);
        }
    };
    g.listener = fn;
    return g;
}
function exec(req) {
    var index = -1;
    function dispatch(pos) {
        if (pos <= index) {
            throw new TypeError('`next()` called multiple times');
        }
        if (req.aborted) {
            return Promise.reject(req.error('Request aborted', 'EABORT'));
        }
        index = pos;
        var fn = req.middleware[pos] || (function () { return req.handle(); });
        return new Promise(function (resolve) {
            return resolve(fn(req, function next() {
                return dispatch(pos + 1);
            }));
        });
    }
    return dispatch(0);
}

},{"./base":312,"./error":317,"./support":325}],324:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var base_1 = require("./base");
var Response = (function (_super) {
    __extends(Response, _super);
    function Response(options) {
        var _this = _super.call(this, options) || this;
        _this.body = options.body;
        _this.status = options.status;
        _this.statusText = options.statusText;
        return _this;
    }
    Response.prototype.statusType = function () {
        return ~~(this.status / 100);
    };
    Response.prototype.toJSON = function () {
        return {
            url: this.url,
            headers: this.headers,
            body: this.body,
            status: this.status,
            statusText: this.statusText
        };
    };
    return Response;
}(base_1.Base));
exports.Response = Response;

},{"./base":312}],325:[function(require,module,exports){
"use strict";
function splice(arr, start, count) {
    if (count === void 0) { count = 1; }
    for (var i = start; i < arr.length - count; i++) {
        arr[i] = arr[i + count];
    }
    arr.length -= count;
}
exports.splice = splice;

},{}],326:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


}).call(this,require('_process'))
},{"_process":327}],327:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],328:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":330,"./publicEncrypt":331}],329:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":127,"create-hash":240}],330:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":329,"./withPublic":332,"./xor":333,"bn.js":93,"browserify-rsa":117,"buffer":127,"create-hash":240,"parse-asn1":305}],331:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":329,"./withPublic":332,"./xor":333,"bn.js":93,"browserify-rsa":117,"buffer":127,"create-hash":240,"parse-asn1":305,"randombytes":338}],332:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)
},{"bn.js":93,"buffer":127}],333:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],334:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],335:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],336:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],337:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":335,"./encode":336}],338:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":327,"safe-buffer":354}],339:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":327,"randombytes":338,"safe-buffer":354}],340:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":341}],341:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};
},{"./_stream_readable":343,"./_stream_writable":345,"core-util-is":238,"inherits":290,"process-nextick-args":326}],342:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":344,"core-util-is":238,"inherits":290}],343:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":341,"./internal/streams/BufferList":346,"./internal/streams/destroy":347,"./internal/streams/stream":348,"_process":327,"core-util-is":238,"events":272,"inherits":290,"isarray":292,"process-nextick-args":326,"safe-buffer":354,"string_decoder/":364,"util":95}],344:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":341,"core-util-is":238,"inherits":290}],345:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":341,"./internal/streams/destroy":347,"./internal/streams/stream":348,"_process":327,"core-util-is":238,"inherits":290,"process-nextick-args":326,"safe-buffer":354,"util-deprecate":369}],346:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":354,"util":95}],347:[function(require,module,exports){
'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":326}],348:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":272}],349:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":350}],350:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":341,"./lib/_stream_passthrough.js":342,"./lib/_stream_readable.js":343,"./lib/_stream_transform.js":344,"./lib/_stream_writable.js":345}],351:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":350}],352:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":345}],353:[function(require,module,exports){
'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":127,"hash-base":274,"inherits":290}],354:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":127}],355:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":354}],356:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":357,"./sha1":358,"./sha224":359,"./sha256":360,"./sha384":361,"./sha512":362}],357:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":355,"inherits":290,"safe-buffer":354}],358:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":355,"inherits":290,"safe-buffer":354}],359:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":355,"./sha256":360,"inherits":290,"safe-buffer":354}],360:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":355,"inherits":290,"safe-buffer":354}],361:[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":355,"./sha512":362,"inherits":290,"safe-buffer":354}],362:[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":355,"inherits":290,"safe-buffer":354}],363:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":272,"inherits":290,"readable-stream/duplex.js":340,"readable-stream/passthrough.js":349,"readable-stream/readable.js":350,"readable-stream/transform.js":351,"readable-stream/writable.js":352}],364:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":354}],365:[function(require,module,exports){
(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = (x[j] + 128) >> 8;
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i, mlen;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  mlen = -1;
  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  mlen = n;
  return mlen;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  var t, i;
  for (i = 0; i < arguments.length; i++) {
     if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')
       throw new TypeError('unexpected type ' + t + ', use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

// TODO: Completely remove this in v0.15.
if (!nacl.util) {
  nacl.util = {};
  nacl.util.decodeUTF8 = nacl.util.encodeUTF8 = nacl.util.encodeBase64 = nacl.util.decodeBase64 = function() {
    throw new Error('nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js');
  };
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return false;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return false;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  if (arguments.length !== 2)
    throw new Error('nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?');
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (typeof require !== 'undefined') {
    // Node.js.
    crypto = require('crypto');
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));

},{"crypto":95}],366:[function(require,module,exports){
(function (root) {
   "use strict";

/***** unorm.js *****/

/*
 * UnicodeNormalizer 1.0.0
 * Copyright (c) 2008 Matsuza
 * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
 * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $
 * $Rev: 13309 $
 */

   var DEFAULT_FEATURE = [null, 0, {}];
   var CACHE_THRESHOLD = 10;
   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;
   var NCount = VCount * TCount; // 588
   var SCount = LCount * NCount; // 11172

   var UChar = function(cp, feature){
      this.codepoint = cp;
      this.feature = feature;
   };

   // Strategies
   var cache = {};
   var cacheCounter = [];
   for (var i = 0; i <= 0xFF; ++i){
      cacheCounter[i] = 0;
   }

   function fromCache(next, cp, needFeature){
      var ret = cache[cp];
      if(!ret){
         ret = next(cp, needFeature);
         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){
            cache[cp] = ret;
         }
      }
      return ret;
   }

   function fromData(next, cp, needFeature){
      var hash = cp & 0xFF00;
      var dunit = UChar.udata[hash] || {};
      var f = dunit[cp];
      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);
   }
   function fromCpOnly(next, cp, needFeature){
      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);
   }
   function fromRuleBasedJamo(next, cp, needFeature){
      var j;
      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){
         return next(cp, needFeature);
      }
      if(LBase <= cp && cp < LBase + LCount){
         var c = {};
         var base = (cp - LBase) * VCount;
         for (j = 0; j < VCount; ++j){
            c[VBase + j] = SBase + TCount * (j + base);
         }
         return new UChar(cp, [,,c]);
      }

      var SIndex = cp - SBase;
      var TIndex = SIndex % TCount;
      var feature = [];
      if(TIndex !== 0){
         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];
      } else {
         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];
         feature[2] = {};
         for (j = 1; j < TCount; ++j){
            feature[2][TBase + j] = cp + j;
         }
      }
      return new UChar(cp, feature);
   }
   function fromCpFilter(next, cp, needFeature){
      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);
   }

   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];

   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {
      return function (cp, needFeature) {
         return strategy(next, cp, needFeature);
      };
   }, null);

   UChar.isHighSurrogate = function(cp){
      return cp >= 0xD800 && cp <= 0xDBFF;
   };
   UChar.isLowSurrogate = function(cp){
      return cp >= 0xDC00 && cp <= 0xDFFF;
   };

   UChar.prototype.prepFeature = function(){
      if(!this.feature){
         this.feature = UChar.fromCharCode(this.codepoint, true).feature;
      }
   };

   UChar.prototype.toString = function(){
      if(this.codepoint < 0x10000){
         return String.fromCharCode(this.codepoint);
      } else {
         var x = this.codepoint - 0x10000;
         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);
      }
   };

   UChar.prototype.getDecomp = function(){
      this.prepFeature();
      return this.feature[0] || null;
   };

   UChar.prototype.isCompatibility = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 8));
   };
   UChar.prototype.isExclude = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 9));
   };
   UChar.prototype.getCanonicalClass = function(){
      this.prepFeature();
      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;
   };
   UChar.prototype.getComposite = function(following){
      this.prepFeature();
      if(!this.feature[2]){
         return null;
      }
      var cp = this.feature[2][following.codepoint];
      return cp ? UChar.fromCharCode(cp) : null;
   };

   var UCharIterator = function(str){
      this.str = str;
      this.cursor = 0;
   };
   UCharIterator.prototype.next = function(){
      if(!!this.str && this.cursor < this.str.length){
         var cp = this.str.charCodeAt(this.cursor++);
         var d;
         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){
            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;
            ++this.cursor;
         }
         return UChar.fromCharCode(cp);
      } else {
         this.str = null;
         return null;
      }
   };

   var RecursDecompIterator = function(it, cano){
      this.it = it;
      this.canonical = cano;
      this.resBuf = [];
   };

   RecursDecompIterator.prototype.next = function(){
      function recursiveDecomp(cano, uchar){
         var decomp = uchar.getDecomp();
         if(!!decomp && !(cano && uchar.isCompatibility())){
            var ret = [];
            for(var i = 0; i < decomp.length; ++i){
               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));
                ret = ret.concat(a);
            }
            return ret;
         } else {
            return [uchar];
         }
      }
      if(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            return null;
         }
         this.resBuf = recursiveDecomp(this.canonical, uchar);
      }
      return this.resBuf.shift();
   };

   var DecompIterator = function(it){
      this.it = it;
      this.resBuf = [];
   };

   DecompIterator.prototype.next = function(){
      var cc;
      if(this.resBuf.length === 0){
         do{
            var uchar = this.it.next();
            if(!uchar){
               break;
            }
            cc = uchar.getCanonicalClass();
            var inspt = this.resBuf.length;
            if(cc !== 0){
               for(; inspt > 0; --inspt){
                  var uchar2 = this.resBuf[inspt - 1];
                  var cc2 = uchar2.getCanonicalClass();
                  if(cc2 <= cc){
                     break;
                  }
               }
            }
            this.resBuf.splice(inspt, 0, uchar);
         } while(cc !== 0);
      }
      return this.resBuf.shift();
   };

   var CompIterator = function(it){
      this.it = it;
      this.procBuf = [];
      this.resBuf = [];
      this.lastClass = null;
   };

   CompIterator.prototype.next = function(){
      while(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            this.resBuf = this.procBuf;
            this.procBuf = [];
            break;
         }
         if(this.procBuf.length === 0){
            this.lastClass = uchar.getCanonicalClass();
            this.procBuf.push(uchar);
         } else {
            var starter = this.procBuf[0];
            var composite = starter.getComposite(uchar);
            var cc = uchar.getCanonicalClass();
            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){
               this.procBuf[0] = composite;
            } else {
               if(cc === 0){
                  this.resBuf = this.procBuf;
                  this.procBuf = [];
               }
               this.lastClass = cc;
               this.procBuf.push(uchar);
            }
         }
      }
      return this.resBuf.shift();
   };

   var createIterator = function(mode, str){
      switch(mode){
         case "NFD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));
         case "NFKD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));
         case "NFC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));
         case "NFKC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));
      }
      throw mode + " is invalid";
   };
   var normalize = function(mode, str){
      var it = createIterator(mode, str);
      var ret = "";
      var uchar;
      while(!!(uchar = it.next())){
         ret += uchar.toString();
      }
      return ret;
   };

   /* API functions */
   function nfd(str){
      return normalize("NFD", str);
   }

   function nfkd(str){
      return normalize("NFKD", str);
   }

   function nfc(str){
      return normalize("NFC", str);
   }

   function nfkc(str){
      return normalize("NFKC", str);
   }

/* Unicode data */
UChar.udata={
0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},
256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},
512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},
768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},
1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},
1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},
1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},
1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},
2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},
2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},
2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},
2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},
3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},
3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},
3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},
3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},
4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},
4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},
4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},
4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},
5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},
5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},
5632:{71231:[,9],71350:[,9],71351:[,7]},
5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},
6144:{6313:[,228]},
6400:{6457:[,222],6458:[,230],6459:[,220]},
6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},
6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},
7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},
7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},
7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},
7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},
8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},
8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},
8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},
8960:{9001:[[12296]],9002:[[12297]]},
9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},
10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},
11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},
11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},
11776:{11935:[[27597],256],12019:[[40863],256]},
12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},
12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},
12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},
12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},
13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},
27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},
27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},
42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},
42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},
43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},
43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},
43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},
43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},
48128:{113822:[,1]},
53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},
53760:{119362:[,230],119363:[,230],119364:[,230]},
54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},
54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},
54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},
55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},
59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},
60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},
61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},
61952:{},
63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},
63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},
64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},
64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},
64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},
64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},
65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},
65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}

};

   /***** Module to export */
   var unorm = {
      nfc: nfc,
      nfd: nfd,
      nfkc: nfkc,
      nfkd: nfkd
   };

   /*globals module:true,define:true*/

   // CommonJS
   if (typeof module === "object") {
      module.exports = unorm;

   // AMD
   } else if (typeof define === "function" && define.amd) {
      define("unorm", function () {
         return unorm;
      });

   // Global
   } else {
      root.unorm = unorm;
   }

   /***** Export as shim for String::normalize method *****/
   /*
      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21

      21.1.3.12 String.prototype.normalize(form="NFC")
      When the normalize method is called with one argument form, the following steps are taken:

      1. Let O be CheckObjectCoercible(this value).
      2. Let S be ToString(O).
      3. ReturnIfAbrupt(S).
      4. If form is not provided or undefined let form be "NFC".
      5. Let f be ToString(form).
      6. ReturnIfAbrupt(f).
      7. If f is not one of "NFC", "NFD", "NFKC", or "NFKD", then throw a RangeError Exception.
      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.
      9. Return ns.

      The length property of the normalize method is 0.

      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.
   */
    unorm.shimApplied = false;

   if (!String.prototype.normalize) {
      String.prototype.normalize = function(form) {
         var str = "" + this;
         form =  form === undefined ? "NFC" : form;

         if (form === "NFC") {
            return unorm.nfc(str);
         } else if (form === "NFD") {
            return unorm.nfd(str);
         } else if (form === "NFKC") {
            return unorm.nfkc(str);
         } else if (form === "NFKD") {
            return unorm.nfkd(str);
         } else {
            throw new RangeError("Invalid normalization form: " + form);
         }
      };

      unorm.shimApplied = true;
   }
}(this));

},{}],367:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":368,"punycode":334,"querystring":337}],368:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],369:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],370:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":289}]},{},[24])(24)
});
